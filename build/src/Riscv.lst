GAS LISTING /tmp/cc0omBtC.s 			page 1


   1              		.file	"Riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10initSystemEv
   9              	_ZN5Riscv10initSystemEv:
  10              	.LFB21:
  11              		.file 1 "src/Riscv.cpp"
   1:src/Riscv.cpp **** //
   2:src/Riscv.cpp **** // Created by os on 4/27/22.
   3:src/Riscv.cpp **** //
   4:src/Riscv.cpp **** 
   5:src/Riscv.cpp **** #include "../h/Riscv.h"
   6:src/Riscv.cpp **** #include "../h/MemoryAllocator.h"
   7:src/Riscv.cpp **** #include "../h/PCB.h"
   8:src/Riscv.cpp **** #include "../lib/console.h"
   9:src/Riscv.cpp **** #include "../h/syscall_cpp.h"
  10:src/Riscv.cpp **** 
  11:src/Riscv.cpp **** //todo
  12:src/Riscv.cpp **** //sta sve treba da se odradi ovde
  13:src/Riscv.cpp **** void Riscv::initSystem() {
  12              		.loc 1 13 26
  13              		.cfi_startproc
  14              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
  15              		.cfi_lsda 0x1b,.LLSDA21
  16 0000 130101FE 		addi	sp,sp,-32
  17              		.cfi_def_cfa_offset 32
  18 0004 233C1100 		sd	ra,24(sp)
  19 0008 23388100 		sd	s0,16(sp)
  20 000c 23349100 		sd	s1,8(sp)
  21 0010 23302101 		sd	s2,0(sp)
  22              		.cfi_offset 1, -8
  23              		.cfi_offset 8, -16
  24              		.cfi_offset 9, -24
  25              		.cfi_offset 18, -32
  26 0014 13040102 		addi	s0,sp,32
  27              		.cfi_def_cfa 8, 0
  14:src/Riscv.cpp ****     w_stvec((uint64)&Riscv::supervisorTrap);
  28              		.loc 1 14 5
  29              		.loc 1 14 12 is_stmt 0
  30 0018 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
  30      83B70700 
  31              	.LVL0:
  32              	.LBB74:
  33              	.LBB75:
  34              		.file 2 "src/../h/Riscv.h"
   1:src/../h/Riscv.h **** //
   2:src/../h/Riscv.h **** // Created by os on 4/27/22.
   3:src/../h/Riscv.h **** //
   4:src/../h/Riscv.h **** 
   5:src/../h/Riscv.h **** #ifndef PROJECT_BASE_V1_0_RISCV_H
   6:src/../h/Riscv.h **** #define PROJECT_BASE_V1_0_RISCV_H
   7:src/../h/Riscv.h **** 
   8:src/../h/Riscv.h **** #include "../lib/hw.h"
   9:src/../h/Riscv.h **** 
GAS LISTING /tmp/cc0omBtC.s 			page 2


  10:src/../h/Riscv.h **** class Riscv
  11:src/../h/Riscv.h **** {
  12:src/../h/Riscv.h **** private:
  13:src/../h/Riscv.h **** 
  14:src/../h/Riscv.h **** public:
  15:src/../h/Riscv.h ****     static void initSystem();
  16:src/../h/Riscv.h ****     static void endSystem();
  17:src/../h/Riscv.h **** 
  18:src/../h/Riscv.h ****     static void enableInterrupts();
  19:src/../h/Riscv.h **** 
  20:src/../h/Riscv.h ****     static void disableInterrupts();
  21:src/../h/Riscv.h **** 
  22:src/../h/Riscv.h ****     static void printString(char const *string);
  23:src/../h/Riscv.h **** 
  24:src/../h/Riscv.h ****     static void printInteger(uint64 num);
  25:src/../h/Riscv.h **** 
  26:src/../h/Riscv.h ****     static void pushRegisters();
  27:src/../h/Riscv.h ****     static void popRegisters();
  28:src/../h/Riscv.h **** 
  29:src/../h/Riscv.h ****     static uint64 r_scause();
  30:src/../h/Riscv.h ****     static void w_scause(uint64 scause);
  31:src/../h/Riscv.h **** 
  32:src/../h/Riscv.h ****     static uint64 r_sepc();
  33:src/../h/Riscv.h ****     static void w_sepc(uint64 sepc);
  34:src/../h/Riscv.h **** 
  35:src/../h/Riscv.h ****     static uint64 r_stvec();
  36:src/../h/Riscv.h ****     static void w_stvec(uint64 stvec);
  37:src/../h/Riscv.h **** 
  38:src/../h/Riscv.h ****     static uint64 r_stval();
  39:src/../h/Riscv.h ****     static void w_stval(uint64 stval);
  40:src/../h/Riscv.h **** 
  41:src/../h/Riscv.h ****     enum BitMaskSip
  42:src/../h/Riscv.h ****     {
  43:src/../h/Riscv.h ****         SIP_SSIP = (1 << 1),
  44:src/../h/Riscv.h ****         SIP_STIP = (1 << 5),
  45:src/../h/Riscv.h ****         SIP_SEIP = (1 << 9),
  46:src/../h/Riscv.h ****     };
  47:src/../h/Riscv.h **** 
  48:src/../h/Riscv.h ****     static void ms_sip(uint64 mask);
  49:src/../h/Riscv.h **** 
  50:src/../h/Riscv.h ****     static void mc_sip(uint64 mask);
  51:src/../h/Riscv.h **** 
  52:src/../h/Riscv.h ****     static uint64 r_sip();
  53:src/../h/Riscv.h **** 
  54:src/../h/Riscv.h ****     static void w_sip(uint64 sip);
  55:src/../h/Riscv.h **** 
  56:src/../h/Riscv.h ****     enum BitMaskSstatus
  57:src/../h/Riscv.h ****     {
  58:src/../h/Riscv.h ****         SSTATUS_SIE = (1 << 1),
  59:src/../h/Riscv.h ****         SSTATUS_SPIE = (1 << 5),
  60:src/../h/Riscv.h ****         SSTATUS_SPP = (1 << 8),
  61:src/../h/Riscv.h ****     };
  62:src/../h/Riscv.h **** 
  63:src/../h/Riscv.h ****     static void ms_sstatus(uint64 mask);
  64:src/../h/Riscv.h **** 
  65:src/../h/Riscv.h ****     static void mc_sstatus(uint64 mask);
  66:src/../h/Riscv.h **** 
GAS LISTING /tmp/cc0omBtC.s 			page 3


  67:src/../h/Riscv.h ****     static uint64 r_sstatus();
  68:src/../h/Riscv.h **** 
  69:src/../h/Riscv.h ****     static void w_sstatus(uint64 sstatus);
  70:src/../h/Riscv.h **** 
  71:src/../h/Riscv.h ****     static void popSppSpie();
  72:src/../h/Riscv.h **** 
  73:src/../h/Riscv.h ****     static void supervisorTrap();
  74:src/../h/Riscv.h ****     static void handleSupervisorTrap();
  75:src/../h/Riscv.h **** 
  76:src/../h/Riscv.h ****     static const uint64 bntOne = 1UL << 63;;
  77:src/../h/Riscv.h ****     static const uint64 bntZero = 0UL;
  78:src/../h/Riscv.h ****     static const uint64 timerInterrupt = bntOne + 1UL;
  79:src/../h/Riscv.h ****     static const uint64 hwInterrupt = bntOne + 9UL;
  80:src/../h/Riscv.h ****     static const uint64 operationInterrupt = bntZero + 2UL;
  81:src/../h/Riscv.h ****     static const uint64 addrReadInterrupt = bntZero + 5UL;
  82:src/../h/Riscv.h ****     static const uint64 addrWriteInterrupt = bntZero + 7UL;
  83:src/../h/Riscv.h ****     static const uint64 ecallUserInterrupt = bntZero + 8UL;
  84:src/../h/Riscv.h ****     static const uint64 ecallSystemInterupt = bntZero + 9UL;
  85:src/../h/Riscv.h **** };
  86:src/../h/Riscv.h **** 
  87:src/../h/Riscv.h **** inline uint64 Riscv::r_scause() {
  88:src/../h/Riscv.h ****     uint64 volatile scause;
  89:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
  90:src/../h/Riscv.h ****     return scause;
  91:src/../h/Riscv.h **** }
  92:src/../h/Riscv.h **** 
  93:src/../h/Riscv.h **** inline void Riscv::w_scause(uint64 scause) {
  94:src/../h/Riscv.h ****     __asm__ volatile("csrw scause, %0" : :"r"(scause));
  95:src/../h/Riscv.h **** }
  96:src/../h/Riscv.h **** 
  97:src/../h/Riscv.h **** inline uint64 Riscv::r_sepc() {
  98:src/../h/Riscv.h ****     uint64 volatile sepc;
  99:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 100:src/../h/Riscv.h ****     return sepc;
 101:src/../h/Riscv.h **** }
 102:src/../h/Riscv.h **** 
 103:src/../h/Riscv.h **** inline void Riscv::w_sepc(uint64 sepc) {
 104:src/../h/Riscv.h ****     __asm__ volatile("csrw sepc, %0" : :"r"(sepc));
 105:src/../h/Riscv.h **** }
 106:src/../h/Riscv.h **** 
 107:src/../h/Riscv.h **** inline uint64 Riscv::r_stvec() {
 108:src/../h/Riscv.h ****     uint64 volatile stvec;
 109:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, stvec" : "=r"(stvec));
 110:src/../h/Riscv.h ****     return stvec;
 111:src/../h/Riscv.h **** }
 112:src/../h/Riscv.h **** 
 113:src/../h/Riscv.h **** inline void Riscv::w_stvec(uint64 stvec) {
 114:src/../h/Riscv.h ****     __asm__ volatile("csrw stvec, %0" : :"r"(stvec));
  35              		.loc 2 114 5 is_stmt 1
  36              		.loc 2 114 53 is_stmt 0
  37              	#APP
  38              	# 114 "src/../h/Riscv.h" 1
 115              	}
  39              		csrw stvec, a5
  40              	# 0 "" 2
  41              	.LVL1:
  42              	#NO_APP
GAS LISTING /tmp/cc0omBtC.s 			page 4


  43              	.LBE75:
  44              	.LBE74:
  15:src/Riscv.cpp ****     Thread* t = new Thread(0, 0);
  45              		.loc 1 15 5 is_stmt 1
  46              		.loc 1 15 32 is_stmt 0
  47 0024 13058001 		li	a0,24
  48              	.LEHB0:
  49 0028 97000000 		call	_Znwm@plt
  49      E7800000 
  50              	.LVL2:
  51              	.LEHE0:
  52 0030 93040500 		mv	s1,a0
  53 0034 13060000 		li	a2,0
  54 0038 93050000 		li	a1,0
  55              	.LEHB1:
  56 003c 97000000 		call	_ZN6ThreadC1EPFvPvES0_@plt
  56      E7800000 
  57              	.LVL3:
  58              	.LEHE1:
  16:src/Riscv.cpp ****     t->start();
  59              		.loc 1 16 5 is_stmt 1 discriminator 2
  60              		.loc 1 16 13 is_stmt 0 discriminator 2
  61 0044 13850400 		mv	a0,s1
  62              	.LEHB2:
  63 0048 97000000 		call	_ZN6Thread5startEv@plt
  63      E7800000 
  64              	.LVL4:
  17:src/Riscv.cpp ****     PCB::running = Scheduler::get();
  65              		.loc 1 17 5 is_stmt 1 discriminator 2
  66              		.loc 1 17 34 is_stmt 0 discriminator 2
  67 0050 97000000 		call	_ZN9Scheduler3getEv@plt
  67      E7800000 
  68              	.LVL5:
  69              	.LEHE2:
  70              		.loc 1 17 18 discriminator 2
  71 0058 97070000 		la	a5,_ZN3PCB7runningE
  71      83B70700 
  72 0060 23B0A700 		sd	a0,0(a5)
  18:src/Riscv.cpp ****     PCB::running->setState(PCB::RUNNING);
  73              		.loc 1 18 5 is_stmt 1 discriminator 2
  74              	.LVL6:
  75              	.LBB76:
  76              	.LBB77:
  77              		.file 3 "src/../h/PCB.h"
   1:src/../h/PCB.h **** //
   2:src/../h/PCB.h **** // Created by os on 4/27/22.
   3:src/../h/PCB.h **** //
   4:src/../h/PCB.h **** 
   5:src/../h/PCB.h **** #ifndef PROJECT_BASE_V1_0_PCB_H
   6:src/../h/PCB.h **** #define PROJECT_BASE_V1_0_PCB_H
   7:src/../h/PCB.h **** 
   8:src/../h/PCB.h **** #include "../lib/hw.h"
   9:src/../h/PCB.h **** #include "Scheduler.h"
  10:src/../h/PCB.h **** #include "Riscv.h"
  11:src/../h/PCB.h **** 
  12:src/../h/PCB.h **** class PCB
  13:src/../h/PCB.h **** {
GAS LISTING /tmp/cc0omBtC.s 			page 5


  14:src/../h/PCB.h **** public:
  15:src/../h/PCB.h ****     using Body = void (*)(void*);
  16:src/../h/PCB.h **** 
  17:src/../h/PCB.h ****     PCB(Body body,  void* args, void* stack_space, uint64 timeSlice);
  18:src/../h/PCB.h ****     ~PCB();
  19:src/../h/PCB.h **** 
  20:src/../h/PCB.h ****     void start();
  21:src/../h/PCB.h ****     static void dispatch();
  22:src/../h/PCB.h ****     static void sleep(time_t);
  23:src/../h/PCB.h **** 
  24:src/../h/PCB.h ****     static PCB* running;
  25:src/../h/PCB.h ****     static PCB* exitingPCB;
  26:src/../h/PCB.h **** 
  27:src/../h/PCB.h ****     static uint64 timeSliceCounter;
  28:src/../h/PCB.h ****     uint64 getTimeSlice() { return timeSlice;}
  29:src/../h/PCB.h **** 
  30:src/../h/PCB.h ****     void* operator new(size_t size);
  31:src/../h/PCB.h ****     void operator delete(void *p);
  32:src/../h/PCB.h **** 
  33:src/../h/PCB.h ****     enum State{READY, RUNNING, SUSPENDED, FINISHED, EXITING, SLEEPING};
  34:src/../h/PCB.h ****     State getState() {return state;}
  35:src/../h/PCB.h ****     void setState(State s) {state = s;}
  78              		.loc 3 35 29 discriminator 2
  79              		.loc 3 35 35 is_stmt 0 discriminator 2
  80 0064 93071000 		li	a5,1
  81 0068 2328F502 		sw	a5,48(a0)
  82              	.LVL7:
  83              	.LBE77:
  84              	.LBE76:
  19:src/Riscv.cpp ****     //todo
  20:src/Riscv.cpp ****     //no need for comment, but sync context switch
  21:src/Riscv.cpp ****     //should be tested, before hardware interrupts are enabled
  22:src/Riscv.cpp ****     //Riscv::enableInterrupts();
  23:src/Riscv.cpp **** }
  85              		.loc 1 23 1 discriminator 2
  86 006c 83308101 		ld	ra,24(sp)
  87              		.cfi_remember_state
  88              		.cfi_restore 1
  89 0070 03340101 		ld	s0,16(sp)
  90              		.cfi_restore 8
  91              		.cfi_def_cfa 2, 32
  92 0074 83348100 		ld	s1,8(sp)
  93              		.cfi_restore 9
  94              	.LVL8:
  95 0078 03390100 		ld	s2,0(sp)
  96              		.cfi_restore 18
  97 007c 13010102 		addi	sp,sp,32
  98              		.cfi_def_cfa_offset 0
  99 0080 67800000 		jr	ra
 100              	.L3:
 101              		.cfi_restore_state
 102 0084 13090500 		mv	s2,a0
  15:src/Riscv.cpp ****     t->start();
 103              		.loc 1 15 32
 104 0088 13850400 		mv	a0,s1
 105 008c 97000000 		call	_ZdlPv@plt
 105      E7800000 
GAS LISTING /tmp/cc0omBtC.s 			page 6


 106              	.LVL9:
 107 0094 13050900 		mv	a0,s2
 108              	.LEHB3:
 109 0098 97000000 		call	_Unwind_Resume@plt
 109      E7800000 
 110              	.LVL10:
 111              	.LEHE3:
 112              		.cfi_endproc
 113              	.LFE21:
 114              		.globl	__gxx_personality_v0
 115              		.section	.gcc_except_table,"a",@progbits
 116              	.LLSDA21:
 117 0000 FF       		.byte	0xff
 118 0001 FF       		.byte	0xff
 119 0002 03       		.byte	0x3
 120 0003 34       		.byte	0x34
 121 0004 00000000 		.4byte	.LEHB0-.LFB21
 122 0008 00000000 		.4byte	.LEHE0-.LEHB0
 123 000c 00000000 		.4byte	0
 124 0010 00       		.byte	0
 125 0011 00000000 		.4byte	.LEHB1-.LFB21
 126 0015 00000000 		.4byte	.LEHE1-.LEHB1
 127 0019 00000000 		.4byte	.L3-.LFB21
 128 001d 00       		.byte	0
 129 001e 00000000 		.4byte	.LEHB2-.LFB21
 130 0022 00000000 		.4byte	.LEHE2-.LEHB2
 131 0026 00000000 		.4byte	0
 132 002a 00       		.byte	0
 133 002b 00000000 		.4byte	.LEHB3-.LFB21
 134 002f 00000000 		.4byte	.LEHE3-.LEHB3
 135 0033 00000000 		.4byte	0
 136 0037 00       		.byte	0
 137              		.text
 139              		.align	2
 140              		.globl	_ZN5Riscv16enableInterruptsEv
 142              	_ZN5Riscv16enableInterruptsEv:
 143              	.LFB23:
  24:src/Riscv.cpp **** 
  25:src/Riscv.cpp **** void Riscv::endSystem() {
  26:src/Riscv.cpp ****     //todo
  27:src/Riscv.cpp ****     //da li treba jos nesto da se ocisti
  28:src/Riscv.cpp ****     Riscv::disableInterrupts();
  29:src/Riscv.cpp **** }
  30:src/Riscv.cpp **** 
  31:src/Riscv.cpp **** 
  32:src/Riscv.cpp **** void Riscv::enableInterrupts() {
 144              		.loc 1 32 32 is_stmt 1
 145              		.cfi_startproc
 146 00a0 130101FF 		addi	sp,sp,-16
 147              		.cfi_def_cfa_offset 16
 148 00a4 23348100 		sd	s0,8(sp)
 149              		.cfi_offset 8, -8
 150 00a8 13040101 		addi	s0,sp,16
 151              		.cfi_def_cfa 8, 0
  33:src/Riscv.cpp ****     ms_sstatus(Riscv::SSTATUS_SIE);
 152              		.loc 1 33 5
 153              	.LVL11:
GAS LISTING /tmp/cc0omBtC.s 			page 7


 154              	.LBB78:
 155              	.LBB79:
 116:src/../h/Riscv.h **** 
 117:src/../h/Riscv.h **** inline uint64 Riscv::r_stval() {
 118:src/../h/Riscv.h ****     uint64 volatile stval;
 119:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, stval" : "=r"(stval));
 120:src/../h/Riscv.h ****     return stval;
 121:src/../h/Riscv.h **** }
 122:src/../h/Riscv.h **** 
 123:src/../h/Riscv.h **** inline void Riscv::w_stval(uint64 stval) {
 124:src/../h/Riscv.h ****     __asm__ volatile("csrw stval, %0" : :"r"(stval));
 125:src/../h/Riscv.h **** }
 126:src/../h/Riscv.h **** 
 127:src/../h/Riscv.h **** inline void Riscv::ms_sip(uint64 mask) {
 128:src/../h/Riscv.h ****     __asm__ volatile("csrs sip, %0" : :"r"(mask));
 129:src/../h/Riscv.h **** }
 130:src/../h/Riscv.h **** 
 131:src/../h/Riscv.h **** inline void Riscv::mc_sip(uint64 mask) {
 132:src/../h/Riscv.h ****     __asm__ volatile("csrc sip, %0" : :"r"(mask));
 133:src/../h/Riscv.h **** }
 134:src/../h/Riscv.h **** 
 135:src/../h/Riscv.h **** inline uint64 Riscv::r_sip() {
 136:src/../h/Riscv.h ****     uint64 volatile sip;
 137:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, sip" : "=r"(sip));
 138:src/../h/Riscv.h ****     return sip;
 139:src/../h/Riscv.h **** }
 140:src/../h/Riscv.h **** 
 141:src/../h/Riscv.h **** inline void Riscv::w_sip(uint64 sip) {
 142:src/../h/Riscv.h ****     __asm__ volatile("csrw sip, %0" : :"r"(sip));
 143:src/../h/Riscv.h **** }
 144:src/../h/Riscv.h **** 
 145:src/../h/Riscv.h **** inline void Riscv::ms_sstatus(uint64 mask) {
 146:src/../h/Riscv.h ****     __asm__ volatile("csrs sstatus, %0" : :"r"(mask));
 156              		.loc 2 146 5
 157              		.loc 2 146 54 is_stmt 0
 158 00ac 93072000 		li	a5,2
 159              	#APP
 160              	# 146 "src/../h/Riscv.h" 1
 147              	}
 161              		csrs sstatus, a5
 162              	# 0 "" 2
 163              	.LVL12:
 164              	#NO_APP
 165              	.LBE79:
 166              	.LBE78:
  34:src/Riscv.cpp **** }
 167              		.loc 1 34 1
 168 00b4 03348100 		ld	s0,8(sp)
 169              		.cfi_restore 8
 170              		.cfi_def_cfa 2, 16
 171 00b8 13010101 		addi	sp,sp,16
 172              		.cfi_def_cfa_offset 0
 173 00bc 67800000 		jr	ra
 174              		.cfi_endproc
 175              	.LFE23:
 177              		.align	2
 178              		.globl	_ZN5Riscv17disableInterruptsEv
GAS LISTING /tmp/cc0omBtC.s 			page 8


 180              	_ZN5Riscv17disableInterruptsEv:
 181              	.LFB24:
  35:src/Riscv.cpp **** 
  36:src/Riscv.cpp **** void Riscv::disableInterrupts()
  37:src/Riscv.cpp **** {
 182              		.loc 1 37 1 is_stmt 1
 183              		.cfi_startproc
 184 00c0 130101FF 		addi	sp,sp,-16
 185              		.cfi_def_cfa_offset 16
 186 00c4 23348100 		sd	s0,8(sp)
 187              		.cfi_offset 8, -8
 188 00c8 13040101 		addi	s0,sp,16
 189              		.cfi_def_cfa 8, 0
  38:src/Riscv.cpp ****     mc_sstatus(Riscv::SSTATUS_SIE);
 190              		.loc 1 38 5
 191              	.LVL13:
 192              	.LBB80:
 193              	.LBB81:
 148:src/../h/Riscv.h **** 
 149:src/../h/Riscv.h **** inline void Riscv::mc_sstatus(uint64 mask) {
 150:src/../h/Riscv.h ****     __asm__ volatile("csrc sstatus, %0" : :"r"(mask));
 194              		.loc 2 150 5
 195              		.loc 2 150 54 is_stmt 0
 196 00cc 93072000 		li	a5,2
 197              	#APP
 198              	# 150 "src/../h/Riscv.h" 1
 151              	}
 199              		csrc sstatus, a5
 200              	# 0 "" 2
 201              	.LVL14:
 202              	#NO_APP
 203              	.LBE81:
 204              	.LBE80:
  39:src/Riscv.cpp **** }
 205              		.loc 1 39 1
 206 00d4 03348100 		ld	s0,8(sp)
 207              		.cfi_restore 8
 208              		.cfi_def_cfa 2, 16
 209 00d8 13010101 		addi	sp,sp,16
 210              		.cfi_def_cfa_offset 0
 211 00dc 67800000 		jr	ra
 212              		.cfi_endproc
 213              	.LFE24:
 215              		.align	2
 216              		.globl	_ZN5Riscv9endSystemEv
 218              	_ZN5Riscv9endSystemEv:
 219              	.LFB22:
  25:src/Riscv.cpp ****     //todo
 220              		.loc 1 25 25 is_stmt 1
 221              		.cfi_startproc
 222 00e0 130101FF 		addi	sp,sp,-16
 223              		.cfi_def_cfa_offset 16
 224 00e4 23341100 		sd	ra,8(sp)
 225 00e8 23308100 		sd	s0,0(sp)
 226              		.cfi_offset 1, -8
 227              		.cfi_offset 8, -16
 228 00ec 13040101 		addi	s0,sp,16
GAS LISTING /tmp/cc0omBtC.s 			page 9


 229              		.cfi_def_cfa 8, 0
  28:src/Riscv.cpp **** }
 230              		.loc 1 28 5
  28:src/Riscv.cpp **** }
 231              		.loc 1 28 29 is_stmt 0
 232 00f0 97000000 		call	_ZN5Riscv17disableInterruptsEv
 232      E7800000 
 233              	.LVL15:
  29:src/Riscv.cpp **** 
 234              		.loc 1 29 1
 235 00f8 83308100 		ld	ra,8(sp)
 236              		.cfi_restore 1
 237 00fc 03340100 		ld	s0,0(sp)
 238              		.cfi_restore 8
 239              		.cfi_def_cfa 2, 16
 240 0100 13010101 		addi	sp,sp,16
 241              		.cfi_def_cfa_offset 0
 242 0104 67800000 		jr	ra
 243              		.cfi_endproc
 244              	.LFE22:
 246              		.align	2
 247              		.globl	_ZN5Riscv10popSppSpieEv
 249              	_ZN5Riscv10popSppSpieEv:
 250              	.LFB25:
  40:src/Riscv.cpp **** 
  41:src/Riscv.cpp **** void Riscv::popSppSpie() {
 251              		.loc 1 41 26 is_stmt 1
 252              		.cfi_startproc
 253 0108 130101FF 		addi	sp,sp,-16
 254              		.cfi_def_cfa_offset 16
 255 010c 23348100 		sd	s0,8(sp)
 256              		.cfi_offset 8, -8
 257 0110 13040101 		addi	s0,sp,16
 258              		.cfi_def_cfa 8, 0
  42:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
 259              		.loc 1 42 5
 260              		.loc 1 42 39 is_stmt 0
 261              	#APP
 262              	# 42 "src/Riscv.cpp" 1
  43              	    __asm__ volatile ("sret");
 263              		csrw sepc, ra
 264              	# 0 "" 2
 265              		.loc 1 43 5 is_stmt 1
 266              		.loc 1 43 30 is_stmt 0
 267              	# 43 "src/Riscv.cpp" 1
  44              	}
 268              		sret
 269              	# 0 "" 2
 270              		.loc 1 44 1
 271              	#NO_APP
 272 011c 03348100 		ld	s0,8(sp)
 273              		.cfi_restore 8
 274              		.cfi_def_cfa 2, 16
 275 0120 13010101 		addi	sp,sp,16
 276              		.cfi_def_cfa_offset 0
 277 0124 67800000 		jr	ra
 278              		.cfi_endproc
GAS LISTING /tmp/cc0omBtC.s 			page 10


 279              	.LFE25:
 281              		.align	2
 282              		.globl	_ZN5Riscv11printStringEPKc
 284              	_ZN5Riscv11printStringEPKc:
 285              	.LFB26:
  45:src/Riscv.cpp **** 
  46:src/Riscv.cpp **** void Riscv::printString(const char *string)
  47:src/Riscv.cpp **** {
 286              		.loc 1 47 1 is_stmt 1
 287              		.cfi_startproc
 288              	.LVL16:
 289 0128 130101FD 		addi	sp,sp,-48
 290              		.cfi_def_cfa_offset 48
 291 012c 23341102 		sd	ra,40(sp)
 292 0130 23308102 		sd	s0,32(sp)
 293 0134 233C9100 		sd	s1,24(sp)
 294 0138 23382101 		sd	s2,16(sp)
 295              		.cfi_offset 1, -8
 296              		.cfi_offset 8, -16
 297              		.cfi_offset 9, -24
 298              		.cfi_offset 18, -32
 299 013c 13040103 		addi	s0,sp,48
 300              		.cfi_def_cfa 8, 0
 301 0140 93040500 		mv	s1,a0
  48:src/Riscv.cpp ****     uint64 sstatus = r_sstatus();
 302              		.loc 1 48 5
 303              	.LBB82:
 304              	.LBB83:
 152:src/../h/Riscv.h **** 
 153:src/../h/Riscv.h **** inline uint64 Riscv::r_sstatus() {
 154:src/../h/Riscv.h ****     uint64 volatile sstatus;
 305              		.loc 2 154 5
 155:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 306              		.loc 2 155 5
 307              		.loc 2 155 57 is_stmt 0
 308              	#APP
 309              	# 155 "src/../h/Riscv.h" 1
 156              	    return sstatus;
 310              		csrr a5, sstatus
 311              	# 0 "" 2
 312              	#NO_APP
 313 0148 233CF4FC 		sd	a5,-40(s0)
 314              		.loc 2 156 5 is_stmt 1
 315              		.loc 2 156 12 is_stmt 0
 316 014c 033984FD 		ld	s2,-40(s0)
 317              	.LVL17:
 318              	.LBE83:
 319              	.LBE82:
  49:src/Riscv.cpp ****     mc_sstatus(SSTATUS_SIE);
 320              		.loc 1 49 5 is_stmt 1
 321              	.LBB84:
 322              	.LBB85:
 150:src/../h/Riscv.h **** }
 323              		.loc 2 150 5
 150:src/../h/Riscv.h **** }
 324              		.loc 2 150 54 is_stmt 0
 325 0150 93072000 		li	a5,2
GAS LISTING /tmp/cc0omBtC.s 			page 11


 326              	#APP
 327              	# 150 "src/../h/Riscv.h" 1
 328              		csrc sstatus, a5
 329              	# 0 "" 2
 330              	.LVL18:
 331              	#NO_APP
 332              	.L16:
 333              	.LBE85:
 334              	.LBE84:
  50:src/Riscv.cpp ****     while (*string != '\0')
 335              		.loc 1 50 5 is_stmt 1
 336              		.loc 1 50 20
 337              		.loc 1 50 12 is_stmt 0
 338 0158 03C50400 		lbu	a0,0(s1)
 339              		.loc 1 50 20
 340 015c 630A0500 		beqz	a0,.L15
  51:src/Riscv.cpp ****     {
  52:src/Riscv.cpp ****         __putc(*string);
 341              		.loc 1 52 9 is_stmt 1
 342              		.loc 1 52 15 is_stmt 0
 343 0160 97000000 		call	__putc@plt
 343      E7800000 
 344              	.LVL19:
  53:src/Riscv.cpp ****         string++;
 345              		.loc 1 53 9 is_stmt 1
 346              		.loc 1 53 15 is_stmt 0
 347 0168 93841400 		addi	s1,s1,1
 348              	.LVL20:
  50:src/Riscv.cpp ****     while (*string != '\0')
 349              		.loc 1 50 5
 350 016c 6FF0DFFE 		j	.L16
 351              	.L15:
  54:src/Riscv.cpp ****     }
  55:src/Riscv.cpp ****     ms_sstatus(sstatus & SSTATUS_SIE ? SSTATUS_SIE : 0);
 352              		.loc 1 55 5 is_stmt 1
 353              		.loc 1 55 38 is_stmt 0
 354 0170 1B090900 		sext.w	s2,s2
 355              	.LVL21:
 356              		.loc 1 55 15
 357 0174 13792900 		andi	s2,s2,2
 358 0178 1B090900 		sext.w	s2,s2
 359              	.LVL22:
 360              	.LBB86:
 361              	.LBB87:
 146:src/../h/Riscv.h **** }
 362              		.loc 2 146 5 is_stmt 1
 146:src/../h/Riscv.h **** }
 363              		.loc 2 146 54 is_stmt 0
 364              	#APP
 365              	# 146 "src/../h/Riscv.h" 1
 366              		csrs sstatus, s2
 367              	# 0 "" 2
 368              	.LVL23:
 369              	#NO_APP
 370              	.LBE87:
 371              	.LBE86:
  56:src/Riscv.cpp **** }
GAS LISTING /tmp/cc0omBtC.s 			page 12


 372              		.loc 1 56 1
 373 0180 83308102 		ld	ra,40(sp)
 374              		.cfi_restore 1
 375 0184 03340102 		ld	s0,32(sp)
 376              		.cfi_restore 8
 377              		.cfi_def_cfa 2, 48
 378 0188 83348101 		ld	s1,24(sp)
 379              		.cfi_restore 9
 380              	.LVL24:
 381 018c 03390101 		ld	s2,16(sp)
 382              		.cfi_restore 18
 383 0190 13010103 		addi	sp,sp,48
 384              		.cfi_def_cfa_offset 0
 385 0194 67800000 		jr	ra
 386              		.cfi_endproc
 387              	.LFE26:
 389              		.align	2
 390              		.globl	_ZN5Riscv12printIntegerEm
 392              	_ZN5Riscv12printIntegerEm:
 393              	.LFB27:
  57:src/Riscv.cpp **** 
  58:src/Riscv.cpp **** void Riscv::printInteger(uint64 num)
  59:src/Riscv.cpp **** {
 394              		.loc 1 59 1 is_stmt 1
 395              		.cfi_startproc
 396              	.LVL25:
 397 0198 130101FC 		addi	sp,sp,-64
 398              		.cfi_def_cfa_offset 64
 399 019c 233C1102 		sd	ra,56(sp)
 400 01a0 23388102 		sd	s0,48(sp)
 401 01a4 23349102 		sd	s1,40(sp)
 402 01a8 23302103 		sd	s2,32(sp)
 403              		.cfi_offset 1, -8
 404              		.cfi_offset 8, -16
 405              		.cfi_offset 9, -24
 406              		.cfi_offset 18, -32
 407 01ac 13040104 		addi	s0,sp,64
 408              		.cfi_def_cfa 8, 0
  60:src/Riscv.cpp ****     uint64 sstatus = r_sstatus();
 409              		.loc 1 60 5
 410              	.LBB88:
 411              	.LBB89:
 154:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 412              		.loc 2 154 5
 155:src/../h/Riscv.h ****     return sstatus;
 413              		.loc 2 155 5
 155:src/../h/Riscv.h ****     return sstatus;
 414              		.loc 2 155 57 is_stmt 0
 415              	#APP
 416              	# 155 "src/../h/Riscv.h" 1
 417              		csrr a5, sstatus
 418              	# 0 "" 2
 419              	#NO_APP
 420 01b4 2334F4FC 		sd	a5,-56(s0)
 421              		.loc 2 156 5 is_stmt 1
 422              		.loc 2 156 12 is_stmt 0
 423 01b8 033984FC 		ld	s2,-56(s0)
GAS LISTING /tmp/cc0omBtC.s 			page 13


 424              	.LVL26:
 425              	.LBE89:
 426              	.LBE88:
  61:src/Riscv.cpp ****     mc_sstatus(SSTATUS_SIE);
 427              		.loc 1 61 5 is_stmt 1
 428              	.LBB90:
 429              	.LBB91:
 150:src/../h/Riscv.h **** }
 430              		.loc 2 150 5
 150:src/../h/Riscv.h **** }
 431              		.loc 2 150 54 is_stmt 0
 432 01bc 93072000 		li	a5,2
 433              	#APP
 434              	# 150 "src/../h/Riscv.h" 1
 435              		csrc sstatus, a5
 436              	# 0 "" 2
 437              	.LVL27:
 438              	#NO_APP
 439              	.LBE91:
 440              	.LBE90:
  62:src/Riscv.cpp ****     static char digits[] = "0123456789";
 441              		.loc 1 62 5 is_stmt 1
  63:src/Riscv.cpp ****     char buf[16];
 442              		.loc 1 63 5
  64:src/Riscv.cpp ****     int i, neg;
 443              		.loc 1 64 5
  65:src/Riscv.cpp ****     uint x;
 444              		.loc 1 65 5
  66:src/Riscv.cpp **** 
  67:src/Riscv.cpp ****     neg = 0;
 445              		.loc 1 67 5
  68:src/Riscv.cpp ****     if(num < 0)
 446              		.loc 1 68 5
  69:src/Riscv.cpp ****     {
  70:src/Riscv.cpp ****         neg = 1;
  71:src/Riscv.cpp ****         x = -num;
  72:src/Riscv.cpp ****     }
  73:src/Riscv.cpp ****     else
  74:src/Riscv.cpp ****         x = num;
 447              		.loc 1 74 9
 448              		.loc 1 74 11 is_stmt 0
 449 01c4 1B050500 		sext.w	a0,a0
 450              	.LVL28:
  75:src/Riscv.cpp **** 
  76:src/Riscv.cpp ****     i = 0;
 451              		.loc 1 76 5 is_stmt 1
 452              		.loc 1 76 7 is_stmt 0
 453 01c8 93040000 		li	s1,0
 454              	.LVL29:
 455              	.L19:
  77:src/Riscv.cpp ****     do
 456              		.loc 1 77 5 is_stmt 1
  78:src/Riscv.cpp ****     {
  79:src/Riscv.cpp ****         buf[i++] = digits[x%10];
 457              		.loc 1 79 9
 458              		.loc 1 79 28 is_stmt 0
 459 01cc 1306A000 		li	a2,10
GAS LISTING /tmp/cc0omBtC.s 			page 14


 460 01d0 3B77C502 		remuw	a4,a0,a2
 461              	.LVL30:
 462              		.loc 1 79 31
 463 01d4 93160702 		slli	a3,a4,32
 464 01d8 93D60602 		srli	a3,a3,32
 465 01dc 17070000 		lla	a4,.LANCHOR0
 465      13070700 
 466 01e4 3307D700 		add	a4,a4,a3
 467 01e8 03470700 		lbu	a4,0(a4)
 468              		.loc 1 79 18
 469 01ec 930604FE 		addi	a3,s0,-32
 470 01f0 B3879600 		add	a5,a3,s1
 471 01f4 9B841400 		addiw	s1,s1,1
 472              	.LVL31:
 473 01f8 2388E7FE 		sb	a4,-16(a5)
  80:src/Riscv.cpp ****     }while((x/=10) != 0);
 474              		.loc 1 80 20 is_stmt 1
 475 01fc 1B070500 		sext.w	a4,a0
 476              		.loc 1 80 14 is_stmt 0
 477 0200 3B55C502 		divuw	a0,a0,a2
 478              	.LVL32:
 479              		.loc 1 80 20
 480 0204 93079000 		li	a5,9
 481 0208 E3E2E7FC 		bgtu	a4,a5,.L19
 482              	.LVL33:
 483              	.L21:
  81:src/Riscv.cpp ****     if(neg)
  82:src/Riscv.cpp ****         buf[i++] = '-';
  83:src/Riscv.cpp **** 
  84:src/Riscv.cpp ****     while(--i >= 0)
 484              		.loc 1 84 5 is_stmt 1
 485              		.loc 1 84 15
 486 020c 9B84F4FF 		addiw	s1,s1,-1
 487              	.LVL34:
 488 0210 63CE0400 		bltz	s1,.L20
  85:src/Riscv.cpp ****         __putc(buf[i]);
 489              		.loc 1 85 9
 490              		.loc 1 85 15 is_stmt 0
 491 0214 930704FE 		addi	a5,s0,-32
 492 0218 B3879700 		add	a5,a5,s1
 493 021c 03C507FF 		lbu	a0,-16(a5)
 494 0220 97000000 		call	__putc@plt
 494      E7800000 
 495              	.LVL35:
 496 0228 6FF05FFE 		j	.L21
 497              	.L20:
  86:src/Riscv.cpp **** 
  87:src/Riscv.cpp ****     __putc('\n');
 498              		.loc 1 87 5 is_stmt 1
 499              		.loc 1 87 11 is_stmt 0
 500 022c 1305A000 		li	a0,10
 501 0230 97000000 		call	__putc@plt
 501      E7800000 
 502              	.LVL36:
  88:src/Riscv.cpp **** 
  89:src/Riscv.cpp ****     ms_sstatus(sstatus & SSTATUS_SIE ? SSTATUS_SIE : 0);
 503              		.loc 1 89 5 is_stmt 1
GAS LISTING /tmp/cc0omBtC.s 			page 15


 504              		.loc 1 89 38 is_stmt 0
 505 0238 1B090900 		sext.w	s2,s2
 506              	.LVL37:
 507              		.loc 1 89 15
 508 023c 13792900 		andi	s2,s2,2
 509 0240 1B090900 		sext.w	s2,s2
 510              	.LVL38:
 511              	.LBB92:
 512              	.LBB93:
 146:src/../h/Riscv.h **** }
 513              		.loc 2 146 5 is_stmt 1
 146:src/../h/Riscv.h **** }
 514              		.loc 2 146 54 is_stmt 0
 515              	#APP
 516              	# 146 "src/../h/Riscv.h" 1
 517              		csrs sstatus, s2
 518              	# 0 "" 2
 519              	.LVL39:
 520              	#NO_APP
 521              	.LBE93:
 522              	.LBE92:
  90:src/Riscv.cpp **** }
 523              		.loc 1 90 1
 524 0248 83308103 		ld	ra,56(sp)
 525              		.cfi_restore 1
 526 024c 03340103 		ld	s0,48(sp)
 527              		.cfi_restore 8
 528              		.cfi_def_cfa 2, 64
 529 0250 83348102 		ld	s1,40(sp)
 530              		.cfi_restore 9
 531 0254 03390102 		ld	s2,32(sp)
 532              		.cfi_restore 18
 533 0258 13010104 		addi	sp,sp,64
 534              		.cfi_def_cfa_offset 0
 535 025c 67800000 		jr	ra
 536              		.cfi_endproc
 537              	.LFE27:
 539              		.section	.rodata.str1.8,"aMS",@progbits,1
 540              		.align	3
 541              	.LC0:
 542 0000 74696D65 		.string	"timerInterrupt\n"
 542      72496E74 
 542      65727275 
 542      70740A00 
 543              		.text
 544              		.align	2
 545              		.globl	_ZN5Riscv20handleSupervisorTrapEv
 547              	_ZN5Riscv20handleSupervisorTrapEv:
 548              	.LFB28:
  91:src/Riscv.cpp **** 
  92:src/Riscv.cpp **** void Riscv::handleSupervisorTrap() {
 549              		.loc 1 92 36 is_stmt 1
 550              		.cfi_startproc
 551              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 552              		.cfi_lsda 0x1b,.LLSDA28
 553 0260 130101F8 		addi	sp,sp,-128
 554              		.cfi_def_cfa_offset 128
GAS LISTING /tmp/cc0omBtC.s 			page 16


 555 0264 233C1106 		sd	ra,120(sp)
 556 0268 23388106 		sd	s0,112(sp)
 557 026c 23349106 		sd	s1,104(sp)
 558 0270 23302107 		sd	s2,96(sp)
 559 0274 233C3105 		sd	s3,88(sp)
 560 0278 23384105 		sd	s4,80(sp)
 561 027c 23345105 		sd	s5,72(sp)
 562 0280 23306105 		sd	s6,64(sp)
 563              		.cfi_offset 1, -8
 564              		.cfi_offset 8, -16
 565              		.cfi_offset 9, -24
 566              		.cfi_offset 18, -32
 567              		.cfi_offset 19, -40
 568              		.cfi_offset 20, -48
 569              		.cfi_offset 21, -56
 570              		.cfi_offset 22, -64
 571 0284 13040108 		addi	s0,sp,128
 572              		.cfi_def_cfa 8, 0
  93:src/Riscv.cpp **** 
  94:src/Riscv.cpp ****     uint64 a4;
 573              		.loc 1 94 5
  95:src/Riscv.cpp ****     __asm__ volatile("mv %0, a4" : "=r"(a4));
 574              		.loc 1 95 5
 575              		.loc 1 95 45 is_stmt 0
 576              	#APP
 577              	# 95 "src/Riscv.cpp" 1
  96              	
 578              		mv s2, a4
 579              	# 0 "" 2
 580              	.LVL40:
  97:src/Riscv.cpp ****     uint64 scause = Riscv::r_scause();
 581              		.loc 1 97 5 is_stmt 1
 582              	#NO_APP
 583              	.LBB94:
 584              	.LBB95:
  88:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
 585              		.loc 2 88 5
  89:src/../h/Riscv.h ****     return scause;
 586              		.loc 2 89 5
  89:src/../h/Riscv.h ****     return scause;
 587              		.loc 2 89 55 is_stmt 0
 588              	#APP
 589              	# 89 "src/../h/Riscv.h" 1
 590              		csrr a5, scause
 591              	# 0 "" 2
 592              	#NO_APP
 593 0290 2334F4F8 		sd	a5,-120(s0)
  90:src/../h/Riscv.h **** }
 594              		.loc 2 90 5 is_stmt 1
  90:src/../h/Riscv.h **** }
 595              		.loc 2 90 12 is_stmt 0
 596 0294 033784F8 		ld	a4,-120(s0)
 597              	.LVL41:
 598              	.LBE95:
 599              	.LBE94:
  98:src/Riscv.cpp ****     switch(scause) {
 600              		.loc 1 98 5 is_stmt 1
GAS LISTING /tmp/cc0omBtC.s 			page 17


 601              	.LBB96:
 602 0298 93079000 		li	a5,9
 603 029c 63F2E706 		bleu	a4,a5,.L40
 604 02a0 9307F0FF 		li	a5,-1
 605 02a4 9397F703 		slli	a5,a5,63
 606 02a8 93871700 		addi	a5,a5,1
 607 02ac 631EF704 		bne	a4,a5,.L26
 608              	.LBB97:
  99:src/Riscv.cpp **** 
 100:src/Riscv.cpp ****         case timerInterrupt:
 609              		.loc 1 100 9
 101:src/Riscv.cpp **** 
 102:src/Riscv.cpp ****             Riscv::printString("timerInterrupt\n");
 610              		.loc 1 102 13
 611              		.loc 1 102 31 is_stmt 0
 612 02b0 17050000 		lla	a0,.LC0
 612      13050500 
 613              	.LEHB4:
 614 02b8 97000000 		call	_ZN5Riscv11printStringEPKc
 614      E7800000 
 615              	.LVL42:
 103:src/Riscv.cpp ****             PCB::timeSliceCounter++;
 616              		.loc 1 103 13 is_stmt 1
 617              		.loc 1 103 34 is_stmt 0
 618 02c0 97040000 		la	s1,_ZN3PCB16timeSliceCounterE
 618      83B40400 
 619 02c8 83B70400 		ld	a5,0(s1)
 620 02cc 93871700 		addi	a5,a5,1
 621 02d0 23B0F400 		sd	a5,0(s1)
 104:src/Riscv.cpp ****             PCB::tryToWakePCBs();
 622              		.loc 1 104 13 is_stmt 1
 623              		.loc 1 104 31 is_stmt 0
 624 02d4 97000000 		call	_ZN3PCB13tryToWakePCBsEv@plt
 624      E7800000 
 625              	.LVL43:
 105:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice()) {
 626              		.loc 1 105 13 is_stmt 1
 627              	.LBB98:
 628              		.loc 1 105 68 is_stmt 0
 629 02dc 97070000 		la	a5,_ZN3PCB7runningE
 629      83B70700 
 630 02e4 83B70700 		ld	a5,0(a5)
 631              	.LVL44:
 632              	.LBB99:
 633              	.LBB100:
  28:src/../h/PCB.h **** 
 634              		.loc 3 28 29 is_stmt 1
  28:src/../h/PCB.h **** 
 635              		.loc 3 28 36 is_stmt 0
 636 02e8 83B78700 		ld	a5,8(a5)
 637              	.LVL45:
 638              	.LBE100:
 639              	.LBE99:
 640              		.loc 1 105 39
 641 02ec 03B70400 		ld	a4,0(s1)
 642              		.loc 1 105 13
 643 02f0 6374F704 		bgeu	a4,a5,.L41
GAS LISTING /tmp/cc0omBtC.s 			page 18


 644              	.LVL46:
 645              	.L27:
 646              	.LBE98:
 106:src/Riscv.cpp ****                 uint64 sepc = Riscv::r_sepc();
 107:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 108:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 109:src/Riscv.cpp ****                 PCB::dispatch();
 110:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 111:src/Riscv.cpp ****                 Riscv::w_sepc(sepc);
 112:src/Riscv.cpp ****             }
 113:src/Riscv.cpp **** 
 114:src/Riscv.cpp ****             Riscv::mc_sip(Riscv::SIP_SSIP);
 647              		.loc 1 114 13 is_stmt 1
 648              	.LBB110:
 649              	.LBB111:
 132:src/../h/Riscv.h **** }
 650              		.loc 2 132 5
 132:src/../h/Riscv.h **** }
 651              		.loc 2 132 50 is_stmt 0
 652 02f4 93072000 		li	a5,2
 653              	#APP
 654              	# 132 "src/../h/Riscv.h" 1
 133:src/../h/Riscv.h **** 
 655              		csrc sip, a5
 656              	# 0 "" 2
 657              		.loc 2 133 1
 658              	#NO_APP
 659 02fc 6F00C000 		j	.L26
 660              	.LVL47:
 661              	.L40:
 662              	.LBE111:
 663              	.LBE110:
 664              	.LBE97:
  98:src/Riscv.cpp **** 
 665              		.loc 1 98 5
 666 0300 93078000 		li	a5,8
 667 0304 6376F706 		bgeu	a4,a5,.L42
 668              	.LVL48:
 669              	.L26:
 670              	.LBE96:
 115:src/Riscv.cpp **** 
 116:src/Riscv.cpp ****             break;
 117:src/Riscv.cpp **** 
 118:src/Riscv.cpp ****         case hwInterrupt: // todo
 119:src/Riscv.cpp **** 
 120:src/Riscv.cpp ****             break;
 121:src/Riscv.cpp **** 
 122:src/Riscv.cpp ****         case operationInterrupt: // todo
 123:src/Riscv.cpp ****             break;
 124:src/Riscv.cpp **** 
 125:src/Riscv.cpp ****         case addrReadInterrupt: // todo
 126:src/Riscv.cpp ****             break;
 127:src/Riscv.cpp **** 
 128:src/Riscv.cpp ****         case addrWriteInterrupt: // todo
 129:src/Riscv.cpp ****             break;
 130:src/Riscv.cpp **** 
 131:src/Riscv.cpp ****         case ecallSystemInterupt:
GAS LISTING /tmp/cc0omBtC.s 			page 19


 132:src/Riscv.cpp ****         case ecallUserInterrupt:
 133:src/Riscv.cpp **** 
 134:src/Riscv.cpp ****             uint64 operation;
 135:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
 136:src/Riscv.cpp **** 
 137:src/Riscv.cpp ****             uint64 sepc = Riscv::r_sepc();
 138:src/Riscv.cpp ****             sepc+=4;
 139:src/Riscv.cpp **** 
 140:src/Riscv.cpp ****             if(operation == MemoryAllocator::MEM_ALLOC)
 141:src/Riscv.cpp ****             {
 142:src/Riscv.cpp ****                 size_t size;
 143:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(size));
 144:src/Riscv.cpp ****                 size*=MEM_BLOCK_SIZE;
 145:src/Riscv.cpp ****                 void* allocatedAddr = kmalloc(size);
 146:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : : "r"((uint64)allocatedAddr));
 147:src/Riscv.cpp ****             }
 148:src/Riscv.cpp ****             else if(operation == MemoryAllocator::MEM_FREE)
 149:src/Riscv.cpp ****             {
 150:src/Riscv.cpp ****                 uint64 addr = 0;
 151:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(addr));
 152:src/Riscv.cpp ****                 uint64 retval = kfree((void*)addr);
 153:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 154:src/Riscv.cpp ****             }
 155:src/Riscv.cpp ****             else if(operation == PCB::THREAD_CREATE)
 156:src/Riscv.cpp ****             {
 157:src/Riscv.cpp ****                 //todo
 158:src/Riscv.cpp ****                 uint64 start_routine;
 159:src/Riscv.cpp ****                 uint64 args;
 160:src/Riscv.cpp ****                 PCB** threadHandle;
 161:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(threadHandle));
 162:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(start_routine));
 163:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a3" : "=r"(args));
 164:src/Riscv.cpp ****                 //uint64 stack_space;
 165:src/Riscv.cpp ****                 //__asm__ volatile("mv %0, a4" : "=r"(stack_space));
 166:src/Riscv.cpp **** 
 167:src/Riscv.cpp ****                 //todo
 168:src/Riscv.cpp ****                 //da li treba ovako ili tipa da se ne koristi new
 169:src/Riscv.cpp ****                 //nego direktno kmalloc - ali onda kako konstruktor
 170:src/Riscv.cpp ****                 //sta se desava ako preklopljeni new vrati 0
 171:src/Riscv.cpp ****                 PCB* newPCB = new PCB((void (*)(void*))start_routine, (void*)args, (void*)a4, 3UL);
 172:src/Riscv.cpp **** 
 173:src/Riscv.cpp ****                 (*threadHandle) = newPCB;
 174:src/Riscv.cpp **** 
 175:src/Riscv.cpp ****                 if(newPCB == 0)
 176:src/Riscv.cpp ****                     __asm__ volatile("li a0, 0xffffffffffffffff");
 177:src/Riscv.cpp ****                 else
 178:src/Riscv.cpp ****                     __asm__ volatile("li a0, 0");
 179:src/Riscv.cpp ****             }
 180:src/Riscv.cpp ****             else if(operation == PCB::THREAD_DISPATCH)
 181:src/Riscv.cpp ****             {
 182:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 183:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 184:src/Riscv.cpp ****                 PCB::dispatch();
 185:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 186:src/Riscv.cpp ****             }
 187:src/Riscv.cpp ****             else if(operation == PCB::THREAD_EXIT)
 188:src/Riscv.cpp ****             {
GAS LISTING /tmp/cc0omBtC.s 			page 20


 189:src/Riscv.cpp ****                 if(PCB::running == 0)
 190:src/Riscv.cpp ****                 {
 191:src/Riscv.cpp ****                     __asm__ volatile("li a0, 0xffffffffffffffff");
 192:src/Riscv.cpp ****                     return;
 193:src/Riscv.cpp ****                 }
 194:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 195:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 196:src/Riscv.cpp ****                 PCB::exitingPCB = PCB::running;
 197:src/Riscv.cpp ****                 PCB::exitingPCB->setState(PCB::EXITING);
 198:src/Riscv.cpp ****                 //todo
 199:src/Riscv.cpp ****                 //da li se iz ovog dispatch-a neka nit vraca uopste
 200:src/Riscv.cpp ****                 PCB::dispatch();
 201:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 202:src/Riscv.cpp ****             }
 203:src/Riscv.cpp ****             else if(operation == PCB::TIME_SLEEP)
 204:src/Riscv.cpp ****             {
 205:src/Riscv.cpp ****                 uint64 time;
 206:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(time));
 207:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 208:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 209:src/Riscv.cpp ****                 PCB::running->setState(PCB::SLEEPING);
 210:src/Riscv.cpp ****                 PCB::running->setTimeToSleep(time);
 211:src/Riscv.cpp ****                 PCB::insertSleepingPCB();
 212:src/Riscv.cpp ****                 PCB::dispatch();
 213:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 214:src/Riscv.cpp ****                 //todo
 215:src/Riscv.cpp ****                 //kad treba vratiti kod greske
 216:src/Riscv.cpp ****                 __asm__ volatile("li a0, 0x0");
 217:src/Riscv.cpp ****             }
 218:src/Riscv.cpp **** 
 219:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 220:src/Riscv.cpp **** 
 221:src/Riscv.cpp ****             return;
 222:src/Riscv.cpp ****             //break;
 223:src/Riscv.cpp ****     }
 224:src/Riscv.cpp **** 
 225:src/Riscv.cpp ****     console_handler();
 671              		.loc 1 225 5 is_stmt 1
 672              		.loc 1 225 20 is_stmt 0
 673 0308 97000000 		call	console_handler@plt
 673      E7800000 
 674              	.LVL49:
 675              	.L23:
 226:src/Riscv.cpp **** }
 676              		.loc 1 226 1
 677 0310 83308107 		ld	ra,120(sp)
 678              		.cfi_remember_state
 679              		.cfi_restore 1
 680 0314 03340107 		ld	s0,112(sp)
 681              		.cfi_restore 8
 682              		.cfi_def_cfa 2, 128
 683 0318 83348106 		ld	s1,104(sp)
 684              		.cfi_restore 9
 685 031c 03390106 		ld	s2,96(sp)
 686              		.cfi_restore 18
 687 0320 83398105 		ld	s3,88(sp)
 688              		.cfi_restore 19
GAS LISTING /tmp/cc0omBtC.s 			page 21


 689 0324 033A0105 		ld	s4,80(sp)
 690              		.cfi_restore 20
 691 0328 833A8104 		ld	s5,72(sp)
 692              		.cfi_restore 21
 693 032c 033B0104 		ld	s6,64(sp)
 694              		.cfi_restore 22
 695 0330 13010108 		addi	sp,sp,128
 696              		.cfi_def_cfa_offset 0
 697 0334 67800000 		jr	ra
 698              	.LVL50:
 699              	.L41:
 700              		.cfi_restore_state
 701              	.LBB175:
 702              	.LBB169:
 703              	.LBB112:
 704              	.LBB101:
 106:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 705              		.loc 1 106 17 is_stmt 1
 706              	.LBB102:
 707              	.LBB103:
  98:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 708              		.loc 2 98 5
  99:src/../h/Riscv.h ****     return sepc;
 709              		.loc 2 99 5
  99:src/../h/Riscv.h ****     return sepc;
 710              		.loc 2 99 51 is_stmt 0
 711              	#APP
 712              	# 99 "src/../h/Riscv.h" 1
 713              		csrr a5, sepc
 714              	# 0 "" 2
 715              	#NO_APP
 716 033c 233CF4F8 		sd	a5,-104(s0)
 100:src/../h/Riscv.h **** }
 717              		.loc 2 100 5 is_stmt 1
 100:src/../h/Riscv.h **** }
 718              		.loc 2 100 12 is_stmt 0
 719 0340 833484F9 		ld	s1,-104(s0)
 720              	.LVL51:
 721              	.LBE103:
 722              	.LBE102:
 107:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 723              		.loc 1 107 17 is_stmt 1
 724              	.LBB104:
 725              	.LBB105:
 154:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 726              		.loc 2 154 5
 155:src/../h/Riscv.h ****     return sstatus;
 727              		.loc 2 155 5
 155:src/../h/Riscv.h ****     return sstatus;
 728              		.loc 2 155 57 is_stmt 0
 729              	#APP
 730              	# 155 "src/../h/Riscv.h" 1
 731              		csrr a5, sstatus
 732              	# 0 "" 2
 733              	#NO_APP
 734 0348 2338F4F8 		sd	a5,-112(s0)
 735              		.loc 2 156 5 is_stmt 1
GAS LISTING /tmp/cc0omBtC.s 			page 22


 736              		.loc 2 156 12 is_stmt 0
 737 034c 033904F9 		ld	s2,-112(s0)
 738              	.LVL52:
 739              	.LBE105:
 740              	.LBE104:
 108:src/Riscv.cpp ****                 PCB::dispatch();
 741              		.loc 1 108 17 is_stmt 1
 108:src/Riscv.cpp ****                 PCB::dispatch();
 742              		.loc 1 108 39 is_stmt 0
 743 0350 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 743      83B70700 
 744 0358 23B00700 		sd	zero,0(a5)
 109:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 745              		.loc 1 109 17 is_stmt 1
 109:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 746              		.loc 1 109 30 is_stmt 0
 747 035c 97000000 		call	_ZN3PCB8dispatchEv@plt
 747      E7800000 
 748              	.LVL53:
 110:src/Riscv.cpp ****                 Riscv::w_sepc(sepc);
 749              		.loc 1 110 17 is_stmt 1
 750              	.LBB106:
 751              	.LBB107:
 157:src/../h/Riscv.h **** }
 158:src/../h/Riscv.h **** 
 159:src/../h/Riscv.h **** inline void Riscv::w_sstatus(uint64 sstatus) {
 160:src/../h/Riscv.h ****     __asm__ volatile("csrw sstatus, %0" : :"r"(sstatus));
 752              		.loc 2 160 5
 753              		.loc 2 160 57 is_stmt 0
 754              	#APP
 755              	# 160 "src/../h/Riscv.h" 1
 161              	}
 756              		csrw sstatus, s2
 757              	# 0 "" 2
 758              	.LVL54:
 759              	#NO_APP
 760              	.LBE107:
 761              	.LBE106:
 111:src/Riscv.cpp ****             }
 762              		.loc 1 111 17 is_stmt 1
 763              	.LBB108:
 764              	.LBB109:
 104:src/../h/Riscv.h **** }
 765              		.loc 2 104 5
 104:src/../h/Riscv.h **** }
 766              		.loc 2 104 51 is_stmt 0
 767              	#APP
 768              	# 104 "src/../h/Riscv.h" 1
 105:src/../h/Riscv.h **** 
 769              		csrw sepc, s1
 770              	# 0 "" 2
 771              		.loc 2 105 1
 772              	#NO_APP
 773 036c 6FF09FF8 		j	.L27
 774              	.LVL55:
 775              	.L42:
 776              	.LBE109:
GAS LISTING /tmp/cc0omBtC.s 			page 23


 777              	.LBE108:
 778              	.LBE101:
 779              	.LBE112:
 131:src/Riscv.cpp ****         case ecallUserInterrupt:
 780              		.loc 1 131 9 is_stmt 1
 132:src/Riscv.cpp **** 
 781              		.loc 1 132 9
 134:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
 782              		.loc 1 134 13
 135:src/Riscv.cpp **** 
 783              		.loc 1 135 13
 135:src/Riscv.cpp **** 
 784              		.loc 1 135 61 is_stmt 0
 785              	#APP
 786              	# 135 "src/Riscv.cpp" 1
 787              		mv a5, a0
 788              	# 0 "" 2
 789              	.LVL56:
 137:src/Riscv.cpp ****             sepc+=4;
 790              		.loc 1 137 13 is_stmt 1
 791              	#NO_APP
 792              	.LBB113:
 793              	.LBB114:
  98:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 794              		.loc 2 98 5
  99:src/../h/Riscv.h ****     return sepc;
 795              		.loc 2 99 5
  99:src/../h/Riscv.h ****     return sepc;
 796              		.loc 2 99 51 is_stmt 0
 797              	#APP
 798              	# 99 "src/../h/Riscv.h" 1
 799              		csrr a4, sepc
 800              	# 0 "" 2
 801              	.LVL57:
 802              	#NO_APP
 803 0378 2330E4FA 		sd	a4,-96(s0)
 100:src/../h/Riscv.h **** }
 804              		.loc 2 100 5 is_stmt 1
 100:src/../h/Riscv.h **** }
 805              		.loc 2 100 12 is_stmt 0
 806 037c 033704FA 		ld	a4,-96(s0)
 807              	.LVL58:
 808              	.LBE114:
 809              	.LBE113:
 138:src/Riscv.cpp **** 
 810              		.loc 1 138 13 is_stmt 1
 138:src/Riscv.cpp **** 
 811              		.loc 1 138 17 is_stmt 0
 812 0380 93044700 		addi	s1,a4,4
 813              	.LVL59:
 140:src/Riscv.cpp ****             {
 814              		.loc 1 140 13 is_stmt 1
 815              	.LBB115:
 816 0384 13071000 		li	a4,1
 817 0388 638AE702 		beq	a5,a4,.L43
 818              	.LBE115:
 819              	.LBE169:
GAS LISTING /tmp/cc0omBtC.s 			page 24


 820              	.LBE175:
 148:src/Riscv.cpp ****             {
 821              		.loc 1 148 18
 822              	.LBB176:
 823              	.LBB170:
 824              	.LBB161:
 825              	.LBB116:
 826 038c 13072000 		li	a4,2
 827 0390 6382E704 		beq	a5,a4,.L44
 828              	.LBE116:
 829              	.LBE161:
 830              	.LBE170:
 831              	.LBE176:
 155:src/Riscv.cpp ****             {
 832              		.loc 1 155 18
 833              	.LBB177:
 834              	.LBB171:
 835              	.LBB162:
 836              	.LBB155:
 837              	.LBB117:
 838 0394 13071001 		li	a4,17
 839 0398 6388E704 		beq	a5,a4,.L45
 840              	.LBE117:
 841              	.LBE155:
 842              	.LBE162:
 843              	.LBE171:
 844              	.LBE177:
 180:src/Riscv.cpp ****             {
 845              		.loc 1 180 18
 846              	.LBB178:
 847              	.LBB172:
 848              	.LBB163:
 849              	.LBB156:
 850              	.LBB150:
 851              	.LBB118:
 852 039c 13073001 		li	a4,19
 853 03a0 638AE708 		beq	a5,a4,.L46
 854              	.LBE118:
 855              	.LBE150:
 856              	.LBE156:
 857              	.LBE163:
 858              	.LBE172:
 859              	.LBE178:
 187:src/Riscv.cpp ****             {
 860              		.loc 1 187 18
 861              	.LBB179:
 862              	.LBB173:
 863              	.LBB164:
 864              	.LBB157:
 865              	.LBB151:
 866              	.LBB145:
 867              	.LBB119:
 868 03a4 13072001 		li	a4,18
 869 03a8 638AE70A 		beq	a5,a4,.L47
 870              	.LBE119:
 871              	.LBE145:
 872              	.LBE151:
GAS LISTING /tmp/cc0omBtC.s 			page 25


 873              	.LBE157:
 874              	.LBE164:
 875              	.LBE173:
 876              	.LBE179:
 203:src/Riscv.cpp ****             {
 877              		.loc 1 203 18
 878              	.LBB180:
 879              	.LBB174:
 880              	.LBB165:
 881              	.LBB158:
 882              	.LBB152:
 883              	.LBB146:
 884              	.LBB138:
 885              	.LBB120:
 886 03ac 13071003 		li	a4,49
 887 03b0 6386E710 		beq	a5,a4,.L48
 888              	.LVL60:
 889              	.L29:
 890              	.LBE120:
 891              	.LBE138:
 892              	.LBE146:
 893              	.LBE152:
 894              	.LBE158:
 895              	.LBE165:
 219:src/Riscv.cpp **** 
 896              		.loc 1 219 13
 897              	.LBB166:
 898              	.LBB167:
 104:src/../h/Riscv.h **** }
 899              		.loc 2 104 5
 104:src/../h/Riscv.h **** }
 900              		.loc 2 104 51 is_stmt 0
 901              	#APP
 902              	# 104 "src/../h/Riscv.h" 1
 105:src/../h/Riscv.h **** 
 903              		csrw sepc, s1
 904              	# 0 "" 2
 905              		.loc 2 105 1
 906              	#NO_APP
 907 03b8 6FF09FF5 		j	.L23
 908              	.LVL61:
 909              	.L43:
 910              	.LBE167:
 911              	.LBE166:
 912              	.LBB168:
 913              	.LBB159:
 142:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(size));
 914              		.loc 1 142 17 is_stmt 1
 143:src/Riscv.cpp ****                 size*=MEM_BLOCK_SIZE;
 915              		.loc 1 143 17
 143:src/Riscv.cpp ****                 size*=MEM_BLOCK_SIZE;
 916              		.loc 1 143 59 is_stmt 0
 917              	#APP
 918              	# 143 "src/Riscv.cpp" 1
 919              		mv a0, a1
 920              	# 0 "" 2
 921              	.LVL62:
GAS LISTING /tmp/cc0omBtC.s 			page 26


 144:src/Riscv.cpp ****                 void* allocatedAddr = kmalloc(size);
 922              		.loc 1 144 17 is_stmt 1
 145:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : : "r"((uint64)allocatedAddr));
 923              		.loc 1 145 17
 145:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : : "r"((uint64)allocatedAddr));
 924              		.loc 1 145 46 is_stmt 0
 925              	#NO_APP
 926 03c0 13156500 		slli	a0,a0,6
 927              	.LVL63:
 928 03c4 97000000 		call	_Z7kmallocm@plt
 928      E7800000 
 929              	.LVL64:
 146:src/Riscv.cpp ****             }
 930              		.loc 1 146 17 is_stmt 1
 146:src/Riscv.cpp ****             }
 931              		.loc 1 146 76 is_stmt 0
 932              	#APP
 933              	# 146 "src/Riscv.cpp" 1
 934              		mv a0,a0
 935              	# 0 "" 2
 936              	#NO_APP
 937              	.LBE159:
 938 03d0 6FF05FFE 		j	.L29
 939              	.LVL65:
 940              	.L44:
 941              	.LBB160:
 942              	.LBB153:
 150:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(addr));
 943              		.loc 1 150 17 is_stmt 1
 151:src/Riscv.cpp ****                 uint64 retval = kfree((void*)addr);
 944              		.loc 1 151 17
 151:src/Riscv.cpp ****                 uint64 retval = kfree((void*)addr);
 945              		.loc 1 151 59 is_stmt 0
 946              	#APP
 947              	# 151 "src/Riscv.cpp" 1
 948              		mv a0, a1
 949              	# 0 "" 2
 950              	.LVL66:
 152:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 951              		.loc 1 152 17 is_stmt 1
 152:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 952              		.loc 1 152 38 is_stmt 0
 953              	#NO_APP
 954 03d8 97000000 		call	_Z5kfreePv@plt
 954      E7800000 
 955              	.LVL67:
 153:src/Riscv.cpp ****             }
 956              		.loc 1 153 17 is_stmt 1
 153:src/Riscv.cpp ****             }
 957              		.loc 1 153 60 is_stmt 0
 958              	#APP
 959              	# 153 "src/Riscv.cpp" 1
 960              		mv a0,a0
 961              	# 0 "" 2
 962              	#NO_APP
 963              	.LBE153:
 964 03e4 6FF01FFD 		j	.L29
GAS LISTING /tmp/cc0omBtC.s 			page 27


 965              	.LVL68:
 966              	.L45:
 967              	.LBB154:
 968              	.LBB147:
 158:src/Riscv.cpp ****                 uint64 args;
 969              		.loc 1 158 17 is_stmt 1
 159:src/Riscv.cpp ****                 PCB** threadHandle;
 970              		.loc 1 159 17
 160:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(threadHandle));
 971              		.loc 1 160 17
 161:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(start_routine));
 972              		.loc 1 161 17
 161:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(start_routine));
 973              		.loc 1 161 67 is_stmt 0
 974              	#APP
 975              	# 161 "src/Riscv.cpp" 1
 976              		mv s4, a1
 977              	# 0 "" 2
 978              	.LVL69:
 162:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a3" : "=r"(args));
 979              		.loc 1 162 17 is_stmt 1
 162:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a3" : "=r"(args));
 980              		.loc 1 162 68 is_stmt 0
 981              	# 162 "src/Riscv.cpp" 1
 982              		mv s5, a2
 983              	# 0 "" 2
 984              	.LVL70:
 163:src/Riscv.cpp ****                 //uint64 stack_space;
 985              		.loc 1 163 17 is_stmt 1
 163:src/Riscv.cpp ****                 //uint64 stack_space;
 986              		.loc 1 163 59 is_stmt 0
 987              	# 163 "src/Riscv.cpp" 1
 988              		mv s6, a3
 989              	# 0 "" 2
 990              	.LVL71:
 171:src/Riscv.cpp **** 
 991              		.loc 1 171 17 is_stmt 1
 171:src/Riscv.cpp **** 
 992              		.loc 1 171 98 is_stmt 0
 993              	#NO_APP
 994 03f4 13058005 		li	a0,88
 995 03f8 97000000 		call	_ZN3PCBnwEm@plt
 995      E7800000 
 996              	.LVL72:
 997              	.LEHE4:
 998 0400 93090500 		mv	s3,a0
 999 0404 13073000 		li	a4,3
 1000 0408 93060900 		mv	a3,s2
 1001 040c 13060B00 		mv	a2,s6
 1002 0410 93850A00 		mv	a1,s5
 1003              	.LEHB5:
 1004 0414 97000000 		call	_ZN3PCBC1EPFvPvES0_S0_m@plt
 1004      E7800000 
 1005              	.LVL73:
 1006              	.LEHE5:
 173:src/Riscv.cpp **** 
 1007              		.loc 1 173 17 is_stmt 1 discriminator 2
GAS LISTING /tmp/cc0omBtC.s 			page 28


 173:src/Riscv.cpp **** 
 1008              		.loc 1 173 33 is_stmt 0 discriminator 2
 1009 041c 23303A01 		sd	s3,0(s4)
 175:src/Riscv.cpp ****                     __asm__ volatile("li a0, 0xffffffffffffffff");
 1010              		.loc 1 175 17 is_stmt 1 discriminator 2
 1011 0420 63860900 		beqz	s3,.L49
 178:src/Riscv.cpp ****             }
 1012              		.loc 1 178 21
 178:src/Riscv.cpp ****             }
 1013              		.loc 1 178 49 is_stmt 0
 1014              	#APP
 1015              	# 178 "src/Riscv.cpp" 1
 1016              		li a0, 0
 1017              	# 0 "" 2
 1018              	#NO_APP
 1019 0428 6FF0DFF8 		j	.L29
 1020              	.L49:
 176:src/Riscv.cpp ****                 else
 1021              		.loc 1 176 21 is_stmt 1
 176:src/Riscv.cpp ****                 else
 1022              		.loc 1 176 66 is_stmt 0
 1023              	#APP
 1024              	# 176 "src/Riscv.cpp" 1
 1025              		li a0, 0xffffffffffffffff
 1026              	# 0 "" 2
 1027              	#NO_APP
 1028 0430 6FF05FF8 		j	.L29
 1029              	.LVL74:
 1030              	.L46:
 1031              	.LBE147:
 1032              	.LBB148:
 1033              	.LBB139:
 182:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 1034              		.loc 1 182 17 is_stmt 1
 1035              	.LBB140:
 1036              	.LBB141:
 154:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 1037              		.loc 2 154 5
 155:src/../h/Riscv.h ****     return sstatus;
 1038              		.loc 2 155 5
 155:src/../h/Riscv.h ****     return sstatus;
 1039              		.loc 2 155 57 is_stmt 0
 1040              	#APP
 1041              	# 155 "src/../h/Riscv.h" 1
 1042              		csrr a5, sstatus
 1043              	# 0 "" 2
 1044              	.LVL75:
 1045              	#NO_APP
 1046 0438 2334F4FA 		sd	a5,-88(s0)
 156:src/../h/Riscv.h **** }
 1047              		.loc 2 156 5 is_stmt 1
 156:src/../h/Riscv.h **** }
 1048              		.loc 2 156 12 is_stmt 0
 1049 043c 033984FA 		ld	s2,-88(s0)
 1050              	.LVL76:
 1051              	.LBE141:
 1052              	.LBE140:
GAS LISTING /tmp/cc0omBtC.s 			page 29


 183:src/Riscv.cpp ****                 PCB::dispatch();
 1053              		.loc 1 183 17 is_stmt 1
 183:src/Riscv.cpp ****                 PCB::dispatch();
 1054              		.loc 1 183 39 is_stmt 0
 1055 0440 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 1055      83B70700 
 1056 0448 23B00700 		sd	zero,0(a5)
 184:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1057              		.loc 1 184 17 is_stmt 1
 1058              	.LEHB6:
 184:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1059              		.loc 1 184 30 is_stmt 0
 1060 044c 97000000 		call	_ZN3PCB8dispatchEv@plt
 1060      E7800000 
 1061              	.LVL77:
 185:src/Riscv.cpp ****             }
 1062              		.loc 1 185 17 is_stmt 1
 1063              	.LBB142:
 1064              	.LBB143:
 160:src/../h/Riscv.h **** }
 1065              		.loc 2 160 5
 160:src/../h/Riscv.h **** }
 1066              		.loc 2 160 57 is_stmt 0
 1067              	#APP
 1068              	# 160 "src/../h/Riscv.h" 1
 1069              		csrw sstatus, s2
 1070              	# 0 "" 2
 1071              		.loc 2 161 1
 1072              	#NO_APP
 1073 0458 6FF0DFF5 		j	.L29
 1074              	.LVL78:
 1075              	.L47:
 1076              	.LBE143:
 1077              	.LBE142:
 1078              	.LBE139:
 1079              	.LBB144:
 1080              	.LBB130:
 189:src/Riscv.cpp ****                 {
 1081              		.loc 1 189 17 is_stmt 1
 189:src/Riscv.cpp ****                 {
 1082              		.loc 1 189 33 is_stmt 0
 1083 045c 97070000 		la	a5,_ZN3PCB7runningE
 1083      83B70700 
 1084              	.LVL79:
 1085 0464 83B70700 		ld	a5,0(a5)
 189:src/Riscv.cpp ****                 {
 1086              		.loc 1 189 17
 1087 0468 63860704 		beqz	a5,.L50
 194:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 1088              		.loc 1 194 17 is_stmt 1
 1089              	.LBB131:
 1090              	.LBB132:
 154:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 1091              		.loc 2 154 5
 155:src/../h/Riscv.h ****     return sstatus;
 1092              		.loc 2 155 5
 155:src/../h/Riscv.h ****     return sstatus;
GAS LISTING /tmp/cc0omBtC.s 			page 30


 1093              		.loc 2 155 57 is_stmt 0
 1094              	#APP
 1095              	# 155 "src/../h/Riscv.h" 1
 1096              		csrr a5, sstatus
 1097              	# 0 "" 2
 1098              	#NO_APP
 1099 0470 2338F4FA 		sd	a5,-80(s0)
 156:src/../h/Riscv.h **** }
 1100              		.loc 2 156 5 is_stmt 1
 156:src/../h/Riscv.h **** }
 1101              		.loc 2 156 12 is_stmt 0
 1102 0474 033904FB 		ld	s2,-80(s0)
 1103              	.LVL80:
 1104              	.LBE132:
 1105              	.LBE131:
 195:src/Riscv.cpp ****                 PCB::exitingPCB = PCB::running;
 1106              		.loc 1 195 17 is_stmt 1
 195:src/Riscv.cpp ****                 PCB::exitingPCB = PCB::running;
 1107              		.loc 1 195 39 is_stmt 0
 1108 0478 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 1108      83B70700 
 1109 0480 23B00700 		sd	zero,0(a5)
 196:src/Riscv.cpp ****                 PCB::exitingPCB->setState(PCB::EXITING);
 1110              		.loc 1 196 17 is_stmt 1
 196:src/Riscv.cpp ****                 PCB::exitingPCB->setState(PCB::EXITING);
 1111              		.loc 1 196 33 is_stmt 0
 1112 0484 97070000 		la	a5,_ZN3PCB7runningE
 1112      83B70700 
 1113 048c 83B70700 		ld	a5,0(a5)
 1114 0490 17070000 		la	a4,_ZN3PCB10exitingPCBE
 1114      03370700 
 1115 0498 2330F700 		sd	a5,0(a4)
 197:src/Riscv.cpp ****                 //todo
 1116              		.loc 1 197 17 is_stmt 1
 1117              	.LVL81:
 1118              	.LBB133:
 1119              	.LBB134:
 1120              		.loc 3 35 29
 1121              		.loc 3 35 35 is_stmt 0
 1122 049c 13074000 		li	a4,4
 1123 04a0 23A8E702 		sw	a4,48(a5)
 1124              	.LVL82:
 1125              	.LBE134:
 1126              	.LBE133:
 200:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1127              		.loc 1 200 17 is_stmt 1
 200:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1128              		.loc 1 200 30 is_stmt 0
 1129 04a4 97000000 		call	_ZN3PCB8dispatchEv@plt
 1129      E7800000 
 1130              	.LVL83:
 201:src/Riscv.cpp ****             }
 1131              		.loc 1 201 17 is_stmt 1
 1132              	.LBB135:
 1133              	.LBB136:
 160:src/../h/Riscv.h **** }
 1134              		.loc 2 160 5
GAS LISTING /tmp/cc0omBtC.s 			page 31


 160:src/../h/Riscv.h **** }
 1135              		.loc 2 160 57 is_stmt 0
 1136              	#APP
 1137              	# 160 "src/../h/Riscv.h" 1
 1138              		csrw sstatus, s2
 1139              	# 0 "" 2
 1140              		.loc 2 161 1
 1141              	#NO_APP
 1142 04b0 6FF05FF0 		j	.L29
 1143              	.LVL84:
 1144              	.L50:
 1145              	.LBE136:
 1146              	.LBE135:
 191:src/Riscv.cpp ****                     return;
 1147              		.loc 1 191 21 is_stmt 1
 191:src/Riscv.cpp ****                     return;
 1148              		.loc 1 191 66 is_stmt 0
 1149              	#APP
 1150              	# 191 "src/Riscv.cpp" 1
 192:src/Riscv.cpp ****                 }
 1151              		li a0, 0xffffffffffffffff
 1152              	# 0 "" 2
 1153              		.loc 1 192 21 is_stmt 1
 1154              	#NO_APP
 1155 04b8 6FF09FE5 		j	.L23
 1156              	.LVL85:
 1157              	.L48:
 1158              	.LBE130:
 1159              	.LBB137:
 1160              	.LBB121:
 205:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(time));
 1161              		.loc 1 205 17
 206:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 1162              		.loc 1 206 17
 206:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 1163              		.loc 1 206 59 is_stmt 0
 1164              	#APP
 1165              	# 206 "src/Riscv.cpp" 1
 1166              		mv a4, a1
 1167              	# 0 "" 2
 1168              	.LVL86:
 207:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 1169              		.loc 1 207 17 is_stmt 1
 1170              	#NO_APP
 1171              	.LBB122:
 1172              	.LBB123:
 154:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 1173              		.loc 2 154 5
 155:src/../h/Riscv.h ****     return sstatus;
 1174              		.loc 2 155 5
 155:src/../h/Riscv.h ****     return sstatus;
 1175              		.loc 2 155 57 is_stmt 0
 1176              	#APP
 1177              	# 155 "src/../h/Riscv.h" 1
 1178              		csrr a5, sstatus
 1179              	# 0 "" 2
 1180              	.LVL87:
GAS LISTING /tmp/cc0omBtC.s 			page 32


 1181              	#NO_APP
 1182 04c4 233CF4FA 		sd	a5,-72(s0)
 156:src/../h/Riscv.h **** }
 1183              		.loc 2 156 5 is_stmt 1
 156:src/../h/Riscv.h **** }
 1184              		.loc 2 156 12 is_stmt 0
 1185 04c8 033984FB 		ld	s2,-72(s0)
 1186              	.LVL88:
 1187              	.LBE123:
 1188              	.LBE122:
 208:src/Riscv.cpp ****                 PCB::running->setState(PCB::SLEEPING);
 1189              		.loc 1 208 17 is_stmt 1
 208:src/Riscv.cpp ****                 PCB::running->setState(PCB::SLEEPING);
 1190              		.loc 1 208 39 is_stmt 0
 1191 04cc 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 1191      83B70700 
 1192 04d4 23B00700 		sd	zero,0(a5)
 209:src/Riscv.cpp ****                 PCB::running->setTimeToSleep(time);
 1193              		.loc 1 209 17 is_stmt 1
 209:src/Riscv.cpp ****                 PCB::running->setTimeToSleep(time);
 1194              		.loc 1 209 39 is_stmt 0
 1195 04d8 97070000 		la	a5,_ZN3PCB7runningE
 1195      83B70700 
 1196 04e0 83B70700 		ld	a5,0(a5)
 1197              	.LVL89:
 1198              	.LBB124:
 1199              	.LBB125:
 1200              		.loc 3 35 29 is_stmt 1
 1201              		.loc 3 35 35 is_stmt 0
 1202 04e4 93065000 		li	a3,5
 1203 04e8 23A8D702 		sw	a3,48(a5)
 1204              	.LVL90:
 1205              	.LBE125:
 1206              	.LBE124:
 210:src/Riscv.cpp ****                 PCB::insertSleepingPCB();
 1207              		.loc 1 210 17 is_stmt 1
 1208              	.LBB126:
 1209              	.LBB127:
  36:src/../h/PCB.h ****     void setTimeToSleep(uint64 time) {timeToSleep = time;}
 1210              		.loc 3 36 39
 1211              		.loc 3 36 51 is_stmt 0
 1212 04ec 23B8E700 		sd	a4,16(a5)
 1213              	.LVL91:
 1214              	.LBE127:
 1215              	.LBE126:
 211:src/Riscv.cpp ****                 PCB::dispatch();
 1216              		.loc 1 211 17 is_stmt 1
 211:src/Riscv.cpp ****                 PCB::dispatch();
 1217              		.loc 1 211 39 is_stmt 0
 1218 04f0 97000000 		call	_ZN3PCB17insertSleepingPCBEv@plt
 1218      E7800000 
 1219              	.LVL92:
 212:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1220              		.loc 1 212 17 is_stmt 1
 212:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1221              		.loc 1 212 30 is_stmt 0
 1222 04f8 97000000 		call	_ZN3PCB8dispatchEv@plt
GAS LISTING /tmp/cc0omBtC.s 			page 33


 1222      E7800000 
 1223              	.LVL93:
 1224              	.LEHE6:
 213:src/Riscv.cpp ****                 //todo
 1225              		.loc 1 213 17 is_stmt 1
 1226              	.LBB128:
 1227              	.LBB129:
 160:src/../h/Riscv.h **** }
 1228              		.loc 2 160 5
 160:src/../h/Riscv.h **** }
 1229              		.loc 2 160 57 is_stmt 0
 1230              	#APP
 1231              	# 160 "src/../h/Riscv.h" 1
 1232              		csrw sstatus, s2
 1233              	# 0 "" 2
 1234              	.LVL94:
 1235              	#NO_APP
 1236              	.LBE129:
 1237              	.LBE128:
 216:src/Riscv.cpp ****             }
 1238              		.loc 1 216 17 is_stmt 1
 216:src/Riscv.cpp ****             }
 1239              		.loc 1 216 47 is_stmt 0
 1240              	#APP
 1241              	# 216 "src/Riscv.cpp" 1
 1242              		li a0, 0x0
 1243              	# 0 "" 2
 1244              	#NO_APP
 1245              	.LBE121:
 1246 0508 6FF0DFEA 		j	.L29
 1247              	.LVL95:
 1248              	.L38:
 1249 050c 93040500 		mv	s1,a0
 1250              	.LVL96:
 1251              	.LBE137:
 1252              	.LBE144:
 1253              	.LBE148:
 1254              	.LBB149:
 171:src/Riscv.cpp **** 
 1255              		.loc 1 171 98
 1256 0510 13850900 		mv	a0,s3
 1257 0514 97000000 		call	_ZN3PCBdlEPv@plt
 1257      E7800000 
 1258              	.LVL97:
 1259 051c 13850400 		mv	a0,s1
 1260              	.LEHB7:
 1261 0520 97000000 		call	_Unwind_Resume@plt
 1261      E7800000 
 1262              	.LVL98:
 1263              	.LEHE7:
 1264              	.LBE149:
 1265              	.LBE154:
 1266              	.LBE160:
 1267              	.LBE168:
 1268              	.LBE174:
 1269              	.LBE180:
 1270              		.cfi_endproc
GAS LISTING /tmp/cc0omBtC.s 			page 34


 1271              	.LFE28:
 1272              		.section	.gcc_except_table
 1273              	.LLSDA28:
 1274 0038 FF       		.byte	0xff
 1275 0039 FF       		.byte	0xff
 1276 003a 03       		.byte	0x3
 1277 003b 34       		.byte	0x34
 1278 003c 00000000 		.4byte	.LEHB4-.LFB28
 1279 0040 00000000 		.4byte	.LEHE4-.LEHB4
 1280 0044 00000000 		.4byte	0
 1281 0048 00       		.byte	0
 1282 0049 00000000 		.4byte	.LEHB5-.LFB28
 1283 004d 00000000 		.4byte	.LEHE5-.LEHB5
 1284 0051 00000000 		.4byte	.L38-.LFB28
 1285 0055 00       		.byte	0
 1286 0056 00000000 		.4byte	.LEHB6-.LFB28
 1287 005a 00000000 		.4byte	.LEHE6-.LEHB6
 1288 005e 00000000 		.4byte	0
 1289 0062 00       		.byte	0
 1290 0063 00000000 		.4byte	.LEHB7-.LFB28
 1291 0067 00000000 		.4byte	.LEHE7-.LEHB7
 1292 006b 00000000 		.4byte	0
 1293 006f 00       		.byte	0
 1294              		.text
 1296              		.section	.rodata
 1297              		.align	3
 1298              		.set	.LANCHOR0,. + 0
 1301              	_ZZN5Riscv12printIntegerEmE6digits:
 1302 0000 30313233 		.string	"0123456789"
 1302      34353637 
 1302      383900
 1303              		.text
 1304              	.Letext0:
 1305              		.file 4 "src/../h/../lib/hw.h"
 1306              		.file 5 "src/../h/Queue.h"
 1307              		.file 6 "src/../h/Scheduler.h"
 1308              		.file 7 "src/../h/syscall_cpp.h"
 1309              		.file 8 "src/../h/MemoryAllocator.h"
 1310              		.file 9 "src/../lib/console.h"
 5700              		.align	3
 5703              	DW.ref.__gxx_personality_v0:
 5704 0000 00000000 		.dword	__gxx_personality_v0
 5704      00000000 
 5705              		.ident	"GCC: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0"
 5706              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/cc0omBtC.s 			page 35


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Riscv.cpp
     /tmp/cc0omBtC.s:9      .text:0000000000000000 _ZN5Riscv10initSystemEv
     /tmp/cc0omBtC.s:13     .text:0000000000000000 .L0 
     /tmp/cc0omBtC.s:5703   .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/cc0omBtC.s:16     .text:0000000000000000 .L0 
     /tmp/cc0omBtC.s:17     .text:0000000000000004 .L0 
     /tmp/cc0omBtC.s:22     .text:0000000000000014 .L0 
     /tmp/cc0omBtC.s:23     .text:0000000000000014 .L0 
     /tmp/cc0omBtC.s:24     .text:0000000000000014 .L0 
     /tmp/cc0omBtC.s:25     .text:0000000000000014 .L0 
     /tmp/cc0omBtC.s:27     .text:0000000000000018 .L0 
     /tmp/cc0omBtC.s:29     .text:0000000000000018 .L0 
     /tmp/cc0omBtC.s:30     .text:0000000000000018 .L0 
     /tmp/cc0omBtC.s:36     .text:0000000000000020 .L0 
    src/../h/Riscv.h:114    .text:0000000000000020 .L0 
     /tmp/cc0omBtC.s:46     .text:0000000000000024 .L0 
     /tmp/cc0omBtC.s:47     .text:0000000000000024 .L0 
     /tmp/cc0omBtC.s:60     .text:0000000000000044 .L0 
     /tmp/cc0omBtC.s:61     .text:0000000000000044 .L0 
     /tmp/cc0omBtC.s:66     .text:0000000000000050 .L0 
     /tmp/cc0omBtC.s:67     .text:0000000000000050 .L0 
     /tmp/cc0omBtC.s:71     .text:0000000000000058 .L0 
     /tmp/cc0omBtC.s:78     .text:0000000000000064 .L0 
     /tmp/cc0omBtC.s:79     .text:0000000000000064 .L0 
     /tmp/cc0omBtC.s:80     .text:0000000000000064 .L0 
     /tmp/cc0omBtC.s:86     .text:000000000000006c .L0 
     /tmp/cc0omBtC.s:87     .text:0000000000000070 .L0 
     /tmp/cc0omBtC.s:88     .text:0000000000000070 .L0 
     /tmp/cc0omBtC.s:90     .text:0000000000000074 .L0 
     /tmp/cc0omBtC.s:91     .text:0000000000000074 .L0 
     /tmp/cc0omBtC.s:93     .text:0000000000000078 .L0 
     /tmp/cc0omBtC.s:96     .text:000000000000007c .L0 
     /tmp/cc0omBtC.s:98     .text:0000000000000080 .L0 
     /tmp/cc0omBtC.s:101    .text:0000000000000084 .L0 
     /tmp/cc0omBtC.s:104    .text:0000000000000088 .L0 
     /tmp/cc0omBtC.s:112    .text:00000000000000a0 .L0 
     /tmp/cc0omBtC.s:142    .text:00000000000000a0 _ZN5Riscv16enableInterruptsEv
     /tmp/cc0omBtC.s:145    .text:00000000000000a0 .L0 
     /tmp/cc0omBtC.s:146    .text:00000000000000a0 .L0 
     /tmp/cc0omBtC.s:147    .text:00000000000000a4 .L0 
     /tmp/cc0omBtC.s:149    .text:00000000000000a8 .L0 
     /tmp/cc0omBtC.s:151    .text:00000000000000ac .L0 
     /tmp/cc0omBtC.s:156    .text:00000000000000ac .L0 
     /tmp/cc0omBtC.s:157    .text:00000000000000ac .L0 
     /tmp/cc0omBtC.s:158    .text:00000000000000ac .L0 
     /tmp/cc0omBtC.s:168    .text:00000000000000b4 .L0 
     /tmp/cc0omBtC.s:169    .text:00000000000000b8 .L0 
     /tmp/cc0omBtC.s:170    .text:00000000000000b8 .L0 
     /tmp/cc0omBtC.s:172    .text:00000000000000bc .L0 
     /tmp/cc0omBtC.s:174    .text:00000000000000c0 .L0 
     /tmp/cc0omBtC.s:180    .text:00000000000000c0 _ZN5Riscv17disableInterruptsEv
     /tmp/cc0omBtC.s:183    .text:00000000000000c0 .L0 
     /tmp/cc0omBtC.s:184    .text:00000000000000c0 .L0 
     /tmp/cc0omBtC.s:185    .text:00000000000000c4 .L0 
     /tmp/cc0omBtC.s:187    .text:00000000000000c8 .L0 
     /tmp/cc0omBtC.s:189    .text:00000000000000cc .L0 
GAS LISTING /tmp/cc0omBtC.s 			page 36


     /tmp/cc0omBtC.s:194    .text:00000000000000cc .L0 
     /tmp/cc0omBtC.s:195    .text:00000000000000cc .L0 
     /tmp/cc0omBtC.s:196    .text:00000000000000cc .L0 
     /tmp/cc0omBtC.s:206    .text:00000000000000d4 .L0 
     /tmp/cc0omBtC.s:207    .text:00000000000000d8 .L0 
     /tmp/cc0omBtC.s:208    .text:00000000000000d8 .L0 
     /tmp/cc0omBtC.s:210    .text:00000000000000dc .L0 
     /tmp/cc0omBtC.s:212    .text:00000000000000e0 .L0 
     /tmp/cc0omBtC.s:218    .text:00000000000000e0 _ZN5Riscv9endSystemEv
     /tmp/cc0omBtC.s:221    .text:00000000000000e0 .L0 
     /tmp/cc0omBtC.s:222    .text:00000000000000e0 .L0 
     /tmp/cc0omBtC.s:223    .text:00000000000000e4 .L0 
     /tmp/cc0omBtC.s:226    .text:00000000000000ec .L0 
     /tmp/cc0omBtC.s:227    .text:00000000000000ec .L0 
     /tmp/cc0omBtC.s:229    .text:00000000000000f0 .L0 
     /tmp/cc0omBtC.s:231    .text:00000000000000f0 .L0 
     /tmp/cc0omBtC.s:232    .text:00000000000000f0 .L0 
     /tmp/cc0omBtC.s:235    .text:00000000000000f8 .L0 
     /tmp/cc0omBtC.s:236    .text:00000000000000fc .L0 
     /tmp/cc0omBtC.s:238    .text:0000000000000100 .L0 
     /tmp/cc0omBtC.s:239    .text:0000000000000100 .L0 
     /tmp/cc0omBtC.s:241    .text:0000000000000104 .L0 
     /tmp/cc0omBtC.s:243    .text:0000000000000108 .L0 
     /tmp/cc0omBtC.s:249    .text:0000000000000108 _ZN5Riscv10popSppSpieEv
     /tmp/cc0omBtC.s:252    .text:0000000000000108 .L0 
     /tmp/cc0omBtC.s:253    .text:0000000000000108 .L0 
     /tmp/cc0omBtC.s:254    .text:000000000000010c .L0 
     /tmp/cc0omBtC.s:256    .text:0000000000000110 .L0 
     /tmp/cc0omBtC.s:258    .text:0000000000000114 .L0 
     /tmp/cc0omBtC.s:260    .text:0000000000000114 .L0 
       src/Riscv.cpp:42     .text:0000000000000114 .L0 
     /tmp/cc0omBtC.s:266    .text:0000000000000118 .L0 
       src/Riscv.cpp:43     .text:0000000000000118 .L0 
     /tmp/cc0omBtC.s:272    .text:000000000000011c .L0 
     /tmp/cc0omBtC.s:273    .text:0000000000000120 .L0 
     /tmp/cc0omBtC.s:274    .text:0000000000000120 .L0 
     /tmp/cc0omBtC.s:276    .text:0000000000000124 .L0 
     /tmp/cc0omBtC.s:278    .text:0000000000000128 .L0 
     /tmp/cc0omBtC.s:284    .text:0000000000000128 _ZN5Riscv11printStringEPKc
     /tmp/cc0omBtC.s:287    .text:0000000000000128 .L0 
     /tmp/cc0omBtC.s:289    .text:0000000000000128 .L0 
     /tmp/cc0omBtC.s:290    .text:000000000000012c .L0 
     /tmp/cc0omBtC.s:295    .text:000000000000013c .L0 
     /tmp/cc0omBtC.s:296    .text:000000000000013c .L0 
     /tmp/cc0omBtC.s:297    .text:000000000000013c .L0 
     /tmp/cc0omBtC.s:298    .text:000000000000013c .L0 
     /tmp/cc0omBtC.s:300    .text:0000000000000140 .L0 
     /tmp/cc0omBtC.s:305    .text:0000000000000144 .L0 
     /tmp/cc0omBtC.s:306    .text:0000000000000144 .L0 
     /tmp/cc0omBtC.s:307    .text:0000000000000144 .L0 
    src/../h/Riscv.h:155    .text:0000000000000144 .L0 
     /tmp/cc0omBtC.s:315    .text:000000000000014c .L0 
     /tmp/cc0omBtC.s:316    .text:000000000000014c .L0 
     /tmp/cc0omBtC.s:323    .text:0000000000000150 .L0 
     /tmp/cc0omBtC.s:324    .text:0000000000000150 .L0 
     /tmp/cc0omBtC.s:325    .text:0000000000000150 .L0 
     /tmp/cc0omBtC.s:336    .text:0000000000000158 .L0 
GAS LISTING /tmp/cc0omBtC.s 			page 37


     /tmp/cc0omBtC.s:337    .text:0000000000000158 .L0 
     /tmp/cc0omBtC.s:338    .text:0000000000000158 .L0 
     /tmp/cc0omBtC.s:340    .text:000000000000015c .L0 
     /tmp/cc0omBtC.s:342    .text:0000000000000160 .L0 
     /tmp/cc0omBtC.s:343    .text:0000000000000160 .L0 
     /tmp/cc0omBtC.s:346    .text:0000000000000168 .L0 
     /tmp/cc0omBtC.s:347    .text:0000000000000168 .L0 
     /tmp/cc0omBtC.s:350    .text:000000000000016c .L0 
     /tmp/cc0omBtC.s:353    .text:0000000000000170 .L0 
     /tmp/cc0omBtC.s:354    .text:0000000000000170 .L0 
     /tmp/cc0omBtC.s:357    .text:0000000000000174 .L0 
     /tmp/cc0omBtC.s:363    .text:000000000000017c .L0 
    src/../h/Riscv.h:146    .text:000000000000017c .L0 
     /tmp/cc0omBtC.s:373    .text:0000000000000180 .L0 
     /tmp/cc0omBtC.s:374    .text:0000000000000184 .L0 
     /tmp/cc0omBtC.s:376    .text:0000000000000188 .L0 
     /tmp/cc0omBtC.s:377    .text:0000000000000188 .L0 
     /tmp/cc0omBtC.s:379    .text:000000000000018c .L0 
     /tmp/cc0omBtC.s:382    .text:0000000000000190 .L0 
     /tmp/cc0omBtC.s:384    .text:0000000000000194 .L0 
     /tmp/cc0omBtC.s:386    .text:0000000000000198 .L0 
     /tmp/cc0omBtC.s:392    .text:0000000000000198 _ZN5Riscv12printIntegerEm
     /tmp/cc0omBtC.s:395    .text:0000000000000198 .L0 
     /tmp/cc0omBtC.s:397    .text:0000000000000198 .L0 
     /tmp/cc0omBtC.s:398    .text:000000000000019c .L0 
     /tmp/cc0omBtC.s:403    .text:00000000000001ac .L0 
     /tmp/cc0omBtC.s:404    .text:00000000000001ac .L0 
     /tmp/cc0omBtC.s:405    .text:00000000000001ac .L0 
     /tmp/cc0omBtC.s:406    .text:00000000000001ac .L0 
     /tmp/cc0omBtC.s:408    .text:00000000000001b0 .L0 
     /tmp/cc0omBtC.s:412    .text:00000000000001b0 .L0 
     /tmp/cc0omBtC.s:413    .text:00000000000001b0 .L0 
     /tmp/cc0omBtC.s:414    .text:00000000000001b0 .L0 
    src/../h/Riscv.h:155    .text:00000000000001b0 .L0 
     /tmp/cc0omBtC.s:422    .text:00000000000001b8 .L0 
     /tmp/cc0omBtC.s:423    .text:00000000000001b8 .L0 
     /tmp/cc0omBtC.s:430    .text:00000000000001bc .L0 
     /tmp/cc0omBtC.s:431    .text:00000000000001bc .L0 
     /tmp/cc0omBtC.s:432    .text:00000000000001bc .L0 
     /tmp/cc0omBtC.s:442    .text:00000000000001c4 .L0 
     /tmp/cc0omBtC.s:443    .text:00000000000001c4 .L0 
     /tmp/cc0omBtC.s:444    .text:00000000000001c4 .L0 
     /tmp/cc0omBtC.s:445    .text:00000000000001c4 .L0 
     /tmp/cc0omBtC.s:446    .text:00000000000001c4 .L0 
     /tmp/cc0omBtC.s:447    .text:00000000000001c4 .L0 
     /tmp/cc0omBtC.s:448    .text:00000000000001c4 .L0 
     /tmp/cc0omBtC.s:449    .text:00000000000001c4 .L0 
     /tmp/cc0omBtC.s:452    .text:00000000000001c8 .L0 
     /tmp/cc0omBtC.s:453    .text:00000000000001c8 .L0 
     /tmp/cc0omBtC.s:457    .text:00000000000001cc .L0 
     /tmp/cc0omBtC.s:458    .text:00000000000001cc .L0 
     /tmp/cc0omBtC.s:459    .text:00000000000001cc .L0 
     /tmp/cc0omBtC.s:463    .text:00000000000001d4 .L0 
     /tmp/cc0omBtC.s:469    .text:00000000000001ec .L0 
     /tmp/cc0omBtC.s:475    .text:00000000000001fc .L0 
     /tmp/cc0omBtC.s:477    .text:0000000000000200 .L0 
     /tmp/cc0omBtC.s:480    .text:0000000000000204 .L0 
GAS LISTING /tmp/cc0omBtC.s 			page 38


     /tmp/cc0omBtC.s:485    .text:000000000000020c .L0 
     /tmp/cc0omBtC.s:486    .text:000000000000020c .L0 
     /tmp/cc0omBtC.s:490    .text:0000000000000214 .L0 
     /tmp/cc0omBtC.s:491    .text:0000000000000214 .L0 
     /tmp/cc0omBtC.s:499    .text:000000000000022c .L0 
     /tmp/cc0omBtC.s:500    .text:000000000000022c .L0 
     /tmp/cc0omBtC.s:504    .text:0000000000000238 .L0 
     /tmp/cc0omBtC.s:505    .text:0000000000000238 .L0 
     /tmp/cc0omBtC.s:508    .text:000000000000023c .L0 
     /tmp/cc0omBtC.s:514    .text:0000000000000244 .L0 
    src/../h/Riscv.h:146    .text:0000000000000244 .L0 
     /tmp/cc0omBtC.s:524    .text:0000000000000248 .L0 
     /tmp/cc0omBtC.s:525    .text:000000000000024c .L0 
     /tmp/cc0omBtC.s:527    .text:0000000000000250 .L0 
     /tmp/cc0omBtC.s:528    .text:0000000000000250 .L0 
     /tmp/cc0omBtC.s:530    .text:0000000000000254 .L0 
     /tmp/cc0omBtC.s:532    .text:0000000000000258 .L0 
     /tmp/cc0omBtC.s:534    .text:000000000000025c .L0 
     /tmp/cc0omBtC.s:536    .text:0000000000000260 .L0 
     /tmp/cc0omBtC.s:547    .text:0000000000000260 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/cc0omBtC.s:550    .text:0000000000000260 .L0 
     /tmp/cc0omBtC.s:553    .text:0000000000000260 .L0 
     /tmp/cc0omBtC.s:554    .text:0000000000000264 .L0 
     /tmp/cc0omBtC.s:563    .text:0000000000000284 .L0 
     /tmp/cc0omBtC.s:564    .text:0000000000000284 .L0 
     /tmp/cc0omBtC.s:565    .text:0000000000000284 .L0 
     /tmp/cc0omBtC.s:566    .text:0000000000000284 .L0 
     /tmp/cc0omBtC.s:567    .text:0000000000000284 .L0 
     /tmp/cc0omBtC.s:568    .text:0000000000000284 .L0 
     /tmp/cc0omBtC.s:569    .text:0000000000000284 .L0 
     /tmp/cc0omBtC.s:570    .text:0000000000000284 .L0 
     /tmp/cc0omBtC.s:572    .text:0000000000000288 .L0 
     /tmp/cc0omBtC.s:574    .text:0000000000000288 .L0 
     /tmp/cc0omBtC.s:575    .text:0000000000000288 .L0 
       src/Riscv.cpp:95     .text:0000000000000288 .L0 
     /tmp/cc0omBtC.s:585    .text:000000000000028c .L0 
     /tmp/cc0omBtC.s:586    .text:000000000000028c .L0 
     /tmp/cc0omBtC.s:587    .text:000000000000028c .L0 
    src/../h/Riscv.h:89     .text:000000000000028c .L0 
     /tmp/cc0omBtC.s:595    .text:0000000000000294 .L0 
     /tmp/cc0omBtC.s:596    .text:0000000000000294 .L0 
     /tmp/cc0omBtC.s:602    .text:0000000000000298 .L0 
     /tmp/cc0omBtC.s:610    .text:00000000000002b0 .L0 
     /tmp/cc0omBtC.s:611    .text:00000000000002b0 .L0 
     /tmp/cc0omBtC.s:612    .text:00000000000002b0 .L0 
     /tmp/cc0omBtC.s:617    .text:00000000000002c0 .L0 
     /tmp/cc0omBtC.s:618    .text:00000000000002c0 .L0 
     /tmp/cc0omBtC.s:623    .text:00000000000002d4 .L0 
     /tmp/cc0omBtC.s:624    .text:00000000000002d4 .L0 
     /tmp/cc0omBtC.s:628    .text:00000000000002dc .L0 
     /tmp/cc0omBtC.s:629    .text:00000000000002dc .L0 
     /tmp/cc0omBtC.s:635    .text:00000000000002e8 .L0 
     /tmp/cc0omBtC.s:636    .text:00000000000002e8 .L0 
     /tmp/cc0omBtC.s:641    .text:00000000000002ec .L0 
     /tmp/cc0omBtC.s:643    .text:00000000000002f0 .L0 
     /tmp/cc0omBtC.s:650    .text:00000000000002f4 .L0 
     /tmp/cc0omBtC.s:651    .text:00000000000002f4 .L0 
GAS LISTING /tmp/cc0omBtC.s 			page 39


     /tmp/cc0omBtC.s:652    .text:00000000000002f4 .L0 
     /tmp/cc0omBtC.s:659    .text:00000000000002fc .L0 
     /tmp/cc0omBtC.s:666    .text:0000000000000300 .L0 
     /tmp/cc0omBtC.s:672    .text:0000000000000308 .L0 
     /tmp/cc0omBtC.s:673    .text:0000000000000308 .L0 
     /tmp/cc0omBtC.s:677    .text:0000000000000310 .L0 
     /tmp/cc0omBtC.s:678    .text:0000000000000314 .L0 
     /tmp/cc0omBtC.s:679    .text:0000000000000314 .L0 
     /tmp/cc0omBtC.s:681    .text:0000000000000318 .L0 
     /tmp/cc0omBtC.s:682    .text:0000000000000318 .L0 
     /tmp/cc0omBtC.s:684    .text:000000000000031c .L0 
     /tmp/cc0omBtC.s:686    .text:0000000000000320 .L0 
     /tmp/cc0omBtC.s:688    .text:0000000000000324 .L0 
     /tmp/cc0omBtC.s:690    .text:0000000000000328 .L0 
     /tmp/cc0omBtC.s:692    .text:000000000000032c .L0 
     /tmp/cc0omBtC.s:694    .text:0000000000000330 .L0 
     /tmp/cc0omBtC.s:696    .text:0000000000000334 .L0 
     /tmp/cc0omBtC.s:700    .text:0000000000000338 .L0 
     /tmp/cc0omBtC.s:708    .text:0000000000000338 .L0 
     /tmp/cc0omBtC.s:709    .text:0000000000000338 .L0 
     /tmp/cc0omBtC.s:710    .text:0000000000000338 .L0 
    src/../h/Riscv.h:99     .text:0000000000000338 .L0 
     /tmp/cc0omBtC.s:718    .text:0000000000000340 .L0 
     /tmp/cc0omBtC.s:719    .text:0000000000000340 .L0 
     /tmp/cc0omBtC.s:726    .text:0000000000000344 .L0 
     /tmp/cc0omBtC.s:727    .text:0000000000000344 .L0 
     /tmp/cc0omBtC.s:728    .text:0000000000000344 .L0 
    src/../h/Riscv.h:155    .text:0000000000000344 .L0 
     /tmp/cc0omBtC.s:736    .text:000000000000034c .L0 
     /tmp/cc0omBtC.s:737    .text:000000000000034c .L0 
     /tmp/cc0omBtC.s:742    .text:0000000000000350 .L0 
     /tmp/cc0omBtC.s:743    .text:0000000000000350 .L0 
     /tmp/cc0omBtC.s:746    .text:000000000000035c .L0 
     /tmp/cc0omBtC.s:747    .text:000000000000035c .L0 
     /tmp/cc0omBtC.s:752    .text:0000000000000364 .L0 
     /tmp/cc0omBtC.s:753    .text:0000000000000364 .L0 
    src/../h/Riscv.h:160    .text:0000000000000364 .L0 
     /tmp/cc0omBtC.s:765    .text:0000000000000368 .L0 
     /tmp/cc0omBtC.s:766    .text:0000000000000368 .L0 
    src/../h/Riscv.h:104    .text:0000000000000368 .L0 
     /tmp/cc0omBtC.s:773    .text:000000000000036c .L0 
     /tmp/cc0omBtC.s:781    .text:0000000000000370 .L0 
     /tmp/cc0omBtC.s:782    .text:0000000000000370 .L0 
     /tmp/cc0omBtC.s:783    .text:0000000000000370 .L0 
     /tmp/cc0omBtC.s:784    .text:0000000000000370 .L0 
       src/Riscv.cpp:135    .text:0000000000000370 .L0 
     /tmp/cc0omBtC.s:794    .text:0000000000000374 .L0 
     /tmp/cc0omBtC.s:795    .text:0000000000000374 .L0 
     /tmp/cc0omBtC.s:796    .text:0000000000000374 .L0 
    src/../h/Riscv.h:99     .text:0000000000000374 .L0 
     /tmp/cc0omBtC.s:805    .text:000000000000037c .L0 
     /tmp/cc0omBtC.s:806    .text:000000000000037c .L0 
     /tmp/cc0omBtC.s:811    .text:0000000000000380 .L0 
     /tmp/cc0omBtC.s:812    .text:0000000000000380 .L0 
     /tmp/cc0omBtC.s:816    .text:0000000000000384 .L0 
     /tmp/cc0omBtC.s:826    .text:000000000000038c .L0 
     /tmp/cc0omBtC.s:838    .text:0000000000000394 .L0 
GAS LISTING /tmp/cc0omBtC.s 			page 40


     /tmp/cc0omBtC.s:852    .text:000000000000039c .L0 
     /tmp/cc0omBtC.s:868    .text:00000000000003a4 .L0 
     /tmp/cc0omBtC.s:886    .text:00000000000003ac .L0 
     /tmp/cc0omBtC.s:899    .text:00000000000003b4 .L0 
     /tmp/cc0omBtC.s:900    .text:00000000000003b4 .L0 
    src/../h/Riscv.h:104    .text:00000000000003b4 .L0 
     /tmp/cc0omBtC.s:907    .text:00000000000003b8 .L0 
     /tmp/cc0omBtC.s:915    .text:00000000000003bc .L0 
     /tmp/cc0omBtC.s:916    .text:00000000000003bc .L0 
       src/Riscv.cpp:143    .text:00000000000003bc .L0 
     /tmp/cc0omBtC.s:923    .text:00000000000003c0 .L0 
     /tmp/cc0omBtC.s:924    .text:00000000000003c0 .L0 
     /tmp/cc0omBtC.s:926    .text:00000000000003c0 .L0 
     /tmp/cc0omBtC.s:931    .text:00000000000003cc .L0 
       src/Riscv.cpp:146    .text:00000000000003cc .L0 
     /tmp/cc0omBtC.s:944    .text:00000000000003d4 .L0 
     /tmp/cc0omBtC.s:945    .text:00000000000003d4 .L0 
       src/Riscv.cpp:151    .text:00000000000003d4 .L0 
     /tmp/cc0omBtC.s:952    .text:00000000000003d8 .L0 
     /tmp/cc0omBtC.s:954    .text:00000000000003d8 .L0 
     /tmp/cc0omBtC.s:957    .text:00000000000003e0 .L0 
       src/Riscv.cpp:153    .text:00000000000003e0 .L0 
     /tmp/cc0omBtC.s:970    .text:00000000000003e8 .L0 
     /tmp/cc0omBtC.s:971    .text:00000000000003e8 .L0 
     /tmp/cc0omBtC.s:972    .text:00000000000003e8 .L0 
     /tmp/cc0omBtC.s:973    .text:00000000000003e8 .L0 
       src/Riscv.cpp:161    .text:00000000000003e8 .L0 
     /tmp/cc0omBtC.s:980    .text:00000000000003ec .L0 
       src/Riscv.cpp:162    .text:00000000000003ec .L0 
     /tmp/cc0omBtC.s:986    .text:00000000000003f0 .L0 
       src/Riscv.cpp:163    .text:00000000000003f0 .L0 
     /tmp/cc0omBtC.s:992    .text:00000000000003f4 .L0 
     /tmp/cc0omBtC.s:994    .text:00000000000003f4 .L0 
     /tmp/cc0omBtC.s:1008   .text:000000000000041c .L0 
     /tmp/cc0omBtC.s:1009   .text:000000000000041c .L0 
     /tmp/cc0omBtC.s:1011   .text:0000000000000420 .L0 
     /tmp/cc0omBtC.s:1013   .text:0000000000000424 .L0 
       src/Riscv.cpp:178    .text:0000000000000424 .L0 
     /tmp/cc0omBtC.s:1022   .text:000000000000042c .L0 
       src/Riscv.cpp:176    .text:000000000000042c .L0 
     /tmp/cc0omBtC.s:1037   .text:0000000000000434 .L0 
     /tmp/cc0omBtC.s:1038   .text:0000000000000434 .L0 
     /tmp/cc0omBtC.s:1039   .text:0000000000000434 .L0 
    src/../h/Riscv.h:155    .text:0000000000000434 .L0 
     /tmp/cc0omBtC.s:1048   .text:000000000000043c .L0 
     /tmp/cc0omBtC.s:1049   .text:000000000000043c .L0 
     /tmp/cc0omBtC.s:1054   .text:0000000000000440 .L0 
     /tmp/cc0omBtC.s:1055   .text:0000000000000440 .L0 
     /tmp/cc0omBtC.s:1059   .text:000000000000044c .L0 
     /tmp/cc0omBtC.s:1060   .text:000000000000044c .L0 
     /tmp/cc0omBtC.s:1065   .text:0000000000000454 .L0 
     /tmp/cc0omBtC.s:1066   .text:0000000000000454 .L0 
    src/../h/Riscv.h:160    .text:0000000000000454 .L0 
     /tmp/cc0omBtC.s:1073   .text:0000000000000458 .L0 
     /tmp/cc0omBtC.s:1082   .text:000000000000045c .L0 
     /tmp/cc0omBtC.s:1083   .text:000000000000045c .L0 
     /tmp/cc0omBtC.s:1087   .text:0000000000000468 .L0 
GAS LISTING /tmp/cc0omBtC.s 			page 41


     /tmp/cc0omBtC.s:1091   .text:000000000000046c .L0 
     /tmp/cc0omBtC.s:1092   .text:000000000000046c .L0 
     /tmp/cc0omBtC.s:1093   .text:000000000000046c .L0 
    src/../h/Riscv.h:155    .text:000000000000046c .L0 
     /tmp/cc0omBtC.s:1101   .text:0000000000000474 .L0 
     /tmp/cc0omBtC.s:1102   .text:0000000000000474 .L0 
     /tmp/cc0omBtC.s:1107   .text:0000000000000478 .L0 
     /tmp/cc0omBtC.s:1108   .text:0000000000000478 .L0 
     /tmp/cc0omBtC.s:1111   .text:0000000000000484 .L0 
     /tmp/cc0omBtC.s:1112   .text:0000000000000484 .L0 
     /tmp/cc0omBtC.s:1120   .text:000000000000049c .L0 
     /tmp/cc0omBtC.s:1121   .text:000000000000049c .L0 
     /tmp/cc0omBtC.s:1122   .text:000000000000049c .L0 
     /tmp/cc0omBtC.s:1128   .text:00000000000004a4 .L0 
     /tmp/cc0omBtC.s:1129   .text:00000000000004a4 .L0 
     /tmp/cc0omBtC.s:1134   .text:00000000000004ac .L0 
     /tmp/cc0omBtC.s:1135   .text:00000000000004ac .L0 
    src/../h/Riscv.h:160    .text:00000000000004ac .L0 
     /tmp/cc0omBtC.s:1142   .text:00000000000004b0 .L0 
     /tmp/cc0omBtC.s:1148   .text:00000000000004b4 .L0 
       src/Riscv.cpp:191    .text:00000000000004b4 .L0 
     /tmp/cc0omBtC.s:1155   .text:00000000000004b8 .L0 
     /tmp/cc0omBtC.s:1162   .text:00000000000004bc .L0 
     /tmp/cc0omBtC.s:1163   .text:00000000000004bc .L0 
       src/Riscv.cpp:206    .text:00000000000004bc .L0 
     /tmp/cc0omBtC.s:1173   .text:00000000000004c0 .L0 
     /tmp/cc0omBtC.s:1174   .text:00000000000004c0 .L0 
     /tmp/cc0omBtC.s:1175   .text:00000000000004c0 .L0 
    src/../h/Riscv.h:155    .text:00000000000004c0 .L0 
     /tmp/cc0omBtC.s:1184   .text:00000000000004c8 .L0 
     /tmp/cc0omBtC.s:1185   .text:00000000000004c8 .L0 
     /tmp/cc0omBtC.s:1190   .text:00000000000004cc .L0 
     /tmp/cc0omBtC.s:1191   .text:00000000000004cc .L0 
     /tmp/cc0omBtC.s:1194   .text:00000000000004d8 .L0 
     /tmp/cc0omBtC.s:1195   .text:00000000000004d8 .L0 
     /tmp/cc0omBtC.s:1201   .text:00000000000004e4 .L0 
     /tmp/cc0omBtC.s:1202   .text:00000000000004e4 .L0 
     /tmp/cc0omBtC.s:1210   .text:00000000000004ec .L0 
     /tmp/cc0omBtC.s:1211   .text:00000000000004ec .L0 
     /tmp/cc0omBtC.s:1212   .text:00000000000004ec .L0 
     /tmp/cc0omBtC.s:1217   .text:00000000000004f0 .L0 
     /tmp/cc0omBtC.s:1218   .text:00000000000004f0 .L0 
     /tmp/cc0omBtC.s:1221   .text:00000000000004f8 .L0 
     /tmp/cc0omBtC.s:1222   .text:00000000000004f8 .L0 
     /tmp/cc0omBtC.s:1228   .text:0000000000000500 .L0 
     /tmp/cc0omBtC.s:1229   .text:0000000000000500 .L0 
    src/../h/Riscv.h:160    .text:0000000000000500 .L0 
     /tmp/cc0omBtC.s:1239   .text:0000000000000504 .L0 
       src/Riscv.cpp:216    .text:0000000000000504 .L0 
     /tmp/cc0omBtC.s:1256   .text:0000000000000510 .L0 
     /tmp/cc0omBtC.s:1270   .text:0000000000000528 .L0 
     /tmp/cc0omBtC.s:1298   .rodata:0000000000000000 .LANCHOR0
     /tmp/cc0omBtC.s:1301   .rodata:0000000000000000 _ZZN5Riscv12printIntegerEmE6digits
     /tmp/cc0omBtC.s:1311   .text:0000000000000528 .L0 
     /tmp/cc0omBtC.s:30     .text:0000000000000018 .L0 
     /tmp/cc0omBtC.s:71     .text:0000000000000058 .L0 
     /tmp/cc0omBtC.s:465    .text:00000000000001dc .L0 
GAS LISTING /tmp/cc0omBtC.s 			page 42


     /tmp/cc0omBtC.s:541    .rodata.str1.8:0000000000000000 .LC0
     /tmp/cc0omBtC.s:612    .text:00000000000002b0 .L0 
     /tmp/cc0omBtC.s:618    .text:00000000000002c0 .L0 
     /tmp/cc0omBtC.s:629    .text:00000000000002dc .L0 
     /tmp/cc0omBtC.s:743    .text:0000000000000350 .L0 
     /tmp/cc0omBtC.s:1055   .text:0000000000000440 .L0 
     /tmp/cc0omBtC.s:1083   .text:000000000000045c .L0 
     /tmp/cc0omBtC.s:1108   .text:0000000000000478 .L0 
     /tmp/cc0omBtC.s:1112   .text:0000000000000484 .L0 
     /tmp/cc0omBtC.s:1114   .text:0000000000000490 .L0 
     /tmp/cc0omBtC.s:1191   .text:00000000000004cc .L0 
     /tmp/cc0omBtC.s:1195   .text:00000000000004d8 .L0 
     /tmp/cc0omBtC.s:351    .text:0000000000000170 .L15
     /tmp/cc0omBtC.s:332    .text:0000000000000158 .L16
     /tmp/cc0omBtC.s:455    .text:00000000000001cc .L19
     /tmp/cc0omBtC.s:497    .text:000000000000022c .L20
     /tmp/cc0omBtC.s:483    .text:000000000000020c .L21
     /tmp/cc0omBtC.s:661    .text:0000000000000300 .L40
     /tmp/cc0omBtC.s:669    .text:0000000000000308 .L26
     /tmp/cc0omBtC.s:699    .text:0000000000000338 .L41
     /tmp/cc0omBtC.s:775    .text:0000000000000370 .L42
     /tmp/cc0omBtC.s:645    .text:00000000000002f4 .L27
     /tmp/cc0omBtC.s:909    .text:00000000000003bc .L43
     /tmp/cc0omBtC.s:940    .text:00000000000003d4 .L44
     /tmp/cc0omBtC.s:966    .text:00000000000003e8 .L45
     /tmp/cc0omBtC.s:1030   .text:0000000000000434 .L46
     /tmp/cc0omBtC.s:1075   .text:000000000000045c .L47
     /tmp/cc0omBtC.s:1157   .text:00000000000004bc .L48
     /tmp/cc0omBtC.s:675    .text:0000000000000310 .L23
     /tmp/cc0omBtC.s:889    .text:00000000000003b4 .L29
     /tmp/cc0omBtC.s:1020   .text:000000000000042c .L49
     /tmp/cc0omBtC.s:1144   .text:00000000000004b4 .L50
     /tmp/cc0omBtC.s:48     .text:0000000000000028 .LEHB0
     /tmp/cc0omBtC.s:10     .text:0000000000000000 .LFB21
     /tmp/cc0omBtC.s:51     .text:0000000000000030 .LEHE0
     /tmp/cc0omBtC.s:55     .text:000000000000003c .LEHB1
     /tmp/cc0omBtC.s:58     .text:0000000000000044 .LEHE1
     /tmp/cc0omBtC.s:100    .text:0000000000000084 .L3
     /tmp/cc0omBtC.s:62     .text:0000000000000048 .LEHB2
     /tmp/cc0omBtC.s:69     .text:0000000000000058 .LEHE2
     /tmp/cc0omBtC.s:108    .text:0000000000000098 .LEHB3
     /tmp/cc0omBtC.s:111    .text:00000000000000a0 .LEHE3
     /tmp/cc0omBtC.s:613    .text:00000000000002b8 .LEHB4
     /tmp/cc0omBtC.s:548    .text:0000000000000260 .LFB28
     /tmp/cc0omBtC.s:997    .text:0000000000000400 .LEHE4
     /tmp/cc0omBtC.s:1003   .text:0000000000000414 .LEHB5
     /tmp/cc0omBtC.s:1006   .text:000000000000041c .LEHE5
     /tmp/cc0omBtC.s:1248   .text:000000000000050c .L38
     /tmp/cc0omBtC.s:1058   .text:000000000000044c .LEHB6
     /tmp/cc0omBtC.s:1224   .text:0000000000000500 .LEHE6
     /tmp/cc0omBtC.s:1260   .text:0000000000000520 .LEHB7
     /tmp/cc0omBtC.s:1263   .text:0000000000000528 .LEHE7
     /tmp/cc0omBtC.s:3643   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cc0omBtC.s:5481   .debug_str:0000000000000618 .LASF203
     /tmp/cc0omBtC.s:5345   .debug_str:0000000000000258 .LASF204
     /tmp/cc0omBtC.s:5609   .debug_str:00000000000009d5 .LASF205
     /tmp/cc0omBtC.s:5      .text:0000000000000000 .Ltext0
GAS LISTING /tmp/cc0omBtC.s 			page 43


     /tmp/cc0omBtC.s:1304   .text:0000000000000528 .Letext0
     /tmp/cc0omBtC.s:5269   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cc0omBtC.s:5421   .debug_str:000000000000045c .LASF0
     /tmp/cc0omBtC.s:5537   .debug_str:000000000000082f .LASF3
     /tmp/cc0omBtC.s:5453   .debug_str:000000000000053a .LASF1
     /tmp/cc0omBtC.s:5545   .debug_str:000000000000084f .LASF2
     /tmp/cc0omBtC.s:5553   .debug_str:000000000000088a .LASF4
     /tmp/cc0omBtC.s:5439   .debug_str:00000000000004cd .LASF5
     /tmp/cc0omBtC.s:5283   .debug_str:0000000000000065 .LASF6
     /tmp/cc0omBtC.s:5523   .debug_str:00000000000007d5 .LASF7
     /tmp/cc0omBtC.s:5513   .debug_str:0000000000000793 .LASF8
     /tmp/cc0omBtC.s:5443   .debug_str:0000000000000501 .LASF9
     /tmp/cc0omBtC.s:5401   .debug_str:00000000000003bd .LASF10
     /tmp/cc0omBtC.s:5407   .debug_str:00000000000003f9 .LASF11
     /tmp/cc0omBtC.s:5337   .debug_str:0000000000000227 .LASF12
     /tmp/cc0omBtC.s:5389   .debug_str:0000000000000384 .LASF13
     /tmp/cc0omBtC.s:5347   .debug_str:0000000000000266 .LASF14
     /tmp/cc0omBtC.s:5335   .debug_str:0000000000000217 .LASF15
     /tmp/cc0omBtC.s:5583   .debug_str:000000000000094d .LASF16
     /tmp/cc0omBtC.s:5377   .debug_str:0000000000000331 .LASF17
     /tmp/cc0omBtC.s:5573   .debug_str:0000000000000906 .LASF18
     /tmp/cc0omBtC.s:5643   .debug_str:0000000000000ac9 .LASF91
     /tmp/cc0omBtC.s:5535   .debug_str:0000000000000824 .LASF22
     /tmp/cc0omBtC.s:5459   .debug_str:0000000000000566 .LASF19
     /tmp/cc0omBtC.s:5381   .debug_str:0000000000000362 .LASF20
     /tmp/cc0omBtC.s:5659   .debug_str:0000000000000b21 .LASF21
     /tmp/cc0omBtC.s:5635   .debug_str:0000000000000a98 .LASF23
     /tmp/cc0omBtC.s:5383   .debug_str:000000000000036b .LASF24
     /tmp/cc0omBtC.s:5597   .debug_str:000000000000097f .LASF25
     /tmp/cc0omBtC.s:5361   .debug_str:00000000000002c7 .LASF26
     /tmp/cc0omBtC.s:5487   .debug_str:00000000000006d4 .LASF27
     /tmp/cc0omBtC.s:5475   .debug_str:00000000000005da .LASF29
     /tmp/cc0omBtC.s:5375   .debug_str:0000000000000327 .LASF28
     /tmp/cc0omBtC.s:5279   .debug_str:0000000000000047 .LASF30
     /tmp/cc0omBtC.s:5333   .debug_str:0000000000000206 .LASF31
     /tmp/cc0omBtC.s:5463   .debug_str:0000000000000574 .LASF32
     /tmp/cc0omBtC.s:5435   .debug_str:00000000000004ae .LASF33
     /tmp/cc0omBtC.s:5351   .debug_str:0000000000000288 .LASF34
     /tmp/cc0omBtC.s:5667   .debug_str:0000000000000b56 .LASF35
     /tmp/cc0omBtC.s:5295   .debug_str:00000000000000b5 .LASF37
     /tmp/cc0omBtC.s:5521   .debug_str:00000000000007c8 .LASF36
     /tmp/cc0omBtC.s:5301   .debug_str:00000000000000e3 .LASF38
     /tmp/cc0omBtC.s:5561   .debug_str:00000000000008b3 .LASF39
     /tmp/cc0omBtC.s:5379   .debug_str:0000000000000347 .LASF40
     /tmp/cc0omBtC.s:5427   .debug_str:000000000000047e .LASF41
     /tmp/cc0omBtC.s:5655   .debug_str:0000000000000aff .LASF42
     /tmp/cc0omBtC.s:5627   .debug_str:0000000000000a68 .LASF45
     /tmp/cc0omBtC.s:5619   .debug_str:0000000000000a26 .LASF47
     /tmp/cc0omBtC.s:5541   .debug_str:000000000000083b .LASF43
     /tmp/cc0omBtC.s:5499   .debug_str:0000000000000729 .LASF44
     /tmp/cc0omBtC.s:5529   .debug_str:00000000000007f6 .LASF46
     /tmp/cc0omBtC.s:5531   .debug_str:00000000000007fd .LASF48
     /tmp/cc0omBtC.s:5495   .debug_str:000000000000070e .LASF49
     /tmp/cc0omBtC.s:5445   .debug_str:0000000000000514 .LASF50
     /tmp/cc0omBtC.s:5657   .debug_str:0000000000000b19 .LASF51
     /tmp/cc0omBtC.s:5605   .debug_str:00000000000009b7 .LASF52
     /tmp/cc0omBtC.s:5493   .debug_str:0000000000000706 .LASF53
GAS LISTING /tmp/cc0omBtC.s 			page 44


     /tmp/cc0omBtC.s:5497   .debug_str:0000000000000715 .LASF54
     /tmp/cc0omBtC.s:5483   .debug_str:00000000000006ba .LASF55
     /tmp/cc0omBtC.s:5533   .debug_str:0000000000000810 .LASF56
     /tmp/cc0omBtC.s:5691   .debug_str:0000000000000bff .LASF57
     /tmp/cc0omBtC.s:5431   .debug_str:0000000000000491 .LASF58
     /tmp/cc0omBtC.s:5579   .debug_str:000000000000093f .LASF59
     /tmp/cc0omBtC.s:5555   .debug_str:0000000000000891 .LASF60
     /tmp/cc0omBtC.s:5557   .debug_str:00000000000008a4 .LASF61
     /tmp/cc0omBtC.s:5341   .debug_str:000000000000023b .LASF62
     /tmp/cc0omBtC.s:5371   .debug_str:000000000000030f .LASF63
     /tmp/cc0omBtC.s:5417   .debug_str:0000000000000432 .LASF64
     /tmp/cc0omBtC.s:5429   .debug_str:000000000000048b .LASF65
     /tmp/cc0omBtC.s:5365   .debug_str:00000000000002e6 .LASF66
     /tmp/cc0omBtC.s:5285   .debug_str:000000000000006c .LASF67
     /tmp/cc0omBtC.s:5549   .debug_str:0000000000000869 .LASF68
     /tmp/cc0omBtC.s:5543   .debug_str:0000000000000844 .LASF69
     /tmp/cc0omBtC.s:5683   .debug_str:0000000000000bc8 .LASF70
     /tmp/cc0omBtC.s:5645   .debug_str:0000000000000acf .LASF71
     /tmp/cc0omBtC.s:5663   .debug_str:0000000000000b39 .LASF72
     /tmp/cc0omBtC.s:5641   .debug_str:0000000000000abf .LASF73
     /tmp/cc0omBtC.s:5477   .debug_str:00000000000005f2 .LASF74
     /tmp/cc0omBtC.s:5413   .debug_str:0000000000000421 .LASF75
     /tmp/cc0omBtC.s:5419   .debug_str:0000000000000444 .LASF76
     /tmp/cc0omBtC.s:5625   .debug_str:0000000000000a59 .LASF77
     /tmp/cc0omBtC.s:5405   .debug_str:00000000000003dd .LASF78
     /tmp/cc0omBtC.s:5519   .debug_str:00000000000007b3 .LASF79
     /tmp/cc0omBtC.s:5441   .debug_str:00000000000004df .LASF80
     /tmp/cc0omBtC.s:5539   .debug_str:0000000000000834 .LASF81
     /tmp/cc0omBtC.s:5281   .debug_str:000000000000005d .LASF82
     /tmp/cc0omBtC.s:5315   .debug_str:0000000000000171 .LASF83
     /tmp/cc0omBtC.s:5623   .debug_str:0000000000000a4d .LASF84
     /tmp/cc0omBtC.s:5317   .debug_str:0000000000000180 .LASF85
     /tmp/cc0omBtC.s:5485   .debug_str:00000000000006c2 .LASF86
     /tmp/cc0omBtC.s:5409   .debug_str:0000000000000407 .LASF87
     /tmp/cc0omBtC.s:5639   .debug_str:0000000000000aac .LASF88
     /tmp/cc0omBtC.s:5331   .debug_str:00000000000001f2 .LASF89
     /tmp/cc0omBtC.s:5591   .debug_str:000000000000096c .LASF90
     /tmp/cc0omBtC.s:5611   .debug_str:00000000000009f8 .LASF92
     /tmp/cc0omBtC.s:5629   .debug_str:0000000000000a71 .LASF95
     /tmp/cc0omBtC.s:5447   .debug_str:0000000000000527 .LASF93
     /tmp/cc0omBtC.s:5339   .debug_str:0000000000000236 .LASF94
     /tmp/cc0omBtC.s:5589   .debug_str:0000000000000966 .LASF96
     /tmp/cc0omBtC.s:5461   .debug_str:000000000000056f .LASF97
     /tmp/cc0omBtC.s:5671   .debug_str:0000000000000b6d .LASF116
     /tmp/cc0omBtC.s:5297   .debug_str:00000000000000d0 .LASF99
     /tmp/cc0omBtC.s:5349   .debug_str:0000000000000276 .LASF101
     /tmp/cc0omBtC.s:5425   .debug_str:0000000000000479 .LASF98
     /tmp/cc0omBtC.s:5567   .debug_str:00000000000008db .LASF103
     /tmp/cc0omBtC.s:5451   .debug_str:0000000000000535 .LASF100
     /tmp/cc0omBtC.s:5469   .debug_str:00000000000005b2 .LASF102
     /tmp/cc0omBtC.s:5369   .debug_str:0000000000000301 .LASF104
     /tmp/cc0omBtC.s:5665   .debug_str:0000000000000b4f .LASF105
     /tmp/cc0omBtC.s:5311   .debug_str:0000000000000159 .LASF106
     /tmp/cc0omBtC.s:5593   .debug_str:0000000000000971 .LASF107
     /tmp/cc0omBtC.s:5329   .debug_str:00000000000001ec .LASF108
     /tmp/cc0omBtC.s:5569   .debug_str:00000000000008f0 .LASF109
     /tmp/cc0omBtC.s:5343   .debug_str:000000000000024e .LASF110
GAS LISTING /tmp/cc0omBtC.s 			page 45


     /tmp/cc0omBtC.s:5319   .debug_str:0000000000000193 .LASF111
     /tmp/cc0omBtC.s:5515   .debug_str:00000000000007a6 .LASF112
     /tmp/cc0omBtC.s:5449   .debug_str:000000000000052c .LASF113
     /tmp/cc0omBtC.s:5587   .debug_str:000000000000095e .LASF114
     /tmp/cc0omBtC.s:5415   .debug_str:000000000000042c .LASF115
     /tmp/cc0omBtC.s:5491   .debug_str:00000000000006ee .LASF117
     /tmp/cc0omBtC.s:5503   .debug_str:0000000000000745 .LASF206
     /tmp/cc0omBtC.s:5647   .debug_str:0000000000000ad9 .LASF118
     /tmp/cc0omBtC.s:5681   .debug_str:0000000000000bbc .LASF119
     /tmp/cc0omBtC.s:5677   .debug_str:0000000000000ba2 .LASF120
     /tmp/cc0omBtC.s:5603   .debug_str:00000000000009a7 .LASF121
     /tmp/cc0omBtC.s:5367   .debug_str:00000000000002f8 .LASF122
     /tmp/cc0omBtC.s:5293   .debug_str:00000000000000a2 .LASF123
     /tmp/cc0omBtC.s:5455   .debug_str:000000000000054d .LASF124
     /tmp/cc0omBtC.s:5507   .debug_str:000000000000075d .LASF125
     /tmp/cc0omBtC.s:5595   .debug_str:0000000000000977 .LASF126
     /tmp/cc0omBtC.s:5649   .debug_str:0000000000000ade .LASF127
     /tmp/cc0omBtC.s:5563   .debug_str:00000000000008c1 .LASF128
     /tmp/cc0omBtC.s:5473   .debug_str:00000000000005cd .LASF129
     /tmp/cc0omBtC.s:5465   .debug_str:0000000000000592 .LASF130
     /tmp/cc0omBtC.s:5685   .debug_str:0000000000000be0 .LASF131
     /tmp/cc0omBtC.s:5393   .debug_str:000000000000039b .LASF132
     /tmp/cc0omBtC.s:5423   .debug_str:0000000000000469 .LASF133
     /tmp/cc0omBtC.s:5437   .debug_str:00000000000004c0 .LASF134
     /tmp/cc0omBtC.s:5565   .debug_str:00000000000008d2 .LASF135
     /tmp/cc0omBtC.s:5363   .debug_str:00000000000002d3 .LASF136
     /tmp/cc0omBtC.s:5551   .debug_str:0000000000000881 .LASF137
     /tmp/cc0omBtC.s:5577   .debug_str:0000000000000923 .LASF138
     /tmp/cc0omBtC.s:5489   .debug_str:00000000000006df .LASF139
     /tmp/cc0omBtC.s:5273   .debug_str:0000000000000010 .LASF140
     /tmp/cc0omBtC.s:5661   .debug_str:0000000000000b2a .LASF141
     /tmp/cc0omBtC.s:5511   .debug_str:0000000000000779 .LASF142
     /tmp/cc0omBtC.s:5571   .debug_str:00000000000008f8 .LASF143
     /tmp/cc0omBtC.s:5527   .debug_str:00000000000007ea .LASF144
     /tmp/cc0omBtC.s:5271   .debug_str:0000000000000000 .LASF145
     /tmp/cc0omBtC.s:5669   .debug_str:0000000000000b62 .LASF146
     /tmp/cc0omBtC.s:5479   .debug_str:0000000000000608 .LASF147
     /tmp/cc0omBtC.s:5373   .debug_str:0000000000000315 .LASF148
     /tmp/cc0omBtC.s:5633   .debug_str:0000000000000a7b .LASF149
     /tmp/cc0omBtC.s:5321   .debug_str:000000000000019c .LASF150
     /tmp/cc0omBtC.s:5613   .debug_str:00000000000009fe .LASF151
     /tmp/cc0omBtC.s:5559   .debug_str:00000000000008ab .LASF170
     /tmp/cc0omBtC.s:5607   .debug_str:00000000000009cb .LASF152
     /tmp/cc0omBtC.s:5509   .debug_str:000000000000076d .LASF153
     /tmp/cc0omBtC.s:5355   .debug_str:00000000000002ad .LASF154
     /tmp/cc0omBtC.s:5307   .debug_str:000000000000012a .LASF156
     /tmp/cc0omBtC.s:5305   .debug_str:0000000000000115 .LASF155
     /tmp/cc0omBtC.s:5327   .debug_str:00000000000001c0 .LASF157
     /tmp/cc0omBtC.s:5689   .debug_str:0000000000000bf8 .LASF207
     /tmp/cc0omBtC.s:5325   .debug_str:00000000000001af .LASF208
     /tmp/cc0omBtC.s:5277   .debug_str:0000000000000042 .LASF158
     /tmp/cc0omBtC.s:5585   .debug_str:0000000000000959 .LASF159
     /tmp/cc0omBtC.s:5467   .debug_str:00000000000005aa .LASF160
     /tmp/cc0omBtC.s:5353   .debug_str:00000000000002a7 .LASF161
     /tmp/cc0omBtC.s:5617   .debug_str:0000000000000a1e .LASF162
     /tmp/cc0omBtC.s:5313   .debug_str:0000000000000167 .LASF163
     /tmp/cc0omBtC.s:5399   .debug_str:00000000000003b3 .LASF164
GAS LISTING /tmp/cc0omBtC.s 			page 46


     /tmp/cc0omBtC.s:5289   .debug_str:0000000000000081 .LASF209
     /tmp/cc0omBtC.s:5679   .debug_str:0000000000000ba8 .LASF210
     /tmp/cc0omBtC.s:5621   .debug_str:0000000000000a3b .LASF165
     /tmp/cc0omBtC.s:5505   .debug_str:000000000000074a .LASF166
     /tmp/cc0omBtC.s:5599   .debug_str:000000000000098c .LASF167
     /tmp/cc0omBtC.s:5275   .debug_str:000000000000002a .LASF168
     /tmp/cc0omBtC.s:5291   .debug_str:0000000000000099 .LASF169
     /tmp/cc0omBtC.s:5287   .debug_str:0000000000000077 .LASF171
     /tmp/cc0omBtC.s:5411   .debug_str:000000000000041a .LASF172
     /tmp/cc0omBtC.s:5695   .debug_str:0000000000000c16 .LASF173
     /tmp/cc0omBtC.s:5457   .debug_str:0000000000000553 .LASF174
     /tmp/cc0omBtC.s:5673   .debug_str:0000000000000b7d .LASF175
     /tmp/cc0omBtC.s:5601   .debug_str:0000000000000994 .LASF176
     /tmp/cc0omBtC.s:5433   .debug_str:00000000000004a5 .LASF177
     /tmp/cc0omBtC.s:5693   .debug_str:0000000000000c07 .LASF178
     /tmp/cc0omBtC.s:1271   .text:0000000000000528 .LFE28
     /tmp/cc0omBtC.s:4765   .debug_loc:0000000000000000 .LLST15
     /tmp/cc0omBtC.s:5575   .debug_str:000000000000091c .LASF179
     /tmp/cc0omBtC.s:4800   .debug_loc:00000000000000a8 .LLST16
     /tmp/cc0omBtC.s:5245   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/cc0omBtC.s:5471   .debug_str:00000000000005c3 .LASF180
     /tmp/cc0omBtC.s:4815   .debug_loc:00000000000000f1 .LLST17
     /tmp/cc0omBtC.s:5631   .debug_str:0000000000000a76 .LASF181
     /tmp/cc0omBtC.s:4846   .debug_loc:0000000000000186 .LLST18
     /tmp/cc0omBtC.s:704    .text:0000000000000338 .LBB101
     /tmp/cc0omBtC.s:778    .text:0000000000000370 .LBE101
     /tmp/cc0omBtC.s:4857   .debug_loc:00000000000001bc .LLST20
     /tmp/cc0omBtC.s:5651   .debug_str:0000000000000ae9 .LASF182
     /tmp/cc0omBtC.s:4864   .debug_loc:00000000000001df .LLST21
     /tmp/cc0omBtC.s:706    .text:0000000000000338 .LBB102
     /tmp/cc0omBtC.s:722    .text:0000000000000344 .LBE102
     /tmp/cc0omBtC.s:724    .text:0000000000000344 .LBB104
     /tmp/cc0omBtC.s:740    .text:0000000000000350 .LBE104
     /tmp/cc0omBtC.s:750    .text:0000000000000364 .LBB106
     /tmp/cc0omBtC.s:761    .text:0000000000000368 .LBE106
     /tmp/cc0omBtC.s:4871   .debug_loc:0000000000000202 .LLST22
     /tmp/cc0omBtC.s:763    .text:0000000000000368 .LBB108
     /tmp/cc0omBtC.s:777    .text:0000000000000370 .LBE108
     /tmp/cc0omBtC.s:4878   .debug_loc:0000000000000225 .LLST23
     /tmp/cc0omBtC.s:748    .text:0000000000000364 .LVL53
     /tmp/cc0omBtC.s:913    .text:00000000000003bc .LBB159
     /tmp/cc0omBtC.s:937    .text:00000000000003d0 .LBE159
     /tmp/cc0omBtC.s:4885   .debug_loc:0000000000000248 .LLST44
     /tmp/cc0omBtC.s:5653   .debug_str:0000000000000af1 .LASF183
     /tmp/cc0omBtC.s:4900   .debug_loc:0000000000000282 .LLST45
     /tmp/cc0omBtC.s:929    .text:00000000000003cc .LVL64
     /tmp/cc0omBtC.s:942    .text:00000000000003d4 .LBB153
     /tmp/cc0omBtC.s:963    .text:00000000000003e4 .LBE153
     /tmp/cc0omBtC.s:5323   .debug_str:00000000000001aa .LASF184
     /tmp/cc0omBtC.s:4907   .debug_loc:00000000000002a5 .LLST42
     /tmp/cc0omBtC.s:5309   .debug_str:0000000000000152 .LASF185
     /tmp/cc0omBtC.s:4919   .debug_loc:00000000000002dc .LLST43
     /tmp/cc0omBtC.s:955    .text:00000000000003e0 .LVL67
     /tmp/cc0omBtC.s:5525   .debug_str:00000000000007dc .LASF186
     /tmp/cc0omBtC.s:4926   .debug_loc:00000000000002ff .LLST38
     /tmp/cc0omBtC.s:4937   .debug_loc:0000000000000335 .LLST39
     /tmp/cc0omBtC.s:5299   .debug_str:00000000000000d6 .LASF187
GAS LISTING /tmp/cc0omBtC.s 			page 47


     /tmp/cc0omBtC.s:4948   .debug_loc:000000000000036b .LLST40
     /tmp/cc0omBtC.s:5387   .debug_str:000000000000037d .LASF188
     /tmp/cc0omBtC.s:4959   .debug_loc:00000000000003a1 .LLST41
     /tmp/cc0omBtC.s:996    .text:0000000000000400 .LVL72
     /tmp/cc0omBtC.s:1005   .text:000000000000041c .LVL73
     /tmp/cc0omBtC.s:1258   .text:000000000000051c .LVL97
     /tmp/cc0omBtC.s:1033   .text:0000000000000434 .LBB139
     /tmp/cc0omBtC.s:1078   .text:000000000000045c .LBE139
     /tmp/cc0omBtC.s:4966   .debug_loc:00000000000003c4 .LLST36
     /tmp/cc0omBtC.s:1035   .text:0000000000000434 .LBB140
     /tmp/cc0omBtC.s:1052   .text:0000000000000440 .LBE140
     /tmp/cc0omBtC.s:1063   .text:0000000000000454 .LBB142
     /tmp/cc0omBtC.s:1077   .text:000000000000045c .LBE142
     /tmp/cc0omBtC.s:4973   .debug_loc:00000000000003e7 .LLST37
     /tmp/cc0omBtC.s:1061   .text:0000000000000454 .LVL77
     /tmp/cc0omBtC.s:1080   .text:000000000000045c .LBB130
     /tmp/cc0omBtC.s:1158   .text:00000000000004bc .LBE130
     /tmp/cc0omBtC.s:4980   .debug_loc:000000000000040a .LLST32
     /tmp/cc0omBtC.s:1089   .text:000000000000046c .LBB131
     /tmp/cc0omBtC.s:1105   .text:0000000000000478 .LBE131
     /tmp/cc0omBtC.s:1118   .text:000000000000049c .LBB133
     /tmp/cc0omBtC.s:1126   .text:00000000000004a4 .LBE133
     /tmp/cc0omBtC.s:4987   .debug_loc:000000000000042d .LLST33
     /tmp/cc0omBtC.s:4995   .debug_loc:0000000000000451 .LLST34
     /tmp/cc0omBtC.s:1132   .text:00000000000004ac .LBB135
     /tmp/cc0omBtC.s:1146   .text:00000000000004b4 .LBE135
     /tmp/cc0omBtC.s:5002   .debug_loc:0000000000000474 .LLST35
     /tmp/cc0omBtC.s:1130   .text:00000000000004ac .LVL83
     /tmp/cc0omBtC.s:1160   .text:00000000000004bc .LBB121
     /tmp/cc0omBtC.s:1245   .text:0000000000000508 .LBE121
     /tmp/cc0omBtC.s:5517   .debug_str:00000000000007ae .LASF189
     /tmp/cc0omBtC.s:5009   .debug_loc:0000000000000497 .LLST25
     /tmp/cc0omBtC.s:5016   .debug_loc:00000000000004ba .LLST26
     /tmp/cc0omBtC.s:1171   .text:00000000000004c0 .LBB122
     /tmp/cc0omBtC.s:1188   .text:00000000000004cc .LBE122
     /tmp/cc0omBtC.s:1198   .text:00000000000004e4 .LBB124
     /tmp/cc0omBtC.s:1206   .text:00000000000004ec .LBE124
     /tmp/cc0omBtC.s:5023   .debug_loc:00000000000004dd .LLST27
     /tmp/cc0omBtC.s:5031   .debug_loc:0000000000000501 .LLST28
     /tmp/cc0omBtC.s:1208   .text:00000000000004ec .LBB126
     /tmp/cc0omBtC.s:1215   .text:00000000000004f0 .LBE126
     /tmp/cc0omBtC.s:5038   .debug_loc:0000000000000524 .LLST29
     /tmp/cc0omBtC.s:5045   .debug_loc:0000000000000547 .LLST30
     /tmp/cc0omBtC.s:1226   .text:0000000000000500 .LBB128
     /tmp/cc0omBtC.s:1237   .text:0000000000000504 .LBE128
     /tmp/cc0omBtC.s:5052   .debug_loc:000000000000056a .LLST31
     /tmp/cc0omBtC.s:1219   .text:00000000000004f8 .LVL92
     /tmp/cc0omBtC.s:1223   .text:0000000000000500 .LVL93
     /tmp/cc0omBtC.s:632    .text:00000000000002e8 .LBB99
     /tmp/cc0omBtC.s:639    .text:00000000000002ec .LBE99
     /tmp/cc0omBtC.s:5059   .debug_loc:000000000000058d .LLST19
     /tmp/cc0omBtC.s:648    .text:00000000000002f4 .LBB110
     /tmp/cc0omBtC.s:663    .text:0000000000000300 .LBE110
     /tmp/cc0omBtC.s:5066   .debug_loc:00000000000005b0 .LLST24
     /tmp/cc0omBtC.s:792    .text:0000000000000374 .LBB113
     /tmp/cc0omBtC.s:809    .text:0000000000000380 .LBE113
     /tmp/cc0omBtC.s:897    .text:00000000000003b4 .LBB166
GAS LISTING /tmp/cc0omBtC.s 			page 48


     /tmp/cc0omBtC.s:911    .text:00000000000003bc .LBE166
     /tmp/cc0omBtC.s:5074   .debug_loc:00000000000005d4 .LLST46
     /tmp/cc0omBtC.s:615    .text:00000000000002c0 .LVL42
     /tmp/cc0omBtC.s:625    .text:00000000000002dc .LVL43
     /tmp/cc0omBtC.s:583    .text:000000000000028c .LBB94
     /tmp/cc0omBtC.s:599    .text:0000000000000298 .LBE94
     /tmp/cc0omBtC.s:674    .text:0000000000000310 .LVL49
     /tmp/cc0omBtC.s:1262   .text:0000000000000528 .LVL98
     /tmp/cc0omBtC.s:393    .text:0000000000000198 .LFB27
     /tmp/cc0omBtC.s:537    .text:0000000000000260 .LFE27
     /tmp/cc0omBtC.s:5081   .debug_loc:00000000000005f7 .LLST9
     /tmp/cc0omBtC.s:5095   .debug_loc:0000000000000630 .LLST10
     /tmp/cc0omBtC.s:5615   .debug_str:0000000000000a17 .LASF190
     /tmp/cc0omBtC.s:5102   .debug_loc:0000000000000653 .LLST11
     /tmp/cc0omBtC.s:5124   .debug_loc:00000000000006b2 .LLST12
     /tmp/cc0omBtC.s:410    .text:00000000000001b0 .LBB88
     /tmp/cc0omBtC.s:426    .text:00000000000001bc .LBE88
     /tmp/cc0omBtC.s:428    .text:00000000000001bc .LBB90
     /tmp/cc0omBtC.s:440    .text:00000000000001c4 .LBE90
     /tmp/cc0omBtC.s:5146   .debug_loc:00000000000006f3 .LLST13
     /tmp/cc0omBtC.s:511    .text:0000000000000244 .LBB92
     /tmp/cc0omBtC.s:522    .text:0000000000000248 .LBE92
     /tmp/cc0omBtC.s:5154   .debug_loc:0000000000000717 .LLST14
     /tmp/cc0omBtC.s:495    .text:0000000000000228 .LVL35
     /tmp/cc0omBtC.s:502    .text:0000000000000238 .LVL36
     /tmp/cc0omBtC.s:285    .text:0000000000000128 .LFB26
     /tmp/cc0omBtC.s:387    .text:0000000000000198 .LFE26
     /tmp/cc0omBtC.s:5581   .debug_str:0000000000000946 .LASF191
     /tmp/cc0omBtC.s:5161   .debug_loc:000000000000073a .LLST5
     /tmp/cc0omBtC.s:5172   .debug_loc:0000000000000770 .LLST6
     /tmp/cc0omBtC.s:303    .text:0000000000000144 .LBB82
     /tmp/cc0omBtC.s:319    .text:0000000000000150 .LBE82
     /tmp/cc0omBtC.s:321    .text:0000000000000150 .LBB84
     /tmp/cc0omBtC.s:334    .text:0000000000000158 .LBE84
     /tmp/cc0omBtC.s:5179   .debug_loc:0000000000000793 .LLST7
     /tmp/cc0omBtC.s:360    .text:000000000000017c .LBB86
     /tmp/cc0omBtC.s:371    .text:0000000000000180 .LBE86
     /tmp/cc0omBtC.s:5187   .debug_loc:00000000000007b7 .LLST8
     /tmp/cc0omBtC.s:344    .text:0000000000000168 .LVL19
     /tmp/cc0omBtC.s:250    .text:0000000000000108 .LFB25
     /tmp/cc0omBtC.s:279    .text:0000000000000128 .LFE25
     /tmp/cc0omBtC.s:181    .text:00000000000000c0 .LFB24
     /tmp/cc0omBtC.s:213    .text:00000000000000e0 .LFE24
     /tmp/cc0omBtC.s:192    .text:00000000000000cc .LBB80
     /tmp/cc0omBtC.s:204    .text:00000000000000d4 .LBE80
     /tmp/cc0omBtC.s:5194   .debug_loc:00000000000007da .LLST4
     /tmp/cc0omBtC.s:143    .text:00000000000000a0 .LFB23
     /tmp/cc0omBtC.s:175    .text:00000000000000c0 .LFE23
     /tmp/cc0omBtC.s:154    .text:00000000000000ac .LBB78
     /tmp/cc0omBtC.s:166    .text:00000000000000b4 .LBE78
     /tmp/cc0omBtC.s:5202   .debug_loc:00000000000007fe .LLST3
     /tmp/cc0omBtC.s:219    .text:00000000000000e0 .LFB22
     /tmp/cc0omBtC.s:244    .text:0000000000000108 .LFE22
     /tmp/cc0omBtC.s:233    .text:00000000000000f8 .LVL15
     /tmp/cc0omBtC.s:113    .text:00000000000000a0 .LFE21
     /tmp/cc0omBtC.s:5210   .debug_loc:0000000000000822 .LLST0
     /tmp/cc0omBtC.s:32     .text:0000000000000020 .LBB74
GAS LISTING /tmp/cc0omBtC.s 			page 49


     /tmp/cc0omBtC.s:44     .text:0000000000000024 .LBE74
     /tmp/cc0omBtC.s:75     .text:0000000000000064 .LBB76
     /tmp/cc0omBtC.s:84     .text:000000000000006c .LBE76
     /tmp/cc0omBtC.s:5217   .debug_loc:0000000000000845 .LLST1
     /tmp/cc0omBtC.s:5225   .debug_loc:0000000000000869 .LLST2
     /tmp/cc0omBtC.s:50     .text:0000000000000030 .LVL2
     /tmp/cc0omBtC.s:57     .text:0000000000000044 .LVL3
     /tmp/cc0omBtC.s:64     .text:0000000000000050 .LVL4
     /tmp/cc0omBtC.s:68     .text:0000000000000058 .LVL5
     /tmp/cc0omBtC.s:106    .text:0000000000000094 .LVL9
     /tmp/cc0omBtC.s:110    .text:00000000000000a0 .LVL10
     /tmp/cc0omBtC.s:5359   .debug_str:00000000000002c2 .LASF192
     /tmp/cc0omBtC.s:5637   .debug_str:0000000000000aa7 .LASF193
     /tmp/cc0omBtC.s:5397   .debug_str:00000000000003ad .LASF194
     /tmp/cc0omBtC.s:5547   .debug_str:000000000000085d .LASF195
     /tmp/cc0omBtC.s:5391   .debug_str:0000000000000393 .LASF197
     /tmp/cc0omBtC.s:5687   .debug_str:0000000000000bed .LASF196
     /tmp/cc0omBtC.s:5395   .debug_str:00000000000003a7 .LASF198
     /tmp/cc0omBtC.s:5403   .debug_str:00000000000003cd .LASF199
     /tmp/cc0omBtC.s:5675   .debug_str:0000000000000b93 .LASF211
     /tmp/cc0omBtC.s:5303   .debug_str:00000000000000fd .LASF212
     /tmp/cc0omBtC.s:5357   .debug_str:00000000000002bb .LASF200
     /tmp/cc0omBtC.s:5385   .debug_str:0000000000000377 .LASF201
     /tmp/cc0omBtC.s:5501   .debug_str:000000000000073e .LASF202
     /tmp/cc0omBtC.s:580    .text:000000000000028c .LVL40
     /tmp/cc0omBtC.s:644    .text:00000000000002f4 .LVL46
     /tmp/cc0omBtC.s:660    .text:0000000000000300 .LVL47
     /tmp/cc0omBtC.s:668    .text:0000000000000308 .LVL48
     /tmp/cc0omBtC.s:698    .text:0000000000000338 .LVL50
     /tmp/cc0omBtC.s:738    .text:0000000000000350 .LVL52
     /tmp/cc0omBtC.s:774    .text:0000000000000370 .LVL55
     /tmp/cc0omBtC.s:888    .text:00000000000003b4 .LVL60
     /tmp/cc0omBtC.s:908    .text:00000000000003bc .LVL61
     /tmp/cc0omBtC.s:1050   .text:0000000000000440 .LVL76
     /tmp/cc0omBtC.s:1074   .text:000000000000045c .LVL78
     /tmp/cc0omBtC.s:1103   .text:0000000000000478 .LVL80
     /tmp/cc0omBtC.s:1143   .text:00000000000004b4 .LVL84
     /tmp/cc0omBtC.s:1186   .text:00000000000004cc .LVL88
     /tmp/cc0omBtC.s:1247   .text:000000000000050c .LVL95
     /tmp/cc0omBtC.s:597    .text:0000000000000298 .LVL41
     /tmp/cc0omBtC.s:801    .text:0000000000000378 .LVL57
     /tmp/cc0omBtC.s:789    .text:0000000000000374 .LVL56
     /tmp/cc0omBtC.s:939    .text:00000000000003d4 .LVL65
     /tmp/cc0omBtC.s:965    .text:00000000000003e8 .LVL68
     /tmp/cc0omBtC.s:1029   .text:0000000000000434 .LVL74
     /tmp/cc0omBtC.s:1044   .text:0000000000000438 .LVL75
     /tmp/cc0omBtC.s:1084   .text:0000000000000464 .LVL79
     /tmp/cc0omBtC.s:1156   .text:00000000000004bc .LVL85
     /tmp/cc0omBtC.s:1180   .text:00000000000004c4 .LVL87
     /tmp/cc0omBtC.s:807    .text:0000000000000380 .LVL58
     /tmp/cc0omBtC.s:813    .text:0000000000000384 .LVL59
     /tmp/cc0omBtC.s:1250   .text:0000000000000510 .LVL96
     /tmp/cc0omBtC.s:720    .text:0000000000000344 .LVL51
     /tmp/cc0omBtC.s:758    .text:0000000000000368 .LVL54
     /tmp/cc0omBtC.s:921    .text:00000000000003c0 .LVL62
     /tmp/cc0omBtC.s:927    .text:00000000000003c4 .LVL63
     /tmp/cc0omBtC.s:950    .text:00000000000003d8 .LVL66
GAS LISTING /tmp/cc0omBtC.s 			page 50


     /tmp/cc0omBtC.s:984    .text:00000000000003f0 .LVL70
     /tmp/cc0omBtC.s:990    .text:00000000000003f4 .LVL71
     /tmp/cc0omBtC.s:978    .text:00000000000003ec .LVL69
     /tmp/cc0omBtC.s:1117   .text:000000000000049c .LVL81
     /tmp/cc0omBtC.s:1124   .text:00000000000004a4 .LVL82
     /tmp/cc0omBtC.s:1168   .text:00000000000004c0 .LVL86
     /tmp/cc0omBtC.s:1197   .text:00000000000004e4 .LVL89
     /tmp/cc0omBtC.s:1204   .text:00000000000004ec .LVL90
     /tmp/cc0omBtC.s:1213   .text:00000000000004f0 .LVL91
     /tmp/cc0omBtC.s:1234   .text:0000000000000504 .LVL94
     /tmp/cc0omBtC.s:631    .text:00000000000002e8 .LVL44
     /tmp/cc0omBtC.s:637    .text:00000000000002ec .LVL45
     /tmp/cc0omBtC.s:396    .text:0000000000000198 .LVL25
     /tmp/cc0omBtC.s:450    .text:00000000000001c8 .LVL28
     /tmp/cc0omBtC.s:424    .text:00000000000001bc .LVL26
     /tmp/cc0omBtC.s:506    .text:000000000000023c .LVL37
     /tmp/cc0omBtC.s:454    .text:00000000000001cc .LVL29
     /tmp/cc0omBtC.s:461    .text:00000000000001d4 .LVL30
     /tmp/cc0omBtC.s:472    .text:00000000000001f8 .LVL31
     /tmp/cc0omBtC.s:482    .text:000000000000020c .LVL33
     /tmp/cc0omBtC.s:487    .text:0000000000000210 .LVL34
     /tmp/cc0omBtC.s:478    .text:0000000000000204 .LVL32
     /tmp/cc0omBtC.s:437    .text:00000000000001c4 .LVL27
     /tmp/cc0omBtC.s:510    .text:0000000000000244 .LVL38
     /tmp/cc0omBtC.s:519    .text:0000000000000248 .LVL39
     /tmp/cc0omBtC.s:288    .text:0000000000000128 .LVL16
     /tmp/cc0omBtC.s:330    .text:0000000000000158 .LVL18
     /tmp/cc0omBtC.s:380    .text:000000000000018c .LVL24
     /tmp/cc0omBtC.s:317    .text:0000000000000150 .LVL17
     /tmp/cc0omBtC.s:355    .text:0000000000000174 .LVL21
     /tmp/cc0omBtC.s:359    .text:000000000000017c .LVL22
     /tmp/cc0omBtC.s:368    .text:0000000000000180 .LVL23
     /tmp/cc0omBtC.s:191    .text:00000000000000cc .LVL13
     /tmp/cc0omBtC.s:201    .text:00000000000000d4 .LVL14
     /tmp/cc0omBtC.s:153    .text:00000000000000ac .LVL11
     /tmp/cc0omBtC.s:163    .text:00000000000000b4 .LVL12
     /tmp/cc0omBtC.s:94     .text:0000000000000078 .LVL8
     /tmp/cc0omBtC.s:74     .text:0000000000000064 .LVL6
     /tmp/cc0omBtC.s:82     .text:000000000000006c .LVL7
     /tmp/cc0omBtC.s:1312   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/cc0omBtC.s:608    .text:00000000000002b0 .LBB97
     /tmp/cc0omBtC.s:664    .text:0000000000000300 .LBE97
     /tmp/cc0omBtC.s:702    .text:0000000000000338 .LBB169
     /tmp/cc0omBtC.s:819    .text:000000000000038c .LBE169
     /tmp/cc0omBtC.s:823    .text:000000000000038c .LBB170
     /tmp/cc0omBtC.s:830    .text:0000000000000394 .LBE170
     /tmp/cc0omBtC.s:834    .text:0000000000000394 .LBB171
     /tmp/cc0omBtC.s:843    .text:000000000000039c .LBE171
     /tmp/cc0omBtC.s:847    .text:000000000000039c .LBB172
     /tmp/cc0omBtC.s:858    .text:00000000000003a4 .LBE172
     /tmp/cc0omBtC.s:862    .text:00000000000003a4 .LBB173
     /tmp/cc0omBtC.s:875    .text:00000000000003ac .LBE173
     /tmp/cc0omBtC.s:879    .text:00000000000003ac .LBB174
     /tmp/cc0omBtC.s:1268   .text:0000000000000528 .LBE174
     /tmp/cc0omBtC.s:968    .text:00000000000003e8 .LBB147
     /tmp/cc0omBtC.s:1031   .text:0000000000000434 .LBE147
     /tmp/cc0omBtC.s:1254   .text:0000000000000510 .LBB149
GAS LISTING /tmp/cc0omBtC.s 			page 51


     /tmp/cc0omBtC.s:1264   .text:0000000000000528 .LBE149
     /tmp/cc0omBtC.s:116    .gcc_except_table:0000000000000000 .LLSDA21
     /tmp/cc0omBtC.s:1273   .gcc_except_table:0000000000000038 .LLSDA28

UNDEFINED SYMBOLS
_ZN5Riscv14supervisorTrapEv
_Znwm
_ZN6ThreadC1EPFvPvES0_
_ZN6Thread5startEv
_ZN9Scheduler3getEv
_ZN3PCB7runningE
_ZdlPv
_Unwind_Resume
__gxx_personality_v0
__putc
_ZN3PCB16timeSliceCounterE
_ZN3PCB13tryToWakePCBsEv
console_handler
_ZN3PCB8dispatchEv
_Z7kmallocm
_Z5kfreePv
_ZN3PCBnwEm
_ZN3PCBC1EPFvPvES0_S0_m
_ZN3PCB10exitingPCBE
_ZN3PCB17insertSleepingPCBEv
_ZN3PCBdlEPv
