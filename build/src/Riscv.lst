GAS LISTING /tmp/ccBTqZWy.s 			page 1


   1              		.file	"Riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10initSystemEv
   9              	_ZN5Riscv10initSystemEv:
  10              	.LFB27:
  11              		.file 1 "src/Riscv.cpp"
   1:src/Riscv.cpp **** //
   2:src/Riscv.cpp **** // Created by os on 4/27/22.
   3:src/Riscv.cpp **** //
   4:src/Riscv.cpp **** 
   5:src/Riscv.cpp **** #include "../h/Riscv.hpp"
   6:src/Riscv.cpp **** #include "../h/MemoryAllocator.hpp"
   7:src/Riscv.cpp **** #include "../h/PCB.hpp"
   8:src/Riscv.cpp **** #include "../h/syscall_cpp.hpp"
   9:src/Riscv.cpp **** #include "../h/SleepPCBList.hpp"
  10:src/Riscv.cpp **** #include "../h/KConsole.hpp"
  11:src/Riscv.cpp **** #include "../h/Tests.hpp"
  12:src/Riscv.cpp **** #include "../h/Scheduler.hpp"
  13:src/Riscv.cpp **** 
  14:src/Riscv.cpp **** uint64 Riscv::totalTime = 0;
  15:src/Riscv.cpp **** bool Riscv::finishSystem = false;
  16:src/Riscv.cpp **** bool Riscv::kernelMainCalled = false;
  17:src/Riscv.cpp **** 
  18:src/Riscv.cpp **** void Riscv::initSystem()
  19:src/Riscv.cpp **** {
  12              		.loc 1 19 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23341100 		sd	ra,8(sp)
  17 0008 23308100 		sd	s0,0(sp)
  18              		.cfi_offset 1, -8
  19              		.cfi_offset 8, -16
  20 000c 13040101 		addi	s0,sp,16
  21              		.cfi_def_cfa 8, 0
  20:src/Riscv.cpp ****     w_stvec((uint64)&Riscv::supervisorTrap);
  22              		.loc 1 20 5
  23              		.loc 1 20 12 is_stmt 0
  24 0010 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
  24      83B70700 
  25              	.LVL0:
  26              	.LBB41:
  27              	.LBB42:
  28              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 4/27/22.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_0_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_0_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** #include "../test/userMain.hpp"
GAS LISTING /tmp/ccBTqZWy.s 			page 2


  10:src/../h/Riscv.hpp **** 
  11:src/../h/Riscv.hpp **** class Riscv
  12:src/../h/Riscv.hpp **** {
  13:src/../h/Riscv.hpp **** public:
  14:src/../h/Riscv.hpp ****     static void kernelMain();
  15:src/../h/Riscv.hpp **** private:
  16:src/../h/Riscv.hpp ****     static bool kernelMainCalled;
  17:src/../h/Riscv.hpp ****     static void changePrivMode();
  18:src/../h/Riscv.hpp **** 
  19:src/../h/Riscv.hpp ****     static void initSystem();
  20:src/../h/Riscv.hpp ****     static void endSystem();
  21:src/../h/Riscv.hpp **** 
  22:src/../h/Riscv.hpp ****     static void userMainWrapper(void* p);
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp ****     static void enableInterrupts();
  25:src/../h/Riscv.hpp **** 
  26:src/../h/Riscv.hpp ****     static void disableTimerInterrupts();
  27:src/../h/Riscv.hpp **** 
  28:src/../h/Riscv.hpp ****     static void disableInterrupts();
  29:src/../h/Riscv.hpp **** 
  30:src/../h/Riscv.hpp ****     static void idleRiscv(void* arg);
  31:src/../h/Riscv.hpp **** 
  32:src/../h/Riscv.hpp ****     static void pushRegisters();
  33:src/../h/Riscv.hpp ****     static void popRegisters();
  34:src/../h/Riscv.hpp **** 
  35:src/../h/Riscv.hpp ****     static uint64 r_scause();
  36:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  37:src/../h/Riscv.hpp **** 
  38:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  39:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
  40:src/../h/Riscv.hpp **** 
  41:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  42:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  43:src/../h/Riscv.hpp **** 
  44:src/../h/Riscv.hpp ****     static uint64 r_stval();
  45:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  46:src/../h/Riscv.hpp **** 
  47:src/../h/Riscv.hpp ****     static bool finishSystem;
  48:src/../h/Riscv.hpp **** 
  49:src/../h/Riscv.hpp ****     enum BitMaskSip
  50:src/../h/Riscv.hpp ****     {
  51:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  52:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  53:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9),
  54:src/../h/Riscv.hpp ****     };
  55:src/../h/Riscv.hpp **** 
  56:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  57:src/../h/Riscv.hpp **** 
  58:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  59:src/../h/Riscv.hpp **** 
  60:src/../h/Riscv.hpp ****     static uint64 r_sip();
  61:src/../h/Riscv.hpp **** 
  62:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  63:src/../h/Riscv.hpp **** 
  64:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  65:src/../h/Riscv.hpp ****     {
  66:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
GAS LISTING /tmp/ccBTqZWy.s 			page 3


  67:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  68:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  69:src/../h/Riscv.hpp ****     };
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp ****     static void w_a0_sscratch();
  72:src/../h/Riscv.hpp **** 
  73:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  74:src/../h/Riscv.hpp **** 
  75:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  76:src/../h/Riscv.hpp **** 
  77:src/../h/Riscv.hpp ****     static void mc_sie(uint64 mask);
  78:src/../h/Riscv.hpp **** 
  79:src/../h/Riscv.hpp ****     static void ms_sie(uint64 mask);
  80:src/../h/Riscv.hpp **** 
  81:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  82:src/../h/Riscv.hpp **** 
  83:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  84:src/../h/Riscv.hpp **** 
  85:src/../h/Riscv.hpp ****     static uint64 r_sie();
  86:src/../h/Riscv.hpp ****     static void w_sie(uint64 sie);
  87:src/../h/Riscv.hpp ****     static void popSppSpie();
  88:src/../h/Riscv.hpp **** 
  89:src/../h/Riscv.hpp ****     static void supervisorTrap();
  90:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  91:src/../h/Riscv.hpp **** 
  92:src/../h/Riscv.hpp ****     static void myTestsWrapper(void* );
  93:src/../h/Riscv.hpp **** 
  94:src/../h/Riscv.hpp ****     static const uint64 bntOne = 1UL << 63;;
  95:src/../h/Riscv.hpp ****     static const uint64 bntZero = 0UL;
  96:src/../h/Riscv.hpp ****     static const uint64 timerInterrupt = bntOne + 1UL;
  97:src/../h/Riscv.hpp ****     static const uint64 hwInterrupt = bntOne + 9UL;
  98:src/../h/Riscv.hpp ****     static const uint64 operationInterrupt = bntZero + 2UL;
  99:src/../h/Riscv.hpp ****     static const uint64 addrReadInterrupt = bntZero + 5UL;
 100:src/../h/Riscv.hpp ****     static const uint64 addrWriteInterrupt = bntZero + 7UL;
 101:src/../h/Riscv.hpp ****     static const uint64 ecallUserInterrupt = bntZero + 8UL;
 102:src/../h/Riscv.hpp ****     static const uint64 ecallSystemInterupt = bntZero + 9UL;
 103:src/../h/Riscv.hpp **** 
 104:src/../h/Riscv.hpp ****     static uint64 totalTime;
 105:src/../h/Riscv.hpp **** 
 106:src/../h/Riscv.hpp ****     friend class PCB;
 107:src/../h/Riscv.hpp ****     friend class Scheduler;
 108:src/../h/Riscv.hpp ****     friend class SleepPCBList;
 109:src/../h/Riscv.hpp ****     friend class KSemaphore;
 110:src/../h/Riscv.hpp ****     friend class KConsole;
 111:src/../h/Riscv.hpp ****     friend class MemoryAllocator;
 112:src/../h/Riscv.hpp **** };
 113:src/../h/Riscv.hpp **** 
 114:src/../h/Riscv.hpp **** inline void Riscv::mc_sie(uint64 mask)
 115:src/../h/Riscv.hpp **** {
 116:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sie, %0" : :"r"(mask));
 117:src/../h/Riscv.hpp **** }
 118:src/../h/Riscv.hpp **** 
 119:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause() {
 120:src/../h/Riscv.hpp ****     uint64 volatile scause;
 121:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
 122:src/../h/Riscv.hpp ****     return scause;
 123:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/ccBTqZWy.s 			page 4


 124:src/../h/Riscv.hpp **** 
 125:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
 126:src/../h/Riscv.hpp ****     __asm__ volatile("csrw scause, %0" : :"r"(scause));
 127:src/../h/Riscv.hpp **** }
 128:src/../h/Riscv.hpp **** 
 129:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc() {
 130:src/../h/Riscv.hpp ****     uint64 volatile sepc;
 131:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 132:src/../h/Riscv.hpp ****     return sepc;
 133:src/../h/Riscv.hpp **** }
 134:src/../h/Riscv.hpp **** 
 135:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
 136:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sepc, %0" : :"r"(sepc));
 137:src/../h/Riscv.hpp **** }
 138:src/../h/Riscv.hpp **** 
 139:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec() {
 140:src/../h/Riscv.hpp ****     uint64 volatile stvec;
 141:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, stvec" : "=r"(stvec));
 142:src/../h/Riscv.hpp ****     return stvec;
 143:src/../h/Riscv.hpp **** }
 144:src/../h/Riscv.hpp **** 
 145:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 146:src/../h/Riscv.hpp ****     __asm__ volatile("csrw stvec, %0" : :"r"(stvec));
  29              		.loc 2 146 5 is_stmt 1
  30              		.loc 2 146 53 is_stmt 0
  31              	#APP
  32              	# 146 "src/../h/Riscv.hpp" 1
 147              	}
  33              		csrw stvec, a5
  34              	# 0 "" 2
  35              	.LVL1:
  36              	#NO_APP
  37              	.LBE42:
  38              	.LBE41:
  21:src/Riscv.cpp ****     PCB::initialize();
  39              		.loc 1 21 5 is_stmt 1
  40              		.loc 1 21 20 is_stmt 0
  41 001c 97000000 		call	_ZN3PCB10initializeEv@plt
  41      E7800000 
  42              	.LVL2:
  22:src/Riscv.cpp ****     KConsole::initialize();
  43              		.loc 1 22 5 is_stmt 1
  44              		.loc 1 22 25 is_stmt 0
  45 0024 97000000 		call	_ZN8KConsole10initializeEv@plt
  45      E7800000 
  46              	.LVL3:
  23:src/Riscv.cpp **** }
  47              		.loc 1 23 1
  48 002c 83308100 		ld	ra,8(sp)
  49              		.cfi_restore 1
  50 0030 03340100 		ld	s0,0(sp)
  51              		.cfi_restore 8
  52              		.cfi_def_cfa 2, 16
  53 0034 13010101 		addi	sp,sp,16
  54              		.cfi_def_cfa_offset 0
  55 0038 67800000 		jr	ra
  56              		.cfi_endproc
GAS LISTING /tmp/ccBTqZWy.s 			page 5


  57              	.LFE27:
  59              		.align	2
  60              		.globl	_ZN5Riscv16enableInterruptsEv
  62              	_ZN5Riscv16enableInterruptsEv:
  63              	.LFB29:
  24:src/Riscv.cpp **** 
  25:src/Riscv.cpp **** void Riscv::endSystem()
  26:src/Riscv.cpp **** {
  27:src/Riscv.cpp ****     disableInterrupts();
  28:src/Riscv.cpp ****     finishSystem = true;
  29:src/Riscv.cpp ****     PCB* pcb = 0;
  30:src/Riscv.cpp ****     while(true)
  31:src/Riscv.cpp ****     {
  32:src/Riscv.cpp ****         pcb = Scheduler::get();
  33:src/Riscv.cpp ****         if(pcb == 0) break;
  34:src/Riscv.cpp ****     }
  35:src/Riscv.cpp ****     Scheduler::put(PCB::consolePCB);
  36:src/Riscv.cpp ****     KConsole::pendingGetc = 0;
  37:src/Riscv.cpp ****     enableInterrupts();
  38:src/Riscv.cpp ****     while(!PCB::consolePCB->isFinished())
  39:src/Riscv.cpp ****     {
  40:src/Riscv.cpp ****         thread_dispatch();
  41:src/Riscv.cpp ****     }
  42:src/Riscv.cpp ****     disableInterrupts();
  43:src/Riscv.cpp **** }
  44:src/Riscv.cpp **** 
  45:src/Riscv.cpp **** void Riscv::enableInterrupts() {
  64              		.loc 1 45 32 is_stmt 1
  65              		.cfi_startproc
  66 003c 130101FF 		addi	sp,sp,-16
  67              		.cfi_def_cfa_offset 16
  68 0040 23348100 		sd	s0,8(sp)
  69              		.cfi_offset 8, -8
  70 0044 13040101 		addi	s0,sp,16
  71              		.cfi_def_cfa 8, 0
  46:src/Riscv.cpp ****     ms_sstatus(Riscv::SSTATUS_SIE);
  72              		.loc 1 46 5
  73              	.LVL4:
  74              	.LBB43:
  75              	.LBB44:
 148:src/../h/Riscv.hpp **** 
 149:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stval() {
 150:src/../h/Riscv.hpp ****     uint64 volatile stval;
 151:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, stval" : "=r"(stval));
 152:src/../h/Riscv.hpp ****     return stval;
 153:src/../h/Riscv.hpp **** }
 154:src/../h/Riscv.hpp **** 
 155:src/../h/Riscv.hpp **** inline void Riscv::w_sie(uint64 sie)
 156:src/../h/Riscv.hpp **** {
 157:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sie, %0" : :"r"(sie));
 158:src/../h/Riscv.hpp **** }
 159:src/../h/Riscv.hpp **** 
 160:src/../h/Riscv.hpp **** inline void Riscv::w_stval(uint64 stval) {
 161:src/../h/Riscv.hpp ****     __asm__ volatile("csrw stval, %0" : :"r"(stval));
 162:src/../h/Riscv.hpp **** }
 163:src/../h/Riscv.hpp **** 
 164:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
GAS LISTING /tmp/ccBTqZWy.s 			page 6


 165:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sip, %0" : :"r"(mask));
 166:src/../h/Riscv.hpp **** }
 167:src/../h/Riscv.hpp **** 
 168:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 169:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sip, %0" : :"r"(mask));
 170:src/../h/Riscv.hpp **** }
 171:src/../h/Riscv.hpp **** 
 172:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sie()
 173:src/../h/Riscv.hpp **** {
 174:src/../h/Riscv.hpp ****     uint64 volatile sie;
 175:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sip" : "=r"(sie));
 176:src/../h/Riscv.hpp ****     return sie;
 177:src/../h/Riscv.hpp **** }
 178:src/../h/Riscv.hpp **** 
 179:src/../h/Riscv.hpp **** inline void Riscv::ms_sie(uint64 mask)
 180:src/../h/Riscv.hpp **** {
 181:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sie, %0" : :"r"(mask));
 182:src/../h/Riscv.hpp **** }
 183:src/../h/Riscv.hpp **** 
 184:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip() {
 185:src/../h/Riscv.hpp ****     uint64 volatile sip;
 186:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sip" : "=r"(sip));
 187:src/../h/Riscv.hpp ****     return sip;
 188:src/../h/Riscv.hpp **** }
 189:src/../h/Riscv.hpp **** 
 190:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 191:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sip, %0" : :"r"(sip));
 192:src/../h/Riscv.hpp **** }
 193:src/../h/Riscv.hpp **** 
 194:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 195:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sstatus, %0" : :"r"(mask));
  76              		.loc 2 195 5
  77              		.loc 2 195 54 is_stmt 0
  78 0048 93072000 		li	a5,2
  79              	#APP
  80              	# 195 "src/../h/Riscv.hpp" 1
 196              	}
  81              		csrs sstatus, a5
  82              	# 0 "" 2
  83              	.LVL5:
  84              	#NO_APP
  85              	.LBE44:
  86              	.LBE43:
  47:src/Riscv.cpp **** }
  87              		.loc 1 47 1
  88 0050 03348100 		ld	s0,8(sp)
  89              		.cfi_restore 8
  90              		.cfi_def_cfa 2, 16
  91 0054 13010101 		addi	sp,sp,16
  92              		.cfi_def_cfa_offset 0
  93 0058 67800000 		jr	ra
  94              		.cfi_endproc
  95              	.LFE29:
  97              		.align	2
  98              		.globl	_ZN5Riscv17disableInterruptsEv
 100              	_ZN5Riscv17disableInterruptsEv:
 101              	.LFB30:
GAS LISTING /tmp/ccBTqZWy.s 			page 7


  48:src/Riscv.cpp **** 
  49:src/Riscv.cpp **** void Riscv::disableInterrupts()
  50:src/Riscv.cpp **** {
 102              		.loc 1 50 1 is_stmt 1
 103              		.cfi_startproc
 104 005c 130101FF 		addi	sp,sp,-16
 105              		.cfi_def_cfa_offset 16
 106 0060 23348100 		sd	s0,8(sp)
 107              		.cfi_offset 8, -8
 108 0064 13040101 		addi	s0,sp,16
 109              		.cfi_def_cfa 8, 0
  51:src/Riscv.cpp ****     mc_sstatus(Riscv::SSTATUS_SIE);
 110              		.loc 1 51 5
 111              	.LVL6:
 112              	.LBB45:
 113              	.LBB46:
 197:src/../h/Riscv.hpp **** 
 198:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 199:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sstatus, %0" : :"r"(mask));
 114              		.loc 2 199 5
 115              		.loc 2 199 54 is_stmt 0
 116 0068 93072000 		li	a5,2
 117              	#APP
 118              	# 199 "src/../h/Riscv.hpp" 1
 200              	}
 119              		csrc sstatus, a5
 120              	# 0 "" 2
 121              	.LVL7:
 122              	#NO_APP
 123              	.LBE46:
 124              	.LBE45:
  52:src/Riscv.cpp **** }
 125              		.loc 1 52 1
 126 0070 03348100 		ld	s0,8(sp)
 127              		.cfi_restore 8
 128              		.cfi_def_cfa 2, 16
 129 0074 13010101 		addi	sp,sp,16
 130              		.cfi_def_cfa_offset 0
 131 0078 67800000 		jr	ra
 132              		.cfi_endproc
 133              	.LFE30:
 135              		.align	2
 136              		.globl	_ZN5Riscv9endSystemEv
 138              	_ZN5Riscv9endSystemEv:
 139              	.LFB28:
  26:src/Riscv.cpp ****     disableInterrupts();
 140              		.loc 1 26 1 is_stmt 1
 141              		.cfi_startproc
 142 007c 130101FF 		addi	sp,sp,-16
 143              		.cfi_def_cfa_offset 16
 144 0080 23341100 		sd	ra,8(sp)
 145 0084 23308100 		sd	s0,0(sp)
 146              		.cfi_offset 1, -8
 147              		.cfi_offset 8, -16
 148 0088 13040101 		addi	s0,sp,16
 149              		.cfi_def_cfa 8, 0
  27:src/Riscv.cpp ****     finishSystem = true;
GAS LISTING /tmp/ccBTqZWy.s 			page 8


 150              		.loc 1 27 5
  27:src/Riscv.cpp ****     finishSystem = true;
 151              		.loc 1 27 22 is_stmt 0
 152 008c 97000000 		call	_ZN5Riscv17disableInterruptsEv
 152      E7800000 
 153              	.LVL8:
  28:src/Riscv.cpp ****     PCB* pcb = 0;
 154              		.loc 1 28 5 is_stmt 1
  28:src/Riscv.cpp ****     PCB* pcb = 0;
 155              		.loc 1 28 18 is_stmt 0
 156 0094 93071000 		li	a5,1
 157 0098 17070000 		sb	a5,.LANCHOR0,a4
 157      2300F700 
  29:src/Riscv.cpp ****     while(true)
 158              		.loc 1 29 5 is_stmt 1
 159              	.LVL9:
 160              	.L8:
  30:src/Riscv.cpp ****     {
 161              		.loc 1 30 5
  32:src/Riscv.cpp ****         if(pcb == 0) break;
 162              		.loc 1 32 9
  32:src/Riscv.cpp ****         if(pcb == 0) break;
 163              		.loc 1 32 29 is_stmt 0
 164 00a0 97000000 		call	_ZN9Scheduler3getEv@plt
 164      E7800000 
 165              	.LVL10:
  33:src/Riscv.cpp ****     }
 166              		.loc 1 33 9 is_stmt 1
 167 00a8 E31C05FE 		bnez	a0,.L8
  35:src/Riscv.cpp ****     KConsole::pendingGetc = 0;
 168              		.loc 1 35 5
  35:src/Riscv.cpp ****     KConsole::pendingGetc = 0;
 169              		.loc 1 35 19 is_stmt 0
 170 00ac 97070000 		la	a5,_ZN3PCB10consolePCBE
 170      83B70700 
 171 00b4 03B50700 		ld	a0,0(a5)
 172              	.LVL11:
 173 00b8 97000000 		call	_ZN9Scheduler3putEP3PCB@plt
 173      E7800000 
 174              	.LVL12:
  36:src/Riscv.cpp ****     enableInterrupts();
 175              		.loc 1 36 5 is_stmt 1
  36:src/Riscv.cpp ****     enableInterrupts();
 176              		.loc 1 36 27 is_stmt 0
 177 00c0 97070000 		la	a5,_ZN8KConsole11pendingGetcE
 177      83B70700 
 178 00c8 23B00700 		sd	zero,0(a5)
  37:src/Riscv.cpp ****     while(!PCB::consolePCB->isFinished())
 179              		.loc 1 37 5 is_stmt 1
  37:src/Riscv.cpp ****     while(!PCB::consolePCB->isFinished())
 180              		.loc 1 37 21 is_stmt 0
 181 00cc 97000000 		call	_ZN5Riscv16enableInterruptsEv
 181      E7800000 
 182              	.LVL13:
 183              	.L10:
  38:src/Riscv.cpp ****     {
 184              		.loc 1 38 5 is_stmt 1
GAS LISTING /tmp/ccBTqZWy.s 			page 9


  38:src/Riscv.cpp ****     {
 185              		.loc 1 38 11
  38:src/Riscv.cpp ****     {
 186              		.loc 1 38 39 is_stmt 0
 187 00d4 97070000 		la	a5,_ZN3PCB10consolePCBE
 187      83B70700 
 188 00dc 03B50700 		ld	a0,0(a5)
 189 00e0 97000000 		call	_ZN3PCB10isFinishedEv@plt
 189      E7800000 
 190              	.LVL14:
  38:src/Riscv.cpp ****     {
 191              		.loc 1 38 11
 192 00e8 63180500 		bnez	a0,.L9
  40:src/Riscv.cpp ****     }
 193              		.loc 1 40 9 is_stmt 1
  40:src/Riscv.cpp ****     }
 194              		.loc 1 40 24 is_stmt 0
 195 00ec 97000000 		call	_Z15thread_dispatchv@plt
 195      E7800000 
 196              	.LVL15:
  38:src/Riscv.cpp ****     {
 197              		.loc 1 38 5
 198 00f4 6FF01FFE 		j	.L10
 199              	.L9:
  42:src/Riscv.cpp **** }
 200              		.loc 1 42 5 is_stmt 1
  42:src/Riscv.cpp **** }
 201              		.loc 1 42 22 is_stmt 0
 202 00f8 97000000 		call	_ZN5Riscv17disableInterruptsEv
 202      E7800000 
 203              	.LVL16:
  43:src/Riscv.cpp **** 
 204              		.loc 1 43 1
 205 0100 83308100 		ld	ra,8(sp)
 206              		.cfi_restore 1
 207 0104 03340100 		ld	s0,0(sp)
 208              		.cfi_restore 8
 209              		.cfi_def_cfa 2, 16
 210 0108 13010101 		addi	sp,sp,16
 211              		.cfi_def_cfa_offset 0
 212 010c 67800000 		jr	ra
 213              		.cfi_endproc
 214              	.LFE28:
 216              		.align	2
 217              		.globl	_ZN5Riscv10popSppSpieEv
 219              	_ZN5Riscv10popSppSpieEv:
 220              	.LFB31:
  53:src/Riscv.cpp **** 
  54:src/Riscv.cpp **** void Riscv::popSppSpie()
  55:src/Riscv.cpp **** {
 221              		.loc 1 55 1 is_stmt 1
 222              		.cfi_startproc
 223 0110 130101FF 		addi	sp,sp,-16
 224              		.cfi_def_cfa_offset 16
 225 0114 23348100 		sd	s0,8(sp)
 226              		.cfi_offset 8, -8
 227 0118 13040101 		addi	s0,sp,16
GAS LISTING /tmp/ccBTqZWy.s 			page 10


 228              		.cfi_def_cfa 8, 0
  56:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
 229              		.loc 1 56 5
 230              		.loc 1 56 39 is_stmt 0
 231              	#APP
 232              	# 56 "src/Riscv.cpp" 1
  57              	    __asm__ volatile ("sret");
 233              		csrw sepc, ra
 234              	# 0 "" 2
 235              		.loc 1 57 5 is_stmt 1
 236              		.loc 1 57 30 is_stmt 0
 237              	# 57 "src/Riscv.cpp" 1
  58              	}
 238              		sret
 239              	# 0 "" 2
 240              		.loc 1 58 1
 241              	#NO_APP
 242 0124 03348100 		ld	s0,8(sp)
 243              		.cfi_restore 8
 244              		.cfi_def_cfa 2, 16
 245 0128 13010101 		addi	sp,sp,16
 246              		.cfi_def_cfa_offset 0
 247 012c 67800000 		jr	ra
 248              		.cfi_endproc
 249              	.LFE31:
 251              		.align	2
 252              		.globl	_ZN5Riscv10kernelMainEv
 254              	_ZN5Riscv10kernelMainEv:
 255              	.LFB33:
  59:src/Riscv.cpp **** 
  60:src/Riscv.cpp **** void Riscv::handleSupervisorTrap()
  61:src/Riscv.cpp **** {
  62:src/Riscv.cpp ****     __asm__ volatile("mv %0, a4" : "=r"(PCB::savedRegA4));
  63:src/Riscv.cpp ****     __asm__ volatile("csrr %0, sscratch":"=r"(PCB::running->sscratch));
  64:src/Riscv.cpp **** 
  65:src/Riscv.cpp ****     uint64 scause = Riscv::r_scause();
  66:src/Riscv.cpp **** 
  67:src/Riscv.cpp ****     switch(scause)
  68:src/Riscv.cpp ****     {
  69:src/Riscv.cpp ****         case timerInterrupt:
  70:src/Riscv.cpp ****         {
  71:src/Riscv.cpp ****             uint64 volatile sepc = Riscv::r_sepc();
  72:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
  73:src/Riscv.cpp ****             mc_sip(Riscv::SIP_SSIP);
  74:src/Riscv.cpp ****             //KConsole::trapPrintString("timerInterrupt\n");
  75:src/Riscv.cpp ****             //static uint64 total = 0;
  76:src/Riscv.cpp ****             totalTime++;
  77:src/Riscv.cpp ****             //KConsole::trapPrintInt(totalTime);
  78:src/Riscv.cpp **** 
  79:src/Riscv.cpp ****             PCB::timeSliceCounter++;
  80:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
  81:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
  82:src/Riscv.cpp ****             {
  83:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
  84:src/Riscv.cpp ****                 PCB::dispatch();
  85:src/Riscv.cpp ****             }
  86:src/Riscv.cpp **** 
GAS LISTING /tmp/ccBTqZWy.s 			page 11


  87:src/Riscv.cpp ****             Riscv::w_sstatus(sstatus);
  88:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
  89:src/Riscv.cpp ****             changePrivMode();
  90:src/Riscv.cpp ****             break;
  91:src/Riscv.cpp ****         }
  92:src/Riscv.cpp ****         case hwInterrupt:
  93:src/Riscv.cpp ****         {
  94:src/Riscv.cpp ****             uint64 x = CONSOLE_STATUS;
  95:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0"::"r"(x));
  96:src/Riscv.cpp ****             __asm__ volatile("lb a1, 0(a0)");
  97:src/Riscv.cpp ****             uint64 operation;
  98:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" :  "=r"(operation));
  99:src/Riscv.cpp ****             if(operation & KConsole::STATUS_READ_MASK)
 100:src/Riscv.cpp ****             {
 101:src/Riscv.cpp ****                 x = CONSOLE_TX_DATA;
 102:src/Riscv.cpp ****                 __asm__ volatile("mv a0, %0"::"r"(x));
 103:src/Riscv.cpp ****                 __asm__ volatile("lb a1,0(a0)");
 104:src/Riscv.cpp ****                 char c;
 105:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" :  "=r"(c));
 106:src/Riscv.cpp ****                 if(KConsole::pendingGetc > 0)
 107:src/Riscv.cpp ****                 {
 108:src/Riscv.cpp ****                     KConsole::pendingGetc--;
 109:src/Riscv.cpp ****                     KConsole::putCharacterInput(c);
 110:src/Riscv.cpp ****                     //KConsole::putCharacterOutput(c);
 111:src/Riscv.cpp ****                 }
 112:src/Riscv.cpp ****             }
 113:src/Riscv.cpp **** 
 114:src/Riscv.cpp ****             plic_complete(plic_claim());
 115:src/Riscv.cpp **** 
 116:src/Riscv.cpp ****             break;
 117:src/Riscv.cpp ****         }
 118:src/Riscv.cpp ****         case operationInterrupt: // todo
 119:src/Riscv.cpp ****         {
 120:src/Riscv.cpp ****             //trapPrintString("operation interrupt\n");
 121:src/Riscv.cpp ****             PCB::threadExitHandler();
 122:src/Riscv.cpp ****             break;
 123:src/Riscv.cpp ****         }
 124:src/Riscv.cpp ****         case addrReadInterrupt: // todo
 125:src/Riscv.cpp ****         {
 126:src/Riscv.cpp ****             //trapPrintString("read interrupt\n");
 127:src/Riscv.cpp ****             PCB::threadExitHandler();
 128:src/Riscv.cpp ****             break;
 129:src/Riscv.cpp ****         }
 130:src/Riscv.cpp ****         case addrWriteInterrupt: // todo
 131:src/Riscv.cpp ****         {
 132:src/Riscv.cpp ****             //trapPrintString("write interrupt\n");
 133:src/Riscv.cpp ****             PCB::threadExitHandler();
 134:src/Riscv.cpp ****             break;
 135:src/Riscv.cpp ****         }
 136:src/Riscv.cpp ****         case ecallSystemInterupt:
 137:src/Riscv.cpp ****         case ecallUserInterrupt:
 138:src/Riscv.cpp ****         {
 139:src/Riscv.cpp ****             uint64 operation;
 140:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
 141:src/Riscv.cpp **** 
 142:src/Riscv.cpp ****             uint64 volatile sepc = Riscv::r_sepc() + 4;
 143:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
GAS LISTING /tmp/ccBTqZWy.s 			page 12


 144:src/Riscv.cpp **** 
 145:src/Riscv.cpp ****             switch(operation)
 146:src/Riscv.cpp ****             {
 147:src/Riscv.cpp ****                 case MemoryAllocator::MEM_ALLOC:
 148:src/Riscv.cpp ****                     MemoryAllocator::memAllocHandler();
 149:src/Riscv.cpp ****                     break;
 150:src/Riscv.cpp ****                 case MemoryAllocator::MEM_FREE:
 151:src/Riscv.cpp ****                     MemoryAllocator::memFreeHandler();
 152:src/Riscv.cpp ****                     break;
 153:src/Riscv.cpp ****                 case PCB::THREAD_MAKE_PCB:
 154:src/Riscv.cpp ****                     PCB::threadMakePCBHandler();
 155:src/Riscv.cpp ****                     break;
 156:src/Riscv.cpp ****                 case PCB::THREAD_CREATE:
 157:src/Riscv.cpp ****                     PCB::threadCreateHandler();
 158:src/Riscv.cpp ****                     break;
 159:src/Riscv.cpp ****                 case PCB::THREAD_START:
 160:src/Riscv.cpp ****                     PCB::threadStartHandler();
 161:src/Riscv.cpp ****                     break;
 162:src/Riscv.cpp ****                 case PCB::THREAD_DISPATCH:
 163:src/Riscv.cpp ****                     PCB::threadDispatchHandler();
 164:src/Riscv.cpp ****                     break;
 165:src/Riscv.cpp ****                 case PCB::THREAD_EXIT:
 166:src/Riscv.cpp ****                     PCB::threadExitHandler();
 167:src/Riscv.cpp ****                     break;
 168:src/Riscv.cpp ****                 case PCB::TIME_SLEEP:
 169:src/Riscv.cpp ****                     PCB::threadSleepHandler();
 170:src/Riscv.cpp ****                     break;
 171:src/Riscv.cpp ****                 case PCB::THREAD_DEL_PCB:
 172:src/Riscv.cpp ****                      PCB::threadDelPCBHandler();
 173:src/Riscv.cpp ****                      break;
 174:src/Riscv.cpp ****                 case KSemaphore::SEM_OPEN:
 175:src/Riscv.cpp ****                     KSemaphore::semOpenHandler();
 176:src/Riscv.cpp ****                     break;
 177:src/Riscv.cpp ****                 case KSemaphore::SEM_WAIT:
 178:src/Riscv.cpp ****                     KSemaphore::semWaitHandler();
 179:src/Riscv.cpp ****                     break;
 180:src/Riscv.cpp ****                 case KSemaphore::SEM_SIGNAL:
 181:src/Riscv.cpp ****                     KSemaphore::semSignalHandler();
 182:src/Riscv.cpp ****                     break;
 183:src/Riscv.cpp ****                 case KSemaphore::SEM_CLOSE:
 184:src/Riscv.cpp ****                     KSemaphore::semCloseHandler();
 185:src/Riscv.cpp ****                     break;
 186:src/Riscv.cpp ****                 case KConsole::CONSOLE_GETC:
 187:src/Riscv.cpp ****                     KConsole::getcHandler();
 188:src/Riscv.cpp ****                     break;
 189:src/Riscv.cpp ****                 case KConsole::CONSOLE_PUTC:
 190:src/Riscv.cpp ****                     KConsole::putcHandler();
 191:src/Riscv.cpp ****                     break;
 192:src/Riscv.cpp ****                 case KConsole::CONSOLE_GET_CHAR:
 193:src/Riscv.cpp ****                     KConsole::getCharHandler();
 194:src/Riscv.cpp ****                     break;
 195:src/Riscv.cpp ****             }
 196:src/Riscv.cpp **** 
 197:src/Riscv.cpp ****             Riscv::w_sstatus(sstatus);
 198:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 199:src/Riscv.cpp ****             changePrivMode();
 200:src/Riscv.cpp ****             break;
GAS LISTING /tmp/ccBTqZWy.s 			page 13


 201:src/Riscv.cpp ****         }
 202:src/Riscv.cpp ****     }
 203:src/Riscv.cpp **** }
 204:src/Riscv.cpp **** 
 205:src/Riscv.cpp **** void Riscv::kernelMain()
 206:src/Riscv.cpp **** {
 256              		.loc 1 206 1 is_stmt 1
 257              		.cfi_startproc
 207:src/Riscv.cpp ****     if(kernelMainCalled) return;
 258              		.loc 1 207 5
 259 0130 97070000 		lbu	a5,.LANCHOR0+1
 259      83C70700 
 260 0138 63840700 		beqz	a5,.L22
 261 013c 67800000 		ret
 262              	.L22:
 206:src/Riscv.cpp ****     if(kernelMainCalled) return;
 263              		.loc 1 206 1 is_stmt 0
 264 0140 130101FF 		addi	sp,sp,-16
 265              		.cfi_def_cfa_offset 16
 266 0144 23341100 		sd	ra,8(sp)
 267 0148 23308100 		sd	s0,0(sp)
 268              		.cfi_offset 1, -8
 269              		.cfi_offset 8, -16
 270 014c 13040101 		addi	s0,sp,16
 271              		.cfi_def_cfa 8, 0
 208:src/Riscv.cpp ****     kernelMainCalled = true;
 272              		.loc 1 208 5 is_stmt 1
 273              		.loc 1 208 22 is_stmt 0
 274 0150 93071000 		li	a5,1
 275 0154 17070000 		sb	a5,.LANCHOR0+1,a4
 275      2300F700 
 209:src/Riscv.cpp **** 
 210:src/Riscv.cpp ****     initSystem();
 276              		.loc 1 210 5 is_stmt 1
 277              		.loc 1 210 15 is_stmt 0
 278 015c 97000000 		call	_ZN5Riscv10initSystemEv
 278      E7800000 
 279              	.LVL17:
 211:src/Riscv.cpp **** 
 212:src/Riscv.cpp ****     //disableTimerInterrupts();
 213:src/Riscv.cpp ****     enableInterrupts();
 280              		.loc 1 213 5 is_stmt 1
 281              		.loc 1 213 21 is_stmt 0
 282 0164 97000000 		call	_ZN5Riscv16enableInterruptsEv
 282      E7800000 
 283              	.LVL18:
 284              	.L17:
 214:src/Riscv.cpp **** 
 215:src/Riscv.cpp ****     while(!PCB::userPCB->isFinished())
 285              		.loc 1 215 5 is_stmt 1
 286              		.loc 1 215 11
 287              		.loc 1 215 36 is_stmt 0
 288 016c 97070000 		la	a5,_ZN3PCB7userPCBE
 288      83B70700 
 289 0174 03B50700 		ld	a0,0(a5)
 290 0178 97000000 		call	_ZN3PCB10isFinishedEv@plt
 290      E7800000 
GAS LISTING /tmp/ccBTqZWy.s 			page 14


 291              	.LVL19:
 292              		.loc 1 215 11
 293 0180 63180500 		bnez	a0,.L16
 216:src/Riscv.cpp ****     {
 217:src/Riscv.cpp ****         thread_dispatch();
 294              		.loc 1 217 9 is_stmt 1
 295              		.loc 1 217 24 is_stmt 0
 296 0184 97000000 		call	_Z15thread_dispatchv@plt
 296      E7800000 
 297              	.LVL20:
 215:src/Riscv.cpp ****     {
 298              		.loc 1 215 5
 299 018c 6FF01FFE 		j	.L17
 300              	.L16:
 218:src/Riscv.cpp ****     }
 219:src/Riscv.cpp **** 
 220:src/Riscv.cpp ****     //printString("End...\n");
 221:src/Riscv.cpp ****     endSystem();
 301              		.loc 1 221 5 is_stmt 1
 302              		.loc 1 221 14 is_stmt 0
 303 0190 97000000 		call	_ZN5Riscv9endSystemEv
 303      E7800000 
 304              	.LVL21:
 222:src/Riscv.cpp **** }
 305              		.loc 1 222 1
 306 0198 83308100 		ld	ra,8(sp)
 307              		.cfi_restore 1
 308 019c 03340100 		ld	s0,0(sp)
 309              		.cfi_restore 8
 310              		.cfi_def_cfa 2, 16
 311 01a0 13010101 		addi	sp,sp,16
 312              		.cfi_def_cfa_offset 0
 313 01a4 67800000 		jr	ra
 314              		.cfi_endproc
 315              	.LFE33:
 317              		.align	2
 318              		.globl	_ZN5Riscv15userMainWrapperEPv
 320              	_ZN5Riscv15userMainWrapperEPv:
 321              	.LFB34:
 223:src/Riscv.cpp **** 
 224:src/Riscv.cpp **** void Riscv::userMainWrapper(void* )
 225:src/Riscv.cpp **** {
 322              		.loc 1 225 1 is_stmt 1
 323              		.cfi_startproc
 324 01a8 130101FF 		addi	sp,sp,-16
 325              		.cfi_def_cfa_offset 16
 326 01ac 23341100 		sd	ra,8(sp)
 327 01b0 23308100 		sd	s0,0(sp)
 328              		.cfi_offset 1, -8
 329              		.cfi_offset 8, -16
 330 01b4 13040101 		addi	s0,sp,16
 331              		.cfi_def_cfa 8, 0
 226:src/Riscv.cpp ****     userMain();
 332              		.loc 1 226 5
 333              		.loc 1 226 13 is_stmt 0
 334 01b8 97000000 		call	_Z8userMainv@plt
 334      E7800000 
GAS LISTING /tmp/ccBTqZWy.s 			page 15


 335              	.LVL22:
 227:src/Riscv.cpp **** }
 336              		.loc 1 227 1
 337 01c0 83308100 		ld	ra,8(sp)
 338              		.cfi_restore 1
 339 01c4 03340100 		ld	s0,0(sp)
 340              		.cfi_restore 8
 341              		.cfi_def_cfa 2, 16
 342 01c8 13010101 		addi	sp,sp,16
 343              		.cfi_def_cfa_offset 0
 344 01cc 67800000 		jr	ra
 345              		.cfi_endproc
 346              	.LFE34:
 348              		.align	2
 349              		.globl	_ZN5Riscv14myTestsWrapperEPv
 351              	_ZN5Riscv14myTestsWrapperEPv:
 352              	.LFB35:
 228:src/Riscv.cpp **** 
 229:src/Riscv.cpp **** void Riscv::myTestsWrapper(void* p)
 230:src/Riscv.cpp **** {
 353              		.loc 1 230 1 is_stmt 1
 354              		.cfi_startproc
 355              	.LVL23:
 356 01d0 130101FF 		addi	sp,sp,-16
 357              		.cfi_def_cfa_offset 16
 358 01d4 23341100 		sd	ra,8(sp)
 359 01d8 23308100 		sd	s0,0(sp)
 360              		.cfi_offset 1, -8
 361              		.cfi_offset 8, -16
 362 01dc 13040101 		addi	s0,sp,16
 363              		.cfi_def_cfa 8, 0
 231:src/Riscv.cpp ****     myTests();
 364              		.loc 1 231 5
 365              		.loc 1 231 12 is_stmt 0
 366 01e0 97000000 		call	_Z7myTestsv@plt
 366      E7800000 
 367              	.LVL24:
 232:src/Riscv.cpp **** }
 368              		.loc 1 232 1
 369 01e8 83308100 		ld	ra,8(sp)
 370              		.cfi_restore 1
 371 01ec 03340100 		ld	s0,0(sp)
 372              		.cfi_restore 8
 373              		.cfi_def_cfa 2, 16
 374 01f0 13010101 		addi	sp,sp,16
 375              		.cfi_def_cfa_offset 0
 376 01f4 67800000 		jr	ra
 377              		.cfi_endproc
 378              	.LFE35:
 380              		.align	2
 381              		.globl	_ZN5Riscv22disableTimerInterruptsEv
 383              	_ZN5Riscv22disableTimerInterruptsEv:
 384              	.LFB36:
 233:src/Riscv.cpp **** 
 234:src/Riscv.cpp **** void Riscv::disableTimerInterrupts()
 235:src/Riscv.cpp **** {
 385              		.loc 1 235 1 is_stmt 1
GAS LISTING /tmp/ccBTqZWy.s 			page 16


 386              		.cfi_startproc
 387 01f8 130101FF 		addi	sp,sp,-16
 388              		.cfi_def_cfa_offset 16
 389 01fc 23348100 		sd	s0,8(sp)
 390              		.cfi_offset 8, -8
 391 0200 13040101 		addi	s0,sp,16
 392              		.cfi_def_cfa 8, 0
 236:src/Riscv.cpp ****     uint64 x = 0x2;
 393              		.loc 1 236 5
 394              	.LVL25:
 237:src/Riscv.cpp ****     __asm__ volatile("csrc sie, %0"::"r"(x));
 395              		.loc 1 237 5
 396              		.loc 1 237 45 is_stmt 0
 397 0204 93072000 		li	a5,2
 398              	#APP
 399              	# 237 "src/Riscv.cpp" 1
 238              	}
 400              		csrc sie, a5
 401              	# 0 "" 2
 402              		.loc 1 238 1
 403              	#NO_APP
 404 020c 03348100 		ld	s0,8(sp)
 405              		.cfi_restore 8
 406              		.cfi_def_cfa 2, 16
 407 0210 13010101 		addi	sp,sp,16
 408              		.cfi_def_cfa_offset 0
 409 0214 67800000 		jr	ra
 410              		.cfi_endproc
 411              	.LFE36:
 413              		.align	2
 414              		.globl	_ZN5Riscv9idleRiscvEPv
 416              	_ZN5Riscv9idleRiscvEPv:
 417              	.LFB37:
 239:src/Riscv.cpp **** 
 240:src/Riscv.cpp **** void Riscv::idleRiscv(void* p)
 241:src/Riscv.cpp **** {
 418              		.loc 1 241 1 is_stmt 1
 419              		.cfi_startproc
 420              	.LVL26:
 421 0218 130101FF 		addi	sp,sp,-16
 422              		.cfi_def_cfa_offset 16
 423 021c 23348100 		sd	s0,8(sp)
 424              		.cfi_offset 8, -8
 425 0220 13040101 		addi	s0,sp,16
 426              		.cfi_def_cfa 8, 0
 427              	.L30:
 242:src/Riscv.cpp ****     while(true)
 428              		.loc 1 242 5 discriminator 1
 429              		.loc 1 242 5 discriminator 1
 430 0224 6F000000 		j	.L30
 431              		.cfi_endproc
 432              	.LFE37:
 434              		.align	2
 435              		.globl	_ZN5Riscv13w_a0_sscratchEv
 437              	_ZN5Riscv13w_a0_sscratchEv:
 438              	.LFB38:
 243:src/Riscv.cpp ****     {
GAS LISTING /tmp/ccBTqZWy.s 			page 17


 244:src/Riscv.cpp **** 
 245:src/Riscv.cpp ****     }
 246:src/Riscv.cpp **** }
 247:src/Riscv.cpp **** 
 248:src/Riscv.cpp **** void Riscv::w_a0_sscratch()
 249:src/Riscv.cpp **** {
 439              		.loc 1 249 1
 440              		.cfi_startproc
 441 0228 130101FF 		addi	sp,sp,-16
 442              		.cfi_def_cfa_offset 16
 443 022c 23348100 		sd	s0,8(sp)
 444              		.cfi_offset 8, -8
 445 0230 13040101 		addi	s0,sp,16
 446              		.cfi_def_cfa 8, 0
 250:src/Riscv.cpp ****     uint64 a1Temp;
 447              		.loc 1 250 5
 251:src/Riscv.cpp ****     __asm__ volatile("mv %0, a1":"=r"(a1Temp));
 448              		.loc 1 251 5
 449              		.loc 1 251 47 is_stmt 0
 450              	#APP
 451              	# 251 "src/Riscv.cpp" 1
 252              	    __asm__ volatile("mv a1, %0"::"r"(PCB::running->sscratch));
 452              		mv a5, a1
 453              	# 0 "" 2
 454              	.LVL27:
 455              		.loc 1 252 5 is_stmt 1
 456              		.loc 1 252 53 is_stmt 0
 457              	#NO_APP
 458 0238 17070000 		la	a4,_ZN3PCB7runningE
 458      03370700 
 459 0240 03370700 		ld	a4,0(a4)
 460 0244 03370701 		ld	a4,16(a4)
 461              		.loc 1 252 63
 462              	#APP
 463              	# 252 "src/Riscv.cpp" 1
 253              	    __asm__ volatile("sd a0, 80(a1)");
 464              		mv a1, a4
 465              	# 0 "" 2
 466              		.loc 1 253 5 is_stmt 1
 467              		.loc 1 253 38 is_stmt 0
 468              	# 253 "src/Riscv.cpp" 1
 254              	    __asm__ volatile("mv a1,%0"::"r"(a1Temp));
 469              		sd a0, 80(a1)
 470              	# 0 "" 2
 471              		.loc 1 254 5 is_stmt 1
 472              		.loc 1 254 46 is_stmt 0
 473              	# 254 "src/Riscv.cpp" 1
 255              	}
 474              		mv a1,a5
 475              	# 0 "" 2
 476              		.loc 1 255 1
 477              	#NO_APP
 478 0254 03348100 		ld	s0,8(sp)
 479              		.cfi_restore 8
 480              		.cfi_def_cfa 2, 16
 481 0258 13010101 		addi	sp,sp,16
 482              		.cfi_def_cfa_offset 0
GAS LISTING /tmp/ccBTqZWy.s 			page 18


 483 025c 67800000 		jr	ra
 484              		.cfi_endproc
 485              	.LFE38:
 487              		.align	2
 488              		.globl	_ZN5Riscv14changePrivModeEv
 490              	_ZN5Riscv14changePrivModeEv:
 491              	.LFB39:
 256:src/Riscv.cpp **** 
 257:src/Riscv.cpp **** void Riscv::changePrivMode()
 258:src/Riscv.cpp **** {
 492              		.loc 1 258 1 is_stmt 1
 493              		.cfi_startproc
 494 0260 130101FF 		addi	sp,sp,-16
 495              		.cfi_def_cfa_offset 16
 496 0264 23348100 		sd	s0,8(sp)
 497              		.cfi_offset 8, -8
 498 0268 13040101 		addi	s0,sp,16
 499              		.cfi_def_cfa 8, 0
 259:src/Riscv.cpp ****     if(PCB::running->systemThread)
 500              		.loc 1 259 5
 501              		.loc 1 259 22 is_stmt 0
 502 026c 97070000 		la	a5,_ZN3PCB7runningE
 502      83B70700 
 503 0274 83B70700 		ld	a5,0(a5)
 504 0278 83C70700 		lbu	a5,0(a5)
 505              		.loc 1 259 5
 506 027c 638C0700 		beqz	a5,.L35
 260:src/Riscv.cpp ****         Riscv::ms_sstatus(Riscv::SSTATUS_SPP);
 507              		.loc 1 260 9 is_stmt 1
 508              	.LVL28:
 509              	.LBB47:
 510              	.LBB48:
 195:src/../h/Riscv.hpp **** }
 511              		.loc 2 195 5
 195:src/../h/Riscv.hpp **** }
 512              		.loc 2 195 54 is_stmt 0
 513 0280 93070010 		li	a5,256
 514              	#APP
 515              	# 195 "src/../h/Riscv.hpp" 1
 516              		csrs sstatus, a5
 517              	# 0 "" 2
 518              	.LVL29:
 519              	#NO_APP
 520              	.L34:
 521              	.LBE48:
 522              	.LBE47:
 261:src/Riscv.cpp ****     else
 262:src/Riscv.cpp ****         Riscv::mc_sstatus(Riscv::SSTATUS_SPP);
 263:src/Riscv.cpp **** }
 523              		.loc 1 263 1
 524 0288 03348100 		ld	s0,8(sp)
 525              		.cfi_remember_state
 526              		.cfi_restore 8
 527              		.cfi_def_cfa 2, 16
 528 028c 13010101 		addi	sp,sp,16
 529              		.cfi_def_cfa_offset 0
 530 0290 67800000 		jr	ra
GAS LISTING /tmp/ccBTqZWy.s 			page 19


 531              	.L35:
 532              		.cfi_restore_state
 262:src/Riscv.cpp **** }
 533              		.loc 1 262 9 is_stmt 1
 534              	.LVL30:
 535              	.LBB49:
 536              	.LBB50:
 199:src/../h/Riscv.hpp **** }
 537              		.loc 2 199 5
 199:src/../h/Riscv.hpp **** }
 538              		.loc 2 199 54 is_stmt 0
 539 0294 93070010 		li	a5,256
 540              	#APP
 541              	# 199 "src/../h/Riscv.hpp" 1
 542              		csrc sstatus, a5
 543              	# 0 "" 2
 544              	.LVL31:
 545              	#NO_APP
 546              	.LBE50:
 547              	.LBE49:
 548              		.loc 1 263 1
 549 029c 6FF0DFFE 		j	.L34
 550              		.cfi_endproc
 551              	.LFE39:
 553              		.align	2
 554              		.globl	_ZN5Riscv20handleSupervisorTrapEv
 556              	_ZN5Riscv20handleSupervisorTrapEv:
 557              	.LFB32:
  61:src/Riscv.cpp ****     __asm__ volatile("mv %0, a4" : "=r"(PCB::savedRegA4));
 558              		.loc 1 61 1 is_stmt 1
 559              		.cfi_startproc
 560 02a0 130101F9 		addi	sp,sp,-112
 561              		.cfi_def_cfa_offset 112
 562 02a4 23341106 		sd	ra,104(sp)
 563 02a8 23308106 		sd	s0,96(sp)
 564 02ac 233C9104 		sd	s1,88(sp)
 565              		.cfi_offset 1, -8
 566              		.cfi_offset 8, -16
 567              		.cfi_offset 9, -24
 568 02b0 13040107 		addi	s0,sp,112
 569              		.cfi_def_cfa 8, 0
  62:src/Riscv.cpp ****     __asm__ volatile("csrr %0, sscratch":"=r"(PCB::running->sscratch));
 570              		.loc 1 62 5
  62:src/Riscv.cpp ****     __asm__ volatile("csrr %0, sscratch":"=r"(PCB::running->sscratch));
 571              		.loc 1 62 58 is_stmt 0
 572              	#APP
 573              	# 62 "src/Riscv.cpp" 1
 574              		mv a4, a4
 575              	# 0 "" 2
 576              	#NO_APP
 577 02b8 97070000 		la	a5,_ZN3PCB10savedRegA4E
 577      83B70700 
 578 02c0 23B0E700 		sd	a4,0(a5)
  63:src/Riscv.cpp **** 
 579              		.loc 1 63 5 is_stmt 1
  63:src/Riscv.cpp **** 
 580              		.loc 1 63 61 is_stmt 0
GAS LISTING /tmp/ccBTqZWy.s 			page 20


 581 02c4 97070000 		la	a5,_ZN3PCB7runningE
 581      83B70700 
 582 02cc 83B70700 		ld	a5,0(a5)
  63:src/Riscv.cpp **** 
 583              		.loc 1 63 71
 584              	#APP
 585              	# 63 "src/Riscv.cpp" 1
 586              		csrr a4, sscratch
 587              	# 0 "" 2
 588              	#NO_APP
 589 02d4 23B8E700 		sd	a4,16(a5)
  65:src/Riscv.cpp **** 
 590              		.loc 1 65 5 is_stmt 1
 591              	.LBB51:
 592              	.LBB52:
 120:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
 593              		.loc 2 120 5
 121:src/../h/Riscv.hpp ****     return scause;
 594              		.loc 2 121 5
 121:src/../h/Riscv.hpp ****     return scause;
 595              		.loc 2 121 55 is_stmt 0
 596              	#APP
 597              	# 121 "src/../h/Riscv.hpp" 1
 598              		csrr a5, scause
 599              	# 0 "" 2
 600              	#NO_APP
 601 02dc 233CF4FA 		sd	a5,-72(s0)
 122:src/../h/Riscv.hpp **** }
 602              		.loc 2 122 5 is_stmt 1
 122:src/../h/Riscv.hpp **** }
 603              		.loc 2 122 12 is_stmt 0
 604 02e0 833784FB 		ld	a5,-72(s0)
 605              	.LVL32:
 606              	.LBE52:
 607              	.LBE51:
  67:src/Riscv.cpp ****     {
 608              		.loc 1 67 5 is_stmt 1
 609              	.LBB53:
 610 02e4 13079000 		li	a4,9
 611 02e8 636EF702 		bgtu	a5,a4,.L39
 612 02ec 13078000 		li	a4,8
 613 02f0 63F4E718 		bgeu	a5,a4,.L40
 614 02f4 13075000 		li	a4,5
 615 02f8 638AE716 		beq	a5,a4,.L41
 616 02fc 13077000 		li	a4,7
 617 0300 6398E700 		bne	a5,a4,.L68
 618              	.LBB54:
 130:src/Riscv.cpp ****         {
 619              		.loc 1 130 9
 131:src/Riscv.cpp ****             //trapPrintString("write interrupt\n");
 620              		.loc 1 131 9
 133:src/Riscv.cpp ****             break;
 621              		.loc 1 133 13
 133:src/Riscv.cpp ****             break;
 622              		.loc 1 133 35 is_stmt 0
 623 0304 97000000 		call	_ZN3PCB17threadExitHandlerEv@plt
 623      E7800000 
GAS LISTING /tmp/ccBTqZWy.s 			page 21


 624              	.LVL33:
 134:src/Riscv.cpp ****         }
 625              		.loc 1 134 13 is_stmt 1
 626 030c 6F000012 		j	.L38
 627              	.LVL34:
 628              	.L68:
 629              	.LBE54:
  67:src/Riscv.cpp ****     {
 630              		.loc 1 67 5 is_stmt 0
 631 0310 13072000 		li	a4,2
 632 0314 639CE710 		bne	a5,a4,.L38
 633              	.LBB85:
 118:src/Riscv.cpp ****         {
 634              		.loc 1 118 9 is_stmt 1
 119:src/Riscv.cpp ****             //trapPrintString("operation interrupt\n");
 635              		.loc 1 119 9
 121:src/Riscv.cpp ****             break;
 636              		.loc 1 121 13
 121:src/Riscv.cpp ****             break;
 637              		.loc 1 121 35 is_stmt 0
 638 0318 97000000 		call	_ZN3PCB17threadExitHandlerEv@plt
 638      E7800000 
 639              	.LVL35:
 122:src/Riscv.cpp ****         }
 640              		.loc 1 122 13 is_stmt 1
 641 0320 6F00C010 		j	.L38
 642              	.LVL36:
 643              	.L39:
 644              	.LBE85:
  67:src/Riscv.cpp ****     {
 645              		.loc 1 67 5 is_stmt 0
 646 0324 1307F0FF 		li	a4,-1
 647 0328 1317F703 		slli	a4,a4,63
 648 032c 13071700 		addi	a4,a4,1
 649 0330 638AE706 		beq	a5,a4,.L45
 650 0334 1307F0FF 		li	a4,-1
 651 0338 1317F703 		slli	a4,a4,63
 652 033c 13079700 		addi	a4,a4,9
 653 0340 6396E70E 		bne	a5,a4,.L38
 654              	.LBB86:
  92:src/Riscv.cpp ****         {
 655              		.loc 1 92 9 is_stmt 1
  93:src/Riscv.cpp ****             uint64 x = CONSOLE_STATUS;
 656              		.loc 1 93 9
 657              	.LBB55:
  94:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0"::"r"(x));
 658              		.loc 1 94 13
  94:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0"::"r"(x));
 659              		.loc 1 94 20 is_stmt 0
 660 0344 97070000 		la	a5,CONSOLE_STATUS
 660      83B70700 
 661              	.LVL37:
 662 034c 83B70700 		ld	a5,0(a5)
 663              	.LVL38:
  95:src/Riscv.cpp ****             __asm__ volatile("lb a1, 0(a0)");
 664              		.loc 1 95 13 is_stmt 1
  95:src/Riscv.cpp ****             __asm__ volatile("lb a1, 0(a0)");
GAS LISTING /tmp/ccBTqZWy.s 			page 22


 665              		.loc 1 95 50 is_stmt 0
 666              	#APP
 667              	# 95 "src/Riscv.cpp" 1
  96:src/Riscv.cpp ****             uint64 operation;
 668              		mv a0, a5
 669              	# 0 "" 2
 670              		.loc 1 96 13 is_stmt 1
  96:src/Riscv.cpp ****             uint64 operation;
 671              		.loc 1 96 45 is_stmt 0
 672              	# 96 "src/Riscv.cpp" 1
  97:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" :  "=r"(operation));
 673              		lb a1, 0(a0)
 674              	# 0 "" 2
 675              		.loc 1 97 13 is_stmt 1
  98:src/Riscv.cpp ****             if(operation & KConsole::STATUS_READ_MASK)
 676              		.loc 1 98 13
  98:src/Riscv.cpp ****             if(operation & KConsole::STATUS_READ_MASK)
 677              		.loc 1 98 61 is_stmt 0
 678              	# 98 "src/Riscv.cpp" 1
 679              		mv a5, a1
 680              	# 0 "" 2
 681              	.LVL39:
  99:src/Riscv.cpp ****             {
 682              		.loc 1 99 13 is_stmt 1
 683              	#NO_APP
 684              	.LBB56:
  99:src/Riscv.cpp ****             {
 685              		.loc 1 99 26 is_stmt 0
 686 035c 93F71700 		andi	a5,a5,1
 687              	.LVL40:
  99:src/Riscv.cpp ****             {
 688              		.loc 1 99 13
 689 0360 63880702 		beqz	a5,.L48
 690              	.LBB57:
 101:src/Riscv.cpp ****                 __asm__ volatile("mv a0, %0"::"r"(x));
 691              		.loc 1 101 17 is_stmt 1
 101:src/Riscv.cpp ****                 __asm__ volatile("mv a0, %0"::"r"(x));
 692              		.loc 1 101 19 is_stmt 0
 693 0364 97070000 		la	a5,CONSOLE_TX_DATA
 693      83B70700 
 694 036c 83B70700 		ld	a5,0(a5)
 695              	.LVL41:
 102:src/Riscv.cpp ****                 __asm__ volatile("lb a1,0(a0)");
 696              		.loc 1 102 17 is_stmt 1
 102:src/Riscv.cpp ****                 __asm__ volatile("lb a1,0(a0)");
 697              		.loc 1 102 54 is_stmt 0
 698              	#APP
 699              	# 102 "src/Riscv.cpp" 1
 103:src/Riscv.cpp ****                 char c;
 700              		mv a0, a5
 701              	# 0 "" 2
 702              		.loc 1 103 17 is_stmt 1
 103:src/Riscv.cpp ****                 char c;
 703              		.loc 1 103 48 is_stmt 0
 704              	# 103 "src/Riscv.cpp" 1
 104:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" :  "=r"(c));
 705              		lb a1,0(a0)
GAS LISTING /tmp/ccBTqZWy.s 			page 23


 706              	# 0 "" 2
 707              		.loc 1 104 17 is_stmt 1
 105:src/Riscv.cpp ****                 if(KConsole::pendingGetc > 0)
 708              		.loc 1 105 17
 105:src/Riscv.cpp ****                 if(KConsole::pendingGetc > 0)
 709              		.loc 1 105 57 is_stmt 0
 710              	# 105 "src/Riscv.cpp" 1
 711              		mv a0, a1
 712              	# 0 "" 2
 713              	#NO_APP
 714 037c 1375F50F 		andi	a0,a0,0xff
 715              	.LVL42:
 106:src/Riscv.cpp ****                 {
 716              		.loc 1 106 17 is_stmt 1
 106:src/Riscv.cpp ****                 {
 717              		.loc 1 106 42 is_stmt 0
 718 0380 97070000 		la	a5,_ZN8KConsole11pendingGetcE
 718      83B70700 
 719              	.LVL43:
 720 0388 83B70700 		ld	a5,0(a5)
 106:src/Riscv.cpp ****                 {
 721              		.loc 1 106 17
 722 038c 6392070C 		bnez	a5,.L69
 723              	.LVL44:
 724              	.L48:
 725              	.LBE57:
 726              	.LBE56:
 114:src/Riscv.cpp **** 
 727              		.loc 1 114 13 is_stmt 1
 114:src/Riscv.cpp **** 
 728              		.loc 1 114 26 is_stmt 0
 729 0390 97000000 		call	plic_claim@plt
 729      E7800000 
 730              	.LVL45:
 731 0398 97000000 		call	plic_complete@plt
 731      E7800000 
 732              	.LVL46:
 116:src/Riscv.cpp ****         }
 733              		.loc 1 116 13 is_stmt 1
 734 03a0 6F00C008 		j	.L38
 735              	.LVL47:
 736              	.L45:
 737              	.LBE55:
  69:src/Riscv.cpp ****         {
 738              		.loc 1 69 9
  70:src/Riscv.cpp ****             uint64 volatile sepc = Riscv::r_sepc();
 739              		.loc 1 70 9
 740              	.LBB60:
  71:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 741              		.loc 1 71 13
 742              	.LBB61:
 743              	.LBB62:
 130:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 744              		.loc 2 130 5
 131:src/../h/Riscv.hpp ****     return sepc;
 745              		.loc 2 131 5
 131:src/../h/Riscv.hpp ****     return sepc;
GAS LISTING /tmp/ccBTqZWy.s 			page 24


 746              		.loc 2 131 51 is_stmt 0
 747              	#APP
 748              	# 131 "src/../h/Riscv.hpp" 1
 749              		csrr a5, sepc
 750              	# 0 "" 2
 751              	.LVL48:
 752              	#NO_APP
 753 03a8 2334F4FC 		sd	a5,-56(s0)
 132:src/../h/Riscv.hpp **** }
 754              		.loc 2 132 5 is_stmt 1
 132:src/../h/Riscv.hpp **** }
 755              		.loc 2 132 12 is_stmt 0
 756 03ac 833784FC 		ld	a5,-56(s0)
 757              	.LBE62:
 758              	.LBE61:
  71:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 759              		.loc 1 71 50
 760 03b0 233CF4F8 		sd	a5,-104(s0)
  72:src/Riscv.cpp ****             mc_sip(Riscv::SIP_SSIP);
 761              		.loc 1 72 13 is_stmt 1
 762              	.LBB63:
 763              	.LBB64:
 201:src/../h/Riscv.hpp **** 
 202:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sstatus() {
 203:src/../h/Riscv.hpp ****     uint64 volatile sstatus;
 764              		.loc 2 203 5
 204:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 765              		.loc 2 204 5
 766              		.loc 2 204 57 is_stmt 0
 767              	#APP
 768              	# 204 "src/../h/Riscv.hpp" 1
 205              	    return sstatus;
 769              		csrr a5, sstatus
 770              	# 0 "" 2
 771              	#NO_APP
 772 03b8 2330F4FC 		sd	a5,-64(s0)
 773              		.loc 2 205 5 is_stmt 1
 774              		.loc 2 205 12 is_stmt 0
 775 03bc 833704FC 		ld	a5,-64(s0)
 776              	.LBE64:
 777              	.LBE63:
  72:src/Riscv.cpp ****             mc_sip(Riscv::SIP_SSIP);
 778              		.loc 1 72 56
 779 03c0 2330F4FA 		sd	a5,-96(s0)
  73:src/Riscv.cpp ****             //KConsole::trapPrintString("timerInterrupt\n");
 780              		.loc 1 73 13 is_stmt 1
 781              	.LVL49:
 782              	.LBB65:
 783              	.LBB66:
 169:src/../h/Riscv.hpp **** }
 784              		.loc 2 169 5
 169:src/../h/Riscv.hpp **** }
 785              		.loc 2 169 50 is_stmt 0
 786 03c4 93072000 		li	a5,2
 787              	#APP
 788              	# 169 "src/../h/Riscv.hpp" 1
 789              		csrc sip, a5
GAS LISTING /tmp/ccBTqZWy.s 			page 25


 790              	# 0 "" 2
 791              	.LVL50:
 792              	#NO_APP
 793              	.LBE66:
 794              	.LBE65:
  76:src/Riscv.cpp ****             //KConsole::trapPrintInt(totalTime);
 795              		.loc 1 76 13 is_stmt 1
  76:src/Riscv.cpp ****             //KConsole::trapPrintInt(totalTime);
 796              		.loc 1 76 22 is_stmt 0
 797 03cc 17070000 		lla	a4,.LANCHOR0
 797      13070700 
 798 03d4 83378700 		ld	a5,8(a4)
 799 03d8 93871700 		addi	a5,a5,1
 800 03dc 2334F700 		sd	a5,8(a4)
  79:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
 801              		.loc 1 79 13 is_stmt 1
  79:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
 802              		.loc 1 79 34 is_stmt 0
 803 03e0 97040000 		la	s1,_ZN3PCB16timeSliceCounterE
 803      83B40400 
 804 03e8 83B70400 		ld	a5,0(s1)
 805 03ec 93871700 		addi	a5,a5,1
 806 03f0 23B0F400 		sd	a5,0(s1)
  80:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
 807              		.loc 1 80 13 is_stmt 1
  80:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
 808              		.loc 1 80 40 is_stmt 0
 809 03f4 97000000 		call	_ZN12SleepPCBList13tryToWakePCBsEv@plt
 809      E7800000 
 810              	.LVL51:
  81:src/Riscv.cpp ****             {
 811              		.loc 1 81 13 is_stmt 1
  81:src/Riscv.cpp ****             {
 812              		.loc 1 81 68 is_stmt 0
 813 03fc 97070000 		la	a5,_ZN3PCB7runningE
 813      83B70700 
 814 0404 83B70700 		ld	a5,0(a5)
 815              	.LVL52:
 816              	.LBB67:
 817              	.LBB68:
 818              		.file 3 "src/../h/PCB.hpp"
   1:src/../h/PCB.hpp **** //
   2:src/../h/PCB.hpp **** // Created by os on 4/27/22.
   3:src/../h/PCB.hpp **** //
   4:src/../h/PCB.hpp **** 
   5:src/../h/PCB.hpp **** #ifndef PROJECT_BASE_V1_0_PCB_HPP
   6:src/../h/PCB.hpp **** #define PROJECT_BASE_V1_0_PCB_HPP
   7:src/../h/PCB.hpp **** 
   8:src/../h/PCB.hpp **** #include "../lib/hw.h"
   9:src/../h/PCB.hpp **** 
  10:src/../h/PCB.hpp **** class PCB
  11:src/../h/PCB.hpp **** {
  12:src/../h/PCB.hpp **** private:
  13:src/../h/PCB.hpp ****     static uint64 savedRegA4;
  14:src/../h/PCB.hpp **** 
  15:src/../h/PCB.hpp ****     using Body = void (*)(void*);
  16:src/../h/PCB.hpp **** 
GAS LISTING /tmp/ccBTqZWy.s 			page 26


  17:src/../h/PCB.hpp ****     PCB(Body body,  void* args, void* stack_space, uint64 timeSlice);
  18:src/../h/PCB.hpp ****     ~PCB();
  19:src/../h/PCB.hpp **** 
  20:src/../h/PCB.hpp ****     void start();
  21:src/../h/PCB.hpp ****     static void dispatch();
  22:src/../h/PCB.hpp ****     static void sleep(time_t);
  23:src/../h/PCB.hpp **** 
  24:src/../h/PCB.hpp ****     static PCB* running;
  25:src/../h/PCB.hpp **** 
  26:src/../h/PCB.hpp ****     static uint64 timeSliceCounter;
  27:src/../h/PCB.hpp ****     uint64 getTimeSlice() { return timeSlice;}
 819              		.loc 3 27 29 is_stmt 1
 820              		.loc 3 27 36 is_stmt 0
 821 0408 83B78701 		ld	a5,24(a5)
 822              	.LVL53:
 823              	.LBE68:
 824              	.LBE67:
  81:src/Riscv.cpp ****             {
 825              		.loc 1 81 39
 826 040c 03B70400 		ld	a4,0(s1)
  81:src/Riscv.cpp ****             {
 827              		.loc 1 81 13
 828 0410 6378F702 		bgeu	a4,a5,.L70
 829              	.L47:
  87:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 830              		.loc 1 87 13 is_stmt 1
  87:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 831              		.loc 1 87 29 is_stmt 0
 832 0414 833704FA 		ld	a5,-96(s0)
 833              	.LVL54:
 834              	.LBB69:
 835              	.LBB70:
 206:src/../h/Riscv.hpp **** }
 207:src/../h/Riscv.hpp **** 
 208:src/../h/Riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus) {
 209:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sstatus, %0" : :"r"(sstatus));
 836              		.loc 2 209 5 is_stmt 1
 837              		.loc 2 209 57 is_stmt 0
 838              	#APP
 839              	# 209 "src/../h/Riscv.hpp" 1
 210              	}
 840              		csrw sstatus, a5
 841              	# 0 "" 2
 842              	.LVL55:
 843              	#NO_APP
 844              	.LBE70:
 845              	.LBE69:
  88:src/Riscv.cpp ****             changePrivMode();
 846              		.loc 1 88 13 is_stmt 1
  88:src/Riscv.cpp ****             changePrivMode();
 847              		.loc 1 88 26 is_stmt 0
 848 041c 833784F9 		ld	a5,-104(s0)
 849              	.LVL56:
 850              	.LBB71:
 851              	.LBB72:
 136:src/../h/Riscv.hpp **** }
 852              		.loc 2 136 5 is_stmt 1
GAS LISTING /tmp/ccBTqZWy.s 			page 27


 136:src/../h/Riscv.hpp **** }
 853              		.loc 2 136 51 is_stmt 0
 854              	#APP
 855              	# 136 "src/../h/Riscv.hpp" 1
 856              		csrw sepc, a5
 857              	# 0 "" 2
 858              	.LVL57:
 859              	#NO_APP
 860              	.LBE72:
 861              	.LBE71:
  89:src/Riscv.cpp ****             break;
 862              		.loc 1 89 13 is_stmt 1
  89:src/Riscv.cpp ****             break;
 863              		.loc 1 89 27 is_stmt 0
 864 0424 97000000 		call	_ZN5Riscv14changePrivModeEv
 864      E7800000 
 865              	.LVL58:
  90:src/Riscv.cpp ****         }
 866              		.loc 1 90 13 is_stmt 1
 867              	.L38:
 868              	.LBE60:
 869              	.LBE86:
 870              	.LBE53:
 203:src/Riscv.cpp **** 
 871              		.loc 1 203 1 is_stmt 0
 872 042c 83308106 		ld	ra,104(sp)
 873              		.cfi_remember_state
 874              		.cfi_restore 1
 875 0430 03340106 		ld	s0,96(sp)
 876              		.cfi_restore 8
 877              		.cfi_def_cfa 2, 112
 878 0434 83348105 		ld	s1,88(sp)
 879              		.cfi_restore 9
 880 0438 13010107 		addi	sp,sp,112
 881              		.cfi_def_cfa_offset 0
 882 043c 67800000 		jr	ra
 883              	.L70:
 884              		.cfi_restore_state
 885              	.LBB89:
 886              	.LBB87:
 887              	.LBB73:
  83:src/Riscv.cpp ****                 PCB::dispatch();
 888              		.loc 1 83 17 is_stmt 1
  83:src/Riscv.cpp ****                 PCB::dispatch();
 889              		.loc 1 83 39 is_stmt 0
 890 0440 23B00400 		sd	zero,0(s1)
  84:src/Riscv.cpp ****             }
 891              		.loc 1 84 17 is_stmt 1
  84:src/Riscv.cpp ****             }
 892              		.loc 1 84 30 is_stmt 0
 893 0444 97000000 		call	_ZN3PCB8dispatchEv@plt
 893      E7800000 
 894              	.LVL59:
 895 044c 6FF09FFC 		j	.L47
 896              	.LVL60:
 897              	.L69:
 898              	.LBE73:
GAS LISTING /tmp/ccBTqZWy.s 			page 28


 899              	.LBB74:
 900              	.LBB59:
 901              	.LBB58:
 108:src/Riscv.cpp ****                     KConsole::putCharacterInput(c);
 902              		.loc 1 108 21 is_stmt 1
 108:src/Riscv.cpp ****                     KConsole::putCharacterInput(c);
 903              		.loc 1 108 42 is_stmt 0
 904 0450 9387F7FF 		addi	a5,a5,-1
 905 0454 17070000 		la	a4,_ZN8KConsole11pendingGetcE
 905      03370700 
 906 045c 2330F700 		sd	a5,0(a4)
 109:src/Riscv.cpp ****                     //KConsole::putCharacterOutput(c);
 907              		.loc 1 109 21 is_stmt 1
 109:src/Riscv.cpp ****                     //KConsole::putCharacterOutput(c);
 908              		.loc 1 109 48 is_stmt 0
 909 0460 97000000 		call	_ZN8KConsole17putCharacterInputEc@plt
 909      E7800000 
 910              	.LVL61:
 911 0468 6FF09FF2 		j	.L48
 912              	.LVL62:
 913              	.L41:
 914              	.LBE58:
 915              	.LBE59:
 916              	.LBE74:
 124:src/Riscv.cpp ****         {
 917              		.loc 1 124 9 is_stmt 1
 125:src/Riscv.cpp ****             //trapPrintString("read interrupt\n");
 918              		.loc 1 125 9
 127:src/Riscv.cpp ****             break;
 919              		.loc 1 127 13
 127:src/Riscv.cpp ****             break;
 920              		.loc 1 127 35 is_stmt 0
 921 046c 97000000 		call	_ZN3PCB17threadExitHandlerEv@plt
 921      E7800000 
 922              	.LVL63:
 128:src/Riscv.cpp ****         }
 923              		.loc 1 128 13 is_stmt 1
 924 0474 6FF09FFB 		j	.L38
 925              	.LVL64:
 926              	.L40:
 136:src/Riscv.cpp ****         case ecallUserInterrupt:
 927              		.loc 1 136 9
 137:src/Riscv.cpp ****         {
 928              		.loc 1 137 9
 138:src/Riscv.cpp ****             uint64 operation;
 929              		.loc 1 138 9
 930              	.LBB75:
 139:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
 931              		.loc 1 139 13
 140:src/Riscv.cpp **** 
 932              		.loc 1 140 13
 140:src/Riscv.cpp **** 
 933              		.loc 1 140 61 is_stmt 0
 934              	#APP
 935              	# 140 "src/Riscv.cpp" 1
 936              		mv a5, a0
 937              	# 0 "" 2
GAS LISTING /tmp/ccBTqZWy.s 			page 29


 938              	.LVL65:
 142:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 939              		.loc 1 142 13 is_stmt 1
 940              	#NO_APP
 941              	.LBB76:
 942              	.LBB77:
 130:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 943              		.loc 2 130 5
 131:src/../h/Riscv.hpp ****     return sepc;
 944              		.loc 2 131 5
 131:src/../h/Riscv.hpp ****     return sepc;
 945              		.loc 2 131 51 is_stmt 0
 946              	#APP
 947              	# 131 "src/../h/Riscv.hpp" 1
 948              		csrr a4, sepc
 949              	# 0 "" 2
 950              	#NO_APP
 951 0480 233CE4FC 		sd	a4,-40(s0)
 132:src/../h/Riscv.hpp **** }
 952              		.loc 2 132 5 is_stmt 1
 132:src/../h/Riscv.hpp **** }
 953              		.loc 2 132 12 is_stmt 0
 954 0484 033784FD 		ld	a4,-40(s0)
 955              	.LBE77:
 956              	.LBE76:
 142:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 957              		.loc 1 142 52
 958 0488 13074700 		addi	a4,a4,4
 142:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 959              		.loc 1 142 54
 960 048c 2334E4FA 		sd	a4,-88(s0)
 143:src/Riscv.cpp **** 
 961              		.loc 1 143 13 is_stmt 1
 962              	.LBB78:
 963              	.LBB79:
 203:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 964              		.loc 2 203 5
 204:src/../h/Riscv.hpp ****     return sstatus;
 965              		.loc 2 204 5
 204:src/../h/Riscv.hpp ****     return sstatus;
 966              		.loc 2 204 57 is_stmt 0
 967              	#APP
 968              	# 204 "src/../h/Riscv.hpp" 1
 969              		csrr a4, sstatus
 970              	# 0 "" 2
 971              	#NO_APP
 972 0494 2338E4FC 		sd	a4,-48(s0)
 205:src/../h/Riscv.hpp **** }
 973              		.loc 2 205 5 is_stmt 1
 205:src/../h/Riscv.hpp **** }
 974              		.loc 2 205 12 is_stmt 0
 975 0498 033704FD 		ld	a4,-48(s0)
 976              	.LBE79:
 977              	.LBE78:
 143:src/Riscv.cpp **** 
 978              		.loc 1 143 56
 979 049c 2338E4FA 		sd	a4,-80(s0)
GAS LISTING /tmp/ccBTqZWy.s 			page 30


 145:src/Riscv.cpp ****             {
 980              		.loc 1 145 13 is_stmt 1
 981 04a0 13073004 		li	a4,67
 982 04a4 6364F702 		bgtu	a5,a4,.L49
 983 04a8 93972700 		slli	a5,a5,2
 984              	.LVL66:
 985 04ac 17070000 		lla	a4,.L51
 985      13070700 
 986 04b4 B387E700 		add	a5,a5,a4
 987 04b8 83A70700 		lw	a5,0(a5)
 988 04bc B387E700 		add	a5,a5,a4
 989 04c0 67800700 		jr	a5
 990              		.section	.rodata
 991              		.align	2
 992              		.align	2
 993              	.L51:
 994 0000 00000000 		.word	.L49-.L51
 995 0004 00000000 		.word	.L66-.L51
 996 0008 00000000 		.word	.L65-.L51
 997 000c 00000000 		.word	.L49-.L51
 998 0010 00000000 		.word	.L49-.L51
 999 0014 00000000 		.word	.L49-.L51
 1000 0018 00000000 		.word	.L49-.L51
 1001 001c 00000000 		.word	.L49-.L51
 1002 0020 00000000 		.word	.L49-.L51
 1003 0024 00000000 		.word	.L49-.L51
 1004 0028 00000000 		.word	.L49-.L51
 1005 002c 00000000 		.word	.L49-.L51
 1006 0030 00000000 		.word	.L49-.L51
 1007 0034 00000000 		.word	.L49-.L51
 1008 0038 00000000 		.word	.L49-.L51
 1009 003c 00000000 		.word	.L49-.L51
 1010 0040 00000000 		.word	.L49-.L51
 1011 0044 00000000 		.word	.L64-.L51
 1012 0048 00000000 		.word	.L63-.L51
 1013 004c 00000000 		.word	.L62-.L51
 1014 0050 00000000 		.word	.L61-.L51
 1015 0054 00000000 		.word	.L60-.L51
 1016 0058 00000000 		.word	.L59-.L51
 1017 005c 00000000 		.word	.L49-.L51
 1018 0060 00000000 		.word	.L49-.L51
 1019 0064 00000000 		.word	.L49-.L51
 1020 0068 00000000 		.word	.L49-.L51
 1021 006c 00000000 		.word	.L49-.L51
 1022 0070 00000000 		.word	.L49-.L51
 1023 0074 00000000 		.word	.L49-.L51
 1024 0078 00000000 		.word	.L49-.L51
 1025 007c 00000000 		.word	.L49-.L51
 1026 0080 00000000 		.word	.L49-.L51
 1027 0084 00000000 		.word	.L58-.L51
 1028 0088 00000000 		.word	.L57-.L51
 1029 008c 00000000 		.word	.L56-.L51
 1030 0090 00000000 		.word	.L55-.L51
 1031 0094 00000000 		.word	.L49-.L51
 1032 0098 00000000 		.word	.L49-.L51
 1033 009c 00000000 		.word	.L49-.L51
 1034 00a0 00000000 		.word	.L49-.L51
GAS LISTING /tmp/ccBTqZWy.s 			page 31


 1035 00a4 00000000 		.word	.L49-.L51
 1036 00a8 00000000 		.word	.L49-.L51
 1037 00ac 00000000 		.word	.L49-.L51
 1038 00b0 00000000 		.word	.L49-.L51
 1039 00b4 00000000 		.word	.L49-.L51
 1040 00b8 00000000 		.word	.L49-.L51
 1041 00bc 00000000 		.word	.L49-.L51
 1042 00c0 00000000 		.word	.L49-.L51
 1043 00c4 00000000 		.word	.L54-.L51
 1044 00c8 00000000 		.word	.L49-.L51
 1045 00cc 00000000 		.word	.L49-.L51
 1046 00d0 00000000 		.word	.L49-.L51
 1047 00d4 00000000 		.word	.L49-.L51
 1048 00d8 00000000 		.word	.L49-.L51
 1049 00dc 00000000 		.word	.L49-.L51
 1050 00e0 00000000 		.word	.L49-.L51
 1051 00e4 00000000 		.word	.L49-.L51
 1052 00e8 00000000 		.word	.L49-.L51
 1053 00ec 00000000 		.word	.L49-.L51
 1054 00f0 00000000 		.word	.L49-.L51
 1055 00f4 00000000 		.word	.L49-.L51
 1056 00f8 00000000 		.word	.L49-.L51
 1057 00fc 00000000 		.word	.L49-.L51
 1058 0100 00000000 		.word	.L49-.L51
 1059 0104 00000000 		.word	.L53-.L51
 1060 0108 00000000 		.word	.L52-.L51
 1061 010c 00000000 		.word	.L50-.L51
 1062              		.text
 1063              	.L66:
 147:src/Riscv.cpp ****                     MemoryAllocator::memAllocHandler();
 1064              		.loc 1 147 17
 148:src/Riscv.cpp ****                     break;
 1065              		.loc 1 148 21
 148:src/Riscv.cpp ****                     break;
 1066              		.loc 1 148 53 is_stmt 0
 1067 04c4 97000000 		call	_ZN15MemoryAllocator15memAllocHandlerEv@plt
 1067      E7800000 
 1068              	.LVL67:
 149:src/Riscv.cpp ****                 case MemoryAllocator::MEM_FREE:
 1069              		.loc 1 149 21 is_stmt 1
 1070              	.L49:
 197:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 1071              		.loc 1 197 13
 197:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 1072              		.loc 1 197 29 is_stmt 0
 1073 04cc 833704FB 		ld	a5,-80(s0)
 1074              	.LVL68:
 1075              	.LBB80:
 1076              	.LBB81:
 209:src/../h/Riscv.hpp **** }
 1077              		.loc 2 209 5 is_stmt 1
 209:src/../h/Riscv.hpp **** }
 1078              		.loc 2 209 57 is_stmt 0
 1079              	#APP
 1080              	# 209 "src/../h/Riscv.hpp" 1
 1081              		csrw sstatus, a5
 1082              	# 0 "" 2
GAS LISTING /tmp/ccBTqZWy.s 			page 32


 1083              	.LVL69:
 1084              	#NO_APP
 1085              	.LBE81:
 1086              	.LBE80:
 198:src/Riscv.cpp ****             changePrivMode();
 1087              		.loc 1 198 13 is_stmt 1
 198:src/Riscv.cpp ****             changePrivMode();
 1088              		.loc 1 198 26 is_stmt 0
 1089 04d4 833784FA 		ld	a5,-88(s0)
 1090              	.LVL70:
 1091              	.LBB82:
 1092              	.LBB83:
 136:src/../h/Riscv.hpp **** }
 1093              		.loc 2 136 5 is_stmt 1
 136:src/../h/Riscv.hpp **** }
 1094              		.loc 2 136 51 is_stmt 0
 1095              	#APP
 1096              	# 136 "src/../h/Riscv.hpp" 1
 1097              		csrw sepc, a5
 1098              	# 0 "" 2
 1099              	.LVL71:
 1100              	#NO_APP
 1101              	.LBE83:
 1102              	.LBE82:
 199:src/Riscv.cpp ****             break;
 1103              		.loc 1 199 13 is_stmt 1
 199:src/Riscv.cpp ****             break;
 1104              		.loc 1 199 27 is_stmt 0
 1105 04dc 97000000 		call	_ZN5Riscv14changePrivModeEv
 1105      E7800000 
 1106              	.LVL72:
 200:src/Riscv.cpp ****         }
 1107              		.loc 1 200 13 is_stmt 1
 1108              	.LBE75:
 1109              	.LBE87:
 1110              	.LBE89:
 203:src/Riscv.cpp **** 
 1111              		.loc 1 203 1 is_stmt 0
 1112 04e4 6FF09FF4 		j	.L38
 1113              	.L65:
 1114              	.LBB90:
 1115              	.LBB88:
 1116              	.LBB84:
 150:src/Riscv.cpp ****                     MemoryAllocator::memFreeHandler();
 1117              		.loc 1 150 17 is_stmt 1
 151:src/Riscv.cpp ****                     break;
 1118              		.loc 1 151 21
 151:src/Riscv.cpp ****                     break;
 1119              		.loc 1 151 52 is_stmt 0
 1120 04e8 97000000 		call	_ZN15MemoryAllocator14memFreeHandlerEv@plt
 1120      E7800000 
 1121              	.LVL73:
 152:src/Riscv.cpp ****                 case PCB::THREAD_MAKE_PCB:
 1122              		.loc 1 152 21 is_stmt 1
 1123 04f0 6FF0DFFD 		j	.L49
 1124              	.L61:
 153:src/Riscv.cpp ****                     PCB::threadMakePCBHandler();
GAS LISTING /tmp/ccBTqZWy.s 			page 33


 1125              		.loc 1 153 17
 154:src/Riscv.cpp ****                     break;
 1126              		.loc 1 154 21
 154:src/Riscv.cpp ****                     break;
 1127              		.loc 1 154 46 is_stmt 0
 1128 04f4 97000000 		call	_ZN3PCB20threadMakePCBHandlerEv@plt
 1128      E7800000 
 1129              	.LVL74:
 155:src/Riscv.cpp ****                 case PCB::THREAD_CREATE:
 1130              		.loc 1 155 21 is_stmt 1
 1131 04fc 6FF01FFD 		j	.L49
 1132              	.L64:
 156:src/Riscv.cpp ****                     PCB::threadCreateHandler();
 1133              		.loc 1 156 17
 157:src/Riscv.cpp ****                     break;
 1134              		.loc 1 157 21
 157:src/Riscv.cpp ****                     break;
 1135              		.loc 1 157 45 is_stmt 0
 1136 0500 97000000 		call	_ZN3PCB19threadCreateHandlerEv@plt
 1136      E7800000 
 1137              	.LVL75:
 158:src/Riscv.cpp ****                 case PCB::THREAD_START:
 1138              		.loc 1 158 21 is_stmt 1
 1139 0508 6FF05FFC 		j	.L49
 1140              	.L60:
 159:src/Riscv.cpp ****                     PCB::threadStartHandler();
 1141              		.loc 1 159 17
 160:src/Riscv.cpp ****                     break;
 1142              		.loc 1 160 21
 160:src/Riscv.cpp ****                     break;
 1143              		.loc 1 160 44 is_stmt 0
 1144 050c 97000000 		call	_ZN3PCB18threadStartHandlerEv@plt
 1144      E7800000 
 1145              	.LVL76:
 161:src/Riscv.cpp ****                 case PCB::THREAD_DISPATCH:
 1146              		.loc 1 161 21 is_stmt 1
 1147 0514 6FF09FFB 		j	.L49
 1148              	.L62:
 162:src/Riscv.cpp ****                     PCB::threadDispatchHandler();
 1149              		.loc 1 162 17
 163:src/Riscv.cpp ****                     break;
 1150              		.loc 1 163 21
 163:src/Riscv.cpp ****                     break;
 1151              		.loc 1 163 47 is_stmt 0
 1152 0518 97000000 		call	_ZN3PCB21threadDispatchHandlerEv@plt
 1152      E7800000 
 1153              	.LVL77:
 164:src/Riscv.cpp ****                 case PCB::THREAD_EXIT:
 1154              		.loc 1 164 21 is_stmt 1
 1155 0520 6FF0DFFA 		j	.L49
 1156              	.L63:
 165:src/Riscv.cpp ****                     PCB::threadExitHandler();
 1157              		.loc 1 165 17
 166:src/Riscv.cpp ****                     break;
 1158              		.loc 1 166 21
 166:src/Riscv.cpp ****                     break;
 1159              		.loc 1 166 43 is_stmt 0
GAS LISTING /tmp/ccBTqZWy.s 			page 34


 1160 0524 97000000 		call	_ZN3PCB17threadExitHandlerEv@plt
 1160      E7800000 
 1161              	.LVL78:
 167:src/Riscv.cpp ****                 case PCB::TIME_SLEEP:
 1162              		.loc 1 167 21 is_stmt 1
 1163 052c 6FF01FFA 		j	.L49
 1164              	.L54:
 168:src/Riscv.cpp ****                     PCB::threadSleepHandler();
 1165              		.loc 1 168 17
 169:src/Riscv.cpp ****                     break;
 1166              		.loc 1 169 21
 169:src/Riscv.cpp ****                     break;
 1167              		.loc 1 169 44 is_stmt 0
 1168 0530 97000000 		call	_ZN3PCB18threadSleepHandlerEv@plt
 1168      E7800000 
 1169              	.LVL79:
 170:src/Riscv.cpp ****                 case PCB::THREAD_DEL_PCB:
 1170              		.loc 1 170 21 is_stmt 1
 1171 0538 6FF05FF9 		j	.L49
 1172              	.L59:
 171:src/Riscv.cpp ****                      PCB::threadDelPCBHandler();
 1173              		.loc 1 171 17
 172:src/Riscv.cpp ****                      break;
 1174              		.loc 1 172 22
 172:src/Riscv.cpp ****                      break;
 1175              		.loc 1 172 46 is_stmt 0
 1176 053c 97000000 		call	_ZN3PCB19threadDelPCBHandlerEv@plt
 1176      E7800000 
 1177              	.LVL80:
 173:src/Riscv.cpp ****                 case KSemaphore::SEM_OPEN:
 1178              		.loc 1 173 22 is_stmt 1
 1179 0544 6FF09FF8 		j	.L49
 1180              	.L58:
 174:src/Riscv.cpp ****                     KSemaphore::semOpenHandler();
 1181              		.loc 1 174 17
 175:src/Riscv.cpp ****                     break;
 1182              		.loc 1 175 21
 175:src/Riscv.cpp ****                     break;
 1183              		.loc 1 175 47 is_stmt 0
 1184 0548 97000000 		call	_ZN10KSemaphore14semOpenHandlerEv@plt
 1184      E7800000 
 1185              	.LVL81:
 176:src/Riscv.cpp ****                 case KSemaphore::SEM_WAIT:
 1186              		.loc 1 176 21 is_stmt 1
 1187 0550 6FF0DFF7 		j	.L49
 1188              	.L56:
 177:src/Riscv.cpp ****                     KSemaphore::semWaitHandler();
 1189              		.loc 1 177 17
 178:src/Riscv.cpp ****                     break;
 1190              		.loc 1 178 21
 178:src/Riscv.cpp ****                     break;
 1191              		.loc 1 178 47 is_stmt 0
 1192 0554 97000000 		call	_ZN10KSemaphore14semWaitHandlerEv@plt
 1192      E7800000 
 1193              	.LVL82:
 179:src/Riscv.cpp ****                 case KSemaphore::SEM_SIGNAL:
 1194              		.loc 1 179 21 is_stmt 1
GAS LISTING /tmp/ccBTqZWy.s 			page 35


 1195 055c 6FF01FF7 		j	.L49
 1196              	.L55:
 180:src/Riscv.cpp ****                     KSemaphore::semSignalHandler();
 1197              		.loc 1 180 17
 181:src/Riscv.cpp ****                     break;
 1198              		.loc 1 181 21
 181:src/Riscv.cpp ****                     break;
 1199              		.loc 1 181 49 is_stmt 0
 1200 0560 97000000 		call	_ZN10KSemaphore16semSignalHandlerEv@plt
 1200      E7800000 
 1201              	.LVL83:
 182:src/Riscv.cpp ****                 case KSemaphore::SEM_CLOSE:
 1202              		.loc 1 182 21 is_stmt 1
 1203 0568 6FF05FF6 		j	.L49
 1204              	.L57:
 183:src/Riscv.cpp ****                     KSemaphore::semCloseHandler();
 1205              		.loc 1 183 17
 184:src/Riscv.cpp ****                     break;
 1206              		.loc 1 184 21
 184:src/Riscv.cpp ****                     break;
 1207              		.loc 1 184 48 is_stmt 0
 1208 056c 97000000 		call	_ZN10KSemaphore15semCloseHandlerEv@plt
 1208      E7800000 
 1209              	.LVL84:
 185:src/Riscv.cpp ****                 case KConsole::CONSOLE_GETC:
 1210              		.loc 1 185 21 is_stmt 1
 1211 0574 6FF09FF5 		j	.L49
 1212              	.L53:
 186:src/Riscv.cpp ****                     KConsole::getcHandler();
 1213              		.loc 1 186 17
 187:src/Riscv.cpp ****                     break;
 1214              		.loc 1 187 21
 187:src/Riscv.cpp ****                     break;
 1215              		.loc 1 187 42 is_stmt 0
 1216 0578 97000000 		call	_ZN8KConsole11getcHandlerEv@plt
 1216      E7800000 
 1217              	.LVL85:
 188:src/Riscv.cpp ****                 case KConsole::CONSOLE_PUTC:
 1218              		.loc 1 188 21 is_stmt 1
 1219 0580 6FF0DFF4 		j	.L49
 1220              	.L52:
 189:src/Riscv.cpp ****                     KConsole::putcHandler();
 1221              		.loc 1 189 17
 190:src/Riscv.cpp ****                     break;
 1222              		.loc 1 190 21
 190:src/Riscv.cpp ****                     break;
 1223              		.loc 1 190 42 is_stmt 0
 1224 0584 97000000 		call	_ZN8KConsole11putcHandlerEv@plt
 1224      E7800000 
 1225              	.LVL86:
 191:src/Riscv.cpp ****                 case KConsole::CONSOLE_GET_CHAR:
 1226              		.loc 1 191 21 is_stmt 1
 1227 058c 6FF01FF4 		j	.L49
 1228              	.L50:
 192:src/Riscv.cpp ****                     KConsole::getCharHandler();
 1229              		.loc 1 192 17
 193:src/Riscv.cpp ****                     break;
GAS LISTING /tmp/ccBTqZWy.s 			page 36


 1230              		.loc 1 193 21
 193:src/Riscv.cpp ****                     break;
 1231              		.loc 1 193 45 is_stmt 0
 1232 0590 97000000 		call	_ZN8KConsole14getCharHandlerEv@plt
 1232      E7800000 
 1233              	.LVL87:
 194:src/Riscv.cpp ****             }
 1234              		.loc 1 194 21 is_stmt 1
 1235 0598 6FF05FF3 		j	.L49
 1236              	.LBE84:
 1237              	.LBE88:
 1238              	.LBE90:
 1239              		.cfi_endproc
 1240              	.LFE32:
 1242              		.globl	_ZN5Riscv16kernelMainCalledE
 1243              		.globl	_ZN5Riscv12finishSystemE
 1244              		.globl	_ZN5Riscv9totalTimeE
 1245              		.bss
 1246              		.align	3
 1247              		.set	.LANCHOR0,. + 0
 1250              	_ZN5Riscv12finishSystemE:
 1251 0000 00       		.zero	1
 1254              	_ZN5Riscv16kernelMainCalledE:
 1255 0001 00       		.zero	1
 1256 0002 00000000 		.zero	6
 1256      0000
 1259              	_ZN5Riscv9totalTimeE:
 1260 0008 00000000 		.zero	8
 1260      00000000 
 1261              		.text
 1262              	.Letext0:
 1263              		.file 4 "src/../h/../lib/hw.h"
 1264              		.file 5 "src/../h/MemoryAllocator.hpp"
 1265              		.file 6 "src/../h/SleepPCBList.hpp"
 1266              		.file 7 "src/../h/KSemaphore.hpp"
 1267              		.file 8 "src/../h/KConsole.hpp"
 1268              		.file 9 "src/../h/Scheduler.hpp"
 1269              		.file 10 "src/../h/Tests.hpp"
 1270              		.file 11 "src/../h/../test/userMain.hpp"
 1271              		.file 12 "src/../h/syscall_c.hpp"
GAS LISTING /tmp/ccBTqZWy.s 			page 37


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Riscv.cpp
     /tmp/ccBTqZWy.s:9      .text:0000000000000000 _ZN5Riscv10initSystemEv
     /tmp/ccBTqZWy.s:13     .text:0000000000000000 .L0 
     /tmp/ccBTqZWy.s:14     .text:0000000000000000 .L0 
     /tmp/ccBTqZWy.s:15     .text:0000000000000004 .L0 
     /tmp/ccBTqZWy.s:18     .text:000000000000000c .L0 
     /tmp/ccBTqZWy.s:19     .text:000000000000000c .L0 
     /tmp/ccBTqZWy.s:21     .text:0000000000000010 .L0 
     /tmp/ccBTqZWy.s:23     .text:0000000000000010 .L0 
     /tmp/ccBTqZWy.s:24     .text:0000000000000010 .L0 
     /tmp/ccBTqZWy.s:30     .text:0000000000000018 .L0 
  src/../h/Riscv.hpp:146    .text:0000000000000018 .L0 
     /tmp/ccBTqZWy.s:40     .text:000000000000001c .L0 
     /tmp/ccBTqZWy.s:41     .text:000000000000001c .L0 
     /tmp/ccBTqZWy.s:44     .text:0000000000000024 .L0 
     /tmp/ccBTqZWy.s:45     .text:0000000000000024 .L0 
     /tmp/ccBTqZWy.s:48     .text:000000000000002c .L0 
     /tmp/ccBTqZWy.s:49     .text:0000000000000030 .L0 
     /tmp/ccBTqZWy.s:51     .text:0000000000000034 .L0 
     /tmp/ccBTqZWy.s:52     .text:0000000000000034 .L0 
     /tmp/ccBTqZWy.s:54     .text:0000000000000038 .L0 
     /tmp/ccBTqZWy.s:56     .text:000000000000003c .L0 
     /tmp/ccBTqZWy.s:62     .text:000000000000003c _ZN5Riscv16enableInterruptsEv
     /tmp/ccBTqZWy.s:65     .text:000000000000003c .L0 
     /tmp/ccBTqZWy.s:66     .text:000000000000003c .L0 
     /tmp/ccBTqZWy.s:67     .text:0000000000000040 .L0 
     /tmp/ccBTqZWy.s:69     .text:0000000000000044 .L0 
     /tmp/ccBTqZWy.s:71     .text:0000000000000048 .L0 
     /tmp/ccBTqZWy.s:76     .text:0000000000000048 .L0 
     /tmp/ccBTqZWy.s:77     .text:0000000000000048 .L0 
     /tmp/ccBTqZWy.s:78     .text:0000000000000048 .L0 
     /tmp/ccBTqZWy.s:88     .text:0000000000000050 .L0 
     /tmp/ccBTqZWy.s:89     .text:0000000000000054 .L0 
     /tmp/ccBTqZWy.s:90     .text:0000000000000054 .L0 
     /tmp/ccBTqZWy.s:92     .text:0000000000000058 .L0 
     /tmp/ccBTqZWy.s:94     .text:000000000000005c .L0 
     /tmp/ccBTqZWy.s:100    .text:000000000000005c _ZN5Riscv17disableInterruptsEv
     /tmp/ccBTqZWy.s:103    .text:000000000000005c .L0 
     /tmp/ccBTqZWy.s:104    .text:000000000000005c .L0 
     /tmp/ccBTqZWy.s:105    .text:0000000000000060 .L0 
     /tmp/ccBTqZWy.s:107    .text:0000000000000064 .L0 
     /tmp/ccBTqZWy.s:109    .text:0000000000000068 .L0 
     /tmp/ccBTqZWy.s:114    .text:0000000000000068 .L0 
     /tmp/ccBTqZWy.s:115    .text:0000000000000068 .L0 
     /tmp/ccBTqZWy.s:116    .text:0000000000000068 .L0 
     /tmp/ccBTqZWy.s:126    .text:0000000000000070 .L0 
     /tmp/ccBTqZWy.s:127    .text:0000000000000074 .L0 
     /tmp/ccBTqZWy.s:128    .text:0000000000000074 .L0 
     /tmp/ccBTqZWy.s:130    .text:0000000000000078 .L0 
     /tmp/ccBTqZWy.s:132    .text:000000000000007c .L0 
     /tmp/ccBTqZWy.s:138    .text:000000000000007c _ZN5Riscv9endSystemEv
     /tmp/ccBTqZWy.s:141    .text:000000000000007c .L0 
     /tmp/ccBTqZWy.s:142    .text:000000000000007c .L0 
     /tmp/ccBTqZWy.s:143    .text:0000000000000080 .L0 
     /tmp/ccBTqZWy.s:146    .text:0000000000000088 .L0 
     /tmp/ccBTqZWy.s:147    .text:0000000000000088 .L0 
GAS LISTING /tmp/ccBTqZWy.s 			page 38


     /tmp/ccBTqZWy.s:149    .text:000000000000008c .L0 
     /tmp/ccBTqZWy.s:151    .text:000000000000008c .L0 
     /tmp/ccBTqZWy.s:152    .text:000000000000008c .L0 
     /tmp/ccBTqZWy.s:155    .text:0000000000000094 .L0 
     /tmp/ccBTqZWy.s:156    .text:0000000000000094 .L0 
     /tmp/ccBTqZWy.s:161    .text:00000000000000a0 .L0 
     /tmp/ccBTqZWy.s:162    .text:00000000000000a0 .L0 
     /tmp/ccBTqZWy.s:163    .text:00000000000000a0 .L0 
     /tmp/ccBTqZWy.s:164    .text:00000000000000a0 .L0 
     /tmp/ccBTqZWy.s:167    .text:00000000000000a8 .L0 
     /tmp/ccBTqZWy.s:169    .text:00000000000000ac .L0 
     /tmp/ccBTqZWy.s:170    .text:00000000000000ac .L0 
     /tmp/ccBTqZWy.s:176    .text:00000000000000c0 .L0 
     /tmp/ccBTqZWy.s:177    .text:00000000000000c0 .L0 
     /tmp/ccBTqZWy.s:180    .text:00000000000000cc .L0 
     /tmp/ccBTqZWy.s:181    .text:00000000000000cc .L0 
     /tmp/ccBTqZWy.s:185    .text:00000000000000d4 .L0 
     /tmp/ccBTqZWy.s:186    .text:00000000000000d4 .L0 
     /tmp/ccBTqZWy.s:187    .text:00000000000000d4 .L0 
     /tmp/ccBTqZWy.s:192    .text:00000000000000e8 .L0 
     /tmp/ccBTqZWy.s:194    .text:00000000000000ec .L0 
     /tmp/ccBTqZWy.s:195    .text:00000000000000ec .L0 
     /tmp/ccBTqZWy.s:198    .text:00000000000000f4 .L0 
     /tmp/ccBTqZWy.s:201    .text:00000000000000f8 .L0 
     /tmp/ccBTqZWy.s:202    .text:00000000000000f8 .L0 
     /tmp/ccBTqZWy.s:205    .text:0000000000000100 .L0 
     /tmp/ccBTqZWy.s:206    .text:0000000000000104 .L0 
     /tmp/ccBTqZWy.s:208    .text:0000000000000108 .L0 
     /tmp/ccBTqZWy.s:209    .text:0000000000000108 .L0 
     /tmp/ccBTqZWy.s:211    .text:000000000000010c .L0 
     /tmp/ccBTqZWy.s:213    .text:0000000000000110 .L0 
     /tmp/ccBTqZWy.s:219    .text:0000000000000110 _ZN5Riscv10popSppSpieEv
     /tmp/ccBTqZWy.s:222    .text:0000000000000110 .L0 
     /tmp/ccBTqZWy.s:223    .text:0000000000000110 .L0 
     /tmp/ccBTqZWy.s:224    .text:0000000000000114 .L0 
     /tmp/ccBTqZWy.s:226    .text:0000000000000118 .L0 
     /tmp/ccBTqZWy.s:228    .text:000000000000011c .L0 
     /tmp/ccBTqZWy.s:230    .text:000000000000011c .L0 
       src/Riscv.cpp:56     .text:000000000000011c .L0 
     /tmp/ccBTqZWy.s:236    .text:0000000000000120 .L0 
       src/Riscv.cpp:57     .text:0000000000000120 .L0 
     /tmp/ccBTqZWy.s:242    .text:0000000000000124 .L0 
     /tmp/ccBTqZWy.s:243    .text:0000000000000128 .L0 
     /tmp/ccBTqZWy.s:244    .text:0000000000000128 .L0 
     /tmp/ccBTqZWy.s:246    .text:000000000000012c .L0 
     /tmp/ccBTqZWy.s:248    .text:0000000000000130 .L0 
     /tmp/ccBTqZWy.s:254    .text:0000000000000130 _ZN5Riscv10kernelMainEv
     /tmp/ccBTqZWy.s:257    .text:0000000000000130 .L0 
     /tmp/ccBTqZWy.s:258    .text:0000000000000130 .L0 
     /tmp/ccBTqZWy.s:259    .text:0000000000000130 .L0 
     /tmp/ccBTqZWy.s:264    .text:0000000000000140 .L0 
     /tmp/ccBTqZWy.s:265    .text:0000000000000144 .L0 
     /tmp/ccBTqZWy.s:268    .text:000000000000014c .L0 
     /tmp/ccBTqZWy.s:269    .text:000000000000014c .L0 
     /tmp/ccBTqZWy.s:271    .text:0000000000000150 .L0 
     /tmp/ccBTqZWy.s:273    .text:0000000000000150 .L0 
     /tmp/ccBTqZWy.s:274    .text:0000000000000150 .L0 
GAS LISTING /tmp/ccBTqZWy.s 			page 39


     /tmp/ccBTqZWy.s:277    .text:000000000000015c .L0 
     /tmp/ccBTqZWy.s:278    .text:000000000000015c .L0 
     /tmp/ccBTqZWy.s:281    .text:0000000000000164 .L0 
     /tmp/ccBTqZWy.s:282    .text:0000000000000164 .L0 
     /tmp/ccBTqZWy.s:286    .text:000000000000016c .L0 
     /tmp/ccBTqZWy.s:287    .text:000000000000016c .L0 
     /tmp/ccBTqZWy.s:288    .text:000000000000016c .L0 
     /tmp/ccBTqZWy.s:293    .text:0000000000000180 .L0 
     /tmp/ccBTqZWy.s:295    .text:0000000000000184 .L0 
     /tmp/ccBTqZWy.s:296    .text:0000000000000184 .L0 
     /tmp/ccBTqZWy.s:299    .text:000000000000018c .L0 
     /tmp/ccBTqZWy.s:302    .text:0000000000000190 .L0 
     /tmp/ccBTqZWy.s:303    .text:0000000000000190 .L0 
     /tmp/ccBTqZWy.s:306    .text:0000000000000198 .L0 
     /tmp/ccBTqZWy.s:307    .text:000000000000019c .L0 
     /tmp/ccBTqZWy.s:309    .text:00000000000001a0 .L0 
     /tmp/ccBTqZWy.s:310    .text:00000000000001a0 .L0 
     /tmp/ccBTqZWy.s:312    .text:00000000000001a4 .L0 
     /tmp/ccBTqZWy.s:314    .text:00000000000001a8 .L0 
     /tmp/ccBTqZWy.s:320    .text:00000000000001a8 _ZN5Riscv15userMainWrapperEPv
     /tmp/ccBTqZWy.s:323    .text:00000000000001a8 .L0 
     /tmp/ccBTqZWy.s:324    .text:00000000000001a8 .L0 
     /tmp/ccBTqZWy.s:325    .text:00000000000001ac .L0 
     /tmp/ccBTqZWy.s:328    .text:00000000000001b4 .L0 
     /tmp/ccBTqZWy.s:329    .text:00000000000001b4 .L0 
     /tmp/ccBTqZWy.s:331    .text:00000000000001b8 .L0 
     /tmp/ccBTqZWy.s:333    .text:00000000000001b8 .L0 
     /tmp/ccBTqZWy.s:334    .text:00000000000001b8 .L0 
     /tmp/ccBTqZWy.s:337    .text:00000000000001c0 .L0 
     /tmp/ccBTqZWy.s:338    .text:00000000000001c4 .L0 
     /tmp/ccBTqZWy.s:340    .text:00000000000001c8 .L0 
     /tmp/ccBTqZWy.s:341    .text:00000000000001c8 .L0 
     /tmp/ccBTqZWy.s:343    .text:00000000000001cc .L0 
     /tmp/ccBTqZWy.s:345    .text:00000000000001d0 .L0 
     /tmp/ccBTqZWy.s:351    .text:00000000000001d0 _ZN5Riscv14myTestsWrapperEPv
     /tmp/ccBTqZWy.s:354    .text:00000000000001d0 .L0 
     /tmp/ccBTqZWy.s:356    .text:00000000000001d0 .L0 
     /tmp/ccBTqZWy.s:357    .text:00000000000001d4 .L0 
     /tmp/ccBTqZWy.s:360    .text:00000000000001dc .L0 
     /tmp/ccBTqZWy.s:361    .text:00000000000001dc .L0 
     /tmp/ccBTqZWy.s:363    .text:00000000000001e0 .L0 
     /tmp/ccBTqZWy.s:365    .text:00000000000001e0 .L0 
     /tmp/ccBTqZWy.s:366    .text:00000000000001e0 .L0 
     /tmp/ccBTqZWy.s:369    .text:00000000000001e8 .L0 
     /tmp/ccBTqZWy.s:370    .text:00000000000001ec .L0 
     /tmp/ccBTqZWy.s:372    .text:00000000000001f0 .L0 
     /tmp/ccBTqZWy.s:373    .text:00000000000001f0 .L0 
     /tmp/ccBTqZWy.s:375    .text:00000000000001f4 .L0 
     /tmp/ccBTqZWy.s:377    .text:00000000000001f8 .L0 
     /tmp/ccBTqZWy.s:383    .text:00000000000001f8 _ZN5Riscv22disableTimerInterruptsEv
     /tmp/ccBTqZWy.s:386    .text:00000000000001f8 .L0 
     /tmp/ccBTqZWy.s:387    .text:00000000000001f8 .L0 
     /tmp/ccBTqZWy.s:388    .text:00000000000001fc .L0 
     /tmp/ccBTqZWy.s:390    .text:0000000000000200 .L0 
     /tmp/ccBTqZWy.s:392    .text:0000000000000204 .L0 
     /tmp/ccBTqZWy.s:395    .text:0000000000000204 .L0 
     /tmp/ccBTqZWy.s:396    .text:0000000000000204 .L0 
GAS LISTING /tmp/ccBTqZWy.s 			page 40


     /tmp/ccBTqZWy.s:397    .text:0000000000000204 .L0 
     /tmp/ccBTqZWy.s:404    .text:000000000000020c .L0 
     /tmp/ccBTqZWy.s:405    .text:0000000000000210 .L0 
     /tmp/ccBTqZWy.s:406    .text:0000000000000210 .L0 
     /tmp/ccBTqZWy.s:408    .text:0000000000000214 .L0 
     /tmp/ccBTqZWy.s:410    .text:0000000000000218 .L0 
     /tmp/ccBTqZWy.s:416    .text:0000000000000218 _ZN5Riscv9idleRiscvEPv
     /tmp/ccBTqZWy.s:419    .text:0000000000000218 .L0 
     /tmp/ccBTqZWy.s:421    .text:0000000000000218 .L0 
     /tmp/ccBTqZWy.s:422    .text:000000000000021c .L0 
     /tmp/ccBTqZWy.s:424    .text:0000000000000220 .L0 
     /tmp/ccBTqZWy.s:426    .text:0000000000000224 .L0 
     /tmp/ccBTqZWy.s:429    .text:0000000000000224 .L0 
     /tmp/ccBTqZWy.s:430    .text:0000000000000224 .L0 
     /tmp/ccBTqZWy.s:431    .text:0000000000000228 .L0 
     /tmp/ccBTqZWy.s:437    .text:0000000000000228 _ZN5Riscv13w_a0_sscratchEv
     /tmp/ccBTqZWy.s:440    .text:0000000000000228 .L0 
     /tmp/ccBTqZWy.s:441    .text:0000000000000228 .L0 
     /tmp/ccBTqZWy.s:442    .text:000000000000022c .L0 
     /tmp/ccBTqZWy.s:444    .text:0000000000000230 .L0 
     /tmp/ccBTqZWy.s:446    .text:0000000000000234 .L0 
     /tmp/ccBTqZWy.s:448    .text:0000000000000234 .L0 
     /tmp/ccBTqZWy.s:449    .text:0000000000000234 .L0 
       src/Riscv.cpp:251    .text:0000000000000234 .L0 
     /tmp/ccBTqZWy.s:456    .text:0000000000000238 .L0 
     /tmp/ccBTqZWy.s:458    .text:0000000000000238 .L0 
       src/Riscv.cpp:252    .text:0000000000000248 .L0 
     /tmp/ccBTqZWy.s:467    .text:000000000000024c .L0 
       src/Riscv.cpp:253    .text:000000000000024c .L0 
     /tmp/ccBTqZWy.s:472    .text:0000000000000250 .L0 
       src/Riscv.cpp:254    .text:0000000000000250 .L0 
     /tmp/ccBTqZWy.s:478    .text:0000000000000254 .L0 
     /tmp/ccBTqZWy.s:479    .text:0000000000000258 .L0 
     /tmp/ccBTqZWy.s:480    .text:0000000000000258 .L0 
     /tmp/ccBTqZWy.s:482    .text:000000000000025c .L0 
     /tmp/ccBTqZWy.s:484    .text:0000000000000260 .L0 
     /tmp/ccBTqZWy.s:490    .text:0000000000000260 _ZN5Riscv14changePrivModeEv
     /tmp/ccBTqZWy.s:493    .text:0000000000000260 .L0 
     /tmp/ccBTqZWy.s:494    .text:0000000000000260 .L0 
     /tmp/ccBTqZWy.s:495    .text:0000000000000264 .L0 
     /tmp/ccBTqZWy.s:497    .text:0000000000000268 .L0 
     /tmp/ccBTqZWy.s:499    .text:000000000000026c .L0 
     /tmp/ccBTqZWy.s:501    .text:000000000000026c .L0 
     /tmp/ccBTqZWy.s:502    .text:000000000000026c .L0 
     /tmp/ccBTqZWy.s:506    .text:000000000000027c .L0 
     /tmp/ccBTqZWy.s:511    .text:0000000000000280 .L0 
     /tmp/ccBTqZWy.s:512    .text:0000000000000280 .L0 
     /tmp/ccBTqZWy.s:513    .text:0000000000000280 .L0 
     /tmp/ccBTqZWy.s:524    .text:0000000000000288 .L0 
     /tmp/ccBTqZWy.s:525    .text:000000000000028c .L0 
     /tmp/ccBTqZWy.s:526    .text:000000000000028c .L0 
     /tmp/ccBTqZWy.s:527    .text:000000000000028c .L0 
     /tmp/ccBTqZWy.s:529    .text:0000000000000290 .L0 
     /tmp/ccBTqZWy.s:532    .text:0000000000000294 .L0 
     /tmp/ccBTqZWy.s:537    .text:0000000000000294 .L0 
     /tmp/ccBTqZWy.s:538    .text:0000000000000294 .L0 
     /tmp/ccBTqZWy.s:539    .text:0000000000000294 .L0 
GAS LISTING /tmp/ccBTqZWy.s 			page 41


     /tmp/ccBTqZWy.s:549    .text:000000000000029c .L0 
     /tmp/ccBTqZWy.s:550    .text:00000000000002a0 .L0 
     /tmp/ccBTqZWy.s:556    .text:00000000000002a0 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccBTqZWy.s:559    .text:00000000000002a0 .L0 
     /tmp/ccBTqZWy.s:560    .text:00000000000002a0 .L0 
     /tmp/ccBTqZWy.s:561    .text:00000000000002a4 .L0 
     /tmp/ccBTqZWy.s:565    .text:00000000000002b0 .L0 
     /tmp/ccBTqZWy.s:566    .text:00000000000002b0 .L0 
     /tmp/ccBTqZWy.s:567    .text:00000000000002b0 .L0 
     /tmp/ccBTqZWy.s:569    .text:00000000000002b4 .L0 
     /tmp/ccBTqZWy.s:571    .text:00000000000002b4 .L0 
       src/Riscv.cpp:62     .text:00000000000002b4 .L0 
     /tmp/ccBTqZWy.s:580    .text:00000000000002c4 .L0 
     /tmp/ccBTqZWy.s:581    .text:00000000000002c4 .L0 
       src/Riscv.cpp:63     .text:00000000000002d0 .L0 
     /tmp/ccBTqZWy.s:593    .text:00000000000002d8 .L0 
     /tmp/ccBTqZWy.s:594    .text:00000000000002d8 .L0 
     /tmp/ccBTqZWy.s:595    .text:00000000000002d8 .L0 
  src/../h/Riscv.hpp:121    .text:00000000000002d8 .L0 
     /tmp/ccBTqZWy.s:603    .text:00000000000002e0 .L0 
     /tmp/ccBTqZWy.s:604    .text:00000000000002e0 .L0 
     /tmp/ccBTqZWy.s:610    .text:00000000000002e4 .L0 
     /tmp/ccBTqZWy.s:620    .text:0000000000000304 .L0 
     /tmp/ccBTqZWy.s:621    .text:0000000000000304 .L0 
     /tmp/ccBTqZWy.s:622    .text:0000000000000304 .L0 
     /tmp/ccBTqZWy.s:623    .text:0000000000000304 .L0 
     /tmp/ccBTqZWy.s:626    .text:000000000000030c .L0 
     /tmp/ccBTqZWy.s:631    .text:0000000000000310 .L0 
     /tmp/ccBTqZWy.s:635    .text:0000000000000318 .L0 
     /tmp/ccBTqZWy.s:636    .text:0000000000000318 .L0 
     /tmp/ccBTqZWy.s:637    .text:0000000000000318 .L0 
     /tmp/ccBTqZWy.s:638    .text:0000000000000318 .L0 
     /tmp/ccBTqZWy.s:641    .text:0000000000000320 .L0 
     /tmp/ccBTqZWy.s:646    .text:0000000000000324 .L0 
     /tmp/ccBTqZWy.s:656    .text:0000000000000344 .L0 
     /tmp/ccBTqZWy.s:658    .text:0000000000000344 .L0 
     /tmp/ccBTqZWy.s:659    .text:0000000000000344 .L0 
     /tmp/ccBTqZWy.s:660    .text:0000000000000344 .L0 
     /tmp/ccBTqZWy.s:665    .text:0000000000000350 .L0 
       src/Riscv.cpp:95     .text:0000000000000350 .L0 
     /tmp/ccBTqZWy.s:671    .text:0000000000000354 .L0 
       src/Riscv.cpp:96     .text:0000000000000354 .L0 
     /tmp/ccBTqZWy.s:676    .text:0000000000000358 .L0 
     /tmp/ccBTqZWy.s:677    .text:0000000000000358 .L0 
       src/Riscv.cpp:98     .text:0000000000000358 .L0 
     /tmp/ccBTqZWy.s:685    .text:000000000000035c .L0 
     /tmp/ccBTqZWy.s:686    .text:000000000000035c .L0 
     /tmp/ccBTqZWy.s:689    .text:0000000000000360 .L0 
     /tmp/ccBTqZWy.s:692    .text:0000000000000364 .L0 
     /tmp/ccBTqZWy.s:693    .text:0000000000000364 .L0 
     /tmp/ccBTqZWy.s:697    .text:0000000000000370 .L0 
       src/Riscv.cpp:102    .text:0000000000000370 .L0 
     /tmp/ccBTqZWy.s:703    .text:0000000000000374 .L0 
       src/Riscv.cpp:103    .text:0000000000000374 .L0 
     /tmp/ccBTqZWy.s:708    .text:0000000000000378 .L0 
     /tmp/ccBTqZWy.s:709    .text:0000000000000378 .L0 
       src/Riscv.cpp:105    .text:0000000000000378 .L0 
GAS LISTING /tmp/ccBTqZWy.s 			page 42


     /tmp/ccBTqZWy.s:717    .text:0000000000000380 .L0 
     /tmp/ccBTqZWy.s:718    .text:0000000000000380 .L0 
     /tmp/ccBTqZWy.s:722    .text:000000000000038c .L0 
     /tmp/ccBTqZWy.s:728    .text:0000000000000390 .L0 
     /tmp/ccBTqZWy.s:729    .text:0000000000000390 .L0 
     /tmp/ccBTqZWy.s:734    .text:00000000000003a0 .L0 
     /tmp/ccBTqZWy.s:739    .text:00000000000003a4 .L0 
     /tmp/ccBTqZWy.s:741    .text:00000000000003a4 .L0 
     /tmp/ccBTqZWy.s:744    .text:00000000000003a4 .L0 
     /tmp/ccBTqZWy.s:745    .text:00000000000003a4 .L0 
     /tmp/ccBTqZWy.s:746    .text:00000000000003a4 .L0 
  src/../h/Riscv.hpp:131    .text:00000000000003a4 .L0 
     /tmp/ccBTqZWy.s:755    .text:00000000000003ac .L0 
     /tmp/ccBTqZWy.s:756    .text:00000000000003ac .L0 
     /tmp/ccBTqZWy.s:760    .text:00000000000003b0 .L0 
     /tmp/ccBTqZWy.s:764    .text:00000000000003b4 .L0 
     /tmp/ccBTqZWy.s:765    .text:00000000000003b4 .L0 
     /tmp/ccBTqZWy.s:766    .text:00000000000003b4 .L0 
  src/../h/Riscv.hpp:204    .text:00000000000003b4 .L0 
     /tmp/ccBTqZWy.s:774    .text:00000000000003bc .L0 
     /tmp/ccBTqZWy.s:775    .text:00000000000003bc .L0 
     /tmp/ccBTqZWy.s:779    .text:00000000000003c0 .L0 
     /tmp/ccBTqZWy.s:784    .text:00000000000003c4 .L0 
     /tmp/ccBTqZWy.s:785    .text:00000000000003c4 .L0 
     /tmp/ccBTqZWy.s:786    .text:00000000000003c4 .L0 
     /tmp/ccBTqZWy.s:796    .text:00000000000003cc .L0 
     /tmp/ccBTqZWy.s:797    .text:00000000000003cc .L0 
     /tmp/ccBTqZWy.s:802    .text:00000000000003e0 .L0 
     /tmp/ccBTqZWy.s:803    .text:00000000000003e0 .L0 
     /tmp/ccBTqZWy.s:808    .text:00000000000003f4 .L0 
     /tmp/ccBTqZWy.s:809    .text:00000000000003f4 .L0 
     /tmp/ccBTqZWy.s:812    .text:00000000000003fc .L0 
     /tmp/ccBTqZWy.s:813    .text:00000000000003fc .L0 
     /tmp/ccBTqZWy.s:820    .text:0000000000000408 .L0 
     /tmp/ccBTqZWy.s:821    .text:0000000000000408 .L0 
     /tmp/ccBTqZWy.s:826    .text:000000000000040c .L0 
     /tmp/ccBTqZWy.s:828    .text:0000000000000410 .L0 
     /tmp/ccBTqZWy.s:831    .text:0000000000000414 .L0 
     /tmp/ccBTqZWy.s:832    .text:0000000000000414 .L0 
     /tmp/ccBTqZWy.s:837    .text:0000000000000418 .L0 
  src/../h/Riscv.hpp:209    .text:0000000000000418 .L0 
     /tmp/ccBTqZWy.s:847    .text:000000000000041c .L0 
     /tmp/ccBTqZWy.s:848    .text:000000000000041c .L0 
     /tmp/ccBTqZWy.s:853    .text:0000000000000420 .L0 
  src/../h/Riscv.hpp:136    .text:0000000000000420 .L0 
     /tmp/ccBTqZWy.s:863    .text:0000000000000424 .L0 
     /tmp/ccBTqZWy.s:864    .text:0000000000000424 .L0 
     /tmp/ccBTqZWy.s:871    .text:000000000000042c .L0 
     /tmp/ccBTqZWy.s:872    .text:000000000000042c .L0 
     /tmp/ccBTqZWy.s:873    .text:0000000000000430 .L0 
     /tmp/ccBTqZWy.s:874    .text:0000000000000430 .L0 
     /tmp/ccBTqZWy.s:876    .text:0000000000000434 .L0 
     /tmp/ccBTqZWy.s:877    .text:0000000000000434 .L0 
     /tmp/ccBTqZWy.s:879    .text:0000000000000438 .L0 
     /tmp/ccBTqZWy.s:881    .text:000000000000043c .L0 
     /tmp/ccBTqZWy.s:884    .text:0000000000000440 .L0 
     /tmp/ccBTqZWy.s:889    .text:0000000000000440 .L0 
GAS LISTING /tmp/ccBTqZWy.s 			page 43


     /tmp/ccBTqZWy.s:890    .text:0000000000000440 .L0 
     /tmp/ccBTqZWy.s:892    .text:0000000000000444 .L0 
     /tmp/ccBTqZWy.s:893    .text:0000000000000444 .L0 
     /tmp/ccBTqZWy.s:903    .text:0000000000000450 .L0 
     /tmp/ccBTqZWy.s:904    .text:0000000000000450 .L0 
     /tmp/ccBTqZWy.s:908    .text:0000000000000460 .L0 
     /tmp/ccBTqZWy.s:909    .text:0000000000000460 .L0 
     /tmp/ccBTqZWy.s:918    .text:000000000000046c .L0 
     /tmp/ccBTqZWy.s:919    .text:000000000000046c .L0 
     /tmp/ccBTqZWy.s:920    .text:000000000000046c .L0 
     /tmp/ccBTqZWy.s:921    .text:000000000000046c .L0 
     /tmp/ccBTqZWy.s:924    .text:0000000000000474 .L0 
     /tmp/ccBTqZWy.s:928    .text:0000000000000478 .L0 
     /tmp/ccBTqZWy.s:929    .text:0000000000000478 .L0 
     /tmp/ccBTqZWy.s:931    .text:0000000000000478 .L0 
     /tmp/ccBTqZWy.s:932    .text:0000000000000478 .L0 
     /tmp/ccBTqZWy.s:933    .text:0000000000000478 .L0 
       src/Riscv.cpp:140    .text:0000000000000478 .L0 
     /tmp/ccBTqZWy.s:943    .text:000000000000047c .L0 
     /tmp/ccBTqZWy.s:944    .text:000000000000047c .L0 
     /tmp/ccBTqZWy.s:945    .text:000000000000047c .L0 
  src/../h/Riscv.hpp:131    .text:000000000000047c .L0 
     /tmp/ccBTqZWy.s:953    .text:0000000000000484 .L0 
     /tmp/ccBTqZWy.s:954    .text:0000000000000484 .L0 
     /tmp/ccBTqZWy.s:958    .text:0000000000000488 .L0 
     /tmp/ccBTqZWy.s:960    .text:000000000000048c .L0 
     /tmp/ccBTqZWy.s:964    .text:0000000000000490 .L0 
     /tmp/ccBTqZWy.s:965    .text:0000000000000490 .L0 
     /tmp/ccBTqZWy.s:966    .text:0000000000000490 .L0 
  src/../h/Riscv.hpp:204    .text:0000000000000490 .L0 
     /tmp/ccBTqZWy.s:974    .text:0000000000000498 .L0 
     /tmp/ccBTqZWy.s:975    .text:0000000000000498 .L0 
     /tmp/ccBTqZWy.s:979    .text:000000000000049c .L0 
     /tmp/ccBTqZWy.s:981    .text:00000000000004a0 .L0 
     /tmp/ccBTqZWy.s:1065   .text:00000000000004c4 .L0 
     /tmp/ccBTqZWy.s:1066   .text:00000000000004c4 .L0 
     /tmp/ccBTqZWy.s:1067   .text:00000000000004c4 .L0 
     /tmp/ccBTqZWy.s:1071   .text:00000000000004cc .L0 
     /tmp/ccBTqZWy.s:1072   .text:00000000000004cc .L0 
     /tmp/ccBTqZWy.s:1073   .text:00000000000004cc .L0 
     /tmp/ccBTqZWy.s:1078   .text:00000000000004d0 .L0 
  src/../h/Riscv.hpp:209    .text:00000000000004d0 .L0 
     /tmp/ccBTqZWy.s:1088   .text:00000000000004d4 .L0 
     /tmp/ccBTqZWy.s:1089   .text:00000000000004d4 .L0 
     /tmp/ccBTqZWy.s:1094   .text:00000000000004d8 .L0 
  src/../h/Riscv.hpp:136    .text:00000000000004d8 .L0 
     /tmp/ccBTqZWy.s:1104   .text:00000000000004dc .L0 
     /tmp/ccBTqZWy.s:1105   .text:00000000000004dc .L0 
     /tmp/ccBTqZWy.s:1111   .text:00000000000004e4 .L0 
     /tmp/ccBTqZWy.s:1112   .text:00000000000004e4 .L0 
     /tmp/ccBTqZWy.s:1118   .text:00000000000004e8 .L0 
     /tmp/ccBTqZWy.s:1119   .text:00000000000004e8 .L0 
     /tmp/ccBTqZWy.s:1120   .text:00000000000004e8 .L0 
     /tmp/ccBTqZWy.s:1123   .text:00000000000004f0 .L0 
     /tmp/ccBTqZWy.s:1126   .text:00000000000004f4 .L0 
     /tmp/ccBTqZWy.s:1127   .text:00000000000004f4 .L0 
     /tmp/ccBTqZWy.s:1128   .text:00000000000004f4 .L0 
GAS LISTING /tmp/ccBTqZWy.s 			page 44


     /tmp/ccBTqZWy.s:1131   .text:00000000000004fc .L0 
     /tmp/ccBTqZWy.s:1134   .text:0000000000000500 .L0 
     /tmp/ccBTqZWy.s:1135   .text:0000000000000500 .L0 
     /tmp/ccBTqZWy.s:1136   .text:0000000000000500 .L0 
     /tmp/ccBTqZWy.s:1139   .text:0000000000000508 .L0 
     /tmp/ccBTqZWy.s:1142   .text:000000000000050c .L0 
     /tmp/ccBTqZWy.s:1143   .text:000000000000050c .L0 
     /tmp/ccBTqZWy.s:1144   .text:000000000000050c .L0 
     /tmp/ccBTqZWy.s:1147   .text:0000000000000514 .L0 
     /tmp/ccBTqZWy.s:1150   .text:0000000000000518 .L0 
     /tmp/ccBTqZWy.s:1151   .text:0000000000000518 .L0 
     /tmp/ccBTqZWy.s:1152   .text:0000000000000518 .L0 
     /tmp/ccBTqZWy.s:1155   .text:0000000000000520 .L0 
     /tmp/ccBTqZWy.s:1158   .text:0000000000000524 .L0 
     /tmp/ccBTqZWy.s:1159   .text:0000000000000524 .L0 
     /tmp/ccBTqZWy.s:1160   .text:0000000000000524 .L0 
     /tmp/ccBTqZWy.s:1163   .text:000000000000052c .L0 
     /tmp/ccBTqZWy.s:1166   .text:0000000000000530 .L0 
     /tmp/ccBTqZWy.s:1167   .text:0000000000000530 .L0 
     /tmp/ccBTqZWy.s:1168   .text:0000000000000530 .L0 
     /tmp/ccBTqZWy.s:1171   .text:0000000000000538 .L0 
     /tmp/ccBTqZWy.s:1174   .text:000000000000053c .L0 
     /tmp/ccBTqZWy.s:1175   .text:000000000000053c .L0 
     /tmp/ccBTqZWy.s:1176   .text:000000000000053c .L0 
     /tmp/ccBTqZWy.s:1179   .text:0000000000000544 .L0 
     /tmp/ccBTqZWy.s:1182   .text:0000000000000548 .L0 
     /tmp/ccBTqZWy.s:1183   .text:0000000000000548 .L0 
     /tmp/ccBTqZWy.s:1184   .text:0000000000000548 .L0 
     /tmp/ccBTqZWy.s:1187   .text:0000000000000550 .L0 
     /tmp/ccBTqZWy.s:1190   .text:0000000000000554 .L0 
     /tmp/ccBTqZWy.s:1191   .text:0000000000000554 .L0 
     /tmp/ccBTqZWy.s:1192   .text:0000000000000554 .L0 
     /tmp/ccBTqZWy.s:1195   .text:000000000000055c .L0 
     /tmp/ccBTqZWy.s:1198   .text:0000000000000560 .L0 
     /tmp/ccBTqZWy.s:1199   .text:0000000000000560 .L0 
     /tmp/ccBTqZWy.s:1200   .text:0000000000000560 .L0 
     /tmp/ccBTqZWy.s:1203   .text:0000000000000568 .L0 
     /tmp/ccBTqZWy.s:1206   .text:000000000000056c .L0 
     /tmp/ccBTqZWy.s:1207   .text:000000000000056c .L0 
     /tmp/ccBTqZWy.s:1208   .text:000000000000056c .L0 
     /tmp/ccBTqZWy.s:1211   .text:0000000000000574 .L0 
     /tmp/ccBTqZWy.s:1214   .text:0000000000000578 .L0 
     /tmp/ccBTqZWy.s:1215   .text:0000000000000578 .L0 
     /tmp/ccBTqZWy.s:1216   .text:0000000000000578 .L0 
     /tmp/ccBTqZWy.s:1219   .text:0000000000000580 .L0 
     /tmp/ccBTqZWy.s:1222   .text:0000000000000584 .L0 
     /tmp/ccBTqZWy.s:1223   .text:0000000000000584 .L0 
     /tmp/ccBTqZWy.s:1224   .text:0000000000000584 .L0 
     /tmp/ccBTqZWy.s:1227   .text:000000000000058c .L0 
     /tmp/ccBTqZWy.s:1230   .text:0000000000000590 .L0 
     /tmp/ccBTqZWy.s:1231   .text:0000000000000590 .L0 
     /tmp/ccBTqZWy.s:1232   .text:0000000000000590 .L0 
     /tmp/ccBTqZWy.s:1235   .text:0000000000000598 .L0 
     /tmp/ccBTqZWy.s:1239   .text:000000000000059c .L0 
     /tmp/ccBTqZWy.s:1254   .bss:0000000000000001 _ZN5Riscv16kernelMainCalledE
     /tmp/ccBTqZWy.s:1250   .bss:0000000000000000 _ZN5Riscv12finishSystemE
     /tmp/ccBTqZWy.s:1259   .bss:0000000000000008 _ZN5Riscv9totalTimeE
GAS LISTING /tmp/ccBTqZWy.s 			page 45


     /tmp/ccBTqZWy.s:1247   .bss:0000000000000000 .LANCHOR0
     /tmp/ccBTqZWy.s:1272   .text:000000000000059c .L0 
     /tmp/ccBTqZWy.s:24     .text:0000000000000010 .L0 
     /tmp/ccBTqZWy.s:157    .text:0000000000000098 .L0 
     /tmp/ccBTqZWy.s:170    .text:00000000000000ac .L0 
     /tmp/ccBTqZWy.s:177    .text:00000000000000c0 .L0 
     /tmp/ccBTqZWy.s:187    .text:00000000000000d4 .L0 
     /tmp/ccBTqZWy.s:259    .text:0000000000000130 .L0 
     /tmp/ccBTqZWy.s:275    .text:0000000000000154 .L0 
     /tmp/ccBTqZWy.s:288    .text:000000000000016c .L0 
     /tmp/ccBTqZWy.s:458    .text:0000000000000238 .L0 
     /tmp/ccBTqZWy.s:502    .text:000000000000026c .L0 
     /tmp/ccBTqZWy.s:577    .text:00000000000002b8 .L0 
     /tmp/ccBTqZWy.s:581    .text:00000000000002c4 .L0 
     /tmp/ccBTqZWy.s:660    .text:0000000000000344 .L0 
     /tmp/ccBTqZWy.s:693    .text:0000000000000364 .L0 
     /tmp/ccBTqZWy.s:718    .text:0000000000000380 .L0 
     /tmp/ccBTqZWy.s:797    .text:00000000000003cc .L0 
     /tmp/ccBTqZWy.s:803    .text:00000000000003e0 .L0 
     /tmp/ccBTqZWy.s:813    .text:00000000000003fc .L0 
     /tmp/ccBTqZWy.s:905    .text:0000000000000454 .L0 
     /tmp/ccBTqZWy.s:993    .rodata:0000000000000000 .L51
     /tmp/ccBTqZWy.s:985    .text:00000000000004ac .L0 
     /tmp/ccBTqZWy.s:160    .text:00000000000000a0 .L8
     /tmp/ccBTqZWy.s:199    .text:00000000000000f8 .L9
     /tmp/ccBTqZWy.s:183    .text:00000000000000d4 .L10
     /tmp/ccBTqZWy.s:262    .text:0000000000000140 .L22
     /tmp/ccBTqZWy.s:300    .text:0000000000000190 .L16
     /tmp/ccBTqZWy.s:284    .text:000000000000016c .L17
     /tmp/ccBTqZWy.s:427    .text:0000000000000224 .L30
     /tmp/ccBTqZWy.s:531    .text:0000000000000294 .L35
     /tmp/ccBTqZWy.s:520    .text:0000000000000288 .L34
     /tmp/ccBTqZWy.s:643    .text:0000000000000324 .L39
     /tmp/ccBTqZWy.s:926    .text:0000000000000478 .L40
     /tmp/ccBTqZWy.s:913    .text:000000000000046c .L41
     /tmp/ccBTqZWy.s:628    .text:0000000000000310 .L68
     /tmp/ccBTqZWy.s:867    .text:000000000000042c .L38
     /tmp/ccBTqZWy.s:736    .text:00000000000003a4 .L45
     /tmp/ccBTqZWy.s:724    .text:0000000000000390 .L48
     /tmp/ccBTqZWy.s:897    .text:0000000000000450 .L69
     /tmp/ccBTqZWy.s:883    .text:0000000000000440 .L70
     /tmp/ccBTqZWy.s:829    .text:0000000000000414 .L47
     /tmp/ccBTqZWy.s:1070   .text:00000000000004cc .L49
     /tmp/ccBTqZWy.s:1063   .text:00000000000004c4 .L66
     /tmp/ccBTqZWy.s:1113   .text:00000000000004e8 .L65
     /tmp/ccBTqZWy.s:1132   .text:0000000000000500 .L64
     /tmp/ccBTqZWy.s:1156   .text:0000000000000524 .L63
     /tmp/ccBTqZWy.s:1148   .text:0000000000000518 .L62
     /tmp/ccBTqZWy.s:1124   .text:00000000000004f4 .L61
     /tmp/ccBTqZWy.s:1140   .text:000000000000050c .L60
     /tmp/ccBTqZWy.s:1172   .text:000000000000053c .L59
     /tmp/ccBTqZWy.s:1180   .text:0000000000000548 .L58
     /tmp/ccBTqZWy.s:1204   .text:000000000000056c .L57
     /tmp/ccBTqZWy.s:1188   .text:0000000000000554 .L56
     /tmp/ccBTqZWy.s:1196   .text:0000000000000560 .L55
     /tmp/ccBTqZWy.s:1164   .text:0000000000000530 .L54
     /tmp/ccBTqZWy.s:1212   .text:0000000000000578 .L53
GAS LISTING /tmp/ccBTqZWy.s 			page 46


     /tmp/ccBTqZWy.s:1220   .text:0000000000000584 .L52
     /tmp/ccBTqZWy.s:1228   .text:0000000000000590 .L50
     /tmp/ccBTqZWy.s:3823   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccBTqZWy.s:5614   .debug_str:0000000000001145 .LASF332
     /tmp/ccBTqZWy.s:5218   .debug_str:00000000000003f2 .LASF333
     /tmp/ccBTqZWy.s:5664   .debug_str:0000000000001355 .LASF334
     /tmp/ccBTqZWy.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccBTqZWy.s:1262   .text:000000000000059c .Letext0
     /tmp/ccBTqZWy.s:5110   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccBTqZWy.s:5340   .debug_str:0000000000000819 .LASF0
     /tmp/ccBTqZWy.s:5380   .debug_str:000000000000095b .LASF1
     /tmp/ccBTqZWy.s:5546   .debug_str:0000000000000f0d .LASF2
     /tmp/ccBTqZWy.s:5564   .debug_str:0000000000000fa3 .LASF4
     /tmp/ccBTqZWy.s:5360   .debug_str:00000000000008c1 .LASF3
     /tmp/ccBTqZWy.s:5138   .debug_str:0000000000000109 .LASF5
     /tmp/ccBTqZWy.s:5504   .debug_str:0000000000000df7 .LASF6
     /tmp/ccBTqZWy.s:5490   .debug_str:0000000000000d8b .LASF7
     /tmp/ccBTqZWy.s:5370   .debug_str:0000000000000914 .LASF8
     /tmp/ccBTqZWy.s:5302   .debug_str:00000000000006bd .LASF9
     /tmp/ccBTqZWy.s:5314   .debug_str:000000000000072f .LASF10
     /tmp/ccBTqZWy.s:5204   .debug_str:000000000000038f .LASF11
     /tmp/ccBTqZWy.s:5286   .debug_str:0000000000000665 .LASF12
     /tmp/ccBTqZWy.s:5220   .debug_str:0000000000000400 .LASF13
     /tmp/ccBTqZWy.s:5202   .debug_str:000000000000037f .LASF14
     /tmp/ccBTqZWy.s:5620   .debug_str:0000000000001232 .LASF15
     /tmp/ccBTqZWy.s:5262   .debug_str:0000000000000569 .LASF16
     /tmp/ccBTqZWy.s:5604   .debug_str:00000000000010cc .LASF17
     /tmp/ccBTqZWy.s:5720   .debug_str:0000000000001538 .LASF111
     /tmp/ccBTqZWy.s:5526   .debug_str:0000000000000e92 .LASF21
     /tmp/ccBTqZWy.s:5390   .debug_str:000000000000099e .LASF18
     /tmp/ccBTqZWy.s:5272   .debug_str:00000000000005d8 .LASF19
     /tmp/ccBTqZWy.s:5740   .debug_str:00000000000015e6 .LASF20
     /tmp/ccBTqZWy.s:5704   .debug_str:000000000000148c .LASF22
     /tmp/ccBTqZWy.s:5278   .debug_str:0000000000000618 .LASF23
     /tmp/ccBTqZWy.s:5650   .debug_str:00000000000012ea .LASF24
     /tmp/ccBTqZWy.s:5234   .debug_str:000000000000048d .LASF25
     /tmp/ccBTqZWy.s:5334   .debug_str:00000000000007f0 .LASF46
     /tmp/ccBTqZWy.s:5608   .debug_str:00000000000010f1 .LASF48
     /tmp/ccBTqZWy.s:5712   .debug_str:00000000000014e5 .LASF64
     /tmp/ccBTqZWy.s:5750   .debug_str:0000000000001637 .LASF26
     /tmp/ccBTqZWy.s:5584   .debug_str:0000000000001035 .LASF28
     /tmp/ccBTqZWy.s:5442   .debug_str:0000000000000bbe .LASF27
     /tmp/ccBTqZWy.s:5418   .debug_str:0000000000000aba .LASF29
     /tmp/ccBTqZWy.s:5258   .debug_str:000000000000054c .LASF30
     /tmp/ccBTqZWy.s:5126   .debug_str:0000000000000079 .LASF31
     /tmp/ccBTqZWy.s:5422   .debug_str:0000000000000af1 .LASF38
     /tmp/ccBTqZWy.s:5714   .debug_str:00000000000014f6 .LASF40
     /tmp/ccBTqZWy.s:5198   .debug_str:000000000000035b .LASF32
     /tmp/ccBTqZWy.s:5396   .debug_str:00000000000009db .LASF33
     /tmp/ccBTqZWy.s:5252   .debug_str:00000000000004fb .LASF34
     /tmp/ccBTqZWy.s:5210   .debug_str:00000000000003ac .LASF35
     /tmp/ccBTqZWy.s:5352   .debug_str:000000000000087f .LASF36
     /tmp/ccBTqZWy.s:5228   .debug_str:0000000000000457 .LASF37
     /tmp/ccBTqZWy.s:5176   .debug_str:0000000000000290 .LASF39
     /tmp/ccBTqZWy.s:5304   .debug_str:00000000000006cd .LASF41
     /tmp/ccBTqZWy.s:5574   .debug_str:0000000000000fd4 .LASF42
     /tmp/ccBTqZWy.s:5270   .debug_str:00000000000005bd .LASF43
GAS LISTING /tmp/ccBTqZWy.s 			page 47


     /tmp/ccBTqZWy.s:5346   .debug_str:0000000000000858 .LASF44
     /tmp/ccBTqZWy.s:5732   .debug_str:000000000000159e .LASF45
     /tmp/ccBTqZWy.s:5694   .debug_str:0000000000001454 .LASF47
     /tmp/ccBTqZWy.s:5678   .debug_str:00000000000013e2 .LASF49
     /tmp/ccBTqZWy.s:5542   .debug_str:0000000000000ef9 .LASF50
     /tmp/ccBTqZWy.s:5468   .debug_str:0000000000000caa .LASF51
     /tmp/ccBTqZWy.s:5512   .debug_str:0000000000000e20 .LASF52
     /tmp/ccBTqZWy.s:5520   .debug_str:0000000000000e60 .LASF53
     /tmp/ccBTqZWy.s:5458   .debug_str:0000000000000c3f .LASF54
     /tmp/ccBTqZWy.s:5372   .debug_str:0000000000000927 .LASF55
     /tmp/ccBTqZWy.s:5734   .debug_str:00000000000015b8 .LASF56
     /tmp/ccBTqZWy.s:5658   .debug_str:0000000000001314 .LASF57
     /tmp/ccBTqZWy.s:5450   .debug_str:0000000000000bf9 .LASF58
     /tmp/ccBTqZWy.s:5466   .debug_str:0000000000000c96 .LASF59
     /tmp/ccBTqZWy.s:5436   .debug_str:0000000000000b82 .LASF60
     /tmp/ccBTqZWy.s:5524   .debug_str:0000000000000e7e .LASF61
     /tmp/ccBTqZWy.s:5788   .debug_str:0000000000001793 .LASF62
     /tmp/ccBTqZWy.s:5350   .debug_str:000000000000086b .LASF63
     /tmp/ccBTqZWy.s:5758   .debug_str:0000000000001681 .LASF65
     /tmp/ccBTqZWy.s:5616   .debug_str:0000000000001209 .LASF66
     /tmp/ccBTqZWy.s:5568   .debug_str:0000000000000fb2 .LASF67
     /tmp/ccBTqZWy.s:5570   .debug_str:0000000000000fc5 .LASF68
     /tmp/ccBTqZWy.s:5256   .debug_str:0000000000000539 .LASF69
     /tmp/ccBTqZWy.s:5250   .debug_str:00000000000004f5 .LASF70
     /tmp/ccBTqZWy.s:5146   .debug_str:0000000000000149 .LASF71
     /tmp/ccBTqZWy.s:5348   .debug_str:0000000000000865 .LASF72
     /tmp/ccBTqZWy.s:5238   .debug_str:00000000000004ac .LASF73
     /tmp/ccBTqZWy.s:5190   .debug_str:0000000000000307 .LASF74
     /tmp/ccBTqZWy.s:5576   .debug_str:0000000000000fe2 .LASF75
     /tmp/ccBTqZWy.s:5140   .debug_str:0000000000000110 .LASF76
     /tmp/ccBTqZWy.s:5552   .debug_str:0000000000000f2a .LASF77
     /tmp/ccBTqZWy.s:5544   .debug_str:0000000000000f02 .LASF78
     /tmp/ccBTqZWy.s:5774   .debug_str:000000000000170e .LASF79
     /tmp/ccBTqZWy.s:5550   .debug_str:0000000000000f23 .LASF80
     /tmp/ccBTqZWy.s:5200   .debug_str:000000000000036c .LASF81
     /tmp/ccBTqZWy.s:5600   .debug_str:00000000000010b7 .LASF82
     /tmp/ccBTqZWy.s:5558   .debug_str:0000000000000f61 .LASF83
     /tmp/ccBTqZWy.s:5722   .debug_str:000000000000153e .LASF84
     /tmp/ccBTqZWy.s:5746   .debug_str:0000000000001604 .LASF85
     /tmp/ccBTqZWy.s:5716   .debug_str:0000000000001514 .LASF86
     /tmp/ccBTqZWy.s:5424   .debug_str:0000000000000b01 .LASF87
     /tmp/ccBTqZWy.s:5532   .debug_str:0000000000000ebc .LASF88
     /tmp/ccBTqZWy.s:5324   .debug_str:00000000000007b2 .LASF89
     /tmp/ccBTqZWy.s:5332   .debug_str:00000000000007ea .LASF90
     /tmp/ccBTqZWy.s:5230   .debug_str:0000000000000476 .LASF91
     /tmp/ccBTqZWy.s:5328   .debug_str:00000000000007ca .LASF92
     /tmp/ccBTqZWy.s:5336   .debug_str:00000000000007fb .LASF93
     /tmp/ccBTqZWy.s:5686   .debug_str:000000000000141c .LASF94
     /tmp/ccBTqZWy.s:5312   .debug_str:0000000000000713 .LASF95
     /tmp/ccBTqZWy.s:5496   .debug_str:0000000000000db1 .LASF96
     /tmp/ccBTqZWy.s:5366   .debug_str:00000000000008ec .LASF97
     /tmp/ccBTqZWy.s:5170   .debug_str:0000000000000260 .LASF98
     /tmp/ccBTqZWy.s:5412   .debug_str:0000000000000a7c .LASF99
     /tmp/ccBTqZWy.s:5534   .debug_str:0000000000000ec2 .LASF100
     /tmp/ccBTqZWy.s:5132   .debug_str:00000000000000c5 .LASF101
     /tmp/ccBTqZWy.s:5178   .debug_str:000000000000029a .LASF102
     /tmp/ccBTqZWy.s:5684   .debug_str:0000000000001410 .LASF103
GAS LISTING /tmp/ccBTqZWy.s 			page 48


     /tmp/ccBTqZWy.s:5180   .debug_str:00000000000002a9 .LASF104
     /tmp/ccBTqZWy.s:5440   .debug_str:0000000000000bac .LASF105
     /tmp/ccBTqZWy.s:5316   .debug_str:000000000000073d .LASF106
     /tmp/ccBTqZWy.s:5358   .debug_str:00000000000008ae .LASF107
     /tmp/ccBTqZWy.s:5196   .debug_str:0000000000000347 .LASF108
     /tmp/ccBTqZWy.s:5644   .debug_str:00000000000012c6 .LASF109
     /tmp/ccBTqZWy.s:5410   .debug_str:0000000000000a77 .LASF110
     /tmp/ccBTqZWy.s:5484   .debug_str:0000000000000d4d .LASF112
     /tmp/ccBTqZWy.s:5590   .debug_str:0000000000001061 .LASF115
     /tmp/ccBTqZWy.s:5378   .debug_str:0000000000000956 .LASF113
     /tmp/ccBTqZWy.s:5206   .debug_str:000000000000039e .LASF114
     /tmp/ccBTqZWy.s:5296   .debug_str:000000000000069d .LASF116
     /tmp/ccBTqZWy.s:5382   .debug_str:000000000000096e .LASF117
     /tmp/ccBTqZWy.s:5388   .debug_str:000000000000098b .LASF118
     /tmp/ccBTqZWy.s:5292   .debug_str:0000000000000688 .LASF119
     /tmp/ccBTqZWy.s:5792   .debug_str:00000000000017b9 .LASF120
     /tmp/ccBTqZWy.s:5428   .debug_str:0000000000000b36 .LASF121
     /tmp/ccBTqZWy.s:5142   .debug_str:000000000000011b .LASF123
     /tmp/ccBTqZWy.s:5626   .debug_str:0000000000001260 .LASF122
     /tmp/ccBTqZWy.s:5430   .debug_str:0000000000000b40 .LASF124
     /tmp/ccBTqZWy.s:5710   .debug_str:00000000000014da .LASF125
     /tmp/ccBTqZWy.s:5662   .debug_str:0000000000001332 .LASF126
     /tmp/ccBTqZWy.s:5622   .debug_str:000000000000123e .LASF127
     /tmp/ccBTqZWy.s:5134   .debug_str:00000000000000cd .LASF128
     /tmp/ccBTqZWy.s:5726   .debug_str:000000000000154d .LASF129
     /tmp/ccBTqZWy.s:5130   .debug_str:0000000000000097 .LASF130
     /tmp/ccBTqZWy.s:5634   .debug_str:000000000000128f .LASF131
     /tmp/ccBTqZWy.s:5322   .debug_str:0000000000000783 .LASF132
     /tmp/ccBTqZWy.s:5118   .debug_str:0000000000000031 .LASF133
     /tmp/ccBTqZWy.s:5470   .debug_str:0000000000000cbf .LASF134
     /tmp/ccBTqZWy.s:5264   .debug_str:000000000000057f .LASF135
     /tmp/ccBTqZWy.s:5730   .debug_str:0000000000001576 .LASF136
     /tmp/ccBTqZWy.s:5606   .debug_str:00000000000010e2 .LASF137
     /tmp/ccBTqZWy.s:5254   .debug_str:0000000000000512 .LASF138
     /tmp/ccBTqZWy.s:5246   .debug_str:00000000000004dd .LASF139
     /tmp/ccBTqZWy.s:5708   .debug_str:00000000000014ab .LASF140
     /tmp/ccBTqZWy.s:5288   .debug_str:0000000000000674 .LASF141
     /tmp/ccBTqZWy.s:5420   .debug_str:0000000000000ad2 .LASF142
     /tmp/ccBTqZWy.s:5152   .debug_str:00000000000001a2 .LASF143
     /tmp/ccBTqZWy.s:5472   .debug_str:0000000000000ce9 .LASF144
     /tmp/ccBTqZWy.s:5642   .debug_str:00000000000012c0 .LASF145
     /tmp/ccBTqZWy.s:5194   .debug_str:0000000000000341 .LASF146
     /tmp/ccBTqZWy.s:5588   .debug_str:0000000000001059 .LASF147
     /tmp/ccBTqZWy.s:5212   .debug_str:00000000000003d0 .LASF148
     /tmp/ccBTqZWy.s:5182   .debug_str:00000000000002bc .LASF149
     /tmp/ccBTqZWy.s:5494   .debug_str:0000000000000da9 .LASF150
     /tmp/ccBTqZWy.s:5376   .debug_str:000000000000094d .LASF151
     /tmp/ccBTqZWy.s:5566   .debug_str:0000000000000faa .LASF152
     /tmp/ccBTqZWy.s:5326   .debug_str:00000000000007c4 .LASF153
     /tmp/ccBTqZWy.s:5672   .debug_str:00000000000013c0 .LASF154
     /tmp/ccBTqZWy.s:5446   .debug_str:0000000000000bd8 .LASF335
     /tmp/ccBTqZWy.s:5474   .debug_str:0000000000000d07 .LASF155
     /tmp/ccBTqZWy.s:5724   .debug_str:0000000000001548 .LASF156
     /tmp/ccBTqZWy.s:5770   .debug_str:00000000000016d9 .LASF157
     /tmp/ccBTqZWy.s:5762   .debug_str:000000000000169c .LASF158
     /tmp/ccBTqZWy.s:5656   .debug_str:0000000000001304 .LASF159
     /tmp/ccBTqZWy.s:5242   .debug_str:00000000000004cf .LASF160
GAS LISTING /tmp/ccBTqZWy.s 			page 49


     /tmp/ccBTqZWy.s:5154   .debug_str:00000000000001a8 .LASF161
     /tmp/ccBTqZWy.s:5386   .debug_str:0000000000000985 .LASF162
     /tmp/ccBTqZWy.s:5480   .debug_str:0000000000000d29 .LASF163
     /tmp/ccBTqZWy.s:5648   .debug_str:00000000000012e2 .LASF164
     /tmp/ccBTqZWy.s:5240   .debug_str:00000000000004be .LASF165
     /tmp/ccBTqZWy.s:5416   .debug_str:0000000000000aad .LASF170
     /tmp/ccBTqZWy.s:5398   .debug_str:00000000000009f9 .LASF172
     /tmp/ccBTqZWy.s:5778   .debug_str:000000000000173b .LASF166
     /tmp/ccBTqZWy.s:5290   .debug_str:000000000000067c .LASF167
     /tmp/ccBTqZWy.s:5342   .debug_str:0000000000000826 .LASF168
     /tmp/ccBTqZWy.s:5354   .debug_str:0000000000000891 .LASF169
     /tmp/ccBTqZWy.s:5580   .debug_str:000000000000100e .LASF171
     /tmp/ccBTqZWy.s:5236   .debug_str:0000000000000499 .LASF173
     /tmp/ccBTqZWy.s:5516   .debug_str:0000000000000e4a .LASF174
     /tmp/ccBTqZWy.s:5612   .debug_str:0000000000001129 .LASF175
     /tmp/ccBTqZWy.s:5444   .debug_str:0000000000000bc9 .LASF176
     /tmp/ccBTqZWy.s:5120   .debug_str:0000000000000042 .LASF177
     /tmp/ccBTqZWy.s:5744   .debug_str:00000000000015f5 .LASF178
     /tmp/ccBTqZWy.s:5486   .debug_str:0000000000000d5d .LASF179
     /tmp/ccBTqZWy.s:5602   .debug_str:00000000000010be .LASF180
     /tmp/ccBTqZWy.s:5510   .debug_str:0000000000000e14 .LASF181
     /tmp/ccBTqZWy.s:5114   .debug_str:000000000000000f .LASF182
     /tmp/ccBTqZWy.s:5464   .debug_str:0000000000000c86 .LASF183
     /tmp/ccBTqZWy.s:5538   .debug_str:0000000000000ed3 .LASF184
     /tmp/ccBTqZWy.s:5406   .debug_str:0000000000000a3e .LASF185
     /tmp/ccBTqZWy.s:5752   .debug_str:0000000000001646 .LASF186
     /tmp/ccBTqZWy.s:5362   .debug_str:00000000000008d3 .LASF187
     /tmp/ccBTqZWy.s:5594   .debug_str:0000000000001084 .LASF188
     /tmp/ccBTqZWy.s:5768   .debug_str:00000000000016c3 .LASF189
     /tmp/ccBTqZWy.s:5628   .debug_str:0000000000001269 .LASF190
     /tmp/ccBTqZWy.s:5596   .debug_str:000000000000108f .LASF191
     /tmp/ccBTqZWy.s:5572   .debug_str:0000000000000fcc .LASF192
     /tmp/ccBTqZWy.s:5488   .debug_str:0000000000000d77 .LASF193
     /tmp/ccBTqZWy.s:5456   .debug_str:0000000000000c20 .LASF194
     /tmp/ccBTqZWy.s:5226   .debug_str:0000000000000445 .LASF195
     /tmp/ccBTqZWy.s:5748   .debug_str:000000000000161a .LASF196
     /tmp/ccBTqZWy.s:5794   .debug_str:00000000000017c3 .LASF197
     /tmp/ccBTqZWy.s:5460   .debug_str:0000000000000c46 .LASF198
     /tmp/ccBTqZWy.s:5556   .debug_str:0000000000000f4e .LASF199
     /tmp/ccBTqZWy.s:5582   .debug_str:0000000000001017 .LASF200
     /tmp/ccBTqZWy.s:5700   .debug_str:000000000000146e .LASF201
     /tmp/ccBTqZWy.s:5790   .debug_str:000000000000179b .LASF202
     /tmp/ccBTqZWy.s:5776   .debug_str:0000000000001726 .LASF203
     /tmp/ccBTqZWy.s:5610   .debug_str:0000000000001109 .LASF204
     /tmp/ccBTqZWy.s:5482   .debug_str:0000000000000d39 .LASF205
     /tmp/ccBTqZWy.s:5462   .debug_str:0000000000000c67 .LASF206
     /tmp/ccBTqZWy.s:5562   .debug_str:0000000000000f9a .LASF207
     /tmp/ccBTqZWy.s:5522   .debug_str:0000000000000e73 .LASF208
     /tmp/ccBTqZWy.s:5308   .debug_str:00000000000006f7 .LASF209
     /tmp/ccBTqZWy.s:5660   .debug_str:0000000000001328 .LASF210
     /tmp/ccBTqZWy.s:5294   .debug_str:0000000000000691 .LASF211
     /tmp/ccBTqZWy.s:5760   .debug_str:000000000000168e .LASF212
     /tmp/ccBTqZWy.s:5164   .debug_str:0000000000000217 .LASF213
     /tmp/ccBTqZWy.s:5168   .debug_str:000000000000024b .LASF214
     /tmp/ccBTqZWy.s:5192   .debug_str:0000000000000315 .LASF215
     /tmp/ccBTqZWy.s:5782   .debug_str:0000000000001757 .LASF216
     /tmp/ccBTqZWy.s:5188   .debug_str:00000000000002f6 .LASF217
GAS LISTING /tmp/ccBTqZWy.s 			page 50


     /tmp/ccBTqZWy.s:5124   .debug_str:0000000000000074 .LASF218
     /tmp/ccBTqZWy.s:5696   .debug_str:000000000000145d .LASF219
     /tmp/ccBTqZWy.s:5404   .debug_str:0000000000000a36 .LASF220
     /tmp/ccBTqZWy.s:5248   .debug_str:00000000000004ef .LASF221
     /tmp/ccBTqZWy.s:5676   .debug_str:00000000000013da .LASF222
     /tmp/ccBTqZWy.s:5174   .debug_str:000000000000027f .LASF223
     /tmp/ccBTqZWy.s:5636   .debug_str:00000000000012a4 .LASF224
     /tmp/ccBTqZWy.s:5738   .debug_str:00000000000015d9 .LASF225
     /tmp/ccBTqZWy.s:5502   .debug_str:0000000000000de7 .LASF226
     /tmp/ccBTqZWy.s:5116   .debug_str:000000000000001f .LASF227
     /tmp/ccBTqZWy.s:5280   .debug_str:0000000000000624 .LASF228
     /tmp/ccBTqZWy.s:5184   .debug_str:00000000000002c5 .LASF229
     /tmp/ccBTqZWy.s:5148   .debug_str:000000000000015b .LASF230
     /tmp/ccBTqZWy.s:5530   .debug_str:0000000000000eb1 .LASF231
     /tmp/ccBTqZWy.s:5310   .debug_str:00000000000006ff .LASF232
     /tmp/ccBTqZWy.s:5162   .debug_str:000000000000020b .LASF233
     /tmp/ccBTqZWy.s:5528   .debug_str:0000000000000e9d .LASF234
     /tmp/ccBTqZWy.s:5244   .debug_str:00000000000004d8 .LASF235
     /tmp/ccBTqZWy.s:5592   .debug_str:000000000000106d .LASF236
     /tmp/ccBTqZWy.s:5624   .debug_str:0000000000001259 .LASF237
     /tmp/ccBTqZWy.s:5540   .debug_str:0000000000000ee0 .LASF238
     /tmp/ccBTqZWy.s:5640   .debug_str:00000000000012b4 .LASF239
     /tmp/ccBTqZWy.s:5554   .debug_str:0000000000000f42 .LASF240
     /tmp/ccBTqZWy.s:5414   .debug_str:0000000000000a99 .LASF241
     /tmp/ccBTqZWy.s:5330   .debug_str:00000000000007d5 .LASF242
     /tmp/ccBTqZWy.s:5208   .debug_str:00000000000003a3 .LASF243
     /tmp/ccBTqZWy.s:5216   .debug_str:00000000000003e8 .LASF244
     /tmp/ccBTqZWy.s:5448   .debug_str:0000000000000bf0 .LASF245
     /tmp/ccBTqZWy.s:5492   .debug_str:0000000000000d9e .LASF246
     /tmp/ccBTqZWy.s:5112   .debug_str:0000000000000000 .LASF247
     /tmp/ccBTqZWy.s:5320   .debug_str:0000000000000761 .LASF248
     /tmp/ccBTqZWy.s:5674   .debug_str:00000000000013cb .LASF249
     /tmp/ccBTqZWy.s:5618   .debug_str:0000000000001210 .LASF250
     /tmp/ccBTqZWy.s:5670   .debug_str:00000000000013af .LASF251
     /tmp/ccBTqZWy.s:5224   .debug_str:0000000000000421 .LASF252
     /tmp/ccBTqZWy.s:5632   .debug_str:000000000000127f .LASF253
     /tmp/ccBTqZWy.s:5514   .debug_str:0000000000000e27 .LASF254
     /tmp/ccBTqZWy.s:5384   .debug_str:000000000000097c .LASF255
     /tmp/ccBTqZWy.s:5338   .debug_str:0000000000000813 .LASF256
     /tmp/ccBTqZWy.s:5786   .debug_str:000000000000177b .LASF257
     /tmp/ccBTqZWy.s:5128   .debug_str:000000000000008f .LASF258
     /tmp/ccBTqZWy.s:5402   .debug_str:0000000000000a1c .LASF259
     /tmp/ccBTqZWy.s:5356   .debug_str:000000000000089e .LASF260
     /tmp/ccBTqZWy.s:5756   .debug_str:000000000000165e .LASF261
     /tmp/ccBTqZWy.s:5728   .debug_str:0000000000001563 .LASF262
     /tmp/ccBTqZWy.s:5560   .debug_str:0000000000000f74 .LASF263
     /tmp/ccBTqZWy.s:5766   .debug_str:00000000000016b6 .LASF264
     /tmp/ccBTqZWy.s:5150   .debug_str:000000000000017e .LASF265
     /tmp/ccBTqZWy.s:5452   .debug_str:0000000000000c01 .LASF266
     /tmp/ccBTqZWy.s:5306   .debug_str:00000000000006e4 .LASF267
     /tmp/ccBTqZWy.s:5274   .debug_str:00000000000005e1 .LASF268
     /tmp/ccBTqZWy.s:5476   .debug_str:0000000000000d0c .LASF269
     /tmp/ccBTqZWy.s:5630   .debug_str:0000000000001274 .LASF270
     /tmp/ccBTqZWy.s:5508   .debug_str:0000000000000e0a .LASF271
     /tmp/ccBTqZWy.s:5702   .debug_str:0000000000001481 .LASF272
     /tmp/ccBTqZWy.s:5638   .debug_str:00000000000012a9 .LASF273
     /tmp/ccBTqZWy.s:5698   .debug_str:0000000000001462 .LASF274
GAS LISTING /tmp/ccBTqZWy.s 			page 51


     /tmp/ccBTqZWy.s:5144   .debug_str:000000000000013c .LASF275
     /tmp/ccBTqZWy.s:5432   .debug_str:0000000000000b61 .LASF276
     /tmp/ccBTqZWy.s:5506   .debug_str:0000000000000dfe .LASF277
     /tmp/ccBTqZWy.s:5598   .debug_str:00000000000010a5 .LASF278
     /tmp/ccBTqZWy.s:5268   .debug_str:000000000000059b .LASF279
     /tmp/ccBTqZWy.s:5692   .debug_str:0000000000001442 .LASF280
     /tmp/ccBTqZWy.s:5344   .debug_str:0000000000000836 .LASF281
     /tmp/ccBTqZWy.s:5690   .debug_str:0000000000001430 .LASF282
     /tmp/ccBTqZWy.s:5438   .debug_str:0000000000000b8a .LASF283
     /tmp/ccBTqZWy.s:5374   .debug_str:000000000000093a .LASF284
     /tmp/ccBTqZWy.s:5186   .debug_str:00000000000002d3 .LASF285
     /tmp/ccBTqZWy.s:5260   .debug_str:0000000000000556 .LASF286
     /tmp/ccBTqZWy.s:5276   .debug_str:00000000000005f5 .LASF287
     /tmp/ccBTqZWy.s:5156   .debug_str:00000000000001bb .LASF288
     /tmp/ccBTqZWy.s:5780   .debug_str:0000000000001748 .LASF289
     /tmp/ccBTqZWy.s:5426   .debug_str:0000000000000b17 .LASF290
     /tmp/ccBTqZWy.s:5736   .debug_str:00000000000015c0 .LASF291
     /tmp/ccBTqZWy.s:5408   .debug_str:0000000000000a4d .LASF292
     /tmp/ccBTqZWy.s:5392   .debug_str:00000000000009a7 .LASF293
     /tmp/ccBTqZWy.s:5772   .debug_str:00000000000016e5 .LASF294
     /tmp/ccBTqZWy.s:5284   .debug_str:0000000000000654 .LASF295
     /tmp/ccBTqZWy.s:5646   .debug_str:00000000000012d0 .LASF296
     /tmp/ccBTqZWy.s:5298   .debug_str:00000000000006a6 .LASF297
     /tmp/ccBTqZWy.s:5754   .debug_str:0000000000001651 .LASF298
     /tmp/ccBTqZWy.s:5318   .debug_str:0000000000000750 .LASF299
     /tmp/ccBTqZWy.s:5364   .debug_str:00000000000008e0 .LASF300
     /tmp/ccBTqZWy.s:5394   .debug_str:00000000000009bf .LASF301
     /tmp/ccBTqZWy.s:5166   .debug_str:000000000000023f .LASF302
     /tmp/ccBTqZWy.s:5160   .debug_str:00000000000001ef .LASF303
     /tmp/ccBTqZWy.s:5172   .debug_str:000000000000026f .LASF304
     /tmp/ccBTqZWy.s:5668   .debug_str:000000000000138d .LASF305
     /tmp/ccBTqZWy.s:5282   .debug_str:000000000000064b .LASF336
     /tmp/ccBTqZWy.s:5718   .debug_str:000000000000151e .LASF337
     /tmp/ccBTqZWy.s:5300   .debug_str:00000000000006b3 .LASF306
     /tmp/ccBTqZWy.s:5500   .debug_str:0000000000000dcf .LASF338
     /tmp/ccBTqZWy.s:5764   .debug_str:00000000000016a2 .LASF339
     /tmp/ccBTqZWy.s:5680   .debug_str:00000000000013f7 .LASF307
     /tmp/ccBTqZWy.s:5478   .debug_str:0000000000000d16 .LASF308
     /tmp/ccBTqZWy.s:5652   .debug_str:00000000000012f7 .LASF309
     /tmp/ccBTqZWy.s:5122   .debug_str:000000000000005c .LASF310
     /tmp/ccBTqZWy.s:5368   .debug_str:000000000000090e .LASF311
     /tmp/ccBTqZWy.s:5454   .debug_str:0000000000000c0a .LASF312
     /tmp/ccBTqZWy.s:5578   .debug_str:0000000000000ffd .LASF313
     /tmp/ccBTqZWy.s:5222   .debug_str:0000000000000410 .LASF314
     /tmp/ccBTqZWy.s:5666   .debug_str:0000000000001378 .LASF315
     /tmp/ccBTqZWy.s:5158   .debug_str:00000000000001d6 .LASF316
     /tmp/ccBTqZWy.s:5784   .debug_str:000000000000175e .LASF340
     /tmp/ccBTqZWy.s:491    .text:0000000000000260 .LFB39
     /tmp/ccBTqZWy.s:551    .text:00000000000002a0 .LFE39
     /tmp/ccBTqZWy.s:509    .text:0000000000000280 .LBB47
     /tmp/ccBTqZWy.s:522    .text:0000000000000288 .LBE47
     /tmp/ccBTqZWy.s:4910   .debug_loc:0000000000000000 .LLST4
     /tmp/ccBTqZWy.s:535    .text:0000000000000294 .LBB49
     /tmp/ccBTqZWy.s:547    .text:000000000000029c .LBE49
     /tmp/ccBTqZWy.s:4919   .debug_loc:0000000000000026 .LLST5
     /tmp/ccBTqZWy.s:438    .text:0000000000000228 .LFB38
     /tmp/ccBTqZWy.s:485    .text:0000000000000260 .LFE38
GAS LISTING /tmp/ccBTqZWy.s 			page 52


     /tmp/ccBTqZWy.s:5682   .debug_str:0000000000001409 .LASF317
     /tmp/ccBTqZWy.s:417    .text:0000000000000218 .LFB37
     /tmp/ccBTqZWy.s:432    .text:0000000000000228 .LFE37
     /tmp/ccBTqZWy.s:384    .text:00000000000001f8 .LFB36
     /tmp/ccBTqZWy.s:411    .text:0000000000000218 .LFE36
     /tmp/ccBTqZWy.s:352    .text:00000000000001d0 .LFB35
     /tmp/ccBTqZWy.s:378    .text:00000000000001f8 .LFE35
     /tmp/ccBTqZWy.s:4928   .debug_loc:000000000000004c .LLST3
     /tmp/ccBTqZWy.s:367    .text:00000000000001e8 .LVL24
     /tmp/ccBTqZWy.s:321    .text:00000000000001a8 .LFB34
     /tmp/ccBTqZWy.s:346    .text:00000000000001d0 .LFE34
     /tmp/ccBTqZWy.s:335    .text:00000000000001c0 .LVL22
     /tmp/ccBTqZWy.s:255    .text:0000000000000130 .LFB33
     /tmp/ccBTqZWy.s:315    .text:00000000000001a8 .LFE33
     /tmp/ccBTqZWy.s:279    .text:0000000000000164 .LVL17
     /tmp/ccBTqZWy.s:283    .text:000000000000016c .LVL18
     /tmp/ccBTqZWy.s:291    .text:0000000000000180 .LVL19
     /tmp/ccBTqZWy.s:297    .text:000000000000018c .LVL20
     /tmp/ccBTqZWy.s:304    .text:0000000000000198 .LVL21
     /tmp/ccBTqZWy.s:557    .text:00000000000002a0 .LFB32
     /tmp/ccBTqZWy.s:1240   .text:000000000000059c .LFE32
     /tmp/ccBTqZWy.s:5136   .debug_str:0000000000000102 .LASF318
     /tmp/ccBTqZWy.s:4942   .debug_loc:0000000000000085 .LLST6
     /tmp/ccBTqZWy.s:5084   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccBTqZWy.s:5654   .debug_str:00000000000012ff .LASF319
     /tmp/ccBTqZWy.s:5586   .debug_str:0000000000001051 .LASF320
     /tmp/ccBTqZWy.s:742    .text:00000000000003a4 .LBB61
     /tmp/ccBTqZWy.s:758    .text:00000000000003b0 .LBE61
     /tmp/ccBTqZWy.s:762    .text:00000000000003b4 .LBB63
     /tmp/ccBTqZWy.s:777    .text:00000000000003c0 .LBE63
     /tmp/ccBTqZWy.s:782    .text:00000000000003c4 .LBB65
     /tmp/ccBTqZWy.s:794    .text:00000000000003cc .LBE65
     /tmp/ccBTqZWy.s:4969   .debug_loc:0000000000000107 .LLST10
     /tmp/ccBTqZWy.s:816    .text:0000000000000408 .LBB67
     /tmp/ccBTqZWy.s:824    .text:000000000000040c .LBE67
     /tmp/ccBTqZWy.s:4977   .debug_loc:000000000000012b .LLST11
     /tmp/ccBTqZWy.s:834    .text:0000000000000418 .LBB69
     /tmp/ccBTqZWy.s:845    .text:000000000000041c .LBE69
     /tmp/ccBTqZWy.s:4984   .debug_loc:000000000000014e .LLST12
     /tmp/ccBTqZWy.s:850    .text:0000000000000420 .LBB71
     /tmp/ccBTqZWy.s:861    .text:0000000000000424 .LBE71
     /tmp/ccBTqZWy.s:4991   .debug_loc:0000000000000171 .LLST13
     /tmp/ccBTqZWy.s:810    .text:00000000000003fc .LVL51
     /tmp/ccBTqZWy.s:865    .text:000000000000042c .LVL58
     /tmp/ccBTqZWy.s:894    .text:000000000000044c .LVL59
     /tmp/ccBTqZWy.s:4998   .debug_loc:0000000000000194 .LLST7
     /tmp/ccBTqZWy.s:5536   .debug_str:0000000000000ec9 .LASF321
     /tmp/ccBTqZWy.s:5009   .debug_loc:00000000000001ca .LLST8
     /tmp/ccBTqZWy.s:5016   .debug_loc:00000000000001ed .LLST9
     /tmp/ccBTqZWy.s:910    .text:0000000000000468 .LVL61
     /tmp/ccBTqZWy.s:730    .text:0000000000000398 .LVL45
     /tmp/ccBTqZWy.s:732    .text:00000000000003a0 .LVL46
     /tmp/ccBTqZWy.s:5027   .debug_loc:0000000000000223 .LLST14
     /tmp/ccBTqZWy.s:941    .text:000000000000047c .LBB76
     /tmp/ccBTqZWy.s:956    .text:0000000000000488 .LBE76
     /tmp/ccBTqZWy.s:962    .text:0000000000000490 .LBB78
     /tmp/ccBTqZWy.s:977    .text:000000000000049c .LBE78
GAS LISTING /tmp/ccBTqZWy.s 			page 53


     /tmp/ccBTqZWy.s:1075   .text:00000000000004d0 .LBB80
     /tmp/ccBTqZWy.s:1086   .text:00000000000004d4 .LBE80
     /tmp/ccBTqZWy.s:5034   .debug_loc:0000000000000246 .LLST15
     /tmp/ccBTqZWy.s:1091   .text:00000000000004d8 .LBB82
     /tmp/ccBTqZWy.s:1102   .text:00000000000004dc .LBE82
     /tmp/ccBTqZWy.s:5041   .debug_loc:0000000000000269 .LLST16
     /tmp/ccBTqZWy.s:1068   .text:00000000000004cc .LVL67
     /tmp/ccBTqZWy.s:1106   .text:00000000000004e4 .LVL72
     /tmp/ccBTqZWy.s:1121   .text:00000000000004f0 .LVL73
     /tmp/ccBTqZWy.s:1129   .text:00000000000004fc .LVL74
     /tmp/ccBTqZWy.s:1137   .text:0000000000000508 .LVL75
     /tmp/ccBTqZWy.s:1145   .text:0000000000000514 .LVL76
     /tmp/ccBTqZWy.s:1153   .text:0000000000000520 .LVL77
     /tmp/ccBTqZWy.s:1161   .text:000000000000052c .LVL78
     /tmp/ccBTqZWy.s:1169   .text:0000000000000538 .LVL79
     /tmp/ccBTqZWy.s:1177   .text:0000000000000544 .LVL80
     /tmp/ccBTqZWy.s:1185   .text:0000000000000550 .LVL81
     /tmp/ccBTqZWy.s:1193   .text:000000000000055c .LVL82
     /tmp/ccBTqZWy.s:1201   .text:0000000000000568 .LVL83
     /tmp/ccBTqZWy.s:1209   .text:0000000000000574 .LVL84
     /tmp/ccBTqZWy.s:1217   .text:0000000000000580 .LVL85
     /tmp/ccBTqZWy.s:1225   .text:000000000000058c .LVL86
     /tmp/ccBTqZWy.s:1233   .text:0000000000000598 .LVL87
     /tmp/ccBTqZWy.s:591    .text:00000000000002d8 .LBB51
     /tmp/ccBTqZWy.s:607    .text:00000000000002e4 .LBE51
     /tmp/ccBTqZWy.s:624    .text:000000000000030c .LVL33
     /tmp/ccBTqZWy.s:639    .text:0000000000000320 .LVL35
     /tmp/ccBTqZWy.s:922    .text:0000000000000474 .LVL63
     /tmp/ccBTqZWy.s:220    .text:0000000000000110 .LFB31
     /tmp/ccBTqZWy.s:249    .text:0000000000000130 .LFE31
     /tmp/ccBTqZWy.s:101    .text:000000000000005c .LFB30
     /tmp/ccBTqZWy.s:133    .text:000000000000007c .LFE30
     /tmp/ccBTqZWy.s:112    .text:0000000000000068 .LBB45
     /tmp/ccBTqZWy.s:124    .text:0000000000000070 .LBE45
     /tmp/ccBTqZWy.s:5048   .debug_loc:000000000000028c .LLST1
     /tmp/ccBTqZWy.s:63     .text:000000000000003c .LFB29
     /tmp/ccBTqZWy.s:95     .text:000000000000005c .LFE29
     /tmp/ccBTqZWy.s:74     .text:0000000000000048 .LBB43
     /tmp/ccBTqZWy.s:86     .text:0000000000000050 .LBE43
     /tmp/ccBTqZWy.s:5056   .debug_loc:00000000000002b0 .LLST0
     /tmp/ccBTqZWy.s:139    .text:000000000000007c .LFB28
     /tmp/ccBTqZWy.s:214    .text:0000000000000110 .LFE28
     /tmp/ccBTqZWy.s:5064   .debug_loc:00000000000002d4 .LLST2
     /tmp/ccBTqZWy.s:153    .text:0000000000000094 .LVL8
     /tmp/ccBTqZWy.s:165    .text:00000000000000a8 .LVL10
     /tmp/ccBTqZWy.s:174    .text:00000000000000c0 .LVL12
     /tmp/ccBTqZWy.s:182    .text:00000000000000d4 .LVL13
     /tmp/ccBTqZWy.s:190    .text:00000000000000e8 .LVL14
     /tmp/ccBTqZWy.s:196    .text:00000000000000f4 .LVL15
     /tmp/ccBTqZWy.s:203    .text:0000000000000100 .LVL16
     /tmp/ccBTqZWy.s:10     .text:0000000000000000 .LFB27
     /tmp/ccBTqZWy.s:57     .text:000000000000003c .LFE27
     /tmp/ccBTqZWy.s:26     .text:0000000000000018 .LBB41
     /tmp/ccBTqZWy.s:38     .text:000000000000001c .LBE41
     /tmp/ccBTqZWy.s:42     .text:0000000000000024 .LVL2
     /tmp/ccBTqZWy.s:46     .text:000000000000002c .LVL3
     /tmp/ccBTqZWy.s:5232   .debug_str:0000000000000488 .LASF341
GAS LISTING /tmp/ccBTqZWy.s 			page 54


     /tmp/ccBTqZWy.s:5688   .debug_str:000000000000142b .LASF322
     /tmp/ccBTqZWy.s:5742   .debug_str:00000000000015ef .LASF323
     /tmp/ccBTqZWy.s:5266   .debug_str:000000000000058f .LASF324
     /tmp/ccBTqZWy.s:5548   .debug_str:0000000000000f1b .LASF326
     /tmp/ccBTqZWy.s:5518   .debug_str:0000000000000e53 .LASF325
     /tmp/ccBTqZWy.s:5498   .debug_str:0000000000000dc6 .LASF327
     /tmp/ccBTqZWy.s:5434   .debug_str:0000000000000b6d .LASF328
     /tmp/ccBTqZWy.s:5706   .debug_str:000000000000149b .LASF329
     /tmp/ccBTqZWy.s:5400   .debug_str:0000000000000a11 .LASF330
     /tmp/ccBTqZWy.s:5214   .debug_str:00000000000003da .LASF331
     /tmp/ccBTqZWy.s:508    .text:0000000000000280 .LVL28
     /tmp/ccBTqZWy.s:518    .text:0000000000000288 .LVL29
     /tmp/ccBTqZWy.s:534    .text:0000000000000294 .LVL30
     /tmp/ccBTqZWy.s:544    .text:000000000000029c .LVL31
     /tmp/ccBTqZWy.s:355    .text:00000000000001d0 .LVL23
     /tmp/ccBTqZWy.s:605    .text:00000000000002e4 .LVL32
     /tmp/ccBTqZWy.s:627    .text:0000000000000310 .LVL34
     /tmp/ccBTqZWy.s:642    .text:0000000000000324 .LVL36
     /tmp/ccBTqZWy.s:661    .text:000000000000034c .LVL37
     /tmp/ccBTqZWy.s:735    .text:00000000000003a4 .LVL47
     /tmp/ccBTqZWy.s:751    .text:00000000000003a8 .LVL48
     /tmp/ccBTqZWy.s:912    .text:000000000000046c .LVL62
     /tmp/ccBTqZWy.s:925    .text:0000000000000478 .LVL64
     /tmp/ccBTqZWy.s:938    .text:000000000000047c .LVL65
     /tmp/ccBTqZWy.s:781    .text:00000000000003c4 .LVL49
     /tmp/ccBTqZWy.s:791    .text:00000000000003cc .LVL50
     /tmp/ccBTqZWy.s:815    .text:0000000000000408 .LVL52
     /tmp/ccBTqZWy.s:822    .text:000000000000040c .LVL53
     /tmp/ccBTqZWy.s:833    .text:0000000000000418 .LVL54
     /tmp/ccBTqZWy.s:842    .text:000000000000041c .LVL55
     /tmp/ccBTqZWy.s:849    .text:0000000000000420 .LVL56
     /tmp/ccBTqZWy.s:858    .text:0000000000000424 .LVL57
     /tmp/ccBTqZWy.s:663    .text:0000000000000350 .LVL38
     /tmp/ccBTqZWy.s:681    .text:000000000000035c .LVL39
     /tmp/ccBTqZWy.s:695    .text:0000000000000370 .LVL41
     /tmp/ccBTqZWy.s:719    .text:0000000000000388 .LVL43
     /tmp/ccBTqZWy.s:687    .text:0000000000000360 .LVL40
     /tmp/ccBTqZWy.s:715    .text:0000000000000380 .LVL42
     /tmp/ccBTqZWy.s:723    .text:0000000000000390 .LVL44
     /tmp/ccBTqZWy.s:896    .text:0000000000000450 .LVL60
     /tmp/ccBTqZWy.s:984    .text:00000000000004ac .LVL66
     /tmp/ccBTqZWy.s:1074   .text:00000000000004d0 .LVL68
     /tmp/ccBTqZWy.s:1083   .text:00000000000004d4 .LVL69
     /tmp/ccBTqZWy.s:1090   .text:00000000000004d8 .LVL70
     /tmp/ccBTqZWy.s:1099   .text:00000000000004dc .LVL71
     /tmp/ccBTqZWy.s:111    .text:0000000000000068 .LVL6
     /tmp/ccBTqZWy.s:121    .text:0000000000000070 .LVL7
     /tmp/ccBTqZWy.s:73     .text:0000000000000048 .LVL4
     /tmp/ccBTqZWy.s:83     .text:0000000000000050 .LVL5
     /tmp/ccBTqZWy.s:172    .text:00000000000000b8 .LVL11
     /tmp/ccBTqZWy.s:1273   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccBTqZWy.s:657    .text:0000000000000344 .LBB55
     /tmp/ccBTqZWy.s:737    .text:00000000000003a4 .LBE55
     /tmp/ccBTqZWy.s:899    .text:0000000000000450 .LBB74
     /tmp/ccBTqZWy.s:916    .text:000000000000046c .LBE74
     /tmp/ccBTqZWy.s:690    .text:0000000000000364 .LBB57
     /tmp/ccBTqZWy.s:725    .text:0000000000000390 .LBE57
GAS LISTING /tmp/ccBTqZWy.s 			page 55


     /tmp/ccBTqZWy.s:901    .text:0000000000000450 .LBB58
     /tmp/ccBTqZWy.s:914    .text:000000000000046c .LBE58
     /tmp/ccBTqZWy.s:740    .text:00000000000003a4 .LBB60
     /tmp/ccBTqZWy.s:868    .text:000000000000042c .LBE60
     /tmp/ccBTqZWy.s:887    .text:0000000000000440 .LBB73
     /tmp/ccBTqZWy.s:898    .text:0000000000000450 .LBE73
     /tmp/ccBTqZWy.s:930    .text:0000000000000478 .LBB75
     /tmp/ccBTqZWy.s:1108   .text:00000000000004e4 .LBE75
     /tmp/ccBTqZWy.s:1116   .text:00000000000004e8 .LBB84
     /tmp/ccBTqZWy.s:1236   .text:000000000000059c .LBE84

UNDEFINED SYMBOLS
_ZN5Riscv14supervisorTrapEv
_ZN3PCB10initializeEv
_ZN8KConsole10initializeEv
_ZN9Scheduler3getEv
_ZN3PCB10consolePCBE
_ZN9Scheduler3putEP3PCB
_ZN8KConsole11pendingGetcE
_ZN3PCB10isFinishedEv
_Z15thread_dispatchv
_ZN3PCB7userPCBE
_Z8userMainv
_Z7myTestsv
_ZN3PCB7runningE
_ZN3PCB10savedRegA4E
_ZN3PCB17threadExitHandlerEv
CONSOLE_STATUS
CONSOLE_TX_DATA
plic_claim
plic_complete
_ZN3PCB16timeSliceCounterE
_ZN12SleepPCBList13tryToWakePCBsEv
_ZN3PCB8dispatchEv
_ZN8KConsole17putCharacterInputEc
_ZN15MemoryAllocator15memAllocHandlerEv
_ZN15MemoryAllocator14memFreeHandlerEv
_ZN3PCB20threadMakePCBHandlerEv
_ZN3PCB19threadCreateHandlerEv
_ZN3PCB18threadStartHandlerEv
_ZN3PCB21threadDispatchHandlerEv
_ZN3PCB18threadSleepHandlerEv
_ZN3PCB19threadDelPCBHandlerEv
_ZN10KSemaphore14semOpenHandlerEv
_ZN10KSemaphore14semWaitHandlerEv
_ZN10KSemaphore16semSignalHandlerEv
_ZN10KSemaphore15semCloseHandlerEv
_ZN8KConsole11getcHandlerEv
_ZN8KConsole11putcHandlerEv
_ZN8KConsole14getCharHandlerEv
