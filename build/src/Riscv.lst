GAS LISTING /tmp/ccCtnlN9.s 			page 1


   1              		.file	"Riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10initSystemEv
   9              	_ZN5Riscv10initSystemEv:
  10              	.LFB19:
  11              		.file 1 "src/Riscv.cpp"
   1:src/Riscv.cpp **** //
   2:src/Riscv.cpp **** // Created by os on 4/27/22.
   3:src/Riscv.cpp **** //
   4:src/Riscv.cpp **** 
   5:src/Riscv.cpp **** #include "../h/Riscv.h"
   6:src/Riscv.cpp **** #include "../h/MemoryAllocator.h"
   7:src/Riscv.cpp **** #include "../h/PCB.h"
   8:src/Riscv.cpp **** #include "../lib/console.h"
   9:src/Riscv.cpp **** 
  10:src/Riscv.cpp **** //todo
  11:src/Riscv.cpp **** //sta sve treba da se odradi ovde
  12:src/Riscv.cpp **** void Riscv::initSystem() {
  12              		.loc 1 12 26
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  13:src/Riscv.cpp ****     w_stvec((uint64)&Riscv::supervisorTrap);
  20              		.loc 1 13 5
  21              		.loc 1 13 12 is_stmt 0
  22 000c 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
  22      83B70700 
  23              	.LVL0:
  24              	.LBB54:
  25              	.LBB55:
  26              		.file 2 "src/../h/Riscv.h"
   1:src/../h/Riscv.h **** //
   2:src/../h/Riscv.h **** // Created by os on 4/27/22.
   3:src/../h/Riscv.h **** //
   4:src/../h/Riscv.h **** 
   5:src/../h/Riscv.h **** #ifndef PROJECT_BASE_V1_0_RISCV_H
   6:src/../h/Riscv.h **** #define PROJECT_BASE_V1_0_RISCV_H
   7:src/../h/Riscv.h **** 
   8:src/../h/Riscv.h **** #include "../lib/hw.h"
   9:src/../h/Riscv.h **** 
  10:src/../h/Riscv.h **** class Riscv
  11:src/../h/Riscv.h **** {
  12:src/../h/Riscv.h **** private:
  13:src/../h/Riscv.h **** 
  14:src/../h/Riscv.h **** public:
  15:src/../h/Riscv.h ****     static void initSystem();
  16:src/../h/Riscv.h **** 
  17:src/../h/Riscv.h ****     static void enableInterrupts();
  18:src/../h/Riscv.h **** 
GAS LISTING /tmp/ccCtnlN9.s 			page 2


  19:src/../h/Riscv.h ****     static void disableInterrupts();
  20:src/../h/Riscv.h **** 
  21:src/../h/Riscv.h ****     static void printString(char const *string);
  22:src/../h/Riscv.h **** 
  23:src/../h/Riscv.h ****     static void printInteger(uint64 num);
  24:src/../h/Riscv.h **** 
  25:src/../h/Riscv.h ****     static void pushRegisters();
  26:src/../h/Riscv.h ****     static void popRegisters();
  27:src/../h/Riscv.h **** 
  28:src/../h/Riscv.h ****     static uint64 r_scause();
  29:src/../h/Riscv.h ****     static void w_scause(uint64 scause);
  30:src/../h/Riscv.h **** 
  31:src/../h/Riscv.h ****     static uint64 r_sepc();
  32:src/../h/Riscv.h ****     static void w_sepc(uint64 sepc);
  33:src/../h/Riscv.h **** 
  34:src/../h/Riscv.h ****     static uint64 r_stvec();
  35:src/../h/Riscv.h ****     static void w_stvec(uint64 stvec);
  36:src/../h/Riscv.h **** 
  37:src/../h/Riscv.h ****     static uint64 r_stval();
  38:src/../h/Riscv.h ****     static void w_stval(uint64 stval);
  39:src/../h/Riscv.h **** 
  40:src/../h/Riscv.h ****     enum BitMaskSip
  41:src/../h/Riscv.h ****     {
  42:src/../h/Riscv.h ****         SIP_SSIP = (1 << 1),
  43:src/../h/Riscv.h ****         SIP_STIP = (1 << 5),
  44:src/../h/Riscv.h ****         SIP_SEIP = (1 << 9),
  45:src/../h/Riscv.h ****     };
  46:src/../h/Riscv.h **** 
  47:src/../h/Riscv.h ****     static void ms_sip(uint64 mask);
  48:src/../h/Riscv.h **** 
  49:src/../h/Riscv.h ****     static void mc_sip(uint64 mask);
  50:src/../h/Riscv.h **** 
  51:src/../h/Riscv.h ****     static uint64 r_sip();
  52:src/../h/Riscv.h **** 
  53:src/../h/Riscv.h ****     static void w_sip(uint64 sip);
  54:src/../h/Riscv.h **** 
  55:src/../h/Riscv.h ****     enum BitMaskSstatus
  56:src/../h/Riscv.h ****     {
  57:src/../h/Riscv.h ****         SSTATUS_SIE = (1 << 1),
  58:src/../h/Riscv.h ****         SSTATUS_SPIE = (1 << 5),
  59:src/../h/Riscv.h ****         SSTATUS_SPP = (1 << 8),
  60:src/../h/Riscv.h ****     };
  61:src/../h/Riscv.h **** 
  62:src/../h/Riscv.h ****     static void ms_sstatus(uint64 mask);
  63:src/../h/Riscv.h **** 
  64:src/../h/Riscv.h ****     static void mc_sstatus(uint64 mask);
  65:src/../h/Riscv.h **** 
  66:src/../h/Riscv.h ****     static uint64 r_sstatus();
  67:src/../h/Riscv.h **** 
  68:src/../h/Riscv.h ****     static void w_sstatus(uint64 sstatus);
  69:src/../h/Riscv.h **** 
  70:src/../h/Riscv.h ****     static void popSppSpie();
  71:src/../h/Riscv.h **** 
  72:src/../h/Riscv.h ****     static void supervisorTrap();
  73:src/../h/Riscv.h ****     static void handleSupervisorTrap();
  74:src/../h/Riscv.h **** 
  75:src/../h/Riscv.h ****     static const uint64 bntOne = 1UL << 63;;
GAS LISTING /tmp/ccCtnlN9.s 			page 3


  76:src/../h/Riscv.h ****     static const uint64 bntZero = 0UL;
  77:src/../h/Riscv.h ****     static const uint64 timerInterrupt = bntOne + 1UL;
  78:src/../h/Riscv.h ****     static const uint64 hwInterrupt = bntOne + 9UL;
  79:src/../h/Riscv.h ****     static const uint64 operationInterrupt = bntZero + 2UL;
  80:src/../h/Riscv.h ****     static const uint64 addrReadInterrupt = bntZero + 5UL;
  81:src/../h/Riscv.h ****     static const uint64 addrWriteInterrupt = bntZero + 7UL;
  82:src/../h/Riscv.h ****     static const uint64 ecallUserInterrupt = bntZero + 8UL;
  83:src/../h/Riscv.h ****     static const uint64 ecallSystemInterupt = bntZero + 9UL;
  84:src/../h/Riscv.h **** };
  85:src/../h/Riscv.h **** 
  86:src/../h/Riscv.h **** inline uint64 Riscv::r_scause() {
  87:src/../h/Riscv.h ****     uint64 volatile scause;
  88:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
  89:src/../h/Riscv.h ****     return scause;
  90:src/../h/Riscv.h **** }
  91:src/../h/Riscv.h **** 
  92:src/../h/Riscv.h **** inline void Riscv::w_scause(uint64 scause) {
  93:src/../h/Riscv.h ****     __asm__ volatile("csrw scause, %0" : :"r"(scause));
  94:src/../h/Riscv.h **** }
  95:src/../h/Riscv.h **** 
  96:src/../h/Riscv.h **** inline uint64 Riscv::r_sepc() {
  97:src/../h/Riscv.h ****     uint64 volatile sepc;
  98:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
  99:src/../h/Riscv.h ****     return sepc;
 100:src/../h/Riscv.h **** }
 101:src/../h/Riscv.h **** 
 102:src/../h/Riscv.h **** inline void Riscv::w_sepc(uint64 sepc) {
 103:src/../h/Riscv.h ****     __asm__ volatile("csrw sepc, %0" : :"r"(sepc));
 104:src/../h/Riscv.h **** }
 105:src/../h/Riscv.h **** 
 106:src/../h/Riscv.h **** inline uint64 Riscv::r_stvec() {
 107:src/../h/Riscv.h ****     uint64 volatile stvec;
 108:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, stvec" : "=r"(stvec));
 109:src/../h/Riscv.h ****     return stvec;
 110:src/../h/Riscv.h **** }
 111:src/../h/Riscv.h **** 
 112:src/../h/Riscv.h **** inline void Riscv::w_stvec(uint64 stvec) {
 113:src/../h/Riscv.h ****     __asm__ volatile("csrw stvec, %0" : :"r"(stvec));
  27              		.loc 2 113 5 is_stmt 1
  28              		.loc 2 113 53 is_stmt 0
  29              	#APP
  30              	# 113 "src/../h/Riscv.h" 1
 114              	}
  31              		csrw stvec, a5
  32              	# 0 "" 2
  33              	.LVL1:
  34              	#NO_APP
  35              	.LBE55:
  36              	.LBE54:
  14:src/Riscv.cpp ****     //todo
  15:src/Riscv.cpp ****     //no need for comment, but sync context switch
  16:src/Riscv.cpp ****     //should be tested, before hardware interrupts are enabled
  17:src/Riscv.cpp ****     //Riscv::enableInterrupts();
  18:src/Riscv.cpp **** }
  37              		.loc 1 18 1
  38 0018 03348100 		ld	s0,8(sp)
  39              		.cfi_restore 8
GAS LISTING /tmp/ccCtnlN9.s 			page 4


  40              		.cfi_def_cfa 2, 16
  41 001c 13010101 		addi	sp,sp,16
  42              		.cfi_def_cfa_offset 0
  43 0020 67800000 		jr	ra
  44              		.cfi_endproc
  45              	.LFE19:
  47              		.align	2
  48              		.globl	_ZN5Riscv16enableInterruptsEv
  50              	_ZN5Riscv16enableInterruptsEv:
  51              	.LFB20:
  19:src/Riscv.cpp **** 
  20:src/Riscv.cpp **** void Riscv::enableInterrupts() {
  52              		.loc 1 20 32 is_stmt 1
  53              		.cfi_startproc
  54 0024 130101FF 		addi	sp,sp,-16
  55              		.cfi_def_cfa_offset 16
  56 0028 23348100 		sd	s0,8(sp)
  57              		.cfi_offset 8, -8
  58 002c 13040101 		addi	s0,sp,16
  59              		.cfi_def_cfa 8, 0
  21:src/Riscv.cpp ****     Riscv::ms_sstatus(Riscv::SSTATUS_SIE);
  60              		.loc 1 21 5
  61              	.LVL2:
  62              	.LBB56:
  63              	.LBB57:
 115:src/../h/Riscv.h **** 
 116:src/../h/Riscv.h **** inline uint64 Riscv::r_stval() {
 117:src/../h/Riscv.h ****     uint64 volatile stval;
 118:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, stval" : "=r"(stval));
 119:src/../h/Riscv.h ****     return stval;
 120:src/../h/Riscv.h **** }
 121:src/../h/Riscv.h **** 
 122:src/../h/Riscv.h **** inline void Riscv::w_stval(uint64 stval) {
 123:src/../h/Riscv.h ****     __asm__ volatile("csrw stval, %0" : :"r"(stval));
 124:src/../h/Riscv.h **** }
 125:src/../h/Riscv.h **** 
 126:src/../h/Riscv.h **** inline void Riscv::ms_sip(uint64 mask) {
 127:src/../h/Riscv.h ****     __asm__ volatile("csrs sip, %0" : :"r"(mask));
 128:src/../h/Riscv.h **** }
 129:src/../h/Riscv.h **** 
 130:src/../h/Riscv.h **** inline void Riscv::mc_sip(uint64 mask) {
 131:src/../h/Riscv.h ****     __asm__ volatile("csrc sip, %0" : :"r"(mask));
 132:src/../h/Riscv.h **** }
 133:src/../h/Riscv.h **** 
 134:src/../h/Riscv.h **** inline uint64 Riscv::r_sip() {
 135:src/../h/Riscv.h ****     uint64 volatile sip;
 136:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, sip" : "=r"(sip));
 137:src/../h/Riscv.h ****     return sip;
 138:src/../h/Riscv.h **** }
 139:src/../h/Riscv.h **** 
 140:src/../h/Riscv.h **** inline void Riscv::w_sip(uint64 sip) {
 141:src/../h/Riscv.h ****     __asm__ volatile("csrw sip, %0" : :"r"(sip));
 142:src/../h/Riscv.h **** }
 143:src/../h/Riscv.h **** 
 144:src/../h/Riscv.h **** inline void Riscv::ms_sstatus(uint64 mask) {
 145:src/../h/Riscv.h ****     __asm__ volatile("csrs sstatus, %0" : :"r"(mask));
  64              		.loc 2 145 5
GAS LISTING /tmp/ccCtnlN9.s 			page 5


  65              		.loc 2 145 54 is_stmt 0
  66 0030 93072000 		li	a5,2
  67              	#APP
  68              	# 145 "src/../h/Riscv.h" 1
 146              	}
  69              		csrs sstatus, a5
  70              	# 0 "" 2
  71              	.LVL3:
  72              	#NO_APP
  73              	.LBE57:
  74              	.LBE56:
  22:src/Riscv.cpp **** }
  75              		.loc 1 22 1
  76 0038 03348100 		ld	s0,8(sp)
  77              		.cfi_restore 8
  78              		.cfi_def_cfa 2, 16
  79 003c 13010101 		addi	sp,sp,16
  80              		.cfi_def_cfa_offset 0
  81 0040 67800000 		jr	ra
  82              		.cfi_endproc
  83              	.LFE20:
  85              		.align	2
  86              		.globl	_ZN5Riscv17disableInterruptsEv
  88              	_ZN5Riscv17disableInterruptsEv:
  89              	.LFB21:
  23:src/Riscv.cpp **** 
  24:src/Riscv.cpp **** void Riscv::disableInterrupts()
  25:src/Riscv.cpp **** {
  90              		.loc 1 25 1 is_stmt 1
  91              		.cfi_startproc
  92 0044 130101FF 		addi	sp,sp,-16
  93              		.cfi_def_cfa_offset 16
  94 0048 23348100 		sd	s0,8(sp)
  95              		.cfi_offset 8, -8
  96 004c 13040101 		addi	s0,sp,16
  97              		.cfi_def_cfa 8, 0
  26:src/Riscv.cpp ****     Riscv::mc_sstatus(Riscv::SSTATUS_SIE);
  98              		.loc 1 26 5
  99              	.LVL4:
 100              	.LBB58:
 101              	.LBB59:
 147:src/../h/Riscv.h **** 
 148:src/../h/Riscv.h **** inline void Riscv::mc_sstatus(uint64 mask) {
 149:src/../h/Riscv.h ****     __asm__ volatile("csrc sstatus, %0" : :"r"(mask));
 102              		.loc 2 149 5
 103              		.loc 2 149 54 is_stmt 0
 104 0050 93072000 		li	a5,2
 105              	#APP
 106              	# 149 "src/../h/Riscv.h" 1
 150              	}
 107              		csrc sstatus, a5
 108              	# 0 "" 2
 109              	.LVL5:
 110              	#NO_APP
 111              	.LBE59:
 112              	.LBE58:
  27:src/Riscv.cpp **** }
GAS LISTING /tmp/ccCtnlN9.s 			page 6


 113              		.loc 1 27 1
 114 0058 03348100 		ld	s0,8(sp)
 115              		.cfi_restore 8
 116              		.cfi_def_cfa 2, 16
 117 005c 13010101 		addi	sp,sp,16
 118              		.cfi_def_cfa_offset 0
 119 0060 67800000 		jr	ra
 120              		.cfi_endproc
 121              	.LFE21:
 123              		.align	2
 124              		.globl	_ZN5Riscv10popSppSpieEv
 126              	_ZN5Riscv10popSppSpieEv:
 127              	.LFB22:
  28:src/Riscv.cpp **** 
  29:src/Riscv.cpp **** void Riscv::popSppSpie() {
 128              		.loc 1 29 26 is_stmt 1
 129              		.cfi_startproc
 130 0064 130101FF 		addi	sp,sp,-16
 131              		.cfi_def_cfa_offset 16
 132 0068 23348100 		sd	s0,8(sp)
 133              		.cfi_offset 8, -8
 134 006c 13040101 		addi	s0,sp,16
 135              		.cfi_def_cfa 8, 0
  30:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
 136              		.loc 1 30 5
 137              		.loc 1 30 39 is_stmt 0
 138              	#APP
 139              	# 30 "src/Riscv.cpp" 1
  31              	    __asm__ volatile ("sret");
 140              		csrw sepc, ra
 141              	# 0 "" 2
 142              		.loc 1 31 5 is_stmt 1
 143              		.loc 1 31 30 is_stmt 0
 144              	# 31 "src/Riscv.cpp" 1
  32              	}
 145              		sret
 146              	# 0 "" 2
 147              		.loc 1 32 1
 148              	#NO_APP
 149 0078 03348100 		ld	s0,8(sp)
 150              		.cfi_restore 8
 151              		.cfi_def_cfa 2, 16
 152 007c 13010101 		addi	sp,sp,16
 153              		.cfi_def_cfa_offset 0
 154 0080 67800000 		jr	ra
 155              		.cfi_endproc
 156              	.LFE22:
 158              		.align	2
 159              		.globl	_ZN5Riscv11printStringEPKc
 161              	_ZN5Riscv11printStringEPKc:
 162              	.LFB23:
  33:src/Riscv.cpp **** 
  34:src/Riscv.cpp **** void Riscv::printString(const char *string)
  35:src/Riscv.cpp **** {
 163              		.loc 1 35 1 is_stmt 1
 164              		.cfi_startproc
 165              	.LVL6:
GAS LISTING /tmp/ccCtnlN9.s 			page 7


 166 0084 130101FD 		addi	sp,sp,-48
 167              		.cfi_def_cfa_offset 48
 168 0088 23341102 		sd	ra,40(sp)
 169 008c 23308102 		sd	s0,32(sp)
 170 0090 233C9100 		sd	s1,24(sp)
 171 0094 23382101 		sd	s2,16(sp)
 172              		.cfi_offset 1, -8
 173              		.cfi_offset 8, -16
 174              		.cfi_offset 9, -24
 175              		.cfi_offset 18, -32
 176 0098 13040103 		addi	s0,sp,48
 177              		.cfi_def_cfa 8, 0
 178 009c 93040500 		mv	s1,a0
  36:src/Riscv.cpp ****     uint64 sstatus = r_sstatus();
 179              		.loc 1 36 5
 180              	.LBB60:
 181              	.LBB61:
 151:src/../h/Riscv.h **** 
 152:src/../h/Riscv.h **** inline uint64 Riscv::r_sstatus() {
 153:src/../h/Riscv.h ****     uint64 volatile sstatus;
 182              		.loc 2 153 5
 154:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 183              		.loc 2 154 5
 184              		.loc 2 154 57 is_stmt 0
 185              	#APP
 186              	# 154 "src/../h/Riscv.h" 1
 155              	    return sstatus;
 187              		csrr a5, sstatus
 188              	# 0 "" 2
 189              	#NO_APP
 190 00a4 233CF4FC 		sd	a5,-40(s0)
 191              		.loc 2 155 5 is_stmt 1
 192              		.loc 2 155 12 is_stmt 0
 193 00a8 033984FD 		ld	s2,-40(s0)
 194              	.LVL7:
 195              	.LBE61:
 196              	.LBE60:
  37:src/Riscv.cpp ****     mc_sstatus(SSTATUS_SIE);
 197              		.loc 1 37 5 is_stmt 1
 198              	.LBB62:
 199              	.LBB63:
 149:src/../h/Riscv.h **** }
 200              		.loc 2 149 5
 149:src/../h/Riscv.h **** }
 201              		.loc 2 149 54 is_stmt 0
 202 00ac 93072000 		li	a5,2
 203              	#APP
 204              	# 149 "src/../h/Riscv.h" 1
 205              		csrc sstatus, a5
 206              	# 0 "" 2
 207              	.LVL8:
 208              	#NO_APP
 209              	.L11:
 210              	.LBE63:
 211              	.LBE62:
  38:src/Riscv.cpp ****     while (*string != '\0')
 212              		.loc 1 38 5 is_stmt 1
GAS LISTING /tmp/ccCtnlN9.s 			page 8


 213              		.loc 1 38 20
 214              		.loc 1 38 12 is_stmt 0
 215 00b4 03C50400 		lbu	a0,0(s1)
 216              		.loc 1 38 20
 217 00b8 630A0500 		beqz	a0,.L10
  39:src/Riscv.cpp ****     {
  40:src/Riscv.cpp ****         __putc(*string);
 218              		.loc 1 40 9 is_stmt 1
 219              		.loc 1 40 15 is_stmt 0
 220 00bc 97000000 		call	__putc@plt
 220      E7800000 
 221              	.LVL9:
  41:src/Riscv.cpp ****         string++;
 222              		.loc 1 41 9 is_stmt 1
 223              		.loc 1 41 15 is_stmt 0
 224 00c4 93841400 		addi	s1,s1,1
 225              	.LVL10:
  38:src/Riscv.cpp ****     while (*string != '\0')
 226              		.loc 1 38 5
 227 00c8 6FF0DFFE 		j	.L11
 228              	.L10:
  42:src/Riscv.cpp ****     }
  43:src/Riscv.cpp ****     ms_sstatus(sstatus & SSTATUS_SIE ? SSTATUS_SIE : 0);
 229              		.loc 1 43 5 is_stmt 1
 230              		.loc 1 43 38 is_stmt 0
 231 00cc 1B090900 		sext.w	s2,s2
 232              	.LVL11:
 233              		.loc 1 43 15
 234 00d0 13792900 		andi	s2,s2,2
 235 00d4 1B090900 		sext.w	s2,s2
 236              	.LVL12:
 237              	.LBB64:
 238              	.LBB65:
 145:src/../h/Riscv.h **** }
 239              		.loc 2 145 5 is_stmt 1
 145:src/../h/Riscv.h **** }
 240              		.loc 2 145 54 is_stmt 0
 241              	#APP
 242              	# 145 "src/../h/Riscv.h" 1
 243              		csrs sstatus, s2
 244              	# 0 "" 2
 245              	.LVL13:
 246              	#NO_APP
 247              	.LBE65:
 248              	.LBE64:
  44:src/Riscv.cpp **** }
 249              		.loc 1 44 1
 250 00dc 83308102 		ld	ra,40(sp)
 251              		.cfi_restore 1
 252 00e0 03340102 		ld	s0,32(sp)
 253              		.cfi_restore 8
 254              		.cfi_def_cfa 2, 48
 255 00e4 83348101 		ld	s1,24(sp)
 256              		.cfi_restore 9
 257              	.LVL14:
 258 00e8 03390101 		ld	s2,16(sp)
 259              		.cfi_restore 18
GAS LISTING /tmp/ccCtnlN9.s 			page 9


 260 00ec 13010103 		addi	sp,sp,48
 261              		.cfi_def_cfa_offset 0
 262 00f0 67800000 		jr	ra
 263              		.cfi_endproc
 264              	.LFE23:
 266              		.section	.rodata.str1.8,"aMS",@progbits,1
 267              		.align	3
 268              	.LC0:
 269 0000 0A00     		.string	"\n"
 270              		.text
 271              		.align	2
 272              		.globl	_ZN5Riscv12printIntegerEm
 274              	_ZN5Riscv12printIntegerEm:
 275              	.LFB24:
  45:src/Riscv.cpp **** 
  46:src/Riscv.cpp **** void Riscv::printInteger(uint64 num)
  47:src/Riscv.cpp **** {
 276              		.loc 1 47 1 is_stmt 1
 277              		.cfi_startproc
 278              	.LVL15:
 279 00f4 130101FC 		addi	sp,sp,-64
 280              		.cfi_def_cfa_offset 64
 281 00f8 233C1102 		sd	ra,56(sp)
 282 00fc 23388102 		sd	s0,48(sp)
 283 0100 23349102 		sd	s1,40(sp)
 284 0104 23302103 		sd	s2,32(sp)
 285              		.cfi_offset 1, -8
 286              		.cfi_offset 8, -16
 287              		.cfi_offset 9, -24
 288              		.cfi_offset 18, -32
 289 0108 13040104 		addi	s0,sp,64
 290              		.cfi_def_cfa 8, 0
  48:src/Riscv.cpp ****     uint64 sstatus = r_sstatus();
 291              		.loc 1 48 5
 292              	.LBB66:
 293              	.LBB67:
 153:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 294              		.loc 2 153 5
 154:src/../h/Riscv.h ****     return sstatus;
 295              		.loc 2 154 5
 154:src/../h/Riscv.h ****     return sstatus;
 296              		.loc 2 154 57 is_stmt 0
 297              	#APP
 298              	# 154 "src/../h/Riscv.h" 1
 299              		csrr a5, sstatus
 300              	# 0 "" 2
 301              	#NO_APP
 302 0110 2334F4FC 		sd	a5,-56(s0)
 303              		.loc 2 155 5 is_stmt 1
 304              		.loc 2 155 12 is_stmt 0
 305 0114 033984FC 		ld	s2,-56(s0)
 306              	.LVL16:
 307              	.LBE67:
 308              	.LBE66:
  49:src/Riscv.cpp ****     mc_sstatus(SSTATUS_SIE);
 309              		.loc 1 49 5 is_stmt 1
 310              	.LBB68:
GAS LISTING /tmp/ccCtnlN9.s 			page 10


 311              	.LBB69:
 149:src/../h/Riscv.h **** }
 312              		.loc 2 149 5
 149:src/../h/Riscv.h **** }
 313              		.loc 2 149 54 is_stmt 0
 314 0118 93072000 		li	a5,2
 315              	#APP
 316              	# 149 "src/../h/Riscv.h" 1
 317              		csrc sstatus, a5
 318              	# 0 "" 2
 319              	.LVL17:
 320              	#NO_APP
 321              	.LBE69:
 322              	.LBE68:
  50:src/Riscv.cpp ****     static char digits[] = "0123456789";
 323              		.loc 1 50 5 is_stmt 1
  51:src/Riscv.cpp ****     char buf[16];
 324              		.loc 1 51 5
  52:src/Riscv.cpp ****     int i, neg;
 325              		.loc 1 52 5
  53:src/Riscv.cpp ****     uint x;
 326              		.loc 1 53 5
  54:src/Riscv.cpp **** 
  55:src/Riscv.cpp ****     neg = 0;
 327              		.loc 1 55 5
  56:src/Riscv.cpp ****     if(num < 0)
 328              		.loc 1 56 5
  57:src/Riscv.cpp ****     {
  58:src/Riscv.cpp ****         neg = 1;
  59:src/Riscv.cpp ****         x = -num;
  60:src/Riscv.cpp ****     }
  61:src/Riscv.cpp ****     else
  62:src/Riscv.cpp ****         x = num;
 329              		.loc 1 62 9
 330              		.loc 1 62 11 is_stmt 0
 331 0120 1B050500 		sext.w	a0,a0
 332              	.LVL18:
  63:src/Riscv.cpp **** 
  64:src/Riscv.cpp ****     i = 0;
 333              		.loc 1 64 5 is_stmt 1
 334              		.loc 1 64 7 is_stmt 0
 335 0124 93040000 		li	s1,0
 336              	.LVL19:
 337              	.L14:
  65:src/Riscv.cpp ****     do
 338              		.loc 1 65 5 is_stmt 1
  66:src/Riscv.cpp ****     {
  67:src/Riscv.cpp ****         buf[i++] = digits[x%10];
 339              		.loc 1 67 9
 340              		.loc 1 67 28 is_stmt 0
 341 0128 1306A000 		li	a2,10
 342 012c 3B77C502 		remuw	a4,a0,a2
 343              	.LVL20:
 344              		.loc 1 67 31
 345 0130 93160702 		slli	a3,a4,32
 346 0134 93D60602 		srli	a3,a3,32
 347 0138 17070000 		lla	a4,.LANCHOR0
GAS LISTING /tmp/ccCtnlN9.s 			page 11


 347      13070700 
 348 0140 3307D700 		add	a4,a4,a3
 349 0144 03470700 		lbu	a4,0(a4)
 350              		.loc 1 67 18
 351 0148 930604FE 		addi	a3,s0,-32
 352 014c B3879600 		add	a5,a3,s1
 353 0150 9B841400 		addiw	s1,s1,1
 354              	.LVL21:
 355 0154 2388E7FE 		sb	a4,-16(a5)
  68:src/Riscv.cpp ****     }while((x/=10) != 0);
 356              		.loc 1 68 20 is_stmt 1
 357 0158 1B070500 		sext.w	a4,a0
 358              		.loc 1 68 14 is_stmt 0
 359 015c 3B55C502 		divuw	a0,a0,a2
 360              	.LVL22:
 361              		.loc 1 68 20
 362 0160 93079000 		li	a5,9
 363 0164 E3E2E7FC 		bgtu	a4,a5,.L14
 364              	.LVL23:
 365              	.L16:
  69:src/Riscv.cpp ****     if(neg)
  70:src/Riscv.cpp ****         buf[i++] = '-';
  71:src/Riscv.cpp **** 
  72:src/Riscv.cpp ****     while(--i >= 0)
 366              		.loc 1 72 5 is_stmt 1
 367              		.loc 1 72 15
 368 0168 9B84F4FF 		addiw	s1,s1,-1
 369              	.LVL24:
 370 016c 63CE0400 		bltz	s1,.L15
  73:src/Riscv.cpp ****         __putc(buf[i]);
 371              		.loc 1 73 9
 372              		.loc 1 73 15 is_stmt 0
 373 0170 930704FE 		addi	a5,s0,-32
 374 0174 B3879700 		add	a5,a5,s1
 375 0178 03C507FF 		lbu	a0,-16(a5)
 376 017c 97000000 		call	__putc@plt
 376      E7800000 
 377              	.LVL25:
 378 0184 6FF05FFE 		j	.L16
 379              	.L15:
  74:src/Riscv.cpp **** 
  75:src/Riscv.cpp ****     Riscv::printString("\n");
 380              		.loc 1 75 5 is_stmt 1
 381              		.loc 1 75 23 is_stmt 0
 382 0188 17050000 		lla	a0,.LC0
 382      13050500 
 383 0190 97000000 		call	_ZN5Riscv11printStringEPKc
 383      E7800000 
 384              	.LVL26:
  76:src/Riscv.cpp **** 
  77:src/Riscv.cpp ****     ms_sstatus(sstatus & SSTATUS_SIE ? SSTATUS_SIE : 0);
 385              		.loc 1 77 5 is_stmt 1
 386              		.loc 1 77 38 is_stmt 0
 387 0198 1B090900 		sext.w	s2,s2
 388              	.LVL27:
 389              		.loc 1 77 15
 390 019c 13792900 		andi	s2,s2,2
GAS LISTING /tmp/ccCtnlN9.s 			page 12


 391 01a0 1B090900 		sext.w	s2,s2
 392              	.LVL28:
 393              	.LBB70:
 394              	.LBB71:
 145:src/../h/Riscv.h **** }
 395              		.loc 2 145 5 is_stmt 1
 145:src/../h/Riscv.h **** }
 396              		.loc 2 145 54 is_stmt 0
 397              	#APP
 398              	# 145 "src/../h/Riscv.h" 1
 399              		csrs sstatus, s2
 400              	# 0 "" 2
 401              	.LVL29:
 402              	#NO_APP
 403              	.LBE71:
 404              	.LBE70:
  78:src/Riscv.cpp **** }
 405              		.loc 1 78 1
 406 01a8 83308103 		ld	ra,56(sp)
 407              		.cfi_restore 1
 408 01ac 03340103 		ld	s0,48(sp)
 409              		.cfi_restore 8
 410              		.cfi_def_cfa 2, 64
 411 01b0 83348102 		ld	s1,40(sp)
 412              		.cfi_restore 9
 413 01b4 03390102 		ld	s2,32(sp)
 414              		.cfi_restore 18
 415 01b8 13010104 		addi	sp,sp,64
 416              		.cfi_def_cfa_offset 0
 417 01bc 67800000 		jr	ra
 418              		.cfi_endproc
 419              	.LFE24:
 421              		.align	2
 422              		.globl	_ZN5Riscv20handleSupervisorTrapEv
 424              	_ZN5Riscv20handleSupervisorTrapEv:
 425              	.LFB25:
  79:src/Riscv.cpp **** 
  80:src/Riscv.cpp **** void Riscv::handleSupervisorTrap() {
 426              		.loc 1 80 36 is_stmt 1
 427              		.cfi_startproc
 428              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 429              		.cfi_lsda 0x1b,.LLSDA25
 430 01c0 130101F9 		addi	sp,sp,-112
 431              		.cfi_def_cfa_offset 112
 432 01c4 23341106 		sd	ra,104(sp)
 433 01c8 23308106 		sd	s0,96(sp)
 434 01cc 233C9104 		sd	s1,88(sp)
 435 01d0 23382105 		sd	s2,80(sp)
 436 01d4 23343105 		sd	s3,72(sp)
 437 01d8 23304105 		sd	s4,64(sp)
 438 01dc 233C5103 		sd	s5,56(sp)
 439 01e0 23386103 		sd	s6,48(sp)
 440              		.cfi_offset 1, -8
 441              		.cfi_offset 8, -16
 442              		.cfi_offset 9, -24
 443              		.cfi_offset 18, -32
 444              		.cfi_offset 19, -40
GAS LISTING /tmp/ccCtnlN9.s 			page 13


 445              		.cfi_offset 20, -48
 446              		.cfi_offset 21, -56
 447              		.cfi_offset 22, -64
 448 01e4 13040107 		addi	s0,sp,112
 449              		.cfi_def_cfa 8, 0
  81:src/Riscv.cpp **** 
  82:src/Riscv.cpp ****     uint64 a4;
 450              		.loc 1 82 5
  83:src/Riscv.cpp ****     __asm__ volatile("mv %0, a4" : "=r"(a4));
 451              		.loc 1 83 5
 452              		.loc 1 83 45 is_stmt 0
 453              	#APP
 454              	# 83 "src/Riscv.cpp" 1
  84              	
 455              		mv s2, a4
 456              	# 0 "" 2
 457              	.LVL30:
  85:src/Riscv.cpp ****     uint64 scause = Riscv::r_scause();
 458              		.loc 1 85 5 is_stmt 1
 459              	#NO_APP
 460              	.LBB72:
 461              	.LBB73:
  87:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
 462              		.loc 2 87 5
  88:src/../h/Riscv.h ****     return scause;
 463              		.loc 2 88 5
  88:src/../h/Riscv.h ****     return scause;
 464              		.loc 2 88 55 is_stmt 0
 465              	#APP
 466              	# 88 "src/../h/Riscv.h" 1
 467              		csrr a5, scause
 468              	# 0 "" 2
 469              	#NO_APP
 470 01f0 233CF4F8 		sd	a5,-104(s0)
  89:src/../h/Riscv.h **** }
 471              		.loc 2 89 5 is_stmt 1
  89:src/../h/Riscv.h **** }
 472              		.loc 2 89 12 is_stmt 0
 473 01f4 033784F9 		ld	a4,-104(s0)
 474              	.LVL31:
 475              	.LBE73:
 476              	.LBE72:
  86:src/Riscv.cpp ****     switch(scause) {
 477              		.loc 1 86 5 is_stmt 1
 478              	.LBB74:
 479 01f8 93079000 		li	a5,9
 480 01fc 6302F708 		beq	a4,a5,.L19
 481 0200 9307F0FF 		li	a5,-1
 482 0204 9397F703 		slli	a5,a5,63
 483 0208 93871700 		addi	a5,a5,1
 484 020c 6316F70A 		bne	a4,a5,.L18
 485              	.LBB75:
  87:src/Riscv.cpp **** 
  88:src/Riscv.cpp ****         case timerInterrupt:
 486              		.loc 1 88 9
  89:src/Riscv.cpp **** 
  90:src/Riscv.cpp ****             //Riscv::printString("timerInterrupt\n");
GAS LISTING /tmp/ccCtnlN9.s 			page 14


  91:src/Riscv.cpp ****             PCB::timeSliceCounter++;
 487              		.loc 1 91 13
 488              		.loc 1 91 34 is_stmt 0
 489 0210 17070000 		la	a4,_ZN3PCB16timeSliceCounterE
 489      03370700 
 490              	.LVL32:
 491 0218 83370700 		ld	a5,0(a4)
 492 021c 93871700 		addi	a5,a5,1
 493 0220 2330F700 		sd	a5,0(a4)
  92:src/Riscv.cpp ****             if(PCB::running == 0)
 494              		.loc 1 92 13 is_stmt 1
 495              		.loc 1 92 29 is_stmt 0
 496 0224 17070000 		la	a4,_ZN3PCB7runningE
 496      03370700 
 497 022c 03370700 		ld	a4,0(a4)
 498              		.loc 1 92 13
 499 0230 63040708 		beqz	a4,.L18
  93:src/Riscv.cpp ****                 break;
  94:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice()) {
 500              		.loc 1 94 13 is_stmt 1
 501              	.LVL33:
 502              	.LBB76:
 503              	.LBB77:
 504              	.LBB78:
 505              		.file 3 "src/../h/PCB.h"
   1:src/../h/PCB.h **** //
   2:src/../h/PCB.h **** // Created by os on 4/27/22.
   3:src/../h/PCB.h **** //
   4:src/../h/PCB.h **** 
   5:src/../h/PCB.h **** #ifndef PROJECT_BASE_V1_0_PCB_H
   6:src/../h/PCB.h **** #define PROJECT_BASE_V1_0_PCB_H
   7:src/../h/PCB.h **** 
   8:src/../h/PCB.h **** #include "../lib/hw.h"
   9:src/../h/PCB.h **** #include "Scheduler.h"
  10:src/../h/PCB.h **** #include "Riscv.h"
  11:src/../h/PCB.h **** 
  12:src/../h/PCB.h **** class PCB
  13:src/../h/PCB.h **** {
  14:src/../h/PCB.h **** public:
  15:src/../h/PCB.h ****     using Body = void (*)(void*);
  16:src/../h/PCB.h **** 
  17:src/../h/PCB.h ****     PCB(Body body,  void* args, void* stack_space, uint64 timeSlice);
  18:src/../h/PCB.h **** 
  19:src/../h/PCB.h ****     void start();
  20:src/../h/PCB.h ****     static void dispatch();
  21:src/../h/PCB.h ****     static void sleep(time_t);
  22:src/../h/PCB.h **** 
  23:src/../h/PCB.h ****     static PCB* running;
  24:src/../h/PCB.h **** 
  25:src/../h/PCB.h ****     static const uint64 THREAD_CREATE = 0x11;
  26:src/../h/PCB.h **** 
  27:src/../h/PCB.h ****     static const uint64 THREAD_EXIT = 0x12;
  28:src/../h/PCB.h ****     static const uint64 THREAD_DISPATCH = 0x13;
  29:src/../h/PCB.h **** 
  30:src/../h/PCB.h ****     static uint64 timeSliceCounter;
  31:src/../h/PCB.h **** 
  32:src/../h/PCB.h ****     uint64 getTimeSlice() { return timeSlice;}
GAS LISTING /tmp/ccCtnlN9.s 			page 15


 506              		.loc 3 32 29
 507              		.loc 3 32 36 is_stmt 0
 508 0234 03370700 		ld	a4,0(a4)
 509              	.LVL34:
 510              	.LBE78:
 511              	.LBE77:
 512              		.loc 1 94 13
 513 0238 63F8E700 		bgeu	a5,a4,.L30
 514              	.LVL35:
 515              	.L21:
 516              	.LBE76:
  95:src/Riscv.cpp ****                 uint64 sepc = Riscv::r_sepc();
  96:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
  97:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
  98:src/Riscv.cpp ****                 PCB::dispatch();
  99:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 100:src/Riscv.cpp ****                 Riscv::w_sepc(sepc);
 101:src/Riscv.cpp ****             }
 102:src/Riscv.cpp ****             Riscv::mc_sip(Riscv::SIP_SSIP);
 517              		.loc 1 102 13 is_stmt 1
 518              	.LBB88:
 519              	.LBB89:
 131:src/../h/Riscv.h **** }
 520              		.loc 2 131 5
 131:src/../h/Riscv.h **** }
 521              		.loc 2 131 50 is_stmt 0
 522 023c 93072000 		li	a5,2
 523              	#APP
 524              	# 131 "src/../h/Riscv.h" 1
 132:src/../h/Riscv.h **** 
 525              		csrc sip, a5
 526              	# 0 "" 2
 527              		.loc 2 132 1
 528              	#NO_APP
 529 0244 6F004007 		j	.L18
 530              	.LVL36:
 531              	.L30:
 532              	.LBE89:
 533              	.LBE88:
 534              	.LBB90:
 535              	.LBB79:
  95:src/Riscv.cpp ****                 uint64 sepc = Riscv::r_sepc();
 536              		.loc 1 95 17 is_stmt 1
 537              	.LBB80:
 538              	.LBB81:
  97:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 539              		.loc 2 97 5
  98:src/../h/Riscv.h ****     return sepc;
 540              		.loc 2 98 5
  98:src/../h/Riscv.h ****     return sepc;
 541              		.loc 2 98 51 is_stmt 0
 542              	#APP
 543              	# 98 "src/../h/Riscv.h" 1
 544              		csrr a5, sepc
 545              	# 0 "" 2
 546              	#NO_APP
 547 024c 2334F4FA 		sd	a5,-88(s0)
GAS LISTING /tmp/ccCtnlN9.s 			page 16


  99:src/../h/Riscv.h **** }
 548              		.loc 2 99 5 is_stmt 1
  99:src/../h/Riscv.h **** }
 549              		.loc 2 99 12 is_stmt 0
 550 0250 833484FA 		ld	s1,-88(s0)
 551              	.LVL37:
 552              	.LBE81:
 553              	.LBE80:
  96:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 554              		.loc 1 96 17 is_stmt 1
 555              	.LBB82:
 556              	.LBB83:
 153:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 557              		.loc 2 153 5
 154:src/../h/Riscv.h ****     return sstatus;
 558              		.loc 2 154 5
 154:src/../h/Riscv.h ****     return sstatus;
 559              		.loc 2 154 57 is_stmt 0
 560              	#APP
 561              	# 154 "src/../h/Riscv.h" 1
 562              		csrr a5, sstatus
 563              	# 0 "" 2
 564              	#NO_APP
 565 0258 2330F4FA 		sd	a5,-96(s0)
 566              		.loc 2 155 5 is_stmt 1
 567              		.loc 2 155 12 is_stmt 0
 568 025c 033904FA 		ld	s2,-96(s0)
 569              	.LVL38:
 570              	.LBE83:
 571              	.LBE82:
  97:src/Riscv.cpp ****                 PCB::dispatch();
 572              		.loc 1 97 17 is_stmt 1
  97:src/Riscv.cpp ****                 PCB::dispatch();
 573              		.loc 1 97 39 is_stmt 0
 574 0260 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 574      83B70700 
 575 0268 23B00700 		sd	zero,0(a5)
  98:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 576              		.loc 1 98 17 is_stmt 1
 577              	.LEHB0:
  98:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 578              		.loc 1 98 30 is_stmt 0
 579 026c 97000000 		call	_ZN3PCB8dispatchEv@plt
 579      E7800000 
 580              	.LVL39:
  99:src/Riscv.cpp ****                 Riscv::w_sepc(sepc);
 581              		.loc 1 99 17 is_stmt 1
 582              	.LBB84:
 583              	.LBB85:
 156:src/../h/Riscv.h **** }
 157:src/../h/Riscv.h **** 
 158:src/../h/Riscv.h **** inline void Riscv::w_sstatus(uint64 sstatus) {
 159:src/../h/Riscv.h ****     __asm__ volatile("csrw sstatus, %0" : :"r"(sstatus));
 584              		.loc 2 159 5
 585              		.loc 2 159 57 is_stmt 0
 586              	#APP
 587              	# 159 "src/../h/Riscv.h" 1
GAS LISTING /tmp/ccCtnlN9.s 			page 17


 160              	}
 588              		csrw sstatus, s2
 589              	# 0 "" 2
 590              	.LVL40:
 591              	#NO_APP
 592              	.LBE85:
 593              	.LBE84:
 100:src/Riscv.cpp ****             }
 594              		.loc 1 100 17 is_stmt 1
 595              	.LBB86:
 596              	.LBB87:
 103:src/../h/Riscv.h **** }
 597              		.loc 2 103 5
 103:src/../h/Riscv.h **** }
 598              		.loc 2 103 51 is_stmt 0
 599              	#APP
 600              	# 103 "src/../h/Riscv.h" 1
 104:src/../h/Riscv.h **** 
 601              		csrw sepc, s1
 602              	# 0 "" 2
 603              		.loc 2 104 1
 604              	#NO_APP
 605 027c 6FF01FFC 		j	.L21
 606              	.LVL41:
 607              	.L19:
 608              	.LBE87:
 609              	.LBE86:
 610              	.LBE79:
 611              	.LBE90:
 103:src/Riscv.cpp **** 
 104:src/Riscv.cpp ****             break;
 105:src/Riscv.cpp **** 
 106:src/Riscv.cpp ****         case hwInterrupt: // todo
 107:src/Riscv.cpp **** 
 108:src/Riscv.cpp ****             break;
 109:src/Riscv.cpp **** 
 110:src/Riscv.cpp ****         case operationInterrupt: // todo
 111:src/Riscv.cpp ****             break;
 112:src/Riscv.cpp **** 
 113:src/Riscv.cpp ****         case addrReadInterrupt: // todo
 114:src/Riscv.cpp ****             break;
 115:src/Riscv.cpp **** 
 116:src/Riscv.cpp ****         case addrWriteInterrupt: // todo
 117:src/Riscv.cpp ****             break;
 118:src/Riscv.cpp **** 
 119:src/Riscv.cpp ****         case ecallUserInterrupt: // todo
 120:src/Riscv.cpp ****             break;
 121:src/Riscv.cpp **** 
 122:src/Riscv.cpp ****         case ecallSystemInterupt:
 612              		.loc 1 122 9 is_stmt 1
 123:src/Riscv.cpp **** 
 124:src/Riscv.cpp ****             uint64 operation;
 613              		.loc 1 124 13
 125:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
 614              		.loc 1 125 13
 615              		.loc 1 125 61 is_stmt 0
 616              	#APP
GAS LISTING /tmp/ccCtnlN9.s 			page 18


 617              	# 125 "src/Riscv.cpp" 1
 126              	
 618              		mv a5, a0
 619              	# 0 "" 2
 620              	.LVL42:
 127:src/Riscv.cpp ****             uint64 sepc = Riscv::r_sepc();
 621              		.loc 1 127 13 is_stmt 1
 622              	#NO_APP
 623              	.LBB91:
 624              	.LBB92:
  97:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 625              		.loc 2 97 5
  98:src/../h/Riscv.h ****     return sepc;
 626              		.loc 2 98 5
  98:src/../h/Riscv.h ****     return sepc;
 627              		.loc 2 98 51 is_stmt 0
 628              	#APP
 629              	# 98 "src/../h/Riscv.h" 1
 630              		csrr a4, sepc
 631              	# 0 "" 2
 632              	.LVL43:
 633              	#NO_APP
 634 0288 2338E4FA 		sd	a4,-80(s0)
  99:src/../h/Riscv.h **** }
 635              		.loc 2 99 5 is_stmt 1
  99:src/../h/Riscv.h **** }
 636              		.loc 2 99 12 is_stmt 0
 637 028c 833404FB 		ld	s1,-80(s0)
 638              	.LVL44:
 639              	.LBE92:
 640              	.LBE91:
 128:src/Riscv.cpp ****             sepc+=4;
 641              		.loc 1 128 13 is_stmt 1
 642              		.loc 1 128 17 is_stmt 0
 643 0290 93844400 		addi	s1,s1,4
 644              	.LVL45:
 129:src/Riscv.cpp **** 
 130:src/Riscv.cpp ****             if(operation == MemoryAllocator::MEM_ALLOC) {
 645              		.loc 1 130 13 is_stmt 1
 646              	.LBB93:
 647 0294 13071000 		li	a4,1
 648 0298 6384E704 		beq	a5,a4,.L31
 649              	.LBE93:
 650              	.LBE75:
 651              	.LBE74:
 131:src/Riscv.cpp ****                 size_t size;
 132:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(size));
 133:src/Riscv.cpp ****                 size*=MEM_BLOCK_SIZE;
 134:src/Riscv.cpp ****                 void* allocatedAddr = kmalloc(size);
 135:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : : "r"((uint64)allocatedAddr));
 136:src/Riscv.cpp ****             }
 137:src/Riscv.cpp ****             else if(operation == MemoryAllocator::MEM_FREE) {
 652              		.loc 1 137 18
 653              	.LBB122:
 654              	.LBB118:
 655              	.LBB112:
 656              	.LBB94:
GAS LISTING /tmp/ccCtnlN9.s 			page 19


 657 029c 13072000 		li	a4,2
 658 02a0 638CE704 		beq	a5,a4,.L32
 659              	.LBE94:
 660              	.LBE112:
 661              	.LBE118:
 662              	.LBE122:
 138:src/Riscv.cpp ****                 uint64 addr = 0;
 139:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(addr));
 140:src/Riscv.cpp ****                 //uint64 retval = kfree((void*)addr);
 141:src/Riscv.cpp ****                 //todo
 142:src/Riscv.cpp ****                 //only for testing
 143:src/Riscv.cpp ****                 uint64 retval = 0;
 144:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 145:src/Riscv.cpp ****             }
 146:src/Riscv.cpp ****             else if(operation == PCB::THREAD_CREATE)
 663              		.loc 1 146 18
 664              	.LBB123:
 665              	.LBB119:
 666              	.LBB113:
 667              	.LBB108:
 668              	.LBB95:
 669 02a4 13071001 		li	a4,17
 670 02a8 6380E706 		beq	a5,a4,.L33
 671              	.LBE95:
 672              	.LBE108:
 673              	.LBE113:
 674              	.LBE119:
 675              	.LBE123:
 147:src/Riscv.cpp ****             {
 148:src/Riscv.cpp ****                 //todo
 149:src/Riscv.cpp ****                 //thread create
 150:src/Riscv.cpp ****                 uint64 start_routine;
 151:src/Riscv.cpp ****                 uint64 args;
 152:src/Riscv.cpp ****                 //uint64 stack_space;
 153:src/Riscv.cpp ****                 PCB** threadHandle;
 154:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(threadHandle));
 155:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(start_routine));
 156:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a3" : "=r"(args));
 157:src/Riscv.cpp ****                 //__asm__ volatile("mv %0, a4" : "=r"(stack_space));
 158:src/Riscv.cpp ****                 //todo
 159:src/Riscv.cpp ****                 //da li treba ovako ili tipa da se ne koristi new
 160:src/Riscv.cpp ****                 //nego direktno kmalloc - ali onda kako konstruktor
 161:src/Riscv.cpp ****                 //sta se desava ako preklopljeni new vrati 0
 162:src/Riscv.cpp ****                 PCB* newPCB = new PCB((void (*)(void*))start_routine, (void*)args, (void*)a4, 2UL);
 163:src/Riscv.cpp **** 
 164:src/Riscv.cpp ****                 (*threadHandle) = newPCB;
 165:src/Riscv.cpp **** 
 166:src/Riscv.cpp ****                 if(newPCB == 0)
 167:src/Riscv.cpp ****                 {
 168:src/Riscv.cpp ****                     __asm__ volatile("li a0, 0xffffffffffffffff");
 169:src/Riscv.cpp ****                     //__asm__ volatile("mv a1, %0" : :"r"((uint64)newPCB));
 170:src/Riscv.cpp ****                 }
 171:src/Riscv.cpp ****                 else
 172:src/Riscv.cpp ****                 {
 173:src/Riscv.cpp ****                     __asm__ volatile("li a0, 0");
 174:src/Riscv.cpp ****                     //__asm__ volatile("mv a1, %0" : :"r"((uint64)newPCB));
 175:src/Riscv.cpp ****                 }
GAS LISTING /tmp/ccCtnlN9.s 			page 20


 176:src/Riscv.cpp **** 
 177:src/Riscv.cpp ****             }
 178:src/Riscv.cpp ****             else if(operation == PCB::THREAD_DISPATCH)
 676              		.loc 1 178 18
 677              	.LBB124:
 678              	.LBB120:
 679              	.LBB114:
 680              	.LBB109:
 681              	.LBB105:
 682              	.LBB96:
 683 02ac 13073001 		li	a4,19
 684 02b0 6382E70A 		beq	a5,a4,.L34
 685              	.LVL46:
 686              	.L23:
 687              	.LBE96:
 688              	.LBE105:
 689              	.LBE109:
 690              	.LBE114:
 179:src/Riscv.cpp ****             {
 180:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 181:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 182:src/Riscv.cpp ****                 PCB::dispatch();
 183:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 184:src/Riscv.cpp ****             }
 185:src/Riscv.cpp **** 
 186:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 691              		.loc 1 186 13
 692              	.LBB115:
 693              	.LBB116:
 103:src/../h/Riscv.h **** }
 694              		.loc 2 103 5
 103:src/../h/Riscv.h **** }
 695              		.loc 2 103 51 is_stmt 0
 696              	#APP
 697              	# 103 "src/../h/Riscv.h" 1
 698              		csrw sepc, s1
 699              	# 0 "" 2
 700              	.LVL47:
 701              	#NO_APP
 702              	.L18:
 703              	.LBE116:
 704              	.LBE115:
 705              	.LBE120:
 706              	.LBE124:
 187:src/Riscv.cpp **** 
 188:src/Riscv.cpp ****             break;
 189:src/Riscv.cpp ****     }
 190:src/Riscv.cpp **** 
 191:src/Riscv.cpp ****     //console_handler();
 192:src/Riscv.cpp **** }
 707              		.loc 1 192 1
 708 02b8 83308106 		ld	ra,104(sp)
 709              		.cfi_remember_state
 710              		.cfi_restore 1
 711 02bc 03340106 		ld	s0,96(sp)
 712              		.cfi_restore 8
 713              		.cfi_def_cfa 2, 112
GAS LISTING /tmp/ccCtnlN9.s 			page 21


 714 02c0 83348105 		ld	s1,88(sp)
 715              		.cfi_restore 9
 716 02c4 03390105 		ld	s2,80(sp)
 717              		.cfi_restore 18
 718 02c8 83398104 		ld	s3,72(sp)
 719              		.cfi_restore 19
 720 02cc 033A0104 		ld	s4,64(sp)
 721              		.cfi_restore 20
 722 02d0 833A8103 		ld	s5,56(sp)
 723              		.cfi_restore 21
 724 02d4 033B0103 		ld	s6,48(sp)
 725              		.cfi_restore 22
 726 02d8 13010107 		addi	sp,sp,112
 727              		.cfi_def_cfa_offset 0
 728 02dc 67800000 		jr	ra
 729              	.LVL48:
 730              	.L31:
 731              		.cfi_restore_state
 732              	.LBB125:
 733              	.LBB121:
 734              	.LBB117:
 735              	.LBB110:
 131:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(size));
 736              		.loc 1 131 17 is_stmt 1
 132:src/Riscv.cpp ****                 size*=MEM_BLOCK_SIZE;
 737              		.loc 1 132 17
 132:src/Riscv.cpp ****                 size*=MEM_BLOCK_SIZE;
 738              		.loc 1 132 59 is_stmt 0
 739              	#APP
 740              	# 132 "src/Riscv.cpp" 1
 741              		mv a0, a1
 742              	# 0 "" 2
 743              	.LVL49:
 133:src/Riscv.cpp ****                 void* allocatedAddr = kmalloc(size);
 744              		.loc 1 133 17 is_stmt 1
 134:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : : "r"((uint64)allocatedAddr));
 745              		.loc 1 134 17
 134:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : : "r"((uint64)allocatedAddr));
 746              		.loc 1 134 46 is_stmt 0
 747              	#NO_APP
 748 02e4 13156500 		slli	a0,a0,6
 749              	.LVL50:
 750 02e8 97000000 		call	_Z7kmallocm@plt
 750      E7800000 
 751              	.LVL51:
 135:src/Riscv.cpp ****             }
 752              		.loc 1 135 17 is_stmt 1
 135:src/Riscv.cpp ****             }
 753              		.loc 1 135 76 is_stmt 0
 754              	#APP
 755              	# 135 "src/Riscv.cpp" 1
 756              		mv a0,a0
 757              	# 0 "" 2
 758              	#NO_APP
 759              	.LBE110:
 760 02f4 6FF01FFC 		j	.L23
 761              	.LVL52:
GAS LISTING /tmp/ccCtnlN9.s 			page 22


 762              	.L32:
 763              	.LBB111:
 764              	.LBB106:
 138:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(addr));
 765              		.loc 1 138 17 is_stmt 1
 139:src/Riscv.cpp ****                 //uint64 retval = kfree((void*)addr);
 766              		.loc 1 139 17
 139:src/Riscv.cpp ****                 //uint64 retval = kfree((void*)addr);
 767              		.loc 1 139 59 is_stmt 0
 768              	#APP
 769              	# 139 "src/Riscv.cpp" 1
 770              		mv a5, a1
 771              	# 0 "" 2
 772              	.LVL53:
 143:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 773              		.loc 1 143 17 is_stmt 1
 144:src/Riscv.cpp ****             }
 774              		.loc 1 144 17
 144:src/Riscv.cpp ****             }
 775              		.loc 1 144 60 is_stmt 0
 776              	#NO_APP
 777 02fc 93070000 		li	a5,0
 778              	#APP
 779              	# 144 "src/Riscv.cpp" 1
 780              		mv a0,a5
 781              	# 0 "" 2
 782              	#NO_APP
 783              	.LBE106:
 784 0304 6FF01FFB 		j	.L23
 785              	.LVL54:
 786              	.L33:
 787              	.LBB107:
 788              	.LBB102:
 150:src/Riscv.cpp ****                 uint64 args;
 789              		.loc 1 150 17 is_stmt 1
 151:src/Riscv.cpp ****                 //uint64 stack_space;
 790              		.loc 1 151 17
 153:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(threadHandle));
 791              		.loc 1 153 17
 154:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(start_routine));
 792              		.loc 1 154 17
 154:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(start_routine));
 793              		.loc 1 154 67 is_stmt 0
 794              	#APP
 795              	# 154 "src/Riscv.cpp" 1
 796              		mv s4, a1
 797              	# 0 "" 2
 798              	.LVL55:
 155:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a3" : "=r"(args));
 799              		.loc 1 155 17 is_stmt 1
 155:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a3" : "=r"(args));
 800              		.loc 1 155 68 is_stmt 0
 801              	# 155 "src/Riscv.cpp" 1
 802              		mv s5, a2
 803              	# 0 "" 2
 804              	.LVL56:
 156:src/Riscv.cpp ****                 //__asm__ volatile("mv %0, a4" : "=r"(stack_space));
GAS LISTING /tmp/ccCtnlN9.s 			page 23


 805              		.loc 1 156 17 is_stmt 1
 156:src/Riscv.cpp ****                 //__asm__ volatile("mv %0, a4" : "=r"(stack_space));
 806              		.loc 1 156 59 is_stmt 0
 807              	# 156 "src/Riscv.cpp" 1
 808              		mv s6, a3
 809              	# 0 "" 2
 810              	.LVL57:
 162:src/Riscv.cpp **** 
 811              		.loc 1 162 17 is_stmt 1
 162:src/Riscv.cpp **** 
 812              		.loc 1 162 98 is_stmt 0
 813              	#NO_APP
 814 0314 13050004 		li	a0,64
 815 0318 97000000 		call	_ZN3PCBnwEm@plt
 815      E7800000 
 816              	.LVL58:
 817              	.LEHE0:
 818 0320 93090500 		mv	s3,a0
 819 0324 13072000 		li	a4,2
 820 0328 93060900 		mv	a3,s2
 821 032c 13060B00 		mv	a2,s6
 822 0330 93850A00 		mv	a1,s5
 823              	.LEHB1:
 824 0334 97000000 		call	_ZN3PCBC1EPFvPvES0_S0_m@plt
 824      E7800000 
 825              	.LVL59:
 826              	.LEHE1:
 164:src/Riscv.cpp **** 
 827              		.loc 1 164 17 is_stmt 1 discriminator 2
 164:src/Riscv.cpp **** 
 828              		.loc 1 164 33 is_stmt 0 discriminator 2
 829 033c 23303A01 		sd	s3,0(s4)
 166:src/Riscv.cpp ****                 {
 830              		.loc 1 166 17 is_stmt 1 discriminator 2
 831 0340 63860900 		beqz	s3,.L35
 173:src/Riscv.cpp ****                     //__asm__ volatile("mv a1, %0" : :"r"((uint64)newPCB));
 832              		.loc 1 173 21
 173:src/Riscv.cpp ****                     //__asm__ volatile("mv a1, %0" : :"r"((uint64)newPCB));
 833              		.loc 1 173 49 is_stmt 0
 834              	#APP
 835              	# 173 "src/Riscv.cpp" 1
 836              		li a0, 0
 837              	# 0 "" 2
 838              	#NO_APP
 839 0348 6FF0DFF6 		j	.L23
 840              	.L35:
 168:src/Riscv.cpp ****                     //__asm__ volatile("mv a1, %0" : :"r"((uint64)newPCB));
 841              		.loc 1 168 21 is_stmt 1
 168:src/Riscv.cpp ****                     //__asm__ volatile("mv a1, %0" : :"r"((uint64)newPCB));
 842              		.loc 1 168 66 is_stmt 0
 843              	#APP
 844              	# 168 "src/Riscv.cpp" 1
 845              		li a0, 0xffffffffffffffff
 846              	# 0 "" 2
 847              	#NO_APP
 848 0350 6FF05FF6 		j	.L23
 849              	.LVL60:
GAS LISTING /tmp/ccCtnlN9.s 			page 24


 850              	.L34:
 851              	.LBE102:
 852              	.LBB103:
 853              	.LBB97:
 180:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 854              		.loc 1 180 17 is_stmt 1
 855              	.LBB98:
 856              	.LBB99:
 153:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 857              		.loc 2 153 5
 154:src/../h/Riscv.h ****     return sstatus;
 858              		.loc 2 154 5
 154:src/../h/Riscv.h ****     return sstatus;
 859              		.loc 2 154 57 is_stmt 0
 860              	#APP
 861              	# 154 "src/../h/Riscv.h" 1
 862              		csrr a5, sstatus
 863              	# 0 "" 2
 864              	.LVL61:
 865              	#NO_APP
 866 0358 233CF4FA 		sd	a5,-72(s0)
 155:src/../h/Riscv.h **** }
 867              		.loc 2 155 5 is_stmt 1
 155:src/../h/Riscv.h **** }
 868              		.loc 2 155 12 is_stmt 0
 869 035c 033984FB 		ld	s2,-72(s0)
 870              	.LVL62:
 871              	.LBE99:
 872              	.LBE98:
 181:src/Riscv.cpp ****                 PCB::dispatch();
 873              		.loc 1 181 17 is_stmt 1
 181:src/Riscv.cpp ****                 PCB::dispatch();
 874              		.loc 1 181 39 is_stmt 0
 875 0360 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 875      83B70700 
 876 0368 23B00700 		sd	zero,0(a5)
 182:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 877              		.loc 1 182 17 is_stmt 1
 878              	.LEHB2:
 182:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 879              		.loc 1 182 30 is_stmt 0
 880 036c 97000000 		call	_ZN3PCB8dispatchEv@plt
 880      E7800000 
 881              	.LVL63:
 882              	.LEHE2:
 183:src/Riscv.cpp ****             }
 883              		.loc 1 183 17 is_stmt 1
 884              	.LBB100:
 885              	.LBB101:
 159:src/../h/Riscv.h **** }
 886              		.loc 2 159 5
 159:src/../h/Riscv.h **** }
 887              		.loc 2 159 57 is_stmt 0
 888              	#APP
 889              	# 159 "src/../h/Riscv.h" 1
 890              		csrw sstatus, s2
 891              	# 0 "" 2
GAS LISTING /tmp/ccCtnlN9.s 			page 25


 892              		.loc 2 160 1
 893              	#NO_APP
 894 0378 6FF0DFF3 		j	.L23
 895              	.LVL64:
 896              	.L28:
 897 037c 93040500 		mv	s1,a0
 898              	.LVL65:
 899              	.LBE101:
 900              	.LBE100:
 901              	.LBE97:
 902              	.LBE103:
 903              	.LBB104:
 162:src/Riscv.cpp **** 
 904              		.loc 1 162 98
 905 0380 13850900 		mv	a0,s3
 906 0384 97000000 		call	_ZN3PCBdlEPv@plt
 906      E7800000 
 907              	.LVL66:
 908 038c 13850400 		mv	a0,s1
 909              	.LEHB3:
 910 0390 97000000 		call	_Unwind_Resume@plt
 910      E7800000 
 911              	.LVL67:
 912              	.LEHE3:
 913              	.LBE104:
 914              	.LBE107:
 915              	.LBE111:
 916              	.LBE117:
 917              	.LBE121:
 918              	.LBE125:
 919              		.cfi_endproc
 920              	.LFE25:
 921              		.globl	__gxx_personality_v0
 922              		.section	.gcc_except_table,"a",@progbits
 923              	.LLSDA25:
 924 0000 FF       		.byte	0xff
 925 0001 FF       		.byte	0xff
 926 0002 03       		.byte	0x3
 927 0003 34       		.byte	0x34
 928 0004 00000000 		.4byte	.LEHB0-.LFB25
 929 0008 00000000 		.4byte	.LEHE0-.LEHB0
 930 000c 00000000 		.4byte	0
 931 0010 00       		.byte	0
 932 0011 00000000 		.4byte	.LEHB1-.LFB25
 933 0015 00000000 		.4byte	.LEHE1-.LEHB1
 934 0019 00000000 		.4byte	.L28-.LFB25
 935 001d 00       		.byte	0
 936 001e 00000000 		.4byte	.LEHB2-.LFB25
 937 0022 00000000 		.4byte	.LEHE2-.LEHB2
 938 0026 00000000 		.4byte	0
 939 002a 00       		.byte	0
 940 002b 00000000 		.4byte	.LEHB3-.LFB25
 941 002f 00000000 		.4byte	.LEHE3-.LEHB3
 942 0033 00000000 		.4byte	0
 943 0037 00       		.byte	0
 944              		.text
 946              		.section	.rodata
GAS LISTING /tmp/ccCtnlN9.s 			page 26


 947              		.align	3
 948              		.set	.LANCHOR0,. + 0
 951              	_ZZN5Riscv12printIntegerEmE6digits:
 952 0000 30313233 		.string	"0123456789"
 952      34353637 
 952      383900
 953              		.text
 954              	.Letext0:
 955              		.file 4 "src/../h/../lib/hw.h"
 956              		.file 5 "src/../h/MemoryAllocator.h"
 957              		.file 6 "src/../lib/console.h"
 4212              		.align	3
 4215              	DW.ref.__gxx_personality_v0:
 4216 0000 00000000 		.dword	__gxx_personality_v0
 4216      00000000 
 4217              		.ident	"GCC: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0"
 4218              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/ccCtnlN9.s 			page 27


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Riscv.cpp
     /tmp/ccCtnlN9.s:9      .text:0000000000000000 _ZN5Riscv10initSystemEv
     /tmp/ccCtnlN9.s:13     .text:0000000000000000 .L0 
     /tmp/ccCtnlN9.s:14     .text:0000000000000000 .L0 
     /tmp/ccCtnlN9.s:15     .text:0000000000000004 .L0 
     /tmp/ccCtnlN9.s:17     .text:0000000000000008 .L0 
     /tmp/ccCtnlN9.s:19     .text:000000000000000c .L0 
     /tmp/ccCtnlN9.s:21     .text:000000000000000c .L0 
     /tmp/ccCtnlN9.s:22     .text:000000000000000c .L0 
     /tmp/ccCtnlN9.s:28     .text:0000000000000014 .L0 
    src/../h/Riscv.h:113    .text:0000000000000014 .L0 
     /tmp/ccCtnlN9.s:38     .text:0000000000000018 .L0 
     /tmp/ccCtnlN9.s:39     .text:000000000000001c .L0 
     /tmp/ccCtnlN9.s:40     .text:000000000000001c .L0 
     /tmp/ccCtnlN9.s:42     .text:0000000000000020 .L0 
     /tmp/ccCtnlN9.s:44     .text:0000000000000024 .L0 
     /tmp/ccCtnlN9.s:50     .text:0000000000000024 _ZN5Riscv16enableInterruptsEv
     /tmp/ccCtnlN9.s:53     .text:0000000000000024 .L0 
     /tmp/ccCtnlN9.s:54     .text:0000000000000024 .L0 
     /tmp/ccCtnlN9.s:55     .text:0000000000000028 .L0 
     /tmp/ccCtnlN9.s:57     .text:000000000000002c .L0 
     /tmp/ccCtnlN9.s:59     .text:0000000000000030 .L0 
     /tmp/ccCtnlN9.s:64     .text:0000000000000030 .L0 
     /tmp/ccCtnlN9.s:65     .text:0000000000000030 .L0 
     /tmp/ccCtnlN9.s:66     .text:0000000000000030 .L0 
     /tmp/ccCtnlN9.s:76     .text:0000000000000038 .L0 
     /tmp/ccCtnlN9.s:77     .text:000000000000003c .L0 
     /tmp/ccCtnlN9.s:78     .text:000000000000003c .L0 
     /tmp/ccCtnlN9.s:80     .text:0000000000000040 .L0 
     /tmp/ccCtnlN9.s:82     .text:0000000000000044 .L0 
     /tmp/ccCtnlN9.s:88     .text:0000000000000044 _ZN5Riscv17disableInterruptsEv
     /tmp/ccCtnlN9.s:91     .text:0000000000000044 .L0 
     /tmp/ccCtnlN9.s:92     .text:0000000000000044 .L0 
     /tmp/ccCtnlN9.s:93     .text:0000000000000048 .L0 
     /tmp/ccCtnlN9.s:95     .text:000000000000004c .L0 
     /tmp/ccCtnlN9.s:97     .text:0000000000000050 .L0 
     /tmp/ccCtnlN9.s:102    .text:0000000000000050 .L0 
     /tmp/ccCtnlN9.s:103    .text:0000000000000050 .L0 
     /tmp/ccCtnlN9.s:104    .text:0000000000000050 .L0 
     /tmp/ccCtnlN9.s:114    .text:0000000000000058 .L0 
     /tmp/ccCtnlN9.s:115    .text:000000000000005c .L0 
     /tmp/ccCtnlN9.s:116    .text:000000000000005c .L0 
     /tmp/ccCtnlN9.s:118    .text:0000000000000060 .L0 
     /tmp/ccCtnlN9.s:120    .text:0000000000000064 .L0 
     /tmp/ccCtnlN9.s:126    .text:0000000000000064 _ZN5Riscv10popSppSpieEv
     /tmp/ccCtnlN9.s:129    .text:0000000000000064 .L0 
     /tmp/ccCtnlN9.s:130    .text:0000000000000064 .L0 
     /tmp/ccCtnlN9.s:131    .text:0000000000000068 .L0 
     /tmp/ccCtnlN9.s:133    .text:000000000000006c .L0 
     /tmp/ccCtnlN9.s:135    .text:0000000000000070 .L0 
     /tmp/ccCtnlN9.s:137    .text:0000000000000070 .L0 
       src/Riscv.cpp:30     .text:0000000000000070 .L0 
     /tmp/ccCtnlN9.s:143    .text:0000000000000074 .L0 
       src/Riscv.cpp:31     .text:0000000000000074 .L0 
     /tmp/ccCtnlN9.s:149    .text:0000000000000078 .L0 
     /tmp/ccCtnlN9.s:150    .text:000000000000007c .L0 
GAS LISTING /tmp/ccCtnlN9.s 			page 28


     /tmp/ccCtnlN9.s:151    .text:000000000000007c .L0 
     /tmp/ccCtnlN9.s:153    .text:0000000000000080 .L0 
     /tmp/ccCtnlN9.s:155    .text:0000000000000084 .L0 
     /tmp/ccCtnlN9.s:161    .text:0000000000000084 _ZN5Riscv11printStringEPKc
     /tmp/ccCtnlN9.s:164    .text:0000000000000084 .L0 
     /tmp/ccCtnlN9.s:166    .text:0000000000000084 .L0 
     /tmp/ccCtnlN9.s:167    .text:0000000000000088 .L0 
     /tmp/ccCtnlN9.s:172    .text:0000000000000098 .L0 
     /tmp/ccCtnlN9.s:173    .text:0000000000000098 .L0 
     /tmp/ccCtnlN9.s:174    .text:0000000000000098 .L0 
     /tmp/ccCtnlN9.s:175    .text:0000000000000098 .L0 
     /tmp/ccCtnlN9.s:177    .text:000000000000009c .L0 
     /tmp/ccCtnlN9.s:182    .text:00000000000000a0 .L0 
     /tmp/ccCtnlN9.s:183    .text:00000000000000a0 .L0 
     /tmp/ccCtnlN9.s:184    .text:00000000000000a0 .L0 
    src/../h/Riscv.h:154    .text:00000000000000a0 .L0 
     /tmp/ccCtnlN9.s:192    .text:00000000000000a8 .L0 
     /tmp/ccCtnlN9.s:193    .text:00000000000000a8 .L0 
     /tmp/ccCtnlN9.s:200    .text:00000000000000ac .L0 
     /tmp/ccCtnlN9.s:201    .text:00000000000000ac .L0 
     /tmp/ccCtnlN9.s:202    .text:00000000000000ac .L0 
     /tmp/ccCtnlN9.s:213    .text:00000000000000b4 .L0 
     /tmp/ccCtnlN9.s:214    .text:00000000000000b4 .L0 
     /tmp/ccCtnlN9.s:215    .text:00000000000000b4 .L0 
     /tmp/ccCtnlN9.s:217    .text:00000000000000b8 .L0 
     /tmp/ccCtnlN9.s:219    .text:00000000000000bc .L0 
     /tmp/ccCtnlN9.s:220    .text:00000000000000bc .L0 
     /tmp/ccCtnlN9.s:223    .text:00000000000000c4 .L0 
     /tmp/ccCtnlN9.s:224    .text:00000000000000c4 .L0 
     /tmp/ccCtnlN9.s:227    .text:00000000000000c8 .L0 
     /tmp/ccCtnlN9.s:230    .text:00000000000000cc .L0 
     /tmp/ccCtnlN9.s:231    .text:00000000000000cc .L0 
     /tmp/ccCtnlN9.s:234    .text:00000000000000d0 .L0 
     /tmp/ccCtnlN9.s:240    .text:00000000000000d8 .L0 
    src/../h/Riscv.h:145    .text:00000000000000d8 .L0 
     /tmp/ccCtnlN9.s:250    .text:00000000000000dc .L0 
     /tmp/ccCtnlN9.s:251    .text:00000000000000e0 .L0 
     /tmp/ccCtnlN9.s:253    .text:00000000000000e4 .L0 
     /tmp/ccCtnlN9.s:254    .text:00000000000000e4 .L0 
     /tmp/ccCtnlN9.s:256    .text:00000000000000e8 .L0 
     /tmp/ccCtnlN9.s:259    .text:00000000000000ec .L0 
     /tmp/ccCtnlN9.s:261    .text:00000000000000f0 .L0 
     /tmp/ccCtnlN9.s:263    .text:00000000000000f4 .L0 
     /tmp/ccCtnlN9.s:274    .text:00000000000000f4 _ZN5Riscv12printIntegerEm
     /tmp/ccCtnlN9.s:277    .text:00000000000000f4 .L0 
     /tmp/ccCtnlN9.s:279    .text:00000000000000f4 .L0 
     /tmp/ccCtnlN9.s:280    .text:00000000000000f8 .L0 
     /tmp/ccCtnlN9.s:285    .text:0000000000000108 .L0 
     /tmp/ccCtnlN9.s:286    .text:0000000000000108 .L0 
     /tmp/ccCtnlN9.s:287    .text:0000000000000108 .L0 
     /tmp/ccCtnlN9.s:288    .text:0000000000000108 .L0 
     /tmp/ccCtnlN9.s:290    .text:000000000000010c .L0 
     /tmp/ccCtnlN9.s:294    .text:000000000000010c .L0 
     /tmp/ccCtnlN9.s:295    .text:000000000000010c .L0 
     /tmp/ccCtnlN9.s:296    .text:000000000000010c .L0 
    src/../h/Riscv.h:154    .text:000000000000010c .L0 
     /tmp/ccCtnlN9.s:304    .text:0000000000000114 .L0 
GAS LISTING /tmp/ccCtnlN9.s 			page 29


     /tmp/ccCtnlN9.s:305    .text:0000000000000114 .L0 
     /tmp/ccCtnlN9.s:312    .text:0000000000000118 .L0 
     /tmp/ccCtnlN9.s:313    .text:0000000000000118 .L0 
     /tmp/ccCtnlN9.s:314    .text:0000000000000118 .L0 
     /tmp/ccCtnlN9.s:324    .text:0000000000000120 .L0 
     /tmp/ccCtnlN9.s:325    .text:0000000000000120 .L0 
     /tmp/ccCtnlN9.s:326    .text:0000000000000120 .L0 
     /tmp/ccCtnlN9.s:327    .text:0000000000000120 .L0 
     /tmp/ccCtnlN9.s:328    .text:0000000000000120 .L0 
     /tmp/ccCtnlN9.s:329    .text:0000000000000120 .L0 
     /tmp/ccCtnlN9.s:330    .text:0000000000000120 .L0 
     /tmp/ccCtnlN9.s:331    .text:0000000000000120 .L0 
     /tmp/ccCtnlN9.s:334    .text:0000000000000124 .L0 
     /tmp/ccCtnlN9.s:335    .text:0000000000000124 .L0 
     /tmp/ccCtnlN9.s:339    .text:0000000000000128 .L0 
     /tmp/ccCtnlN9.s:340    .text:0000000000000128 .L0 
     /tmp/ccCtnlN9.s:341    .text:0000000000000128 .L0 
     /tmp/ccCtnlN9.s:345    .text:0000000000000130 .L0 
     /tmp/ccCtnlN9.s:351    .text:0000000000000148 .L0 
     /tmp/ccCtnlN9.s:357    .text:0000000000000158 .L0 
     /tmp/ccCtnlN9.s:359    .text:000000000000015c .L0 
     /tmp/ccCtnlN9.s:362    .text:0000000000000160 .L0 
     /tmp/ccCtnlN9.s:367    .text:0000000000000168 .L0 
     /tmp/ccCtnlN9.s:368    .text:0000000000000168 .L0 
     /tmp/ccCtnlN9.s:372    .text:0000000000000170 .L0 
     /tmp/ccCtnlN9.s:373    .text:0000000000000170 .L0 
     /tmp/ccCtnlN9.s:381    .text:0000000000000188 .L0 
     /tmp/ccCtnlN9.s:382    .text:0000000000000188 .L0 
     /tmp/ccCtnlN9.s:386    .text:0000000000000198 .L0 
     /tmp/ccCtnlN9.s:387    .text:0000000000000198 .L0 
     /tmp/ccCtnlN9.s:390    .text:000000000000019c .L0 
     /tmp/ccCtnlN9.s:396    .text:00000000000001a4 .L0 
    src/../h/Riscv.h:145    .text:00000000000001a4 .L0 
     /tmp/ccCtnlN9.s:406    .text:00000000000001a8 .L0 
     /tmp/ccCtnlN9.s:407    .text:00000000000001ac .L0 
     /tmp/ccCtnlN9.s:409    .text:00000000000001b0 .L0 
     /tmp/ccCtnlN9.s:410    .text:00000000000001b0 .L0 
     /tmp/ccCtnlN9.s:412    .text:00000000000001b4 .L0 
     /tmp/ccCtnlN9.s:414    .text:00000000000001b8 .L0 
     /tmp/ccCtnlN9.s:416    .text:00000000000001bc .L0 
     /tmp/ccCtnlN9.s:418    .text:00000000000001c0 .L0 
     /tmp/ccCtnlN9.s:424    .text:00000000000001c0 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccCtnlN9.s:427    .text:00000000000001c0 .L0 
     /tmp/ccCtnlN9.s:4215   .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/ccCtnlN9.s:430    .text:00000000000001c0 .L0 
     /tmp/ccCtnlN9.s:431    .text:00000000000001c4 .L0 
     /tmp/ccCtnlN9.s:440    .text:00000000000001e4 .L0 
     /tmp/ccCtnlN9.s:441    .text:00000000000001e4 .L0 
     /tmp/ccCtnlN9.s:442    .text:00000000000001e4 .L0 
     /tmp/ccCtnlN9.s:443    .text:00000000000001e4 .L0 
     /tmp/ccCtnlN9.s:444    .text:00000000000001e4 .L0 
     /tmp/ccCtnlN9.s:445    .text:00000000000001e4 .L0 
     /tmp/ccCtnlN9.s:446    .text:00000000000001e4 .L0 
     /tmp/ccCtnlN9.s:447    .text:00000000000001e4 .L0 
     /tmp/ccCtnlN9.s:449    .text:00000000000001e8 .L0 
     /tmp/ccCtnlN9.s:451    .text:00000000000001e8 .L0 
     /tmp/ccCtnlN9.s:452    .text:00000000000001e8 .L0 
GAS LISTING /tmp/ccCtnlN9.s 			page 30


       src/Riscv.cpp:83     .text:00000000000001e8 .L0 
     /tmp/ccCtnlN9.s:462    .text:00000000000001ec .L0 
     /tmp/ccCtnlN9.s:463    .text:00000000000001ec .L0 
     /tmp/ccCtnlN9.s:464    .text:00000000000001ec .L0 
    src/../h/Riscv.h:88     .text:00000000000001ec .L0 
     /tmp/ccCtnlN9.s:472    .text:00000000000001f4 .L0 
     /tmp/ccCtnlN9.s:473    .text:00000000000001f4 .L0 
     /tmp/ccCtnlN9.s:479    .text:00000000000001f8 .L0 
     /tmp/ccCtnlN9.s:487    .text:0000000000000210 .L0 
     /tmp/ccCtnlN9.s:488    .text:0000000000000210 .L0 
     /tmp/ccCtnlN9.s:489    .text:0000000000000210 .L0 
     /tmp/ccCtnlN9.s:495    .text:0000000000000224 .L0 
     /tmp/ccCtnlN9.s:496    .text:0000000000000224 .L0 
     /tmp/ccCtnlN9.s:499    .text:0000000000000230 .L0 
     /tmp/ccCtnlN9.s:506    .text:0000000000000234 .L0 
     /tmp/ccCtnlN9.s:507    .text:0000000000000234 .L0 
     /tmp/ccCtnlN9.s:508    .text:0000000000000234 .L0 
     /tmp/ccCtnlN9.s:513    .text:0000000000000238 .L0 
     /tmp/ccCtnlN9.s:520    .text:000000000000023c .L0 
     /tmp/ccCtnlN9.s:521    .text:000000000000023c .L0 
     /tmp/ccCtnlN9.s:522    .text:000000000000023c .L0 
     /tmp/ccCtnlN9.s:529    .text:0000000000000244 .L0 
     /tmp/ccCtnlN9.s:539    .text:0000000000000248 .L0 
     /tmp/ccCtnlN9.s:540    .text:0000000000000248 .L0 
     /tmp/ccCtnlN9.s:541    .text:0000000000000248 .L0 
    src/../h/Riscv.h:98     .text:0000000000000248 .L0 
     /tmp/ccCtnlN9.s:549    .text:0000000000000250 .L0 
     /tmp/ccCtnlN9.s:550    .text:0000000000000250 .L0 
     /tmp/ccCtnlN9.s:557    .text:0000000000000254 .L0 
     /tmp/ccCtnlN9.s:558    .text:0000000000000254 .L0 
     /tmp/ccCtnlN9.s:559    .text:0000000000000254 .L0 
    src/../h/Riscv.h:154    .text:0000000000000254 .L0 
     /tmp/ccCtnlN9.s:567    .text:000000000000025c .L0 
     /tmp/ccCtnlN9.s:568    .text:000000000000025c .L0 
     /tmp/ccCtnlN9.s:573    .text:0000000000000260 .L0 
     /tmp/ccCtnlN9.s:574    .text:0000000000000260 .L0 
     /tmp/ccCtnlN9.s:578    .text:000000000000026c .L0 
     /tmp/ccCtnlN9.s:579    .text:000000000000026c .L0 
     /tmp/ccCtnlN9.s:584    .text:0000000000000274 .L0 
     /tmp/ccCtnlN9.s:585    .text:0000000000000274 .L0 
    src/../h/Riscv.h:159    .text:0000000000000274 .L0 
     /tmp/ccCtnlN9.s:597    .text:0000000000000278 .L0 
     /tmp/ccCtnlN9.s:598    .text:0000000000000278 .L0 
    src/../h/Riscv.h:103    .text:0000000000000278 .L0 
     /tmp/ccCtnlN9.s:605    .text:000000000000027c .L0 
     /tmp/ccCtnlN9.s:613    .text:0000000000000280 .L0 
     /tmp/ccCtnlN9.s:614    .text:0000000000000280 .L0 
     /tmp/ccCtnlN9.s:615    .text:0000000000000280 .L0 
       src/Riscv.cpp:125    .text:0000000000000280 .L0 
     /tmp/ccCtnlN9.s:625    .text:0000000000000284 .L0 
     /tmp/ccCtnlN9.s:626    .text:0000000000000284 .L0 
     /tmp/ccCtnlN9.s:627    .text:0000000000000284 .L0 
    src/../h/Riscv.h:98     .text:0000000000000284 .L0 
     /tmp/ccCtnlN9.s:636    .text:000000000000028c .L0 
     /tmp/ccCtnlN9.s:637    .text:000000000000028c .L0 
     /tmp/ccCtnlN9.s:642    .text:0000000000000290 .L0 
     /tmp/ccCtnlN9.s:643    .text:0000000000000290 .L0 
GAS LISTING /tmp/ccCtnlN9.s 			page 31


     /tmp/ccCtnlN9.s:647    .text:0000000000000294 .L0 
     /tmp/ccCtnlN9.s:657    .text:000000000000029c .L0 
     /tmp/ccCtnlN9.s:669    .text:00000000000002a4 .L0 
     /tmp/ccCtnlN9.s:683    .text:00000000000002ac .L0 
     /tmp/ccCtnlN9.s:694    .text:00000000000002b4 .L0 
     /tmp/ccCtnlN9.s:695    .text:00000000000002b4 .L0 
    src/../h/Riscv.h:103    .text:00000000000002b4 .L0 
     /tmp/ccCtnlN9.s:708    .text:00000000000002b8 .L0 
     /tmp/ccCtnlN9.s:709    .text:00000000000002bc .L0 
     /tmp/ccCtnlN9.s:710    .text:00000000000002bc .L0 
     /tmp/ccCtnlN9.s:712    .text:00000000000002c0 .L0 
     /tmp/ccCtnlN9.s:713    .text:00000000000002c0 .L0 
     /tmp/ccCtnlN9.s:715    .text:00000000000002c4 .L0 
     /tmp/ccCtnlN9.s:717    .text:00000000000002c8 .L0 
     /tmp/ccCtnlN9.s:719    .text:00000000000002cc .L0 
     /tmp/ccCtnlN9.s:721    .text:00000000000002d0 .L0 
     /tmp/ccCtnlN9.s:723    .text:00000000000002d4 .L0 
     /tmp/ccCtnlN9.s:725    .text:00000000000002d8 .L0 
     /tmp/ccCtnlN9.s:727    .text:00000000000002dc .L0 
     /tmp/ccCtnlN9.s:731    .text:00000000000002e0 .L0 
     /tmp/ccCtnlN9.s:737    .text:00000000000002e0 .L0 
     /tmp/ccCtnlN9.s:738    .text:00000000000002e0 .L0 
       src/Riscv.cpp:132    .text:00000000000002e0 .L0 
     /tmp/ccCtnlN9.s:745    .text:00000000000002e4 .L0 
     /tmp/ccCtnlN9.s:746    .text:00000000000002e4 .L0 
     /tmp/ccCtnlN9.s:748    .text:00000000000002e4 .L0 
     /tmp/ccCtnlN9.s:753    .text:00000000000002f0 .L0 
       src/Riscv.cpp:135    .text:00000000000002f0 .L0 
     /tmp/ccCtnlN9.s:766    .text:00000000000002f8 .L0 
     /tmp/ccCtnlN9.s:767    .text:00000000000002f8 .L0 
       src/Riscv.cpp:139    .text:00000000000002f8 .L0 
     /tmp/ccCtnlN9.s:774    .text:00000000000002fc .L0 
     /tmp/ccCtnlN9.s:775    .text:00000000000002fc .L0 
     /tmp/ccCtnlN9.s:777    .text:00000000000002fc .L0 
     /tmp/ccCtnlN9.s:790    .text:0000000000000308 .L0 
     /tmp/ccCtnlN9.s:791    .text:0000000000000308 .L0 
     /tmp/ccCtnlN9.s:792    .text:0000000000000308 .L0 
     /tmp/ccCtnlN9.s:793    .text:0000000000000308 .L0 
       src/Riscv.cpp:154    .text:0000000000000308 .L0 
     /tmp/ccCtnlN9.s:800    .text:000000000000030c .L0 
       src/Riscv.cpp:155    .text:000000000000030c .L0 
     /tmp/ccCtnlN9.s:806    .text:0000000000000310 .L0 
       src/Riscv.cpp:156    .text:0000000000000310 .L0 
     /tmp/ccCtnlN9.s:812    .text:0000000000000314 .L0 
     /tmp/ccCtnlN9.s:814    .text:0000000000000314 .L0 
     /tmp/ccCtnlN9.s:828    .text:000000000000033c .L0 
     /tmp/ccCtnlN9.s:829    .text:000000000000033c .L0 
     /tmp/ccCtnlN9.s:831    .text:0000000000000340 .L0 
     /tmp/ccCtnlN9.s:833    .text:0000000000000344 .L0 
       src/Riscv.cpp:173    .text:0000000000000344 .L0 
     /tmp/ccCtnlN9.s:842    .text:000000000000034c .L0 
       src/Riscv.cpp:168    .text:000000000000034c .L0 
     /tmp/ccCtnlN9.s:857    .text:0000000000000354 .L0 
     /tmp/ccCtnlN9.s:858    .text:0000000000000354 .L0 
     /tmp/ccCtnlN9.s:859    .text:0000000000000354 .L0 
    src/../h/Riscv.h:154    .text:0000000000000354 .L0 
     /tmp/ccCtnlN9.s:868    .text:000000000000035c .L0 
GAS LISTING /tmp/ccCtnlN9.s 			page 32


     /tmp/ccCtnlN9.s:869    .text:000000000000035c .L0 
     /tmp/ccCtnlN9.s:874    .text:0000000000000360 .L0 
     /tmp/ccCtnlN9.s:875    .text:0000000000000360 .L0 
     /tmp/ccCtnlN9.s:879    .text:000000000000036c .L0 
     /tmp/ccCtnlN9.s:880    .text:000000000000036c .L0 
     /tmp/ccCtnlN9.s:886    .text:0000000000000374 .L0 
     /tmp/ccCtnlN9.s:887    .text:0000000000000374 .L0 
    src/../h/Riscv.h:159    .text:0000000000000374 .L0 
     /tmp/ccCtnlN9.s:894    .text:0000000000000378 .L0 
     /tmp/ccCtnlN9.s:905    .text:0000000000000380 .L0 
     /tmp/ccCtnlN9.s:919    .text:0000000000000398 .L0 
     /tmp/ccCtnlN9.s:948    .rodata:0000000000000000 .LANCHOR0
     /tmp/ccCtnlN9.s:951    .rodata:0000000000000000 _ZZN5Riscv12printIntegerEmE6digits
     /tmp/ccCtnlN9.s:958    .text:0000000000000398 .L0 
     /tmp/ccCtnlN9.s:22     .text:000000000000000c .L0 
     /tmp/ccCtnlN9.s:347    .text:0000000000000138 .L0 
     /tmp/ccCtnlN9.s:268    .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccCtnlN9.s:382    .text:0000000000000188 .L0 
     /tmp/ccCtnlN9.s:489    .text:0000000000000210 .L0 
     /tmp/ccCtnlN9.s:496    .text:0000000000000224 .L0 
     /tmp/ccCtnlN9.s:574    .text:0000000000000260 .L0 
     /tmp/ccCtnlN9.s:875    .text:0000000000000360 .L0 
     /tmp/ccCtnlN9.s:228    .text:00000000000000cc .L10
     /tmp/ccCtnlN9.s:209    .text:00000000000000b4 .L11
     /tmp/ccCtnlN9.s:337    .text:0000000000000128 .L14
     /tmp/ccCtnlN9.s:379    .text:0000000000000188 .L15
     /tmp/ccCtnlN9.s:365    .text:0000000000000168 .L16
     /tmp/ccCtnlN9.s:607    .text:0000000000000280 .L19
     /tmp/ccCtnlN9.s:702    .text:00000000000002b8 .L18
     /tmp/ccCtnlN9.s:531    .text:0000000000000248 .L30
     /tmp/ccCtnlN9.s:515    .text:000000000000023c .L21
     /tmp/ccCtnlN9.s:730    .text:00000000000002e0 .L31
     /tmp/ccCtnlN9.s:762    .text:00000000000002f8 .L32
     /tmp/ccCtnlN9.s:786    .text:0000000000000308 .L33
     /tmp/ccCtnlN9.s:850    .text:0000000000000354 .L34
     /tmp/ccCtnlN9.s:686    .text:00000000000002b4 .L23
     /tmp/ccCtnlN9.s:840    .text:000000000000034c .L35
     /tmp/ccCtnlN9.s:577    .text:000000000000026c .LEHB0
     /tmp/ccCtnlN9.s:425    .text:00000000000001c0 .LFB25
     /tmp/ccCtnlN9.s:817    .text:0000000000000320 .LEHE0
     /tmp/ccCtnlN9.s:823    .text:0000000000000334 .LEHB1
     /tmp/ccCtnlN9.s:826    .text:000000000000033c .LEHE1
     /tmp/ccCtnlN9.s:896    .text:000000000000037c .L28
     /tmp/ccCtnlN9.s:878    .text:000000000000036c .LEHB2
     /tmp/ccCtnlN9.s:882    .text:0000000000000374 .LEHE2
     /tmp/ccCtnlN9.s:909    .text:0000000000000390 .LEHB3
     /tmp/ccCtnlN9.s:912    .text:0000000000000398 .LEHE3
     /tmp/ccCtnlN9.s:2535   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccCtnlN9.s:4051   .debug_str:000000000000045d .LASF138
     /tmp/ccCtnlN9.s:3953   .debug_str:0000000000000170 .LASF139
     /tmp/ccCtnlN9.s:4149   .debug_str:0000000000000756 .LASF140
     /tmp/ccCtnlN9.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccCtnlN9.s:954    .text:0000000000000398 .Letext0
     /tmp/ccCtnlN9.s:3907   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccCtnlN9.s:4005   .debug_str:00000000000002f4 .LASF0
     /tmp/ccCtnlN9.s:4091   .debug_str:000000000000060a .LASF3
     /tmp/ccCtnlN9.s:4029   .debug_str:00000000000003b4 .LASF1
GAS LISTING /tmp/ccCtnlN9.s 			page 33


     /tmp/ccCtnlN9.s:4099   .debug_str:000000000000062a .LASF2
     /tmp/ccCtnlN9.s:4105   .debug_str:000000000000065c .LASF4
     /tmp/ccCtnlN9.s:4017   .debug_str:0000000000000347 .LASF5
     /tmp/ccCtnlN9.s:3915   .debug_str:000000000000001d .LASF6
     /tmp/ccCtnlN9.s:4079   .debug_str:00000000000005be .LASF7
     /tmp/ccCtnlN9.s:4071   .debug_str:0000000000000579 .LASF8
     /tmp/ccCtnlN9.s:4021   .debug_str:000000000000037b .LASF9
     /tmp/ccCtnlN9.s:3989   .debug_str:000000000000026c .LASF10
     /tmp/ccCtnlN9.s:3993   .debug_str:0000000000000298 .LASF11
     /tmp/ccCtnlN9.s:3947   .debug_str:0000000000000137 .LASF12
     /tmp/ccCtnlN9.s:3981   .debug_str:0000000000000243 .LASF13
     /tmp/ccCtnlN9.s:3955   .debug_str:000000000000017e .LASF14
     /tmp/ccCtnlN9.s:3945   .debug_str:0000000000000127 .LASF15
     /tmp/ccCtnlN9.s:4127   .debug_str:00000000000006e2 .LASF16
     /tmp/ccCtnlN9.s:3973   .debug_str:00000000000001fd .LASF17
     /tmp/ccCtnlN9.s:4119   .debug_str:00000000000006b7 .LASF18
     /tmp/ccCtnlN9.s:4175   .debug_str:0000000000000815 .LASF89
     /tmp/ccCtnlN9.s:4089   .debug_str:00000000000005ff .LASF22
     /tmp/ccCtnlN9.s:4033   .debug_str:00000000000003cd .LASF19
     /tmp/ccCtnlN9.s:3977   .debug_str:000000000000022e .LASF20
     /tmp/ccCtnlN9.s:4187   .debug_str:000000000000085d .LASF21
     /tmp/ccCtnlN9.s:4167   .debug_str:00000000000007e4 .LASF23
     /tmp/ccCtnlN9.s:3979   .debug_str:0000000000000237 .LASF24
     /tmp/ccCtnlN9.s:4139   .debug_str:0000000000000716 .LASF25
     /tmp/ccCtnlN9.s:3963   .debug_str:00000000000001c0 .LASF26
     /tmp/ccCtnlN9.s:4057   .debug_str:0000000000000519 .LASF27
     /tmp/ccCtnlN9.s:4047   .debug_str:000000000000042f .LASF29
     /tmp/ccCtnlN9.s:3943   .debug_str:0000000000000116 .LASF28
     /tmp/ccCtnlN9.s:4035   .debug_str:00000000000003d6 .LASF30
     /tmp/ccCtnlN9.s:4013   .debug_str:0000000000000328 .LASF31
     /tmp/ccCtnlN9.s:3957   .debug_str:000000000000018e .LASF32
     /tmp/ccCtnlN9.s:4191   .debug_str:000000000000087c .LASF33
     /tmp/ccCtnlN9.s:3921   .debug_str:0000000000000042 .LASF35
     /tmp/ccCtnlN9.s:4077   .debug_str:00000000000005b1 .LASF34
     /tmp/ccCtnlN9.s:3923   .debug_str:000000000000005d .LASF36
     /tmp/ccCtnlN9.s:4111   .debug_str:000000000000067d .LASF37
     /tmp/ccCtnlN9.s:3975   .debug_str:0000000000000213 .LASF38
     /tmp/ccCtnlN9.s:4007   .debug_str:0000000000000301 .LASF39
     /tmp/ccCtnlN9.s:4183   .debug_str:000000000000083b .LASF40
     /tmp/ccCtnlN9.s:4163   .debug_str:00000000000007cf .LASF43
     /tmp/ccCtnlN9.s:4157   .debug_str:000000000000079f .LASF45
     /tmp/ccCtnlN9.s:4095   .debug_str:0000000000000616 .LASF41
     /tmp/ccCtnlN9.s:4067   .debug_str:000000000000055f .LASF42
     /tmp/ccCtnlN9.s:4083   .debug_str:00000000000005d1 .LASF44
     /tmp/ccCtnlN9.s:4085   .debug_str:00000000000005d8 .LASF46
     /tmp/ccCtnlN9.s:4063   .debug_str:0000000000000544 .LASF47
     /tmp/ccCtnlN9.s:4023   .debug_str:000000000000038e .LASF48
     /tmp/ccCtnlN9.s:4185   .debug_str:0000000000000855 .LASF49
     /tmp/ccCtnlN9.s:4145   .debug_str:0000000000000738 .LASF50
     /tmp/ccCtnlN9.s:4061   .debug_str:000000000000053c .LASF51
     /tmp/ccCtnlN9.s:4065   .debug_str:000000000000054b .LASF52
     /tmp/ccCtnlN9.s:4053   .debug_str:00000000000004ff .LASF53
     /tmp/ccCtnlN9.s:4087   .debug_str:00000000000005eb .LASF54
     /tmp/ccCtnlN9.s:4207   .debug_str:00000000000008d5 .LASF55
     /tmp/ccCtnlN9.s:4011   .debug_str:0000000000000314 .LASF56
     /tmp/ccCtnlN9.s:4123   .debug_str:00000000000006d4 .LASF57
     /tmp/ccCtnlN9.s:4107   .debug_str:0000000000000663 .LASF58
GAS LISTING /tmp/ccCtnlN9.s 			page 34


     /tmp/ccCtnlN9.s:4109   .debug_str:0000000000000676 .LASF59
     /tmp/ccCtnlN9.s:3949   .debug_str:0000000000000146 .LASF60
     /tmp/ccCtnlN9.s:3971   .debug_str:00000000000001f7 .LASF61
     /tmp/ccCtnlN9.s:4001   .debug_str:00000000000002ca .LASF62
     /tmp/ccCtnlN9.s:4009   .debug_str:000000000000030e .LASF63
     /tmp/ccCtnlN9.s:3967   .debug_str:00000000000001dc .LASF64
     /tmp/ccCtnlN9.s:3917   .debug_str:0000000000000024 .LASF65
     /tmp/ccCtnlN9.s:4103   .debug_str:0000000000000644 .LASF66
     /tmp/ccCtnlN9.s:4097   .debug_str:000000000000061f .LASF67
     /tmp/ccCtnlN9.s:4201   .debug_str:00000000000008a9 .LASF68
     /tmp/ccCtnlN9.s:4177   .debug_str:000000000000081b .LASF69
     /tmp/ccCtnlN9.s:4189   .debug_str:0000000000000866 .LASF70
     /tmp/ccCtnlN9.s:4173   .debug_str:000000000000080b .LASF71
     /tmp/ccCtnlN9.s:4049   .debug_str:0000000000000447 .LASF72
     /tmp/ccCtnlN9.s:3997   .debug_str:00000000000002b9 .LASF73
     /tmp/ccCtnlN9.s:4003   .debug_str:00000000000002dc .LASF74
     /tmp/ccCtnlN9.s:4161   .debug_str:00000000000007c0 .LASF75
     /tmp/ccCtnlN9.s:3991   .debug_str:000000000000027c .LASF76
     /tmp/ccCtnlN9.s:4075   .debug_str:000000000000059c .LASF77
     /tmp/ccCtnlN9.s:4019   .debug_str:0000000000000359 .LASF78
     /tmp/ccCtnlN9.s:4093   .debug_str:000000000000060f .LASF79
     /tmp/ccCtnlN9.s:3913   .debug_str:0000000000000015 .LASF80
     /tmp/ccCtnlN9.s:3933   .debug_str:00000000000000ca .LASF81
     /tmp/ccCtnlN9.s:4159   .debug_str:00000000000007b4 .LASF82
     /tmp/ccCtnlN9.s:3935   .debug_str:00000000000000d9 .LASF83
     /tmp/ccCtnlN9.s:4055   .debug_str:0000000000000507 .LASF84
     /tmp/ccCtnlN9.s:3995   .debug_str:00000000000002a6 .LASF85
     /tmp/ccCtnlN9.s:4171   .debug_str:00000000000007f8 .LASF86
     /tmp/ccCtnlN9.s:3941   .debug_str:0000000000000102 .LASF87
     /tmp/ccCtnlN9.s:4133   .debug_str:00000000000006ff .LASF88
     /tmp/ccCtnlN9.s:4131   .debug_str:00000000000006f7 .LASF115
     /tmp/ccCtnlN9.s:3999   .debug_str:00000000000002c4 .LASF90
     /tmp/ccCtnlN9.s:4059   .debug_str:0000000000000524 .LASF141
     /tmp/ccCtnlN9.s:4069   .debug_str:0000000000000574 .LASF142
     /tmp/ccCtnlN9.s:4197   .debug_str:000000000000089e .LASF91
     /tmp/ccCtnlN9.s:4143   .debug_str:0000000000000728 .LASF102
     /tmp/ccCtnlN9.s:3969   .debug_str:00000000000001ee .LASF92
     /tmp/ccCtnlN9.s:3919   .debug_str:000000000000002f .LASF93
     /tmp/ccCtnlN9.s:4031   .debug_str:00000000000003c7 .LASF94
     /tmp/ccCtnlN9.s:4073   .debug_str:000000000000058c .LASF95
     /tmp/ccCtnlN9.s:4137   .debug_str:000000000000070e .LASF99
     /tmp/ccCtnlN9.s:4117   .debug_str:00000000000006a9 .LASF96
     /tmp/ccCtnlN9.s:4081   .debug_str:00000000000005c5 .LASF97
     /tmp/ccCtnlN9.s:3965   .debug_str:00000000000001cc .LASF98
     /tmp/ccCtnlN9.s:4113   .debug_str:000000000000068b .LASF100
     /tmp/ccCtnlN9.s:4045   .debug_str:0000000000000422 .LASF104
     /tmp/ccCtnlN9.s:4037   .debug_str:00000000000003f4 .LASF106
     /tmp/ccCtnlN9.s:3931   .debug_str:00000000000000be .LASF101
     /tmp/ccCtnlN9.s:4151   .debug_str:0000000000000779 .LASF103
     /tmp/ccCtnlN9.s:4165   .debug_str:00000000000007d8 .LASF105
     /tmp/ccCtnlN9.s:3951   .debug_str:0000000000000159 .LASF107
     /tmp/ccCtnlN9.s:4203   .debug_str:00000000000008c1 .LASF108
     /tmp/ccCtnlN9.s:3985   .debug_str:000000000000025a .LASF109
     /tmp/ccCtnlN9.s:3911   .debug_str:0000000000000005 .LASF110
     /tmp/ccCtnlN9.s:4015   .debug_str:000000000000033a .LASF111
     /tmp/ccCtnlN9.s:4147   .debug_str:000000000000074c .LASF112
     /tmp/ccCtnlN9.s:3959   .debug_str:00000000000001ad .LASF143
GAS LISTING /tmp/ccCtnlN9.s 			page 35


     /tmp/ccCtnlN9.s:3927   .debug_str:000000000000008f .LASF144
     /tmp/ccCtnlN9.s:4205   .debug_str:00000000000008ce .LASF145
     /tmp/ccCtnlN9.s:3939   .debug_str:00000000000000f1 .LASF146
     /tmp/ccCtnlN9.s:3909   .debug_str:0000000000000000 .LASF113
     /tmp/ccCtnlN9.s:4199   .debug_str:00000000000008a4 .LASF114
     /tmp/ccCtnlN9.s:4155   .debug_str:0000000000000797 .LASF116
     /tmp/ccCtnlN9.s:4135   .debug_str:0000000000000704 .LASF117
     /tmp/ccCtnlN9.s:4129   .debug_str:00000000000006ee .LASF118
     /tmp/ccCtnlN9.s:4043   .debug_str:000000000000041d .LASF119
     /tmp/ccCtnlN9.s:920    .text:0000000000000398 .LFE25
     /tmp/ccCtnlN9.s:3535   .debug_loc:0000000000000000 .LLST12
     /tmp/ccCtnlN9.s:4121   .debug_str:00000000000006cd .LASF120
     /tmp/ccCtnlN9.s:3558   .debug_loc:000000000000006f .LLST13
     /tmp/ccCtnlN9.s:3887   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccCtnlN9.s:4041   .debug_str:0000000000000413 .LASF121
     /tmp/ccCtnlN9.s:3569   .debug_loc:00000000000000a5 .LLST14
     /tmp/ccCtnlN9.s:4141   .debug_str:0000000000000723 .LASF122
     /tmp/ccCtnlN9.s:3592   .debug_loc:0000000000000114 .LLST15
     /tmp/ccCtnlN9.s:535    .text:0000000000000248 .LBB79
     /tmp/ccCtnlN9.s:610    .text:0000000000000280 .LBE79
     /tmp/ccCtnlN9.s:3603   .debug_loc:000000000000014a .LLST17
     /tmp/ccCtnlN9.s:4179   .debug_str:0000000000000825 .LASF123
     /tmp/ccCtnlN9.s:3610   .debug_loc:000000000000016d .LLST18
     /tmp/ccCtnlN9.s:537    .text:0000000000000248 .LBB80
     /tmp/ccCtnlN9.s:553    .text:0000000000000254 .LBE80
     /tmp/ccCtnlN9.s:555    .text:0000000000000254 .LBB82
     /tmp/ccCtnlN9.s:571    .text:0000000000000260 .LBE82
     /tmp/ccCtnlN9.s:582    .text:0000000000000274 .LBB84
     /tmp/ccCtnlN9.s:593    .text:0000000000000278 .LBE84
     /tmp/ccCtnlN9.s:3617   .debug_loc:0000000000000190 .LLST19
     /tmp/ccCtnlN9.s:595    .text:0000000000000278 .LBB86
     /tmp/ccCtnlN9.s:609    .text:0000000000000280 .LBE86
     /tmp/ccCtnlN9.s:3624   .debug_loc:00000000000001b3 .LLST20
     /tmp/ccCtnlN9.s:580    .text:0000000000000274 .LVL39
     /tmp/ccCtnlN9.s:735    .text:00000000000002e0 .LBB110
     /tmp/ccCtnlN9.s:759    .text:00000000000002f4 .LBE110
     /tmp/ccCtnlN9.s:4027   .debug_str:00000000000003af .LASF124
     /tmp/ccCtnlN9.s:3631   .debug_loc:00000000000001d6 .LLST30
     /tmp/ccCtnlN9.s:4181   .debug_str:000000000000082d .LASF125
     /tmp/ccCtnlN9.s:3646   .debug_loc:0000000000000210 .LLST31
     /tmp/ccCtnlN9.s:751    .text:00000000000002f0 .LVL51
     /tmp/ccCtnlN9.s:764    .text:00000000000002f8 .LBB106
     /tmp/ccCtnlN9.s:783    .text:0000000000000304 .LBE106
     /tmp/ccCtnlN9.s:3937   .debug_str:00000000000000ec .LASF126
     /tmp/ccCtnlN9.s:3653   .debug_loc:0000000000000233 .LLST28
     /tmp/ccCtnlN9.s:3929   .debug_str:00000000000000b7 .LASF127
     /tmp/ccCtnlN9.s:3661   .debug_loc:0000000000000257 .LLST29
     /tmp/ccCtnlN9.s:4025   .debug_str:00000000000003a1 .LASF128
     /tmp/ccCtnlN9.s:3669   .debug_loc:000000000000027b .LLST24
     /tmp/ccCtnlN9.s:3680   .debug_loc:00000000000002b1 .LLST25
     /tmp/ccCtnlN9.s:4115   .debug_str:000000000000069c .LASF129
     /tmp/ccCtnlN9.s:3691   .debug_loc:00000000000002e7 .LLST26
     /tmp/ccCtnlN9.s:4193   .debug_str:0000000000000888 .LASF130
     /tmp/ccCtnlN9.s:3702   .debug_loc:000000000000031d .LLST27
     /tmp/ccCtnlN9.s:816    .text:0000000000000320 .LVL58
     /tmp/ccCtnlN9.s:825    .text:000000000000033c .LVL59
     /tmp/ccCtnlN9.s:907    .text:000000000000038c .LVL66
GAS LISTING /tmp/ccCtnlN9.s 			page 36


     /tmp/ccCtnlN9.s:853    .text:0000000000000354 .LBB97
     /tmp/ccCtnlN9.s:901    .text:0000000000000380 .LBE97
     /tmp/ccCtnlN9.s:3709   .debug_loc:0000000000000340 .LLST22
     /tmp/ccCtnlN9.s:855    .text:0000000000000354 .LBB98
     /tmp/ccCtnlN9.s:872    .text:0000000000000360 .LBE98
     /tmp/ccCtnlN9.s:884    .text:0000000000000374 .LBB100
     /tmp/ccCtnlN9.s:900    .text:0000000000000380 .LBE100
     /tmp/ccCtnlN9.s:3716   .debug_loc:0000000000000363 .LLST23
     /tmp/ccCtnlN9.s:881    .text:0000000000000374 .LVL63
     /tmp/ccCtnlN9.s:503    .text:0000000000000234 .LBB77
     /tmp/ccCtnlN9.s:511    .text:0000000000000238 .LBE77
     /tmp/ccCtnlN9.s:3723   .debug_loc:0000000000000386 .LLST16
     /tmp/ccCtnlN9.s:518    .text:000000000000023c .LBB88
     /tmp/ccCtnlN9.s:533    .text:0000000000000248 .LBE88
     /tmp/ccCtnlN9.s:3730   .debug_loc:00000000000003a9 .LLST21
     /tmp/ccCtnlN9.s:623    .text:0000000000000284 .LBB91
     /tmp/ccCtnlN9.s:640    .text:0000000000000290 .LBE91
     /tmp/ccCtnlN9.s:692    .text:00000000000002b4 .LBB115
     /tmp/ccCtnlN9.s:704    .text:00000000000002b8 .LBE115
     /tmp/ccCtnlN9.s:3738   .debug_loc:00000000000003cd .LLST32
     /tmp/ccCtnlN9.s:460    .text:00000000000001ec .LBB72
     /tmp/ccCtnlN9.s:476    .text:00000000000001f8 .LBE72
     /tmp/ccCtnlN9.s:911    .text:0000000000000398 .LVL67
     /tmp/ccCtnlN9.s:275    .text:00000000000000f4 .LFB24
     /tmp/ccCtnlN9.s:419    .text:00000000000001c0 .LFE24
     /tmp/ccCtnlN9.s:3745   .debug_loc:00000000000003f0 .LLST6
     /tmp/ccCtnlN9.s:3759   .debug_loc:0000000000000429 .LLST7
     /tmp/ccCtnlN9.s:4153   .debug_str:0000000000000790 .LASF131
     /tmp/ccCtnlN9.s:3766   .debug_loc:000000000000044c .LLST8
     /tmp/ccCtnlN9.s:3788   .debug_loc:00000000000004ab .LLST9
     /tmp/ccCtnlN9.s:292    .text:000000000000010c .LBB66
     /tmp/ccCtnlN9.s:308    .text:0000000000000118 .LBE66
     /tmp/ccCtnlN9.s:310    .text:0000000000000118 .LBB68
     /tmp/ccCtnlN9.s:322    .text:0000000000000120 .LBE68
     /tmp/ccCtnlN9.s:3810   .debug_loc:00000000000004ec .LLST10
     /tmp/ccCtnlN9.s:393    .text:00000000000001a4 .LBB70
     /tmp/ccCtnlN9.s:404    .text:00000000000001a8 .LBE70
     /tmp/ccCtnlN9.s:3818   .debug_loc:0000000000000510 .LLST11
     /tmp/ccCtnlN9.s:377    .text:0000000000000184 .LVL25
     /tmp/ccCtnlN9.s:384    .text:0000000000000198 .LVL26
     /tmp/ccCtnlN9.s:162    .text:0000000000000084 .LFB23
     /tmp/ccCtnlN9.s:264    .text:00000000000000f4 .LFE23
     /tmp/ccCtnlN9.s:4125   .debug_str:00000000000006db .LASF132
     /tmp/ccCtnlN9.s:3825   .debug_loc:0000000000000533 .LLST2
     /tmp/ccCtnlN9.s:3836   .debug_loc:0000000000000569 .LLST3
     /tmp/ccCtnlN9.s:180    .text:00000000000000a0 .LBB60
     /tmp/ccCtnlN9.s:196    .text:00000000000000ac .LBE60
     /tmp/ccCtnlN9.s:198    .text:00000000000000ac .LBB62
     /tmp/ccCtnlN9.s:211    .text:00000000000000b4 .LBE62
     /tmp/ccCtnlN9.s:3843   .debug_loc:000000000000058c .LLST4
     /tmp/ccCtnlN9.s:237    .text:00000000000000d8 .LBB64
     /tmp/ccCtnlN9.s:248    .text:00000000000000dc .LBE64
     /tmp/ccCtnlN9.s:3851   .debug_loc:00000000000005b0 .LLST5
     /tmp/ccCtnlN9.s:221    .text:00000000000000c4 .LVL9
     /tmp/ccCtnlN9.s:127    .text:0000000000000064 .LFB22
     /tmp/ccCtnlN9.s:156    .text:0000000000000084 .LFE22
     /tmp/ccCtnlN9.s:89     .text:0000000000000044 .LFB21
GAS LISTING /tmp/ccCtnlN9.s 			page 37


     /tmp/ccCtnlN9.s:121    .text:0000000000000064 .LFE21
     /tmp/ccCtnlN9.s:100    .text:0000000000000050 .LBB58
     /tmp/ccCtnlN9.s:112    .text:0000000000000058 .LBE58
     /tmp/ccCtnlN9.s:3858   .debug_loc:00000000000005d3 .LLST1
     /tmp/ccCtnlN9.s:51     .text:0000000000000024 .LFB20
     /tmp/ccCtnlN9.s:83     .text:0000000000000044 .LFE20
     /tmp/ccCtnlN9.s:62     .text:0000000000000030 .LBB56
     /tmp/ccCtnlN9.s:74     .text:0000000000000038 .LBE56
     /tmp/ccCtnlN9.s:3866   .debug_loc:00000000000005f7 .LLST0
     /tmp/ccCtnlN9.s:10     .text:0000000000000000 .LFB19
     /tmp/ccCtnlN9.s:45     .text:0000000000000024 .LFE19
     /tmp/ccCtnlN9.s:24     .text:0000000000000014 .LBB54
     /tmp/ccCtnlN9.s:36     .text:0000000000000018 .LBE54
     /tmp/ccCtnlN9.s:3961   .debug_str:00000000000001bb .LASF147
     /tmp/ccCtnlN9.s:4169   .debug_str:00000000000007f3 .LASF133
     /tmp/ccCtnlN9.s:3987   .debug_str:0000000000000266 .LASF134
     /tmp/ccCtnlN9.s:4101   .debug_str:0000000000000638 .LASF135
     /tmp/ccCtnlN9.s:3983   .debug_str:0000000000000252 .LASF137
     /tmp/ccCtnlN9.s:4195   .debug_str:000000000000088f .LASF148
     /tmp/ccCtnlN9.s:3925   .debug_str:0000000000000077 .LASF149
     /tmp/ccCtnlN9.s:4039   .debug_str:000000000000040c .LASF136
     /tmp/ccCtnlN9.s:457    .text:00000000000001ec .LVL30
     /tmp/ccCtnlN9.s:514    .text:000000000000023c .LVL35
     /tmp/ccCtnlN9.s:530    .text:0000000000000248 .LVL36
     /tmp/ccCtnlN9.s:569    .text:0000000000000260 .LVL38
     /tmp/ccCtnlN9.s:606    .text:0000000000000280 .LVL41
     /tmp/ccCtnlN9.s:685    .text:00000000000002b4 .LVL46
     /tmp/ccCtnlN9.s:729    .text:00000000000002e0 .LVL48
     /tmp/ccCtnlN9.s:870    .text:0000000000000360 .LVL62
     /tmp/ccCtnlN9.s:895    .text:000000000000037c .LVL64
     /tmp/ccCtnlN9.s:474    .text:00000000000001f8 .LVL31
     /tmp/ccCtnlN9.s:490    .text:0000000000000218 .LVL32
     /tmp/ccCtnlN9.s:632    .text:0000000000000288 .LVL43
     /tmp/ccCtnlN9.s:620    .text:0000000000000284 .LVL42
     /tmp/ccCtnlN9.s:761    .text:00000000000002f8 .LVL52
     /tmp/ccCtnlN9.s:772    .text:00000000000002fc .LVL53
     /tmp/ccCtnlN9.s:785    .text:0000000000000308 .LVL54
     /tmp/ccCtnlN9.s:849    .text:0000000000000354 .LVL60
     /tmp/ccCtnlN9.s:864    .text:0000000000000358 .LVL61
     /tmp/ccCtnlN9.s:638    .text:0000000000000290 .LVL44
     /tmp/ccCtnlN9.s:700    .text:00000000000002b8 .LVL47
     /tmp/ccCtnlN9.s:898    .text:0000000000000380 .LVL65
     /tmp/ccCtnlN9.s:551    .text:0000000000000254 .LVL37
     /tmp/ccCtnlN9.s:590    .text:0000000000000278 .LVL40
     /tmp/ccCtnlN9.s:743    .text:00000000000002e4 .LVL49
     /tmp/ccCtnlN9.s:749    .text:00000000000002e8 .LVL50
     /tmp/ccCtnlN9.s:804    .text:0000000000000310 .LVL56
     /tmp/ccCtnlN9.s:810    .text:0000000000000314 .LVL57
     /tmp/ccCtnlN9.s:798    .text:000000000000030c .LVL55
     /tmp/ccCtnlN9.s:501    .text:0000000000000234 .LVL33
     /tmp/ccCtnlN9.s:509    .text:0000000000000238 .LVL34
     /tmp/ccCtnlN9.s:278    .text:00000000000000f4 .LVL15
     /tmp/ccCtnlN9.s:332    .text:0000000000000124 .LVL18
     /tmp/ccCtnlN9.s:306    .text:0000000000000118 .LVL16
     /tmp/ccCtnlN9.s:388    .text:000000000000019c .LVL27
     /tmp/ccCtnlN9.s:336    .text:0000000000000128 .LVL19
     /tmp/ccCtnlN9.s:343    .text:0000000000000130 .LVL20
GAS LISTING /tmp/ccCtnlN9.s 			page 38


     /tmp/ccCtnlN9.s:354    .text:0000000000000154 .LVL21
     /tmp/ccCtnlN9.s:364    .text:0000000000000168 .LVL23
     /tmp/ccCtnlN9.s:369    .text:000000000000016c .LVL24
     /tmp/ccCtnlN9.s:360    .text:0000000000000160 .LVL22
     /tmp/ccCtnlN9.s:319    .text:0000000000000120 .LVL17
     /tmp/ccCtnlN9.s:392    .text:00000000000001a4 .LVL28
     /tmp/ccCtnlN9.s:401    .text:00000000000001a8 .LVL29
     /tmp/ccCtnlN9.s:165    .text:0000000000000084 .LVL6
     /tmp/ccCtnlN9.s:207    .text:00000000000000b4 .LVL8
     /tmp/ccCtnlN9.s:257    .text:00000000000000e8 .LVL14
     /tmp/ccCtnlN9.s:194    .text:00000000000000ac .LVL7
     /tmp/ccCtnlN9.s:232    .text:00000000000000d0 .LVL11
     /tmp/ccCtnlN9.s:236    .text:00000000000000d8 .LVL12
     /tmp/ccCtnlN9.s:245    .text:00000000000000dc .LVL13
     /tmp/ccCtnlN9.s:99     .text:0000000000000050 .LVL4
     /tmp/ccCtnlN9.s:109    .text:0000000000000058 .LVL5
     /tmp/ccCtnlN9.s:61     .text:0000000000000030 .LVL2
     /tmp/ccCtnlN9.s:71     .text:0000000000000038 .LVL3
     /tmp/ccCtnlN9.s:959    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccCtnlN9.s:485    .text:0000000000000210 .LBB75
     /tmp/ccCtnlN9.s:650    .text:000000000000029c .LBE75
     /tmp/ccCtnlN9.s:654    .text:000000000000029c .LBB118
     /tmp/ccCtnlN9.s:661    .text:00000000000002a4 .LBE118
     /tmp/ccCtnlN9.s:665    .text:00000000000002a4 .LBB119
     /tmp/ccCtnlN9.s:674    .text:00000000000002ac .LBE119
     /tmp/ccCtnlN9.s:678    .text:00000000000002ac .LBB120
     /tmp/ccCtnlN9.s:705    .text:00000000000002b8 .LBE120
     /tmp/ccCtnlN9.s:733    .text:00000000000002e0 .LBB121
     /tmp/ccCtnlN9.s:917    .text:0000000000000398 .LBE121
     /tmp/ccCtnlN9.s:788    .text:0000000000000308 .LBB102
     /tmp/ccCtnlN9.s:851    .text:0000000000000354 .LBE102
     /tmp/ccCtnlN9.s:903    .text:0000000000000380 .LBB104
     /tmp/ccCtnlN9.s:913    .text:0000000000000398 .LBE104
     /tmp/ccCtnlN9.s:923    .gcc_except_table:0000000000000000 .LLSDA25

UNDEFINED SYMBOLS
_ZN5Riscv14supervisorTrapEv
__putc
_ZN3PCB16timeSliceCounterE
_ZN3PCB7runningE
_ZN3PCB8dispatchEv
_Z7kmallocm
_ZN3PCBnwEm
_ZN3PCBC1EPFvPvES0_S0_m
_ZN3PCBdlEPv
_Unwind_Resume
__gxx_personality_v0
