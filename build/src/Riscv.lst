GAS LISTING /tmp/cctWvJoV.s 			page 1


   1              		.file	"Riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv15userMainWrapperEPv
   9              	_ZN5Riscv15userMainWrapperEPv:
  10              	.LFB34:
  11              		.file 1 "src/Riscv.cpp"
   1:src/Riscv.cpp **** //
   2:src/Riscv.cpp **** // Created by os on 4/27/22.
   3:src/Riscv.cpp **** //
   4:src/Riscv.cpp **** 
   5:src/Riscv.cpp **** #include "../h/Riscv.hpp"
   6:src/Riscv.cpp **** #include "../h/MemoryAllocator.hpp"
   7:src/Riscv.cpp **** #include "../h/PCB.hpp"
   8:src/Riscv.cpp **** #include "../lib/console.h"
   9:src/Riscv.cpp **** #include "../h/syscall_cpp.hpp"
  10:src/Riscv.cpp **** #include "../h/SleepPCBList.hpp"
  11:src/Riscv.cpp **** #include "../h/KConsole.hpp"
  12:src/Riscv.cpp **** #include "../h/Tests.hpp"
  13:src/Riscv.cpp **** #include "../test/userMain.hpp"
  14:src/Riscv.cpp **** 
  15:src/Riscv.cpp **** void Riscv::initSystem()
  16:src/Riscv.cpp **** {
  17:src/Riscv.cpp ****     w_stvec((uint64)&Riscv::supervisorTrap);
  18:src/Riscv.cpp ****     PCB::initialize();
  19:src/Riscv.cpp ****     KConsole::initialize();
  20:src/Riscv.cpp **** }
  21:src/Riscv.cpp **** 
  22:src/Riscv.cpp **** void Riscv::endSystem()
  23:src/Riscv.cpp **** {
  24:src/Riscv.cpp ****     //todo
  25:src/Riscv.cpp ****     Riscv::disableInterrupts();
  26:src/Riscv.cpp **** }
  27:src/Riscv.cpp **** 
  28:src/Riscv.cpp **** 
  29:src/Riscv.cpp **** void Riscv::enableInterrupts() {
  30:src/Riscv.cpp ****     ms_sstatus(Riscv::SSTATUS_SIE);
  31:src/Riscv.cpp **** }
  32:src/Riscv.cpp **** 
  33:src/Riscv.cpp **** void Riscv::disableInterrupts()
  34:src/Riscv.cpp **** {
  35:src/Riscv.cpp ****     mc_sstatus(Riscv::SSTATUS_SIE);
  36:src/Riscv.cpp **** }
  37:src/Riscv.cpp **** 
  38:src/Riscv.cpp **** void Riscv::popSppSpie()
  39:src/Riscv.cpp **** {
  40:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
  41:src/Riscv.cpp ****     __asm__ volatile ("sret");
  42:src/Riscv.cpp **** }
  43:src/Riscv.cpp **** 
  44:src/Riscv.cpp **** void Riscv::printString(const char *string)
  45:src/Riscv.cpp **** {
  46:src/Riscv.cpp ****     uint64 sstatus = r_sstatus();
  47:src/Riscv.cpp ****     mc_sstatus(SSTATUS_SIE);
GAS LISTING /tmp/cctWvJoV.s 			page 2


  48:src/Riscv.cpp ****     while (*string != '\0')
  49:src/Riscv.cpp ****     {
  50:src/Riscv.cpp ****         __putc(*string);
  51:src/Riscv.cpp ****         string++;
  52:src/Riscv.cpp ****     }
  53:src/Riscv.cpp ****     ms_sstatus(sstatus & SSTATUS_SIE ? SSTATUS_SIE : 0);
  54:src/Riscv.cpp **** }
  55:src/Riscv.cpp **** 
  56:src/Riscv.cpp **** void Riscv::printInteger(uint64 num)
  57:src/Riscv.cpp **** {
  58:src/Riscv.cpp ****     uint64 sstatus = r_sstatus();
  59:src/Riscv.cpp ****     mc_sstatus(SSTATUS_SIE);
  60:src/Riscv.cpp ****     static char digits[] = "0123456789";
  61:src/Riscv.cpp ****     char buf[16];
  62:src/Riscv.cpp ****     int i, neg;
  63:src/Riscv.cpp ****     uint x;
  64:src/Riscv.cpp **** 
  65:src/Riscv.cpp ****     neg = 0;
  66:src/Riscv.cpp ****     if(num < 0)
  67:src/Riscv.cpp ****     {
  68:src/Riscv.cpp ****         neg = 1;
  69:src/Riscv.cpp ****         x = -num;
  70:src/Riscv.cpp ****     }
  71:src/Riscv.cpp ****     else
  72:src/Riscv.cpp ****         x = num;
  73:src/Riscv.cpp **** 
  74:src/Riscv.cpp ****     i = 0;
  75:src/Riscv.cpp ****     do
  76:src/Riscv.cpp ****     {
  77:src/Riscv.cpp ****         buf[i++] = digits[x%10];
  78:src/Riscv.cpp ****     }while((x/=10) != 0);
  79:src/Riscv.cpp ****     if(neg)
  80:src/Riscv.cpp ****         buf[i++] = '-';
  81:src/Riscv.cpp **** 
  82:src/Riscv.cpp ****     while(--i >= 0)
  83:src/Riscv.cpp ****         __putc(buf[i]);
  84:src/Riscv.cpp **** 
  85:src/Riscv.cpp ****     __putc('\n');
  86:src/Riscv.cpp **** 
  87:src/Riscv.cpp ****     ms_sstatus(sstatus & SSTATUS_SIE ? SSTATUS_SIE : 0);
  88:src/Riscv.cpp **** }
  89:src/Riscv.cpp **** 
  90:src/Riscv.cpp **** void Riscv::handleSupervisorTrap()
  91:src/Riscv.cpp **** {
  92:src/Riscv.cpp ****     uint64 a4;
  93:src/Riscv.cpp ****     __asm__ volatile("mv %0, a4" : "=r"(a4));
  94:src/Riscv.cpp **** 
  95:src/Riscv.cpp ****     uint64 scause = Riscv::r_scause();
  96:src/Riscv.cpp **** 
  97:src/Riscv.cpp ****     switch(scause)
  98:src/Riscv.cpp ****     {
  99:src/Riscv.cpp **** 
 100:src/Riscv.cpp ****         case timerInterrupt:
 101:src/Riscv.cpp **** 
 102:src/Riscv.cpp ****             Riscv::mc_sip(Riscv::SIP_SSIP);
 103:src/Riscv.cpp ****             //Riscv::printString("timerInterrupt\n");
 104:src/Riscv.cpp ****             static uint64 total = 0;
GAS LISTING /tmp/cctWvJoV.s 			page 3


 105:src/Riscv.cpp ****             total++;
 106:src/Riscv.cpp ****             //Riscv::printInteger(total);
 107:src/Riscv.cpp **** 
 108:src/Riscv.cpp ****             PCB::timeSliceCounter++;
 109:src/Riscv.cpp **** 
 110:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
 111:src/Riscv.cpp **** 
 112:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
 113:src/Riscv.cpp ****             {
 114:src/Riscv.cpp ****                 volatile uint64 sepc = Riscv::r_sepc();
 115:src/Riscv.cpp ****                 volatile uint64 sstatus = Riscv::r_sstatus();
 116:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 117:src/Riscv.cpp ****                 PCB::dispatch();
 118:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 119:src/Riscv.cpp ****                 Riscv::w_sepc(sepc);
 120:src/Riscv.cpp ****             }
 121:src/Riscv.cpp **** 
 122:src/Riscv.cpp ****             return;
 123:src/Riscv.cpp **** 
 124:src/Riscv.cpp ****         case hwInterrupt: // todo
 125:src/Riscv.cpp **** 
 126:src/Riscv.cpp ****             //Riscv::printString("Hardware interrupt...\n");
 127:src/Riscv.cpp ****             console_handler();
 128:src/Riscv.cpp ****             break;
 129:src/Riscv.cpp **** 
 130:src/Riscv.cpp ****         case operationInterrupt: // todo
 131:src/Riscv.cpp ****             break;
 132:src/Riscv.cpp **** 
 133:src/Riscv.cpp ****         case addrReadInterrupt: // todo
 134:src/Riscv.cpp ****             break;
 135:src/Riscv.cpp **** 
 136:src/Riscv.cpp ****         case addrWriteInterrupt: // todo
 137:src/Riscv.cpp ****             break;
 138:src/Riscv.cpp **** 
 139:src/Riscv.cpp ****         case ecallSystemInterupt:
 140:src/Riscv.cpp ****         case ecallUserInterrupt:
 141:src/Riscv.cpp **** 
 142:src/Riscv.cpp ****             uint64 operation;
 143:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
 144:src/Riscv.cpp **** 
 145:src/Riscv.cpp ****             volatile uint64 sepc = Riscv::r_sepc();
 146:src/Riscv.cpp ****             sepc+=4;
 147:src/Riscv.cpp **** 
 148:src/Riscv.cpp ****             if(operation == MemoryAllocator::MEM_ALLOC)
 149:src/Riscv.cpp ****             {
 150:src/Riscv.cpp ****                 size_t size;
 151:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(size));
 152:src/Riscv.cpp ****                 size*=MEM_BLOCK_SIZE;
 153:src/Riscv.cpp ****                 void* allocatedAddr = kmalloc(size);
 154:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : : "r"((uint64)allocatedAddr));
 155:src/Riscv.cpp ****             }
 156:src/Riscv.cpp ****             else if(operation == MemoryAllocator::MEM_FREE)
 157:src/Riscv.cpp ****             {
 158:src/Riscv.cpp ****                 uint64 addr = 0;
 159:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(addr));
 160:src/Riscv.cpp ****                 uint64 retval = kfree((void*)addr);
 161:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
GAS LISTING /tmp/cctWvJoV.s 			page 4


 162:src/Riscv.cpp ****             }
 163:src/Riscv.cpp ****             else if(operation == PCB::THREAD_CREATE)
 164:src/Riscv.cpp ****             {
 165:src/Riscv.cpp ****                 uint64 start_routine;
 166:src/Riscv.cpp ****                 uint64 args;
 167:src/Riscv.cpp ****                 PCB** threadHandle;
 168:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(threadHandle));
 169:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(start_routine));
 170:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a3" : "=r"(args));
 171:src/Riscv.cpp ****                 //todo
 172:src/Riscv.cpp ****                 //uint64 stack_space;
 173:src/Riscv.cpp ****                 //__asm__ volatile("mv %0, a4" : "=r"(stack_space));
 174:src/Riscv.cpp **** 
 175:src/Riscv.cpp ****                 PCB* newPCB = new PCB((void (*)(void*))start_routine, (void*)args, (void*)a4, DEFAU
 176:src/Riscv.cpp **** 
 177:src/Riscv.cpp ****                 (*threadHandle) = newPCB;
 178:src/Riscv.cpp **** 
 179:src/Riscv.cpp ****                 if(newPCB == 0)
 180:src/Riscv.cpp ****                     __asm__ volatile("li a0, 0xffffffffffffffff");
 181:src/Riscv.cpp ****                 else
 182:src/Riscv.cpp ****                     __asm__ volatile("li a0, 0");
 183:src/Riscv.cpp ****             }
 184:src/Riscv.cpp ****             else if(operation == PCB::THREAD_DISPATCH)
 185:src/Riscv.cpp ****             {
 186:src/Riscv.cpp ****                 volatile uint64 sstatus = Riscv::r_sstatus();
 187:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 188:src/Riscv.cpp ****                 PCB::dispatch();
 189:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 190:src/Riscv.cpp ****             }
 191:src/Riscv.cpp ****             else if(operation == PCB::THREAD_EXIT)
 192:src/Riscv.cpp ****             {
 193:src/Riscv.cpp ****                 Riscv::printString("Exiting thread...\n");
 194:src/Riscv.cpp ****                 volatile uint64 sstatus = Riscv::r_sstatus();
 195:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 196:src/Riscv.cpp ****                 PCB::running->setState(PCB::EXITING);
 197:src/Riscv.cpp ****                 PCB::running->setState(PCB::FINISHED);
 198:src/Riscv.cpp ****                 PCB::dispatch();
 199:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 200:src/Riscv.cpp ****                 __asm__ volatile("li a0, 0");
 201:src/Riscv.cpp ****             }
 202:src/Riscv.cpp ****             else if(operation == PCB::TIME_SLEEP)
 203:src/Riscv.cpp ****             {
 204:src/Riscv.cpp ****                 uint64 time;
 205:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(time));
 206:src/Riscv.cpp ****                 volatile uint64 sstatus = Riscv::r_sstatus();
 207:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 208:src/Riscv.cpp ****                 PCB::running->setTimeToSleep(time);
 209:src/Riscv.cpp ****                 SleepPCBList::insertSleepingPCB();
 210:src/Riscv.cpp ****                 PCB::dispatch();
 211:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 212:src/Riscv.cpp ****                 __asm__ volatile("li a0, 0x0");
 213:src/Riscv.cpp ****             }
 214:src/Riscv.cpp ****             else if(operation == KSemaphore::SEM_OPEN)
 215:src/Riscv.cpp ****             {
 216:src/Riscv.cpp ****                 uint64 val;
 217:src/Riscv.cpp ****                 KSemaphore** semaphoreHandle;
 218:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(semaphoreHandle));
GAS LISTING /tmp/cctWvJoV.s 			page 5


 219:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(val));
 220:src/Riscv.cpp **** 
 221:src/Riscv.cpp ****                 KSemaphore* newSem = new KSemaphore(val);
 222:src/Riscv.cpp **** 
 223:src/Riscv.cpp ****                 (*semaphoreHandle) = newSem;
 224:src/Riscv.cpp **** 
 225:src/Riscv.cpp ****                 if(newSem == 0)
 226:src/Riscv.cpp ****                         __asm__ volatile("li a0, 0xffffffffffffffff");
 227:src/Riscv.cpp ****                 else
 228:src/Riscv.cpp ****                         __asm__ volatile("li a0, 0");
 229:src/Riscv.cpp **** 
 230:src/Riscv.cpp ****             }
 231:src/Riscv.cpp ****             else if(operation == KSemaphore::SEM_WAIT)
 232:src/Riscv.cpp ****             {
 233:src/Riscv.cpp ****                 volatile uint64 sstatus = Riscv::r_sstatus();
 234:src/Riscv.cpp ****                 KSemaphore* kSem;
 235:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(kSem));
 236:src/Riscv.cpp ****                 volatile uint64 retval = kSem->wait();
 237:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 238:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 239:src/Riscv.cpp ****             }
 240:src/Riscv.cpp ****             else if(operation == KSemaphore::SEM_SIGNAL)
 241:src/Riscv.cpp ****             {
 242:src/Riscv.cpp ****                 KSemaphore* kSem;
 243:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(kSem));
 244:src/Riscv.cpp ****                 volatile uint64 retval = kSem->signal();
 245:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 246:src/Riscv.cpp ****             }
 247:src/Riscv.cpp ****             else if(operation == KSemaphore::SEM_CLOSE)
 248:src/Riscv.cpp ****             {
 249:src/Riscv.cpp ****                 KSemaphore* kSem;
 250:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(kSem));
 251:src/Riscv.cpp ****                 delete kSem;
 252:src/Riscv.cpp ****                 __asm__ volatile("li a0, 0");
 253:src/Riscv.cpp ****             }
 254:src/Riscv.cpp ****             else if(operation == KConsole::CONSOLE_GETC)
 255:src/Riscv.cpp ****             {
 256:src/Riscv.cpp ****                 //todo
 257:src/Riscv.cpp ****             }
 258:src/Riscv.cpp ****             else if(operation == KConsole::CONSOLE_PUTC)
 259:src/Riscv.cpp ****             {
 260:src/Riscv.cpp ****                 //todo
 261:src/Riscv.cpp ****             }
 262:src/Riscv.cpp **** 
 263:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 264:src/Riscv.cpp **** 
 265:src/Riscv.cpp ****             return;
 266:src/Riscv.cpp ****     }
 267:src/Riscv.cpp **** }
 268:src/Riscv.cpp **** 
 269:src/Riscv.cpp **** void Riscv::kernelMain()
 270:src/Riscv.cpp **** {
 271:src/Riscv.cpp ****     initSystem();
 272:src/Riscv.cpp **** 
 273:src/Riscv.cpp ****     enableInterrupts();
 274:src/Riscv.cpp **** 
 275:src/Riscv.cpp ****     PCB* userPCB = new PCB(&Riscv::userMainWrapper, 0, kmalloc(DEFAULT_STACK_SIZE), DEFAULT_TIME_SL
GAS LISTING /tmp/cctWvJoV.s 			page 6


 276:src/Riscv.cpp **** 
 277:src/Riscv.cpp ****     while(userPCB->getState() != PCB::FINISHED)
 278:src/Riscv.cpp ****     {
 279:src/Riscv.cpp ****         thread_dispatch();
 280:src/Riscv.cpp ****     }
 281:src/Riscv.cpp **** 
 282:src/Riscv.cpp ****     //myTests();
 283:src/Riscv.cpp **** 
 284:src/Riscv.cpp ****     disableInterrupts();
 285:src/Riscv.cpp **** 
 286:src/Riscv.cpp ****     endSystem();
 287:src/Riscv.cpp **** 
 288:src/Riscv.cpp ****     Riscv::printString("End...");
 289:src/Riscv.cpp **** }
 290:src/Riscv.cpp **** 
 291:src/Riscv.cpp **** void Riscv::userMainWrapper(void* ) {
  12              		.loc 1 291 37
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23341100 		sd	ra,8(sp)
  17 0008 23308100 		sd	s0,0(sp)
  18              		.cfi_offset 1, -8
  19              		.cfi_offset 8, -16
  20 000c 13040101 		addi	s0,sp,16
  21              		.cfi_def_cfa 8, 0
 292:src/Riscv.cpp ****     userMain();
  22              		.loc 1 292 5
  23              		.loc 1 292 13 is_stmt 0
  24 0010 97000000 		call	_Z8userMainv@plt
  24      E7800000 
  25              	.LVL0:
 293:src/Riscv.cpp **** }
  26              		.loc 1 293 1
  27 0018 83308100 		ld	ra,8(sp)
  28              		.cfi_restore 1
  29 001c 03340100 		ld	s0,0(sp)
  30              		.cfi_restore 8
  31              		.cfi_def_cfa 2, 16
  32 0020 13010101 		addi	sp,sp,16
  33              		.cfi_def_cfa_offset 0
  34 0024 67800000 		jr	ra
  35              		.cfi_endproc
  36              	.LFE34:
  38              		.align	2
  39              		.globl	_ZN5Riscv10initSystemEv
  41              	_ZN5Riscv10initSystemEv:
  42              	.LFB25:
  16:src/Riscv.cpp ****     w_stvec((uint64)&Riscv::supervisorTrap);
  43              		.loc 1 16 1 is_stmt 1
  44              		.cfi_startproc
  45 0028 130101FF 		addi	sp,sp,-16
  46              		.cfi_def_cfa_offset 16
  47 002c 23341100 		sd	ra,8(sp)
  48 0030 23308100 		sd	s0,0(sp)
  49              		.cfi_offset 1, -8
  50              		.cfi_offset 8, -16
GAS LISTING /tmp/cctWvJoV.s 			page 7


  51 0034 13040101 		addi	s0,sp,16
  52              		.cfi_def_cfa 8, 0
  17:src/Riscv.cpp ****     PCB::initialize();
  53              		.loc 1 17 5
  17:src/Riscv.cpp ****     PCB::initialize();
  54              		.loc 1 17 12 is_stmt 0
  55 0038 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
  55      83B70700 
  56              	.LVL1:
  57              	.LBB86:
  58              	.LBB87:
  59              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 4/27/22.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_0_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_0_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** class Riscv
  11:src/../h/Riscv.hpp **** {
  12:src/../h/Riscv.hpp **** private:
  13:src/../h/Riscv.hpp **** 
  14:src/../h/Riscv.hpp **** public:
  15:src/../h/Riscv.hpp ****     static void kernelMain();
  16:src/../h/Riscv.hpp **** 
  17:src/../h/Riscv.hpp ****     static void initSystem();
  18:src/../h/Riscv.hpp ****     static void endSystem();
  19:src/../h/Riscv.hpp **** 
  20:src/../h/Riscv.hpp ****     static void userMainWrapper(void* p);
  21:src/../h/Riscv.hpp **** 
  22:src/../h/Riscv.hpp ****     static void enableInterrupts();
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp ****     static void disableInterrupts();
  25:src/../h/Riscv.hpp **** 
  26:src/../h/Riscv.hpp ****     static void printString(char const *string);
  27:src/../h/Riscv.hpp **** 
  28:src/../h/Riscv.hpp ****     static void printInteger(uint64 num);
  29:src/../h/Riscv.hpp **** 
  30:src/../h/Riscv.hpp ****     static void pushRegisters();
  31:src/../h/Riscv.hpp ****     static void popRegisters();
  32:src/../h/Riscv.hpp **** 
  33:src/../h/Riscv.hpp ****     static uint64 r_scause();
  34:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  35:src/../h/Riscv.hpp **** 
  36:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  37:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
  38:src/../h/Riscv.hpp **** 
  39:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  40:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  41:src/../h/Riscv.hpp **** 
  42:src/../h/Riscv.hpp ****     static uint64 r_stval();
  43:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  44:src/../h/Riscv.hpp **** 
  45:src/../h/Riscv.hpp ****     enum BitMaskSip
GAS LISTING /tmp/cctWvJoV.s 			page 8


  46:src/../h/Riscv.hpp ****     {
  47:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  48:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  49:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9),
  50:src/../h/Riscv.hpp ****     };
  51:src/../h/Riscv.hpp **** 
  52:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  53:src/../h/Riscv.hpp **** 
  54:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  55:src/../h/Riscv.hpp **** 
  56:src/../h/Riscv.hpp ****     static uint64 r_sip();
  57:src/../h/Riscv.hpp **** 
  58:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  59:src/../h/Riscv.hpp **** 
  60:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  61:src/../h/Riscv.hpp ****     {
  62:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  63:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  64:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  65:src/../h/Riscv.hpp ****     };
  66:src/../h/Riscv.hpp **** 
  67:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  68:src/../h/Riscv.hpp **** 
  69:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  72:src/../h/Riscv.hpp **** 
  73:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  74:src/../h/Riscv.hpp **** 
  75:src/../h/Riscv.hpp ****     static void popSppSpie();
  76:src/../h/Riscv.hpp **** 
  77:src/../h/Riscv.hpp ****     static void supervisorTrap();
  78:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  79:src/../h/Riscv.hpp **** 
  80:src/../h/Riscv.hpp ****     static const uint64 bntOne = 1UL << 63;;
  81:src/../h/Riscv.hpp ****     static const uint64 bntZero = 0UL;
  82:src/../h/Riscv.hpp ****     static const uint64 timerInterrupt = bntOne + 1UL;
  83:src/../h/Riscv.hpp ****     static const uint64 hwInterrupt = bntOne + 9UL;
  84:src/../h/Riscv.hpp ****     static const uint64 operationInterrupt = bntZero + 2UL;
  85:src/../h/Riscv.hpp ****     static const uint64 addrReadInterrupt = bntZero + 5UL;
  86:src/../h/Riscv.hpp ****     static const uint64 addrWriteInterrupt = bntZero + 7UL;
  87:src/../h/Riscv.hpp ****     static const uint64 ecallUserInterrupt = bntZero + 8UL;
  88:src/../h/Riscv.hpp ****     static const uint64 ecallSystemInterupt = bntZero + 9UL;
  89:src/../h/Riscv.hpp **** };
  90:src/../h/Riscv.hpp **** 
  91:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause() {
  92:src/../h/Riscv.hpp ****     uint64 volatile scause;
  93:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
  94:src/../h/Riscv.hpp ****     return scause;
  95:src/../h/Riscv.hpp **** }
  96:src/../h/Riscv.hpp **** 
  97:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
  98:src/../h/Riscv.hpp ****     __asm__ volatile("csrw scause, %0" : :"r"(scause));
  99:src/../h/Riscv.hpp **** }
 100:src/../h/Riscv.hpp **** 
 101:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc() {
 102:src/../h/Riscv.hpp ****     uint64 volatile sepc;
GAS LISTING /tmp/cctWvJoV.s 			page 9


 103:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 104:src/../h/Riscv.hpp ****     return sepc;
 105:src/../h/Riscv.hpp **** }
 106:src/../h/Riscv.hpp **** 
 107:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
 108:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sepc, %0" : :"r"(sepc));
 109:src/../h/Riscv.hpp **** }
 110:src/../h/Riscv.hpp **** 
 111:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec() {
 112:src/../h/Riscv.hpp ****     uint64 volatile stvec;
 113:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, stvec" : "=r"(stvec));
 114:src/../h/Riscv.hpp ****     return stvec;
 115:src/../h/Riscv.hpp **** }
 116:src/../h/Riscv.hpp **** 
 117:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 118:src/../h/Riscv.hpp ****     __asm__ volatile("csrw stvec, %0" : :"r"(stvec));
  60              		.loc 2 118 5 is_stmt 1
  61              		.loc 2 118 53 is_stmt 0
  62              	#APP
  63              	# 118 "src/../h/Riscv.hpp" 1
 119              	}
  64              		csrw stvec, a5
  65              	# 0 "" 2
  66              	.LVL2:
  67              	#NO_APP
  68              	.LBE87:
  69              	.LBE86:
  18:src/Riscv.cpp ****     KConsole::initialize();
  70              		.loc 1 18 5 is_stmt 1
  18:src/Riscv.cpp ****     KConsole::initialize();
  71              		.loc 1 18 20 is_stmt 0
  72 0044 97000000 		call	_ZN3PCB10initializeEv@plt
  72      E7800000 
  73              	.LVL3:
  19:src/Riscv.cpp **** }
  74              		.loc 1 19 5 is_stmt 1
  19:src/Riscv.cpp **** }
  75              		.loc 1 19 25 is_stmt 0
  76 004c 97000000 		call	_ZN8KConsole10initializeEv@plt
  76      E7800000 
  77              	.LVL4:
  20:src/Riscv.cpp **** 
  78              		.loc 1 20 1
  79 0054 83308100 		ld	ra,8(sp)
  80              		.cfi_restore 1
  81 0058 03340100 		ld	s0,0(sp)
  82              		.cfi_restore 8
  83              		.cfi_def_cfa 2, 16
  84 005c 13010101 		addi	sp,sp,16
  85              		.cfi_def_cfa_offset 0
  86 0060 67800000 		jr	ra
  87              		.cfi_endproc
  88              	.LFE25:
  90              		.align	2
  91              		.globl	_ZN5Riscv16enableInterruptsEv
  93              	_ZN5Riscv16enableInterruptsEv:
  94              	.LFB27:
GAS LISTING /tmp/cctWvJoV.s 			page 10


  29:src/Riscv.cpp ****     ms_sstatus(Riscv::SSTATUS_SIE);
  95              		.loc 1 29 32 is_stmt 1
  96              		.cfi_startproc
  97 0064 130101FF 		addi	sp,sp,-16
  98              		.cfi_def_cfa_offset 16
  99 0068 23348100 		sd	s0,8(sp)
 100              		.cfi_offset 8, -8
 101 006c 13040101 		addi	s0,sp,16
 102              		.cfi_def_cfa 8, 0
  30:src/Riscv.cpp **** }
 103              		.loc 1 30 5
 104              	.LVL5:
 105              	.LBB88:
 106              	.LBB89:
 120:src/../h/Riscv.hpp **** 
 121:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stval() {
 122:src/../h/Riscv.hpp ****     uint64 volatile stval;
 123:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, stval" : "=r"(stval));
 124:src/../h/Riscv.hpp ****     return stval;
 125:src/../h/Riscv.hpp **** }
 126:src/../h/Riscv.hpp **** 
 127:src/../h/Riscv.hpp **** inline void Riscv::w_stval(uint64 stval) {
 128:src/../h/Riscv.hpp ****     __asm__ volatile("csrw stval, %0" : :"r"(stval));
 129:src/../h/Riscv.hpp **** }
 130:src/../h/Riscv.hpp **** 
 131:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 132:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sip, %0" : :"r"(mask));
 133:src/../h/Riscv.hpp **** }
 134:src/../h/Riscv.hpp **** 
 135:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 136:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sip, %0" : :"r"(mask));
 137:src/../h/Riscv.hpp **** }
 138:src/../h/Riscv.hpp **** 
 139:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip() {
 140:src/../h/Riscv.hpp ****     uint64 volatile sip;
 141:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sip" : "=r"(sip));
 142:src/../h/Riscv.hpp ****     return sip;
 143:src/../h/Riscv.hpp **** }
 144:src/../h/Riscv.hpp **** 
 145:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 146:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sip, %0" : :"r"(sip));
 147:src/../h/Riscv.hpp **** }
 148:src/../h/Riscv.hpp **** 
 149:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 150:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sstatus, %0" : :"r"(mask));
 107              		.loc 2 150 5
 108              		.loc 2 150 54 is_stmt 0
 109 0070 93072000 		li	a5,2
 110              	#APP
 111              	# 150 "src/../h/Riscv.hpp" 1
 151              	}
 112              		csrs sstatus, a5
 113              	# 0 "" 2
 114              	.LVL6:
 115              	#NO_APP
 116              	.LBE89:
 117              	.LBE88:
GAS LISTING /tmp/cctWvJoV.s 			page 11


  31:src/Riscv.cpp **** 
 118              		.loc 1 31 1
 119 0078 03348100 		ld	s0,8(sp)
 120              		.cfi_restore 8
 121              		.cfi_def_cfa 2, 16
 122 007c 13010101 		addi	sp,sp,16
 123              		.cfi_def_cfa_offset 0
 124 0080 67800000 		jr	ra
 125              		.cfi_endproc
 126              	.LFE27:
 128              		.align	2
 129              		.globl	_ZN5Riscv17disableInterruptsEv
 131              	_ZN5Riscv17disableInterruptsEv:
 132              	.LFB28:
  34:src/Riscv.cpp ****     mc_sstatus(Riscv::SSTATUS_SIE);
 133              		.loc 1 34 1 is_stmt 1
 134              		.cfi_startproc
 135 0084 130101FF 		addi	sp,sp,-16
 136              		.cfi_def_cfa_offset 16
 137 0088 23348100 		sd	s0,8(sp)
 138              		.cfi_offset 8, -8
 139 008c 13040101 		addi	s0,sp,16
 140              		.cfi_def_cfa 8, 0
  35:src/Riscv.cpp **** }
 141              		.loc 1 35 5
 142              	.LVL7:
 143              	.LBB90:
 144              	.LBB91:
 152:src/../h/Riscv.hpp **** 
 153:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 154:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sstatus, %0" : :"r"(mask));
 145              		.loc 2 154 5
 146              		.loc 2 154 54 is_stmt 0
 147 0090 93072000 		li	a5,2
 148              	#APP
 149              	# 154 "src/../h/Riscv.hpp" 1
 155              	}
 150              		csrc sstatus, a5
 151              	# 0 "" 2
 152              	.LVL8:
 153              	#NO_APP
 154              	.LBE91:
 155              	.LBE90:
  36:src/Riscv.cpp **** 
 156              		.loc 1 36 1
 157 0098 03348100 		ld	s0,8(sp)
 158              		.cfi_restore 8
 159              		.cfi_def_cfa 2, 16
 160 009c 13010101 		addi	sp,sp,16
 161              		.cfi_def_cfa_offset 0
 162 00a0 67800000 		jr	ra
 163              		.cfi_endproc
 164              	.LFE28:
 166              		.align	2
 167              		.globl	_ZN5Riscv9endSystemEv
 169              	_ZN5Riscv9endSystemEv:
 170              	.LFB26:
GAS LISTING /tmp/cctWvJoV.s 			page 12


  23:src/Riscv.cpp ****     //todo
 171              		.loc 1 23 1 is_stmt 1
 172              		.cfi_startproc
 173 00a4 130101FF 		addi	sp,sp,-16
 174              		.cfi_def_cfa_offset 16
 175 00a8 23341100 		sd	ra,8(sp)
 176 00ac 23308100 		sd	s0,0(sp)
 177              		.cfi_offset 1, -8
 178              		.cfi_offset 8, -16
 179 00b0 13040101 		addi	s0,sp,16
 180              		.cfi_def_cfa 8, 0
  25:src/Riscv.cpp **** }
 181              		.loc 1 25 5
  25:src/Riscv.cpp **** }
 182              		.loc 1 25 29 is_stmt 0
 183 00b4 97000000 		call	_ZN5Riscv17disableInterruptsEv
 183      E7800000 
 184              	.LVL9:
  26:src/Riscv.cpp **** 
 185              		.loc 1 26 1
 186 00bc 83308100 		ld	ra,8(sp)
 187              		.cfi_restore 1
 188 00c0 03340100 		ld	s0,0(sp)
 189              		.cfi_restore 8
 190              		.cfi_def_cfa 2, 16
 191 00c4 13010101 		addi	sp,sp,16
 192              		.cfi_def_cfa_offset 0
 193 00c8 67800000 		jr	ra
 194              		.cfi_endproc
 195              	.LFE26:
 197              		.align	2
 198              		.globl	_ZN5Riscv10popSppSpieEv
 200              	_ZN5Riscv10popSppSpieEv:
 201              	.LFB29:
  39:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
 202              		.loc 1 39 1 is_stmt 1
 203              		.cfi_startproc
 204 00cc 130101FF 		addi	sp,sp,-16
 205              		.cfi_def_cfa_offset 16
 206 00d0 23348100 		sd	s0,8(sp)
 207              		.cfi_offset 8, -8
 208 00d4 13040101 		addi	s0,sp,16
 209              		.cfi_def_cfa 8, 0
  40:src/Riscv.cpp ****     __asm__ volatile ("sret");
 210              		.loc 1 40 5
  40:src/Riscv.cpp ****     __asm__ volatile ("sret");
 211              		.loc 1 40 39 is_stmt 0
 212              	#APP
 213              	# 40 "src/Riscv.cpp" 1
  41:src/Riscv.cpp **** }
 214              		csrw sepc, ra
 215              	# 0 "" 2
 216              		.loc 1 41 5 is_stmt 1
  41:src/Riscv.cpp **** }
 217              		.loc 1 41 30 is_stmt 0
 218              	# 41 "src/Riscv.cpp" 1
  42:src/Riscv.cpp **** 
GAS LISTING /tmp/cctWvJoV.s 			page 13


 219              		sret
 220              	# 0 "" 2
 221              		.loc 1 42 1
 222              	#NO_APP
 223 00e0 03348100 		ld	s0,8(sp)
 224              		.cfi_restore 8
 225              		.cfi_def_cfa 2, 16
 226 00e4 13010101 		addi	sp,sp,16
 227              		.cfi_def_cfa_offset 0
 228 00e8 67800000 		jr	ra
 229              		.cfi_endproc
 230              	.LFE29:
 232              		.align	2
 233              		.globl	_ZN5Riscv11printStringEPKc
 235              	_ZN5Riscv11printStringEPKc:
 236              	.LFB30:
  45:src/Riscv.cpp ****     uint64 sstatus = r_sstatus();
 237              		.loc 1 45 1 is_stmt 1
 238              		.cfi_startproc
 239              	.LVL10:
 240 00ec 130101FD 		addi	sp,sp,-48
 241              		.cfi_def_cfa_offset 48
 242 00f0 23341102 		sd	ra,40(sp)
 243 00f4 23308102 		sd	s0,32(sp)
 244 00f8 233C9100 		sd	s1,24(sp)
 245 00fc 23382101 		sd	s2,16(sp)
 246              		.cfi_offset 1, -8
 247              		.cfi_offset 8, -16
 248              		.cfi_offset 9, -24
 249              		.cfi_offset 18, -32
 250 0100 13040103 		addi	s0,sp,48
 251              		.cfi_def_cfa 8, 0
 252 0104 93040500 		mv	s1,a0
  46:src/Riscv.cpp ****     mc_sstatus(SSTATUS_SIE);
 253              		.loc 1 46 5
 254              	.LBB92:
 255              	.LBB93:
 156:src/../h/Riscv.hpp **** 
 157:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sstatus() {
 158:src/../h/Riscv.hpp ****     uint64 volatile sstatus;
 256              		.loc 2 158 5
 159:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 257              		.loc 2 159 5
 258              		.loc 2 159 57 is_stmt 0
 259              	#APP
 260              	# 159 "src/../h/Riscv.hpp" 1
 160              	    return sstatus;
 261              		csrr a5, sstatus
 262              	# 0 "" 2
 263              	#NO_APP
 264 010c 233CF4FC 		sd	a5,-40(s0)
 265              		.loc 2 160 5 is_stmt 1
 266              		.loc 2 160 12 is_stmt 0
 267 0110 033984FD 		ld	s2,-40(s0)
 268              	.LVL11:
 269              	.LBE93:
 270              	.LBE92:
GAS LISTING /tmp/cctWvJoV.s 			page 14


  47:src/Riscv.cpp ****     while (*string != '\0')
 271              		.loc 1 47 5 is_stmt 1
 272              	.LBB94:
 273              	.LBB95:
 154:src/../h/Riscv.hpp **** }
 274              		.loc 2 154 5
 154:src/../h/Riscv.hpp **** }
 275              		.loc 2 154 54 is_stmt 0
 276 0114 93072000 		li	a5,2
 277              	#APP
 278              	# 154 "src/../h/Riscv.hpp" 1
 279              		csrc sstatus, a5
 280              	# 0 "" 2
 281              	.LVL12:
 282              	#NO_APP
 283              	.L15:
 284              	.LBE95:
 285              	.LBE94:
  48:src/Riscv.cpp ****     {
 286              		.loc 1 48 5 is_stmt 1
  48:src/Riscv.cpp ****     {
 287              		.loc 1 48 20
  48:src/Riscv.cpp ****     {
 288              		.loc 1 48 12 is_stmt 0
 289 011c 03C50400 		lbu	a0,0(s1)
  48:src/Riscv.cpp ****     {
 290              		.loc 1 48 20
 291 0120 630A0500 		beqz	a0,.L14
  50:src/Riscv.cpp ****         string++;
 292              		.loc 1 50 9 is_stmt 1
  50:src/Riscv.cpp ****         string++;
 293              		.loc 1 50 15 is_stmt 0
 294 0124 97000000 		call	__putc@plt
 294      E7800000 
 295              	.LVL13:
  51:src/Riscv.cpp ****     }
 296              		.loc 1 51 9 is_stmt 1
  51:src/Riscv.cpp ****     }
 297              		.loc 1 51 15 is_stmt 0
 298 012c 93841400 		addi	s1,s1,1
 299              	.LVL14:
  48:src/Riscv.cpp ****     {
 300              		.loc 1 48 5
 301 0130 6FF0DFFE 		j	.L15
 302              	.L14:
  53:src/Riscv.cpp **** }
 303              		.loc 1 53 5 is_stmt 1
  53:src/Riscv.cpp **** }
 304              		.loc 1 53 38 is_stmt 0
 305 0134 1B090900 		sext.w	s2,s2
 306              	.LVL15:
  53:src/Riscv.cpp **** }
 307              		.loc 1 53 15
 308 0138 13792900 		andi	s2,s2,2
 309 013c 1B090900 		sext.w	s2,s2
 310              	.LVL16:
 311              	.LBB96:
GAS LISTING /tmp/cctWvJoV.s 			page 15


 312              	.LBB97:
 150:src/../h/Riscv.hpp **** }
 313              		.loc 2 150 5 is_stmt 1
 150:src/../h/Riscv.hpp **** }
 314              		.loc 2 150 54 is_stmt 0
 315              	#APP
 316              	# 150 "src/../h/Riscv.hpp" 1
 317              		csrs sstatus, s2
 318              	# 0 "" 2
 319              	.LVL17:
 320              	#NO_APP
 321              	.LBE97:
 322              	.LBE96:
  54:src/Riscv.cpp **** 
 323              		.loc 1 54 1
 324 0144 83308102 		ld	ra,40(sp)
 325              		.cfi_restore 1
 326 0148 03340102 		ld	s0,32(sp)
 327              		.cfi_restore 8
 328              		.cfi_def_cfa 2, 48
 329 014c 83348101 		ld	s1,24(sp)
 330              		.cfi_restore 9
 331              	.LVL18:
 332 0150 03390101 		ld	s2,16(sp)
 333              		.cfi_restore 18
 334 0154 13010103 		addi	sp,sp,48
 335              		.cfi_def_cfa_offset 0
 336 0158 67800000 		jr	ra
 337              		.cfi_endproc
 338              	.LFE30:
 340              		.align	2
 341              		.globl	_ZN5Riscv12printIntegerEm
 343              	_ZN5Riscv12printIntegerEm:
 344              	.LFB31:
  57:src/Riscv.cpp ****     uint64 sstatus = r_sstatus();
 345              		.loc 1 57 1 is_stmt 1
 346              		.cfi_startproc
 347              	.LVL19:
 348 015c 130101FC 		addi	sp,sp,-64
 349              		.cfi_def_cfa_offset 64
 350 0160 233C1102 		sd	ra,56(sp)
 351 0164 23388102 		sd	s0,48(sp)
 352 0168 23349102 		sd	s1,40(sp)
 353 016c 23302103 		sd	s2,32(sp)
 354              		.cfi_offset 1, -8
 355              		.cfi_offset 8, -16
 356              		.cfi_offset 9, -24
 357              		.cfi_offset 18, -32
 358 0170 13040104 		addi	s0,sp,64
 359              		.cfi_def_cfa 8, 0
  58:src/Riscv.cpp ****     mc_sstatus(SSTATUS_SIE);
 360              		.loc 1 58 5
 361              	.LBB98:
 362              	.LBB99:
 158:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 363              		.loc 2 158 5
 159:src/../h/Riscv.hpp ****     return sstatus;
GAS LISTING /tmp/cctWvJoV.s 			page 16


 364              		.loc 2 159 5
 159:src/../h/Riscv.hpp ****     return sstatus;
 365              		.loc 2 159 57 is_stmt 0
 366              	#APP
 367              	# 159 "src/../h/Riscv.hpp" 1
 368              		csrr a5, sstatus
 369              	# 0 "" 2
 370              	#NO_APP
 371 0178 2334F4FC 		sd	a5,-56(s0)
 372              		.loc 2 160 5 is_stmt 1
 373              		.loc 2 160 12 is_stmt 0
 374 017c 033984FC 		ld	s2,-56(s0)
 375              	.LVL20:
 376              	.LBE99:
 377              	.LBE98:
  59:src/Riscv.cpp ****     static char digits[] = "0123456789";
 378              		.loc 1 59 5 is_stmt 1
 379              	.LBB100:
 380              	.LBB101:
 154:src/../h/Riscv.hpp **** }
 381              		.loc 2 154 5
 154:src/../h/Riscv.hpp **** }
 382              		.loc 2 154 54 is_stmt 0
 383 0180 93072000 		li	a5,2
 384              	#APP
 385              	# 154 "src/../h/Riscv.hpp" 1
 386              		csrc sstatus, a5
 387              	# 0 "" 2
 388              	.LVL21:
 389              	#NO_APP
 390              	.LBE101:
 391              	.LBE100:
  60:src/Riscv.cpp ****     char buf[16];
 392              		.loc 1 60 5 is_stmt 1
  61:src/Riscv.cpp ****     int i, neg;
 393              		.loc 1 61 5
  62:src/Riscv.cpp ****     uint x;
 394              		.loc 1 62 5
  63:src/Riscv.cpp **** 
 395              		.loc 1 63 5
  65:src/Riscv.cpp ****     if(num < 0)
 396              		.loc 1 65 5
  66:src/Riscv.cpp ****     {
 397              		.loc 1 66 5
  72:src/Riscv.cpp **** 
 398              		.loc 1 72 9
  72:src/Riscv.cpp **** 
 399              		.loc 1 72 11 is_stmt 0
 400 0188 1B050500 		sext.w	a0,a0
 401              	.LVL22:
  74:src/Riscv.cpp ****     do
 402              		.loc 1 74 5 is_stmt 1
  74:src/Riscv.cpp ****     do
 403              		.loc 1 74 7 is_stmt 0
 404 018c 93040000 		li	s1,0
 405              	.LVL23:
 406              	.L18:
GAS LISTING /tmp/cctWvJoV.s 			page 17


  75:src/Riscv.cpp ****     {
 407              		.loc 1 75 5 is_stmt 1
  77:src/Riscv.cpp ****     }while((x/=10) != 0);
 408              		.loc 1 77 9
  77:src/Riscv.cpp ****     }while((x/=10) != 0);
 409              		.loc 1 77 28 is_stmt 0
 410 0190 1306A000 		li	a2,10
 411 0194 3B77C502 		remuw	a4,a0,a2
 412              	.LVL24:
  77:src/Riscv.cpp ****     }while((x/=10) != 0);
 413              		.loc 1 77 31
 414 0198 93160702 		slli	a3,a4,32
 415 019c 93D60602 		srli	a3,a3,32
 416 01a0 17070000 		lla	a4,.LANCHOR0
 416      13070700 
 417 01a8 3307D700 		add	a4,a4,a3
 418 01ac 03470700 		lbu	a4,0(a4)
  77:src/Riscv.cpp ****     }while((x/=10) != 0);
 419              		.loc 1 77 18
 420 01b0 930604FE 		addi	a3,s0,-32
 421 01b4 B3879600 		add	a5,a3,s1
 422 01b8 9B841400 		addiw	s1,s1,1
 423              	.LVL25:
 424 01bc 2388E7FE 		sb	a4,-16(a5)
  78:src/Riscv.cpp ****     if(neg)
 425              		.loc 1 78 20 is_stmt 1
 426 01c0 1B070500 		sext.w	a4,a0
  78:src/Riscv.cpp ****     if(neg)
 427              		.loc 1 78 14 is_stmt 0
 428 01c4 3B55C502 		divuw	a0,a0,a2
 429              	.LVL26:
  78:src/Riscv.cpp ****     if(neg)
 430              		.loc 1 78 20
 431 01c8 93079000 		li	a5,9
 432 01cc E3E2E7FC 		bgtu	a4,a5,.L18
 433              	.LVL27:
 434              	.L20:
  82:src/Riscv.cpp ****         __putc(buf[i]);
 435              		.loc 1 82 5 is_stmt 1
  82:src/Riscv.cpp ****         __putc(buf[i]);
 436              		.loc 1 82 15
 437 01d0 9B84F4FF 		addiw	s1,s1,-1
 438              	.LVL28:
 439 01d4 63CE0400 		bltz	s1,.L19
  83:src/Riscv.cpp **** 
 440              		.loc 1 83 9
  83:src/Riscv.cpp **** 
 441              		.loc 1 83 15 is_stmt 0
 442 01d8 930704FE 		addi	a5,s0,-32
 443 01dc B3879700 		add	a5,a5,s1
 444 01e0 03C507FF 		lbu	a0,-16(a5)
 445 01e4 97000000 		call	__putc@plt
 445      E7800000 
 446              	.LVL29:
 447 01ec 6FF05FFE 		j	.L20
 448              	.L19:
  85:src/Riscv.cpp **** 
GAS LISTING /tmp/cctWvJoV.s 			page 18


 449              		.loc 1 85 5 is_stmt 1
  85:src/Riscv.cpp **** 
 450              		.loc 1 85 11 is_stmt 0
 451 01f0 1305A000 		li	a0,10
 452 01f4 97000000 		call	__putc@plt
 452      E7800000 
 453              	.LVL30:
  87:src/Riscv.cpp **** }
 454              		.loc 1 87 5 is_stmt 1
  87:src/Riscv.cpp **** }
 455              		.loc 1 87 38 is_stmt 0
 456 01fc 1B090900 		sext.w	s2,s2
 457              	.LVL31:
  87:src/Riscv.cpp **** }
 458              		.loc 1 87 15
 459 0200 13792900 		andi	s2,s2,2
 460 0204 1B090900 		sext.w	s2,s2
 461              	.LVL32:
 462              	.LBB102:
 463              	.LBB103:
 150:src/../h/Riscv.hpp **** }
 464              		.loc 2 150 5 is_stmt 1
 150:src/../h/Riscv.hpp **** }
 465              		.loc 2 150 54 is_stmt 0
 466              	#APP
 467              	# 150 "src/../h/Riscv.hpp" 1
 468              		csrs sstatus, s2
 469              	# 0 "" 2
 470              	.LVL33:
 471              	#NO_APP
 472              	.LBE103:
 473              	.LBE102:
  88:src/Riscv.cpp **** 
 474              		.loc 1 88 1
 475 020c 83308103 		ld	ra,56(sp)
 476              		.cfi_restore 1
 477 0210 03340103 		ld	s0,48(sp)
 478              		.cfi_restore 8
 479              		.cfi_def_cfa 2, 64
 480 0214 83348102 		ld	s1,40(sp)
 481              		.cfi_restore 9
 482 0218 03390102 		ld	s2,32(sp)
 483              		.cfi_restore 18
 484 021c 13010104 		addi	sp,sp,64
 485              		.cfi_def_cfa_offset 0
 486 0220 67800000 		jr	ra
 487              		.cfi_endproc
 488              	.LFE31:
 490              		.section	.rodata.str1.8,"aMS",@progbits,1
 491              		.align	3
 492              	.LC0:
 493 0000 45786974 		.string	"Exiting thread...\n"
 493      696E6720 
 493      74687265 
 493      61642E2E 
 493      2E0A00
 494              		.text
GAS LISTING /tmp/cctWvJoV.s 			page 19


 495              		.align	2
 496              		.globl	_ZN5Riscv20handleSupervisorTrapEv
 498              	_ZN5Riscv20handleSupervisorTrapEv:
 499              	.LFB32:
  91:src/Riscv.cpp ****     uint64 a4;
 500              		.loc 1 91 1 is_stmt 1
 501              		.cfi_startproc
 502              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 503              		.cfi_lsda 0x1b,.LLSDA32
 504 0224 130101F3 		addi	sp,sp,-208
 505              		.cfi_def_cfa_offset 208
 506 0228 2334110C 		sd	ra,200(sp)
 507 022c 2330810C 		sd	s0,192(sp)
 508 0230 233C910A 		sd	s1,184(sp)
 509 0234 2338210B 		sd	s2,176(sp)
 510 0238 2334310B 		sd	s3,168(sp)
 511 023c 2330410B 		sd	s4,160(sp)
 512 0240 233C5109 		sd	s5,152(sp)
 513              		.cfi_offset 1, -8
 514              		.cfi_offset 8, -16
 515              		.cfi_offset 9, -24
 516              		.cfi_offset 18, -32
 517              		.cfi_offset 19, -40
 518              		.cfi_offset 20, -48
 519              		.cfi_offset 21, -56
 520 0244 1304010D 		addi	s0,sp,208
 521              		.cfi_def_cfa 8, 0
  92:src/Riscv.cpp ****     __asm__ volatile("mv %0, a4" : "=r"(a4));
 522              		.loc 1 92 5
  93:src/Riscv.cpp **** 
 523              		.loc 1 93 5
  93:src/Riscv.cpp **** 
 524              		.loc 1 93 45 is_stmt 0
 525              	#APP
 526              	# 93 "src/Riscv.cpp" 1
 527              		mv s1, a4
 528              	# 0 "" 2
 529              	.LVL34:
  95:src/Riscv.cpp **** 
 530              		.loc 1 95 5 is_stmt 1
 531              	#NO_APP
 532              	.LBB104:
 533              	.LBB105:
  92:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
 534              		.loc 2 92 5
  93:src/../h/Riscv.hpp ****     return scause;
 535              		.loc 2 93 5
  93:src/../h/Riscv.hpp ****     return scause;
 536              		.loc 2 93 55 is_stmt 0
 537              	#APP
 538              	# 93 "src/../h/Riscv.hpp" 1
 539              		csrr a5, scause
 540              	# 0 "" 2
 541              	#NO_APP
 542 0250 2330F4F8 		sd	a5,-128(s0)
  94:src/../h/Riscv.hpp **** }
 543              		.loc 2 94 5 is_stmt 1
GAS LISTING /tmp/cctWvJoV.s 			page 20


  94:src/../h/Riscv.hpp **** }
 544              		.loc 2 94 12 is_stmt 0
 545 0254 833704F8 		ld	a5,-128(s0)
 546              	.LVL35:
 547              	.LBE105:
 548              	.LBE104:
  97:src/Riscv.cpp ****     {
 549              		.loc 1 97 5 is_stmt 1
 550              	.LBB106:
 551 0258 1307F0FF 		li	a4,-1
 552 025c 1317F703 		slli	a4,a4,63
 553 0260 13071700 		addi	a4,a4,1
 554 0264 638AE70E 		beq	a5,a4,.L23
 555 0268 1307F0FF 		li	a4,-1
 556 026c 1317F703 		slli	a4,a4,63
 557 0270 13071700 		addi	a4,a4,1
 558 0274 6364F70A 		bgtu	a5,a4,.L24
 559 0278 938787FF 		addi	a5,a5,-8
 560              	.LVL36:
 561 027c 13071000 		li	a4,1
 562 0280 636AF70A 		bgtu	a5,a4,.L22
 563              	.LBB107:
 139:src/Riscv.cpp ****         case ecallUserInterrupt:
 564              		.loc 1 139 9
 140:src/Riscv.cpp **** 
 565              		.loc 1 140 9
 142:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
 566              		.loc 1 142 13
 143:src/Riscv.cpp **** 
 567              		.loc 1 143 13
 143:src/Riscv.cpp **** 
 568              		.loc 1 143 61 is_stmt 0
 569              	#APP
 570              	# 143 "src/Riscv.cpp" 1
 571              		mv a5, a0
 572              	# 0 "" 2
 573              	.LVL37:
 145:src/Riscv.cpp ****             sepc+=4;
 574              		.loc 1 145 13 is_stmt 1
 575              	#NO_APP
 576              	.LBB108:
 577              	.LBB109:
 102:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 578              		.loc 2 102 5
 103:src/../h/Riscv.hpp ****     return sepc;
 579              		.loc 2 103 5
 103:src/../h/Riscv.hpp ****     return sepc;
 580              		.loc 2 103 51 is_stmt 0
 581              	#APP
 582              	# 103 "src/../h/Riscv.hpp" 1
 583              		csrr a4, sepc
 584              	# 0 "" 2
 585              	#NO_APP
 586 028c 233CE4F8 		sd	a4,-104(s0)
 104:src/../h/Riscv.hpp **** }
 587              		.loc 2 104 5 is_stmt 1
 104:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/cctWvJoV.s 			page 21


 588              		.loc 2 104 12 is_stmt 0
 589 0290 033784F9 		ld	a4,-104(s0)
 590              	.LBE109:
 591              	.LBE108:
 145:src/Riscv.cpp ****             sepc+=4;
 592              		.loc 1 145 50
 593 0294 2334E4F4 		sd	a4,-184(s0)
 146:src/Riscv.cpp **** 
 594              		.loc 1 146 13 is_stmt 1
 146:src/Riscv.cpp **** 
 595              		.loc 1 146 17 is_stmt 0
 596 0298 033784F4 		ld	a4,-184(s0)
 597 029c 13074700 		addi	a4,a4,4
 598 02a0 2334E4F4 		sd	a4,-184(s0)
 148:src/Riscv.cpp ****             {
 599              		.loc 1 148 13 is_stmt 1
 600              	.LBB110:
 601 02a4 13071000 		li	a4,1
 602 02a8 6380E714 		beq	a5,a4,.L47
 603              	.LBE110:
 604              	.LBE107:
 605              	.LBE106:
 156:src/Riscv.cpp ****             {
 606              		.loc 1 156 18
 607              	.LBB245:
 608              	.LBB233:
 609              	.LBB205:
 610              	.LBB111:
 611 02ac 13072000 		li	a4,2
 612 02b0 638CE714 		beq	a5,a4,.L48
 613              	.LBE111:
 614              	.LBE205:
 615              	.LBE233:
 616              	.LBE245:
 163:src/Riscv.cpp ****             {
 617              		.loc 1 163 18
 618              	.LBB246:
 619              	.LBB234:
 620              	.LBB206:
 621              	.LBB194:
 622              	.LBB112:
 623 02b4 13071001 		li	a4,17
 624 02b8 6382E716 		beq	a5,a4,.L49
 625              	.LBE112:
 626              	.LBE194:
 627              	.LBE206:
 628              	.LBE234:
 629              	.LBE246:
 184:src/Riscv.cpp ****             {
 630              		.loc 1 184 18
 631              	.LBB247:
 632              	.LBB235:
 633              	.LBB207:
 634              	.LBB195:
 635              	.LBB184:
 636              	.LBB113:
 637 02bc 13073001 		li	a4,19
GAS LISTING /tmp/cctWvJoV.s 			page 22


 638 02c0 6384E71A 		beq	a5,a4,.L50
 639              	.LBE113:
 640              	.LBE184:
 641              	.LBE195:
 642              	.LBE207:
 643              	.LBE235:
 644              	.LBE247:
 191:src/Riscv.cpp ****             {
 645              		.loc 1 191 18
 646              	.LBB248:
 647              	.LBB236:
 648              	.LBB208:
 649              	.LBB196:
 650              	.LBB185:
 651              	.LBB173:
 652              	.LBB114:
 653 02c4 13072001 		li	a4,18
 654 02c8 6388E71C 		beq	a5,a4,.L51
 655              	.LBE114:
 656              	.LBE173:
 657              	.LBE185:
 658              	.LBE196:
 659              	.LBE208:
 660              	.LBE236:
 661              	.LBE248:
 202:src/Riscv.cpp ****             {
 662              		.loc 1 202 18
 663              	.LBB249:
 664              	.LBB237:
 665              	.LBB209:
 666              	.LBB197:
 667              	.LBB186:
 668              	.LBB174:
 669              	.LBB160:
 670              	.LBB115:
 671 02cc 13071003 		li	a4,49
 672 02d0 6380E722 		beq	a5,a4,.L52
 673              	.LBE115:
 674              	.LBE160:
 675              	.LBE174:
 676              	.LBE186:
 677              	.LBE197:
 678              	.LBE209:
 679              	.LBE237:
 680              	.LBE249:
 214:src/Riscv.cpp ****             {
 681              		.loc 1 214 18
 682              	.LBB250:
 683              	.LBB238:
 684              	.LBB210:
 685              	.LBB198:
 686              	.LBB187:
 687              	.LBB175:
 688              	.LBB161:
 689              	.LBB146:
 690              	.LBB116:
 691 02d4 13071002 		li	a4,33
GAS LISTING /tmp/cctWvJoV.s 			page 23


 692 02d8 6384E726 		beq	a5,a4,.L53
 693              	.LBE116:
 694              	.LBE146:
 695              	.LBE161:
 696              	.LBE175:
 697              	.LBE187:
 698              	.LBE198:
 699              	.LBE210:
 700              	.LBE238:
 701              	.LBE250:
 231:src/Riscv.cpp ****             {
 702              		.loc 1 231 18
 703              	.LBB251:
 704              	.LBB239:
 705              	.LBB211:
 706              	.LBB199:
 707              	.LBB188:
 708              	.LBB176:
 709              	.LBB162:
 710              	.LBB147:
 711              	.LBB134:
 712              	.LBB117:
 713 02dc 13073002 		li	a4,35
 714 02e0 638EE728 		beq	a5,a4,.L54
 715              	.LBE117:
 716              	.LBE134:
 717              	.LBE147:
 718              	.LBE162:
 719              	.LBE176:
 720              	.LBE188:
 721              	.LBE199:
 722              	.LBE211:
 723              	.LBE239:
 724              	.LBE251:
 240:src/Riscv.cpp ****             {
 725              		.loc 1 240 18
 726              	.LBB252:
 727              	.LBB240:
 728              	.LBB212:
 729              	.LBB200:
 730              	.LBB189:
 731              	.LBB177:
 732              	.LBB163:
 733              	.LBB148:
 734              	.LBB135:
 735              	.LBB129:
 736              	.LBB118:
 737 02e4 13074002 		li	a4,36
 738 02e8 6384E72C 		beq	a5,a4,.L55
 739              	.LBE118:
 740              	.LBE129:
 741              	.LBE135:
 742              	.LBE148:
 743              	.LBE163:
 744              	.LBE177:
 745              	.LBE189:
 746              	.LBE200:
GAS LISTING /tmp/cctWvJoV.s 			page 24


 747              	.LBE212:
 748              	.LBE240:
 749              	.LBE252:
 247:src/Riscv.cpp ****             {
 750              		.loc 1 247 18
 751              	.LBB253:
 752              	.LBB241:
 753              	.LBB213:
 754              	.LBB201:
 755              	.LBB190:
 756              	.LBB178:
 757              	.LBB164:
 758              	.LBB149:
 759              	.LBB136:
 760              	.LBB130:
 761              	.LBB122:
 762              	.LBB119:
 763 02ec 13072002 		li	a4,34
 764 02f0 6396E710 		bne	a5,a4,.L29
 765              	.LBB120:
 249:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(kSem));
 766              		.loc 1 249 17
 250:src/Riscv.cpp ****                 delete kSem;
 767              		.loc 1 250 17
 250:src/Riscv.cpp ****                 delete kSem;
 768              		.loc 1 250 59 is_stmt 0
 769              	#APP
 770              	# 250 "src/Riscv.cpp" 1
 771              		mv s1, a1
 772              	# 0 "" 2
 773              	.LVL38:
 251:src/Riscv.cpp ****                 __asm__ volatile("li a0, 0");
 774              		.loc 1 251 17 is_stmt 1
 251:src/Riscv.cpp ****                 __asm__ volatile("li a0, 0");
 775              		.loc 1 251 28 is_stmt 0
 776              	#NO_APP
 777 02f8 638E0400 		beqz	s1,.L40
 251:src/Riscv.cpp ****                 __asm__ volatile("li a0, 0");
 778              		.loc 1 251 24 discriminator 1
 779 02fc 13850400 		mv	a0,s1
 780 0300 97000000 		call	_ZN10KSemaphoreD1Ev@plt
 780      E7800000 
 781              	.LVL39:
 782 0308 13850400 		mv	a0,s1
 783              	.LEHB0:
 784 030c 97000000 		call	_ZN10KSemaphoredlEPv@plt
 784      E7800000 
 785              	.LVL40:
 786              	.L40:
 252:src/Riscv.cpp ****             }
 787              		.loc 1 252 17 is_stmt 1
 252:src/Riscv.cpp ****             }
 788              		.loc 1 252 45 is_stmt 0
 789              	#APP
 790              	# 252 "src/Riscv.cpp" 1
 791              		li a0, 0
 792              	# 0 "" 2
GAS LISTING /tmp/cctWvJoV.s 			page 25


 793              	#NO_APP
 794              	.LBE120:
 795 0318 6F00400E 		j	.L29
 796              	.LVL41:
 797              	.L24:
 798              	.LBE119:
 799              	.LBE122:
 800              	.LBE130:
 801              	.LBE136:
 802              	.LBE149:
 803              	.LBE164:
 804              	.LBE178:
 805              	.LBE190:
 806              	.LBE201:
 807              	.LBE213:
 808              	.LBE241:
  97:src/Riscv.cpp ****     {
 809              		.loc 1 97 5
 810 031c 1307F0FF 		li	a4,-1
 811 0320 1317F703 		slli	a4,a4,63
 812 0324 13079700 		addi	a4,a4,9
 813 0328 6396E700 		bne	a5,a4,.L22
 814              	.LBB242:
 124:src/Riscv.cpp **** 
 815              		.loc 1 124 9 is_stmt 1
 127:src/Riscv.cpp ****             break;
 816              		.loc 1 127 13
 127:src/Riscv.cpp ****             break;
 817              		.loc 1 127 28 is_stmt 0
 818 032c 97000000 		call	console_handler@plt
 818      E7800000 
 819              	.LVL42:
 128:src/Riscv.cpp **** 
 820              		.loc 1 128 13 is_stmt 1
 821              	.L22:
 822              	.LBE242:
 823              	.LBE253:
 267:src/Riscv.cpp **** 
 824              		.loc 1 267 1 is_stmt 0
 825 0334 8330810C 		ld	ra,200(sp)
 826              		.cfi_remember_state
 827              		.cfi_restore 1
 828 0338 0334010C 		ld	s0,192(sp)
 829              		.cfi_restore 8
 830              		.cfi_def_cfa 2, 208
 831 033c 8334810B 		ld	s1,184(sp)
 832              		.cfi_restore 9
 833 0340 0339010B 		ld	s2,176(sp)
 834              		.cfi_restore 18
 835 0344 8339810A 		ld	s3,168(sp)
 836              		.cfi_restore 19
 837 0348 033A010A 		ld	s4,160(sp)
 838              		.cfi_restore 20
 839 034c 833A8109 		ld	s5,152(sp)
 840              		.cfi_restore 21
 841 0350 1301010D 		addi	sp,sp,208
 842              		.cfi_def_cfa_offset 0
GAS LISTING /tmp/cctWvJoV.s 			page 26


 843 0354 67800000 		jr	ra
 844              	.LVL43:
 845              	.L23:
 846              		.cfi_restore_state
 847              	.LBB254:
 848              	.LBB243:
 100:src/Riscv.cpp **** 
 849              		.loc 1 100 9 is_stmt 1
 102:src/Riscv.cpp ****             //Riscv::printString("timerInterrupt\n");
 850              		.loc 1 102 13
 851              	.LBB214:
 852              	.LBB215:
 136:src/../h/Riscv.hpp **** }
 853              		.loc 2 136 5
 136:src/../h/Riscv.hpp **** }
 854              		.loc 2 136 50 is_stmt 0
 855 0358 93072000 		li	a5,2
 856              	.LVL44:
 857              	#APP
 858              	# 136 "src/../h/Riscv.hpp" 1
 859              		csrc sip, a5
 860              	# 0 "" 2
 861              	.LVL45:
 862              	#NO_APP
 863              	.LBE215:
 864              	.LBE214:
 104:src/Riscv.cpp ****             total++;
 865              		.loc 1 104 13 is_stmt 1
 105:src/Riscv.cpp ****             //Riscv::printInteger(total);
 866              		.loc 1 105 13
 105:src/Riscv.cpp ****             //Riscv::printInteger(total);
 867              		.loc 1 105 18 is_stmt 0
 868 0360 17070000 		lla	a4,.LANCHOR1
 868      13070700 
 869 0368 83370700 		ld	a5,0(a4)
 870 036c 93871700 		addi	a5,a5,1
 871 0370 2330F700 		sd	a5,0(a4)
 108:src/Riscv.cpp **** 
 872              		.loc 1 108 13 is_stmt 1
 108:src/Riscv.cpp **** 
 873              		.loc 1 108 34 is_stmt 0
 874 0374 97040000 		la	s1,_ZN3PCB16timeSliceCounterE
 874      83B40400 
 875              	.LVL46:
 876 037c 83B70400 		ld	a5,0(s1)
 877 0380 93871700 		addi	a5,a5,1
 878 0384 23B0F400 		sd	a5,0(s1)
 110:src/Riscv.cpp **** 
 879              		.loc 1 110 13 is_stmt 1
 110:src/Riscv.cpp **** 
 880              		.loc 1 110 40 is_stmt 0
 881 0388 97000000 		call	_ZN12SleepPCBList13tryToWakePCBsEv@plt
 881      E7800000 
 882              	.LVL47:
 112:src/Riscv.cpp ****             {
 883              		.loc 1 112 13 is_stmt 1
 884              	.LBB216:
GAS LISTING /tmp/cctWvJoV.s 			page 27


 112:src/Riscv.cpp ****             {
 885              		.loc 1 112 68 is_stmt 0
 886 0390 97070000 		la	a5,_ZN3PCB7runningE
 886      83B70700 
 887 0398 83B70700 		ld	a5,0(a5)
 888              	.LVL48:
 889              	.LBB217:
 890              	.LBB218:
 891              		.file 3 "src/../h/PCB.hpp"
   1:src/../h/PCB.hpp **** //
   2:src/../h/PCB.hpp **** // Created by os on 4/27/22.
   3:src/../h/PCB.hpp **** //
   4:src/../h/PCB.hpp **** 
   5:src/../h/PCB.hpp **** #ifndef PROJECT_BASE_V1_0_PCB_HPP
   6:src/../h/PCB.hpp **** #define PROJECT_BASE_V1_0_PCB_HPP
   7:src/../h/PCB.hpp **** 
   8:src/../h/PCB.hpp **** #include "../lib/hw.h"
   9:src/../h/PCB.hpp **** #include "Scheduler.hpp"
  10:src/../h/PCB.hpp **** #include "Riscv.hpp"
  11:src/../h/PCB.hpp **** 
  12:src/../h/PCB.hpp **** class PCB
  13:src/../h/PCB.hpp **** {
  14:src/../h/PCB.hpp **** public:
  15:src/../h/PCB.hpp ****     using Body = void (*)(void*);
  16:src/../h/PCB.hpp **** 
  17:src/../h/PCB.hpp ****     PCB(Body body,  void* args, void* stack_space, uint64 timeSlice);
  18:src/../h/PCB.hpp ****     ~PCB();
  19:src/../h/PCB.hpp **** 
  20:src/../h/PCB.hpp ****     void start();
  21:src/../h/PCB.hpp ****     static void dispatch();
  22:src/../h/PCB.hpp ****     static void sleep(time_t);
  23:src/../h/PCB.hpp **** 
  24:src/../h/PCB.hpp ****     static PCB* running;
  25:src/../h/PCB.hpp **** 
  26:src/../h/PCB.hpp ****     static uint64 timeSliceCounter;
  27:src/../h/PCB.hpp ****     uint64 getTimeSlice() { return timeSlice;}
 892              		.loc 3 27 29 is_stmt 1
 893              		.loc 3 27 36 is_stmt 0
 894 039c 83B70701 		ld	a5,16(a5)
 895              	.LVL49:
 896              	.LBE218:
 897              	.LBE217:
 112:src/Riscv.cpp ****             {
 898              		.loc 1 112 39
 899 03a0 03B70400 		ld	a4,0(s1)
 112:src/Riscv.cpp ****             {
 900              		.loc 1 112 13
 901 03a4 E368F7F8 		bltu	a4,a5,.L22
 902              	.LBB219:
 114:src/Riscv.cpp ****                 volatile uint64 sstatus = Riscv::r_sstatus();
 903              		.loc 1 114 17 is_stmt 1
 904              	.LBB220:
 905              	.LBB221:
 102:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 906              		.loc 2 102 5
 103:src/../h/Riscv.hpp ****     return sepc;
 907              		.loc 2 103 5
GAS LISTING /tmp/cctWvJoV.s 			page 28


 103:src/../h/Riscv.hpp ****     return sepc;
 908              		.loc 2 103 51 is_stmt 0
 909              	#APP
 910              	# 103 "src/../h/Riscv.hpp" 1
 911              		csrr a5, sepc
 912              	# 0 "" 2
 913              	#NO_APP
 914 03ac 2338F4F8 		sd	a5,-112(s0)
 104:src/../h/Riscv.hpp **** }
 915              		.loc 2 104 5 is_stmt 1
 104:src/../h/Riscv.hpp **** }
 916              		.loc 2 104 12 is_stmt 0
 917 03b0 833704F9 		ld	a5,-112(s0)
 918              	.LBE221:
 919              	.LBE220:
 114:src/Riscv.cpp ****                 volatile uint64 sstatus = Riscv::r_sstatus();
 920              		.loc 1 114 54
 921 03b4 233CF4F2 		sd	a5,-200(s0)
 115:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 922              		.loc 1 115 17 is_stmt 1
 923              	.LBB222:
 924              	.LBB223:
 158:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 925              		.loc 2 158 5
 159:src/../h/Riscv.hpp ****     return sstatus;
 926              		.loc 2 159 5
 159:src/../h/Riscv.hpp ****     return sstatus;
 927              		.loc 2 159 57 is_stmt 0
 928              	#APP
 929              	# 159 "src/../h/Riscv.hpp" 1
 930              		csrr a5, sstatus
 931              	# 0 "" 2
 932              	#NO_APP
 933 03bc 2334F4F8 		sd	a5,-120(s0)
 934              		.loc 2 160 5 is_stmt 1
 935              		.loc 2 160 12 is_stmt 0
 936 03c0 833784F8 		ld	a5,-120(s0)
 937              	.LBE223:
 938              	.LBE222:
 115:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 939              		.loc 1 115 60
 940 03c4 2330F4F4 		sd	a5,-192(s0)
 116:src/Riscv.cpp ****                 PCB::dispatch();
 941              		.loc 1 116 17 is_stmt 1
 116:src/Riscv.cpp ****                 PCB::dispatch();
 942              		.loc 1 116 39 is_stmt 0
 943 03c8 23B00400 		sd	zero,0(s1)
 117:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 944              		.loc 1 117 17 is_stmt 1
 117:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 945              		.loc 1 117 30 is_stmt 0
 946 03cc 97000000 		call	_ZN3PCB8dispatchEv@plt
 946      E7800000 
 947              	.LVL50:
 118:src/Riscv.cpp ****                 Riscv::w_sepc(sepc);
 948              		.loc 1 118 17 is_stmt 1
 118:src/Riscv.cpp ****                 Riscv::w_sepc(sepc);
GAS LISTING /tmp/cctWvJoV.s 			page 29


 949              		.loc 1 118 33 is_stmt 0
 950 03d4 833704F4 		ld	a5,-192(s0)
 951              	.LVL51:
 952              	.LBB224:
 953              	.LBB225:
 161:src/../h/Riscv.hpp **** }
 162:src/../h/Riscv.hpp **** 
 163:src/../h/Riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus) {
 164:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sstatus, %0" : :"r"(sstatus));
 954              		.loc 2 164 5 is_stmt 1
 955              		.loc 2 164 57 is_stmt 0
 956              	#APP
 957              	# 164 "src/../h/Riscv.hpp" 1
 165              	}
 958              		csrw sstatus, a5
 959              	# 0 "" 2
 960              	.LVL52:
 961              	#NO_APP
 962              	.LBE225:
 963              	.LBE224:
 119:src/Riscv.cpp ****             }
 964              		.loc 1 119 17 is_stmt 1
 119:src/Riscv.cpp ****             }
 965              		.loc 1 119 30 is_stmt 0
 966 03dc 833784F3 		ld	a5,-200(s0)
 967              	.LVL53:
 968              	.LBB226:
 969              	.LBB227:
 108:src/../h/Riscv.hpp **** }
 970              		.loc 2 108 5 is_stmt 1
 108:src/../h/Riscv.hpp **** }
 971              		.loc 2 108 51 is_stmt 0
 972              	#APP
 973              	# 108 "src/../h/Riscv.hpp" 1
 109:src/../h/Riscv.hpp **** 
 974              		csrw sepc, a5
 975              	# 0 "" 2
 976              		.loc 2 109 1
 977              	#NO_APP
 978 03e4 6FF01FF5 		j	.L22
 979              	.LVL54:
 980              	.L47:
 981              	.LBE227:
 982              	.LBE226:
 983              	.LBE219:
 984              	.LBE216:
 985              	.LBB228:
 986              	.LBB202:
 150:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(size));
 987              		.loc 1 150 17 is_stmt 1
 151:src/Riscv.cpp ****                 size*=MEM_BLOCK_SIZE;
 988              		.loc 1 151 17
 151:src/Riscv.cpp ****                 size*=MEM_BLOCK_SIZE;
 989              		.loc 1 151 59 is_stmt 0
 990              	#APP
 991              	# 151 "src/Riscv.cpp" 1
 992              		mv a0, a1
GAS LISTING /tmp/cctWvJoV.s 			page 30


 993              	# 0 "" 2
 994              	.LVL55:
 152:src/Riscv.cpp ****                 void* allocatedAddr = kmalloc(size);
 995              		.loc 1 152 17 is_stmt 1
 153:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : : "r"((uint64)allocatedAddr));
 996              		.loc 1 153 17
 153:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : : "r"((uint64)allocatedAddr));
 997              		.loc 1 153 46 is_stmt 0
 998              	#NO_APP
 999 03ec 13156500 		slli	a0,a0,6
 1000              	.LVL56:
 1001 03f0 97000000 		call	_Z7kmallocm@plt
 1001      E7800000 
 1002              	.LVL57:
 154:src/Riscv.cpp ****             }
 1003              		.loc 1 154 17 is_stmt 1
 154:src/Riscv.cpp ****             }
 1004              		.loc 1 154 76 is_stmt 0
 1005              	#APP
 1006              	# 154 "src/Riscv.cpp" 1
 1007              		mv a0,a0
 1008              	# 0 "" 2
 1009              	.LVL58:
 1010              	#NO_APP
 1011              	.L29:
 1012              	.LBE202:
 1013              	.LBE228:
 263:src/Riscv.cpp **** 
 1014              		.loc 1 263 13 is_stmt 1
 263:src/Riscv.cpp **** 
 1015              		.loc 1 263 26 is_stmt 0
 1016 03fc 833784F4 		ld	a5,-184(s0)
 1017              	.LVL59:
 1018              	.LBB229:
 1019              	.LBB230:
 108:src/../h/Riscv.hpp **** }
 1020              		.loc 2 108 5 is_stmt 1
 108:src/../h/Riscv.hpp **** }
 1021              		.loc 2 108 51 is_stmt 0
 1022              	#APP
 1023              	# 108 "src/../h/Riscv.hpp" 1
 1024              		csrw sepc, a5
 1025              	# 0 "" 2
 1026              	.LVL60:
 109:src/../h/Riscv.hpp **** 
 1027              		.loc 2 109 1
 1028              	#NO_APP
 1029 0404 6FF01FF3 		j	.L22
 1030              	.LVL61:
 1031              	.L48:
 1032              	.LBE230:
 1033              	.LBE229:
 1034              	.LBB231:
 1035              	.LBB203:
 1036              	.LBB191:
 158:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(addr));
 1037              		.loc 1 158 17 is_stmt 1
GAS LISTING /tmp/cctWvJoV.s 			page 31


 159:src/Riscv.cpp ****                 uint64 retval = kfree((void*)addr);
 1038              		.loc 1 159 17
 159:src/Riscv.cpp ****                 uint64 retval = kfree((void*)addr);
 1039              		.loc 1 159 59 is_stmt 0
 1040              	#APP
 1041              	# 159 "src/Riscv.cpp" 1
 1042              		mv a0, a1
 1043              	# 0 "" 2
 1044              	.LVL62:
 160:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 1045              		.loc 1 160 17 is_stmt 1
 160:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 1046              		.loc 1 160 38 is_stmt 0
 1047              	#NO_APP
 1048 040c 97000000 		call	_Z5kfreePv@plt
 1048      E7800000 
 1049              	.LVL63:
 161:src/Riscv.cpp ****             }
 1050              		.loc 1 161 17 is_stmt 1
 161:src/Riscv.cpp ****             }
 1051              		.loc 1 161 60 is_stmt 0
 1052              	#APP
 1053              	# 161 "src/Riscv.cpp" 1
 1054              		mv a0,a0
 1055              	# 0 "" 2
 1056              	#NO_APP
 1057              	.LBE191:
 1058 0418 6FF05FFE 		j	.L29
 1059              	.LVL64:
 1060              	.L49:
 1061              	.LBB192:
 1062              	.LBB179:
 165:src/Riscv.cpp ****                 uint64 args;
 1063              		.loc 1 165 17 is_stmt 1
 166:src/Riscv.cpp ****                 PCB** threadHandle;
 1064              		.loc 1 166 17
 167:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(threadHandle));
 1065              		.loc 1 167 17
 168:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(start_routine));
 1066              		.loc 1 168 17
 168:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(start_routine));
 1067              		.loc 1 168 67 is_stmt 0
 1068              	#APP
 1069              	# 168 "src/Riscv.cpp" 1
 1070              		mv s3, a1
 1071              	# 0 "" 2
 1072              	.LVL65:
 169:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a3" : "=r"(args));
 1073              		.loc 1 169 17 is_stmt 1
 169:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a3" : "=r"(args));
 1074              		.loc 1 169 68 is_stmt 0
 1075              	# 169 "src/Riscv.cpp" 1
 1076              		mv s4, a2
 1077              	# 0 "" 2
 1078              	.LVL66:
 170:src/Riscv.cpp ****                 //todo
 1079              		.loc 1 170 17 is_stmt 1
GAS LISTING /tmp/cctWvJoV.s 			page 32


 170:src/Riscv.cpp ****                 //todo
 1080              		.loc 1 170 59 is_stmt 0
 1081              	# 170 "src/Riscv.cpp" 1
 1082              		mv s5, a3
 1083              	# 0 "" 2
 1084              	.LVL67:
 175:src/Riscv.cpp **** 
 1085              		.loc 1 175 17 is_stmt 1
 175:src/Riscv.cpp **** 
 1086              		.loc 1 175 113 is_stmt 0
 1087              	#NO_APP
 1088 0428 13050005 		li	a0,80
 1089 042c 97000000 		call	_ZN3PCBnwEm@plt
 1089      E7800000 
 1090              	.LVL68:
 1091              	.LEHE0:
 1092 0434 13090500 		mv	s2,a0
 1093 0438 13072000 		li	a4,2
 1094 043c 93860400 		mv	a3,s1
 1095 0440 13860A00 		mv	a2,s5
 1096 0444 93050A00 		mv	a1,s4
 1097              	.LEHB1:
 1098 0448 97000000 		call	_ZN3PCBC1EPFvPvES0_S0_m@plt
 1098      E7800000 
 1099              	.LVL69:
 1100              	.LEHE1:
 177:src/Riscv.cpp **** 
 1101              		.loc 1 177 17 is_stmt 1 discriminator 2
 177:src/Riscv.cpp **** 
 1102              		.loc 1 177 33 is_stmt 0 discriminator 2
 1103 0450 23B02901 		sd	s2,0(s3)
 179:src/Riscv.cpp ****                     __asm__ volatile("li a0, 0xffffffffffffffff");
 1104              		.loc 1 179 17 is_stmt 1 discriminator 2
 1105 0454 63060900 		beqz	s2,.L56
 182:src/Riscv.cpp ****             }
 1106              		.loc 1 182 21
 182:src/Riscv.cpp ****             }
 1107              		.loc 1 182 49 is_stmt 0
 1108              	#APP
 1109              	# 182 "src/Riscv.cpp" 1
 1110              		li a0, 0
 1111              	# 0 "" 2
 1112              	#NO_APP
 1113 045c 6FF01FFA 		j	.L29
 1114              	.L56:
 180:src/Riscv.cpp ****                 else
 1115              		.loc 1 180 21 is_stmt 1
 180:src/Riscv.cpp ****                 else
 1116              		.loc 1 180 66 is_stmt 0
 1117              	#APP
 1118              	# 180 "src/Riscv.cpp" 1
 1119              		li a0, 0xffffffffffffffff
 1120              	# 0 "" 2
 1121              	#NO_APP
 1122 0464 6FF09FF9 		j	.L29
 1123              	.LVL70:
 1124              	.L50:
GAS LISTING /tmp/cctWvJoV.s 			page 33


 1125              	.LBE179:
 1126              	.LBB180:
 1127              	.LBB165:
 186:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 1128              		.loc 1 186 17 is_stmt 1
 1129              	.LBB166:
 1130              	.LBB167:
 158:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 1131              		.loc 2 158 5
 159:src/../h/Riscv.hpp ****     return sstatus;
 1132              		.loc 2 159 5
 159:src/../h/Riscv.hpp ****     return sstatus;
 1133              		.loc 2 159 57 is_stmt 0
 1134              	#APP
 1135              	# 159 "src/../h/Riscv.hpp" 1
 1136              		csrr a5, sstatus
 1137              	# 0 "" 2
 1138              	.LVL71:
 1139              	#NO_APP
 1140 046c 2330F4FA 		sd	a5,-96(s0)
 160:src/../h/Riscv.hpp **** }
 1141              		.loc 2 160 5 is_stmt 1
 160:src/../h/Riscv.hpp **** }
 1142              		.loc 2 160 12 is_stmt 0
 1143 0470 833704FA 		ld	a5,-96(s0)
 1144              	.LBE167:
 1145              	.LBE166:
 186:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 1146              		.loc 1 186 60
 1147 0474 2338F4F4 		sd	a5,-176(s0)
 187:src/Riscv.cpp ****                 PCB::dispatch();
 1148              		.loc 1 187 17 is_stmt 1
 187:src/Riscv.cpp ****                 PCB::dispatch();
 1149              		.loc 1 187 39 is_stmt 0
 1150 0478 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 1150      83B70700 
 1151 0480 23B00700 		sd	zero,0(a5)
 188:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1152              		.loc 1 188 17 is_stmt 1
 1153              	.LEHB2:
 188:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1154              		.loc 1 188 30 is_stmt 0
 1155 0484 97000000 		call	_ZN3PCB8dispatchEv@plt
 1155      E7800000 
 1156              	.LVL72:
 189:src/Riscv.cpp ****             }
 1157              		.loc 1 189 17 is_stmt 1
 189:src/Riscv.cpp ****             }
 1158              		.loc 1 189 33 is_stmt 0
 1159 048c 833704F5 		ld	a5,-176(s0)
 1160              	.LVL73:
 1161              	.LBB168:
 1162              	.LBB169:
 164:src/../h/Riscv.hpp **** }
 1163              		.loc 2 164 5 is_stmt 1
 164:src/../h/Riscv.hpp **** }
 1164              		.loc 2 164 57 is_stmt 0
GAS LISTING /tmp/cctWvJoV.s 			page 34


 1165              	#APP
 1166              	# 164 "src/../h/Riscv.hpp" 1
 1167              		csrw sstatus, a5
 1168              	# 0 "" 2
 1169              		.loc 2 165 1
 1170              	#NO_APP
 1171 0494 6FF09FF6 		j	.L29
 1172              	.LVL74:
 1173              	.L51:
 1174              	.LBE169:
 1175              	.LBE168:
 1176              	.LBE165:
 1177              	.LBB170:
 1178              	.LBB150:
 193:src/Riscv.cpp ****                 volatile uint64 sstatus = Riscv::r_sstatus();
 1179              		.loc 1 193 17 is_stmt 1
 193:src/Riscv.cpp ****                 volatile uint64 sstatus = Riscv::r_sstatus();
 1180              		.loc 1 193 35 is_stmt 0
 1181 0498 17050000 		lla	a0,.LC0
 1181      13050500 
 1182 04a0 97000000 		call	_ZN5Riscv11printStringEPKc
 1182      E7800000 
 1183              	.LVL75:
 194:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 1184              		.loc 1 194 17 is_stmt 1
 1185              	.LBB151:
 1186              	.LBB152:
 158:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 1187              		.loc 2 158 5
 159:src/../h/Riscv.hpp ****     return sstatus;
 1188              		.loc 2 159 5
 159:src/../h/Riscv.hpp ****     return sstatus;
 1189              		.loc 2 159 57 is_stmt 0
 1190              	#APP
 1191              	# 159 "src/../h/Riscv.hpp" 1
 1192              		csrr a5, sstatus
 1193              	# 0 "" 2
 1194              	#NO_APP
 1195 04ac 2334F4FA 		sd	a5,-88(s0)
 160:src/../h/Riscv.hpp **** }
 1196              		.loc 2 160 5 is_stmt 1
 160:src/../h/Riscv.hpp **** }
 1197              		.loc 2 160 12 is_stmt 0
 1198 04b0 833784FA 		ld	a5,-88(s0)
 1199              	.LBE152:
 1200              	.LBE151:
 194:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 1201              		.loc 1 194 60
 1202 04b4 233CF4F4 		sd	a5,-168(s0)
 195:src/Riscv.cpp ****                 PCB::running->setState(PCB::EXITING);
 1203              		.loc 1 195 17 is_stmt 1
 195:src/Riscv.cpp ****                 PCB::running->setState(PCB::EXITING);
 1204              		.loc 1 195 39 is_stmt 0
 1205 04b8 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 1205      83B70700 
 1206 04c0 23B00700 		sd	zero,0(a5)
 196:src/Riscv.cpp ****                 PCB::running->setState(PCB::FINISHED);
GAS LISTING /tmp/cctWvJoV.s 			page 35


 1207              		.loc 1 196 17 is_stmt 1
 196:src/Riscv.cpp ****                 PCB::running->setState(PCB::FINISHED);
 1208              		.loc 1 196 39 is_stmt 0
 1209 04c4 97070000 		la	a5,_ZN3PCB7runningE
 1209      83B70700 
 1210 04cc 83B70700 		ld	a5,0(a5)
 1211              	.LVL76:
 1212              	.LBE150:
 1213              	.LBE170:
 1214              	.LBE180:
 1215              	.LBE192:
 1216              	.LBE203:
 1217              	.LBE231:
 1218              	.LBE243:
 1219              	.LBE254:
  28:src/../h/PCB.hpp **** 
  29:src/../h/PCB.hpp ****     void* operator new(size_t size);
  30:src/../h/PCB.hpp ****     void operator delete(void *p);
  31:src/../h/PCB.hpp **** 
  32:src/../h/PCB.hpp ****     enum State{READY, RUNNING, SUSPENDED, FINISHED, EXITING, SLEEPING};
  33:src/../h/PCB.hpp ****     State getState() {return state;}
  34:src/../h/PCB.hpp ****     void setState(State s) {state = s;}
 1220              		.loc 3 34 29 is_stmt 1
 1221              	.LBB255:
 1222              	.LBB244:
 1223              	.LBB232:
 1224              	.LBB204:
 1225              	.LBB193:
 1226              	.LBB181:
 1227              	.LBB171:
 1228              	.LBB157:
 197:src/Riscv.cpp ****                 PCB::dispatch();
 1229              		.loc 1 197 17
 1230              	.LBB153:
 1231              	.LBB154:
 1232              		.loc 3 34 29
 1233              		.loc 3 34 35 is_stmt 0
 1234 04d0 13073000 		li	a4,3
 1235 04d4 23ACE702 		sw	a4,56(a5)
 1236              	.LVL77:
 1237              	.LBE154:
 1238              	.LBE153:
 198:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1239              		.loc 1 198 17 is_stmt 1
 198:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1240              		.loc 1 198 30 is_stmt 0
 1241 04d8 97000000 		call	_ZN3PCB8dispatchEv@plt
 1241      E7800000 
 1242              	.LVL78:
 199:src/Riscv.cpp ****                 __asm__ volatile("li a0, 0");
 1243              		.loc 1 199 17 is_stmt 1
 199:src/Riscv.cpp ****                 __asm__ volatile("li a0, 0");
 1244              		.loc 1 199 33 is_stmt 0
 1245 04e0 833784F5 		ld	a5,-168(s0)
 1246              	.LVL79:
 1247              	.LBB155:
 1248              	.LBB156:
GAS LISTING /tmp/cctWvJoV.s 			page 36


 164:src/../h/Riscv.hpp **** }
 1249              		.loc 2 164 5 is_stmt 1
 164:src/../h/Riscv.hpp **** }
 1250              		.loc 2 164 57 is_stmt 0
 1251              	#APP
 1252              	# 164 "src/../h/Riscv.hpp" 1
 1253              		csrw sstatus, a5
 1254              	# 0 "" 2
 1255              	.LVL80:
 1256              	#NO_APP
 1257              	.LBE156:
 1258              	.LBE155:
 200:src/Riscv.cpp ****             }
 1259              		.loc 1 200 17 is_stmt 1
 200:src/Riscv.cpp ****             }
 1260              		.loc 1 200 45 is_stmt 0
 1261              	#APP
 1262              	# 200 "src/Riscv.cpp" 1
 1263              		li a0, 0
 1264              	# 0 "" 2
 1265              	#NO_APP
 1266              	.LBE157:
 1267 04ec 6FF01FF1 		j	.L29
 1268              	.LVL81:
 1269              	.L52:
 1270              	.LBB158:
 1271              	.LBB137:
 204:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(time));
 1272              		.loc 1 204 17 is_stmt 1
 205:src/Riscv.cpp ****                 volatile uint64 sstatus = Riscv::r_sstatus();
 1273              		.loc 1 205 17
 205:src/Riscv.cpp ****                 volatile uint64 sstatus = Riscv::r_sstatus();
 1274              		.loc 1 205 59 is_stmt 0
 1275              	#APP
 1276              	# 205 "src/Riscv.cpp" 1
 1277              		mv a4, a1
 1278              	# 0 "" 2
 1279              	.LVL82:
 206:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 1280              		.loc 1 206 17 is_stmt 1
 1281              	#NO_APP
 1282              	.LBB138:
 1283              	.LBB139:
 158:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 1284              		.loc 2 158 5
 159:src/../h/Riscv.hpp ****     return sstatus;
 1285              		.loc 2 159 5
 159:src/../h/Riscv.hpp ****     return sstatus;
 1286              		.loc 2 159 57 is_stmt 0
 1287              	#APP
 1288              	# 159 "src/../h/Riscv.hpp" 1
 1289              		csrr a5, sstatus
 1290              	# 0 "" 2
 1291              	.LVL83:
 1292              	#NO_APP
 1293 04f8 2338F4FA 		sd	a5,-80(s0)
 160:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/cctWvJoV.s 			page 37


 1294              		.loc 2 160 5 is_stmt 1
 160:src/../h/Riscv.hpp **** }
 1295              		.loc 2 160 12 is_stmt 0
 1296 04fc 833704FB 		ld	a5,-80(s0)
 1297              	.LBE139:
 1298              	.LBE138:
 206:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 1299              		.loc 1 206 60
 1300 0500 2330F4F6 		sd	a5,-160(s0)
 207:src/Riscv.cpp ****                 PCB::running->setTimeToSleep(time);
 1301              		.loc 1 207 17 is_stmt 1
 207:src/Riscv.cpp ****                 PCB::running->setTimeToSleep(time);
 1302              		.loc 1 207 39 is_stmt 0
 1303 0504 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 1303      83B70700 
 1304 050c 23B00700 		sd	zero,0(a5)
 208:src/Riscv.cpp ****                 SleepPCBList::insertSleepingPCB();
 1305              		.loc 1 208 17 is_stmt 1
 208:src/Riscv.cpp ****                 SleepPCBList::insertSleepingPCB();
 1306              		.loc 1 208 45 is_stmt 0
 1307 0510 97070000 		la	a5,_ZN3PCB7runningE
 1307      83B70700 
 1308 0518 83B70700 		ld	a5,0(a5)
 1309              	.LVL84:
 1310              	.LBB140:
 1311              	.LBB141:
  35:src/../h/PCB.hpp ****     void setTimeToSleep(uint64 time) {timeToSleep = time;}
 1312              		.loc 3 35 39 is_stmt 1
 1313              		.loc 3 35 51 is_stmt 0
 1314 051c 23BCE700 		sd	a4,24(a5)
 1315              	.LVL85:
 1316              	.LBE141:
 1317              	.LBE140:
 209:src/Riscv.cpp ****                 PCB::dispatch();
 1318              		.loc 1 209 17 is_stmt 1
 209:src/Riscv.cpp ****                 PCB::dispatch();
 1319              		.loc 1 209 48 is_stmt 0
 1320 0520 97000000 		call	_ZN12SleepPCBList17insertSleepingPCBEv@plt
 1320      E7800000 
 1321              	.LVL86:
 210:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1322              		.loc 1 210 17 is_stmt 1
 210:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1323              		.loc 1 210 30 is_stmt 0
 1324 0528 97000000 		call	_ZN3PCB8dispatchEv@plt
 1324      E7800000 
 1325              	.LVL87:
 211:src/Riscv.cpp ****                 __asm__ volatile("li a0, 0x0");
 1326              		.loc 1 211 17 is_stmt 1
 211:src/Riscv.cpp ****                 __asm__ volatile("li a0, 0x0");
 1327              		.loc 1 211 33 is_stmt 0
 1328 0530 833704F6 		ld	a5,-160(s0)
 1329              	.LVL88:
 1330              	.LBB142:
 1331              	.LBB143:
 164:src/../h/Riscv.hpp **** }
 1332              		.loc 2 164 5 is_stmt 1
GAS LISTING /tmp/cctWvJoV.s 			page 38


 164:src/../h/Riscv.hpp **** }
 1333              		.loc 2 164 57 is_stmt 0
 1334              	#APP
 1335              	# 164 "src/../h/Riscv.hpp" 1
 1336              		csrw sstatus, a5
 1337              	# 0 "" 2
 1338              	.LVL89:
 1339              	#NO_APP
 1340              	.LBE143:
 1341              	.LBE142:
 212:src/Riscv.cpp ****             }
 1342              		.loc 1 212 17 is_stmt 1
 212:src/Riscv.cpp ****             }
 1343              		.loc 1 212 47 is_stmt 0
 1344              	#APP
 1345              	# 212 "src/Riscv.cpp" 1
 1346              		li a0, 0x0
 1347              	# 0 "" 2
 1348              	#NO_APP
 1349              	.LBE137:
 1350 053c 6FF01FEC 		j	.L29
 1351              	.LVL90:
 1352              	.L53:
 1353              	.LBB144:
 1354              	.LBB131:
 216:src/Riscv.cpp ****                 KSemaphore** semaphoreHandle;
 1355              		.loc 1 216 17 is_stmt 1
 217:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(semaphoreHandle));
 1356              		.loc 1 217 17
 218:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(val));
 1357              		.loc 1 218 17
 218:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(val));
 1358              		.loc 1 218 70 is_stmt 0
 1359              	#APP
 1360              	# 218 "src/Riscv.cpp" 1
 1361              		mv s2, a1
 1362              	# 0 "" 2
 1363              	.LVL91:
 219:src/Riscv.cpp **** 
 1364              		.loc 1 219 17 is_stmt 1
 219:src/Riscv.cpp **** 
 1365              		.loc 1 219 58 is_stmt 0
 1366              	# 219 "src/Riscv.cpp" 1
 1367              		mv s3, a2
 1368              	# 0 "" 2
 1369              	.LVL92:
 221:src/Riscv.cpp **** 
 1370              		.loc 1 221 17 is_stmt 1
 221:src/Riscv.cpp **** 
 1371              		.loc 1 221 56 is_stmt 0
 1372              	#NO_APP
 1373 0548 13058001 		li	a0,24
 1374 054c 97000000 		call	_ZN10KSemaphorenwEm@plt
 1374      E7800000 
 1375              	.LVL93:
 1376              	.LEHE2:
 1377 0554 93040500 		mv	s1,a0
GAS LISTING /tmp/cctWvJoV.s 			page 39


 1378              	.LVL94:
 1379 0558 9B850900 		sext.w	a1,s3
 1380              	.LEHB3:
 1381 055c 97000000 		call	_ZN10KSemaphoreC1Ei@plt
 1381      E7800000 
 1382              	.LVL95:
 1383              	.LEHE3:
 223:src/Riscv.cpp **** 
 1384              		.loc 1 223 17 is_stmt 1 discriminator 2
 223:src/Riscv.cpp **** 
 1385              		.loc 1 223 36 is_stmt 0 discriminator 2
 1386 0564 23309900 		sd	s1,0(s2)
 225:src/Riscv.cpp ****                         __asm__ volatile("li a0, 0xffffffffffffffff");
 1387              		.loc 1 225 17 is_stmt 1 discriminator 2
 1388 0568 63860400 		beqz	s1,.L57
 228:src/Riscv.cpp **** 
 1389              		.loc 1 228 25
 228:src/Riscv.cpp **** 
 1390              		.loc 1 228 53 is_stmt 0
 1391              	#APP
 1392              	# 228 "src/Riscv.cpp" 1
 1393              		li a0, 0
 1394              	# 0 "" 2
 1395              	#NO_APP
 1396 0570 6FF0DFE8 		j	.L29
 1397              	.L57:
 226:src/Riscv.cpp ****                 else
 1398              		.loc 1 226 25 is_stmt 1
 226:src/Riscv.cpp ****                 else
 1399              		.loc 1 226 70 is_stmt 0
 1400              	#APP
 1401              	# 226 "src/Riscv.cpp" 1
 1402              		li a0, 0xffffffffffffffff
 1403              	# 0 "" 2
 1404              	#NO_APP
 1405 0578 6FF05FE8 		j	.L29
 1406              	.LVL96:
 1407              	.L54:
 1408              	.LBE131:
 1409              	.LBB132:
 1410              	.LBB123:
 233:src/Riscv.cpp ****                 KSemaphore* kSem;
 1411              		.loc 1 233 17 is_stmt 1
 1412              	.LBB124:
 1413              	.LBB125:
 158:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 1414              		.loc 2 158 5
 159:src/../h/Riscv.hpp ****     return sstatus;
 1415              		.loc 2 159 5
 159:src/../h/Riscv.hpp ****     return sstatus;
 1416              		.loc 2 159 57 is_stmt 0
 1417              	#APP
 1418              	# 159 "src/../h/Riscv.hpp" 1
 1419              		csrr a5, sstatus
 1420              	# 0 "" 2
 1421              	.LVL97:
 1422              	#NO_APP
GAS LISTING /tmp/cctWvJoV.s 			page 40


 1423 0580 233CF4FA 		sd	a5,-72(s0)
 160:src/../h/Riscv.hpp **** }
 1424              		.loc 2 160 5 is_stmt 1
 160:src/../h/Riscv.hpp **** }
 1425              		.loc 2 160 12 is_stmt 0
 1426 0584 833784FB 		ld	a5,-72(s0)
 1427              	.LBE125:
 1428              	.LBE124:
 233:src/Riscv.cpp ****                 KSemaphore* kSem;
 1429              		.loc 1 233 60
 1430 0588 2334F4F6 		sd	a5,-152(s0)
 234:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(kSem));
 1431              		.loc 1 234 17 is_stmt 1
 235:src/Riscv.cpp ****                 volatile uint64 retval = kSem->wait();
 1432              		.loc 1 235 17
 235:src/Riscv.cpp ****                 volatile uint64 retval = kSem->wait();
 1433              		.loc 1 235 59 is_stmt 0
 1434              	#APP
 1435              	# 235 "src/Riscv.cpp" 1
 1436              		mv a0, a1
 1437              	# 0 "" 2
 1438              	.LVL98:
 236:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1439              		.loc 1 236 17 is_stmt 1
 1440              	.LEHB4:
 236:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1441              		.loc 1 236 52 is_stmt 0
 1442              	#NO_APP
 1443 0590 97000000 		call	_ZN10KSemaphore4waitEv@plt
 1443      E7800000 
 1444              	.LVL99:
 236:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1445              		.loc 1 236 53
 1446 0598 2338A4F6 		sd	a0,-144(s0)
 237:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 1447              		.loc 1 237 17 is_stmt 1
 237:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 1448              		.loc 1 237 33 is_stmt 0
 1449 059c 833784F6 		ld	a5,-152(s0)
 1450              	.LVL100:
 1451              	.LBB126:
 1452              	.LBB127:
 164:src/../h/Riscv.hpp **** }
 1453              		.loc 2 164 5 is_stmt 1
 164:src/../h/Riscv.hpp **** }
 1454              		.loc 2 164 57 is_stmt 0
 1455              	#APP
 1456              	# 164 "src/../h/Riscv.hpp" 1
 1457              		csrw sstatus, a5
 1458              	# 0 "" 2
 1459              	.LVL101:
 1460              	#NO_APP
 1461              	.LBE127:
 1462              	.LBE126:
 238:src/Riscv.cpp ****             }
 1463              		.loc 1 238 17 is_stmt 1
 238:src/Riscv.cpp ****             }
GAS LISTING /tmp/cctWvJoV.s 			page 41


 1464              		.loc 1 238 52 is_stmt 0
 1465 05a4 833704F7 		ld	a5,-144(s0)
 238:src/Riscv.cpp ****             }
 1466              		.loc 1 238 60
 1467              	#APP
 1468              	# 238 "src/Riscv.cpp" 1
 1469              		mv a0,a5
 1470              	# 0 "" 2
 1471              	#NO_APP
 1472              	.LBE123:
 1473 05ac 6FF01FE5 		j	.L29
 1474              	.LVL102:
 1475              	.L55:
 1476              	.LBB128:
 1477              	.LBB121:
 242:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(kSem));
 1478              		.loc 1 242 17 is_stmt 1
 243:src/Riscv.cpp ****                 volatile uint64 retval = kSem->signal();
 1479              		.loc 1 243 17
 243:src/Riscv.cpp ****                 volatile uint64 retval = kSem->signal();
 1480              		.loc 1 243 59 is_stmt 0
 1481              	#APP
 1482              	# 243 "src/Riscv.cpp" 1
 1483              		mv a0, a1
 1484              	# 0 "" 2
 1485              	.LVL103:
 244:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 1486              		.loc 1 244 17 is_stmt 1
 244:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 1487              		.loc 1 244 54 is_stmt 0
 1488              	#NO_APP
 1489 05b4 97000000 		call	_ZN10KSemaphore6signalEv@plt
 1489      E7800000 
 1490              	.LVL104:
 1491              	.LEHE4:
 244:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 1492              		.loc 1 244 55
 1493 05bc 233CA4F6 		sd	a0,-136(s0)
 245:src/Riscv.cpp ****             }
 1494              		.loc 1 245 17 is_stmt 1
 245:src/Riscv.cpp ****             }
 1495              		.loc 1 245 52 is_stmt 0
 1496 05c0 833784F7 		ld	a5,-136(s0)
 245:src/Riscv.cpp ****             }
 1497              		.loc 1 245 60
 1498              	#APP
 1499              	# 245 "src/Riscv.cpp" 1
 1500              		mv a0,a5
 1501              	# 0 "" 2
 1502              	#NO_APP
 1503              	.LBE121:
 1504 05c8 6FF05FE3 		j	.L29
 1505              	.LVL105:
 1506              	.L43:
 1507 05cc 93040500 		mv	s1,a0
 1508              	.LVL106:
 1509              	.LBE128:
GAS LISTING /tmp/cctWvJoV.s 			page 42


 1510              	.LBE132:
 1511              	.LBE144:
 1512              	.LBE158:
 1513              	.LBE171:
 1514              	.LBE181:
 1515              	.LBB182:
 175:src/Riscv.cpp **** 
 1516              		.loc 1 175 113
 1517 05d0 13050900 		mv	a0,s2
 1518 05d4 97000000 		call	_ZN3PCBdlEPv@plt
 1518      E7800000 
 1519              	.LVL107:
 1520 05dc 13850400 		mv	a0,s1
 1521              	.LEHB5:
 1522 05e0 97000000 		call	_Unwind_Resume@plt
 1522      E7800000 
 1523              	.LVL108:
 1524              	.LEHE5:
 1525              	.L44:
 1526 05e8 13090500 		mv	s2,a0
 1527              	.LVL109:
 1528              	.LBE182:
 1529              	.LBB183:
 1530              	.LBB172:
 1531              	.LBB159:
 1532              	.LBB145:
 1533              	.LBB133:
 221:src/Riscv.cpp **** 
 1534              		.loc 1 221 56
 1535 05ec 13850400 		mv	a0,s1
 1536 05f0 97000000 		call	_ZN10KSemaphoredlEPv@plt
 1536      E7800000 
 1537              	.LVL110:
 1538 05f8 13050900 		mv	a0,s2
 1539              	.LEHB6:
 1540 05fc 97000000 		call	_Unwind_Resume@plt
 1540      E7800000 
 1541              	.LVL111:
 1542              	.LEHE6:
 1543              	.LBE133:
 1544              	.LBE145:
 1545              	.LBE159:
 1546              	.LBE172:
 1547              	.LBE183:
 1548              	.LBE193:
 1549              	.LBE204:
 1550              	.LBE232:
 1551              	.LBE244:
 1552              	.LBE255:
 1553              		.cfi_endproc
 1554              	.LFE32:
 1555              		.globl	__gxx_personality_v0
 1556              		.section	.gcc_except_table,"a",@progbits
 1557              	.LLSDA32:
 1558 0000 FF       		.byte	0xff
 1559 0001 FF       		.byte	0xff
 1560 0002 03       		.byte	0x3
GAS LISTING /tmp/cctWvJoV.s 			page 43


 1561 0003 5B       		.byte	0x5b
 1562 0004 00000000 		.4byte	.LEHB0-.LFB32
 1563 0008 00000000 		.4byte	.LEHE0-.LEHB0
 1564 000c 00000000 		.4byte	0
 1565 0010 00       		.byte	0
 1566 0011 00000000 		.4byte	.LEHB1-.LFB32
 1567 0015 00000000 		.4byte	.LEHE1-.LEHB1
 1568 0019 00000000 		.4byte	.L43-.LFB32
 1569 001d 00       		.byte	0
 1570 001e 00000000 		.4byte	.LEHB2-.LFB32
 1571 0022 00000000 		.4byte	.LEHE2-.LEHB2
 1572 0026 00000000 		.4byte	0
 1573 002a 00       		.byte	0
 1574 002b 00000000 		.4byte	.LEHB3-.LFB32
 1575 002f 00000000 		.4byte	.LEHE3-.LEHB3
 1576 0033 00000000 		.4byte	.L44-.LFB32
 1577 0037 00       		.byte	0
 1578 0038 00000000 		.4byte	.LEHB4-.LFB32
 1579 003c 00000000 		.4byte	.LEHE4-.LEHB4
 1580 0040 00000000 		.4byte	0
 1581 0044 00       		.byte	0
 1582 0045 00000000 		.4byte	.LEHB5-.LFB32
 1583 0049 00000000 		.4byte	.LEHE5-.LEHB5
 1584 004d 00000000 		.4byte	0
 1585 0051 00       		.byte	0
 1586 0052 00000000 		.4byte	.LEHB6-.LFB32
 1587 0056 00000000 		.4byte	.LEHE6-.LEHB6
 1588 005a 00000000 		.4byte	0
 1589 005e 00       		.byte	0
 1590              		.text
 1592              		.section	.rodata.str1.8
 1593 0013 00000000 		.align	3
 1593      00
 1594              	.LC1:
 1595 0018 456E642E 		.string	"End..."
 1595      2E2E00
 1596              		.text
 1597              		.align	2
 1598              		.globl	_ZN5Riscv10kernelMainEv
 1600              	_ZN5Riscv10kernelMainEv:
 1601              	.LFB33:
 270:src/Riscv.cpp ****     initSystem();
 1602              		.loc 1 270 1 is_stmt 1
 1603              		.cfi_startproc
 1604              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 1605              		.cfi_lsda 0x1b,.LLSDA33
 1606 0604 130101FE 		addi	sp,sp,-32
 1607              		.cfi_def_cfa_offset 32
 1608 0608 233C1100 		sd	ra,24(sp)
 1609 060c 23388100 		sd	s0,16(sp)
 1610 0610 23349100 		sd	s1,8(sp)
 1611 0614 23302101 		sd	s2,0(sp)
 1612              		.cfi_offset 1, -8
 1613              		.cfi_offset 8, -16
 1614              		.cfi_offset 9, -24
 1615              		.cfi_offset 18, -32
 1616 0618 13040102 		addi	s0,sp,32
GAS LISTING /tmp/cctWvJoV.s 			page 44


 1617              		.cfi_def_cfa 8, 0
 271:src/Riscv.cpp **** 
 1618              		.loc 1 271 5
 1619              	.LEHB7:
 271:src/Riscv.cpp **** 
 1620              		.loc 1 271 15 is_stmt 0
 1621 061c 97000000 		call	_ZN5Riscv10initSystemEv
 1621      E7800000 
 1622              	.LVL112:
 273:src/Riscv.cpp **** 
 1623              		.loc 1 273 5 is_stmt 1
 273:src/Riscv.cpp **** 
 1624              		.loc 1 273 21 is_stmt 0
 1625 0624 97000000 		call	_ZN5Riscv16enableInterruptsEv
 1625      E7800000 
 1626              	.LVL113:
 275:src/Riscv.cpp **** 
 1627              		.loc 1 275 5 is_stmt 1
 275:src/Riscv.cpp **** 
 1628              		.loc 1 275 63 is_stmt 0
 1629 062c 37150000 		li	a0,4096
 1630 0630 97000000 		call	_Z7kmallocm@plt
 1630      E7800000 
 1631              	.LVL114:
 1632 0638 13090500 		mv	s2,a0
 275:src/Riscv.cpp **** 
 1633              		.loc 1 275 103
 1634 063c 13050005 		li	a0,80
 1635 0640 97000000 		call	_ZN3PCBnwEm@plt
 1635      E7800000 
 1636              	.LVL115:
 1637              	.LEHE7:
 1638 0648 93040500 		mv	s1,a0
 1639 064c 13072000 		li	a4,2
 1640 0650 93060900 		mv	a3,s2
 1641 0654 13060000 		li	a2,0
 1642 0658 97050000 		lla	a1,_ZN5Riscv15userMainWrapperEPv
 1642      93850500 
 1643              	.LEHB8:
 1644 0660 97000000 		call	_ZN3PCBC1EPFvPvES0_S0_m@plt
 1644      E7800000 
 1645              	.LVL116:
 1646              	.LEHE8:
 1647              	.L60:
 277:src/Riscv.cpp ****     {
 1648              		.loc 1 277 5 is_stmt 1
 277:src/Riscv.cpp ****     {
 1649              		.loc 1 277 31
 1650              	.LBB256:
 1651              	.LBB257:
  33:src/../h/PCB.hpp ****     void setState(State s) {state = s;}
 1652              		.loc 3 33 23
  33:src/../h/PCB.hpp ****     void setState(State s) {state = s;}
 1653              		.loc 3 33 30 is_stmt 0
 1654 0668 03A78403 		lw	a4,56(s1)
 1655              	.LVL117:
 1656              	.LBE257:
GAS LISTING /tmp/cctWvJoV.s 			page 45


 1657              	.LBE256:
 277:src/Riscv.cpp ****     {
 1658              		.loc 1 277 31
 1659 066c 93073000 		li	a5,3
 1660 0670 6308F700 		beq	a4,a5,.L59
 279:src/Riscv.cpp ****     }
 1661              		.loc 1 279 9 is_stmt 1
 1662              	.LEHB9:
 279:src/Riscv.cpp ****     }
 1663              		.loc 1 279 24 is_stmt 0
 1664 0674 97000000 		call	thread_dispatch@plt
 1664      E7800000 
 1665              	.LVL118:
 277:src/Riscv.cpp ****     {
 1666              		.loc 1 277 5
 1667 067c 6FF0DFFE 		j	.L60
 1668              	.L59:
 284:src/Riscv.cpp **** 
 1669              		.loc 1 284 5 is_stmt 1
 284:src/Riscv.cpp **** 
 1670              		.loc 1 284 22 is_stmt 0
 1671 0680 97000000 		call	_ZN5Riscv17disableInterruptsEv
 1671      E7800000 
 1672              	.LVL119:
 286:src/Riscv.cpp **** 
 1673              		.loc 1 286 5 is_stmt 1
 286:src/Riscv.cpp **** 
 1674              		.loc 1 286 14 is_stmt 0
 1675 0688 97000000 		call	_ZN5Riscv9endSystemEv
 1675      E7800000 
 1676              	.LVL120:
 288:src/Riscv.cpp **** }
 1677              		.loc 1 288 5 is_stmt 1
 288:src/Riscv.cpp **** }
 1678              		.loc 1 288 23 is_stmt 0
 1679 0690 17050000 		lla	a0,.LC1
 1679      13050500 
 1680 0698 97000000 		call	_ZN5Riscv11printStringEPKc
 1680      E7800000 
 1681              	.LVL121:
 1682              	.LEHE9:
 289:src/Riscv.cpp **** 
 1683              		.loc 1 289 1
 1684 06a0 83308101 		ld	ra,24(sp)
 1685              		.cfi_remember_state
 1686              		.cfi_restore 1
 1687 06a4 03340101 		ld	s0,16(sp)
 1688              		.cfi_restore 8
 1689              		.cfi_def_cfa 2, 32
 1690 06a8 83348100 		ld	s1,8(sp)
 1691              		.cfi_restore 9
 1692 06ac 03390100 		ld	s2,0(sp)
 1693              		.cfi_restore 18
 1694 06b0 13010102 		addi	sp,sp,32
 1695              		.cfi_def_cfa_offset 0
 1696 06b4 67800000 		jr	ra
 1697              	.L62:
GAS LISTING /tmp/cctWvJoV.s 			page 46


 1698              		.cfi_restore_state
 1699 06b8 13090500 		mv	s2,a0
 275:src/Riscv.cpp **** 
 1700              		.loc 1 275 103
 1701 06bc 13850400 		mv	a0,s1
 1702 06c0 97000000 		call	_ZN3PCBdlEPv@plt
 1702      E7800000 
 1703              	.LVL122:
 1704 06c8 13050900 		mv	a0,s2
 1705              	.LEHB10:
 1706 06cc 97000000 		call	_Unwind_Resume@plt
 1706      E7800000 
 1707              	.LVL123:
 1708              	.LEHE10:
 1709              		.cfi_endproc
 1710              	.LFE33:
 1711              		.section	.gcc_except_table
 1712              	.LLSDA33:
 1713 005f FF       		.byte	0xff
 1714 0060 FF       		.byte	0xff
 1715 0061 03       		.byte	0x3
 1716 0062 34       		.byte	0x34
 1717 0063 00000000 		.4byte	.LEHB7-.LFB33
 1718 0067 00000000 		.4byte	.LEHE7-.LEHB7
 1719 006b 00000000 		.4byte	0
 1720 006f 00       		.byte	0
 1721 0070 00000000 		.4byte	.LEHB8-.LFB33
 1722 0074 00000000 		.4byte	.LEHE8-.LEHB8
 1723 0078 00000000 		.4byte	.L62-.LFB33
 1724 007c 00       		.byte	0
 1725 007d 00000000 		.4byte	.LEHB9-.LFB33
 1726 0081 00000000 		.4byte	.LEHE9-.LEHB9
 1727 0085 00000000 		.4byte	0
 1728 0089 00       		.byte	0
 1729 008a 00000000 		.4byte	.LEHB10-.LFB33
 1730 008e 00000000 		.4byte	.LEHE10-.LEHB10
 1731 0092 00000000 		.4byte	0
 1732 0096 00       		.byte	0
 1733              		.text
 1735              		.section	.rodata
 1736              		.align	3
 1737              		.set	.LANCHOR0,. + 0
 1740              	_ZZN5Riscv12printIntegerEmE6digits:
 1741 0000 30313233 		.string	"0123456789"
 1741      34353637 
 1741      383900
 1742              		.bss
 1743              		.align	3
 1744              		.set	.LANCHOR1,. + 0
 1747              	_ZZN5Riscv20handleSupervisorTrapEvE5total:
 1748 0000 00000000 		.zero	8
 1748      00000000 
 1749              		.text
 1750              	.Letext0:
 1751              		.file 4 "src/../h/../lib/hw.h"
 1752              		.file 5 "src/../h/KSemaphore.hpp"
 1753              		.file 6 "src/../h/SleepPCBList.hpp"
GAS LISTING /tmp/cctWvJoV.s 			page 47


 1754              		.file 7 "src/../h/KConsole.hpp"
 1755              		.file 8 "src/../test/userMain.hpp"
 1756              		.file 9 "src/../h/MemoryAllocator.hpp"
 1757              		.file 10 "src/../h/syscall_c.h"
 1758              		.file 11 "src/../lib/console.h"
 6740              		.align	3
 6743              	DW.ref.__gxx_personality_v0:
 6744 0000 00000000 		.dword	__gxx_personality_v0
 6744      00000000 
 6745              		.ident	"GCC: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0"
 6746              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/cctWvJoV.s 			page 48


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Riscv.cpp
     /tmp/cctWvJoV.s:9      .text:0000000000000000 _ZN5Riscv15userMainWrapperEPv
     /tmp/cctWvJoV.s:13     .text:0000000000000000 .L0 
     /tmp/cctWvJoV.s:14     .text:0000000000000000 .L0 
     /tmp/cctWvJoV.s:15     .text:0000000000000004 .L0 
     /tmp/cctWvJoV.s:18     .text:000000000000000c .L0 
     /tmp/cctWvJoV.s:19     .text:000000000000000c .L0 
     /tmp/cctWvJoV.s:21     .text:0000000000000010 .L0 
     /tmp/cctWvJoV.s:23     .text:0000000000000010 .L0 
     /tmp/cctWvJoV.s:24     .text:0000000000000010 .L0 
     /tmp/cctWvJoV.s:27     .text:0000000000000018 .L0 
     /tmp/cctWvJoV.s:28     .text:000000000000001c .L0 
     /tmp/cctWvJoV.s:30     .text:0000000000000020 .L0 
     /tmp/cctWvJoV.s:31     .text:0000000000000020 .L0 
     /tmp/cctWvJoV.s:33     .text:0000000000000024 .L0 
     /tmp/cctWvJoV.s:35     .text:0000000000000028 .L0 
     /tmp/cctWvJoV.s:41     .text:0000000000000028 _ZN5Riscv10initSystemEv
     /tmp/cctWvJoV.s:44     .text:0000000000000028 .L0 
     /tmp/cctWvJoV.s:45     .text:0000000000000028 .L0 
     /tmp/cctWvJoV.s:46     .text:000000000000002c .L0 
     /tmp/cctWvJoV.s:49     .text:0000000000000034 .L0 
     /tmp/cctWvJoV.s:50     .text:0000000000000034 .L0 
     /tmp/cctWvJoV.s:52     .text:0000000000000038 .L0 
     /tmp/cctWvJoV.s:54     .text:0000000000000038 .L0 
     /tmp/cctWvJoV.s:55     .text:0000000000000038 .L0 
     /tmp/cctWvJoV.s:61     .text:0000000000000040 .L0 
  src/../h/Riscv.hpp:118    .text:0000000000000040 .L0 
     /tmp/cctWvJoV.s:71     .text:0000000000000044 .L0 
     /tmp/cctWvJoV.s:72     .text:0000000000000044 .L0 
     /tmp/cctWvJoV.s:75     .text:000000000000004c .L0 
     /tmp/cctWvJoV.s:76     .text:000000000000004c .L0 
     /tmp/cctWvJoV.s:79     .text:0000000000000054 .L0 
     /tmp/cctWvJoV.s:80     .text:0000000000000058 .L0 
     /tmp/cctWvJoV.s:82     .text:000000000000005c .L0 
     /tmp/cctWvJoV.s:83     .text:000000000000005c .L0 
     /tmp/cctWvJoV.s:85     .text:0000000000000060 .L0 
     /tmp/cctWvJoV.s:87     .text:0000000000000064 .L0 
     /tmp/cctWvJoV.s:93     .text:0000000000000064 _ZN5Riscv16enableInterruptsEv
     /tmp/cctWvJoV.s:96     .text:0000000000000064 .L0 
     /tmp/cctWvJoV.s:97     .text:0000000000000064 .L0 
     /tmp/cctWvJoV.s:98     .text:0000000000000068 .L0 
     /tmp/cctWvJoV.s:100    .text:000000000000006c .L0 
     /tmp/cctWvJoV.s:102    .text:0000000000000070 .L0 
     /tmp/cctWvJoV.s:107    .text:0000000000000070 .L0 
     /tmp/cctWvJoV.s:108    .text:0000000000000070 .L0 
     /tmp/cctWvJoV.s:109    .text:0000000000000070 .L0 
     /tmp/cctWvJoV.s:119    .text:0000000000000078 .L0 
     /tmp/cctWvJoV.s:120    .text:000000000000007c .L0 
     /tmp/cctWvJoV.s:121    .text:000000000000007c .L0 
     /tmp/cctWvJoV.s:123    .text:0000000000000080 .L0 
     /tmp/cctWvJoV.s:125    .text:0000000000000084 .L0 
     /tmp/cctWvJoV.s:131    .text:0000000000000084 _ZN5Riscv17disableInterruptsEv
     /tmp/cctWvJoV.s:134    .text:0000000000000084 .L0 
     /tmp/cctWvJoV.s:135    .text:0000000000000084 .L0 
     /tmp/cctWvJoV.s:136    .text:0000000000000088 .L0 
     /tmp/cctWvJoV.s:138    .text:000000000000008c .L0 
GAS LISTING /tmp/cctWvJoV.s 			page 49


     /tmp/cctWvJoV.s:140    .text:0000000000000090 .L0 
     /tmp/cctWvJoV.s:145    .text:0000000000000090 .L0 
     /tmp/cctWvJoV.s:146    .text:0000000000000090 .L0 
     /tmp/cctWvJoV.s:147    .text:0000000000000090 .L0 
     /tmp/cctWvJoV.s:157    .text:0000000000000098 .L0 
     /tmp/cctWvJoV.s:158    .text:000000000000009c .L0 
     /tmp/cctWvJoV.s:159    .text:000000000000009c .L0 
     /tmp/cctWvJoV.s:161    .text:00000000000000a0 .L0 
     /tmp/cctWvJoV.s:163    .text:00000000000000a4 .L0 
     /tmp/cctWvJoV.s:169    .text:00000000000000a4 _ZN5Riscv9endSystemEv
     /tmp/cctWvJoV.s:172    .text:00000000000000a4 .L0 
     /tmp/cctWvJoV.s:173    .text:00000000000000a4 .L0 
     /tmp/cctWvJoV.s:174    .text:00000000000000a8 .L0 
     /tmp/cctWvJoV.s:177    .text:00000000000000b0 .L0 
     /tmp/cctWvJoV.s:178    .text:00000000000000b0 .L0 
     /tmp/cctWvJoV.s:180    .text:00000000000000b4 .L0 
     /tmp/cctWvJoV.s:182    .text:00000000000000b4 .L0 
     /tmp/cctWvJoV.s:183    .text:00000000000000b4 .L0 
     /tmp/cctWvJoV.s:186    .text:00000000000000bc .L0 
     /tmp/cctWvJoV.s:187    .text:00000000000000c0 .L0 
     /tmp/cctWvJoV.s:189    .text:00000000000000c4 .L0 
     /tmp/cctWvJoV.s:190    .text:00000000000000c4 .L0 
     /tmp/cctWvJoV.s:192    .text:00000000000000c8 .L0 
     /tmp/cctWvJoV.s:194    .text:00000000000000cc .L0 
     /tmp/cctWvJoV.s:200    .text:00000000000000cc _ZN5Riscv10popSppSpieEv
     /tmp/cctWvJoV.s:203    .text:00000000000000cc .L0 
     /tmp/cctWvJoV.s:204    .text:00000000000000cc .L0 
     /tmp/cctWvJoV.s:205    .text:00000000000000d0 .L0 
     /tmp/cctWvJoV.s:207    .text:00000000000000d4 .L0 
     /tmp/cctWvJoV.s:209    .text:00000000000000d8 .L0 
     /tmp/cctWvJoV.s:211    .text:00000000000000d8 .L0 
       src/Riscv.cpp:40     .text:00000000000000d8 .L0 
     /tmp/cctWvJoV.s:217    .text:00000000000000dc .L0 
       src/Riscv.cpp:41     .text:00000000000000dc .L0 
     /tmp/cctWvJoV.s:223    .text:00000000000000e0 .L0 
     /tmp/cctWvJoV.s:224    .text:00000000000000e4 .L0 
     /tmp/cctWvJoV.s:225    .text:00000000000000e4 .L0 
     /tmp/cctWvJoV.s:227    .text:00000000000000e8 .L0 
     /tmp/cctWvJoV.s:229    .text:00000000000000ec .L0 
     /tmp/cctWvJoV.s:235    .text:00000000000000ec _ZN5Riscv11printStringEPKc
     /tmp/cctWvJoV.s:238    .text:00000000000000ec .L0 
     /tmp/cctWvJoV.s:240    .text:00000000000000ec .L0 
     /tmp/cctWvJoV.s:241    .text:00000000000000f0 .L0 
     /tmp/cctWvJoV.s:246    .text:0000000000000100 .L0 
     /tmp/cctWvJoV.s:247    .text:0000000000000100 .L0 
     /tmp/cctWvJoV.s:248    .text:0000000000000100 .L0 
     /tmp/cctWvJoV.s:249    .text:0000000000000100 .L0 
     /tmp/cctWvJoV.s:251    .text:0000000000000104 .L0 
     /tmp/cctWvJoV.s:256    .text:0000000000000108 .L0 
     /tmp/cctWvJoV.s:257    .text:0000000000000108 .L0 
     /tmp/cctWvJoV.s:258    .text:0000000000000108 .L0 
  src/../h/Riscv.hpp:159    .text:0000000000000108 .L0 
     /tmp/cctWvJoV.s:266    .text:0000000000000110 .L0 
     /tmp/cctWvJoV.s:267    .text:0000000000000110 .L0 
     /tmp/cctWvJoV.s:274    .text:0000000000000114 .L0 
     /tmp/cctWvJoV.s:275    .text:0000000000000114 .L0 
     /tmp/cctWvJoV.s:276    .text:0000000000000114 .L0 
GAS LISTING /tmp/cctWvJoV.s 			page 50


     /tmp/cctWvJoV.s:287    .text:000000000000011c .L0 
     /tmp/cctWvJoV.s:288    .text:000000000000011c .L0 
     /tmp/cctWvJoV.s:289    .text:000000000000011c .L0 
     /tmp/cctWvJoV.s:291    .text:0000000000000120 .L0 
     /tmp/cctWvJoV.s:293    .text:0000000000000124 .L0 
     /tmp/cctWvJoV.s:294    .text:0000000000000124 .L0 
     /tmp/cctWvJoV.s:297    .text:000000000000012c .L0 
     /tmp/cctWvJoV.s:298    .text:000000000000012c .L0 
     /tmp/cctWvJoV.s:301    .text:0000000000000130 .L0 
     /tmp/cctWvJoV.s:304    .text:0000000000000134 .L0 
     /tmp/cctWvJoV.s:305    .text:0000000000000134 .L0 
     /tmp/cctWvJoV.s:308    .text:0000000000000138 .L0 
     /tmp/cctWvJoV.s:314    .text:0000000000000140 .L0 
  src/../h/Riscv.hpp:150    .text:0000000000000140 .L0 
     /tmp/cctWvJoV.s:324    .text:0000000000000144 .L0 
     /tmp/cctWvJoV.s:325    .text:0000000000000148 .L0 
     /tmp/cctWvJoV.s:327    .text:000000000000014c .L0 
     /tmp/cctWvJoV.s:328    .text:000000000000014c .L0 
     /tmp/cctWvJoV.s:330    .text:0000000000000150 .L0 
     /tmp/cctWvJoV.s:333    .text:0000000000000154 .L0 
     /tmp/cctWvJoV.s:335    .text:0000000000000158 .L0 
     /tmp/cctWvJoV.s:337    .text:000000000000015c .L0 
     /tmp/cctWvJoV.s:343    .text:000000000000015c _ZN5Riscv12printIntegerEm
     /tmp/cctWvJoV.s:346    .text:000000000000015c .L0 
     /tmp/cctWvJoV.s:348    .text:000000000000015c .L0 
     /tmp/cctWvJoV.s:349    .text:0000000000000160 .L0 
     /tmp/cctWvJoV.s:354    .text:0000000000000170 .L0 
     /tmp/cctWvJoV.s:355    .text:0000000000000170 .L0 
     /tmp/cctWvJoV.s:356    .text:0000000000000170 .L0 
     /tmp/cctWvJoV.s:357    .text:0000000000000170 .L0 
     /tmp/cctWvJoV.s:359    .text:0000000000000174 .L0 
     /tmp/cctWvJoV.s:363    .text:0000000000000174 .L0 
     /tmp/cctWvJoV.s:364    .text:0000000000000174 .L0 
     /tmp/cctWvJoV.s:365    .text:0000000000000174 .L0 
  src/../h/Riscv.hpp:159    .text:0000000000000174 .L0 
     /tmp/cctWvJoV.s:373    .text:000000000000017c .L0 
     /tmp/cctWvJoV.s:374    .text:000000000000017c .L0 
     /tmp/cctWvJoV.s:381    .text:0000000000000180 .L0 
     /tmp/cctWvJoV.s:382    .text:0000000000000180 .L0 
     /tmp/cctWvJoV.s:383    .text:0000000000000180 .L0 
     /tmp/cctWvJoV.s:393    .text:0000000000000188 .L0 
     /tmp/cctWvJoV.s:394    .text:0000000000000188 .L0 
     /tmp/cctWvJoV.s:395    .text:0000000000000188 .L0 
     /tmp/cctWvJoV.s:396    .text:0000000000000188 .L0 
     /tmp/cctWvJoV.s:397    .text:0000000000000188 .L0 
     /tmp/cctWvJoV.s:398    .text:0000000000000188 .L0 
     /tmp/cctWvJoV.s:399    .text:0000000000000188 .L0 
     /tmp/cctWvJoV.s:400    .text:0000000000000188 .L0 
     /tmp/cctWvJoV.s:403    .text:000000000000018c .L0 
     /tmp/cctWvJoV.s:404    .text:000000000000018c .L0 
     /tmp/cctWvJoV.s:408    .text:0000000000000190 .L0 
     /tmp/cctWvJoV.s:409    .text:0000000000000190 .L0 
     /tmp/cctWvJoV.s:410    .text:0000000000000190 .L0 
     /tmp/cctWvJoV.s:414    .text:0000000000000198 .L0 
     /tmp/cctWvJoV.s:420    .text:00000000000001b0 .L0 
     /tmp/cctWvJoV.s:426    .text:00000000000001c0 .L0 
     /tmp/cctWvJoV.s:428    .text:00000000000001c4 .L0 
GAS LISTING /tmp/cctWvJoV.s 			page 51


     /tmp/cctWvJoV.s:431    .text:00000000000001c8 .L0 
     /tmp/cctWvJoV.s:436    .text:00000000000001d0 .L0 
     /tmp/cctWvJoV.s:437    .text:00000000000001d0 .L0 
     /tmp/cctWvJoV.s:441    .text:00000000000001d8 .L0 
     /tmp/cctWvJoV.s:442    .text:00000000000001d8 .L0 
     /tmp/cctWvJoV.s:450    .text:00000000000001f0 .L0 
     /tmp/cctWvJoV.s:451    .text:00000000000001f0 .L0 
     /tmp/cctWvJoV.s:455    .text:00000000000001fc .L0 
     /tmp/cctWvJoV.s:456    .text:00000000000001fc .L0 
     /tmp/cctWvJoV.s:459    .text:0000000000000200 .L0 
     /tmp/cctWvJoV.s:465    .text:0000000000000208 .L0 
  src/../h/Riscv.hpp:150    .text:0000000000000208 .L0 
     /tmp/cctWvJoV.s:475    .text:000000000000020c .L0 
     /tmp/cctWvJoV.s:476    .text:0000000000000210 .L0 
     /tmp/cctWvJoV.s:478    .text:0000000000000214 .L0 
     /tmp/cctWvJoV.s:479    .text:0000000000000214 .L0 
     /tmp/cctWvJoV.s:481    .text:0000000000000218 .L0 
     /tmp/cctWvJoV.s:483    .text:000000000000021c .L0 
     /tmp/cctWvJoV.s:485    .text:0000000000000220 .L0 
     /tmp/cctWvJoV.s:487    .text:0000000000000224 .L0 
     /tmp/cctWvJoV.s:498    .text:0000000000000224 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/cctWvJoV.s:501    .text:0000000000000224 .L0 
     /tmp/cctWvJoV.s:6743   .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/cctWvJoV.s:504    .text:0000000000000224 .L0 
     /tmp/cctWvJoV.s:505    .text:0000000000000228 .L0 
     /tmp/cctWvJoV.s:513    .text:0000000000000244 .L0 
     /tmp/cctWvJoV.s:514    .text:0000000000000244 .L0 
     /tmp/cctWvJoV.s:515    .text:0000000000000244 .L0 
     /tmp/cctWvJoV.s:516    .text:0000000000000244 .L0 
     /tmp/cctWvJoV.s:517    .text:0000000000000244 .L0 
     /tmp/cctWvJoV.s:518    .text:0000000000000244 .L0 
     /tmp/cctWvJoV.s:519    .text:0000000000000244 .L0 
     /tmp/cctWvJoV.s:521    .text:0000000000000248 .L0 
     /tmp/cctWvJoV.s:523    .text:0000000000000248 .L0 
     /tmp/cctWvJoV.s:524    .text:0000000000000248 .L0 
       src/Riscv.cpp:93     .text:0000000000000248 .L0 
     /tmp/cctWvJoV.s:534    .text:000000000000024c .L0 
     /tmp/cctWvJoV.s:535    .text:000000000000024c .L0 
     /tmp/cctWvJoV.s:536    .text:000000000000024c .L0 
  src/../h/Riscv.hpp:93     .text:000000000000024c .L0 
     /tmp/cctWvJoV.s:544    .text:0000000000000254 .L0 
     /tmp/cctWvJoV.s:545    .text:0000000000000254 .L0 
     /tmp/cctWvJoV.s:551    .text:0000000000000258 .L0 
     /tmp/cctWvJoV.s:565    .text:0000000000000284 .L0 
     /tmp/cctWvJoV.s:566    .text:0000000000000284 .L0 
     /tmp/cctWvJoV.s:567    .text:0000000000000284 .L0 
     /tmp/cctWvJoV.s:568    .text:0000000000000284 .L0 
       src/Riscv.cpp:143    .text:0000000000000284 .L0 
     /tmp/cctWvJoV.s:578    .text:0000000000000288 .L0 
     /tmp/cctWvJoV.s:579    .text:0000000000000288 .L0 
     /tmp/cctWvJoV.s:580    .text:0000000000000288 .L0 
  src/../h/Riscv.hpp:103    .text:0000000000000288 .L0 
     /tmp/cctWvJoV.s:588    .text:0000000000000290 .L0 
     /tmp/cctWvJoV.s:589    .text:0000000000000290 .L0 
     /tmp/cctWvJoV.s:593    .text:0000000000000294 .L0 
     /tmp/cctWvJoV.s:595    .text:0000000000000298 .L0 
     /tmp/cctWvJoV.s:596    .text:0000000000000298 .L0 
GAS LISTING /tmp/cctWvJoV.s 			page 52


     /tmp/cctWvJoV.s:601    .text:00000000000002a4 .L0 
     /tmp/cctWvJoV.s:611    .text:00000000000002ac .L0 
     /tmp/cctWvJoV.s:623    .text:00000000000002b4 .L0 
     /tmp/cctWvJoV.s:637    .text:00000000000002bc .L0 
     /tmp/cctWvJoV.s:653    .text:00000000000002c4 .L0 
     /tmp/cctWvJoV.s:671    .text:00000000000002cc .L0 
     /tmp/cctWvJoV.s:691    .text:00000000000002d4 .L0 
     /tmp/cctWvJoV.s:713    .text:00000000000002dc .L0 
     /tmp/cctWvJoV.s:737    .text:00000000000002e4 .L0 
     /tmp/cctWvJoV.s:763    .text:00000000000002ec .L0 
     /tmp/cctWvJoV.s:767    .text:00000000000002f4 .L0 
     /tmp/cctWvJoV.s:768    .text:00000000000002f4 .L0 
       src/Riscv.cpp:250    .text:00000000000002f4 .L0 
     /tmp/cctWvJoV.s:775    .text:00000000000002f8 .L0 
     /tmp/cctWvJoV.s:777    .text:00000000000002f8 .L0 
     /tmp/cctWvJoV.s:779    .text:00000000000002fc .L0 
     /tmp/cctWvJoV.s:788    .text:0000000000000314 .L0 
       src/Riscv.cpp:252    .text:0000000000000314 .L0 
     /tmp/cctWvJoV.s:810    .text:000000000000031c .L0 
     /tmp/cctWvJoV.s:816    .text:000000000000032c .L0 
     /tmp/cctWvJoV.s:817    .text:000000000000032c .L0 
     /tmp/cctWvJoV.s:818    .text:000000000000032c .L0 
     /tmp/cctWvJoV.s:824    .text:0000000000000334 .L0 
     /tmp/cctWvJoV.s:825    .text:0000000000000334 .L0 
     /tmp/cctWvJoV.s:826    .text:0000000000000338 .L0 
     /tmp/cctWvJoV.s:827    .text:0000000000000338 .L0 
     /tmp/cctWvJoV.s:829    .text:000000000000033c .L0 
     /tmp/cctWvJoV.s:830    .text:000000000000033c .L0 
     /tmp/cctWvJoV.s:832    .text:0000000000000340 .L0 
     /tmp/cctWvJoV.s:834    .text:0000000000000344 .L0 
     /tmp/cctWvJoV.s:836    .text:0000000000000348 .L0 
     /tmp/cctWvJoV.s:838    .text:000000000000034c .L0 
     /tmp/cctWvJoV.s:840    .text:0000000000000350 .L0 
     /tmp/cctWvJoV.s:842    .text:0000000000000354 .L0 
     /tmp/cctWvJoV.s:846    .text:0000000000000358 .L0 
     /tmp/cctWvJoV.s:850    .text:0000000000000358 .L0 
     /tmp/cctWvJoV.s:853    .text:0000000000000358 .L0 
     /tmp/cctWvJoV.s:854    .text:0000000000000358 .L0 
     /tmp/cctWvJoV.s:855    .text:0000000000000358 .L0 
     /tmp/cctWvJoV.s:866    .text:0000000000000360 .L0 
     /tmp/cctWvJoV.s:867    .text:0000000000000360 .L0 
     /tmp/cctWvJoV.s:868    .text:0000000000000360 .L0 
     /tmp/cctWvJoV.s:873    .text:0000000000000374 .L0 
     /tmp/cctWvJoV.s:874    .text:0000000000000374 .L0 
     /tmp/cctWvJoV.s:880    .text:0000000000000388 .L0 
     /tmp/cctWvJoV.s:881    .text:0000000000000388 .L0 
     /tmp/cctWvJoV.s:885    .text:0000000000000390 .L0 
     /tmp/cctWvJoV.s:886    .text:0000000000000390 .L0 
     /tmp/cctWvJoV.s:893    .text:000000000000039c .L0 
     /tmp/cctWvJoV.s:894    .text:000000000000039c .L0 
     /tmp/cctWvJoV.s:899    .text:00000000000003a0 .L0 
     /tmp/cctWvJoV.s:901    .text:00000000000003a4 .L0 
     /tmp/cctWvJoV.s:906    .text:00000000000003a8 .L0 
     /tmp/cctWvJoV.s:907    .text:00000000000003a8 .L0 
     /tmp/cctWvJoV.s:908    .text:00000000000003a8 .L0 
  src/../h/Riscv.hpp:103    .text:00000000000003a8 .L0 
     /tmp/cctWvJoV.s:916    .text:00000000000003b0 .L0 
GAS LISTING /tmp/cctWvJoV.s 			page 53


     /tmp/cctWvJoV.s:917    .text:00000000000003b0 .L0 
     /tmp/cctWvJoV.s:921    .text:00000000000003b4 .L0 
     /tmp/cctWvJoV.s:925    .text:00000000000003b8 .L0 
     /tmp/cctWvJoV.s:926    .text:00000000000003b8 .L0 
     /tmp/cctWvJoV.s:927    .text:00000000000003b8 .L0 
  src/../h/Riscv.hpp:159    .text:00000000000003b8 .L0 
     /tmp/cctWvJoV.s:935    .text:00000000000003c0 .L0 
     /tmp/cctWvJoV.s:936    .text:00000000000003c0 .L0 
     /tmp/cctWvJoV.s:940    .text:00000000000003c4 .L0 
     /tmp/cctWvJoV.s:942    .text:00000000000003c8 .L0 
     /tmp/cctWvJoV.s:943    .text:00000000000003c8 .L0 
     /tmp/cctWvJoV.s:945    .text:00000000000003cc .L0 
     /tmp/cctWvJoV.s:946    .text:00000000000003cc .L0 
     /tmp/cctWvJoV.s:949    .text:00000000000003d4 .L0 
     /tmp/cctWvJoV.s:950    .text:00000000000003d4 .L0 
     /tmp/cctWvJoV.s:955    .text:00000000000003d8 .L0 
  src/../h/Riscv.hpp:164    .text:00000000000003d8 .L0 
     /tmp/cctWvJoV.s:965    .text:00000000000003dc .L0 
     /tmp/cctWvJoV.s:966    .text:00000000000003dc .L0 
     /tmp/cctWvJoV.s:971    .text:00000000000003e0 .L0 
  src/../h/Riscv.hpp:108    .text:00000000000003e0 .L0 
     /tmp/cctWvJoV.s:978    .text:00000000000003e4 .L0 
     /tmp/cctWvJoV.s:988    .text:00000000000003e8 .L0 
     /tmp/cctWvJoV.s:989    .text:00000000000003e8 .L0 
       src/Riscv.cpp:151    .text:00000000000003e8 .L0 
     /tmp/cctWvJoV.s:996    .text:00000000000003ec .L0 
     /tmp/cctWvJoV.s:997    .text:00000000000003ec .L0 
     /tmp/cctWvJoV.s:999    .text:00000000000003ec .L0 
     /tmp/cctWvJoV.s:1004   .text:00000000000003f8 .L0 
       src/Riscv.cpp:154    .text:00000000000003f8 .L0 
     /tmp/cctWvJoV.s:1015   .text:00000000000003fc .L0 
     /tmp/cctWvJoV.s:1016   .text:00000000000003fc .L0 
     /tmp/cctWvJoV.s:1021   .text:0000000000000400 .L0 
  src/../h/Riscv.hpp:108    .text:0000000000000400 .L0 
     /tmp/cctWvJoV.s:1029   .text:0000000000000404 .L0 
     /tmp/cctWvJoV.s:1038   .text:0000000000000408 .L0 
     /tmp/cctWvJoV.s:1039   .text:0000000000000408 .L0 
       src/Riscv.cpp:159    .text:0000000000000408 .L0 
     /tmp/cctWvJoV.s:1046   .text:000000000000040c .L0 
     /tmp/cctWvJoV.s:1048   .text:000000000000040c .L0 
     /tmp/cctWvJoV.s:1051   .text:0000000000000414 .L0 
       src/Riscv.cpp:161    .text:0000000000000414 .L0 
     /tmp/cctWvJoV.s:1064   .text:000000000000041c .L0 
     /tmp/cctWvJoV.s:1065   .text:000000000000041c .L0 
     /tmp/cctWvJoV.s:1066   .text:000000000000041c .L0 
     /tmp/cctWvJoV.s:1067   .text:000000000000041c .L0 
       src/Riscv.cpp:168    .text:000000000000041c .L0 
     /tmp/cctWvJoV.s:1074   .text:0000000000000420 .L0 
       src/Riscv.cpp:169    .text:0000000000000420 .L0 
     /tmp/cctWvJoV.s:1080   .text:0000000000000424 .L0 
       src/Riscv.cpp:170    .text:0000000000000424 .L0 
     /tmp/cctWvJoV.s:1086   .text:0000000000000428 .L0 
     /tmp/cctWvJoV.s:1088   .text:0000000000000428 .L0 
     /tmp/cctWvJoV.s:1102   .text:0000000000000450 .L0 
     /tmp/cctWvJoV.s:1103   .text:0000000000000450 .L0 
     /tmp/cctWvJoV.s:1105   .text:0000000000000454 .L0 
     /tmp/cctWvJoV.s:1107   .text:0000000000000458 .L0 
GAS LISTING /tmp/cctWvJoV.s 			page 54


       src/Riscv.cpp:182    .text:0000000000000458 .L0 
     /tmp/cctWvJoV.s:1116   .text:0000000000000460 .L0 
       src/Riscv.cpp:180    .text:0000000000000460 .L0 
     /tmp/cctWvJoV.s:1131   .text:0000000000000468 .L0 
     /tmp/cctWvJoV.s:1132   .text:0000000000000468 .L0 
     /tmp/cctWvJoV.s:1133   .text:0000000000000468 .L0 
  src/../h/Riscv.hpp:159    .text:0000000000000468 .L0 
     /tmp/cctWvJoV.s:1142   .text:0000000000000470 .L0 
     /tmp/cctWvJoV.s:1143   .text:0000000000000470 .L0 
     /tmp/cctWvJoV.s:1147   .text:0000000000000474 .L0 
     /tmp/cctWvJoV.s:1149   .text:0000000000000478 .L0 
     /tmp/cctWvJoV.s:1150   .text:0000000000000478 .L0 
     /tmp/cctWvJoV.s:1154   .text:0000000000000484 .L0 
     /tmp/cctWvJoV.s:1155   .text:0000000000000484 .L0 
     /tmp/cctWvJoV.s:1158   .text:000000000000048c .L0 
     /tmp/cctWvJoV.s:1159   .text:000000000000048c .L0 
     /tmp/cctWvJoV.s:1164   .text:0000000000000490 .L0 
  src/../h/Riscv.hpp:164    .text:0000000000000490 .L0 
     /tmp/cctWvJoV.s:1171   .text:0000000000000494 .L0 
     /tmp/cctWvJoV.s:1180   .text:0000000000000498 .L0 
     /tmp/cctWvJoV.s:1181   .text:0000000000000498 .L0 
     /tmp/cctWvJoV.s:1187   .text:00000000000004a8 .L0 
     /tmp/cctWvJoV.s:1188   .text:00000000000004a8 .L0 
     /tmp/cctWvJoV.s:1189   .text:00000000000004a8 .L0 
  src/../h/Riscv.hpp:159    .text:00000000000004a8 .L0 
     /tmp/cctWvJoV.s:1197   .text:00000000000004b0 .L0 
     /tmp/cctWvJoV.s:1198   .text:00000000000004b0 .L0 
     /tmp/cctWvJoV.s:1202   .text:00000000000004b4 .L0 
     /tmp/cctWvJoV.s:1204   .text:00000000000004b8 .L0 
     /tmp/cctWvJoV.s:1205   .text:00000000000004b8 .L0 
     /tmp/cctWvJoV.s:1208   .text:00000000000004c4 .L0 
     /tmp/cctWvJoV.s:1209   .text:00000000000004c4 .L0 
     /tmp/cctWvJoV.s:1229   .text:00000000000004d0 .L0 
     /tmp/cctWvJoV.s:1232   .text:00000000000004d0 .L0 
     /tmp/cctWvJoV.s:1233   .text:00000000000004d0 .L0 
     /tmp/cctWvJoV.s:1234   .text:00000000000004d0 .L0 
     /tmp/cctWvJoV.s:1240   .text:00000000000004d8 .L0 
     /tmp/cctWvJoV.s:1241   .text:00000000000004d8 .L0 
     /tmp/cctWvJoV.s:1244   .text:00000000000004e0 .L0 
     /tmp/cctWvJoV.s:1245   .text:00000000000004e0 .L0 
     /tmp/cctWvJoV.s:1250   .text:00000000000004e4 .L0 
  src/../h/Riscv.hpp:164    .text:00000000000004e4 .L0 
     /tmp/cctWvJoV.s:1260   .text:00000000000004e8 .L0 
       src/Riscv.cpp:200    .text:00000000000004e8 .L0 
     /tmp/cctWvJoV.s:1273   .text:00000000000004f0 .L0 
     /tmp/cctWvJoV.s:1274   .text:00000000000004f0 .L0 
       src/Riscv.cpp:205    .text:00000000000004f0 .L0 
     /tmp/cctWvJoV.s:1284   .text:00000000000004f4 .L0 
     /tmp/cctWvJoV.s:1285   .text:00000000000004f4 .L0 
     /tmp/cctWvJoV.s:1286   .text:00000000000004f4 .L0 
  src/../h/Riscv.hpp:159    .text:00000000000004f4 .L0 
     /tmp/cctWvJoV.s:1295   .text:00000000000004fc .L0 
     /tmp/cctWvJoV.s:1296   .text:00000000000004fc .L0 
     /tmp/cctWvJoV.s:1300   .text:0000000000000500 .L0 
     /tmp/cctWvJoV.s:1302   .text:0000000000000504 .L0 
     /tmp/cctWvJoV.s:1303   .text:0000000000000504 .L0 
     /tmp/cctWvJoV.s:1306   .text:0000000000000510 .L0 
GAS LISTING /tmp/cctWvJoV.s 			page 55


     /tmp/cctWvJoV.s:1307   .text:0000000000000510 .L0 
     /tmp/cctWvJoV.s:1313   .text:000000000000051c .L0 
     /tmp/cctWvJoV.s:1314   .text:000000000000051c .L0 
     /tmp/cctWvJoV.s:1319   .text:0000000000000520 .L0 
     /tmp/cctWvJoV.s:1320   .text:0000000000000520 .L0 
     /tmp/cctWvJoV.s:1323   .text:0000000000000528 .L0 
     /tmp/cctWvJoV.s:1324   .text:0000000000000528 .L0 
     /tmp/cctWvJoV.s:1327   .text:0000000000000530 .L0 
     /tmp/cctWvJoV.s:1328   .text:0000000000000530 .L0 
     /tmp/cctWvJoV.s:1333   .text:0000000000000534 .L0 
  src/../h/Riscv.hpp:164    .text:0000000000000534 .L0 
     /tmp/cctWvJoV.s:1343   .text:0000000000000538 .L0 
       src/Riscv.cpp:212    .text:0000000000000538 .L0 
     /tmp/cctWvJoV.s:1356   .text:0000000000000540 .L0 
     /tmp/cctWvJoV.s:1357   .text:0000000000000540 .L0 
     /tmp/cctWvJoV.s:1358   .text:0000000000000540 .L0 
       src/Riscv.cpp:218    .text:0000000000000540 .L0 
     /tmp/cctWvJoV.s:1365   .text:0000000000000544 .L0 
       src/Riscv.cpp:219    .text:0000000000000544 .L0 
     /tmp/cctWvJoV.s:1371   .text:0000000000000548 .L0 
     /tmp/cctWvJoV.s:1373   .text:0000000000000548 .L0 
     /tmp/cctWvJoV.s:1385   .text:0000000000000564 .L0 
     /tmp/cctWvJoV.s:1386   .text:0000000000000564 .L0 
     /tmp/cctWvJoV.s:1388   .text:0000000000000568 .L0 
     /tmp/cctWvJoV.s:1390   .text:000000000000056c .L0 
       src/Riscv.cpp:228    .text:000000000000056c .L0 
     /tmp/cctWvJoV.s:1399   .text:0000000000000574 .L0 
       src/Riscv.cpp:226    .text:0000000000000574 .L0 
     /tmp/cctWvJoV.s:1414   .text:000000000000057c .L0 
     /tmp/cctWvJoV.s:1415   .text:000000000000057c .L0 
     /tmp/cctWvJoV.s:1416   .text:000000000000057c .L0 
  src/../h/Riscv.hpp:159    .text:000000000000057c .L0 
     /tmp/cctWvJoV.s:1425   .text:0000000000000584 .L0 
     /tmp/cctWvJoV.s:1426   .text:0000000000000584 .L0 
     /tmp/cctWvJoV.s:1430   .text:0000000000000588 .L0 
     /tmp/cctWvJoV.s:1432   .text:000000000000058c .L0 
     /tmp/cctWvJoV.s:1433   .text:000000000000058c .L0 
       src/Riscv.cpp:235    .text:000000000000058c .L0 
     /tmp/cctWvJoV.s:1441   .text:0000000000000590 .L0 
     /tmp/cctWvJoV.s:1443   .text:0000000000000590 .L0 
     /tmp/cctWvJoV.s:1446   .text:0000000000000598 .L0 
     /tmp/cctWvJoV.s:1448   .text:000000000000059c .L0 
     /tmp/cctWvJoV.s:1449   .text:000000000000059c .L0 
     /tmp/cctWvJoV.s:1454   .text:00000000000005a0 .L0 
  src/../h/Riscv.hpp:164    .text:00000000000005a0 .L0 
     /tmp/cctWvJoV.s:1464   .text:00000000000005a4 .L0 
     /tmp/cctWvJoV.s:1465   .text:00000000000005a4 .L0 
       src/Riscv.cpp:238    .text:00000000000005a8 .L0 
     /tmp/cctWvJoV.s:1479   .text:00000000000005b0 .L0 
     /tmp/cctWvJoV.s:1480   .text:00000000000005b0 .L0 
       src/Riscv.cpp:243    .text:00000000000005b0 .L0 
     /tmp/cctWvJoV.s:1487   .text:00000000000005b4 .L0 
     /tmp/cctWvJoV.s:1489   .text:00000000000005b4 .L0 
     /tmp/cctWvJoV.s:1493   .text:00000000000005bc .L0 
     /tmp/cctWvJoV.s:1495   .text:00000000000005c0 .L0 
     /tmp/cctWvJoV.s:1496   .text:00000000000005c0 .L0 
       src/Riscv.cpp:245    .text:00000000000005c4 .L0 
GAS LISTING /tmp/cctWvJoV.s 			page 56


     /tmp/cctWvJoV.s:1517   .text:00000000000005d0 .L0 
     /tmp/cctWvJoV.s:1535   .text:00000000000005ec .L0 
     /tmp/cctWvJoV.s:1553   .text:0000000000000604 .L0 
     /tmp/cctWvJoV.s:1600   .text:0000000000000604 _ZN5Riscv10kernelMainEv
     /tmp/cctWvJoV.s:1603   .text:0000000000000604 .L0 
     /tmp/cctWvJoV.s:1606   .text:0000000000000604 .L0 
     /tmp/cctWvJoV.s:1607   .text:0000000000000608 .L0 
     /tmp/cctWvJoV.s:1612   .text:0000000000000618 .L0 
     /tmp/cctWvJoV.s:1613   .text:0000000000000618 .L0 
     /tmp/cctWvJoV.s:1614   .text:0000000000000618 .L0 
     /tmp/cctWvJoV.s:1615   .text:0000000000000618 .L0 
     /tmp/cctWvJoV.s:1617   .text:000000000000061c .L0 
     /tmp/cctWvJoV.s:1620   .text:000000000000061c .L0 
     /tmp/cctWvJoV.s:1621   .text:000000000000061c .L0 
     /tmp/cctWvJoV.s:1624   .text:0000000000000624 .L0 
     /tmp/cctWvJoV.s:1625   .text:0000000000000624 .L0 
     /tmp/cctWvJoV.s:1628   .text:000000000000062c .L0 
     /tmp/cctWvJoV.s:1629   .text:000000000000062c .L0 
     /tmp/cctWvJoV.s:1634   .text:000000000000063c .L0 
     /tmp/cctWvJoV.s:1649   .text:0000000000000668 .L0 
     /tmp/cctWvJoV.s:1652   .text:0000000000000668 .L0 
     /tmp/cctWvJoV.s:1653   .text:0000000000000668 .L0 
     /tmp/cctWvJoV.s:1654   .text:0000000000000668 .L0 
     /tmp/cctWvJoV.s:1659   .text:000000000000066c .L0 
     /tmp/cctWvJoV.s:1663   .text:0000000000000674 .L0 
     /tmp/cctWvJoV.s:1664   .text:0000000000000674 .L0 
     /tmp/cctWvJoV.s:1667   .text:000000000000067c .L0 
     /tmp/cctWvJoV.s:1670   .text:0000000000000680 .L0 
     /tmp/cctWvJoV.s:1671   .text:0000000000000680 .L0 
     /tmp/cctWvJoV.s:1674   .text:0000000000000688 .L0 
     /tmp/cctWvJoV.s:1675   .text:0000000000000688 .L0 
     /tmp/cctWvJoV.s:1678   .text:0000000000000690 .L0 
     /tmp/cctWvJoV.s:1679   .text:0000000000000690 .L0 
     /tmp/cctWvJoV.s:1684   .text:00000000000006a0 .L0 
     /tmp/cctWvJoV.s:1685   .text:00000000000006a4 .L0 
     /tmp/cctWvJoV.s:1686   .text:00000000000006a4 .L0 
     /tmp/cctWvJoV.s:1688   .text:00000000000006a8 .L0 
     /tmp/cctWvJoV.s:1689   .text:00000000000006a8 .L0 
     /tmp/cctWvJoV.s:1691   .text:00000000000006ac .L0 
     /tmp/cctWvJoV.s:1693   .text:00000000000006b0 .L0 
     /tmp/cctWvJoV.s:1695   .text:00000000000006b4 .L0 
     /tmp/cctWvJoV.s:1698   .text:00000000000006b8 .L0 
     /tmp/cctWvJoV.s:1701   .text:00000000000006bc .L0 
     /tmp/cctWvJoV.s:1709   .text:00000000000006d4 .L0 
     /tmp/cctWvJoV.s:1737   .rodata:0000000000000000 .LANCHOR0
     /tmp/cctWvJoV.s:1740   .rodata:0000000000000000 _ZZN5Riscv12printIntegerEmE6digits
     /tmp/cctWvJoV.s:1744   .bss:0000000000000000 .LANCHOR1
     /tmp/cctWvJoV.s:1747   .bss:0000000000000000 _ZZN5Riscv20handleSupervisorTrapEvE5total
     /tmp/cctWvJoV.s:1759   .text:00000000000006d4 .L0 
     /tmp/cctWvJoV.s:55     .text:0000000000000038 .L0 
     /tmp/cctWvJoV.s:416    .text:00000000000001a0 .L0 
     /tmp/cctWvJoV.s:868    .text:0000000000000360 .L0 
     /tmp/cctWvJoV.s:874    .text:0000000000000374 .L0 
     /tmp/cctWvJoV.s:886    .text:0000000000000390 .L0 
     /tmp/cctWvJoV.s:1150   .text:0000000000000478 .L0 
     /tmp/cctWvJoV.s:492    .rodata.str1.8:0000000000000000 .LC0
     /tmp/cctWvJoV.s:1181   .text:0000000000000498 .L0 
GAS LISTING /tmp/cctWvJoV.s 			page 57


     /tmp/cctWvJoV.s:1205   .text:00000000000004b8 .L0 
     /tmp/cctWvJoV.s:1209   .text:00000000000004c4 .L0 
     /tmp/cctWvJoV.s:1303   .text:0000000000000504 .L0 
     /tmp/cctWvJoV.s:1307   .text:0000000000000510 .L0 
     /tmp/cctWvJoV.s:1642   .text:0000000000000658 .L0 
     /tmp/cctWvJoV.s:1594   .rodata.str1.8:0000000000000018 .LC1
     /tmp/cctWvJoV.s:1679   .text:0000000000000690 .L0 
     /tmp/cctWvJoV.s:302    .text:0000000000000134 .L14
     /tmp/cctWvJoV.s:283    .text:000000000000011c .L15
     /tmp/cctWvJoV.s:406    .text:0000000000000190 .L18
     /tmp/cctWvJoV.s:448    .text:00000000000001f0 .L19
     /tmp/cctWvJoV.s:434    .text:00000000000001d0 .L20
     /tmp/cctWvJoV.s:845    .text:0000000000000358 .L23
     /tmp/cctWvJoV.s:797    .text:000000000000031c .L24
     /tmp/cctWvJoV.s:821    .text:0000000000000334 .L22
     /tmp/cctWvJoV.s:980    .text:00000000000003e8 .L47
     /tmp/cctWvJoV.s:1031   .text:0000000000000408 .L48
     /tmp/cctWvJoV.s:1060   .text:000000000000041c .L49
     /tmp/cctWvJoV.s:1124   .text:0000000000000468 .L50
     /tmp/cctWvJoV.s:1173   .text:0000000000000498 .L51
     /tmp/cctWvJoV.s:1269   .text:00000000000004f0 .L52
     /tmp/cctWvJoV.s:1352   .text:0000000000000540 .L53
     /tmp/cctWvJoV.s:1407   .text:000000000000057c .L54
     /tmp/cctWvJoV.s:1475   .text:00000000000005b0 .L55
     /tmp/cctWvJoV.s:1011   .text:00000000000003fc .L29
     /tmp/cctWvJoV.s:786    .text:0000000000000314 .L40
     /tmp/cctWvJoV.s:1114   .text:0000000000000460 .L56
     /tmp/cctWvJoV.s:1397   .text:0000000000000574 .L57
     /tmp/cctWvJoV.s:1668   .text:0000000000000680 .L59
     /tmp/cctWvJoV.s:1647   .text:0000000000000668 .L60
     /tmp/cctWvJoV.s:783    .text:000000000000030c .LEHB0
     /tmp/cctWvJoV.s:499    .text:0000000000000224 .LFB32
     /tmp/cctWvJoV.s:1091   .text:0000000000000434 .LEHE0
     /tmp/cctWvJoV.s:1097   .text:0000000000000448 .LEHB1
     /tmp/cctWvJoV.s:1100   .text:0000000000000450 .LEHE1
     /tmp/cctWvJoV.s:1506   .text:00000000000005cc .L43
     /tmp/cctWvJoV.s:1153   .text:0000000000000484 .LEHB2
     /tmp/cctWvJoV.s:1376   .text:0000000000000554 .LEHE2
     /tmp/cctWvJoV.s:1380   .text:000000000000055c .LEHB3
     /tmp/cctWvJoV.s:1383   .text:0000000000000564 .LEHE3
     /tmp/cctWvJoV.s:1525   .text:00000000000005e8 .L44
     /tmp/cctWvJoV.s:1440   .text:0000000000000590 .LEHB4
     /tmp/cctWvJoV.s:1491   .text:00000000000005bc .LEHE4
     /tmp/cctWvJoV.s:1521   .text:00000000000005e0 .LEHB5
     /tmp/cctWvJoV.s:1524   .text:00000000000005e8 .LEHE5
     /tmp/cctWvJoV.s:1539   .text:00000000000005fc .LEHB6
     /tmp/cctWvJoV.s:1542   .text:0000000000000604 .LEHE6
     /tmp/cctWvJoV.s:1619   .text:000000000000061c .LEHB7
     /tmp/cctWvJoV.s:1601   .text:0000000000000604 .LFB33
     /tmp/cctWvJoV.s:1637   .text:0000000000000648 .LEHE7
     /tmp/cctWvJoV.s:1643   .text:0000000000000660 .LEHB8
     /tmp/cctWvJoV.s:1646   .text:0000000000000668 .LEHE8
     /tmp/cctWvJoV.s:1697   .text:00000000000006b8 .L62
     /tmp/cctWvJoV.s:1662   .text:0000000000000674 .LEHB9
     /tmp/cctWvJoV.s:1682   .text:00000000000006a0 .LEHE9
     /tmp/cctWvJoV.s:1705   .text:00000000000006cc .LEHB10
     /tmp/cctWvJoV.s:1708   .text:00000000000006d4 .LEHE10
GAS LISTING /tmp/cctWvJoV.s 			page 58


     /tmp/cctWvJoV.s:4490   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cctWvJoV.s:6285   .debug_str:00000000000001e3 .LASF244
     /tmp/cctWvJoV.s:6315   .debug_str:0000000000000379 .LASF245
     /tmp/cctWvJoV.s:6647   .debug_str:0000000000000d2b .LASF246
     /tmp/cctWvJoV.s:5      .text:0000000000000000 .Ltext0
     /tmp/cctWvJoV.s:1750   .text:00000000000006d4 .Letext0
     /tmp/cctWvJoV.s:6229   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cctWvJoV.s:6407   .debug_str:000000000000062f .LASF0
     /tmp/cctWvJoV.s:6559   .debug_str:0000000000000ad3 .LASF3
     /tmp/cctWvJoV.s:6445   .debug_str:000000000000076f .LASF1
     /tmp/cctWvJoV.s:6571   .debug_str:0000000000000b1a .LASF2
     /tmp/cctWvJoV.s:6587   .debug_str:0000000000000b9e .LASF4
     /tmp/cctWvJoV.s:6425   .debug_str:00000000000006bc .LASF5
     /tmp/cctWvJoV.s:6249   .debug_str:000000000000007b .LASF6
     /tmp/cctWvJoV.s:6541   .debug_str:0000000000000a5a .LASF7
     /tmp/cctWvJoV.s:6529   .debug_str:0000000000000a0f .LASF8
     /tmp/cctWvJoV.s:6435   .debug_str:0000000000000736 .LASF9
     /tmp/cctWvJoV.s:6377   .debug_str:0000000000000554 .LASF10
     /tmp/cctWvJoV.s:6387   .debug_str:00000000000005ac .LASF11
     /tmp/cctWvJoV.s:6301   .debug_str:000000000000032a .LASF12
     /tmp/cctWvJoV.s:6367   .debug_str:000000000000051c .LASF13
     /tmp/cctWvJoV.s:6317   .debug_str:0000000000000387 .LASF14
     /tmp/cctWvJoV.s:6299   .debug_str:000000000000031a .LASF15
     /tmp/cctWvJoV.s:6621   .debug_str:0000000000000ca2 .LASF16
     /tmp/cctWvJoV.s:6351   .debug_str:0000000000000462 .LASF17
     /tmp/cctWvJoV.s:6611   .debug_str:0000000000000c4a .LASF18
     /tmp/cctWvJoV.s:6685   .debug_str:0000000000000e42 .LASF95
     /tmp/cctWvJoV.s:6553   .debug_str:0000000000000aa9 .LASF22
     /tmp/cctWvJoV.s:6451   .debug_str:0000000000000791 .LASF19
     /tmp/cctWvJoV.s:6357   .debug_str:00000000000004ac .LASF20
     /tmp/cctWvJoV.s:6701   .debug_str:0000000000000eba .LASF21
     /tmp/cctWvJoV.s:6669   .debug_str:0000000000000dc5 .LASF23
     /tmp/cctWvJoV.s:6361   .debug_str:00000000000004d8 .LASF24
     /tmp/cctWvJoV.s:6637   .debug_str:0000000000000ceb .LASF25
     /tmp/cctWvJoV.s:6329   .debug_str:00000000000003d5 .LASF26
     /tmp/cctWvJoV.s:6401   .debug_str:0000000000000606 .LASF27
     /tmp/cctWvJoV.s:6613   .debug_str:0000000000000c60 .LASF29
     /tmp/cctWvJoV.s:6495   .debug_str:000000000000090f .LASF28
     /tmp/cctWvJoV.s:6475   .debug_str:000000000000085c .LASF30
     /tmp/cctWvJoV.s:6347   .debug_str:0000000000000445 .LASF31
     /tmp/cctWvJoV.s:6241   .debug_str:0000000000000048 .LASF32
     /tmp/cctWvJoV.s:6477   .debug_str:0000000000000874 .LASF37
     /tmp/cctWvJoV.s:6675   .debug_str:0000000000000de9 .LASF39
     /tmp/cctWvJoV.s:6297   .debug_str:0000000000000309 .LASF33
     /tmp/cctWvJoV.s:6457   .debug_str:00000000000007cd .LASF34
     /tmp/cctWvJoV.s:6419   .debug_str:0000000000000695 .LASF35
     /tmp/cctWvJoV.s:6321   .debug_str:000000000000039e .LASF36
     /tmp/cctWvJoV.s:6709   .debug_str:0000000000000eee .LASF38
     /tmp/cctWvJoV.s:6261   .debug_str:00000000000000f9 .LASF40
     /tmp/cctWvJoV.s:6539   .debug_str:0000000000000a4d .LASF41
     /tmp/cctWvJoV.s:6265   .debug_str:0000000000000121 .LASF42
     /tmp/cctWvJoV.s:6597   .debug_str:0000000000000bea .LASF43
     /tmp/cctWvJoV.s:6355   .debug_str:0000000000000491 .LASF44
     /tmp/cctWvJoV.s:6413   .debug_str:000000000000066e .LASF45
     /tmp/cctWvJoV.s:6693   .debug_str:0000000000000e72 .LASF46
     /tmp/cctWvJoV.s:6665   .debug_str:0000000000000db7 .LASF49
     /tmp/cctWvJoV.s:6653   .debug_str:0000000000000d5d .LASF51
GAS LISTING /tmp/cctWvJoV.s 			page 59


     /tmp/cctWvJoV.s:6567   .debug_str:0000000000000b06 .LASF47
     /tmp/cctWvJoV.s:6511   .debug_str:0000000000000976 .LASF48
     /tmp/cctWvJoV.s:6547   .debug_str:0000000000000a7b .LASF50
     /tmp/cctWvJoV.s:6549   .debug_str:0000000000000a82 .LASF52
     /tmp/cctWvJoV.s:6507   .debug_str:000000000000095b .LASF53
     /tmp/cctWvJoV.s:6437   .debug_str:0000000000000749 .LASF54
     /tmp/cctWvJoV.s:6695   .debug_str:0000000000000e8c .LASF55
     /tmp/cctWvJoV.s:6643   .debug_str:0000000000000d0d .LASF56
     /tmp/cctWvJoV.s:6503   .debug_str:000000000000094a .LASF57
     /tmp/cctWvJoV.s:6509   .debug_str:0000000000000962 .LASF58
     /tmp/cctWvJoV.s:6487   .debug_str:00000000000008cb .LASF59
     /tmp/cctWvJoV.s:6551   .debug_str:0000000000000a95 .LASF60
     /tmp/cctWvJoV.s:6735   .debug_str:0000000000000fa5 .LASF61
     /tmp/cctWvJoV.s:6417   .debug_str:0000000000000681 .LASF62
     /tmp/cctWvJoV.s:6617   .debug_str:0000000000000c94 .LASF63
     /tmp/cctWvJoV.s:6591   .debug_str:0000000000000bc8 .LASF64
     /tmp/cctWvJoV.s:6593   .debug_str:0000000000000bdb .LASF65
     /tmp/cctWvJoV.s:6307   .debug_str:0000000000000347 .LASF66
     /tmp/cctWvJoV.s:6341   .debug_str:000000000000041a .LASF67
     /tmp/cctWvJoV.s:6253   .debug_str:000000000000008d .LASF68
     /tmp/cctWvJoV.s:6415   .debug_str:000000000000067b .LASF69
     /tmp/cctWvJoV.s:6333   .debug_str:00000000000003f4 .LASF70
     /tmp/cctWvJoV.s:6251   .debug_str:0000000000000082 .LASF71
     /tmp/cctWvJoV.s:6577   .debug_str:0000000000000b40 .LASF72
     /tmp/cctWvJoV.s:6569   .debug_str:0000000000000b0f .LASF73
     /tmp/cctWvJoV.s:6723   .debug_str:0000000000000f46 .LASF74
     /tmp/cctWvJoV.s:6687   .debug_str:0000000000000e48 .LASF75
     /tmp/cctWvJoV.s:6707   .debug_str:0000000000000ed8 .LASF76
     /tmp/cctWvJoV.s:6677   .debug_str:0000000000000e07 .LASF77
     /tmp/cctWvJoV.s:6479   .debug_str:0000000000000884 .LASF78
     /tmp/cctWvJoV.s:6395   .debug_str:00000000000005e0 .LASF79
     /tmp/cctWvJoV.s:6403   .debug_str:0000000000000611 .LASF80
     /tmp/cctWvJoV.s:6657   .debug_str:0000000000000d7e .LASF81
     /tmp/cctWvJoV.s:6385   .debug_str:0000000000000590 .LASF82
     /tmp/cctWvJoV.s:6535   .debug_str:0000000000000a2f .LASF83
     /tmp/cctWvJoV.s:6433   .debug_str:0000000000000714 .LASF84
     /tmp/cctWvJoV.s:6563   .debug_str:0000000000000afa .LASF85
     /tmp/cctWvJoV.s:6245   .debug_str:0000000000000066 .LASF86
     /tmp/cctWvJoV.s:6277   .debug_str:00000000000001aa .LASF87
     /tmp/cctWvJoV.s:6655   .debug_str:0000000000000d72 .LASF88
     /tmp/cctWvJoV.s:6279   .debug_str:00000000000001b9 .LASF89
     /tmp/cctWvJoV.s:6491   .debug_str:00000000000008f8 .LASF90
     /tmp/cctWvJoV.s:6389   .debug_str:00000000000005ba .LASF91
     /tmp/cctWvJoV.s:6343   .debug_str:0000000000000420 .LASF92
     /tmp/cctWvJoV.s:6295   .debug_str:00000000000002f5 .LASF93
     /tmp/cctWvJoV.s:6631   .debug_str:0000000000000cd8 .LASF94
     /tmp/cctWvJoV.s:6633   .debug_str:0000000000000cdd .LASF96
     /tmp/cctWvJoV.s:6293   .debug_str:00000000000002ef .LASF97
     /tmp/cctWvJoV.s:6603   .debug_str:0000000000000c12 .LASF98
     /tmp/cctWvJoV.s:6309   .debug_str:000000000000035a .LASF99
     /tmp/cctWvJoV.s:6281   .debug_str:00000000000001cc .LASF100
     /tmp/cctWvJoV.s:6531   .debug_str:0000000000000a22 .LASF101
     /tmp/cctWvJoV.s:6441   .debug_str:0000000000000761 .LASF102
     /tmp/cctWvJoV.s:6629   .debug_str:0000000000000cd0 .LASF146
     /tmp/cctWvJoV.s:6397   .debug_str:00000000000005eb .LASF103
     /tmp/cctWvJoV.s:6499   .debug_str:0000000000000929 .LASF247
     /tmp/cctWvJoV.s:6515   .debug_str:0000000000000992 .LASF248
GAS LISTING /tmp/cctWvJoV.s 			page 60


     /tmp/cctWvJoV.s:6443   .debug_str:000000000000076a .LASF104
     /tmp/cctWvJoV.s:6721   .debug_str:0000000000000f3a .LASF106
     /tmp/cctWvJoV.s:6717   .debug_str:0000000000000f1e .LASF105
     /tmp/cctWvJoV.s:6641   .debug_str:0000000000000cfd .LASF107
     /tmp/cctWvJoV.s:6335   .debug_str:0000000000000406 .LASF108
     /tmp/cctWvJoV.s:6259   .debug_str:00000000000000e6 .LASF109
     /tmp/cctWvJoV.s:6449   .debug_str:000000000000078b .LASF110
     /tmp/cctWvJoV.s:6517   .debug_str:0000000000000997 .LASF111
     /tmp/cctWvJoV.s:6635   .debug_str:0000000000000ce3 .LASF112
     /tmp/cctWvJoV.s:6599   .debug_str:0000000000000bf8 .LASF113
     /tmp/cctWvJoV.s:6473   .debug_str:000000000000084f .LASF118
     /tmp/cctWvJoV.s:6459   .debug_str:00000000000007eb .LASF120
     /tmp/cctWvJoV.s:6727   .debug_str:0000000000000f6e .LASF114
     /tmp/cctWvJoV.s:6371   .debug_str:0000000000000535 .LASF115
     /tmp/cctWvJoV.s:6409   .debug_str:000000000000063c .LASF116
     /tmp/cctWvJoV.s:6421   .debug_str:00000000000006a7 .LASF117
     /tmp/cctWvJoV.s:6601   .debug_str:0000000000000c09 .LASF119
     /tmp/cctWvJoV.s:6331   .debug_str:00000000000003e1 .LASF121
     /tmp/cctWvJoV.s:6581   .debug_str:0000000000000b64 .LASF122
     /tmp/cctWvJoV.s:6615   .debug_str:0000000000000c78 .LASF123
     /tmp/cctWvJoV.s:6497   .debug_str:000000000000091a .LASF124
     /tmp/cctWvJoV.s:6237   .debug_str:0000000000000029 .LASF125
     /tmp/cctWvJoV.s:6705   .debug_str:0000000000000ec9 .LASF126
     /tmp/cctWvJoV.s:6525   .debug_str:00000000000009ee .LASF127
     /tmp/cctWvJoV.s:6609   .debug_str:0000000000000c3c .LASF128
     /tmp/cctWvJoV.s:6545   .debug_str:0000000000000a6f .LASF129
     /tmp/cctWvJoV.s:6233   .debug_str:000000000000000d .LASF130
     /tmp/cctWvJoV.s:6711   .debug_str:0000000000000efa .LASF131
     /tmp/cctWvJoV.s:6427   .debug_str:00000000000006ce .LASF134
     /tmp/cctWvJoV.s:6607   .debug_str:0000000000000c31 .LASF132
     /tmp/cctWvJoV.s:6719   .debug_str:0000000000000f24 .LASF133
     /tmp/cctWvJoV.s:6595   .debug_str:0000000000000be2 .LASF135
     /tmp/cctWvJoV.s:6645   .debug_str:0000000000000d21 .LASF136
     /tmp/cctWvJoV.s:6519   .debug_str:00000000000009a7 .LASF137
     /tmp/cctWvJoV.s:6325   .debug_str:00000000000003c2 .LASF138
     /tmp/cctWvJoV.s:6271   .debug_str:0000000000000168 .LASF140
     /tmp/cctWvJoV.s:6269   .debug_str:0000000000000153 .LASF139
     /tmp/cctWvJoV.s:6291   .debug_str:00000000000002c3 .LASF141
     /tmp/cctWvJoV.s:6731   .debug_str:0000000000000f86 .LASF249
     /tmp/cctWvJoV.s:6289   .debug_str:00000000000002b2 .LASF250
     /tmp/cctWvJoV.s:6239   .debug_str:0000000000000043 .LASF142
     /tmp/cctWvJoV.s:6667   .debug_str:0000000000000dc0 .LASF143
     /tmp/cctWvJoV.s:6463   .debug_str:000000000000081d .LASF144
     /tmp/cctWvJoV.s:6339   .debug_str:0000000000000414 .LASF145
     /tmp/cctWvJoV.s:6651   .debug_str:0000000000000d55 .LASF147
     /tmp/cctWvJoV.s:6469   .debug_str:0000000000000836 .LASF148
     /tmp/cctWvJoV.s:6557   .debug_str:0000000000000ac8 .LASF149
     /tmp/cctWvJoV.s:6383   .debug_str:000000000000057c .LASF150
     /tmp/cctWvJoV.s:6575   .debug_str:0000000000000b34 .LASF151
     /tmp/cctWvJoV.s:6555   .debug_str:0000000000000ab4 .LASF152
     /tmp/cctWvJoV.s:6337   .debug_str:000000000000040f .LASF153
     /tmp/cctWvJoV.s:6605   .debug_str:0000000000000c1a .LASF154
     /tmp/cctWvJoV.s:6625   .debug_str:0000000000000cc1 .LASF155
     /tmp/cctWvJoV.s:6353   .debug_str:0000000000000478 .LASF156
     /tmp/cctWvJoV.s:6235   .debug_str:000000000000001d .LASF157
     /tmp/cctWvJoV.s:6579   .debug_str:0000000000000b58 .LASF158
     /tmp/cctWvJoV.s:6471   .debug_str:000000000000083b .LASF159
GAS LISTING /tmp/cctWvJoV.s 			page 61


     /tmp/cctWvJoV.s:6399   .debug_str:00000000000005f1 .LASF160
     /tmp/cctWvJoV.s:6305   .debug_str:000000000000033e .LASF161
     /tmp/cctWvJoV.s:6311   .debug_str:0000000000000364 .LASF162
     /tmp/cctWvJoV.s:6501   .debug_str:0000000000000941 .LASF163
     /tmp/cctWvJoV.s:6585   .debug_str:0000000000000b93 .LASF164
     /tmp/cctWvJoV.s:6447   .debug_str:0000000000000782 .LASF165
     /tmp/cctWvJoV.s:6405   .debug_str:0000000000000629 .LASF166
     /tmp/cctWvJoV.s:6733   .debug_str:0000000000000f8d .LASF167
     /tmp/cctWvJoV.s:6243   .debug_str:000000000000005e .LASF168
     /tmp/cctWvJoV.s:6461   .debug_str:0000000000000803 .LASF169
     /tmp/cctWvJoV.s:6725   .debug_str:0000000000000f5e .LASF170
     /tmp/cctWvJoV.s:6589   .debug_str:0000000000000ba5 .LASF171
     /tmp/cctWvJoV.s:6623   .debug_str:0000000000000cae .LASF172
     /tmp/cctWvJoV.s:6583   .debug_str:0000000000000b6d .LASF173
     /tmp/cctWvJoV.s:6231   .debug_str:0000000000000000 .LASF174
     /tmp/cctWvJoV.s:6257   .debug_str:00000000000000c2 .LASF175
     /tmp/cctWvJoV.s:6699   .debug_str:0000000000000ead .LASF176
     /tmp/cctWvJoV.s:6485   .debug_str:00000000000008bb .LASF177
     /tmp/cctWvJoV.s:6345   .debug_str:0000000000000433 .LASF178
     /tmp/cctWvJoV.s:6363   .debug_str:00000000000004e4 .LASF179
     /tmp/cctWvJoV.s:6283   .debug_str:00000000000001d5 .LASF180
     /tmp/cctWvJoV.s:6255   .debug_str:000000000000009f .LASF181
     /tmp/cctWvJoV.s:6505   .debug_str:0000000000000952 .LASF182
     /tmp/cctWvJoV.s:6323   .debug_str:00000000000003bd .LASF183
     /tmp/cctWvJoV.s:6303   .debug_str:0000000000000339 .LASF184
     /tmp/cctWvJoV.s:6439   .debug_str:000000000000075c .LASF185
     /tmp/cctWvJoV.s:6369   .debug_str:000000000000052b .LASF186
     /tmp/cctWvJoV.s:6713   .debug_str:0000000000000f05 .LASF187
     /tmp/cctWvJoV.s:6313   .debug_str:000000000000036e .LASF188
     /tmp/cctWvJoV.s:6391   .debug_str:00000000000005cd .LASF189
     /tmp/cctWvJoV.s:6521   .debug_str:00000000000009b3 .LASF190
     /tmp/cctWvJoV.s:6483   .debug_str:00000000000008a7 .LASF191
     /tmp/cctWvJoV.s:6627   .debug_str:0000000000000cc8 .LASF192
     /tmp/cctWvJoV.s:6489   .debug_str:00000000000008d3 .LASF193
     /tmp/cctWvJoV.s:6423   .debug_str:00000000000006b4 .LASF194
     /tmp/cctWvJoV.s:6679   .debug_str:0000000000000e11 .LASF195
     /tmp/cctWvJoV.s:6661   .debug_str:0000000000000d9f .LASF196
     /tmp/cctWvJoV.s:6411   .debug_str:000000000000064c .LASF197
     /tmp/cctWvJoV.s:6659   .debug_str:0000000000000d8d .LASF198
     /tmp/cctWvJoV.s:6561   .debug_str:0000000000000ad8 .LASF199
     /tmp/cctWvJoV.s:6275   .debug_str:0000000000000197 .LASF200
     /tmp/cctWvJoV.s:6287   .debug_str:000000000000028f .LASF201
     /tmp/cctWvJoV.s:6349   .debug_str:000000000000044f .LASF202
     /tmp/cctWvJoV.s:6359   .debug_str:00000000000004b5 .LASF203
     /tmp/cctWvJoV.s:6453   .debug_str:000000000000079a .LASF204
     /tmp/cctWvJoV.s:6697   .debug_str:0000000000000e94 .LASF205
     /tmp/cctWvJoV.s:6429   .debug_str:00000000000006db .LASF206
     /tmp/cctWvJoV.s:6455   .debug_str:00000000000007b5 .LASF207
     /tmp/cctWvJoV.s:6523   .debug_str:00000000000009c6 .LASF208
     /tmp/cctWvJoV.s:6365   .debug_str:000000000000050b .LASF209
     /tmp/cctWvJoV.s:6689   .debug_str:0000000000000e52 .LASF210
     /tmp/cctWvJoV.s:6375   .debug_str:0000000000000547 .LASF211
     /tmp/cctWvJoV.s:6247   .debug_str:000000000000006e .LASF212
     /tmp/cctWvJoV.s:10     .text:0000000000000000 .LFB34
     /tmp/cctWvJoV.s:36     .text:0000000000000028 .LFE34
     /tmp/cctWvJoV.s:25     .text:0000000000000018 .LVL0
     /tmp/cctWvJoV.s:1710   .text:00000000000006d4 .LFE33
GAS LISTING /tmp/cctWvJoV.s 			page 62


     /tmp/cctWvJoV.s:6381   .debug_str:0000000000000574 .LASF232
     /tmp/cctWvJoV.s:1650   .text:0000000000000668 .LBB256
     /tmp/cctWvJoV.s:1657   .text:000000000000066c .LBE256
     /tmp/cctWvJoV.s:5710   .debug_loc:0000000000000000 .LLST43
     /tmp/cctWvJoV.s:1622   .text:0000000000000624 .LVL112
     /tmp/cctWvJoV.s:1626   .text:000000000000062c .LVL113
     /tmp/cctWvJoV.s:1631   .text:0000000000000638 .LVL114
     /tmp/cctWvJoV.s:1636   .text:0000000000000648 .LVL115
     /tmp/cctWvJoV.s:1645   .text:0000000000000668 .LVL116
     /tmp/cctWvJoV.s:1665   .text:000000000000067c .LVL118
     /tmp/cctWvJoV.s:1672   .text:0000000000000688 .LVL119
     /tmp/cctWvJoV.s:1676   .text:0000000000000690 .LVL120
     /tmp/cctWvJoV.s:1681   .text:00000000000006a0 .LVL121
     /tmp/cctWvJoV.s:1703   .text:00000000000006c8 .LVL122
     /tmp/cctWvJoV.s:1707   .text:00000000000006d4 .LVL123
     /tmp/cctWvJoV.s:1554   .text:0000000000000604 .LFE32
     /tmp/cctWvJoV.s:5717   .debug_loc:0000000000000023 .LLST12
     /tmp/cctWvJoV.s:6319   .debug_str:0000000000000397 .LASF213
     /tmp/cctWvJoV.s:5744   .debug_loc:00000000000000a5 .LLST13
     /tmp/cctWvJoV.s:6181   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/cctWvJoV.s:6663   .debug_str:0000000000000db1 .LASF214
     /tmp/cctWvJoV.s:6467   .debug_str:000000000000082c .LASF215
     /tmp/cctWvJoV.s:5765   .debug_loc:0000000000000103 .LLST14
     /tmp/cctWvJoV.s:6639   .debug_str:0000000000000cf8 .LASF216
     /tmp/cctWvJoV.s:902    .text:00000000000003a8 .LBB219
     /tmp/cctWvJoV.s:983    .text:00000000000003e8 .LBE219
     /tmp/cctWvJoV.s:6393   .debug_str:00000000000005d8 .LASF217
     /tmp/cctWvJoV.s:904    .text:00000000000003a8 .LBB220
     /tmp/cctWvJoV.s:919    .text:00000000000003b4 .LBE220
     /tmp/cctWvJoV.s:923    .text:00000000000003b8 .LBB222
     /tmp/cctWvJoV.s:938    .text:00000000000003c4 .LBE222
     /tmp/cctWvJoV.s:952    .text:00000000000003d8 .LBB224
     /tmp/cctWvJoV.s:963    .text:00000000000003dc .LBE224
     /tmp/cctWvJoV.s:5808   .debug_loc:00000000000001d1 .LLST40
     /tmp/cctWvJoV.s:968    .text:00000000000003e0 .LBB226
     /tmp/cctWvJoV.s:982    .text:00000000000003e8 .LBE226
     /tmp/cctWvJoV.s:5815   .debug_loc:00000000000001f4 .LLST41
     /tmp/cctWvJoV.s:947    .text:00000000000003d4 .LVL50
     /tmp/cctWvJoV.s:986    .text:00000000000003e8 .LBB202
     /tmp/cctWvJoV.s:1012   .text:00000000000003fc .LBE202
     /tmp/cctWvJoV.s:6493   .debug_str:000000000000090a .LASF218
     /tmp/cctWvJoV.s:5822   .debug_loc:0000000000000217 .LLST36
     /tmp/cctWvJoV.s:6691   .debug_str:0000000000000e64 .LASF219
     /tmp/cctWvJoV.s:5837   .debug_loc:0000000000000251 .LLST37
     /tmp/cctWvJoV.s:1002   .text:00000000000003f8 .LVL57
     /tmp/cctWvJoV.s:1036   .text:0000000000000408 .LBB191
     /tmp/cctWvJoV.s:1057   .text:0000000000000418 .LBE191
     /tmp/cctWvJoV.s:6565   .debug_str:0000000000000b01 .LASF220
     /tmp/cctWvJoV.s:5844   .debug_loc:0000000000000274 .LLST34
     /tmp/cctWvJoV.s:6273   .debug_str:0000000000000190 .LASF221
     /tmp/cctWvJoV.s:5856   .debug_loc:00000000000002ab .LLST35
     /tmp/cctWvJoV.s:1049   .text:0000000000000414 .LVL63
     /tmp/cctWvJoV.s:6543   .debug_str:0000000000000a61 .LASF222
     /tmp/cctWvJoV.s:5863   .debug_loc:00000000000002ce .LLST30
     /tmp/cctWvJoV.s:5874   .debug_loc:0000000000000304 .LLST31
     /tmp/cctWvJoV.s:6263   .debug_str:0000000000000114 .LASF223
     /tmp/cctWvJoV.s:5885   .debug_loc:000000000000033a .LLST32
GAS LISTING /tmp/cctWvJoV.s 			page 63


     /tmp/cctWvJoV.s:6513   .debug_str:000000000000098b .LASF224
     /tmp/cctWvJoV.s:5896   .debug_loc:0000000000000370 .LLST33
     /tmp/cctWvJoV.s:1090   .text:0000000000000434 .LVL68
     /tmp/cctWvJoV.s:1099   .text:0000000000000450 .LVL69
     /tmp/cctWvJoV.s:1519   .text:00000000000005dc .LVL107
     /tmp/cctWvJoV.s:1127   .text:0000000000000468 .LBB165
     /tmp/cctWvJoV.s:1176   .text:0000000000000498 .LBE165
     /tmp/cctWvJoV.s:1129   .text:0000000000000468 .LBB166
     /tmp/cctWvJoV.s:1145   .text:0000000000000474 .LBE166
     /tmp/cctWvJoV.s:1161   .text:0000000000000490 .LBB168
     /tmp/cctWvJoV.s:1175   .text:0000000000000498 .LBE168
     /tmp/cctWvJoV.s:5903   .debug_loc:0000000000000393 .LLST29
     /tmp/cctWvJoV.s:1156   .text:000000000000048c .LVL72
     /tmp/cctWvJoV.s:1185   .text:00000000000004a8 .LBB151
     /tmp/cctWvJoV.s:1200   .text:00000000000004b4 .LBE151
     /tmp/cctWvJoV.s:1230   .text:00000000000004d0 .LBB153
     /tmp/cctWvJoV.s:1238   .text:00000000000004d8 .LBE153
     /tmp/cctWvJoV.s:5910   .debug_loc:00000000000003b6 .LLST26
     /tmp/cctWvJoV.s:5918   .debug_loc:00000000000003da .LLST27
     /tmp/cctWvJoV.s:1247   .text:00000000000004e4 .LBB155
     /tmp/cctWvJoV.s:1258   .text:00000000000004e8 .LBE155
     /tmp/cctWvJoV.s:5925   .debug_loc:00000000000003fd .LLST28
     /tmp/cctWvJoV.s:1183   .text:00000000000004a8 .LVL75
     /tmp/cctWvJoV.s:1242   .text:00000000000004e0 .LVL78
     /tmp/cctWvJoV.s:1271   .text:00000000000004f0 .LBB137
     /tmp/cctWvJoV.s:1349   .text:000000000000053c .LBE137
     /tmp/cctWvJoV.s:6533   .debug_str:0000000000000a2a .LASF225
     /tmp/cctWvJoV.s:5932   .debug_loc:0000000000000420 .LLST22
     /tmp/cctWvJoV.s:1282   .text:00000000000004f4 .LBB138
     /tmp/cctWvJoV.s:1298   .text:0000000000000500 .LBE138
     /tmp/cctWvJoV.s:1310   .text:000000000000051c .LBB140
     /tmp/cctWvJoV.s:1317   .text:0000000000000520 .LBE140
     /tmp/cctWvJoV.s:5939   .debug_loc:0000000000000443 .LLST23
     /tmp/cctWvJoV.s:5946   .debug_loc:0000000000000466 .LLST24
     /tmp/cctWvJoV.s:1330   .text:0000000000000534 .LBB142
     /tmp/cctWvJoV.s:1341   .text:0000000000000538 .LBE142
     /tmp/cctWvJoV.s:5953   .debug_loc:0000000000000489 .LLST25
     /tmp/cctWvJoV.s:1321   .text:0000000000000528 .LVL86
     /tmp/cctWvJoV.s:1325   .text:0000000000000530 .LVL87
     /tmp/cctWvJoV.s:5960   .debug_loc:00000000000004ac .LLST19
     /tmp/cctWvJoV.s:6431   .debug_str:0000000000000704 .LASF226
     /tmp/cctWvJoV.s:5971   .debug_loc:00000000000004e2 .LLST20
     /tmp/cctWvJoV.s:6527   .debug_str:0000000000000a08 .LASF227
     /tmp/cctWvJoV.s:5982   .debug_loc:0000000000000518 .LLST21
     /tmp/cctWvJoV.s:1375   .text:0000000000000554 .LVL93
     /tmp/cctWvJoV.s:1382   .text:0000000000000564 .LVL95
     /tmp/cctWvJoV.s:1537   .text:00000000000005f8 .LVL110
     /tmp/cctWvJoV.s:1410   .text:000000000000057c .LBB123
     /tmp/cctWvJoV.s:1472   .text:00000000000005ac .LBE123
     /tmp/cctWvJoV.s:6683   .debug_str:0000000000000e3d .LASF228
     /tmp/cctWvJoV.s:5989   .debug_loc:000000000000053b .LLST17
     /tmp/cctWvJoV.s:1412   .text:000000000000057c .LBB124
     /tmp/cctWvJoV.s:1428   .text:0000000000000588 .LBE124
     /tmp/cctWvJoV.s:1451   .text:00000000000005a0 .LBB126
     /tmp/cctWvJoV.s:1462   .text:00000000000005a4 .LBE126
     /tmp/cctWvJoV.s:5996   .debug_loc:000000000000055e .LLST18
     /tmp/cctWvJoV.s:1444   .text:0000000000000598 .LVL99
GAS LISTING /tmp/cctWvJoV.s 			page 64


     /tmp/cctWvJoV.s:1477   .text:00000000000005b0 .LBB121
     /tmp/cctWvJoV.s:1503   .text:00000000000005c8 .LBE121
     /tmp/cctWvJoV.s:6003   .debug_loc:0000000000000581 .LLST16
     /tmp/cctWvJoV.s:1490   .text:00000000000005bc .LVL104
     /tmp/cctWvJoV.s:765    .text:00000000000002f4 .LBB120
     /tmp/cctWvJoV.s:794    .text:0000000000000318 .LBE120
     /tmp/cctWvJoV.s:6010   .debug_loc:00000000000005a4 .LLST15
     /tmp/cctWvJoV.s:781    .text:0000000000000308 .LVL39
     /tmp/cctWvJoV.s:785    .text:0000000000000314 .LVL40
     /tmp/cctWvJoV.s:576    .text:0000000000000288 .LBB108
     /tmp/cctWvJoV.s:591    .text:0000000000000294 .LBE108
     /tmp/cctWvJoV.s:851    .text:0000000000000358 .LBB214
     /tmp/cctWvJoV.s:864    .text:0000000000000360 .LBE214
     /tmp/cctWvJoV.s:6017   .debug_loc:00000000000005c7 .LLST38
     /tmp/cctWvJoV.s:889    .text:000000000000039c .LBB217
     /tmp/cctWvJoV.s:897    .text:00000000000003a0 .LBE217
     /tmp/cctWvJoV.s:6025   .debug_loc:00000000000005eb .LLST39
     /tmp/cctWvJoV.s:1018   .text:0000000000000400 .LBB229
     /tmp/cctWvJoV.s:1033   .text:0000000000000408 .LBE229
     /tmp/cctWvJoV.s:6032   .debug_loc:000000000000060e .LLST42
     /tmp/cctWvJoV.s:819    .text:0000000000000334 .LVL42
     /tmp/cctWvJoV.s:882    .text:0000000000000390 .LVL47
     /tmp/cctWvJoV.s:532    .text:000000000000024c .LBB104
     /tmp/cctWvJoV.s:548    .text:0000000000000258 .LBE104
     /tmp/cctWvJoV.s:1523   .text:00000000000005e8 .LVL108
     /tmp/cctWvJoV.s:1541   .text:0000000000000604 .LVL111
     /tmp/cctWvJoV.s:344    .text:000000000000015c .LFB31
     /tmp/cctWvJoV.s:488    .text:0000000000000224 .LFE31
     /tmp/cctWvJoV.s:6039   .debug_loc:0000000000000631 .LLST6
     /tmp/cctWvJoV.s:6053   .debug_loc:000000000000066a .LLST7
     /tmp/cctWvJoV.s:6649   .debug_str:0000000000000d4e .LASF229
     /tmp/cctWvJoV.s:6060   .debug_loc:000000000000068d .LLST8
     /tmp/cctWvJoV.s:6082   .debug_loc:00000000000006ec .LLST9
     /tmp/cctWvJoV.s:361    .text:0000000000000174 .LBB98
     /tmp/cctWvJoV.s:377    .text:0000000000000180 .LBE98
     /tmp/cctWvJoV.s:379    .text:0000000000000180 .LBB100
     /tmp/cctWvJoV.s:391    .text:0000000000000188 .LBE100
     /tmp/cctWvJoV.s:6104   .debug_loc:000000000000072d .LLST10
     /tmp/cctWvJoV.s:462    .text:0000000000000208 .LBB102
     /tmp/cctWvJoV.s:473    .text:000000000000020c .LBE102
     /tmp/cctWvJoV.s:6112   .debug_loc:0000000000000751 .LLST11
     /tmp/cctWvJoV.s:446    .text:00000000000001ec .LVL29
     /tmp/cctWvJoV.s:453    .text:00000000000001fc .LVL30
     /tmp/cctWvJoV.s:236    .text:00000000000000ec .LFB30
     /tmp/cctWvJoV.s:338    .text:000000000000015c .LFE30
     /tmp/cctWvJoV.s:6619   .debug_str:0000000000000c9b .LASF230
     /tmp/cctWvJoV.s:6119   .debug_loc:0000000000000774 .LLST2
     /tmp/cctWvJoV.s:6130   .debug_loc:00000000000007aa .LLST3
     /tmp/cctWvJoV.s:254    .text:0000000000000108 .LBB92
     /tmp/cctWvJoV.s:270    .text:0000000000000114 .LBE92
     /tmp/cctWvJoV.s:272    .text:0000000000000114 .LBB94
     /tmp/cctWvJoV.s:285    .text:000000000000011c .LBE94
     /tmp/cctWvJoV.s:6137   .debug_loc:00000000000007cd .LLST4
     /tmp/cctWvJoV.s:311    .text:0000000000000140 .LBB96
     /tmp/cctWvJoV.s:322    .text:0000000000000144 .LBE96
     /tmp/cctWvJoV.s:6145   .debug_loc:00000000000007f1 .LLST5
     /tmp/cctWvJoV.s:295    .text:000000000000012c .LVL13
GAS LISTING /tmp/cctWvJoV.s 			page 65


     /tmp/cctWvJoV.s:201    .text:00000000000000cc .LFB29
     /tmp/cctWvJoV.s:230    .text:00000000000000ec .LFE29
     /tmp/cctWvJoV.s:132    .text:0000000000000084 .LFB28
     /tmp/cctWvJoV.s:164    .text:00000000000000a4 .LFE28
     /tmp/cctWvJoV.s:143    .text:0000000000000090 .LBB90
     /tmp/cctWvJoV.s:155    .text:0000000000000098 .LBE90
     /tmp/cctWvJoV.s:6152   .debug_loc:0000000000000814 .LLST1
     /tmp/cctWvJoV.s:94     .text:0000000000000064 .LFB27
     /tmp/cctWvJoV.s:126    .text:0000000000000084 .LFE27
     /tmp/cctWvJoV.s:105    .text:0000000000000070 .LBB88
     /tmp/cctWvJoV.s:117    .text:0000000000000078 .LBE88
     /tmp/cctWvJoV.s:6160   .debug_loc:0000000000000838 .LLST0
     /tmp/cctWvJoV.s:170    .text:00000000000000a4 .LFB26
     /tmp/cctWvJoV.s:195    .text:00000000000000cc .LFE26
     /tmp/cctWvJoV.s:184    .text:00000000000000bc .LVL9
     /tmp/cctWvJoV.s:42     .text:0000000000000028 .LFB25
     /tmp/cctWvJoV.s:88     .text:0000000000000064 .LFE25
     /tmp/cctWvJoV.s:57     .text:0000000000000040 .LBB86
     /tmp/cctWvJoV.s:69     .text:0000000000000044 .LBE86
     /tmp/cctWvJoV.s:73     .text:000000000000004c .LVL3
     /tmp/cctWvJoV.s:77     .text:0000000000000054 .LVL4
     /tmp/cctWvJoV.s:6327   .debug_str:00000000000003d0 .LASF231
     /tmp/cctWvJoV.s:6673   .debug_str:0000000000000de4 .LASF233
     /tmp/cctWvJoV.s:6703   .debug_str:0000000000000ec3 .LASF234
     /tmp/cctWvJoV.s:6481   .debug_str:000000000000089a .LASF235
     /tmp/cctWvJoV.s:6537   .debug_str:0000000000000a44 .LASF237
     /tmp/cctWvJoV.s:6573   .debug_str:0000000000000b28 .LASF236
     /tmp/cctWvJoV.s:6681   .debug_str:0000000000000e35 .LASF238
     /tmp/cctWvJoV.s:6671   .debug_str:0000000000000dd4 .LASF239
     /tmp/cctWvJoV.s:6715   .debug_str:0000000000000f0f .LASF251
     /tmp/cctWvJoV.s:6267   .debug_str:000000000000013b .LASF252
     /tmp/cctWvJoV.s:6729   .debug_str:0000000000000f7b .LASF240
     /tmp/cctWvJoV.s:6373   .debug_str:0000000000000541 .LASF241
     /tmp/cctWvJoV.s:6379   .debug_str:0000000000000564 .LASF242
     /tmp/cctWvJoV.s:6465   .debug_str:0000000000000825 .LASF243
     /tmp/cctWvJoV.s:1655   .text:000000000000066c .LVL117
     /tmp/cctWvJoV.s:529    .text:000000000000024c .LVL34
     /tmp/cctWvJoV.s:773    .text:00000000000002f8 .LVL38
     /tmp/cctWvJoV.s:796    .text:000000000000031c .LVL41
     /tmp/cctWvJoV.s:844    .text:0000000000000358 .LVL43
     /tmp/cctWvJoV.s:875    .text:000000000000037c .LVL46
     /tmp/cctWvJoV.s:979    .text:00000000000003e8 .LVL54
     /tmp/cctWvJoV.s:1009   .text:00000000000003fc .LVL58
     /tmp/cctWvJoV.s:1030   .text:0000000000000408 .LVL61
     /tmp/cctWvJoV.s:1378   .text:0000000000000558 .LVL94
     /tmp/cctWvJoV.s:1406   .text:000000000000057c .LVL96
     /tmp/cctWvJoV.s:1508   .text:00000000000005d0 .LVL106
     /tmp/cctWvJoV.s:546    .text:0000000000000258 .LVL35
     /tmp/cctWvJoV.s:560    .text:000000000000027c .LVL36
     /tmp/cctWvJoV.s:573    .text:0000000000000288 .LVL37
     /tmp/cctWvJoV.s:856    .text:000000000000035c .LVL44
     /tmp/cctWvJoV.s:1059   .text:000000000000041c .LVL64
     /tmp/cctWvJoV.s:1123   .text:0000000000000468 .LVL70
     /tmp/cctWvJoV.s:1138   .text:000000000000046c .LVL71
     /tmp/cctWvJoV.s:1172   .text:0000000000000498 .LVL74
     /tmp/cctWvJoV.s:1268   .text:00000000000004f0 .LVL81
     /tmp/cctWvJoV.s:1291   .text:00000000000004f8 .LVL83
GAS LISTING /tmp/cctWvJoV.s 			page 66


     /tmp/cctWvJoV.s:1351   .text:0000000000000540 .LVL90
     /tmp/cctWvJoV.s:1421   .text:0000000000000580 .LVL97
     /tmp/cctWvJoV.s:1474   .text:00000000000005b0 .LVL102
     /tmp/cctWvJoV.s:951    .text:00000000000003d8 .LVL51
     /tmp/cctWvJoV.s:960    .text:00000000000003dc .LVL52
     /tmp/cctWvJoV.s:967    .text:00000000000003e0 .LVL53
     /tmp/cctWvJoV.s:994    .text:00000000000003ec .LVL55
     /tmp/cctWvJoV.s:1000   .text:00000000000003f0 .LVL56
     /tmp/cctWvJoV.s:1044   .text:000000000000040c .LVL62
     /tmp/cctWvJoV.s:1078   .text:0000000000000424 .LVL66
     /tmp/cctWvJoV.s:1505   .text:00000000000005cc .LVL105
     /tmp/cctWvJoV.s:1084   .text:0000000000000428 .LVL67
     /tmp/cctWvJoV.s:1072   .text:0000000000000420 .LVL65
     /tmp/cctWvJoV.s:1160   .text:0000000000000490 .LVL73
     /tmp/cctWvJoV.s:1211   .text:00000000000004d0 .LVL76
     /tmp/cctWvJoV.s:1236   .text:00000000000004d8 .LVL77
     /tmp/cctWvJoV.s:1246   .text:00000000000004e4 .LVL79
     /tmp/cctWvJoV.s:1255   .text:00000000000004e8 .LVL80
     /tmp/cctWvJoV.s:1279   .text:00000000000004f4 .LVL82
     /tmp/cctWvJoV.s:1309   .text:000000000000051c .LVL84
     /tmp/cctWvJoV.s:1315   .text:0000000000000520 .LVL85
     /tmp/cctWvJoV.s:1329   .text:0000000000000534 .LVL88
     /tmp/cctWvJoV.s:1338   .text:0000000000000538 .LVL89
     /tmp/cctWvJoV.s:1369   .text:0000000000000548 .LVL92
     /tmp/cctWvJoV.s:1363   .text:0000000000000544 .LVL91
     /tmp/cctWvJoV.s:1527   .text:00000000000005ec .LVL109
     /tmp/cctWvJoV.s:1438   .text:0000000000000590 .LVL98
     /tmp/cctWvJoV.s:1450   .text:00000000000005a0 .LVL100
     /tmp/cctWvJoV.s:1459   .text:00000000000005a4 .LVL101
     /tmp/cctWvJoV.s:1485   .text:00000000000005b4 .LVL103
     /tmp/cctWvJoV.s:861    .text:0000000000000360 .LVL45
     /tmp/cctWvJoV.s:888    .text:000000000000039c .LVL48
     /tmp/cctWvJoV.s:895    .text:00000000000003a0 .LVL49
     /tmp/cctWvJoV.s:1017   .text:0000000000000400 .LVL59
     /tmp/cctWvJoV.s:1026   .text:0000000000000404 .LVL60
     /tmp/cctWvJoV.s:347    .text:000000000000015c .LVL19
     /tmp/cctWvJoV.s:401    .text:000000000000018c .LVL22
     /tmp/cctWvJoV.s:375    .text:0000000000000180 .LVL20
     /tmp/cctWvJoV.s:457    .text:0000000000000200 .LVL31
     /tmp/cctWvJoV.s:405    .text:0000000000000190 .LVL23
     /tmp/cctWvJoV.s:412    .text:0000000000000198 .LVL24
     /tmp/cctWvJoV.s:423    .text:00000000000001bc .LVL25
     /tmp/cctWvJoV.s:433    .text:00000000000001d0 .LVL27
     /tmp/cctWvJoV.s:438    .text:00000000000001d4 .LVL28
     /tmp/cctWvJoV.s:429    .text:00000000000001c8 .LVL26
     /tmp/cctWvJoV.s:388    .text:0000000000000188 .LVL21
     /tmp/cctWvJoV.s:461    .text:0000000000000208 .LVL32
     /tmp/cctWvJoV.s:470    .text:000000000000020c .LVL33
     /tmp/cctWvJoV.s:239    .text:00000000000000ec .LVL10
     /tmp/cctWvJoV.s:281    .text:000000000000011c .LVL12
     /tmp/cctWvJoV.s:331    .text:0000000000000150 .LVL18
     /tmp/cctWvJoV.s:268    .text:0000000000000114 .LVL11
     /tmp/cctWvJoV.s:306    .text:0000000000000138 .LVL15
     /tmp/cctWvJoV.s:310    .text:0000000000000140 .LVL16
     /tmp/cctWvJoV.s:319    .text:0000000000000144 .LVL17
     /tmp/cctWvJoV.s:142    .text:0000000000000090 .LVL7
     /tmp/cctWvJoV.s:152    .text:0000000000000098 .LVL8
GAS LISTING /tmp/cctWvJoV.s 			page 67


     /tmp/cctWvJoV.s:104    .text:0000000000000070 .LVL5
     /tmp/cctWvJoV.s:114    .text:0000000000000078 .LVL6
     /tmp/cctWvJoV.s:1760   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/cctWvJoV.s:563    .text:0000000000000284 .LBB107
     /tmp/cctWvJoV.s:604    .text:00000000000002ac .LBE107
     /tmp/cctWvJoV.s:608    .text:00000000000002ac .LBB233
     /tmp/cctWvJoV.s:615    .text:00000000000002b4 .LBE233
     /tmp/cctWvJoV.s:619    .text:00000000000002b4 .LBB234
     /tmp/cctWvJoV.s:628    .text:00000000000002bc .LBE234
     /tmp/cctWvJoV.s:632    .text:00000000000002bc .LBB235
     /tmp/cctWvJoV.s:643    .text:00000000000002c4 .LBE235
     /tmp/cctWvJoV.s:647    .text:00000000000002c4 .LBB236
     /tmp/cctWvJoV.s:660    .text:00000000000002cc .LBE236
     /tmp/cctWvJoV.s:664    .text:00000000000002cc .LBB237
     /tmp/cctWvJoV.s:679    .text:00000000000002d4 .LBE237
     /tmp/cctWvJoV.s:683    .text:00000000000002d4 .LBB238
     /tmp/cctWvJoV.s:700    .text:00000000000002dc .LBE238
     /tmp/cctWvJoV.s:704    .text:00000000000002dc .LBB239
     /tmp/cctWvJoV.s:723    .text:00000000000002e4 .LBE239
     /tmp/cctWvJoV.s:727    .text:00000000000002e4 .LBB240
     /tmp/cctWvJoV.s:748    .text:00000000000002ec .LBE240
     /tmp/cctWvJoV.s:752    .text:00000000000002ec .LBB241
     /tmp/cctWvJoV.s:808    .text:000000000000031c .LBE241
     /tmp/cctWvJoV.s:814    .text:000000000000032c .LBB242
     /tmp/cctWvJoV.s:822    .text:0000000000000334 .LBE242
     /tmp/cctWvJoV.s:848    .text:0000000000000358 .LBB243
     /tmp/cctWvJoV.s:1218   .text:00000000000004d0 .LBE243
     /tmp/cctWvJoV.s:1222   .text:00000000000004d0 .LBB244
     /tmp/cctWvJoV.s:1551   .text:0000000000000604 .LBE244
     /tmp/cctWvJoV.s:1354   .text:0000000000000540 .LBB131
     /tmp/cctWvJoV.s:1408   .text:000000000000057c .LBE131
     /tmp/cctWvJoV.s:1533   .text:00000000000005ec .LBB133
     /tmp/cctWvJoV.s:1543   .text:0000000000000604 .LBE133
     /tmp/cctWvJoV.s:1178   .text:0000000000000498 .LBB150
     /tmp/cctWvJoV.s:1212   .text:00000000000004d0 .LBE150
     /tmp/cctWvJoV.s:1228   .text:00000000000004d0 .LBB157
     /tmp/cctWvJoV.s:1266   .text:00000000000004ec .LBE157
     /tmp/cctWvJoV.s:1062   .text:000000000000041c .LBB179
     /tmp/cctWvJoV.s:1125   .text:0000000000000468 .LBE179
     /tmp/cctWvJoV.s:1515   .text:00000000000005d0 .LBB182
     /tmp/cctWvJoV.s:1528   .text:00000000000005ec .LBE182
     /tmp/cctWvJoV.s:1557   .gcc_except_table:0000000000000000 .LLSDA32
     /tmp/cctWvJoV.s:1712   .gcc_except_table:000000000000005f .LLSDA33

UNDEFINED SYMBOLS
_Z8userMainv
_ZN5Riscv14supervisorTrapEv
_ZN3PCB10initializeEv
_ZN8KConsole10initializeEv
__putc
_ZN10KSemaphoreD1Ev
_ZN10KSemaphoredlEPv
console_handler
_ZN3PCB16timeSliceCounterE
_ZN12SleepPCBList13tryToWakePCBsEv
_ZN3PCB7runningE
_ZN3PCB8dispatchEv
GAS LISTING /tmp/cctWvJoV.s 			page 68


_Z7kmallocm
_Z5kfreePv
_ZN3PCBnwEm
_ZN3PCBC1EPFvPvES0_S0_m
_ZN12SleepPCBList17insertSleepingPCBEv
_ZN10KSemaphorenwEm
_ZN10KSemaphoreC1Ei
_ZN10KSemaphore4waitEv
_ZN10KSemaphore6signalEv
_ZN3PCBdlEPv
_Unwind_Resume
__gxx_personality_v0
thread_dispatch
