GAS LISTING /tmp/ccsHJaXF.s 			page 1


   1              		.file	"Riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv15userMainWrapperEPv
   9              	_ZN5Riscv15userMainWrapperEPv:
  10              	.LFB35:
  11              		.file 1 "src/Riscv.cpp"
   1:src/Riscv.cpp **** //
   2:src/Riscv.cpp **** // Created by os on 4/27/22.
   3:src/Riscv.cpp **** //
   4:src/Riscv.cpp **** 
   5:src/Riscv.cpp **** #include "../h/Riscv.hpp"
   6:src/Riscv.cpp **** #include "../h/MemoryAllocator.hpp"
   7:src/Riscv.cpp **** #include "../h/PCB.hpp"
   8:src/Riscv.cpp **** #include "../lib/console.h"
   9:src/Riscv.cpp **** #include "../h/syscall_cpp.hpp"
  10:src/Riscv.cpp **** #include "../h/SleepPCBList.hpp"
  11:src/Riscv.cpp **** #include "../h/KConsole.hpp"
  12:src/Riscv.cpp **** #include "../test/userMain.hpp"
  13:src/Riscv.cpp **** 
  14:src/Riscv.cpp **** //extern const uint64 CONSOLE_STATUS;
  15:src/Riscv.cpp **** //extern const uint64 CONSOLE_TX_DATA;
  16:src/Riscv.cpp **** //extern const uint64 CONSOLE_RX_DATA;
  17:src/Riscv.cpp **** 
  18:src/Riscv.cpp **** void Riscv::getCharactersFromConsole()
  19:src/Riscv.cpp **** {
  20:src/Riscv.cpp ****     //uint64 addr = CONSOLE_STATUS;
  21:src/Riscv.cpp ****     //__asm__ volatile("ld a0, %0" : : "r"(addr));
  22:src/Riscv.cpp **** }
  23:src/Riscv.cpp **** 
  24:src/Riscv.cpp **** void Riscv::initSystem()
  25:src/Riscv.cpp **** {
  26:src/Riscv.cpp ****     w_stvec((uint64)&Riscv::supervisorTrap);
  27:src/Riscv.cpp ****     PCB::initialize();
  28:src/Riscv.cpp ****     KConsole::initialize();
  29:src/Riscv.cpp **** }
  30:src/Riscv.cpp **** 
  31:src/Riscv.cpp **** void Riscv::endSystem() {
  32:src/Riscv.cpp ****     //todo
  33:src/Riscv.cpp ****     //da li treba jos nesto da se ocisti
  34:src/Riscv.cpp ****     Riscv::disableInterrupts();
  35:src/Riscv.cpp **** }
  36:src/Riscv.cpp **** 
  37:src/Riscv.cpp **** 
  38:src/Riscv.cpp **** void Riscv::enableInterrupts() {
  39:src/Riscv.cpp ****     ms_sstatus(Riscv::SSTATUS_SIE);
  40:src/Riscv.cpp **** }
  41:src/Riscv.cpp **** 
  42:src/Riscv.cpp **** void Riscv::disableInterrupts()
  43:src/Riscv.cpp **** {
  44:src/Riscv.cpp ****     mc_sstatus(Riscv::SSTATUS_SIE);
  45:src/Riscv.cpp **** }
  46:src/Riscv.cpp **** 
  47:src/Riscv.cpp **** void Riscv::popSppSpie() {
GAS LISTING /tmp/ccsHJaXF.s 			page 2


  48:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
  49:src/Riscv.cpp ****     __asm__ volatile ("sret");
  50:src/Riscv.cpp **** }
  51:src/Riscv.cpp **** 
  52:src/Riscv.cpp **** void Riscv::printString(const char *string)
  53:src/Riscv.cpp **** {
  54:src/Riscv.cpp ****     uint64 sstatus = r_sstatus();
  55:src/Riscv.cpp ****     mc_sstatus(SSTATUS_SIE);
  56:src/Riscv.cpp ****     while (*string != '\0')
  57:src/Riscv.cpp ****     {
  58:src/Riscv.cpp ****         __putc(*string);
  59:src/Riscv.cpp ****         string++;
  60:src/Riscv.cpp ****     }
  61:src/Riscv.cpp ****     ms_sstatus(sstatus & SSTATUS_SIE ? SSTATUS_SIE : 0);
  62:src/Riscv.cpp **** }
  63:src/Riscv.cpp **** 
  64:src/Riscv.cpp **** void Riscv::printInteger(uint64 num)
  65:src/Riscv.cpp **** {
  66:src/Riscv.cpp ****     uint64 sstatus = r_sstatus();
  67:src/Riscv.cpp ****     mc_sstatus(SSTATUS_SIE);
  68:src/Riscv.cpp ****     static char digits[] = "0123456789";
  69:src/Riscv.cpp ****     char buf[16];
  70:src/Riscv.cpp ****     int i, neg;
  71:src/Riscv.cpp ****     uint x;
  72:src/Riscv.cpp **** 
  73:src/Riscv.cpp ****     neg = 0;
  74:src/Riscv.cpp ****     if(num < 0)
  75:src/Riscv.cpp ****     {
  76:src/Riscv.cpp ****         neg = 1;
  77:src/Riscv.cpp ****         x = -num;
  78:src/Riscv.cpp ****     }
  79:src/Riscv.cpp ****     else
  80:src/Riscv.cpp ****         x = num;
  81:src/Riscv.cpp **** 
  82:src/Riscv.cpp ****     i = 0;
  83:src/Riscv.cpp ****     do
  84:src/Riscv.cpp ****     {
  85:src/Riscv.cpp ****         buf[i++] = digits[x%10];
  86:src/Riscv.cpp ****     }while((x/=10) != 0);
  87:src/Riscv.cpp ****     if(neg)
  88:src/Riscv.cpp ****         buf[i++] = '-';
  89:src/Riscv.cpp **** 
  90:src/Riscv.cpp ****     while(--i >= 0)
  91:src/Riscv.cpp ****         __putc(buf[i]);
  92:src/Riscv.cpp **** 
  93:src/Riscv.cpp ****     __putc('\n');
  94:src/Riscv.cpp **** 
  95:src/Riscv.cpp ****     ms_sstatus(sstatus & SSTATUS_SIE ? SSTATUS_SIE : 0);
  96:src/Riscv.cpp **** }
  97:src/Riscv.cpp **** 
  98:src/Riscv.cpp **** void Riscv::handleSupervisorTrap()
  99:src/Riscv.cpp **** {
 100:src/Riscv.cpp ****     uint64 a4;
 101:src/Riscv.cpp ****     __asm__ volatile("mv %0, a4" : "=r"(a4));
 102:src/Riscv.cpp **** 
 103:src/Riscv.cpp ****     uint64 scause = Riscv::r_scause();
 104:src/Riscv.cpp **** 
GAS LISTING /tmp/ccsHJaXF.s 			page 3


 105:src/Riscv.cpp ****     switch(scause)
 106:src/Riscv.cpp ****     {
 107:src/Riscv.cpp **** 
 108:src/Riscv.cpp ****         case timerInterrupt:
 109:src/Riscv.cpp **** 
 110:src/Riscv.cpp ****             Riscv::mc_sip(Riscv::SIP_SSIP);
 111:src/Riscv.cpp ****             //Riscv::printString("timerInterrupt\n");
 112:src/Riscv.cpp **** 
 113:src/Riscv.cpp ****             static uint64 total = 0;
 114:src/Riscv.cpp ****             total++;
 115:src/Riscv.cpp ****             //Riscv::printInteger(total);
 116:src/Riscv.cpp **** 
 117:src/Riscv.cpp ****             PCB::timeSliceCounter++;
 118:src/Riscv.cpp **** 
 119:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
 120:src/Riscv.cpp **** 
 121:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
 122:src/Riscv.cpp ****             {
 123:src/Riscv.cpp ****                 uint64 sepc = Riscv::r_sepc();
 124:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 125:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 126:src/Riscv.cpp ****                 PCB::dispatch();
 127:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 128:src/Riscv.cpp ****                 Riscv::w_sepc(sepc);
 129:src/Riscv.cpp ****             }
 130:src/Riscv.cpp **** 
 131:src/Riscv.cpp ****             return;
 132:src/Riscv.cpp **** 
 133:src/Riscv.cpp ****         case hwInterrupt: // todo
 134:src/Riscv.cpp **** 
 135:src/Riscv.cpp ****             //Riscv::printString("Hardware interrupt...\n");
 136:src/Riscv.cpp **** 
 137:src/Riscv.cpp ****             break;
 138:src/Riscv.cpp **** 
 139:src/Riscv.cpp ****         case operationInterrupt: // todo
 140:src/Riscv.cpp ****             break;
 141:src/Riscv.cpp **** 
 142:src/Riscv.cpp ****         case addrReadInterrupt: // todo
 143:src/Riscv.cpp ****             break;
 144:src/Riscv.cpp **** 
 145:src/Riscv.cpp ****         case addrWriteInterrupt: // todo
 146:src/Riscv.cpp ****             break;
 147:src/Riscv.cpp **** 
 148:src/Riscv.cpp ****         case ecallSystemInterupt:
 149:src/Riscv.cpp ****         case ecallUserInterrupt:
 150:src/Riscv.cpp **** 
 151:src/Riscv.cpp ****             uint64 operation;
 152:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
 153:src/Riscv.cpp **** 
 154:src/Riscv.cpp ****             uint64 sepc = Riscv::r_sepc();
 155:src/Riscv.cpp ****             sepc+=4;
 156:src/Riscv.cpp **** 
 157:src/Riscv.cpp ****             if(operation == MemoryAllocator::MEM_ALLOC)
 158:src/Riscv.cpp ****             {
 159:src/Riscv.cpp ****                 size_t size;
 160:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(size));
 161:src/Riscv.cpp ****                 size*=MEM_BLOCK_SIZE;
GAS LISTING /tmp/ccsHJaXF.s 			page 4


 162:src/Riscv.cpp ****                 void* allocatedAddr = kmalloc(size);
 163:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : : "r"((uint64)allocatedAddr));
 164:src/Riscv.cpp ****             }
 165:src/Riscv.cpp ****             else if(operation == MemoryAllocator::MEM_FREE)
 166:src/Riscv.cpp ****             {
 167:src/Riscv.cpp ****                 uint64 addr = 0;
 168:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(addr));
 169:src/Riscv.cpp ****                 uint64 retval = kfree((void*)addr);
 170:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 171:src/Riscv.cpp ****             }
 172:src/Riscv.cpp ****             else if(operation == PCB::THREAD_CREATE)
 173:src/Riscv.cpp ****             {
 174:src/Riscv.cpp ****                 uint64 start_routine;
 175:src/Riscv.cpp ****                 uint64 args;
 176:src/Riscv.cpp ****                 PCB** threadHandle;
 177:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(threadHandle));
 178:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(start_routine));
 179:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a3" : "=r"(args));
 180:src/Riscv.cpp ****                 //todo
 181:src/Riscv.cpp ****                 //uint64 stack_space;
 182:src/Riscv.cpp ****                 //__asm__ volatile("mv %0, a4" : "=r"(stack_space));
 183:src/Riscv.cpp **** 
 184:src/Riscv.cpp ****                 PCB* newPCB = new PCB((void (*)(void*))start_routine, (void*)args, (void*)a4, DEFAU
 185:src/Riscv.cpp **** 
 186:src/Riscv.cpp ****                 (*threadHandle) = newPCB;
 187:src/Riscv.cpp **** 
 188:src/Riscv.cpp ****                 if(newPCB == 0)
 189:src/Riscv.cpp ****                     __asm__ volatile("li a0, 0xffffffffffffffff");
 190:src/Riscv.cpp ****                 else
 191:src/Riscv.cpp ****                     __asm__ volatile("li a0, 0");
 192:src/Riscv.cpp ****             }
 193:src/Riscv.cpp ****             else if(operation == PCB::THREAD_DISPATCH)
 194:src/Riscv.cpp ****             {
 195:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 196:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 197:src/Riscv.cpp ****                 PCB::dispatch();
 198:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 199:src/Riscv.cpp ****             }
 200:src/Riscv.cpp ****             else if(operation == PCB::THREAD_EXIT)
 201:src/Riscv.cpp ****             {
 202:src/Riscv.cpp ****                 if(PCB::running == 0)
 203:src/Riscv.cpp ****                 {
 204:src/Riscv.cpp ****                     __asm__ volatile("li a0, 0xffffffffffffffff");
 205:src/Riscv.cpp ****                     return;
 206:src/Riscv.cpp ****                 }
 207:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 208:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 209:src/Riscv.cpp ****                 PCB::running->setState(PCB::EXITING);
 210:src/Riscv.cpp ****                 PCB::running->setState(PCB::FINISHED);
 211:src/Riscv.cpp ****                 PCB::dispatch();
 212:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 213:src/Riscv.cpp ****             }
 214:src/Riscv.cpp ****             else if(operation == PCB::TIME_SLEEP)
 215:src/Riscv.cpp ****             {
 216:src/Riscv.cpp ****                 uint64 time;
 217:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(time));
 218:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
GAS LISTING /tmp/ccsHJaXF.s 			page 5


 219:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 220:src/Riscv.cpp ****                 PCB::running->setTimeToSleep(time);
 221:src/Riscv.cpp ****                 SleepPCBList::insertSleepingPCB();
 222:src/Riscv.cpp ****                 PCB::dispatch();
 223:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 224:src/Riscv.cpp ****                 //todo
 225:src/Riscv.cpp ****                 //kad treba vratiti kod greske
 226:src/Riscv.cpp ****                 __asm__ volatile("li a0, 0x0");
 227:src/Riscv.cpp ****             }
 228:src/Riscv.cpp ****             else if(operation == KSemaphore::SEM_OPEN)
 229:src/Riscv.cpp ****             {
 230:src/Riscv.cpp ****                 uint64 val;
 231:src/Riscv.cpp ****                 KSemaphore** semaphoreHandle;
 232:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(semaphoreHandle));
 233:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(val));
 234:src/Riscv.cpp **** 
 235:src/Riscv.cpp ****                 KSemaphore* newSem = new KSemaphore(val);
 236:src/Riscv.cpp **** 
 237:src/Riscv.cpp ****                 (*semaphoreHandle) = newSem;
 238:src/Riscv.cpp **** 
 239:src/Riscv.cpp ****                 if(newSem == 0)
 240:src/Riscv.cpp ****                         __asm__ volatile("li a0, 0xffffffffffffffff");
 241:src/Riscv.cpp ****                 else
 242:src/Riscv.cpp ****                         __asm__ volatile("li a0, 0");
 243:src/Riscv.cpp **** 
 244:src/Riscv.cpp ****             }
 245:src/Riscv.cpp ****             else if(operation == KSemaphore::SEM_WAIT)
 246:src/Riscv.cpp ****             {
 247:src/Riscv.cpp ****                 //todo
 248:src/Riscv.cpp ****                 //negativna povratna vrednost sta i kako
 249:src/Riscv.cpp ****                 KSemaphore* kSem;
 250:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(kSem));
 251:src/Riscv.cpp ****                 uint64 retval = kSem->wait();
 252:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 253:src/Riscv.cpp ****             }
 254:src/Riscv.cpp ****             else if(operation == KSemaphore::SEM_SIGNAL)
 255:src/Riscv.cpp ****             {
 256:src/Riscv.cpp ****                 //todo
 257:src/Riscv.cpp ****                 //negativna povratna vrednost sta i kako
 258:src/Riscv.cpp ****                 KSemaphore* kSem;
 259:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(kSem));
 260:src/Riscv.cpp ****                 uint64 retval = kSem->signal();
 261:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 262:src/Riscv.cpp ****             }
 263:src/Riscv.cpp ****             else if(operation == KSemaphore::SEM_CLOSE)
 264:src/Riscv.cpp ****             {
 265:src/Riscv.cpp ****                 //todo
 266:src/Riscv.cpp ****                 //negativna povratna vrednost sta i kako
 267:src/Riscv.cpp ****                 KSemaphore* kSem;
 268:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(kSem));
 269:src/Riscv.cpp **** 
 270:src/Riscv.cpp ****                 delete kSem;
 271:src/Riscv.cpp **** 
 272:src/Riscv.cpp ****                 __asm__ volatile("li a0, 0");
 273:src/Riscv.cpp ****             }
 274:src/Riscv.cpp **** 
 275:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
GAS LISTING /tmp/ccsHJaXF.s 			page 6


 276:src/Riscv.cpp **** 
 277:src/Riscv.cpp ****             return;
 278:src/Riscv.cpp ****     }
 279:src/Riscv.cpp **** 
 280:src/Riscv.cpp ****     console_handler();
 281:src/Riscv.cpp **** }
 282:src/Riscv.cpp **** 
 283:src/Riscv.cpp **** void Riscv::kernelMain()
 284:src/Riscv.cpp **** {
 285:src/Riscv.cpp ****     initSystem();
 286:src/Riscv.cpp **** 
 287:src/Riscv.cpp ****     //enableInterrupts();
 288:src/Riscv.cpp ****     //todo
 289:src/Riscv.cpp ****     //go to unprivileged mode
 290:src/Riscv.cpp **** 
 291:src/Riscv.cpp ****     PCB* userPCB = new PCB(&Riscv::userMainWrapper, 0, kmalloc(DEFAULT_STACK_SIZE), DEFAULT_TIME_SL
 292:src/Riscv.cpp **** 
 293:src/Riscv.cpp ****     while(userPCB->getState() != PCB::FINISHED)
 294:src/Riscv.cpp ****     {
 295:src/Riscv.cpp ****         //Riscv::printString("main\n");
 296:src/Riscv.cpp ****         thread_dispatch();
 297:src/Riscv.cpp ****     }
 298:src/Riscv.cpp **** 
 299:src/Riscv.cpp ****     //myTests();
 300:src/Riscv.cpp **** 
 301:src/Riscv.cpp ****     //disableInterrupts();
 302:src/Riscv.cpp **** 
 303:src/Riscv.cpp ****     endSystem();
 304:src/Riscv.cpp **** 
 305:src/Riscv.cpp ****     Riscv::printString("End...");
 306:src/Riscv.cpp **** }
 307:src/Riscv.cpp **** 
 308:src/Riscv.cpp **** void Riscv::userMainWrapper(void* ) {
  12              		.loc 1 308 37
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23341100 		sd	ra,8(sp)
  17 0008 23308100 		sd	s0,0(sp)
  18              		.cfi_offset 1, -8
  19              		.cfi_offset 8, -16
  20 000c 13040101 		addi	s0,sp,16
  21              		.cfi_def_cfa 8, 0
 309:src/Riscv.cpp ****     userMain();
  22              		.loc 1 309 5
  23              		.loc 1 309 13 is_stmt 0
  24 0010 97000000 		call	_Z8userMainv@plt
  24      E7800000 
  25              	.LVL0:
 310:src/Riscv.cpp **** }
  26              		.loc 1 310 1
  27 0018 83308100 		ld	ra,8(sp)
  28              		.cfi_restore 1
  29 001c 03340100 		ld	s0,0(sp)
  30              		.cfi_restore 8
  31              		.cfi_def_cfa 2, 16
  32 0020 13010101 		addi	sp,sp,16
GAS LISTING /tmp/ccsHJaXF.s 			page 7


  33              		.cfi_def_cfa_offset 0
  34 0024 67800000 		jr	ra
  35              		.cfi_endproc
  36              	.LFE35:
  38              		.align	2
  39              		.globl	_ZN5Riscv24getCharactersFromConsoleEv
  41              	_ZN5Riscv24getCharactersFromConsoleEv:
  42              	.LFB25:
  19:src/Riscv.cpp ****     //uint64 addr = CONSOLE_STATUS;
  43              		.loc 1 19 1 is_stmt 1
  44              		.cfi_startproc
  45 0028 130101FF 		addi	sp,sp,-16
  46              		.cfi_def_cfa_offset 16
  47 002c 23348100 		sd	s0,8(sp)
  48              		.cfi_offset 8, -8
  49 0030 13040101 		addi	s0,sp,16
  50              		.cfi_def_cfa 8, 0
  22:src/Riscv.cpp **** 
  51              		.loc 1 22 1 is_stmt 0
  52 0034 03348100 		ld	s0,8(sp)
  53              		.cfi_restore 8
  54              		.cfi_def_cfa 2, 16
  55 0038 13010101 		addi	sp,sp,16
  56              		.cfi_def_cfa_offset 0
  57 003c 67800000 		jr	ra
  58              		.cfi_endproc
  59              	.LFE25:
  61              		.align	2
  62              		.globl	_ZN5Riscv10initSystemEv
  64              	_ZN5Riscv10initSystemEv:
  65              	.LFB26:
  25:src/Riscv.cpp ****     w_stvec((uint64)&Riscv::supervisorTrap);
  66              		.loc 1 25 1 is_stmt 1
  67              		.cfi_startproc
  68 0040 130101FF 		addi	sp,sp,-16
  69              		.cfi_def_cfa_offset 16
  70 0044 23341100 		sd	ra,8(sp)
  71 0048 23308100 		sd	s0,0(sp)
  72              		.cfi_offset 1, -8
  73              		.cfi_offset 8, -16
  74 004c 13040101 		addi	s0,sp,16
  75              		.cfi_def_cfa 8, 0
  26:src/Riscv.cpp ****     PCB::initialize();
  76              		.loc 1 26 5
  26:src/Riscv.cpp ****     PCB::initialize();
  77              		.loc 1 26 12 is_stmt 0
  78 0050 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
  78      83B70700 
  79              	.LVL1:
  80              	.LBB82:
  81              	.LBB83:
  82              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 4/27/22.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_0_RISCV_HPP
GAS LISTING /tmp/ccsHJaXF.s 			page 8


   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_0_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** class Riscv
  11:src/../h/Riscv.hpp **** {
  12:src/../h/Riscv.hpp **** private:
  13:src/../h/Riscv.hpp **** 
  14:src/../h/Riscv.hpp **** public:
  15:src/../h/Riscv.hpp ****     static void kernelMain();
  16:src/../h/Riscv.hpp **** 
  17:src/../h/Riscv.hpp ****     static void initSystem();
  18:src/../h/Riscv.hpp ****     static void endSystem();
  19:src/../h/Riscv.hpp **** 
  20:src/../h/Riscv.hpp ****     static void userMainWrapper(void* p);
  21:src/../h/Riscv.hpp **** 
  22:src/../h/Riscv.hpp ****     static void enableInterrupts();
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp ****     static void disableInterrupts();
  25:src/../h/Riscv.hpp **** 
  26:src/../h/Riscv.hpp ****     static void printString(char const *string);
  27:src/../h/Riscv.hpp **** 
  28:src/../h/Riscv.hpp ****     static void printInteger(uint64 num);
  29:src/../h/Riscv.hpp **** 
  30:src/../h/Riscv.hpp ****     static void pushRegisters();
  31:src/../h/Riscv.hpp ****     static void popRegisters();
  32:src/../h/Riscv.hpp **** 
  33:src/../h/Riscv.hpp ****     static uint64 r_scause();
  34:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  35:src/../h/Riscv.hpp **** 
  36:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  37:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
  38:src/../h/Riscv.hpp **** 
  39:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  40:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  41:src/../h/Riscv.hpp **** 
  42:src/../h/Riscv.hpp ****     static uint64 r_stval();
  43:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  44:src/../h/Riscv.hpp **** 
  45:src/../h/Riscv.hpp ****     enum BitMaskSip
  46:src/../h/Riscv.hpp ****     {
  47:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  48:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  49:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9),
  50:src/../h/Riscv.hpp ****     };
  51:src/../h/Riscv.hpp **** 
  52:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  53:src/../h/Riscv.hpp **** 
  54:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  55:src/../h/Riscv.hpp **** 
  56:src/../h/Riscv.hpp ****     static uint64 r_sip();
  57:src/../h/Riscv.hpp **** 
  58:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  59:src/../h/Riscv.hpp **** 
  60:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  61:src/../h/Riscv.hpp ****     {
  62:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
GAS LISTING /tmp/ccsHJaXF.s 			page 9


  63:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  64:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  65:src/../h/Riscv.hpp ****     };
  66:src/../h/Riscv.hpp **** 
  67:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  68:src/../h/Riscv.hpp **** 
  69:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  72:src/../h/Riscv.hpp **** 
  73:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  74:src/../h/Riscv.hpp **** 
  75:src/../h/Riscv.hpp ****     static void popSppSpie();
  76:src/../h/Riscv.hpp **** 
  77:src/../h/Riscv.hpp ****     static void supervisorTrap();
  78:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  79:src/../h/Riscv.hpp **** 
  80:src/../h/Riscv.hpp ****     static void getCharactersFromConsole();
  81:src/../h/Riscv.hpp **** 
  82:src/../h/Riscv.hpp ****     static const uint64 bntOne = 1UL << 63;;
  83:src/../h/Riscv.hpp ****     static const uint64 bntZero = 0UL;
  84:src/../h/Riscv.hpp ****     static const uint64 timerInterrupt = bntOne + 1UL;
  85:src/../h/Riscv.hpp ****     static const uint64 hwInterrupt = bntOne + 9UL;
  86:src/../h/Riscv.hpp ****     static const uint64 operationInterrupt = bntZero + 2UL;
  87:src/../h/Riscv.hpp ****     static const uint64 addrReadInterrupt = bntZero + 5UL;
  88:src/../h/Riscv.hpp ****     static const uint64 addrWriteInterrupt = bntZero + 7UL;
  89:src/../h/Riscv.hpp ****     static const uint64 ecallUserInterrupt = bntZero + 8UL;
  90:src/../h/Riscv.hpp ****     static const uint64 ecallSystemInterupt = bntZero + 9UL;
  91:src/../h/Riscv.hpp **** };
  92:src/../h/Riscv.hpp **** 
  93:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause() {
  94:src/../h/Riscv.hpp ****     uint64 volatile scause;
  95:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
  96:src/../h/Riscv.hpp ****     return scause;
  97:src/../h/Riscv.hpp **** }
  98:src/../h/Riscv.hpp **** 
  99:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
 100:src/../h/Riscv.hpp ****     __asm__ volatile("csrw scause, %0" : :"r"(scause));
 101:src/../h/Riscv.hpp **** }
 102:src/../h/Riscv.hpp **** 
 103:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc() {
 104:src/../h/Riscv.hpp ****     uint64 volatile sepc;
 105:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 106:src/../h/Riscv.hpp ****     return sepc;
 107:src/../h/Riscv.hpp **** }
 108:src/../h/Riscv.hpp **** 
 109:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
 110:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sepc, %0" : :"r"(sepc));
 111:src/../h/Riscv.hpp **** }
 112:src/../h/Riscv.hpp **** 
 113:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec() {
 114:src/../h/Riscv.hpp ****     uint64 volatile stvec;
 115:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, stvec" : "=r"(stvec));
 116:src/../h/Riscv.hpp ****     return stvec;
 117:src/../h/Riscv.hpp **** }
 118:src/../h/Riscv.hpp **** 
 119:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
GAS LISTING /tmp/ccsHJaXF.s 			page 10


 120:src/../h/Riscv.hpp ****     __asm__ volatile("csrw stvec, %0" : :"r"(stvec));
  83              		.loc 2 120 5 is_stmt 1
  84              		.loc 2 120 53 is_stmt 0
  85              	#APP
  86              	# 120 "src/../h/Riscv.hpp" 1
 121              	}
  87              		csrw stvec, a5
  88              	# 0 "" 2
  89              	.LVL2:
  90              	#NO_APP
  91              	.LBE83:
  92              	.LBE82:
  27:src/Riscv.cpp ****     KConsole::initialize();
  93              		.loc 1 27 5 is_stmt 1
  27:src/Riscv.cpp ****     KConsole::initialize();
  94              		.loc 1 27 20 is_stmt 0
  95 005c 97000000 		call	_ZN3PCB10initializeEv@plt
  95      E7800000 
  96              	.LVL3:
  28:src/Riscv.cpp **** }
  97              		.loc 1 28 5 is_stmt 1
  28:src/Riscv.cpp **** }
  98              		.loc 1 28 25 is_stmt 0
  99 0064 97000000 		call	_ZN8KConsole10initializeEv@plt
  99      E7800000 
 100              	.LVL4:
  29:src/Riscv.cpp **** 
 101              		.loc 1 29 1
 102 006c 83308100 		ld	ra,8(sp)
 103              		.cfi_restore 1
 104 0070 03340100 		ld	s0,0(sp)
 105              		.cfi_restore 8
 106              		.cfi_def_cfa 2, 16
 107 0074 13010101 		addi	sp,sp,16
 108              		.cfi_def_cfa_offset 0
 109 0078 67800000 		jr	ra
 110              		.cfi_endproc
 111              	.LFE26:
 113              		.align	2
 114              		.globl	_ZN5Riscv16enableInterruptsEv
 116              	_ZN5Riscv16enableInterruptsEv:
 117              	.LFB28:
  38:src/Riscv.cpp ****     ms_sstatus(Riscv::SSTATUS_SIE);
 118              		.loc 1 38 32 is_stmt 1
 119              		.cfi_startproc
 120 007c 130101FF 		addi	sp,sp,-16
 121              		.cfi_def_cfa_offset 16
 122 0080 23348100 		sd	s0,8(sp)
 123              		.cfi_offset 8, -8
 124 0084 13040101 		addi	s0,sp,16
 125              		.cfi_def_cfa 8, 0
  39:src/Riscv.cpp **** }
 126              		.loc 1 39 5
 127              	.LVL5:
 128              	.LBB84:
 129              	.LBB85:
 122:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/ccsHJaXF.s 			page 11


 123:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stval() {
 124:src/../h/Riscv.hpp ****     uint64 volatile stval;
 125:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, stval" : "=r"(stval));
 126:src/../h/Riscv.hpp ****     return stval;
 127:src/../h/Riscv.hpp **** }
 128:src/../h/Riscv.hpp **** 
 129:src/../h/Riscv.hpp **** inline void Riscv::w_stval(uint64 stval) {
 130:src/../h/Riscv.hpp ****     __asm__ volatile("csrw stval, %0" : :"r"(stval));
 131:src/../h/Riscv.hpp **** }
 132:src/../h/Riscv.hpp **** 
 133:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 134:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sip, %0" : :"r"(mask));
 135:src/../h/Riscv.hpp **** }
 136:src/../h/Riscv.hpp **** 
 137:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 138:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sip, %0" : :"r"(mask));
 139:src/../h/Riscv.hpp **** }
 140:src/../h/Riscv.hpp **** 
 141:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip() {
 142:src/../h/Riscv.hpp ****     uint64 volatile sip;
 143:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sip" : "=r"(sip));
 144:src/../h/Riscv.hpp ****     return sip;
 145:src/../h/Riscv.hpp **** }
 146:src/../h/Riscv.hpp **** 
 147:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 148:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sip, %0" : :"r"(sip));
 149:src/../h/Riscv.hpp **** }
 150:src/../h/Riscv.hpp **** 
 151:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 152:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sstatus, %0" : :"r"(mask));
 130              		.loc 2 152 5
 131              		.loc 2 152 54 is_stmt 0
 132 0088 93072000 		li	a5,2
 133              	#APP
 134              	# 152 "src/../h/Riscv.hpp" 1
 153              	}
 135              		csrs sstatus, a5
 136              	# 0 "" 2
 137              	.LVL6:
 138              	#NO_APP
 139              	.LBE85:
 140              	.LBE84:
  40:src/Riscv.cpp **** 
 141              		.loc 1 40 1
 142 0090 03348100 		ld	s0,8(sp)
 143              		.cfi_restore 8
 144              		.cfi_def_cfa 2, 16
 145 0094 13010101 		addi	sp,sp,16
 146              		.cfi_def_cfa_offset 0
 147 0098 67800000 		jr	ra
 148              		.cfi_endproc
 149              	.LFE28:
 151              		.align	2
 152              		.globl	_ZN5Riscv17disableInterruptsEv
 154              	_ZN5Riscv17disableInterruptsEv:
 155              	.LFB29:
  43:src/Riscv.cpp ****     mc_sstatus(Riscv::SSTATUS_SIE);
GAS LISTING /tmp/ccsHJaXF.s 			page 12


 156              		.loc 1 43 1 is_stmt 1
 157              		.cfi_startproc
 158 009c 130101FF 		addi	sp,sp,-16
 159              		.cfi_def_cfa_offset 16
 160 00a0 23348100 		sd	s0,8(sp)
 161              		.cfi_offset 8, -8
 162 00a4 13040101 		addi	s0,sp,16
 163              		.cfi_def_cfa 8, 0
  44:src/Riscv.cpp **** }
 164              		.loc 1 44 5
 165              	.LVL7:
 166              	.LBB86:
 167              	.LBB87:
 154:src/../h/Riscv.hpp **** 
 155:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 156:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sstatus, %0" : :"r"(mask));
 168              		.loc 2 156 5
 169              		.loc 2 156 54 is_stmt 0
 170 00a8 93072000 		li	a5,2
 171              	#APP
 172              	# 156 "src/../h/Riscv.hpp" 1
 157              	}
 173              		csrc sstatus, a5
 174              	# 0 "" 2
 175              	.LVL8:
 176              	#NO_APP
 177              	.LBE87:
 178              	.LBE86:
  45:src/Riscv.cpp **** 
 179              		.loc 1 45 1
 180 00b0 03348100 		ld	s0,8(sp)
 181              		.cfi_restore 8
 182              		.cfi_def_cfa 2, 16
 183 00b4 13010101 		addi	sp,sp,16
 184              		.cfi_def_cfa_offset 0
 185 00b8 67800000 		jr	ra
 186              		.cfi_endproc
 187              	.LFE29:
 189              		.align	2
 190              		.globl	_ZN5Riscv9endSystemEv
 192              	_ZN5Riscv9endSystemEv:
 193              	.LFB27:
  31:src/Riscv.cpp ****     //todo
 194              		.loc 1 31 25 is_stmt 1
 195              		.cfi_startproc
 196 00bc 130101FF 		addi	sp,sp,-16
 197              		.cfi_def_cfa_offset 16
 198 00c0 23341100 		sd	ra,8(sp)
 199 00c4 23308100 		sd	s0,0(sp)
 200              		.cfi_offset 1, -8
 201              		.cfi_offset 8, -16
 202 00c8 13040101 		addi	s0,sp,16
 203              		.cfi_def_cfa 8, 0
  34:src/Riscv.cpp **** }
 204              		.loc 1 34 5
  34:src/Riscv.cpp **** }
 205              		.loc 1 34 29 is_stmt 0
GAS LISTING /tmp/ccsHJaXF.s 			page 13


 206 00cc 97000000 		call	_ZN5Riscv17disableInterruptsEv
 206      E7800000 
 207              	.LVL9:
  35:src/Riscv.cpp **** 
 208              		.loc 1 35 1
 209 00d4 83308100 		ld	ra,8(sp)
 210              		.cfi_restore 1
 211 00d8 03340100 		ld	s0,0(sp)
 212              		.cfi_restore 8
 213              		.cfi_def_cfa 2, 16
 214 00dc 13010101 		addi	sp,sp,16
 215              		.cfi_def_cfa_offset 0
 216 00e0 67800000 		jr	ra
 217              		.cfi_endproc
 218              	.LFE27:
 220              		.align	2
 221              		.globl	_ZN5Riscv10popSppSpieEv
 223              	_ZN5Riscv10popSppSpieEv:
 224              	.LFB30:
  47:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
 225              		.loc 1 47 26 is_stmt 1
 226              		.cfi_startproc
 227 00e4 130101FF 		addi	sp,sp,-16
 228              		.cfi_def_cfa_offset 16
 229 00e8 23348100 		sd	s0,8(sp)
 230              		.cfi_offset 8, -8
 231 00ec 13040101 		addi	s0,sp,16
 232              		.cfi_def_cfa 8, 0
  48:src/Riscv.cpp ****     __asm__ volatile ("sret");
 233              		.loc 1 48 5
  48:src/Riscv.cpp ****     __asm__ volatile ("sret");
 234              		.loc 1 48 39 is_stmt 0
 235              	#APP
 236              	# 48 "src/Riscv.cpp" 1
  49:src/Riscv.cpp **** }
 237              		csrw sepc, ra
 238              	# 0 "" 2
 239              		.loc 1 49 5 is_stmt 1
  49:src/Riscv.cpp **** }
 240              		.loc 1 49 30 is_stmt 0
 241              	# 49 "src/Riscv.cpp" 1
  50:src/Riscv.cpp **** 
 242              		sret
 243              	# 0 "" 2
 244              		.loc 1 50 1
 245              	#NO_APP
 246 00f8 03348100 		ld	s0,8(sp)
 247              		.cfi_restore 8
 248              		.cfi_def_cfa 2, 16
 249 00fc 13010101 		addi	sp,sp,16
 250              		.cfi_def_cfa_offset 0
 251 0100 67800000 		jr	ra
 252              		.cfi_endproc
 253              	.LFE30:
 255              		.align	2
 256              		.globl	_ZN5Riscv11printStringEPKc
 258              	_ZN5Riscv11printStringEPKc:
GAS LISTING /tmp/ccsHJaXF.s 			page 14


 259              	.LFB31:
  53:src/Riscv.cpp ****     uint64 sstatus = r_sstatus();
 260              		.loc 1 53 1 is_stmt 1
 261              		.cfi_startproc
 262              	.LVL10:
 263 0104 130101FD 		addi	sp,sp,-48
 264              		.cfi_def_cfa_offset 48
 265 0108 23341102 		sd	ra,40(sp)
 266 010c 23308102 		sd	s0,32(sp)
 267 0110 233C9100 		sd	s1,24(sp)
 268 0114 23382101 		sd	s2,16(sp)
 269              		.cfi_offset 1, -8
 270              		.cfi_offset 8, -16
 271              		.cfi_offset 9, -24
 272              		.cfi_offset 18, -32
 273 0118 13040103 		addi	s0,sp,48
 274              		.cfi_def_cfa 8, 0
 275 011c 93040500 		mv	s1,a0
  54:src/Riscv.cpp ****     mc_sstatus(SSTATUS_SIE);
 276              		.loc 1 54 5
 277              	.LBB88:
 278              	.LBB89:
 158:src/../h/Riscv.hpp **** 
 159:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sstatus() {
 160:src/../h/Riscv.hpp ****     uint64 volatile sstatus;
 279              		.loc 2 160 5
 161:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 280              		.loc 2 161 5
 281              		.loc 2 161 57 is_stmt 0
 282              	#APP
 283              	# 161 "src/../h/Riscv.hpp" 1
 162              	    return sstatus;
 284              		csrr a5, sstatus
 285              	# 0 "" 2
 286              	#NO_APP
 287 0124 233CF4FC 		sd	a5,-40(s0)
 288              		.loc 2 162 5 is_stmt 1
 289              		.loc 2 162 12 is_stmt 0
 290 0128 033984FD 		ld	s2,-40(s0)
 291              	.LVL11:
 292              	.LBE89:
 293              	.LBE88:
  55:src/Riscv.cpp ****     while (*string != '\0')
 294              		.loc 1 55 5 is_stmt 1
 295              	.LBB90:
 296              	.LBB91:
 156:src/../h/Riscv.hpp **** }
 297              		.loc 2 156 5
 156:src/../h/Riscv.hpp **** }
 298              		.loc 2 156 54 is_stmt 0
 299 012c 93072000 		li	a5,2
 300              	#APP
 301              	# 156 "src/../h/Riscv.hpp" 1
 302              		csrc sstatus, a5
 303              	# 0 "" 2
 304              	.LVL12:
 305              	#NO_APP
GAS LISTING /tmp/ccsHJaXF.s 			page 15


 306              	.L17:
 307              	.LBE91:
 308              	.LBE90:
  56:src/Riscv.cpp ****     {
 309              		.loc 1 56 5 is_stmt 1
  56:src/Riscv.cpp ****     {
 310              		.loc 1 56 20
  56:src/Riscv.cpp ****     {
 311              		.loc 1 56 12 is_stmt 0
 312 0134 03C50400 		lbu	a0,0(s1)
  56:src/Riscv.cpp ****     {
 313              		.loc 1 56 20
 314 0138 630A0500 		beqz	a0,.L16
  58:src/Riscv.cpp ****         string++;
 315              		.loc 1 58 9 is_stmt 1
  58:src/Riscv.cpp ****         string++;
 316              		.loc 1 58 15 is_stmt 0
 317 013c 97000000 		call	__putc@plt
 317      E7800000 
 318              	.LVL13:
  59:src/Riscv.cpp ****     }
 319              		.loc 1 59 9 is_stmt 1
  59:src/Riscv.cpp ****     }
 320              		.loc 1 59 15 is_stmt 0
 321 0144 93841400 		addi	s1,s1,1
 322              	.LVL14:
  56:src/Riscv.cpp ****     {
 323              		.loc 1 56 5
 324 0148 6FF0DFFE 		j	.L17
 325              	.L16:
  61:src/Riscv.cpp **** }
 326              		.loc 1 61 5 is_stmt 1
  61:src/Riscv.cpp **** }
 327              		.loc 1 61 38 is_stmt 0
 328 014c 1B090900 		sext.w	s2,s2
 329              	.LVL15:
  61:src/Riscv.cpp **** }
 330              		.loc 1 61 15
 331 0150 13792900 		andi	s2,s2,2
 332 0154 1B090900 		sext.w	s2,s2
 333              	.LVL16:
 334              	.LBB92:
 335              	.LBB93:
 152:src/../h/Riscv.hpp **** }
 336              		.loc 2 152 5 is_stmt 1
 152:src/../h/Riscv.hpp **** }
 337              		.loc 2 152 54 is_stmt 0
 338              	#APP
 339              	# 152 "src/../h/Riscv.hpp" 1
 340              		csrs sstatus, s2
 341              	# 0 "" 2
 342              	.LVL17:
 343              	#NO_APP
 344              	.LBE93:
 345              	.LBE92:
  62:src/Riscv.cpp **** 
 346              		.loc 1 62 1
GAS LISTING /tmp/ccsHJaXF.s 			page 16


 347 015c 83308102 		ld	ra,40(sp)
 348              		.cfi_restore 1
 349 0160 03340102 		ld	s0,32(sp)
 350              		.cfi_restore 8
 351              		.cfi_def_cfa 2, 48
 352 0164 83348101 		ld	s1,24(sp)
 353              		.cfi_restore 9
 354              	.LVL18:
 355 0168 03390101 		ld	s2,16(sp)
 356              		.cfi_restore 18
 357 016c 13010103 		addi	sp,sp,48
 358              		.cfi_def_cfa_offset 0
 359 0170 67800000 		jr	ra
 360              		.cfi_endproc
 361              	.LFE31:
 363              		.align	2
 364              		.globl	_ZN5Riscv12printIntegerEm
 366              	_ZN5Riscv12printIntegerEm:
 367              	.LFB32:
  65:src/Riscv.cpp ****     uint64 sstatus = r_sstatus();
 368              		.loc 1 65 1 is_stmt 1
 369              		.cfi_startproc
 370              	.LVL19:
 371 0174 130101FC 		addi	sp,sp,-64
 372              		.cfi_def_cfa_offset 64
 373 0178 233C1102 		sd	ra,56(sp)
 374 017c 23388102 		sd	s0,48(sp)
 375 0180 23349102 		sd	s1,40(sp)
 376 0184 23302103 		sd	s2,32(sp)
 377              		.cfi_offset 1, -8
 378              		.cfi_offset 8, -16
 379              		.cfi_offset 9, -24
 380              		.cfi_offset 18, -32
 381 0188 13040104 		addi	s0,sp,64
 382              		.cfi_def_cfa 8, 0
  66:src/Riscv.cpp ****     mc_sstatus(SSTATUS_SIE);
 383              		.loc 1 66 5
 384              	.LBB94:
 385              	.LBB95:
 160:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 386              		.loc 2 160 5
 161:src/../h/Riscv.hpp ****     return sstatus;
 387              		.loc 2 161 5
 161:src/../h/Riscv.hpp ****     return sstatus;
 388              		.loc 2 161 57 is_stmt 0
 389              	#APP
 390              	# 161 "src/../h/Riscv.hpp" 1
 391              		csrr a5, sstatus
 392              	# 0 "" 2
 393              	#NO_APP
 394 0190 2334F4FC 		sd	a5,-56(s0)
 395              		.loc 2 162 5 is_stmt 1
 396              		.loc 2 162 12 is_stmt 0
 397 0194 033984FC 		ld	s2,-56(s0)
 398              	.LVL20:
 399              	.LBE95:
 400              	.LBE94:
GAS LISTING /tmp/ccsHJaXF.s 			page 17


  67:src/Riscv.cpp ****     static char digits[] = "0123456789";
 401              		.loc 1 67 5 is_stmt 1
 402              	.LBB96:
 403              	.LBB97:
 156:src/../h/Riscv.hpp **** }
 404              		.loc 2 156 5
 156:src/../h/Riscv.hpp **** }
 405              		.loc 2 156 54 is_stmt 0
 406 0198 93072000 		li	a5,2
 407              	#APP
 408              	# 156 "src/../h/Riscv.hpp" 1
 409              		csrc sstatus, a5
 410              	# 0 "" 2
 411              	.LVL21:
 412              	#NO_APP
 413              	.LBE97:
 414              	.LBE96:
  68:src/Riscv.cpp ****     char buf[16];
 415              		.loc 1 68 5 is_stmt 1
  69:src/Riscv.cpp ****     int i, neg;
 416              		.loc 1 69 5
  70:src/Riscv.cpp ****     uint x;
 417              		.loc 1 70 5
  71:src/Riscv.cpp **** 
 418              		.loc 1 71 5
  73:src/Riscv.cpp ****     if(num < 0)
 419              		.loc 1 73 5
  74:src/Riscv.cpp ****     {
 420              		.loc 1 74 5
  80:src/Riscv.cpp **** 
 421              		.loc 1 80 9
  80:src/Riscv.cpp **** 
 422              		.loc 1 80 11 is_stmt 0
 423 01a0 1B050500 		sext.w	a0,a0
 424              	.LVL22:
  82:src/Riscv.cpp ****     do
 425              		.loc 1 82 5 is_stmt 1
  82:src/Riscv.cpp ****     do
 426              		.loc 1 82 7 is_stmt 0
 427 01a4 93040000 		li	s1,0
 428              	.LVL23:
 429              	.L20:
  83:src/Riscv.cpp ****     {
 430              		.loc 1 83 5 is_stmt 1
  85:src/Riscv.cpp ****     }while((x/=10) != 0);
 431              		.loc 1 85 9
  85:src/Riscv.cpp ****     }while((x/=10) != 0);
 432              		.loc 1 85 28 is_stmt 0
 433 01a8 1306A000 		li	a2,10
 434 01ac 3B77C502 		remuw	a4,a0,a2
 435              	.LVL24:
  85:src/Riscv.cpp ****     }while((x/=10) != 0);
 436              		.loc 1 85 31
 437 01b0 93160702 		slli	a3,a4,32
 438 01b4 93D60602 		srli	a3,a3,32
 439 01b8 17070000 		lla	a4,.LANCHOR0
 439      13070700 
GAS LISTING /tmp/ccsHJaXF.s 			page 18


 440 01c0 3307D700 		add	a4,a4,a3
 441 01c4 03470700 		lbu	a4,0(a4)
  85:src/Riscv.cpp ****     }while((x/=10) != 0);
 442              		.loc 1 85 18
 443 01c8 930604FE 		addi	a3,s0,-32
 444 01cc B3879600 		add	a5,a3,s1
 445 01d0 9B841400 		addiw	s1,s1,1
 446              	.LVL25:
 447 01d4 2388E7FE 		sb	a4,-16(a5)
  86:src/Riscv.cpp ****     if(neg)
 448              		.loc 1 86 20 is_stmt 1
 449 01d8 1B070500 		sext.w	a4,a0
  86:src/Riscv.cpp ****     if(neg)
 450              		.loc 1 86 14 is_stmt 0
 451 01dc 3B55C502 		divuw	a0,a0,a2
 452              	.LVL26:
  86:src/Riscv.cpp ****     if(neg)
 453              		.loc 1 86 20
 454 01e0 93079000 		li	a5,9
 455 01e4 E3E2E7FC 		bgtu	a4,a5,.L20
 456              	.LVL27:
 457              	.L22:
  90:src/Riscv.cpp ****         __putc(buf[i]);
 458              		.loc 1 90 5 is_stmt 1
  90:src/Riscv.cpp ****         __putc(buf[i]);
 459              		.loc 1 90 15
 460 01e8 9B84F4FF 		addiw	s1,s1,-1
 461              	.LVL28:
 462 01ec 63CE0400 		bltz	s1,.L21
  91:src/Riscv.cpp **** 
 463              		.loc 1 91 9
  91:src/Riscv.cpp **** 
 464              		.loc 1 91 15 is_stmt 0
 465 01f0 930704FE 		addi	a5,s0,-32
 466 01f4 B3879700 		add	a5,a5,s1
 467 01f8 03C507FF 		lbu	a0,-16(a5)
 468 01fc 97000000 		call	__putc@plt
 468      E7800000 
 469              	.LVL29:
 470 0204 6FF05FFE 		j	.L22
 471              	.L21:
  93:src/Riscv.cpp **** 
 472              		.loc 1 93 5 is_stmt 1
  93:src/Riscv.cpp **** 
 473              		.loc 1 93 11 is_stmt 0
 474 0208 1305A000 		li	a0,10
 475 020c 97000000 		call	__putc@plt
 475      E7800000 
 476              	.LVL30:
  95:src/Riscv.cpp **** }
 477              		.loc 1 95 5 is_stmt 1
  95:src/Riscv.cpp **** }
 478              		.loc 1 95 38 is_stmt 0
 479 0214 1B090900 		sext.w	s2,s2
 480              	.LVL31:
  95:src/Riscv.cpp **** }
 481              		.loc 1 95 15
GAS LISTING /tmp/ccsHJaXF.s 			page 19


 482 0218 13792900 		andi	s2,s2,2
 483 021c 1B090900 		sext.w	s2,s2
 484              	.LVL32:
 485              	.LBB98:
 486              	.LBB99:
 152:src/../h/Riscv.hpp **** }
 487              		.loc 2 152 5 is_stmt 1
 152:src/../h/Riscv.hpp **** }
 488              		.loc 2 152 54 is_stmt 0
 489              	#APP
 490              	# 152 "src/../h/Riscv.hpp" 1
 491              		csrs sstatus, s2
 492              	# 0 "" 2
 493              	.LVL33:
 494              	#NO_APP
 495              	.LBE99:
 496              	.LBE98:
  96:src/Riscv.cpp **** 
 497              		.loc 1 96 1
 498 0224 83308103 		ld	ra,56(sp)
 499              		.cfi_restore 1
 500 0228 03340103 		ld	s0,48(sp)
 501              		.cfi_restore 8
 502              		.cfi_def_cfa 2, 64
 503 022c 83348102 		ld	s1,40(sp)
 504              		.cfi_restore 9
 505 0230 03390102 		ld	s2,32(sp)
 506              		.cfi_restore 18
 507 0234 13010104 		addi	sp,sp,64
 508              		.cfi_def_cfa_offset 0
 509 0238 67800000 		jr	ra
 510              		.cfi_endproc
 511              	.LFE32:
 513              		.align	2
 514              		.globl	_ZN5Riscv20handleSupervisorTrapEv
 516              	_ZN5Riscv20handleSupervisorTrapEv:
 517              	.LFB33:
  99:src/Riscv.cpp ****     uint64 a4;
 518              		.loc 1 99 1 is_stmt 1
 519              		.cfi_startproc
 520              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 521              		.cfi_lsda 0x1b,.LLSDA33
 522 023c 130101F8 		addi	sp,sp,-128
 523              		.cfi_def_cfa_offset 128
 524 0240 233C1106 		sd	ra,120(sp)
 525 0244 23388106 		sd	s0,112(sp)
 526 0248 23349106 		sd	s1,104(sp)
 527 024c 23302107 		sd	s2,96(sp)
 528 0250 233C3105 		sd	s3,88(sp)
 529 0254 23384105 		sd	s4,80(sp)
 530 0258 23345105 		sd	s5,72(sp)
 531 025c 23306105 		sd	s6,64(sp)
 532              		.cfi_offset 1, -8
 533              		.cfi_offset 8, -16
 534              		.cfi_offset 9, -24
 535              		.cfi_offset 18, -32
 536              		.cfi_offset 19, -40
GAS LISTING /tmp/ccsHJaXF.s 			page 20


 537              		.cfi_offset 20, -48
 538              		.cfi_offset 21, -56
 539              		.cfi_offset 22, -64
 540 0260 13040108 		addi	s0,sp,128
 541              		.cfi_def_cfa 8, 0
 100:src/Riscv.cpp ****     __asm__ volatile("mv %0, a4" : "=r"(a4));
 542              		.loc 1 100 5
 101:src/Riscv.cpp **** 
 543              		.loc 1 101 5
 101:src/Riscv.cpp **** 
 544              		.loc 1 101 45 is_stmt 0
 545              	#APP
 546              	# 101 "src/Riscv.cpp" 1
 547              		mv s2, a4
 548              	# 0 "" 2
 549              	.LVL34:
 103:src/Riscv.cpp **** 
 550              		.loc 1 103 5 is_stmt 1
 551              	#NO_APP
 552              	.LBB100:
 553              	.LBB101:
  94:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
 554              		.loc 2 94 5
  95:src/../h/Riscv.hpp ****     return scause;
 555              		.loc 2 95 5
  95:src/../h/Riscv.hpp ****     return scause;
 556              		.loc 2 95 55 is_stmt 0
 557              	#APP
 558              	# 95 "src/../h/Riscv.hpp" 1
 559              		csrr a5, scause
 560              	# 0 "" 2
 561              	#NO_APP
 562 026c 2334F4F8 		sd	a5,-120(s0)
  96:src/../h/Riscv.hpp **** }
 563              		.loc 2 96 5 is_stmt 1
  96:src/../h/Riscv.hpp **** }
 564              		.loc 2 96 12 is_stmt 0
 565 0270 033784F8 		ld	a4,-120(s0)
 566              	.LVL35:
 567              	.LBE101:
 568              	.LBE100:
 105:src/Riscv.cpp ****     {
 569              		.loc 1 105 5 is_stmt 1
 570              	.LBB102:
 571 0274 93079000 		li	a5,9
 572 0278 63FEE708 		bleu	a4,a5,.L48
 573 027c 9307F0FF 		li	a5,-1
 574 0280 9397F703 		slli	a5,a5,63
 575 0284 93871700 		addi	a5,a5,1
 576 0288 631AF708 		bne	a4,a5,.L27
 577              	.LBB103:
 108:src/Riscv.cpp **** 
 578              		.loc 1 108 9
 110:src/Riscv.cpp ****             //Riscv::printString("timerInterrupt\n");
 579              		.loc 1 110 13
 580              	.LVL36:
 581              	.LBB104:
GAS LISTING /tmp/ccsHJaXF.s 			page 21


 582              	.LBB105:
 138:src/../h/Riscv.hpp **** }
 583              		.loc 2 138 5
 138:src/../h/Riscv.hpp **** }
 584              		.loc 2 138 50 is_stmt 0
 585 028c 93072000 		li	a5,2
 586              	#APP
 587              	# 138 "src/../h/Riscv.hpp" 1
 588              		csrc sip, a5
 589              	# 0 "" 2
 590              	.LVL37:
 591              	#NO_APP
 592              	.LBE105:
 593              	.LBE104:
 113:src/Riscv.cpp ****             total++;
 594              		.loc 1 113 13 is_stmt 1
 114:src/Riscv.cpp ****             //Riscv::printInteger(total);
 595              		.loc 1 114 13
 114:src/Riscv.cpp ****             //Riscv::printInteger(total);
 596              		.loc 1 114 18 is_stmt 0
 597 0294 17070000 		lla	a4,.LANCHOR1
 597      13070700 
 598              	.LVL38:
 599 029c 83370700 		ld	a5,0(a4)
 600 02a0 93871700 		addi	a5,a5,1
 601 02a4 2330F700 		sd	a5,0(a4)
 117:src/Riscv.cpp **** 
 602              		.loc 1 117 13 is_stmt 1
 117:src/Riscv.cpp **** 
 603              		.loc 1 117 34 is_stmt 0
 604 02a8 97040000 		la	s1,_ZN3PCB16timeSliceCounterE
 604      83B40400 
 605 02b0 83B70400 		ld	a5,0(s1)
 606 02b4 93871700 		addi	a5,a5,1
 607 02b8 23B0F400 		sd	a5,0(s1)
 119:src/Riscv.cpp **** 
 608              		.loc 1 119 13 is_stmt 1
 609              	.LEHB0:
 119:src/Riscv.cpp **** 
 610              		.loc 1 119 40 is_stmt 0
 611 02bc 97000000 		call	_ZN12SleepPCBList13tryToWakePCBsEv@plt
 611      E7800000 
 612              	.LVL39:
 121:src/Riscv.cpp ****             {
 613              		.loc 1 121 13 is_stmt 1
 614              	.LBB106:
 121:src/Riscv.cpp ****             {
 615              		.loc 1 121 68 is_stmt 0
 616 02c4 97070000 		la	a5,_ZN3PCB7runningE
 616      83B70700 
 617 02cc 83B70700 		ld	a5,0(a5)
 618              	.LVL40:
 619              	.LBB107:
 620              	.LBB108:
 621              		.file 3 "src/../h/PCB.hpp"
   1:src/../h/PCB.hpp **** //
   2:src/../h/PCB.hpp **** // Created by os on 4/27/22.
GAS LISTING /tmp/ccsHJaXF.s 			page 22


   3:src/../h/PCB.hpp **** //
   4:src/../h/PCB.hpp **** 
   5:src/../h/PCB.hpp **** #ifndef PROJECT_BASE_V1_0_PCB_HPP
   6:src/../h/PCB.hpp **** #define PROJECT_BASE_V1_0_PCB_HPP
   7:src/../h/PCB.hpp **** 
   8:src/../h/PCB.hpp **** #include "../lib/hw.h"
   9:src/../h/PCB.hpp **** #include "Scheduler.hpp"
  10:src/../h/PCB.hpp **** #include "Riscv.hpp"
  11:src/../h/PCB.hpp **** 
  12:src/../h/PCB.hpp **** class PCB
  13:src/../h/PCB.hpp **** {
  14:src/../h/PCB.hpp **** public:
  15:src/../h/PCB.hpp ****     using Body = void (*)(void*);
  16:src/../h/PCB.hpp **** 
  17:src/../h/PCB.hpp ****     PCB(Body body,  void* args, void* stack_space, uint64 timeSlice);
  18:src/../h/PCB.hpp ****     ~PCB();
  19:src/../h/PCB.hpp **** 
  20:src/../h/PCB.hpp ****     void start();
  21:src/../h/PCB.hpp ****     static void dispatch();
  22:src/../h/PCB.hpp ****     static void sleep(time_t);
  23:src/../h/PCB.hpp **** 
  24:src/../h/PCB.hpp ****     static PCB* running;
  25:src/../h/PCB.hpp ****     static PCB* exitingPCB;
  26:src/../h/PCB.hpp **** 
  27:src/../h/PCB.hpp ****     static uint64 timeSliceCounter;
  28:src/../h/PCB.hpp ****     uint64 getTimeSlice() { return timeSlice;}
 622              		.loc 3 28 29 is_stmt 1
 623              		.loc 3 28 36 is_stmt 0
 624 02d0 83B70701 		ld	a5,16(a5)
 625              	.LVL41:
 626              	.LBE108:
 627              	.LBE107:
 121:src/Riscv.cpp ****             {
 628              		.loc 1 121 39
 629 02d4 03B70400 		ld	a4,0(s1)
 121:src/Riscv.cpp ****             {
 630              		.loc 1 121 13
 631 02d8 6366F704 		bltu	a4,a5,.L24
 632              	.LBB109:
 123:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 633              		.loc 1 123 17 is_stmt 1
 634              	.LBB110:
 635              	.LBB111:
 104:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 636              		.loc 2 104 5
 105:src/../h/Riscv.hpp ****     return sepc;
 637              		.loc 2 105 5
 105:src/../h/Riscv.hpp ****     return sepc;
 638              		.loc 2 105 51 is_stmt 0
 639              	#APP
 640              	# 105 "src/../h/Riscv.hpp" 1
 641              		csrr a5, sepc
 642              	# 0 "" 2
 643              	#NO_APP
 644 02e0 233CF4F8 		sd	a5,-104(s0)
 106:src/../h/Riscv.hpp **** }
 645              		.loc 2 106 5 is_stmt 1
GAS LISTING /tmp/ccsHJaXF.s 			page 23


 106:src/../h/Riscv.hpp **** }
 646              		.loc 2 106 12 is_stmt 0
 647 02e4 833484F9 		ld	s1,-104(s0)
 648              	.LVL42:
 649              	.LBE111:
 650              	.LBE110:
 124:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 651              		.loc 1 124 17 is_stmt 1
 652              	.LBB112:
 653              	.LBB113:
 160:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 654              		.loc 2 160 5
 161:src/../h/Riscv.hpp ****     return sstatus;
 655              		.loc 2 161 5
 161:src/../h/Riscv.hpp ****     return sstatus;
 656              		.loc 2 161 57 is_stmt 0
 657              	#APP
 658              	# 161 "src/../h/Riscv.hpp" 1
 659              		csrr a5, sstatus
 660              	# 0 "" 2
 661              	#NO_APP
 662 02ec 2338F4F8 		sd	a5,-112(s0)
 663              		.loc 2 162 5 is_stmt 1
 664              		.loc 2 162 12 is_stmt 0
 665 02f0 033904F9 		ld	s2,-112(s0)
 666              	.LVL43:
 667              	.LBE113:
 668              	.LBE112:
 125:src/Riscv.cpp ****                 PCB::dispatch();
 669              		.loc 1 125 17 is_stmt 1
 125:src/Riscv.cpp ****                 PCB::dispatch();
 670              		.loc 1 125 39 is_stmt 0
 671 02f4 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 671      83B70700 
 672 02fc 23B00700 		sd	zero,0(a5)
 126:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 673              		.loc 1 126 17 is_stmt 1
 126:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 674              		.loc 1 126 30 is_stmt 0
 675 0300 97000000 		call	_ZN3PCB8dispatchEv@plt
 675      E7800000 
 676              	.LVL44:
 127:src/Riscv.cpp ****                 Riscv::w_sepc(sepc);
 677              		.loc 1 127 17 is_stmt 1
 678              	.LBB114:
 679              	.LBB115:
 163:src/../h/Riscv.hpp **** }
 164:src/../h/Riscv.hpp **** 
 165:src/../h/Riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus) {
 166:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sstatus, %0" : :"r"(sstatus));
 680              		.loc 2 166 5
 681              		.loc 2 166 57 is_stmt 0
 682              	#APP
 683              	# 166 "src/../h/Riscv.hpp" 1
 167              	}
 684              		csrw sstatus, s2
 685              	# 0 "" 2
GAS LISTING /tmp/ccsHJaXF.s 			page 24


 686              	.LVL45:
 687              	#NO_APP
 688              	.LBE115:
 689              	.LBE114:
 128:src/Riscv.cpp ****             }
 690              		.loc 1 128 17 is_stmt 1
 691              	.LBB116:
 692              	.LBB117:
 110:src/../h/Riscv.hpp **** }
 693              		.loc 2 110 5
 110:src/../h/Riscv.hpp **** }
 694              		.loc 2 110 51 is_stmt 0
 695              	#APP
 696              	# 110 "src/../h/Riscv.hpp" 1
 111:src/../h/Riscv.hpp **** 
 697              		csrw sepc, s1
 698              	# 0 "" 2
 699              		.loc 2 111 1
 700              	#NO_APP
 701 0310 6F004001 		j	.L24
 702              	.LVL46:
 703              	.L48:
 704              	.LBE117:
 705              	.LBE116:
 706              	.LBE109:
 707              	.LBE106:
 708              	.LBE103:
 105:src/Riscv.cpp ****     {
 709              		.loc 1 105 5
 710 0314 93078000 		li	a5,8
 711 0318 637AF702 		bgeu	a4,a5,.L49
 712              	.L27:
 713              	.LBE102:
 280:src/Riscv.cpp **** }
 714              		.loc 1 280 5 is_stmt 1
 280:src/Riscv.cpp **** }
 715              		.loc 1 280 20 is_stmt 0
 716 031c 97000000 		call	console_handler@plt
 716      E7800000 
 717              	.LVL47:
 718              	.L24:
 281:src/Riscv.cpp **** 
 719              		.loc 1 281 1
 720 0324 83308107 		ld	ra,120(sp)
 721              		.cfi_remember_state
 722              		.cfi_restore 1
 723 0328 03340107 		ld	s0,112(sp)
 724              		.cfi_restore 8
 725              		.cfi_def_cfa 2, 128
 726 032c 83348106 		ld	s1,104(sp)
 727              		.cfi_restore 9
 728 0330 03390106 		ld	s2,96(sp)
 729              		.cfi_restore 18
 730 0334 83398105 		ld	s3,88(sp)
 731              		.cfi_restore 19
 732 0338 033A0105 		ld	s4,80(sp)
 733              		.cfi_restore 20
GAS LISTING /tmp/ccsHJaXF.s 			page 25


 734 033c 833A8104 		ld	s5,72(sp)
 735              		.cfi_restore 21
 736 0340 033B0104 		ld	s6,64(sp)
 737              		.cfi_restore 22
 738 0344 13010108 		addi	sp,sp,128
 739              		.cfi_def_cfa_offset 0
 740 0348 67800000 		jr	ra
 741              	.LVL48:
 742              	.L49:
 743              		.cfi_restore_state
 744              	.LBB235:
 745              	.LBB224:
 148:src/Riscv.cpp ****         case ecallUserInterrupt:
 746              		.loc 1 148 9 is_stmt 1
 149:src/Riscv.cpp **** 
 747              		.loc 1 149 9
 151:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
 748              		.loc 1 151 13
 152:src/Riscv.cpp **** 
 749              		.loc 1 152 13
 152:src/Riscv.cpp **** 
 750              		.loc 1 152 61 is_stmt 0
 751              	#APP
 752              	# 152 "src/Riscv.cpp" 1
 753              		mv a5, a0
 754              	# 0 "" 2
 755              	.LVL49:
 154:src/Riscv.cpp ****             sepc+=4;
 756              		.loc 1 154 13 is_stmt 1
 757              	#NO_APP
 758              	.LBB118:
 759              	.LBB119:
 104:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 760              		.loc 2 104 5
 105:src/../h/Riscv.hpp ****     return sepc;
 761              		.loc 2 105 5
 105:src/../h/Riscv.hpp ****     return sepc;
 762              		.loc 2 105 51 is_stmt 0
 763              	#APP
 764              	# 105 "src/../h/Riscv.hpp" 1
 765              		csrr a4, sepc
 766              	# 0 "" 2
 767              	.LVL50:
 768              	#NO_APP
 769 0354 2330E4FA 		sd	a4,-96(s0)
 106:src/../h/Riscv.hpp **** }
 770              		.loc 2 106 5 is_stmt 1
 106:src/../h/Riscv.hpp **** }
 771              		.loc 2 106 12 is_stmt 0
 772 0358 033704FA 		ld	a4,-96(s0)
 773              	.LVL51:
 774              	.LBE119:
 775              	.LBE118:
 155:src/Riscv.cpp **** 
 776              		.loc 1 155 13 is_stmt 1
 155:src/Riscv.cpp **** 
 777              		.loc 1 155 17 is_stmt 0
GAS LISTING /tmp/ccsHJaXF.s 			page 26


 778 035c 93044700 		addi	s1,a4,4
 779              	.LVL52:
 157:src/Riscv.cpp ****             {
 780              		.loc 1 157 13 is_stmt 1
 781              	.LBB120:
 782 0360 13071000 		li	a4,1
 783 0364 638AE706 		beq	a5,a4,.L50
 784              	.LBE120:
 785              	.LBE224:
 786              	.LBE235:
 165:src/Riscv.cpp ****             {
 787              		.loc 1 165 18
 788              	.LBB236:
 789              	.LBB225:
 790              	.LBB211:
 791              	.LBB121:
 792 0368 13072000 		li	a4,2
 793 036c 6384E708 		beq	a5,a4,.L51
 794              	.LBE121:
 795              	.LBE211:
 796              	.LBE225:
 797              	.LBE236:
 172:src/Riscv.cpp ****             {
 798              		.loc 1 172 18
 799              	.LBB237:
 800              	.LBB226:
 801              	.LBB212:
 802              	.LBB200:
 803              	.LBB122:
 804 0370 13071001 		li	a4,17
 805 0374 638AE708 		beq	a5,a4,.L52
 806              	.LBE122:
 807              	.LBE200:
 808              	.LBE212:
 809              	.LBE226:
 810              	.LBE237:
 193:src/Riscv.cpp ****             {
 811              		.loc 1 193 18
 812              	.LBB238:
 813              	.LBB227:
 814              	.LBB213:
 815              	.LBB201:
 816              	.LBB190:
 817              	.LBB123:
 818 0378 13073001 		li	a4,19
 819 037c 638CE70C 		beq	a5,a4,.L53
 820              	.LBE123:
 821              	.LBE190:
 822              	.LBE201:
 823              	.LBE213:
 824              	.LBE227:
 825              	.LBE238:
 200:src/Riscv.cpp ****             {
 826              		.loc 1 200 18
 827              	.LBB239:
 828              	.LBB228:
 829              	.LBB214:
GAS LISTING /tmp/ccsHJaXF.s 			page 27


 830              	.LBB202:
 831              	.LBB191:
 832              	.LBB179:
 833              	.LBB124:
 834 0380 13072001 		li	a4,18
 835 0384 638CE70E 		beq	a5,a4,.L54
 836              	.LBE124:
 837              	.LBE179:
 838              	.LBE191:
 839              	.LBE202:
 840              	.LBE214:
 841              	.LBE228:
 842              	.LBE239:
 214:src/Riscv.cpp ****             {
 843              		.loc 1 214 18
 844              	.LBB240:
 845              	.LBB229:
 846              	.LBB215:
 847              	.LBB203:
 848              	.LBB192:
 849              	.LBB180:
 850              	.LBB166:
 851              	.LBB125:
 852 0388 13071003 		li	a4,49
 853 038c 6382E714 		beq	a5,a4,.L55
 854              	.LBE125:
 855              	.LBE166:
 856              	.LBE180:
 857              	.LBE192:
 858              	.LBE203:
 859              	.LBE215:
 860              	.LBE229:
 861              	.LBE240:
 228:src/Riscv.cpp ****             {
 862              		.loc 1 228 18
 863              	.LBB241:
 864              	.LBB230:
 865              	.LBB216:
 866              	.LBB204:
 867              	.LBB193:
 868              	.LBB181:
 869              	.LBB167:
 870              	.LBB152:
 871              	.LBB126:
 872 0390 13071002 		li	a4,33
 873 0394 6382E718 		beq	a5,a4,.L56
 874              	.LBE126:
 875              	.LBE152:
 876              	.LBE167:
 877              	.LBE181:
 878              	.LBE193:
 879              	.LBE204:
 880              	.LBE216:
 881              	.LBE230:
 882              	.LBE241:
 245:src/Riscv.cpp ****             {
 883              		.loc 1 245 18
GAS LISTING /tmp/ccsHJaXF.s 			page 28


 884              	.LBB242:
 885              	.LBB231:
 886              	.LBB217:
 887              	.LBB205:
 888              	.LBB194:
 889              	.LBB182:
 890              	.LBB168:
 891              	.LBB153:
 892              	.LBB140:
 893              	.LBB127:
 894 0398 13073002 		li	a4,35
 895 039c 638CE71A 		beq	a5,a4,.L57
 896              	.LBE127:
 897              	.LBE140:
 898              	.LBE153:
 899              	.LBE168:
 900              	.LBE182:
 901              	.LBE194:
 902              	.LBE205:
 903              	.LBE217:
 904              	.LBE231:
 905              	.LBE242:
 254:src/Riscv.cpp ****             {
 906              		.loc 1 254 18
 907              	.LBB243:
 908              	.LBB232:
 909              	.LBB218:
 910              	.LBB206:
 911              	.LBB195:
 912              	.LBB183:
 913              	.LBB169:
 914              	.LBB154:
 915              	.LBB141:
 916              	.LBB135:
 917              	.LBB128:
 918 03a0 13074002 		li	a4,36
 919 03a4 6382E71C 		beq	a5,a4,.L58
 920              	.LBE128:
 921              	.LBE135:
 922              	.LBE141:
 923              	.LBE154:
 924              	.LBE169:
 925              	.LBE183:
 926              	.LBE195:
 927              	.LBE206:
 928              	.LBE218:
 929              	.LBE232:
 930              	.LBE243:
 263:src/Riscv.cpp ****             {
 931              		.loc 1 263 18
 932              	.LBB244:
 933              	.LBB233:
 934              	.LBB219:
 935              	.LBB207:
 936              	.LBB196:
 937              	.LBB184:
 938              	.LBB170:
GAS LISTING /tmp/ccsHJaXF.s 			page 29


 939              	.LBB155:
 940              	.LBB142:
 941              	.LBB136:
 942              	.LBB132:
 943              	.LBB129:
 944 03a8 13072002 		li	a4,34
 945 03ac 6390E704 		bne	a5,a4,.L30
 946              	.LBB130:
 267:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(kSem));
 947              		.loc 1 267 17
 268:src/Riscv.cpp **** 
 948              		.loc 1 268 17
 268:src/Riscv.cpp **** 
 949              		.loc 1 268 59 is_stmt 0
 950              	#APP
 951              	# 268 "src/Riscv.cpp" 1
 952              		mv s2, a1
 953              	# 0 "" 2
 954              	.LVL53:
 270:src/Riscv.cpp **** 
 955              		.loc 1 270 17 is_stmt 1
 270:src/Riscv.cpp **** 
 956              		.loc 1 270 28 is_stmt 0
 957              	#NO_APP
 958 03b4 630E0900 		beqz	s2,.L42
 270:src/Riscv.cpp **** 
 959              		.loc 1 270 24 discriminator 1
 960 03b8 13050900 		mv	a0,s2
 961 03bc 97000000 		call	_ZN10KSemaphoreD1Ev@plt
 961      E7800000 
 962              	.LVL54:
 963 03c4 13050900 		mv	a0,s2
 964 03c8 97000000 		call	_ZN10KSemaphoredlEPv@plt
 964      E7800000 
 965              	.LVL55:
 966              	.L42:
 272:src/Riscv.cpp ****             }
 967              		.loc 1 272 17 is_stmt 1
 272:src/Riscv.cpp ****             }
 968              		.loc 1 272 45 is_stmt 0
 969              	#APP
 970              	# 272 "src/Riscv.cpp" 1
 971              		li a0, 0
 972              	# 0 "" 2
 973              	#NO_APP
 974              	.LBE130:
 975 03d4 6F008001 		j	.L30
 976              	.LVL56:
 977              	.L50:
 978              	.LBE129:
 979              	.LBE132:
 980              	.LBE136:
 981              	.LBE142:
 982              	.LBE155:
 983              	.LBE170:
 984              	.LBE184:
 985              	.LBE196:
GAS LISTING /tmp/ccsHJaXF.s 			page 30


 986              	.LBE207:
 987              	.LBB208:
 159:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(size));
 988              		.loc 1 159 17 is_stmt 1
 160:src/Riscv.cpp ****                 size*=MEM_BLOCK_SIZE;
 989              		.loc 1 160 17
 160:src/Riscv.cpp ****                 size*=MEM_BLOCK_SIZE;
 990              		.loc 1 160 59 is_stmt 0
 991              	#APP
 992              	# 160 "src/Riscv.cpp" 1
 993              		mv a0, a1
 994              	# 0 "" 2
 995              	.LVL57:
 161:src/Riscv.cpp ****                 void* allocatedAddr = kmalloc(size);
 996              		.loc 1 161 17 is_stmt 1
 162:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : : "r"((uint64)allocatedAddr));
 997              		.loc 1 162 17
 162:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : : "r"((uint64)allocatedAddr));
 998              		.loc 1 162 46 is_stmt 0
 999              	#NO_APP
 1000 03dc 13156500 		slli	a0,a0,6
 1001              	.LVL58:
 1002 03e0 97000000 		call	_Z7kmallocm@plt
 1002      E7800000 
 1003              	.LVL59:
 163:src/Riscv.cpp ****             }
 1004              		.loc 1 163 17 is_stmt 1
 163:src/Riscv.cpp ****             }
 1005              		.loc 1 163 76 is_stmt 0
 1006              	#APP
 1007              	# 163 "src/Riscv.cpp" 1
 1008              		mv a0,a0
 1009              	# 0 "" 2
 1010              	.LVL60:
 1011              	#NO_APP
 1012              	.L30:
 1013              	.LBE208:
 1014              	.LBE219:
 275:src/Riscv.cpp **** 
 1015              		.loc 1 275 13 is_stmt 1
 1016              	.LBB220:
 1017              	.LBB221:
 110:src/../h/Riscv.hpp **** }
 1018              		.loc 2 110 5
 110:src/../h/Riscv.hpp **** }
 1019              		.loc 2 110 51 is_stmt 0
 1020              	#APP
 1021              	# 110 "src/../h/Riscv.hpp" 1
 111:src/../h/Riscv.hpp **** 
 1022              		csrw sepc, s1
 1023              	# 0 "" 2
 1024              		.loc 2 111 1
 1025              	#NO_APP
 1026 03f0 6FF05FF3 		j	.L24
 1027              	.LVL61:
 1028              	.L51:
 1029              	.LBE221:
GAS LISTING /tmp/ccsHJaXF.s 			page 31


 1030              	.LBE220:
 1031              	.LBB222:
 1032              	.LBB209:
 1033              	.LBB197:
 167:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(addr));
 1034              		.loc 1 167 17 is_stmt 1
 168:src/Riscv.cpp ****                 uint64 retval = kfree((void*)addr);
 1035              		.loc 1 168 17
 168:src/Riscv.cpp ****                 uint64 retval = kfree((void*)addr);
 1036              		.loc 1 168 59 is_stmt 0
 1037              	#APP
 1038              	# 168 "src/Riscv.cpp" 1
 1039              		mv a0, a1
 1040              	# 0 "" 2
 1041              	.LVL62:
 169:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 1042              		.loc 1 169 17 is_stmt 1
 169:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 1043              		.loc 1 169 38 is_stmt 0
 1044              	#NO_APP
 1045 03f8 97000000 		call	_Z5kfreePv@plt
 1045      E7800000 
 1046              	.LVL63:
 170:src/Riscv.cpp ****             }
 1047              		.loc 1 170 17 is_stmt 1
 170:src/Riscv.cpp ****             }
 1048              		.loc 1 170 60 is_stmt 0
 1049              	#APP
 1050              	# 170 "src/Riscv.cpp" 1
 1051              		mv a0,a0
 1052              	# 0 "" 2
 1053              	#NO_APP
 1054              	.LBE197:
 1055 0404 6FF09FFE 		j	.L30
 1056              	.LVL64:
 1057              	.L52:
 1058              	.LBB198:
 1059              	.LBB185:
 174:src/Riscv.cpp ****                 uint64 args;
 1060              		.loc 1 174 17 is_stmt 1
 175:src/Riscv.cpp ****                 PCB** threadHandle;
 1061              		.loc 1 175 17
 176:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(threadHandle));
 1062              		.loc 1 176 17
 177:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(start_routine));
 1063              		.loc 1 177 17
 177:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(start_routine));
 1064              		.loc 1 177 67 is_stmt 0
 1065              	#APP
 1066              	# 177 "src/Riscv.cpp" 1
 1067              		mv s4, a1
 1068              	# 0 "" 2
 1069              	.LVL65:
 178:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a3" : "=r"(args));
 1070              		.loc 1 178 17 is_stmt 1
 178:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a3" : "=r"(args));
 1071              		.loc 1 178 68 is_stmt 0
GAS LISTING /tmp/ccsHJaXF.s 			page 32


 1072              	# 178 "src/Riscv.cpp" 1
 1073              		mv s5, a2
 1074              	# 0 "" 2
 1075              	.LVL66:
 179:src/Riscv.cpp ****                 //todo
 1076              		.loc 1 179 17 is_stmt 1
 179:src/Riscv.cpp ****                 //todo
 1077              		.loc 1 179 59 is_stmt 0
 1078              	# 179 "src/Riscv.cpp" 1
 1079              		mv s6, a3
 1080              	# 0 "" 2
 1081              	.LVL67:
 184:src/Riscv.cpp **** 
 1082              		.loc 1 184 17 is_stmt 1
 184:src/Riscv.cpp **** 
 1083              		.loc 1 184 113 is_stmt 0
 1084              	#NO_APP
 1085 0414 13058005 		li	a0,88
 1086 0418 97000000 		call	_ZN3PCBnwEm@plt
 1086      E7800000 
 1087              	.LVL68:
 1088              	.LEHE0:
 1089 0420 93090500 		mv	s3,a0
 1090 0424 13072000 		li	a4,2
 1091 0428 93060900 		mv	a3,s2
 1092 042c 13060B00 		mv	a2,s6
 1093 0430 93850A00 		mv	a1,s5
 1094              	.LEHB1:
 1095 0434 97000000 		call	_ZN3PCBC1EPFvPvES0_S0_m@plt
 1095      E7800000 
 1096              	.LVL69:
 1097              	.LEHE1:
 186:src/Riscv.cpp **** 
 1098              		.loc 1 186 17 is_stmt 1 discriminator 2
 186:src/Riscv.cpp **** 
 1099              		.loc 1 186 33 is_stmt 0 discriminator 2
 1100 043c 23303A01 		sd	s3,0(s4)
 188:src/Riscv.cpp ****                     __asm__ volatile("li a0, 0xffffffffffffffff");
 1101              		.loc 1 188 17 is_stmt 1 discriminator 2
 1102 0440 63860900 		beqz	s3,.L59
 191:src/Riscv.cpp ****             }
 1103              		.loc 1 191 21
 191:src/Riscv.cpp ****             }
 1104              		.loc 1 191 49 is_stmt 0
 1105              	#APP
 1106              	# 191 "src/Riscv.cpp" 1
 1107              		li a0, 0
 1108              	# 0 "" 2
 1109              	#NO_APP
 1110 0448 6FF05FFA 		j	.L30
 1111              	.L59:
 189:src/Riscv.cpp ****                 else
 1112              		.loc 1 189 21 is_stmt 1
 189:src/Riscv.cpp ****                 else
 1113              		.loc 1 189 66 is_stmt 0
 1114              	#APP
 1115              	# 189 "src/Riscv.cpp" 1
GAS LISTING /tmp/ccsHJaXF.s 			page 33


 1116              		li a0, 0xffffffffffffffff
 1117              	# 0 "" 2
 1118              	#NO_APP
 1119 0450 6FF0DFF9 		j	.L30
 1120              	.LVL70:
 1121              	.L53:
 1122              	.LBE185:
 1123              	.LBB186:
 1124              	.LBB171:
 195:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 1125              		.loc 1 195 17 is_stmt 1
 1126              	.LBB172:
 1127              	.LBB173:
 160:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 1128              		.loc 2 160 5
 161:src/../h/Riscv.hpp ****     return sstatus;
 1129              		.loc 2 161 5
 161:src/../h/Riscv.hpp ****     return sstatus;
 1130              		.loc 2 161 57 is_stmt 0
 1131              	#APP
 1132              	# 161 "src/../h/Riscv.hpp" 1
 1133              		csrr a5, sstatus
 1134              	# 0 "" 2
 1135              	.LVL71:
 1136              	#NO_APP
 1137 0458 2334F4FA 		sd	a5,-88(s0)
 162:src/../h/Riscv.hpp **** }
 1138              		.loc 2 162 5 is_stmt 1
 162:src/../h/Riscv.hpp **** }
 1139              		.loc 2 162 12 is_stmt 0
 1140 045c 033984FA 		ld	s2,-88(s0)
 1141              	.LVL72:
 1142              	.LBE173:
 1143              	.LBE172:
 196:src/Riscv.cpp ****                 PCB::dispatch();
 1144              		.loc 1 196 17 is_stmt 1
 196:src/Riscv.cpp ****                 PCB::dispatch();
 1145              		.loc 1 196 39 is_stmt 0
 1146 0460 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 1146      83B70700 
 1147 0468 23B00700 		sd	zero,0(a5)
 197:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1148              		.loc 1 197 17 is_stmt 1
 1149              	.LEHB2:
 197:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1150              		.loc 1 197 30 is_stmt 0
 1151 046c 97000000 		call	_ZN3PCB8dispatchEv@plt
 1151      E7800000 
 1152              	.LVL73:
 198:src/Riscv.cpp ****             }
 1153              		.loc 1 198 17 is_stmt 1
 1154              	.LBB174:
 1155              	.LBB175:
 166:src/../h/Riscv.hpp **** }
 1156              		.loc 2 166 5
 166:src/../h/Riscv.hpp **** }
 1157              		.loc 2 166 57 is_stmt 0
GAS LISTING /tmp/ccsHJaXF.s 			page 34


 1158              	#APP
 1159              	# 166 "src/../h/Riscv.hpp" 1
 1160              		csrw sstatus, s2
 1161              	# 0 "" 2
 1162              		.loc 2 167 1
 1163              	#NO_APP
 1164 0478 6FF05FF7 		j	.L30
 1165              	.LVL74:
 1166              	.L54:
 1167              	.LBE175:
 1168              	.LBE174:
 1169              	.LBE171:
 1170              	.LBB176:
 1171              	.LBB156:
 202:src/Riscv.cpp ****                 {
 1172              		.loc 1 202 17 is_stmt 1
 202:src/Riscv.cpp ****                 {
 1173              		.loc 1 202 33 is_stmt 0
 1174 047c 97070000 		la	a5,_ZN3PCB7runningE
 1174      83B70700 
 1175              	.LVL75:
 1176 0484 83B70700 		ld	a5,0(a5)
 202:src/Riscv.cpp ****                 {
 1177              		.loc 1 202 17
 1178 0488 63800704 		beqz	a5,.L60
 207:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 1179              		.loc 1 207 17 is_stmt 1
 1180              	.LBB157:
 1181              	.LBB158:
 160:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 1182              		.loc 2 160 5
 161:src/../h/Riscv.hpp ****     return sstatus;
 1183              		.loc 2 161 5
 161:src/../h/Riscv.hpp ****     return sstatus;
 1184              		.loc 2 161 57 is_stmt 0
 1185              	#APP
 1186              	# 161 "src/../h/Riscv.hpp" 1
 1187              		csrr a5, sstatus
 1188              	# 0 "" 2
 1189              	#NO_APP
 1190 0490 2338F4FA 		sd	a5,-80(s0)
 162:src/../h/Riscv.hpp **** }
 1191              		.loc 2 162 5 is_stmt 1
 162:src/../h/Riscv.hpp **** }
 1192              		.loc 2 162 12 is_stmt 0
 1193 0494 033904FB 		ld	s2,-80(s0)
 1194              	.LVL76:
 1195              	.LBE158:
 1196              	.LBE157:
 208:src/Riscv.cpp ****                 PCB::running->setState(PCB::EXITING);
 1197              		.loc 1 208 17 is_stmt 1
 208:src/Riscv.cpp ****                 PCB::running->setState(PCB::EXITING);
 1198              		.loc 1 208 39 is_stmt 0
 1199 0498 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 1199      83B70700 
 1200 04a0 23B00700 		sd	zero,0(a5)
 209:src/Riscv.cpp ****                 PCB::running->setState(PCB::FINISHED);
GAS LISTING /tmp/ccsHJaXF.s 			page 35


 1201              		.loc 1 209 17 is_stmt 1
 209:src/Riscv.cpp ****                 PCB::running->setState(PCB::FINISHED);
 1202              		.loc 1 209 39 is_stmt 0
 1203 04a4 97070000 		la	a5,_ZN3PCB7runningE
 1203      83B70700 
 1204 04ac 83B70700 		ld	a5,0(a5)
 1205              	.LVL77:
 1206              	.LBE156:
 1207              	.LBE176:
 1208              	.LBE186:
 1209              	.LBE198:
 1210              	.LBE209:
 1211              	.LBE222:
 1212              	.LBE233:
 1213              	.LBE244:
  29:src/../h/PCB.hpp **** 
  30:src/../h/PCB.hpp ****     void* operator new(size_t size);
  31:src/../h/PCB.hpp ****     void operator delete(void *p);
  32:src/../h/PCB.hpp **** 
  33:src/../h/PCB.hpp ****     enum State{READY, RUNNING, SUSPENDED, FINISHED, EXITING, SLEEPING};
  34:src/../h/PCB.hpp ****     State getState() {return state;}
  35:src/../h/PCB.hpp ****     void setState(State s) {state = s;}
 1214              		.loc 3 35 29 is_stmt 1
 1215              	.LBB245:
 1216              	.LBB234:
 1217              	.LBB223:
 1218              	.LBB210:
 1219              	.LBB199:
 1220              	.LBB187:
 1221              	.LBB177:
 1222              	.LBB163:
 210:src/Riscv.cpp ****                 PCB::dispatch();
 1223              		.loc 1 210 17
 1224              	.LBB159:
 1225              	.LBB160:
 1226              		.loc 3 35 29
 1227              		.loc 3 35 35 is_stmt 0
 1228 04b0 13073000 		li	a4,3
 1229 04b4 23ACE702 		sw	a4,56(a5)
 1230              	.LVL78:
 1231              	.LBE160:
 1232              	.LBE159:
 211:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1233              		.loc 1 211 17 is_stmt 1
 211:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1234              		.loc 1 211 30 is_stmt 0
 1235 04b8 97000000 		call	_ZN3PCB8dispatchEv@plt
 1235      E7800000 
 1236              	.LVL79:
 212:src/Riscv.cpp ****             }
 1237              		.loc 1 212 17 is_stmt 1
 1238              	.LBB161:
 1239              	.LBB162:
 166:src/../h/Riscv.hpp **** }
 1240              		.loc 2 166 5
 166:src/../h/Riscv.hpp **** }
 1241              		.loc 2 166 57 is_stmt 0
GAS LISTING /tmp/ccsHJaXF.s 			page 36


 1242              	#APP
 1243              	# 166 "src/../h/Riscv.hpp" 1
 1244              		csrw sstatus, s2
 1245              	# 0 "" 2
 1246              		.loc 2 167 1
 1247              	#NO_APP
 1248 04c4 6FF09FF2 		j	.L30
 1249              	.LVL80:
 1250              	.L60:
 1251              	.LBE162:
 1252              	.LBE161:
 204:src/Riscv.cpp ****                     return;
 1253              		.loc 1 204 21 is_stmt 1
 204:src/Riscv.cpp ****                     return;
 1254              		.loc 1 204 66 is_stmt 0
 1255              	#APP
 1256              	# 204 "src/Riscv.cpp" 1
 205:src/Riscv.cpp ****                 }
 1257              		li a0, 0xffffffffffffffff
 1258              	# 0 "" 2
 1259              		.loc 1 205 21 is_stmt 1
 1260              	#NO_APP
 1261 04cc 6FF09FE5 		j	.L24
 1262              	.LVL81:
 1263              	.L55:
 1264              	.LBE163:
 1265              	.LBB164:
 1266              	.LBB143:
 216:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(time));
 1267              		.loc 1 216 17
 217:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 1268              		.loc 1 217 17
 217:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 1269              		.loc 1 217 59 is_stmt 0
 1270              	#APP
 1271              	# 217 "src/Riscv.cpp" 1
 1272              		mv a4, a1
 1273              	# 0 "" 2
 1274              	.LVL82:
 218:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 1275              		.loc 1 218 17 is_stmt 1
 1276              	#NO_APP
 1277              	.LBB144:
 1278              	.LBB145:
 160:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 1279              		.loc 2 160 5
 161:src/../h/Riscv.hpp ****     return sstatus;
 1280              		.loc 2 161 5
 161:src/../h/Riscv.hpp ****     return sstatus;
 1281              		.loc 2 161 57 is_stmt 0
 1282              	#APP
 1283              	# 161 "src/../h/Riscv.hpp" 1
 1284              		csrr a5, sstatus
 1285              	# 0 "" 2
 1286              	.LVL83:
 1287              	#NO_APP
 1288 04d8 233CF4FA 		sd	a5,-72(s0)
GAS LISTING /tmp/ccsHJaXF.s 			page 37


 162:src/../h/Riscv.hpp **** }
 1289              		.loc 2 162 5 is_stmt 1
 162:src/../h/Riscv.hpp **** }
 1290              		.loc 2 162 12 is_stmt 0
 1291 04dc 033984FB 		ld	s2,-72(s0)
 1292              	.LVL84:
 1293              	.LBE145:
 1294              	.LBE144:
 219:src/Riscv.cpp ****                 PCB::running->setTimeToSleep(time);
 1295              		.loc 1 219 17 is_stmt 1
 219:src/Riscv.cpp ****                 PCB::running->setTimeToSleep(time);
 1296              		.loc 1 219 39 is_stmt 0
 1297 04e0 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 1297      83B70700 
 1298 04e8 23B00700 		sd	zero,0(a5)
 220:src/Riscv.cpp ****                 SleepPCBList::insertSleepingPCB();
 1299              		.loc 1 220 17 is_stmt 1
 220:src/Riscv.cpp ****                 SleepPCBList::insertSleepingPCB();
 1300              		.loc 1 220 45 is_stmt 0
 1301 04ec 97070000 		la	a5,_ZN3PCB7runningE
 1301      83B70700 
 1302 04f4 83B70700 		ld	a5,0(a5)
 1303              	.LVL85:
 1304              	.LBB146:
 1305              	.LBB147:
  36:src/../h/PCB.hpp ****     void setTimeToSleep(uint64 time) {timeToSleep = time;}
 1306              		.loc 3 36 39 is_stmt 1
 1307              		.loc 3 36 51 is_stmt 0
 1308 04f8 23BCE700 		sd	a4,24(a5)
 1309              	.LVL86:
 1310              	.LBE147:
 1311              	.LBE146:
 221:src/Riscv.cpp ****                 PCB::dispatch();
 1312              		.loc 1 221 17 is_stmt 1
 221:src/Riscv.cpp ****                 PCB::dispatch();
 1313              		.loc 1 221 48 is_stmt 0
 1314 04fc 97000000 		call	_ZN12SleepPCBList17insertSleepingPCBEv@plt
 1314      E7800000 
 1315              	.LVL87:
 222:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1316              		.loc 1 222 17 is_stmt 1
 222:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1317              		.loc 1 222 30 is_stmt 0
 1318 0504 97000000 		call	_ZN3PCB8dispatchEv@plt
 1318      E7800000 
 1319              	.LVL88:
 223:src/Riscv.cpp ****                 //todo
 1320              		.loc 1 223 17 is_stmt 1
 1321              	.LBB148:
 1322              	.LBB149:
 166:src/../h/Riscv.hpp **** }
 1323              		.loc 2 166 5
 166:src/../h/Riscv.hpp **** }
 1324              		.loc 2 166 57 is_stmt 0
 1325              	#APP
 1326              	# 166 "src/../h/Riscv.hpp" 1
 1327              		csrw sstatus, s2
GAS LISTING /tmp/ccsHJaXF.s 			page 38


 1328              	# 0 "" 2
 1329              	.LVL89:
 1330              	#NO_APP
 1331              	.LBE149:
 1332              	.LBE148:
 226:src/Riscv.cpp ****             }
 1333              		.loc 1 226 17 is_stmt 1
 226:src/Riscv.cpp ****             }
 1334              		.loc 1 226 47 is_stmt 0
 1335              	#APP
 1336              	# 226 "src/Riscv.cpp" 1
 1337              		li a0, 0x0
 1338              	# 0 "" 2
 1339              	#NO_APP
 1340              	.LBE143:
 1341 0514 6FF09FED 		j	.L30
 1342              	.LVL90:
 1343              	.L56:
 1344              	.LBB150:
 1345              	.LBB137:
 230:src/Riscv.cpp ****                 KSemaphore** semaphoreHandle;
 1346              		.loc 1 230 17 is_stmt 1
 231:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(semaphoreHandle));
 1347              		.loc 1 231 17
 232:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(val));
 1348              		.loc 1 232 17
 232:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(val));
 1349              		.loc 1 232 70 is_stmt 0
 1350              	#APP
 1351              	# 232 "src/Riscv.cpp" 1
 1352              		mv s3, a1
 1353              	# 0 "" 2
 1354              	.LVL91:
 233:src/Riscv.cpp **** 
 1355              		.loc 1 233 17 is_stmt 1
 233:src/Riscv.cpp **** 
 1356              		.loc 1 233 58 is_stmt 0
 1357              	# 233 "src/Riscv.cpp" 1
 1358              		mv s4, a2
 1359              	# 0 "" 2
 1360              	.LVL92:
 235:src/Riscv.cpp **** 
 1361              		.loc 1 235 17 is_stmt 1
 235:src/Riscv.cpp **** 
 1362              		.loc 1 235 56 is_stmt 0
 1363              	#NO_APP
 1364 0520 13058001 		li	a0,24
 1365 0524 97000000 		call	_ZN10KSemaphorenwEm@plt
 1365      E7800000 
 1366              	.LVL93:
 1367              	.LEHE2:
 1368 052c 13090500 		mv	s2,a0
 1369              	.LVL94:
 1370 0530 9B050A00 		sext.w	a1,s4
 1371              	.LEHB3:
 1372 0534 97000000 		call	_ZN10KSemaphoreC1Ei@plt
 1372      E7800000 
GAS LISTING /tmp/ccsHJaXF.s 			page 39


 1373              	.LVL95:
 1374              	.LEHE3:
 237:src/Riscv.cpp **** 
 1375              		.loc 1 237 17 is_stmt 1 discriminator 2
 237:src/Riscv.cpp **** 
 1376              		.loc 1 237 36 is_stmt 0 discriminator 2
 1377 053c 23B02901 		sd	s2,0(s3)
 239:src/Riscv.cpp ****                         __asm__ volatile("li a0, 0xffffffffffffffff");
 1378              		.loc 1 239 17 is_stmt 1 discriminator 2
 1379 0540 63060900 		beqz	s2,.L61
 242:src/Riscv.cpp **** 
 1380              		.loc 1 242 25
 242:src/Riscv.cpp **** 
 1381              		.loc 1 242 53 is_stmt 0
 1382              	#APP
 1383              	# 242 "src/Riscv.cpp" 1
 1384              		li a0, 0
 1385              	# 0 "" 2
 1386              	#NO_APP
 1387 0548 6FF05FEA 		j	.L30
 1388              	.L61:
 240:src/Riscv.cpp ****                 else
 1389              		.loc 1 240 25 is_stmt 1
 240:src/Riscv.cpp ****                 else
 1390              		.loc 1 240 70 is_stmt 0
 1391              	#APP
 1392              	# 240 "src/Riscv.cpp" 1
 1393              		li a0, 0xffffffffffffffff
 1394              	# 0 "" 2
 1395              	#NO_APP
 1396 0550 6FF0DFE9 		j	.L30
 1397              	.LVL96:
 1398              	.L57:
 1399              	.LBE137:
 1400              	.LBB138:
 1401              	.LBB133:
 249:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(kSem));
 1402              		.loc 1 249 17 is_stmt 1
 250:src/Riscv.cpp ****                 uint64 retval = kSem->wait();
 1403              		.loc 1 250 17
 250:src/Riscv.cpp ****                 uint64 retval = kSem->wait();
 1404              		.loc 1 250 59 is_stmt 0
 1405              	#APP
 1406              	# 250 "src/Riscv.cpp" 1
 1407              		mv a0, a1
 1408              	# 0 "" 2
 1409              	.LVL97:
 251:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 1410              		.loc 1 251 17 is_stmt 1
 1411              	.LEHB4:
 251:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 1412              		.loc 1 251 43 is_stmt 0
 1413              	#NO_APP
 1414 0558 97000000 		call	_ZN10KSemaphore4waitEv@plt
 1414      E7800000 
 1415              	.LVL98:
 252:src/Riscv.cpp ****             }
GAS LISTING /tmp/ccsHJaXF.s 			page 40


 1416              		.loc 1 252 17 is_stmt 1
 252:src/Riscv.cpp ****             }
 1417              		.loc 1 252 60 is_stmt 0
 1418              	#APP
 1419              	# 252 "src/Riscv.cpp" 1
 1420              		mv a0,a0
 1421              	# 0 "" 2
 1422              	#NO_APP
 1423              	.LBE133:
 1424 0564 6FF09FE8 		j	.L30
 1425              	.LVL99:
 1426              	.L58:
 1427              	.LBB134:
 1428              	.LBB131:
 258:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(kSem));
 1429              		.loc 1 258 17 is_stmt 1
 259:src/Riscv.cpp ****                 uint64 retval = kSem->signal();
 1430              		.loc 1 259 17
 259:src/Riscv.cpp ****                 uint64 retval = kSem->signal();
 1431              		.loc 1 259 59 is_stmt 0
 1432              	#APP
 1433              	# 259 "src/Riscv.cpp" 1
 1434              		mv a0, a1
 1435              	# 0 "" 2
 1436              	.LVL100:
 260:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 1437              		.loc 1 260 17 is_stmt 1
 260:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 1438              		.loc 1 260 45 is_stmt 0
 1439              	#NO_APP
 1440 056c 97000000 		call	_ZN10KSemaphore6signalEv@plt
 1440      E7800000 
 1441              	.LVL101:
 1442              	.LEHE4:
 261:src/Riscv.cpp ****             }
 1443              		.loc 1 261 17 is_stmt 1
 261:src/Riscv.cpp ****             }
 1444              		.loc 1 261 60 is_stmt 0
 1445              	#APP
 1446              	# 261 "src/Riscv.cpp" 1
 1447              		mv a0,a0
 1448              	# 0 "" 2
 1449              	#NO_APP
 1450              	.LBE131:
 1451 0578 6FF05FE7 		j	.L30
 1452              	.LVL102:
 1453              	.L45:
 1454 057c 93040500 		mv	s1,a0
 1455              	.LVL103:
 1456              	.LBE134:
 1457              	.LBE138:
 1458              	.LBE150:
 1459              	.LBE164:
 1460              	.LBE177:
 1461              	.LBE187:
 1462              	.LBB188:
 184:src/Riscv.cpp **** 
GAS LISTING /tmp/ccsHJaXF.s 			page 41


 1463              		.loc 1 184 113
 1464 0580 13850900 		mv	a0,s3
 1465 0584 97000000 		call	_ZN3PCBdlEPv@plt
 1465      E7800000 
 1466              	.LVL104:
 1467 058c 13850400 		mv	a0,s1
 1468              	.LEHB5:
 1469 0590 97000000 		call	_Unwind_Resume@plt
 1469      E7800000 
 1470              	.LVL105:
 1471              	.LEHE5:
 1472              	.L46:
 1473 0598 93040500 		mv	s1,a0
 1474              	.LVL106:
 1475              	.LBE188:
 1476              	.LBB189:
 1477              	.LBB178:
 1478              	.LBB165:
 1479              	.LBB151:
 1480              	.LBB139:
 235:src/Riscv.cpp **** 
 1481              		.loc 1 235 56
 1482 059c 13050900 		mv	a0,s2
 1483 05a0 97000000 		call	_ZN10KSemaphoredlEPv@plt
 1483      E7800000 
 1484              	.LVL107:
 1485 05a8 13850400 		mv	a0,s1
 1486              	.LEHB6:
 1487 05ac 97000000 		call	_Unwind_Resume@plt
 1487      E7800000 
 1488              	.LVL108:
 1489              	.LEHE6:
 1490              	.LBE139:
 1491              	.LBE151:
 1492              	.LBE165:
 1493              	.LBE178:
 1494              	.LBE189:
 1495              	.LBE199:
 1496              	.LBE210:
 1497              	.LBE223:
 1498              	.LBE234:
 1499              	.LBE245:
 1500              		.cfi_endproc
 1501              	.LFE33:
 1502              		.globl	__gxx_personality_v0
 1503              		.section	.gcc_except_table,"a",@progbits
 1504              	.LLSDA33:
 1505 0000 FF       		.byte	0xff
 1506 0001 FF       		.byte	0xff
 1507 0002 03       		.byte	0x3
 1508 0003 5B       		.byte	0x5b
 1509 0004 00000000 		.4byte	.LEHB0-.LFB33
 1510 0008 00000000 		.4byte	.LEHE0-.LEHB0
 1511 000c 00000000 		.4byte	0
 1512 0010 00       		.byte	0
 1513 0011 00000000 		.4byte	.LEHB1-.LFB33
 1514 0015 00000000 		.4byte	.LEHE1-.LEHB1
GAS LISTING /tmp/ccsHJaXF.s 			page 42


 1515 0019 00000000 		.4byte	.L45-.LFB33
 1516 001d 00       		.byte	0
 1517 001e 00000000 		.4byte	.LEHB2-.LFB33
 1518 0022 00000000 		.4byte	.LEHE2-.LEHB2
 1519 0026 00000000 		.4byte	0
 1520 002a 00       		.byte	0
 1521 002b 00000000 		.4byte	.LEHB3-.LFB33
 1522 002f 00000000 		.4byte	.LEHE3-.LEHB3
 1523 0033 00000000 		.4byte	.L46-.LFB33
 1524 0037 00       		.byte	0
 1525 0038 00000000 		.4byte	.LEHB4-.LFB33
 1526 003c 00000000 		.4byte	.LEHE4-.LEHB4
 1527 0040 00000000 		.4byte	0
 1528 0044 00       		.byte	0
 1529 0045 00000000 		.4byte	.LEHB5-.LFB33
 1530 0049 00000000 		.4byte	.LEHE5-.LEHB5
 1531 004d 00000000 		.4byte	0
 1532 0051 00       		.byte	0
 1533 0052 00000000 		.4byte	.LEHB6-.LFB33
 1534 0056 00000000 		.4byte	.LEHE6-.LEHB6
 1535 005a 00000000 		.4byte	0
 1536 005e 00       		.byte	0
 1537              		.text
 1539              		.section	.rodata.str1.8,"aMS",@progbits,1
 1540              		.align	3
 1541              	.LC0:
 1542 0000 456E642E 		.string	"End..."
 1542      2E2E00
 1543              		.text
 1544              		.align	2
 1545              		.globl	_ZN5Riscv10kernelMainEv
 1547              	_ZN5Riscv10kernelMainEv:
 1548              	.LFB34:
 284:src/Riscv.cpp ****     initSystem();
 1549              		.loc 1 284 1 is_stmt 1
 1550              		.cfi_startproc
 1551              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 1552              		.cfi_lsda 0x1b,.LLSDA34
 1553 05b4 130101FE 		addi	sp,sp,-32
 1554              		.cfi_def_cfa_offset 32
 1555 05b8 233C1100 		sd	ra,24(sp)
 1556 05bc 23388100 		sd	s0,16(sp)
 1557 05c0 23349100 		sd	s1,8(sp)
 1558 05c4 23302101 		sd	s2,0(sp)
 1559              		.cfi_offset 1, -8
 1560              		.cfi_offset 8, -16
 1561              		.cfi_offset 9, -24
 1562              		.cfi_offset 18, -32
 1563 05c8 13040102 		addi	s0,sp,32
 1564              		.cfi_def_cfa 8, 0
 285:src/Riscv.cpp **** 
 1565              		.loc 1 285 5
 1566              	.LEHB7:
 285:src/Riscv.cpp **** 
 1567              		.loc 1 285 15 is_stmt 0
 1568 05cc 97000000 		call	_ZN5Riscv10initSystemEv
 1568      E7800000 
GAS LISTING /tmp/ccsHJaXF.s 			page 43


 1569              	.LVL109:
 291:src/Riscv.cpp **** 
 1570              		.loc 1 291 5 is_stmt 1
 291:src/Riscv.cpp **** 
 1571              		.loc 1 291 63 is_stmt 0
 1572 05d4 37150000 		li	a0,4096
 1573 05d8 97000000 		call	_Z7kmallocm@plt
 1573      E7800000 
 1574              	.LVL110:
 1575 05e0 13090500 		mv	s2,a0
 291:src/Riscv.cpp **** 
 1576              		.loc 1 291 103
 1577 05e4 13058005 		li	a0,88
 1578 05e8 97000000 		call	_ZN3PCBnwEm@plt
 1578      E7800000 
 1579              	.LVL111:
 1580              	.LEHE7:
 1581 05f0 93040500 		mv	s1,a0
 1582 05f4 13072000 		li	a4,2
 1583 05f8 93060900 		mv	a3,s2
 1584 05fc 13060000 		li	a2,0
 1585 0600 97050000 		lla	a1,_ZN5Riscv15userMainWrapperEPv
 1585      93850500 
 1586              	.LEHB8:
 1587 0608 97000000 		call	_ZN3PCBC1EPFvPvES0_S0_m@plt
 1587      E7800000 
 1588              	.LVL112:
 1589              	.LEHE8:
 1590              	.L64:
 293:src/Riscv.cpp ****     {
 1591              		.loc 1 293 5 is_stmt 1
 293:src/Riscv.cpp ****     {
 1592              		.loc 1 293 31
 1593              	.LBB246:
 1594              	.LBB247:
  34:src/../h/PCB.hpp ****     void setState(State s) {state = s;}
 1595              		.loc 3 34 23
  34:src/../h/PCB.hpp ****     void setState(State s) {state = s;}
 1596              		.loc 3 34 30 is_stmt 0
 1597 0610 03A78403 		lw	a4,56(s1)
 1598              	.LVL113:
 1599              	.LBE247:
 1600              	.LBE246:
 293:src/Riscv.cpp ****     {
 1601              		.loc 1 293 31
 1602 0614 93073000 		li	a5,3
 1603 0618 6308F700 		beq	a4,a5,.L63
 296:src/Riscv.cpp ****     }
 1604              		.loc 1 296 9 is_stmt 1
 1605              	.LEHB9:
 296:src/Riscv.cpp ****     }
 1606              		.loc 1 296 24 is_stmt 0
 1607 061c 97000000 		call	thread_dispatch@plt
 1607      E7800000 
 1608              	.LVL114:
 293:src/Riscv.cpp ****     {
 1609              		.loc 1 293 5
GAS LISTING /tmp/ccsHJaXF.s 			page 44


 1610 0624 6FF0DFFE 		j	.L64
 1611              	.L63:
 303:src/Riscv.cpp **** 
 1612              		.loc 1 303 5 is_stmt 1
 303:src/Riscv.cpp **** 
 1613              		.loc 1 303 14 is_stmt 0
 1614 0628 97000000 		call	_ZN5Riscv9endSystemEv
 1614      E7800000 
 1615              	.LVL115:
 305:src/Riscv.cpp **** }
 1616              		.loc 1 305 5 is_stmt 1
 305:src/Riscv.cpp **** }
 1617              		.loc 1 305 23 is_stmt 0
 1618 0630 17050000 		lla	a0,.LC0
 1618      13050500 
 1619 0638 97000000 		call	_ZN5Riscv11printStringEPKc
 1619      E7800000 
 1620              	.LVL116:
 1621              	.LEHE9:
 306:src/Riscv.cpp **** 
 1622              		.loc 1 306 1
 1623 0640 83308101 		ld	ra,24(sp)
 1624              		.cfi_remember_state
 1625              		.cfi_restore 1
 1626 0644 03340101 		ld	s0,16(sp)
 1627              		.cfi_restore 8
 1628              		.cfi_def_cfa 2, 32
 1629 0648 83348100 		ld	s1,8(sp)
 1630              		.cfi_restore 9
 1631 064c 03390100 		ld	s2,0(sp)
 1632              		.cfi_restore 18
 1633 0650 13010102 		addi	sp,sp,32
 1634              		.cfi_def_cfa_offset 0
 1635 0654 67800000 		jr	ra
 1636              	.L66:
 1637              		.cfi_restore_state
 1638 0658 13090500 		mv	s2,a0
 291:src/Riscv.cpp **** 
 1639              		.loc 1 291 103
 1640 065c 13850400 		mv	a0,s1
 1641 0660 97000000 		call	_ZN3PCBdlEPv@plt
 1641      E7800000 
 1642              	.LVL117:
 1643 0668 13050900 		mv	a0,s2
 1644              	.LEHB10:
 1645 066c 97000000 		call	_Unwind_Resume@plt
 1645      E7800000 
 1646              	.LVL118:
 1647              	.LEHE10:
 1648              		.cfi_endproc
 1649              	.LFE34:
 1650              		.section	.gcc_except_table
 1651              	.LLSDA34:
 1652 005f FF       		.byte	0xff
 1653 0060 FF       		.byte	0xff
 1654 0061 03       		.byte	0x3
 1655 0062 34       		.byte	0x34
GAS LISTING /tmp/ccsHJaXF.s 			page 45


 1656 0063 00000000 		.4byte	.LEHB7-.LFB34
 1657 0067 00000000 		.4byte	.LEHE7-.LEHB7
 1658 006b 00000000 		.4byte	0
 1659 006f 00       		.byte	0
 1660 0070 00000000 		.4byte	.LEHB8-.LFB34
 1661 0074 00000000 		.4byte	.LEHE8-.LEHB8
 1662 0078 00000000 		.4byte	.L66-.LFB34
 1663 007c 00       		.byte	0
 1664 007d 00000000 		.4byte	.LEHB9-.LFB34
 1665 0081 00000000 		.4byte	.LEHE9-.LEHB9
 1666 0085 00000000 		.4byte	0
 1667 0089 00       		.byte	0
 1668 008a 00000000 		.4byte	.LEHB10-.LFB34
 1669 008e 00000000 		.4byte	.LEHE10-.LEHB10
 1670 0092 00000000 		.4byte	0
 1671 0096 00       		.byte	0
 1672              		.text
 1674              		.section	.rodata
 1675              		.align	3
 1676              		.set	.LANCHOR0,. + 0
 1679              	_ZZN5Riscv12printIntegerEmE6digits:
 1680 0000 30313233 		.string	"0123456789"
 1680      34353637 
 1680      383900
 1681              		.bss
 1682              		.align	3
 1683              		.set	.LANCHOR1,. + 0
 1686              	_ZZN5Riscv20handleSupervisorTrapEvE5total:
 1687 0000 00000000 		.zero	8
 1687      00000000 
 1688              		.text
 1689              	.Letext0:
 1690              		.file 4 "src/../h/../lib/hw.h"
 1691              		.file 5 "src/../h/KSemaphore.hpp"
 1692              		.file 6 "src/../h/SleepPCBList.hpp"
 1693              		.file 7 "src/../h/KConsole.hpp"
 1694              		.file 8 "src/../test/userMain.hpp"
 1695              		.file 9 "src/../h/MemoryAllocator.hpp"
 1696              		.file 10 "src/../h/syscall_c.h"
 1697              		.file 11 "src/../lib/console.h"
 6610              		.align	3
 6613              	DW.ref.__gxx_personality_v0:
 6614 0000 00000000 		.dword	__gxx_personality_v0
 6614      00000000 
 6615              		.ident	"GCC: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0"
 6616              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/ccsHJaXF.s 			page 46


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Riscv.cpp
     /tmp/ccsHJaXF.s:9      .text:0000000000000000 _ZN5Riscv15userMainWrapperEPv
     /tmp/ccsHJaXF.s:13     .text:0000000000000000 .L0 
     /tmp/ccsHJaXF.s:14     .text:0000000000000000 .L0 
     /tmp/ccsHJaXF.s:15     .text:0000000000000004 .L0 
     /tmp/ccsHJaXF.s:18     .text:000000000000000c .L0 
     /tmp/ccsHJaXF.s:19     .text:000000000000000c .L0 
     /tmp/ccsHJaXF.s:21     .text:0000000000000010 .L0 
     /tmp/ccsHJaXF.s:23     .text:0000000000000010 .L0 
     /tmp/ccsHJaXF.s:24     .text:0000000000000010 .L0 
     /tmp/ccsHJaXF.s:27     .text:0000000000000018 .L0 
     /tmp/ccsHJaXF.s:28     .text:000000000000001c .L0 
     /tmp/ccsHJaXF.s:30     .text:0000000000000020 .L0 
     /tmp/ccsHJaXF.s:31     .text:0000000000000020 .L0 
     /tmp/ccsHJaXF.s:33     .text:0000000000000024 .L0 
     /tmp/ccsHJaXF.s:35     .text:0000000000000028 .L0 
     /tmp/ccsHJaXF.s:41     .text:0000000000000028 _ZN5Riscv24getCharactersFromConsoleEv
     /tmp/ccsHJaXF.s:44     .text:0000000000000028 .L0 
     /tmp/ccsHJaXF.s:45     .text:0000000000000028 .L0 
     /tmp/ccsHJaXF.s:46     .text:000000000000002c .L0 
     /tmp/ccsHJaXF.s:48     .text:0000000000000030 .L0 
     /tmp/ccsHJaXF.s:50     .text:0000000000000034 .L0 
     /tmp/ccsHJaXF.s:52     .text:0000000000000034 .L0 
     /tmp/ccsHJaXF.s:53     .text:0000000000000038 .L0 
     /tmp/ccsHJaXF.s:54     .text:0000000000000038 .L0 
     /tmp/ccsHJaXF.s:56     .text:000000000000003c .L0 
     /tmp/ccsHJaXF.s:58     .text:0000000000000040 .L0 
     /tmp/ccsHJaXF.s:64     .text:0000000000000040 _ZN5Riscv10initSystemEv
     /tmp/ccsHJaXF.s:67     .text:0000000000000040 .L0 
     /tmp/ccsHJaXF.s:68     .text:0000000000000040 .L0 
     /tmp/ccsHJaXF.s:69     .text:0000000000000044 .L0 
     /tmp/ccsHJaXF.s:72     .text:000000000000004c .L0 
     /tmp/ccsHJaXF.s:73     .text:000000000000004c .L0 
     /tmp/ccsHJaXF.s:75     .text:0000000000000050 .L0 
     /tmp/ccsHJaXF.s:77     .text:0000000000000050 .L0 
     /tmp/ccsHJaXF.s:78     .text:0000000000000050 .L0 
     /tmp/ccsHJaXF.s:84     .text:0000000000000058 .L0 
  src/../h/Riscv.hpp:120    .text:0000000000000058 .L0 
     /tmp/ccsHJaXF.s:94     .text:000000000000005c .L0 
     /tmp/ccsHJaXF.s:95     .text:000000000000005c .L0 
     /tmp/ccsHJaXF.s:98     .text:0000000000000064 .L0 
     /tmp/ccsHJaXF.s:99     .text:0000000000000064 .L0 
     /tmp/ccsHJaXF.s:102    .text:000000000000006c .L0 
     /tmp/ccsHJaXF.s:103    .text:0000000000000070 .L0 
     /tmp/ccsHJaXF.s:105    .text:0000000000000074 .L0 
     /tmp/ccsHJaXF.s:106    .text:0000000000000074 .L0 
     /tmp/ccsHJaXF.s:108    .text:0000000000000078 .L0 
     /tmp/ccsHJaXF.s:110    .text:000000000000007c .L0 
     /tmp/ccsHJaXF.s:116    .text:000000000000007c _ZN5Riscv16enableInterruptsEv
     /tmp/ccsHJaXF.s:119    .text:000000000000007c .L0 
     /tmp/ccsHJaXF.s:120    .text:000000000000007c .L0 
     /tmp/ccsHJaXF.s:121    .text:0000000000000080 .L0 
     /tmp/ccsHJaXF.s:123    .text:0000000000000084 .L0 
     /tmp/ccsHJaXF.s:125    .text:0000000000000088 .L0 
     /tmp/ccsHJaXF.s:130    .text:0000000000000088 .L0 
     /tmp/ccsHJaXF.s:131    .text:0000000000000088 .L0 
GAS LISTING /tmp/ccsHJaXF.s 			page 47


     /tmp/ccsHJaXF.s:132    .text:0000000000000088 .L0 
     /tmp/ccsHJaXF.s:142    .text:0000000000000090 .L0 
     /tmp/ccsHJaXF.s:143    .text:0000000000000094 .L0 
     /tmp/ccsHJaXF.s:144    .text:0000000000000094 .L0 
     /tmp/ccsHJaXF.s:146    .text:0000000000000098 .L0 
     /tmp/ccsHJaXF.s:148    .text:000000000000009c .L0 
     /tmp/ccsHJaXF.s:154    .text:000000000000009c _ZN5Riscv17disableInterruptsEv
     /tmp/ccsHJaXF.s:157    .text:000000000000009c .L0 
     /tmp/ccsHJaXF.s:158    .text:000000000000009c .L0 
     /tmp/ccsHJaXF.s:159    .text:00000000000000a0 .L0 
     /tmp/ccsHJaXF.s:161    .text:00000000000000a4 .L0 
     /tmp/ccsHJaXF.s:163    .text:00000000000000a8 .L0 
     /tmp/ccsHJaXF.s:168    .text:00000000000000a8 .L0 
     /tmp/ccsHJaXF.s:169    .text:00000000000000a8 .L0 
     /tmp/ccsHJaXF.s:170    .text:00000000000000a8 .L0 
     /tmp/ccsHJaXF.s:180    .text:00000000000000b0 .L0 
     /tmp/ccsHJaXF.s:181    .text:00000000000000b4 .L0 
     /tmp/ccsHJaXF.s:182    .text:00000000000000b4 .L0 
     /tmp/ccsHJaXF.s:184    .text:00000000000000b8 .L0 
     /tmp/ccsHJaXF.s:186    .text:00000000000000bc .L0 
     /tmp/ccsHJaXF.s:192    .text:00000000000000bc _ZN5Riscv9endSystemEv
     /tmp/ccsHJaXF.s:195    .text:00000000000000bc .L0 
     /tmp/ccsHJaXF.s:196    .text:00000000000000bc .L0 
     /tmp/ccsHJaXF.s:197    .text:00000000000000c0 .L0 
     /tmp/ccsHJaXF.s:200    .text:00000000000000c8 .L0 
     /tmp/ccsHJaXF.s:201    .text:00000000000000c8 .L0 
     /tmp/ccsHJaXF.s:203    .text:00000000000000cc .L0 
     /tmp/ccsHJaXF.s:205    .text:00000000000000cc .L0 
     /tmp/ccsHJaXF.s:206    .text:00000000000000cc .L0 
     /tmp/ccsHJaXF.s:209    .text:00000000000000d4 .L0 
     /tmp/ccsHJaXF.s:210    .text:00000000000000d8 .L0 
     /tmp/ccsHJaXF.s:212    .text:00000000000000dc .L0 
     /tmp/ccsHJaXF.s:213    .text:00000000000000dc .L0 
     /tmp/ccsHJaXF.s:215    .text:00000000000000e0 .L0 
     /tmp/ccsHJaXF.s:217    .text:00000000000000e4 .L0 
     /tmp/ccsHJaXF.s:223    .text:00000000000000e4 _ZN5Riscv10popSppSpieEv
     /tmp/ccsHJaXF.s:226    .text:00000000000000e4 .L0 
     /tmp/ccsHJaXF.s:227    .text:00000000000000e4 .L0 
     /tmp/ccsHJaXF.s:228    .text:00000000000000e8 .L0 
     /tmp/ccsHJaXF.s:230    .text:00000000000000ec .L0 
     /tmp/ccsHJaXF.s:232    .text:00000000000000f0 .L0 
     /tmp/ccsHJaXF.s:234    .text:00000000000000f0 .L0 
       src/Riscv.cpp:48     .text:00000000000000f0 .L0 
     /tmp/ccsHJaXF.s:240    .text:00000000000000f4 .L0 
       src/Riscv.cpp:49     .text:00000000000000f4 .L0 
     /tmp/ccsHJaXF.s:246    .text:00000000000000f8 .L0 
     /tmp/ccsHJaXF.s:247    .text:00000000000000fc .L0 
     /tmp/ccsHJaXF.s:248    .text:00000000000000fc .L0 
     /tmp/ccsHJaXF.s:250    .text:0000000000000100 .L0 
     /tmp/ccsHJaXF.s:252    .text:0000000000000104 .L0 
     /tmp/ccsHJaXF.s:258    .text:0000000000000104 _ZN5Riscv11printStringEPKc
     /tmp/ccsHJaXF.s:261    .text:0000000000000104 .L0 
     /tmp/ccsHJaXF.s:263    .text:0000000000000104 .L0 
     /tmp/ccsHJaXF.s:264    .text:0000000000000108 .L0 
     /tmp/ccsHJaXF.s:269    .text:0000000000000118 .L0 
     /tmp/ccsHJaXF.s:270    .text:0000000000000118 .L0 
     /tmp/ccsHJaXF.s:271    .text:0000000000000118 .L0 
GAS LISTING /tmp/ccsHJaXF.s 			page 48


     /tmp/ccsHJaXF.s:272    .text:0000000000000118 .L0 
     /tmp/ccsHJaXF.s:274    .text:000000000000011c .L0 
     /tmp/ccsHJaXF.s:279    .text:0000000000000120 .L0 
     /tmp/ccsHJaXF.s:280    .text:0000000000000120 .L0 
     /tmp/ccsHJaXF.s:281    .text:0000000000000120 .L0 
  src/../h/Riscv.hpp:161    .text:0000000000000120 .L0 
     /tmp/ccsHJaXF.s:289    .text:0000000000000128 .L0 
     /tmp/ccsHJaXF.s:290    .text:0000000000000128 .L0 
     /tmp/ccsHJaXF.s:297    .text:000000000000012c .L0 
     /tmp/ccsHJaXF.s:298    .text:000000000000012c .L0 
     /tmp/ccsHJaXF.s:299    .text:000000000000012c .L0 
     /tmp/ccsHJaXF.s:310    .text:0000000000000134 .L0 
     /tmp/ccsHJaXF.s:311    .text:0000000000000134 .L0 
     /tmp/ccsHJaXF.s:312    .text:0000000000000134 .L0 
     /tmp/ccsHJaXF.s:314    .text:0000000000000138 .L0 
     /tmp/ccsHJaXF.s:316    .text:000000000000013c .L0 
     /tmp/ccsHJaXF.s:317    .text:000000000000013c .L0 
     /tmp/ccsHJaXF.s:320    .text:0000000000000144 .L0 
     /tmp/ccsHJaXF.s:321    .text:0000000000000144 .L0 
     /tmp/ccsHJaXF.s:324    .text:0000000000000148 .L0 
     /tmp/ccsHJaXF.s:327    .text:000000000000014c .L0 
     /tmp/ccsHJaXF.s:328    .text:000000000000014c .L0 
     /tmp/ccsHJaXF.s:331    .text:0000000000000150 .L0 
     /tmp/ccsHJaXF.s:337    .text:0000000000000158 .L0 
  src/../h/Riscv.hpp:152    .text:0000000000000158 .L0 
     /tmp/ccsHJaXF.s:347    .text:000000000000015c .L0 
     /tmp/ccsHJaXF.s:348    .text:0000000000000160 .L0 
     /tmp/ccsHJaXF.s:350    .text:0000000000000164 .L0 
     /tmp/ccsHJaXF.s:351    .text:0000000000000164 .L0 
     /tmp/ccsHJaXF.s:353    .text:0000000000000168 .L0 
     /tmp/ccsHJaXF.s:356    .text:000000000000016c .L0 
     /tmp/ccsHJaXF.s:358    .text:0000000000000170 .L0 
     /tmp/ccsHJaXF.s:360    .text:0000000000000174 .L0 
     /tmp/ccsHJaXF.s:366    .text:0000000000000174 _ZN5Riscv12printIntegerEm
     /tmp/ccsHJaXF.s:369    .text:0000000000000174 .L0 
     /tmp/ccsHJaXF.s:371    .text:0000000000000174 .L0 
     /tmp/ccsHJaXF.s:372    .text:0000000000000178 .L0 
     /tmp/ccsHJaXF.s:377    .text:0000000000000188 .L0 
     /tmp/ccsHJaXF.s:378    .text:0000000000000188 .L0 
     /tmp/ccsHJaXF.s:379    .text:0000000000000188 .L0 
     /tmp/ccsHJaXF.s:380    .text:0000000000000188 .L0 
     /tmp/ccsHJaXF.s:382    .text:000000000000018c .L0 
     /tmp/ccsHJaXF.s:386    .text:000000000000018c .L0 
     /tmp/ccsHJaXF.s:387    .text:000000000000018c .L0 
     /tmp/ccsHJaXF.s:388    .text:000000000000018c .L0 
  src/../h/Riscv.hpp:161    .text:000000000000018c .L0 
     /tmp/ccsHJaXF.s:396    .text:0000000000000194 .L0 
     /tmp/ccsHJaXF.s:397    .text:0000000000000194 .L0 
     /tmp/ccsHJaXF.s:404    .text:0000000000000198 .L0 
     /tmp/ccsHJaXF.s:405    .text:0000000000000198 .L0 
     /tmp/ccsHJaXF.s:406    .text:0000000000000198 .L0 
     /tmp/ccsHJaXF.s:416    .text:00000000000001a0 .L0 
     /tmp/ccsHJaXF.s:417    .text:00000000000001a0 .L0 
     /tmp/ccsHJaXF.s:418    .text:00000000000001a0 .L0 
     /tmp/ccsHJaXF.s:419    .text:00000000000001a0 .L0 
     /tmp/ccsHJaXF.s:420    .text:00000000000001a0 .L0 
     /tmp/ccsHJaXF.s:421    .text:00000000000001a0 .L0 
GAS LISTING /tmp/ccsHJaXF.s 			page 49


     /tmp/ccsHJaXF.s:422    .text:00000000000001a0 .L0 
     /tmp/ccsHJaXF.s:423    .text:00000000000001a0 .L0 
     /tmp/ccsHJaXF.s:426    .text:00000000000001a4 .L0 
     /tmp/ccsHJaXF.s:427    .text:00000000000001a4 .L0 
     /tmp/ccsHJaXF.s:431    .text:00000000000001a8 .L0 
     /tmp/ccsHJaXF.s:432    .text:00000000000001a8 .L0 
     /tmp/ccsHJaXF.s:433    .text:00000000000001a8 .L0 
     /tmp/ccsHJaXF.s:437    .text:00000000000001b0 .L0 
     /tmp/ccsHJaXF.s:443    .text:00000000000001c8 .L0 
     /tmp/ccsHJaXF.s:449    .text:00000000000001d8 .L0 
     /tmp/ccsHJaXF.s:451    .text:00000000000001dc .L0 
     /tmp/ccsHJaXF.s:454    .text:00000000000001e0 .L0 
     /tmp/ccsHJaXF.s:459    .text:00000000000001e8 .L0 
     /tmp/ccsHJaXF.s:460    .text:00000000000001e8 .L0 
     /tmp/ccsHJaXF.s:464    .text:00000000000001f0 .L0 
     /tmp/ccsHJaXF.s:465    .text:00000000000001f0 .L0 
     /tmp/ccsHJaXF.s:473    .text:0000000000000208 .L0 
     /tmp/ccsHJaXF.s:474    .text:0000000000000208 .L0 
     /tmp/ccsHJaXF.s:478    .text:0000000000000214 .L0 
     /tmp/ccsHJaXF.s:479    .text:0000000000000214 .L0 
     /tmp/ccsHJaXF.s:482    .text:0000000000000218 .L0 
     /tmp/ccsHJaXF.s:488    .text:0000000000000220 .L0 
  src/../h/Riscv.hpp:152    .text:0000000000000220 .L0 
     /tmp/ccsHJaXF.s:498    .text:0000000000000224 .L0 
     /tmp/ccsHJaXF.s:499    .text:0000000000000228 .L0 
     /tmp/ccsHJaXF.s:501    .text:000000000000022c .L0 
     /tmp/ccsHJaXF.s:502    .text:000000000000022c .L0 
     /tmp/ccsHJaXF.s:504    .text:0000000000000230 .L0 
     /tmp/ccsHJaXF.s:506    .text:0000000000000234 .L0 
     /tmp/ccsHJaXF.s:508    .text:0000000000000238 .L0 
     /tmp/ccsHJaXF.s:510    .text:000000000000023c .L0 
     /tmp/ccsHJaXF.s:516    .text:000000000000023c _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccsHJaXF.s:519    .text:000000000000023c .L0 
     /tmp/ccsHJaXF.s:6613   .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/ccsHJaXF.s:522    .text:000000000000023c .L0 
     /tmp/ccsHJaXF.s:523    .text:0000000000000240 .L0 
     /tmp/ccsHJaXF.s:532    .text:0000000000000260 .L0 
     /tmp/ccsHJaXF.s:533    .text:0000000000000260 .L0 
     /tmp/ccsHJaXF.s:534    .text:0000000000000260 .L0 
     /tmp/ccsHJaXF.s:535    .text:0000000000000260 .L0 
     /tmp/ccsHJaXF.s:536    .text:0000000000000260 .L0 
     /tmp/ccsHJaXF.s:537    .text:0000000000000260 .L0 
     /tmp/ccsHJaXF.s:538    .text:0000000000000260 .L0 
     /tmp/ccsHJaXF.s:539    .text:0000000000000260 .L0 
     /tmp/ccsHJaXF.s:541    .text:0000000000000264 .L0 
     /tmp/ccsHJaXF.s:543    .text:0000000000000264 .L0 
     /tmp/ccsHJaXF.s:544    .text:0000000000000264 .L0 
       src/Riscv.cpp:101    .text:0000000000000264 .L0 
     /tmp/ccsHJaXF.s:554    .text:0000000000000268 .L0 
     /tmp/ccsHJaXF.s:555    .text:0000000000000268 .L0 
     /tmp/ccsHJaXF.s:556    .text:0000000000000268 .L0 
  src/../h/Riscv.hpp:95     .text:0000000000000268 .L0 
     /tmp/ccsHJaXF.s:564    .text:0000000000000270 .L0 
     /tmp/ccsHJaXF.s:565    .text:0000000000000270 .L0 
     /tmp/ccsHJaXF.s:571    .text:0000000000000274 .L0 
     /tmp/ccsHJaXF.s:579    .text:000000000000028c .L0 
     /tmp/ccsHJaXF.s:583    .text:000000000000028c .L0 
GAS LISTING /tmp/ccsHJaXF.s 			page 50


     /tmp/ccsHJaXF.s:584    .text:000000000000028c .L0 
     /tmp/ccsHJaXF.s:585    .text:000000000000028c .L0 
     /tmp/ccsHJaXF.s:595    .text:0000000000000294 .L0 
     /tmp/ccsHJaXF.s:596    .text:0000000000000294 .L0 
     /tmp/ccsHJaXF.s:597    .text:0000000000000294 .L0 
     /tmp/ccsHJaXF.s:603    .text:00000000000002a8 .L0 
     /tmp/ccsHJaXF.s:604    .text:00000000000002a8 .L0 
     /tmp/ccsHJaXF.s:610    .text:00000000000002bc .L0 
     /tmp/ccsHJaXF.s:611    .text:00000000000002bc .L0 
     /tmp/ccsHJaXF.s:615    .text:00000000000002c4 .L0 
     /tmp/ccsHJaXF.s:616    .text:00000000000002c4 .L0 
     /tmp/ccsHJaXF.s:623    .text:00000000000002d0 .L0 
     /tmp/ccsHJaXF.s:624    .text:00000000000002d0 .L0 
     /tmp/ccsHJaXF.s:629    .text:00000000000002d4 .L0 
     /tmp/ccsHJaXF.s:631    .text:00000000000002d8 .L0 
     /tmp/ccsHJaXF.s:636    .text:00000000000002dc .L0 
     /tmp/ccsHJaXF.s:637    .text:00000000000002dc .L0 
     /tmp/ccsHJaXF.s:638    .text:00000000000002dc .L0 
  src/../h/Riscv.hpp:105    .text:00000000000002dc .L0 
     /tmp/ccsHJaXF.s:646    .text:00000000000002e4 .L0 
     /tmp/ccsHJaXF.s:647    .text:00000000000002e4 .L0 
     /tmp/ccsHJaXF.s:654    .text:00000000000002e8 .L0 
     /tmp/ccsHJaXF.s:655    .text:00000000000002e8 .L0 
     /tmp/ccsHJaXF.s:656    .text:00000000000002e8 .L0 
  src/../h/Riscv.hpp:161    .text:00000000000002e8 .L0 
     /tmp/ccsHJaXF.s:664    .text:00000000000002f0 .L0 
     /tmp/ccsHJaXF.s:665    .text:00000000000002f0 .L0 
     /tmp/ccsHJaXF.s:670    .text:00000000000002f4 .L0 
     /tmp/ccsHJaXF.s:671    .text:00000000000002f4 .L0 
     /tmp/ccsHJaXF.s:674    .text:0000000000000300 .L0 
     /tmp/ccsHJaXF.s:675    .text:0000000000000300 .L0 
     /tmp/ccsHJaXF.s:680    .text:0000000000000308 .L0 
     /tmp/ccsHJaXF.s:681    .text:0000000000000308 .L0 
  src/../h/Riscv.hpp:166    .text:0000000000000308 .L0 
     /tmp/ccsHJaXF.s:693    .text:000000000000030c .L0 
     /tmp/ccsHJaXF.s:694    .text:000000000000030c .L0 
  src/../h/Riscv.hpp:110    .text:000000000000030c .L0 
     /tmp/ccsHJaXF.s:701    .text:0000000000000310 .L0 
     /tmp/ccsHJaXF.s:710    .text:0000000000000314 .L0 
     /tmp/ccsHJaXF.s:715    .text:000000000000031c .L0 
     /tmp/ccsHJaXF.s:716    .text:000000000000031c .L0 
     /tmp/ccsHJaXF.s:720    .text:0000000000000324 .L0 
     /tmp/ccsHJaXF.s:721    .text:0000000000000328 .L0 
     /tmp/ccsHJaXF.s:722    .text:0000000000000328 .L0 
     /tmp/ccsHJaXF.s:724    .text:000000000000032c .L0 
     /tmp/ccsHJaXF.s:725    .text:000000000000032c .L0 
     /tmp/ccsHJaXF.s:727    .text:0000000000000330 .L0 
     /tmp/ccsHJaXF.s:729    .text:0000000000000334 .L0 
     /tmp/ccsHJaXF.s:731    .text:0000000000000338 .L0 
     /tmp/ccsHJaXF.s:733    .text:000000000000033c .L0 
     /tmp/ccsHJaXF.s:735    .text:0000000000000340 .L0 
     /tmp/ccsHJaXF.s:737    .text:0000000000000344 .L0 
     /tmp/ccsHJaXF.s:739    .text:0000000000000348 .L0 
     /tmp/ccsHJaXF.s:743    .text:000000000000034c .L0 
     /tmp/ccsHJaXF.s:747    .text:000000000000034c .L0 
     /tmp/ccsHJaXF.s:748    .text:000000000000034c .L0 
     /tmp/ccsHJaXF.s:749    .text:000000000000034c .L0 
GAS LISTING /tmp/ccsHJaXF.s 			page 51


     /tmp/ccsHJaXF.s:750    .text:000000000000034c .L0 
       src/Riscv.cpp:152    .text:000000000000034c .L0 
     /tmp/ccsHJaXF.s:760    .text:0000000000000350 .L0 
     /tmp/ccsHJaXF.s:761    .text:0000000000000350 .L0 
     /tmp/ccsHJaXF.s:762    .text:0000000000000350 .L0 
  src/../h/Riscv.hpp:105    .text:0000000000000350 .L0 
     /tmp/ccsHJaXF.s:771    .text:0000000000000358 .L0 
     /tmp/ccsHJaXF.s:772    .text:0000000000000358 .L0 
     /tmp/ccsHJaXF.s:777    .text:000000000000035c .L0 
     /tmp/ccsHJaXF.s:778    .text:000000000000035c .L0 
     /tmp/ccsHJaXF.s:782    .text:0000000000000360 .L0 
     /tmp/ccsHJaXF.s:792    .text:0000000000000368 .L0 
     /tmp/ccsHJaXF.s:804    .text:0000000000000370 .L0 
     /tmp/ccsHJaXF.s:818    .text:0000000000000378 .L0 
     /tmp/ccsHJaXF.s:834    .text:0000000000000380 .L0 
     /tmp/ccsHJaXF.s:852    .text:0000000000000388 .L0 
     /tmp/ccsHJaXF.s:872    .text:0000000000000390 .L0 
     /tmp/ccsHJaXF.s:894    .text:0000000000000398 .L0 
     /tmp/ccsHJaXF.s:918    .text:00000000000003a0 .L0 
     /tmp/ccsHJaXF.s:944    .text:00000000000003a8 .L0 
     /tmp/ccsHJaXF.s:948    .text:00000000000003b0 .L0 
     /tmp/ccsHJaXF.s:949    .text:00000000000003b0 .L0 
       src/Riscv.cpp:268    .text:00000000000003b0 .L0 
     /tmp/ccsHJaXF.s:956    .text:00000000000003b4 .L0 
     /tmp/ccsHJaXF.s:958    .text:00000000000003b4 .L0 
     /tmp/ccsHJaXF.s:960    .text:00000000000003b8 .L0 
     /tmp/ccsHJaXF.s:968    .text:00000000000003d0 .L0 
       src/Riscv.cpp:272    .text:00000000000003d0 .L0 
     /tmp/ccsHJaXF.s:989    .text:00000000000003d8 .L0 
     /tmp/ccsHJaXF.s:990    .text:00000000000003d8 .L0 
       src/Riscv.cpp:160    .text:00000000000003d8 .L0 
     /tmp/ccsHJaXF.s:997    .text:00000000000003dc .L0 
     /tmp/ccsHJaXF.s:998    .text:00000000000003dc .L0 
     /tmp/ccsHJaXF.s:1000   .text:00000000000003dc .L0 
     /tmp/ccsHJaXF.s:1005   .text:00000000000003e8 .L0 
       src/Riscv.cpp:163    .text:00000000000003e8 .L0 
     /tmp/ccsHJaXF.s:1018   .text:00000000000003ec .L0 
     /tmp/ccsHJaXF.s:1019   .text:00000000000003ec .L0 
  src/../h/Riscv.hpp:110    .text:00000000000003ec .L0 
     /tmp/ccsHJaXF.s:1026   .text:00000000000003f0 .L0 
     /tmp/ccsHJaXF.s:1035   .text:00000000000003f4 .L0 
     /tmp/ccsHJaXF.s:1036   .text:00000000000003f4 .L0 
       src/Riscv.cpp:168    .text:00000000000003f4 .L0 
     /tmp/ccsHJaXF.s:1043   .text:00000000000003f8 .L0 
     /tmp/ccsHJaXF.s:1045   .text:00000000000003f8 .L0 
     /tmp/ccsHJaXF.s:1048   .text:0000000000000400 .L0 
       src/Riscv.cpp:170    .text:0000000000000400 .L0 
     /tmp/ccsHJaXF.s:1061   .text:0000000000000408 .L0 
     /tmp/ccsHJaXF.s:1062   .text:0000000000000408 .L0 
     /tmp/ccsHJaXF.s:1063   .text:0000000000000408 .L0 
     /tmp/ccsHJaXF.s:1064   .text:0000000000000408 .L0 
       src/Riscv.cpp:177    .text:0000000000000408 .L0 
     /tmp/ccsHJaXF.s:1071   .text:000000000000040c .L0 
       src/Riscv.cpp:178    .text:000000000000040c .L0 
     /tmp/ccsHJaXF.s:1077   .text:0000000000000410 .L0 
       src/Riscv.cpp:179    .text:0000000000000410 .L0 
     /tmp/ccsHJaXF.s:1083   .text:0000000000000414 .L0 
GAS LISTING /tmp/ccsHJaXF.s 			page 52


     /tmp/ccsHJaXF.s:1085   .text:0000000000000414 .L0 
     /tmp/ccsHJaXF.s:1099   .text:000000000000043c .L0 
     /tmp/ccsHJaXF.s:1100   .text:000000000000043c .L0 
     /tmp/ccsHJaXF.s:1102   .text:0000000000000440 .L0 
     /tmp/ccsHJaXF.s:1104   .text:0000000000000444 .L0 
       src/Riscv.cpp:191    .text:0000000000000444 .L0 
     /tmp/ccsHJaXF.s:1113   .text:000000000000044c .L0 
       src/Riscv.cpp:189    .text:000000000000044c .L0 
     /tmp/ccsHJaXF.s:1128   .text:0000000000000454 .L0 
     /tmp/ccsHJaXF.s:1129   .text:0000000000000454 .L0 
     /tmp/ccsHJaXF.s:1130   .text:0000000000000454 .L0 
  src/../h/Riscv.hpp:161    .text:0000000000000454 .L0 
     /tmp/ccsHJaXF.s:1139   .text:000000000000045c .L0 
     /tmp/ccsHJaXF.s:1140   .text:000000000000045c .L0 
     /tmp/ccsHJaXF.s:1145   .text:0000000000000460 .L0 
     /tmp/ccsHJaXF.s:1146   .text:0000000000000460 .L0 
     /tmp/ccsHJaXF.s:1150   .text:000000000000046c .L0 
     /tmp/ccsHJaXF.s:1151   .text:000000000000046c .L0 
     /tmp/ccsHJaXF.s:1156   .text:0000000000000474 .L0 
     /tmp/ccsHJaXF.s:1157   .text:0000000000000474 .L0 
  src/../h/Riscv.hpp:166    .text:0000000000000474 .L0 
     /tmp/ccsHJaXF.s:1164   .text:0000000000000478 .L0 
     /tmp/ccsHJaXF.s:1173   .text:000000000000047c .L0 
     /tmp/ccsHJaXF.s:1174   .text:000000000000047c .L0 
     /tmp/ccsHJaXF.s:1178   .text:0000000000000488 .L0 
     /tmp/ccsHJaXF.s:1182   .text:000000000000048c .L0 
     /tmp/ccsHJaXF.s:1183   .text:000000000000048c .L0 
     /tmp/ccsHJaXF.s:1184   .text:000000000000048c .L0 
  src/../h/Riscv.hpp:161    .text:000000000000048c .L0 
     /tmp/ccsHJaXF.s:1192   .text:0000000000000494 .L0 
     /tmp/ccsHJaXF.s:1193   .text:0000000000000494 .L0 
     /tmp/ccsHJaXF.s:1198   .text:0000000000000498 .L0 
     /tmp/ccsHJaXF.s:1199   .text:0000000000000498 .L0 
     /tmp/ccsHJaXF.s:1202   .text:00000000000004a4 .L0 
     /tmp/ccsHJaXF.s:1203   .text:00000000000004a4 .L0 
     /tmp/ccsHJaXF.s:1223   .text:00000000000004b0 .L0 
     /tmp/ccsHJaXF.s:1226   .text:00000000000004b0 .L0 
     /tmp/ccsHJaXF.s:1227   .text:00000000000004b0 .L0 
     /tmp/ccsHJaXF.s:1228   .text:00000000000004b0 .L0 
     /tmp/ccsHJaXF.s:1234   .text:00000000000004b8 .L0 
     /tmp/ccsHJaXF.s:1235   .text:00000000000004b8 .L0 
     /tmp/ccsHJaXF.s:1240   .text:00000000000004c0 .L0 
     /tmp/ccsHJaXF.s:1241   .text:00000000000004c0 .L0 
  src/../h/Riscv.hpp:166    .text:00000000000004c0 .L0 
     /tmp/ccsHJaXF.s:1248   .text:00000000000004c4 .L0 
     /tmp/ccsHJaXF.s:1254   .text:00000000000004c8 .L0 
       src/Riscv.cpp:204    .text:00000000000004c8 .L0 
     /tmp/ccsHJaXF.s:1261   .text:00000000000004cc .L0 
     /tmp/ccsHJaXF.s:1268   .text:00000000000004d0 .L0 
     /tmp/ccsHJaXF.s:1269   .text:00000000000004d0 .L0 
       src/Riscv.cpp:217    .text:00000000000004d0 .L0 
     /tmp/ccsHJaXF.s:1279   .text:00000000000004d4 .L0 
     /tmp/ccsHJaXF.s:1280   .text:00000000000004d4 .L0 
     /tmp/ccsHJaXF.s:1281   .text:00000000000004d4 .L0 
  src/../h/Riscv.hpp:161    .text:00000000000004d4 .L0 
     /tmp/ccsHJaXF.s:1290   .text:00000000000004dc .L0 
     /tmp/ccsHJaXF.s:1291   .text:00000000000004dc .L0 
GAS LISTING /tmp/ccsHJaXF.s 			page 53


     /tmp/ccsHJaXF.s:1296   .text:00000000000004e0 .L0 
     /tmp/ccsHJaXF.s:1297   .text:00000000000004e0 .L0 
     /tmp/ccsHJaXF.s:1300   .text:00000000000004ec .L0 
     /tmp/ccsHJaXF.s:1301   .text:00000000000004ec .L0 
     /tmp/ccsHJaXF.s:1307   .text:00000000000004f8 .L0 
     /tmp/ccsHJaXF.s:1308   .text:00000000000004f8 .L0 
     /tmp/ccsHJaXF.s:1313   .text:00000000000004fc .L0 
     /tmp/ccsHJaXF.s:1314   .text:00000000000004fc .L0 
     /tmp/ccsHJaXF.s:1317   .text:0000000000000504 .L0 
     /tmp/ccsHJaXF.s:1318   .text:0000000000000504 .L0 
     /tmp/ccsHJaXF.s:1323   .text:000000000000050c .L0 
     /tmp/ccsHJaXF.s:1324   .text:000000000000050c .L0 
  src/../h/Riscv.hpp:166    .text:000000000000050c .L0 
     /tmp/ccsHJaXF.s:1334   .text:0000000000000510 .L0 
       src/Riscv.cpp:226    .text:0000000000000510 .L0 
     /tmp/ccsHJaXF.s:1347   .text:0000000000000518 .L0 
     /tmp/ccsHJaXF.s:1348   .text:0000000000000518 .L0 
     /tmp/ccsHJaXF.s:1349   .text:0000000000000518 .L0 
       src/Riscv.cpp:232    .text:0000000000000518 .L0 
     /tmp/ccsHJaXF.s:1356   .text:000000000000051c .L0 
       src/Riscv.cpp:233    .text:000000000000051c .L0 
     /tmp/ccsHJaXF.s:1362   .text:0000000000000520 .L0 
     /tmp/ccsHJaXF.s:1364   .text:0000000000000520 .L0 
     /tmp/ccsHJaXF.s:1376   .text:000000000000053c .L0 
     /tmp/ccsHJaXF.s:1377   .text:000000000000053c .L0 
     /tmp/ccsHJaXF.s:1379   .text:0000000000000540 .L0 
     /tmp/ccsHJaXF.s:1381   .text:0000000000000544 .L0 
       src/Riscv.cpp:242    .text:0000000000000544 .L0 
     /tmp/ccsHJaXF.s:1390   .text:000000000000054c .L0 
       src/Riscv.cpp:240    .text:000000000000054c .L0 
     /tmp/ccsHJaXF.s:1403   .text:0000000000000554 .L0 
     /tmp/ccsHJaXF.s:1404   .text:0000000000000554 .L0 
       src/Riscv.cpp:250    .text:0000000000000554 .L0 
     /tmp/ccsHJaXF.s:1412   .text:0000000000000558 .L0 
     /tmp/ccsHJaXF.s:1414   .text:0000000000000558 .L0 
     /tmp/ccsHJaXF.s:1417   .text:0000000000000560 .L0 
       src/Riscv.cpp:252    .text:0000000000000560 .L0 
     /tmp/ccsHJaXF.s:1430   .text:0000000000000568 .L0 
     /tmp/ccsHJaXF.s:1431   .text:0000000000000568 .L0 
       src/Riscv.cpp:259    .text:0000000000000568 .L0 
     /tmp/ccsHJaXF.s:1438   .text:000000000000056c .L0 
     /tmp/ccsHJaXF.s:1440   .text:000000000000056c .L0 
     /tmp/ccsHJaXF.s:1444   .text:0000000000000574 .L0 
       src/Riscv.cpp:261    .text:0000000000000574 .L0 
     /tmp/ccsHJaXF.s:1464   .text:0000000000000580 .L0 
     /tmp/ccsHJaXF.s:1482   .text:000000000000059c .L0 
     /tmp/ccsHJaXF.s:1500   .text:00000000000005b4 .L0 
     /tmp/ccsHJaXF.s:1547   .text:00000000000005b4 _ZN5Riscv10kernelMainEv
     /tmp/ccsHJaXF.s:1550   .text:00000000000005b4 .L0 
     /tmp/ccsHJaXF.s:1553   .text:00000000000005b4 .L0 
     /tmp/ccsHJaXF.s:1554   .text:00000000000005b8 .L0 
     /tmp/ccsHJaXF.s:1559   .text:00000000000005c8 .L0 
     /tmp/ccsHJaXF.s:1560   .text:00000000000005c8 .L0 
     /tmp/ccsHJaXF.s:1561   .text:00000000000005c8 .L0 
     /tmp/ccsHJaXF.s:1562   .text:00000000000005c8 .L0 
     /tmp/ccsHJaXF.s:1564   .text:00000000000005cc .L0 
     /tmp/ccsHJaXF.s:1567   .text:00000000000005cc .L0 
GAS LISTING /tmp/ccsHJaXF.s 			page 54


     /tmp/ccsHJaXF.s:1568   .text:00000000000005cc .L0 
     /tmp/ccsHJaXF.s:1571   .text:00000000000005d4 .L0 
     /tmp/ccsHJaXF.s:1572   .text:00000000000005d4 .L0 
     /tmp/ccsHJaXF.s:1577   .text:00000000000005e4 .L0 
     /tmp/ccsHJaXF.s:1592   .text:0000000000000610 .L0 
     /tmp/ccsHJaXF.s:1595   .text:0000000000000610 .L0 
     /tmp/ccsHJaXF.s:1596   .text:0000000000000610 .L0 
     /tmp/ccsHJaXF.s:1597   .text:0000000000000610 .L0 
     /tmp/ccsHJaXF.s:1602   .text:0000000000000614 .L0 
     /tmp/ccsHJaXF.s:1606   .text:000000000000061c .L0 
     /tmp/ccsHJaXF.s:1607   .text:000000000000061c .L0 
     /tmp/ccsHJaXF.s:1610   .text:0000000000000624 .L0 
     /tmp/ccsHJaXF.s:1613   .text:0000000000000628 .L0 
     /tmp/ccsHJaXF.s:1614   .text:0000000000000628 .L0 
     /tmp/ccsHJaXF.s:1617   .text:0000000000000630 .L0 
     /tmp/ccsHJaXF.s:1618   .text:0000000000000630 .L0 
     /tmp/ccsHJaXF.s:1623   .text:0000000000000640 .L0 
     /tmp/ccsHJaXF.s:1624   .text:0000000000000644 .L0 
     /tmp/ccsHJaXF.s:1625   .text:0000000000000644 .L0 
     /tmp/ccsHJaXF.s:1627   .text:0000000000000648 .L0 
     /tmp/ccsHJaXF.s:1628   .text:0000000000000648 .L0 
     /tmp/ccsHJaXF.s:1630   .text:000000000000064c .L0 
     /tmp/ccsHJaXF.s:1632   .text:0000000000000650 .L0 
     /tmp/ccsHJaXF.s:1634   .text:0000000000000654 .L0 
     /tmp/ccsHJaXF.s:1637   .text:0000000000000658 .L0 
     /tmp/ccsHJaXF.s:1640   .text:000000000000065c .L0 
     /tmp/ccsHJaXF.s:1648   .text:0000000000000674 .L0 
     /tmp/ccsHJaXF.s:1676   .rodata:0000000000000000 .LANCHOR0
     /tmp/ccsHJaXF.s:1679   .rodata:0000000000000000 _ZZN5Riscv12printIntegerEmE6digits
     /tmp/ccsHJaXF.s:1683   .bss:0000000000000000 .LANCHOR1
     /tmp/ccsHJaXF.s:1686   .bss:0000000000000000 _ZZN5Riscv20handleSupervisorTrapEvE5total
     /tmp/ccsHJaXF.s:1698   .text:0000000000000674 .L0 
     /tmp/ccsHJaXF.s:78     .text:0000000000000050 .L0 
     /tmp/ccsHJaXF.s:439    .text:00000000000001b8 .L0 
     /tmp/ccsHJaXF.s:597    .text:0000000000000294 .L0 
     /tmp/ccsHJaXF.s:604    .text:00000000000002a8 .L0 
     /tmp/ccsHJaXF.s:616    .text:00000000000002c4 .L0 
     /tmp/ccsHJaXF.s:671    .text:00000000000002f4 .L0 
     /tmp/ccsHJaXF.s:1146   .text:0000000000000460 .L0 
     /tmp/ccsHJaXF.s:1174   .text:000000000000047c .L0 
     /tmp/ccsHJaXF.s:1199   .text:0000000000000498 .L0 
     /tmp/ccsHJaXF.s:1203   .text:00000000000004a4 .L0 
     /tmp/ccsHJaXF.s:1297   .text:00000000000004e0 .L0 
     /tmp/ccsHJaXF.s:1301   .text:00000000000004ec .L0 
     /tmp/ccsHJaXF.s:1585   .text:0000000000000600 .L0 
     /tmp/ccsHJaXF.s:1541   .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccsHJaXF.s:1618   .text:0000000000000630 .L0 
     /tmp/ccsHJaXF.s:325    .text:000000000000014c .L16
     /tmp/ccsHJaXF.s:306    .text:0000000000000134 .L17
     /tmp/ccsHJaXF.s:429    .text:00000000000001a8 .L20
     /tmp/ccsHJaXF.s:471    .text:0000000000000208 .L21
     /tmp/ccsHJaXF.s:457    .text:00000000000001e8 .L22
     /tmp/ccsHJaXF.s:703    .text:0000000000000314 .L48
     /tmp/ccsHJaXF.s:712    .text:000000000000031c .L27
     /tmp/ccsHJaXF.s:718    .text:0000000000000324 .L24
     /tmp/ccsHJaXF.s:742    .text:000000000000034c .L49
     /tmp/ccsHJaXF.s:977    .text:00000000000003d8 .L50
GAS LISTING /tmp/ccsHJaXF.s 			page 55


     /tmp/ccsHJaXF.s:1028   .text:00000000000003f4 .L51
     /tmp/ccsHJaXF.s:1057   .text:0000000000000408 .L52
     /tmp/ccsHJaXF.s:1121   .text:0000000000000454 .L53
     /tmp/ccsHJaXF.s:1166   .text:000000000000047c .L54
     /tmp/ccsHJaXF.s:1263   .text:00000000000004d0 .L55
     /tmp/ccsHJaXF.s:1343   .text:0000000000000518 .L56
     /tmp/ccsHJaXF.s:1398   .text:0000000000000554 .L57
     /tmp/ccsHJaXF.s:1426   .text:0000000000000568 .L58
     /tmp/ccsHJaXF.s:1012   .text:00000000000003ec .L30
     /tmp/ccsHJaXF.s:966    .text:00000000000003d0 .L42
     /tmp/ccsHJaXF.s:1111   .text:000000000000044c .L59
     /tmp/ccsHJaXF.s:1250   .text:00000000000004c8 .L60
     /tmp/ccsHJaXF.s:1388   .text:000000000000054c .L61
     /tmp/ccsHJaXF.s:1611   .text:0000000000000628 .L63
     /tmp/ccsHJaXF.s:1590   .text:0000000000000610 .L64
     /tmp/ccsHJaXF.s:609    .text:00000000000002bc .LEHB0
     /tmp/ccsHJaXF.s:517    .text:000000000000023c .LFB33
     /tmp/ccsHJaXF.s:1088   .text:0000000000000420 .LEHE0
     /tmp/ccsHJaXF.s:1094   .text:0000000000000434 .LEHB1
     /tmp/ccsHJaXF.s:1097   .text:000000000000043c .LEHE1
     /tmp/ccsHJaXF.s:1453   .text:000000000000057c .L45
     /tmp/ccsHJaXF.s:1149   .text:000000000000046c .LEHB2
     /tmp/ccsHJaXF.s:1367   .text:000000000000052c .LEHE2
     /tmp/ccsHJaXF.s:1371   .text:0000000000000534 .LEHB3
     /tmp/ccsHJaXF.s:1374   .text:000000000000053c .LEHE3
     /tmp/ccsHJaXF.s:1472   .text:0000000000000598 .L46
     /tmp/ccsHJaXF.s:1411   .text:0000000000000558 .LEHB4
     /tmp/ccsHJaXF.s:1442   .text:0000000000000574 .LEHE4
     /tmp/ccsHJaXF.s:1468   .text:0000000000000590 .LEHB5
     /tmp/ccsHJaXF.s:1471   .text:0000000000000598 .LEHE5
     /tmp/ccsHJaXF.s:1486   .text:00000000000005ac .LEHB6
     /tmp/ccsHJaXF.s:1489   .text:00000000000005b4 .LEHE6
     /tmp/ccsHJaXF.s:1566   .text:00000000000005cc .LEHB7
     /tmp/ccsHJaXF.s:1548   .text:00000000000005b4 .LFB34
     /tmp/ccsHJaXF.s:1580   .text:00000000000005f0 .LEHE7
     /tmp/ccsHJaXF.s:1586   .text:0000000000000608 .LEHB8
     /tmp/ccsHJaXF.s:1589   .text:0000000000000610 .LEHE8
     /tmp/ccsHJaXF.s:1636   .text:0000000000000658 .L66
     /tmp/ccsHJaXF.s:1605   .text:000000000000061c .LEHB9
     /tmp/ccsHJaXF.s:1621   .text:0000000000000640 .LEHE9
     /tmp/ccsHJaXF.s:1644   .text:000000000000066c .LEHB10
     /tmp/ccsHJaXF.s:1647   .text:0000000000000674 .LEHE10
     /tmp/ccsHJaXF.s:4311   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccsHJaXF.s:6175   .debug_str:00000000000001e9 .LASF235
     /tmp/ccsHJaXF.s:6203   .debug_str:000000000000036e .LASF236
     /tmp/ccsHJaXF.s:6517   .debug_str:0000000000000bf9 .LASF237
     /tmp/ccsHJaXF.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccsHJaXF.s:1689   .text:0000000000000674 .Letext0
     /tmp/ccsHJaXF.s:6117   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccsHJaXF.s:6285   .debug_str:00000000000005cd .LASF0
     /tmp/ccsHJaXF.s:6429   .debug_str:00000000000009be .LASF3
     /tmp/ccsHJaXF.s:6319   .debug_str:00000000000006c2 .LASF1
     /tmp/ccsHJaXF.s:6439   .debug_str:00000000000009e3 .LASF2
     /tmp/ccsHJaXF.s:6455   .debug_str:0000000000000a67 .LASF4
     /tmp/ccsHJaXF.s:6301   .debug_str:0000000000000638 .LASF5
     /tmp/ccsHJaXF.s:6135   .debug_str:000000000000006e .LASF6
     /tmp/ccsHJaXF.s:6409   .debug_str:000000000000092e .LASF7
GAS LISTING /tmp/ccsHJaXF.s 			page 56


     /tmp/ccsHJaXF.s:6397   .debug_str:00000000000008e3 .LASF8
     /tmp/ccsHJaXF.s:6309   .debug_str:0000000000000689 .LASF9
     /tmp/ccsHJaXF.s:6261   .debug_str:000000000000050d .LASF10
     /tmp/ccsHJaXF.s:6269   .debug_str:000000000000055d .LASF11
     /tmp/ccsHJaXF.s:6191   .debug_str:000000000000032a .LASF12
     /tmp/ccsHJaXF.s:6251   .debug_str:00000000000004d7 .LASF13
     /tmp/ccsHJaXF.s:6205   .debug_str:000000000000037c .LASF14
     /tmp/ccsHJaXF.s:6189   .debug_str:000000000000031a .LASF15
     /tmp/ccsHJaXF.s:6491   .debug_str:0000000000000b70 .LASF16
     /tmp/ccsHJaXF.s:6237   .debug_str:0000000000000444 .LASF17
     /tmp/ccsHJaXF.s:6479   .debug_str:0000000000000b13 .LASF18
     /tmp/ccsHJaXF.s:6549   .debug_str:0000000000000ce5 .LASF97
     /tmp/ccsHJaXF.s:6423   .debug_str:0000000000000994 .LASF22
     /tmp/ccsHJaXF.s:6325   .debug_str:00000000000006e4 .LASF19
     /tmp/ccsHJaXF.s:6243   .debug_str:000000000000048e .LASF20
     /tmp/ccsHJaXF.s:6569   .debug_str:0000000000000d84 .LASF21
     /tmp/ccsHJaXF.s:6535   .debug_str:0000000000000c6f .LASF23
     /tmp/ccsHJaXF.s:6245   .debug_str:0000000000000497 .LASF24
     /tmp/ccsHJaXF.s:6507   .debug_str:0000000000000bb9 .LASF25
     /tmp/ccsHJaXF.s:6217   .debug_str:00000000000003ca .LASF26
     /tmp/ccsHJaXF.s:6279   .debug_str:00000000000005a4 .LASF27
     /tmp/ccsHJaXF.s:6481   .debug_str:0000000000000b29 .LASF29
     /tmp/ccsHJaXF.s:6365   .debug_str:0000000000000819 .LASF28
     /tmp/ccsHJaXF.s:6347   .debug_str:0000000000000797 .LASF30
     /tmp/ccsHJaXF.s:6235   .debug_str:000000000000043a .LASF31
     /tmp/ccsHJaXF.s:6129   .debug_str:0000000000000048 .LASF32
     /tmp/ccsHJaXF.s:6349   .debug_str:00000000000007af .LASF37
     /tmp/ccsHJaXF.s:6543   .debug_str:0000000000000cb8 .LASF39
     /tmp/ccsHJaXF.s:6185   .debug_str:00000000000002ec .LASF33
     /tmp/ccsHJaXF.s:6329   .debug_str:0000000000000708 .LASF34
     /tmp/ccsHJaXF.s:6295   .debug_str:0000000000000611 .LASF35
     /tmp/ccsHJaXF.s:6209   .debug_str:0000000000000393 .LASF36
     /tmp/ccsHJaXF.s:6577   .debug_str:0000000000000db8 .LASF38
     /tmp/ccsHJaXF.s:6147   .debug_str:00000000000000ec .LASF40
     /tmp/ccsHJaXF.s:6407   .debug_str:0000000000000921 .LASF41
     /tmp/ccsHJaXF.s:6153   .debug_str:0000000000000119 .LASF42
     /tmp/ccsHJaXF.s:6465   .debug_str:0000000000000ab3 .LASF43
     /tmp/ccsHJaXF.s:6241   .debug_str:0000000000000473 .LASF44
     /tmp/ccsHJaXF.s:6289   .debug_str:00000000000005ea .LASF45
     /tmp/ccsHJaXF.s:6561   .debug_str:0000000000000d3c .LASF46
     /tmp/ccsHJaXF.s:6531   .debug_str:0000000000000c61 .LASF49
     /tmp/ccsHJaXF.s:6523   .debug_str:0000000000000c2b .LASF51
     /tmp/ccsHJaXF.s:6435   .debug_str:00000000000009cf .LASF47
     /tmp/ccsHJaXF.s:6383   .debug_str:0000000000000885 .LASF48
     /tmp/ccsHJaXF.s:6417   .debug_str:0000000000000966 .LASF50
     /tmp/ccsHJaXF.s:6419   .debug_str:000000000000096d .LASF52
     /tmp/ccsHJaXF.s:6379   .debug_str:000000000000086a .LASF53
     /tmp/ccsHJaXF.s:6311   .debug_str:000000000000069c .LASF54
     /tmp/ccsHJaXF.s:6563   .debug_str:0000000000000d56 .LASF55
     /tmp/ccsHJaXF.s:6513   .debug_str:0000000000000bdb .LASF56
     /tmp/ccsHJaXF.s:6373   .debug_str:0000000000000854 .LASF57
     /tmp/ccsHJaXF.s:6381   .debug_str:0000000000000871 .LASF58
     /tmp/ccsHJaXF.s:6359   .debug_str:00000000000007fa .LASF59
     /tmp/ccsHJaXF.s:6421   .debug_str:0000000000000980 .LASF60
     /tmp/ccsHJaXF.s:6605   .debug_str:0000000000000e80 .LASF61
     /tmp/ccsHJaXF.s:6293   .debug_str:00000000000005fd .LASF62
     /tmp/ccsHJaXF.s:6487   .debug_str:0000000000000b62 .LASF63
GAS LISTING /tmp/ccsHJaXF.s 			page 57


     /tmp/ccsHJaXF.s:6459   .debug_str:0000000000000a91 .LASF64
     /tmp/ccsHJaXF.s:6461   .debug_str:0000000000000aa4 .LASF65
     /tmp/ccsHJaXF.s:6197   .debug_str:0000000000000347 .LASF66
     /tmp/ccsHJaXF.s:6229   .debug_str:000000000000040f .LASF67
     /tmp/ccsHJaXF.s:6139   .debug_str:0000000000000080 .LASF68
     /tmp/ccsHJaXF.s:6291   .debug_str:00000000000005f7 .LASF69
     /tmp/ccsHJaXF.s:6221   .debug_str:00000000000003e9 .LASF70
     /tmp/ccsHJaXF.s:6137   .debug_str:0000000000000075 .LASF71
     /tmp/ccsHJaXF.s:6445   .debug_str:0000000000000a09 .LASF72
     /tmp/ccsHJaXF.s:6437   .debug_str:00000000000009d8 .LASF73
     /tmp/ccsHJaXF.s:6593   .debug_str:0000000000000e21 .LASF74
     /tmp/ccsHJaXF.s:6551   .debug_str:0000000000000ceb .LASF75
     /tmp/ccsHJaXF.s:6575   .debug_str:0000000000000da2 .LASF76
     /tmp/ccsHJaXF.s:6545   .debug_str:0000000000000cd6 .LASF77
     /tmp/ccsHJaXF.s:6351   .debug_str:00000000000007bf .LASF78
     /tmp/ccsHJaXF.s:6273   .debug_str:000000000000057e .LASF79
     /tmp/ccsHJaXF.s:6281   .debug_str:00000000000005af .LASF80
     /tmp/ccsHJaXF.s:6527   .debug_str:0000000000000c4c .LASF81
     /tmp/ccsHJaXF.s:6267   .debug_str:0000000000000541 .LASF82
     /tmp/ccsHJaXF.s:6403   .debug_str:0000000000000903 .LASF83
     /tmp/ccsHJaXF.s:6307   .debug_str:0000000000000667 .LASF84
     /tmp/ccsHJaXF.s:6565   .debug_str:0000000000000d5e .LASF85
     /tmp/ccsHJaXF.s:6557   .debug_str:0000000000000d08 .LASF86
     /tmp/ccsHJaXF.s:6431   .debug_str:00000000000009c3 .LASF87
     /tmp/ccsHJaXF.s:6133   .debug_str:0000000000000066 .LASF88
     /tmp/ccsHJaXF.s:6167   .debug_str:00000000000001b0 .LASF89
     /tmp/ccsHJaXF.s:6525   .debug_str:0000000000000c40 .LASF90
     /tmp/ccsHJaXF.s:6169   .debug_str:00000000000001bf .LASF91
     /tmp/ccsHJaXF.s:6361   .debug_str:0000000000000802 .LASF92
     /tmp/ccsHJaXF.s:6271   .debug_str:000000000000056b .LASF93
     /tmp/ccsHJaXF.s:6231   .debug_str:0000000000000415 .LASF94
     /tmp/ccsHJaXF.s:6183   .debug_str:00000000000002d8 .LASF95
     /tmp/ccsHJaXF.s:6501   .debug_str:0000000000000ba6 .LASF96
     /tmp/ccsHJaXF.s:6503   .debug_str:0000000000000bab .LASF98
     /tmp/ccsHJaXF.s:6181   .debug_str:00000000000002d2 .LASF99
     /tmp/ccsHJaXF.s:6471   .debug_str:0000000000000adb .LASF100
     /tmp/ccsHJaXF.s:6199   .debug_str:000000000000035a .LASF101
     /tmp/ccsHJaXF.s:6171   .debug_str:00000000000001d2 .LASF102
     /tmp/ccsHJaXF.s:6399   .debug_str:00000000000008f6 .LASF103
     /tmp/ccsHJaXF.s:6315   .debug_str:00000000000006b4 .LASF104
     /tmp/ccsHJaXF.s:6499   .debug_str:0000000000000b9e .LASF149
     /tmp/ccsHJaXF.s:6275   .debug_str:0000000000000589 .LASF105
     /tmp/ccsHJaXF.s:6369   .debug_str:0000000000000833 .LASF238
     /tmp/ccsHJaXF.s:6387   .debug_str:00000000000008a1 .LASF239
     /tmp/ccsHJaXF.s:6317   .debug_str:00000000000006bd .LASF106
     /tmp/ccsHJaXF.s:6589   .debug_str:0000000000000e07 .LASF108
     /tmp/ccsHJaXF.s:6585   .debug_str:0000000000000deb .LASF107
     /tmp/ccsHJaXF.s:6511   .debug_str:0000000000000bcb .LASF109
     /tmp/ccsHJaXF.s:6223   .debug_str:00000000000003fb .LASF110
     /tmp/ccsHJaXF.s:6145   .debug_str:00000000000000d9 .LASF111
     /tmp/ccsHJaXF.s:6323   .debug_str:00000000000006de .LASF112
     /tmp/ccsHJaXF.s:6389   .debug_str:00000000000008a6 .LASF113
     /tmp/ccsHJaXF.s:6505   .debug_str:0000000000000bb1 .LASF114
     /tmp/ccsHJaXF.s:6553   .debug_str:0000000000000cf5 .LASF115
     /tmp/ccsHJaXF.s:6467   .debug_str:0000000000000ac1 .LASF116
     /tmp/ccsHJaXF.s:6345   .debug_str:000000000000078a .LASF121
     /tmp/ccsHJaXF.s:6331   .debug_str:0000000000000726 .LASF123
GAS LISTING /tmp/ccsHJaXF.s 			page 58


     /tmp/ccsHJaXF.s:6597   .debug_str:0000000000000e49 .LASF117
     /tmp/ccsHJaXF.s:6255   .debug_str:00000000000004ee .LASF118
     /tmp/ccsHJaXF.s:6287   .debug_str:00000000000005da .LASF119
     /tmp/ccsHJaXF.s:6297   .debug_str:0000000000000623 .LASF120
     /tmp/ccsHJaXF.s:6469   .debug_str:0000000000000ad2 .LASF122
     /tmp/ccsHJaXF.s:6219   .debug_str:00000000000003d6 .LASF124
     /tmp/ccsHJaXF.s:6449   .debug_str:0000000000000a2d .LASF125
     /tmp/ccsHJaXF.s:6483   .debug_str:0000000000000b41 .LASF126
     /tmp/ccsHJaXF.s:6367   .debug_str:0000000000000824 .LASF127
     /tmp/ccsHJaXF.s:6125   .debug_str:0000000000000029 .LASF128
     /tmp/ccsHJaXF.s:6573   .debug_str:0000000000000d93 .LASF129
     /tmp/ccsHJaXF.s:6393   .debug_str:00000000000008c2 .LASF130
     /tmp/ccsHJaXF.s:6477   .debug_str:0000000000000b05 .LASF131
     /tmp/ccsHJaXF.s:6415   .debug_str:000000000000095a .LASF132
     /tmp/ccsHJaXF.s:6121   .debug_str:000000000000000d .LASF133
     /tmp/ccsHJaXF.s:6579   .debug_str:0000000000000dc4 .LASF134
     /tmp/ccsHJaXF.s:6303   .debug_str:000000000000064a .LASF137
     /tmp/ccsHJaXF.s:6475   .debug_str:0000000000000afa .LASF135
     /tmp/ccsHJaXF.s:6587   .debug_str:0000000000000df1 .LASF136
     /tmp/ccsHJaXF.s:6463   .debug_str:0000000000000aab .LASF138
     /tmp/ccsHJaXF.s:6515   .debug_str:0000000000000bef .LASF139
     /tmp/ccsHJaXF.s:6391   .debug_str:00000000000008b6 .LASF140
     /tmp/ccsHJaXF.s:6213   .debug_str:00000000000003b7 .LASF141
     /tmp/ccsHJaXF.s:6159   .debug_str:0000000000000160 .LASF143
     /tmp/ccsHJaXF.s:6157   .debug_str:000000000000014b .LASF142
     /tmp/ccsHJaXF.s:6179   .debug_str:00000000000002a6 .LASF144
     /tmp/ccsHJaXF.s:6601   .debug_str:0000000000000e61 .LASF240
     /tmp/ccsHJaXF.s:6177   .debug_str:0000000000000295 .LASF241
     /tmp/ccsHJaXF.s:6127   .debug_str:0000000000000043 .LASF145
     /tmp/ccsHJaXF.s:6533   .debug_str:0000000000000c6a .LASF146
     /tmp/ccsHJaXF.s:6335   .debug_str:0000000000000758 .LASF147
     /tmp/ccsHJaXF.s:6227   .debug_str:0000000000000409 .LASF148
     /tmp/ccsHJaXF.s:6521   .debug_str:0000000000000c23 .LASF150
     /tmp/ccsHJaXF.s:6165   .debug_str:00000000000001a6 .LASF151
     /tmp/ccsHJaXF.s:6341   .debug_str:0000000000000771 .LASF152
     /tmp/ccsHJaXF.s:6427   .debug_str:00000000000009b3 .LASF153
     /tmp/ccsHJaXF.s:6265   .debug_str:000000000000052d .LASF154
     /tmp/ccsHJaXF.s:6443   .debug_str:00000000000009fd .LASF155
     /tmp/ccsHJaXF.s:6425   .debug_str:000000000000099f .LASF156
     /tmp/ccsHJaXF.s:6225   .debug_str:0000000000000404 .LASF157
     /tmp/ccsHJaXF.s:6473   .debug_str:0000000000000ae3 .LASF158
     /tmp/ccsHJaXF.s:6495   .debug_str:0000000000000b8f .LASF159
     /tmp/ccsHJaXF.s:6239   .debug_str:000000000000045a .LASF160
     /tmp/ccsHJaXF.s:6123   .debug_str:000000000000001d .LASF161
     /tmp/ccsHJaXF.s:6447   .debug_str:0000000000000a21 .LASF162
     /tmp/ccsHJaXF.s:6343   .debug_str:0000000000000776 .LASF163
     /tmp/ccsHJaXF.s:6277   .debug_str:000000000000058f .LASF164
     /tmp/ccsHJaXF.s:6195   .debug_str:000000000000033e .LASF165
     /tmp/ccsHJaXF.s:6201   .debug_str:0000000000000364 .LASF166
     /tmp/ccsHJaXF.s:6371   .debug_str:000000000000084b .LASF167
     /tmp/ccsHJaXF.s:6453   .debug_str:0000000000000a5c .LASF168
     /tmp/ccsHJaXF.s:6321   .debug_str:00000000000006d5 .LASF169
     /tmp/ccsHJaXF.s:6283   .debug_str:00000000000005c7 .LASF170
     /tmp/ccsHJaXF.s:6603   .debug_str:0000000000000e68 .LASF171
     /tmp/ccsHJaXF.s:6131   .debug_str:000000000000005e .LASF172
     /tmp/ccsHJaXF.s:6333   .debug_str:000000000000073e .LASF173
     /tmp/ccsHJaXF.s:6595   .debug_str:0000000000000e39 .LASF174
GAS LISTING /tmp/ccsHJaXF.s 			page 59


     /tmp/ccsHJaXF.s:6457   .debug_str:0000000000000a6e .LASF175
     /tmp/ccsHJaXF.s:6493   .debug_str:0000000000000b7c .LASF176
     /tmp/ccsHJaXF.s:6451   .debug_str:0000000000000a36 .LASF177
     /tmp/ccsHJaXF.s:6119   .debug_str:0000000000000000 .LASF178
     /tmp/ccsHJaXF.s:6143   .debug_str:00000000000000b5 .LASF179
     /tmp/ccsHJaXF.s:6567   .debug_str:0000000000000d77 .LASF180
     /tmp/ccsHJaXF.s:6357   .debug_str:00000000000007ea .LASF181
     /tmp/ccsHJaXF.s:6233   .debug_str:0000000000000428 .LASF182
     /tmp/ccsHJaXF.s:6247   .debug_str:00000000000004a3 .LASF183
     /tmp/ccsHJaXF.s:6173   .debug_str:00000000000001db .LASF184
     /tmp/ccsHJaXF.s:6141   .debug_str:0000000000000092 .LASF185
     /tmp/ccsHJaXF.s:6377   .debug_str:0000000000000861 .LASF186
     /tmp/ccsHJaXF.s:6211   .debug_str:00000000000003b2 .LASF187
     /tmp/ccsHJaXF.s:6193   .debug_str:0000000000000339 .LASF188
     /tmp/ccsHJaXF.s:6313   .debug_str:00000000000006af .LASF189
     /tmp/ccsHJaXF.s:6485   .debug_str:0000000000000b5d .LASF190
     /tmp/ccsHJaXF.s:6375   .debug_str:000000000000085c .LASF191
     /tmp/ccsHJaXF.s:6591   .debug_str:0000000000000e13 .LASF192
     /tmp/ccsHJaXF.s:6497   .debug_str:0000000000000b96 .LASF193
     /tmp/ccsHJaXF.s:6413   .debug_str:0000000000000943 .LASF194
     /tmp/ccsHJaXF.s:6299   .debug_str:0000000000000630 .LASF195
     /tmp/ccsHJaXF.s:6161   .debug_str:0000000000000188 .LASF196
     /tmp/ccsHJaXF.s:6249   .debug_str:00000000000004ca .LASF197
     /tmp/ccsHJaXF.s:6539   .debug_str:0000000000000c8e .LASF198
     /tmp/ccsHJaXF.s:6541   .debug_str:0000000000000cab .LASF199
     /tmp/ccsHJaXF.s:6187   .debug_str:00000000000002fd .LASF200
     /tmp/ccsHJaXF.s:6259   .debug_str:0000000000000500 .LASF201
     /tmp/ccsHJaXF.s:6581   .debug_str:0000000000000dcf .LASF202
     /tmp/ccsHJaXF.s:6327   .debug_str:00000000000006ed .LASF203
     /tmp/ccsHJaXF.s:10     .text:0000000000000000 .LFB35
     /tmp/ccsHJaXF.s:36     .text:0000000000000028 .LFE35
     /tmp/ccsHJaXF.s:25     .text:0000000000000018 .LVL0
     /tmp/ccsHJaXF.s:1649   .text:0000000000000674 .LFE34
     /tmp/ccsHJaXF.s:6355   .debug_str:00000000000007e2 .LASF223
     /tmp/ccsHJaXF.s:1593   .text:0000000000000610 .LBB246
     /tmp/ccsHJaXF.s:1600   .text:0000000000000614 .LBE246
     /tmp/ccsHJaXF.s:5537   .debug_loc:0000000000000000 .LLST50
     /tmp/ccsHJaXF.s:1569   .text:00000000000005d4 .LVL109
     /tmp/ccsHJaXF.s:1574   .text:00000000000005e0 .LVL110
     /tmp/ccsHJaXF.s:1579   .text:00000000000005f0 .LVL111
     /tmp/ccsHJaXF.s:1588   .text:0000000000000610 .LVL112
     /tmp/ccsHJaXF.s:1608   .text:0000000000000624 .LVL114
     /tmp/ccsHJaXF.s:1615   .text:0000000000000630 .LVL115
     /tmp/ccsHJaXF.s:1620   .text:0000000000000640 .LVL116
     /tmp/ccsHJaXF.s:1642   .text:0000000000000668 .LVL117
     /tmp/ccsHJaXF.s:1646   .text:0000000000000674 .LVL118
     /tmp/ccsHJaXF.s:1501   .text:00000000000005b4 .LFE33
     /tmp/ccsHJaXF.s:5544   .debug_loc:0000000000000023 .LLST12
     /tmp/ccsHJaXF.s:6207   .debug_str:000000000000038c .LASF204
     /tmp/ccsHJaXF.s:5583   .debug_loc:00000000000000de .LLST13
     /tmp/ccsHJaXF.s:6071   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccsHJaXF.s:6529   .debug_str:0000000000000c5b .LASF205
     /tmp/ccsHJaXF.s:6339   .debug_str:0000000000000767 .LASF206
     /tmp/ccsHJaXF.s:5598   .debug_loc:0000000000000127 .LLST14
     /tmp/ccsHJaXF.s:6509   .debug_str:0000000000000bc6 .LASF207
     /tmp/ccsHJaXF.s:5641   .debug_loc:00000000000001f5 .LLST15
     /tmp/ccsHJaXF.s:632    .text:00000000000002dc .LBB109
GAS LISTING /tmp/ccsHJaXF.s 			page 60


     /tmp/ccsHJaXF.s:706    .text:0000000000000314 .LBE109
     /tmp/ccsHJaXF.s:5656   .debug_loc:000000000000023e .LLST18
     /tmp/ccsHJaXF.s:6555   .debug_str:0000000000000d00 .LASF208
     /tmp/ccsHJaXF.s:5663   .debug_loc:0000000000000261 .LLST19
     /tmp/ccsHJaXF.s:634    .text:00000000000002dc .LBB110
     /tmp/ccsHJaXF.s:650    .text:00000000000002e8 .LBE110
     /tmp/ccsHJaXF.s:652    .text:00000000000002e8 .LBB112
     /tmp/ccsHJaXF.s:668    .text:00000000000002f4 .LBE112
     /tmp/ccsHJaXF.s:678    .text:0000000000000308 .LBB114
     /tmp/ccsHJaXF.s:689    .text:000000000000030c .LBE114
     /tmp/ccsHJaXF.s:5670   .debug_loc:0000000000000284 .LLST20
     /tmp/ccsHJaXF.s:691    .text:000000000000030c .LBB116
     /tmp/ccsHJaXF.s:705    .text:0000000000000314 .LBE116
     /tmp/ccsHJaXF.s:5677   .debug_loc:00000000000002a7 .LLST21
     /tmp/ccsHJaXF.s:676    .text:0000000000000308 .LVL44
     /tmp/ccsHJaXF.s:987    .text:00000000000003d8 .LBB208
     /tmp/ccsHJaXF.s:1013   .text:00000000000003ec .LBE208
     /tmp/ccsHJaXF.s:6363   .debug_str:0000000000000814 .LASF209
     /tmp/ccsHJaXF.s:5684   .debug_loc:00000000000002ca .LLST47
     /tmp/ccsHJaXF.s:6559   .debug_str:0000000000000d2e .LASF210
     /tmp/ccsHJaXF.s:5699   .debug_loc:0000000000000304 .LLST48
     /tmp/ccsHJaXF.s:1003   .text:00000000000003e8 .LVL59
     /tmp/ccsHJaXF.s:1033   .text:00000000000003f4 .LBB197
     /tmp/ccsHJaXF.s:1054   .text:0000000000000404 .LBE197
     /tmp/ccsHJaXF.s:6433   .debug_str:00000000000009ca .LASF211
     /tmp/ccsHJaXF.s:5706   .debug_loc:0000000000000327 .LLST45
     /tmp/ccsHJaXF.s:6163   .debug_str:000000000000019f .LASF212
     /tmp/ccsHJaXF.s:5718   .debug_loc:000000000000035e .LLST46
     /tmp/ccsHJaXF.s:1046   .text:0000000000000400 .LVL63
     /tmp/ccsHJaXF.s:6411   .debug_str:0000000000000935 .LASF213
     /tmp/ccsHJaXF.s:5725   .debug_loc:0000000000000381 .LLST41
     /tmp/ccsHJaXF.s:5736   .debug_loc:00000000000003b7 .LLST42
     /tmp/ccsHJaXF.s:6151   .debug_str:000000000000010c .LASF214
     /tmp/ccsHJaXF.s:5747   .debug_loc:00000000000003ed .LLST43
     /tmp/ccsHJaXF.s:6385   .debug_str:000000000000089a .LASF215
     /tmp/ccsHJaXF.s:5758   .debug_loc:0000000000000423 .LLST44
     /tmp/ccsHJaXF.s:1087   .text:0000000000000420 .LVL68
     /tmp/ccsHJaXF.s:1096   .text:000000000000043c .LVL69
     /tmp/ccsHJaXF.s:1466   .text:000000000000058c .LVL104
     /tmp/ccsHJaXF.s:1124   .text:0000000000000454 .LBB171
     /tmp/ccsHJaXF.s:1169   .text:000000000000047c .LBE171
     /tmp/ccsHJaXF.s:5765   .debug_loc:0000000000000446 .LLST39
     /tmp/ccsHJaXF.s:1126   .text:0000000000000454 .LBB172
     /tmp/ccsHJaXF.s:1143   .text:0000000000000460 .LBE172
     /tmp/ccsHJaXF.s:1154   .text:0000000000000474 .LBB174
     /tmp/ccsHJaXF.s:1168   .text:000000000000047c .LBE174
     /tmp/ccsHJaXF.s:5772   .debug_loc:0000000000000469 .LLST40
     /tmp/ccsHJaXF.s:1152   .text:0000000000000474 .LVL73
     /tmp/ccsHJaXF.s:5779   .debug_loc:000000000000048c .LLST35
     /tmp/ccsHJaXF.s:1180   .text:000000000000048c .LBB157
     /tmp/ccsHJaXF.s:1196   .text:0000000000000498 .LBE157
     /tmp/ccsHJaXF.s:1224   .text:00000000000004b0 .LBB159
     /tmp/ccsHJaXF.s:1232   .text:00000000000004b8 .LBE159
     /tmp/ccsHJaXF.s:5786   .debug_loc:00000000000004af .LLST36
     /tmp/ccsHJaXF.s:5794   .debug_loc:00000000000004d3 .LLST37
     /tmp/ccsHJaXF.s:1238   .text:00000000000004c0 .LBB161
     /tmp/ccsHJaXF.s:1252   .text:00000000000004c8 .LBE161
GAS LISTING /tmp/ccsHJaXF.s 			page 61


     /tmp/ccsHJaXF.s:5801   .debug_loc:00000000000004f6 .LLST38
     /tmp/ccsHJaXF.s:1236   .text:00000000000004c0 .LVL79
     /tmp/ccsHJaXF.s:1266   .text:00000000000004d0 .LBB143
     /tmp/ccsHJaXF.s:1340   .text:0000000000000514 .LBE143
     /tmp/ccsHJaXF.s:6401   .debug_str:00000000000008fe .LASF216
     /tmp/ccsHJaXF.s:5808   .debug_loc:0000000000000519 .LLST30
     /tmp/ccsHJaXF.s:5815   .debug_loc:000000000000053c .LLST31
     /tmp/ccsHJaXF.s:1277   .text:00000000000004d4 .LBB144
     /tmp/ccsHJaXF.s:1294   .text:00000000000004e0 .LBE144
     /tmp/ccsHJaXF.s:1304   .text:00000000000004f8 .LBB146
     /tmp/ccsHJaXF.s:1311   .text:00000000000004fc .LBE146
     /tmp/ccsHJaXF.s:5822   .debug_loc:000000000000055f .LLST32
     /tmp/ccsHJaXF.s:5829   .debug_loc:0000000000000582 .LLST33
     /tmp/ccsHJaXF.s:1321   .text:000000000000050c .LBB148
     /tmp/ccsHJaXF.s:1332   .text:0000000000000510 .LBE148
     /tmp/ccsHJaXF.s:5836   .debug_loc:00000000000005a5 .LLST34
     /tmp/ccsHJaXF.s:1315   .text:0000000000000504 .LVL87
     /tmp/ccsHJaXF.s:1319   .text:000000000000050c .LVL88
     /tmp/ccsHJaXF.s:5843   .debug_loc:00000000000005c8 .LLST27
     /tmp/ccsHJaXF.s:6305   .debug_str:0000000000000657 .LASF217
     /tmp/ccsHJaXF.s:5854   .debug_loc:00000000000005fe .LLST28
     /tmp/ccsHJaXF.s:6395   .debug_str:00000000000008dc .LASF218
     /tmp/ccsHJaXF.s:5865   .debug_loc:0000000000000634 .LLST29
     /tmp/ccsHJaXF.s:1366   .text:000000000000052c .LVL93
     /tmp/ccsHJaXF.s:1373   .text:000000000000053c .LVL95
     /tmp/ccsHJaXF.s:1484   .text:00000000000005a8 .LVL107
     /tmp/ccsHJaXF.s:1401   .text:0000000000000554 .LBB133
     /tmp/ccsHJaXF.s:1423   .text:0000000000000564 .LBE133
     /tmp/ccsHJaXF.s:6547   .debug_str:0000000000000ce0 .LASF219
     /tmp/ccsHJaXF.s:5872   .debug_loc:0000000000000657 .LLST25
     /tmp/ccsHJaXF.s:5879   .debug_loc:000000000000067a .LLST26
     /tmp/ccsHJaXF.s:1415   .text:0000000000000560 .LVL98
     /tmp/ccsHJaXF.s:1428   .text:0000000000000568 .LBB131
     /tmp/ccsHJaXF.s:1450   .text:0000000000000578 .LBE131
     /tmp/ccsHJaXF.s:5886   .debug_loc:000000000000069d .LLST23
     /tmp/ccsHJaXF.s:5893   .debug_loc:00000000000006c0 .LLST24
     /tmp/ccsHJaXF.s:1441   .text:0000000000000574 .LVL101
     /tmp/ccsHJaXF.s:946    .text:00000000000003b0 .LBB130
     /tmp/ccsHJaXF.s:974    .text:00000000000003d4 .LBE130
     /tmp/ccsHJaXF.s:5900   .debug_loc:00000000000006e3 .LLST22
     /tmp/ccsHJaXF.s:962    .text:00000000000003c4 .LVL54
     /tmp/ccsHJaXF.s:965    .text:00000000000003d0 .LVL55
     /tmp/ccsHJaXF.s:581    .text:000000000000028c .LBB104
     /tmp/ccsHJaXF.s:593    .text:0000000000000294 .LBE104
     /tmp/ccsHJaXF.s:5907   .debug_loc:0000000000000706 .LLST16
     /tmp/ccsHJaXF.s:619    .text:00000000000002d0 .LBB107
     /tmp/ccsHJaXF.s:627    .text:00000000000002d4 .LBE107
     /tmp/ccsHJaXF.s:5915   .debug_loc:000000000000072a .LLST17
     /tmp/ccsHJaXF.s:758    .text:0000000000000350 .LBB118
     /tmp/ccsHJaXF.s:775    .text:000000000000035c .LBE118
     /tmp/ccsHJaXF.s:1016   .text:00000000000003ec .LBB220
     /tmp/ccsHJaXF.s:1030   .text:00000000000003f4 .LBE220
     /tmp/ccsHJaXF.s:5922   .debug_loc:000000000000074d .LLST49
     /tmp/ccsHJaXF.s:612    .text:00000000000002c4 .LVL39
     /tmp/ccsHJaXF.s:552    .text:0000000000000268 .LBB100
     /tmp/ccsHJaXF.s:568    .text:0000000000000274 .LBE100
     /tmp/ccsHJaXF.s:717    .text:0000000000000324 .LVL47
GAS LISTING /tmp/ccsHJaXF.s 			page 62


     /tmp/ccsHJaXF.s:1470   .text:0000000000000598 .LVL105
     /tmp/ccsHJaXF.s:1488   .text:00000000000005b4 .LVL108
     /tmp/ccsHJaXF.s:367    .text:0000000000000174 .LFB32
     /tmp/ccsHJaXF.s:511    .text:000000000000023c .LFE32
     /tmp/ccsHJaXF.s:5929   .debug_loc:0000000000000770 .LLST6
     /tmp/ccsHJaXF.s:5943   .debug_loc:00000000000007a9 .LLST7
     /tmp/ccsHJaXF.s:6519   .debug_str:0000000000000c1c .LASF220
     /tmp/ccsHJaXF.s:5950   .debug_loc:00000000000007cc .LLST8
     /tmp/ccsHJaXF.s:5972   .debug_loc:000000000000082b .LLST9
     /tmp/ccsHJaXF.s:384    .text:000000000000018c .LBB94
     /tmp/ccsHJaXF.s:400    .text:0000000000000198 .LBE94
     /tmp/ccsHJaXF.s:402    .text:0000000000000198 .LBB96
     /tmp/ccsHJaXF.s:414    .text:00000000000001a0 .LBE96
     /tmp/ccsHJaXF.s:5994   .debug_loc:000000000000086c .LLST10
     /tmp/ccsHJaXF.s:485    .text:0000000000000220 .LBB98
     /tmp/ccsHJaXF.s:496    .text:0000000000000224 .LBE98
     /tmp/ccsHJaXF.s:6002   .debug_loc:0000000000000890 .LLST11
     /tmp/ccsHJaXF.s:469    .text:0000000000000204 .LVL29
     /tmp/ccsHJaXF.s:476    .text:0000000000000214 .LVL30
     /tmp/ccsHJaXF.s:259    .text:0000000000000104 .LFB31
     /tmp/ccsHJaXF.s:361    .text:0000000000000174 .LFE31
     /tmp/ccsHJaXF.s:6489   .debug_str:0000000000000b69 .LASF221
     /tmp/ccsHJaXF.s:6009   .debug_loc:00000000000008b3 .LLST2
     /tmp/ccsHJaXF.s:6020   .debug_loc:00000000000008e9 .LLST3
     /tmp/ccsHJaXF.s:277    .text:0000000000000120 .LBB88
     /tmp/ccsHJaXF.s:293    .text:000000000000012c .LBE88
     /tmp/ccsHJaXF.s:295    .text:000000000000012c .LBB90
     /tmp/ccsHJaXF.s:308    .text:0000000000000134 .LBE90
     /tmp/ccsHJaXF.s:6027   .debug_loc:000000000000090c .LLST4
     /tmp/ccsHJaXF.s:334    .text:0000000000000158 .LBB92
     /tmp/ccsHJaXF.s:345    .text:000000000000015c .LBE92
     /tmp/ccsHJaXF.s:6035   .debug_loc:0000000000000930 .LLST5
     /tmp/ccsHJaXF.s:318    .text:0000000000000144 .LVL13
     /tmp/ccsHJaXF.s:224    .text:00000000000000e4 .LFB30
     /tmp/ccsHJaXF.s:253    .text:0000000000000104 .LFE30
     /tmp/ccsHJaXF.s:155    .text:000000000000009c .LFB29
     /tmp/ccsHJaXF.s:187    .text:00000000000000bc .LFE29
     /tmp/ccsHJaXF.s:166    .text:00000000000000a8 .LBB86
     /tmp/ccsHJaXF.s:178    .text:00000000000000b0 .LBE86
     /tmp/ccsHJaXF.s:6042   .debug_loc:0000000000000953 .LLST1
     /tmp/ccsHJaXF.s:117    .text:000000000000007c .LFB28
     /tmp/ccsHJaXF.s:149    .text:000000000000009c .LFE28
     /tmp/ccsHJaXF.s:128    .text:0000000000000088 .LBB84
     /tmp/ccsHJaXF.s:140    .text:0000000000000090 .LBE84
     /tmp/ccsHJaXF.s:6050   .debug_loc:0000000000000977 .LLST0
     /tmp/ccsHJaXF.s:193    .text:00000000000000bc .LFB27
     /tmp/ccsHJaXF.s:218    .text:00000000000000e4 .LFE27
     /tmp/ccsHJaXF.s:207    .text:00000000000000d4 .LVL9
     /tmp/ccsHJaXF.s:65     .text:0000000000000040 .LFB26
     /tmp/ccsHJaXF.s:111    .text:000000000000007c .LFE26
     /tmp/ccsHJaXF.s:80     .text:0000000000000058 .LBB82
     /tmp/ccsHJaXF.s:92     .text:000000000000005c .LBE82
     /tmp/ccsHJaXF.s:96     .text:0000000000000064 .LVL3
     /tmp/ccsHJaXF.s:100    .text:000000000000006c .LVL4
     /tmp/ccsHJaXF.s:42     .text:0000000000000028 .LFB25
     /tmp/ccsHJaXF.s:59     .text:0000000000000040 .LFE25
     /tmp/ccsHJaXF.s:6215   .debug_str:00000000000003c5 .LASF222
GAS LISTING /tmp/ccsHJaXF.s 			page 63


     /tmp/ccsHJaXF.s:6149   .debug_str:0000000000000107 .LASF224
     /tmp/ccsHJaXF.s:6571   .debug_str:0000000000000d8d .LASF225
     /tmp/ccsHJaXF.s:6353   .debug_str:00000000000007d5 .LASF226
     /tmp/ccsHJaXF.s:6405   .debug_str:0000000000000918 .LASF228
     /tmp/ccsHJaXF.s:6441   .debug_str:00000000000009f1 .LASF227
     /tmp/ccsHJaXF.s:6253   .debug_str:00000000000004e6 .LASF229
     /tmp/ccsHJaXF.s:6537   .debug_str:0000000000000c7e .LASF230
     /tmp/ccsHJaXF.s:6583   .debug_str:0000000000000ddc .LASF242
     /tmp/ccsHJaXF.s:6155   .debug_str:0000000000000133 .LASF243
     /tmp/ccsHJaXF.s:6599   .debug_str:0000000000000e56 .LASF231
     /tmp/ccsHJaXF.s:6257   .debug_str:00000000000004fa .LASF232
     /tmp/ccsHJaXF.s:6263   .debug_str:000000000000051d .LASF233
     /tmp/ccsHJaXF.s:6337   .debug_str:0000000000000760 .LASF234
     /tmp/ccsHJaXF.s:1598   .text:0000000000000614 .LVL113
     /tmp/ccsHJaXF.s:549    .text:0000000000000268 .LVL34
     /tmp/ccsHJaXF.s:666    .text:00000000000002f4 .LVL43
     /tmp/ccsHJaXF.s:702    .text:0000000000000314 .LVL46
     /tmp/ccsHJaXF.s:741    .text:000000000000034c .LVL48
     /tmp/ccsHJaXF.s:954    .text:00000000000003b4 .LVL53
     /tmp/ccsHJaXF.s:976    .text:00000000000003d8 .LVL56
     /tmp/ccsHJaXF.s:1010   .text:00000000000003ec .LVL60
     /tmp/ccsHJaXF.s:1027   .text:00000000000003f4 .LVL61
     /tmp/ccsHJaXF.s:1141   .text:0000000000000460 .LVL72
     /tmp/ccsHJaXF.s:1165   .text:000000000000047c .LVL74
     /tmp/ccsHJaXF.s:1194   .text:0000000000000498 .LVL76
     /tmp/ccsHJaXF.s:1249   .text:00000000000004c8 .LVL80
     /tmp/ccsHJaXF.s:1292   .text:00000000000004e0 .LVL84
     /tmp/ccsHJaXF.s:1342   .text:0000000000000518 .LVL90
     /tmp/ccsHJaXF.s:1369   .text:0000000000000530 .LVL94
     /tmp/ccsHJaXF.s:1397   .text:0000000000000554 .LVL96
     /tmp/ccsHJaXF.s:566    .text:0000000000000274 .LVL35
     /tmp/ccsHJaXF.s:598    .text:000000000000029c .LVL38
     /tmp/ccsHJaXF.s:767    .text:0000000000000354 .LVL50
     /tmp/ccsHJaXF.s:755    .text:0000000000000350 .LVL49
     /tmp/ccsHJaXF.s:1056   .text:0000000000000408 .LVL64
     /tmp/ccsHJaXF.s:1120   .text:0000000000000454 .LVL70
     /tmp/ccsHJaXF.s:1135   .text:0000000000000458 .LVL71
     /tmp/ccsHJaXF.s:1175   .text:0000000000000484 .LVL75
     /tmp/ccsHJaXF.s:1262   .text:00000000000004d0 .LVL81
     /tmp/ccsHJaXF.s:1286   .text:00000000000004d8 .LVL83
     /tmp/ccsHJaXF.s:1425   .text:0000000000000568 .LVL99
     /tmp/ccsHJaXF.s:773    .text:000000000000035c .LVL51
     /tmp/ccsHJaXF.s:779    .text:0000000000000360 .LVL52
     /tmp/ccsHJaXF.s:1455   .text:0000000000000580 .LVL103
     /tmp/ccsHJaXF.s:1474   .text:000000000000059c .LVL106
     /tmp/ccsHJaXF.s:648    .text:00000000000002e8 .LVL42
     /tmp/ccsHJaXF.s:686    .text:000000000000030c .LVL45
     /tmp/ccsHJaXF.s:995    .text:00000000000003dc .LVL57
     /tmp/ccsHJaXF.s:1001   .text:00000000000003e0 .LVL58
     /tmp/ccsHJaXF.s:1041   .text:00000000000003f8 .LVL62
     /tmp/ccsHJaXF.s:1075   .text:0000000000000410 .LVL66
     /tmp/ccsHJaXF.s:1452   .text:000000000000057c .LVL102
     /tmp/ccsHJaXF.s:1081   .text:0000000000000414 .LVL67
     /tmp/ccsHJaXF.s:1069   .text:000000000000040c .LVL65
     /tmp/ccsHJaXF.s:1205   .text:00000000000004b0 .LVL77
     /tmp/ccsHJaXF.s:1230   .text:00000000000004b8 .LVL78
     /tmp/ccsHJaXF.s:1274   .text:00000000000004d4 .LVL82
GAS LISTING /tmp/ccsHJaXF.s 			page 64


     /tmp/ccsHJaXF.s:1303   .text:00000000000004f8 .LVL85
     /tmp/ccsHJaXF.s:1309   .text:00000000000004fc .LVL86
     /tmp/ccsHJaXF.s:1329   .text:0000000000000510 .LVL89
     /tmp/ccsHJaXF.s:1360   .text:0000000000000520 .LVL92
     /tmp/ccsHJaXF.s:1354   .text:000000000000051c .LVL91
     /tmp/ccsHJaXF.s:1409   .text:0000000000000558 .LVL97
     /tmp/ccsHJaXF.s:1436   .text:000000000000056c .LVL100
     /tmp/ccsHJaXF.s:580    .text:000000000000028c .LVL36
     /tmp/ccsHJaXF.s:590    .text:0000000000000294 .LVL37
     /tmp/ccsHJaXF.s:618    .text:00000000000002d0 .LVL40
     /tmp/ccsHJaXF.s:625    .text:00000000000002d4 .LVL41
     /tmp/ccsHJaXF.s:370    .text:0000000000000174 .LVL19
     /tmp/ccsHJaXF.s:424    .text:00000000000001a4 .LVL22
     /tmp/ccsHJaXF.s:398    .text:0000000000000198 .LVL20
     /tmp/ccsHJaXF.s:480    .text:0000000000000218 .LVL31
     /tmp/ccsHJaXF.s:428    .text:00000000000001a8 .LVL23
     /tmp/ccsHJaXF.s:435    .text:00000000000001b0 .LVL24
     /tmp/ccsHJaXF.s:446    .text:00000000000001d4 .LVL25
     /tmp/ccsHJaXF.s:456    .text:00000000000001e8 .LVL27
     /tmp/ccsHJaXF.s:461    .text:00000000000001ec .LVL28
     /tmp/ccsHJaXF.s:452    .text:00000000000001e0 .LVL26
     /tmp/ccsHJaXF.s:411    .text:00000000000001a0 .LVL21
     /tmp/ccsHJaXF.s:484    .text:0000000000000220 .LVL32
     /tmp/ccsHJaXF.s:493    .text:0000000000000224 .LVL33
     /tmp/ccsHJaXF.s:262    .text:0000000000000104 .LVL10
     /tmp/ccsHJaXF.s:304    .text:0000000000000134 .LVL12
     /tmp/ccsHJaXF.s:354    .text:0000000000000168 .LVL18
     /tmp/ccsHJaXF.s:291    .text:000000000000012c .LVL11
     /tmp/ccsHJaXF.s:329    .text:0000000000000150 .LVL15
     /tmp/ccsHJaXF.s:333    .text:0000000000000158 .LVL16
     /tmp/ccsHJaXF.s:342    .text:000000000000015c .LVL17
     /tmp/ccsHJaXF.s:165    .text:00000000000000a8 .LVL7
     /tmp/ccsHJaXF.s:175    .text:00000000000000b0 .LVL8
     /tmp/ccsHJaXF.s:127    .text:0000000000000088 .LVL5
     /tmp/ccsHJaXF.s:137    .text:0000000000000090 .LVL6
     /tmp/ccsHJaXF.s:1699   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccsHJaXF.s:577    .text:000000000000028c .LBB103
     /tmp/ccsHJaXF.s:708    .text:0000000000000314 .LBE103
     /tmp/ccsHJaXF.s:745    .text:000000000000034c .LBB224
     /tmp/ccsHJaXF.s:785    .text:0000000000000368 .LBE224
     /tmp/ccsHJaXF.s:789    .text:0000000000000368 .LBB225
     /tmp/ccsHJaXF.s:796    .text:0000000000000370 .LBE225
     /tmp/ccsHJaXF.s:800    .text:0000000000000370 .LBB226
     /tmp/ccsHJaXF.s:809    .text:0000000000000378 .LBE226
     /tmp/ccsHJaXF.s:813    .text:0000000000000378 .LBB227
     /tmp/ccsHJaXF.s:824    .text:0000000000000380 .LBE227
     /tmp/ccsHJaXF.s:828    .text:0000000000000380 .LBB228
     /tmp/ccsHJaXF.s:841    .text:0000000000000388 .LBE228
     /tmp/ccsHJaXF.s:845    .text:0000000000000388 .LBB229
     /tmp/ccsHJaXF.s:860    .text:0000000000000390 .LBE229
     /tmp/ccsHJaXF.s:864    .text:0000000000000390 .LBB230
     /tmp/ccsHJaXF.s:881    .text:0000000000000398 .LBE230
     /tmp/ccsHJaXF.s:885    .text:0000000000000398 .LBB231
     /tmp/ccsHJaXF.s:904    .text:00000000000003a0 .LBE231
     /tmp/ccsHJaXF.s:908    .text:00000000000003a0 .LBB232
     /tmp/ccsHJaXF.s:929    .text:00000000000003a8 .LBE232
     /tmp/ccsHJaXF.s:933    .text:00000000000003a8 .LBB233
GAS LISTING /tmp/ccsHJaXF.s 			page 65


     /tmp/ccsHJaXF.s:1212   .text:00000000000004b0 .LBE233
     /tmp/ccsHJaXF.s:1216   .text:00000000000004b0 .LBB234
     /tmp/ccsHJaXF.s:1498   .text:00000000000005b4 .LBE234
     /tmp/ccsHJaXF.s:1345   .text:0000000000000518 .LBB137
     /tmp/ccsHJaXF.s:1399   .text:0000000000000554 .LBE137
     /tmp/ccsHJaXF.s:1480   .text:000000000000059c .LBB139
     /tmp/ccsHJaXF.s:1490   .text:00000000000005b4 .LBE139
     /tmp/ccsHJaXF.s:1171   .text:000000000000047c .LBB156
     /tmp/ccsHJaXF.s:1206   .text:00000000000004b0 .LBE156
     /tmp/ccsHJaXF.s:1222   .text:00000000000004b0 .LBB163
     /tmp/ccsHJaXF.s:1264   .text:00000000000004d0 .LBE163
     /tmp/ccsHJaXF.s:1059   .text:0000000000000408 .LBB185
     /tmp/ccsHJaXF.s:1122   .text:0000000000000454 .LBE185
     /tmp/ccsHJaXF.s:1462   .text:0000000000000580 .LBB188
     /tmp/ccsHJaXF.s:1475   .text:000000000000059c .LBE188
     /tmp/ccsHJaXF.s:1504   .gcc_except_table:0000000000000000 .LLSDA33
     /tmp/ccsHJaXF.s:1651   .gcc_except_table:000000000000005f .LLSDA34

UNDEFINED SYMBOLS
_Z8userMainv
_ZN5Riscv14supervisorTrapEv
_ZN3PCB10initializeEv
_ZN8KConsole10initializeEv
__putc
_ZN3PCB16timeSliceCounterE
_ZN12SleepPCBList13tryToWakePCBsEv
_ZN3PCB7runningE
_ZN3PCB8dispatchEv
console_handler
_ZN10KSemaphoreD1Ev
_ZN10KSemaphoredlEPv
_Z7kmallocm
_Z5kfreePv
_ZN3PCBnwEm
_ZN3PCBC1EPFvPvES0_S0_m
_ZN12SleepPCBList17insertSleepingPCBEv
_ZN10KSemaphorenwEm
_ZN10KSemaphoreC1Ei
_ZN10KSemaphore4waitEv
_ZN10KSemaphore6signalEv
_ZN3PCBdlEPv
_Unwind_Resume
__gxx_personality_v0
thread_dispatch
