GAS LISTING /tmp/ccbLgW2Y.s 			page 1


   1              		.file	"Riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv15userMainWrapperEPv
   9              	_ZN5Riscv15userMainWrapperEPv:
  10              	.LFB35:
  11              		.file 1 "src/Riscv.cpp"
   1:src/Riscv.cpp **** //
   2:src/Riscv.cpp **** // Created by os on 4/27/22.
   3:src/Riscv.cpp **** //
   4:src/Riscv.cpp **** 
   5:src/Riscv.cpp **** #include "../h/Riscv.hpp"
   6:src/Riscv.cpp **** #include "../h/MemoryAllocator.hpp"
   7:src/Riscv.cpp **** #include "../h/PCB.hpp"
   8:src/Riscv.cpp **** #include "../lib/console.h"
   9:src/Riscv.cpp **** #include "../h/syscall_cpp.hpp"
  10:src/Riscv.cpp **** #include "../h/SleepPCBList.hpp"
  11:src/Riscv.cpp **** #include "../h/KConsole.hpp"
  12:src/Riscv.cpp **** #include "../h/Tests.hpp"
  13:src/Riscv.cpp **** #include "../test/userMain.hpp"
  14:src/Riscv.cpp **** 
  15:src/Riscv.cpp **** uint64 Riscv::totalTime = 0;
  16:src/Riscv.cpp **** 
  17:src/Riscv.cpp **** void Riscv::initSystem()
  18:src/Riscv.cpp **** {
  19:src/Riscv.cpp ****     w_stvec((uint64)&Riscv::supervisorTrap);
  20:src/Riscv.cpp ****     PCB::initialize();
  21:src/Riscv.cpp ****     KConsole::initialize();
  22:src/Riscv.cpp **** }
  23:src/Riscv.cpp **** 
  24:src/Riscv.cpp **** void Riscv::endSystem()
  25:src/Riscv.cpp **** {
  26:src/Riscv.cpp ****     //todo
  27:src/Riscv.cpp ****     Riscv::disableInterrupts();
  28:src/Riscv.cpp **** }
  29:src/Riscv.cpp **** 
  30:src/Riscv.cpp **** 
  31:src/Riscv.cpp **** void Riscv::enableInterrupts() {
  32:src/Riscv.cpp ****     ms_sstatus(Riscv::SSTATUS_SIE);
  33:src/Riscv.cpp **** }
  34:src/Riscv.cpp **** 
  35:src/Riscv.cpp **** void Riscv::disableInterrupts()
  36:src/Riscv.cpp **** {
  37:src/Riscv.cpp ****     mc_sstatus(Riscv::SSTATUS_SIE);
  38:src/Riscv.cpp **** }
  39:src/Riscv.cpp **** 
  40:src/Riscv.cpp **** void Riscv::popSppSpie()
  41:src/Riscv.cpp **** {
  42:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
  43:src/Riscv.cpp ****     __asm__ volatile ("sret");
  44:src/Riscv.cpp **** }
  45:src/Riscv.cpp **** 
  46:src/Riscv.cpp **** void Riscv::printString(const char *string)
  47:src/Riscv.cpp **** {
GAS LISTING /tmp/ccbLgW2Y.s 			page 2


  48:src/Riscv.cpp ****     uint64 sstatus = r_sstatus();
  49:src/Riscv.cpp ****     mc_sstatus(SSTATUS_SIE);
  50:src/Riscv.cpp ****     while (*string != '\0')
  51:src/Riscv.cpp ****     {
  52:src/Riscv.cpp ****         __putc(*string);
  53:src/Riscv.cpp ****         string++;
  54:src/Riscv.cpp ****     }
  55:src/Riscv.cpp ****     ms_sstatus(sstatus & SSTATUS_SIE ? SSTATUS_SIE : 0);
  56:src/Riscv.cpp **** }
  57:src/Riscv.cpp **** 
  58:src/Riscv.cpp **** void Riscv::printInteger(uint64 num)
  59:src/Riscv.cpp **** {
  60:src/Riscv.cpp ****     uint64 sstatus = r_sstatus();
  61:src/Riscv.cpp ****     mc_sstatus(SSTATUS_SIE);
  62:src/Riscv.cpp ****     static char digits[] = "0123456789";
  63:src/Riscv.cpp ****     char buf[16];
  64:src/Riscv.cpp ****     int i, neg;
  65:src/Riscv.cpp ****     uint x;
  66:src/Riscv.cpp **** 
  67:src/Riscv.cpp ****     neg = 0;
  68:src/Riscv.cpp ****     if(num < 0)
  69:src/Riscv.cpp ****     {
  70:src/Riscv.cpp ****         neg = 1;
  71:src/Riscv.cpp ****         x = -num;
  72:src/Riscv.cpp ****     }
  73:src/Riscv.cpp ****     else
  74:src/Riscv.cpp ****         x = num;
  75:src/Riscv.cpp **** 
  76:src/Riscv.cpp ****     i = 0;
  77:src/Riscv.cpp ****     do
  78:src/Riscv.cpp ****     {
  79:src/Riscv.cpp ****         buf[i++] = digits[x%10];
  80:src/Riscv.cpp ****     }while((x/=10) != 0);
  81:src/Riscv.cpp ****     if(neg)
  82:src/Riscv.cpp ****         buf[i++] = '-';
  83:src/Riscv.cpp **** 
  84:src/Riscv.cpp ****     while(--i >= 0)
  85:src/Riscv.cpp ****         __putc(buf[i]);
  86:src/Riscv.cpp **** 
  87:src/Riscv.cpp ****     __putc('\n');
  88:src/Riscv.cpp **** 
  89:src/Riscv.cpp ****     ms_sstatus(sstatus & SSTATUS_SIE ? SSTATUS_SIE : 0);
  90:src/Riscv.cpp **** }
  91:src/Riscv.cpp **** 
  92:src/Riscv.cpp **** void Riscv::handleSupervisorTrap()
  93:src/Riscv.cpp **** {
  94:src/Riscv.cpp ****     __asm__ volatile("mv %0, a4" : "=r"(PCB::savedRegA4));
  95:src/Riscv.cpp **** 
  96:src/Riscv.cpp ****     uint64 scause = Riscv::r_scause();
  97:src/Riscv.cpp **** 
  98:src/Riscv.cpp ****     switch(scause)
  99:src/Riscv.cpp ****     {
 100:src/Riscv.cpp ****         case timerInterrupt:
 101:src/Riscv.cpp ****         {
 102:src/Riscv.cpp ****             uint64 volatile sepc = Riscv::r_sepc();
 103:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 104:src/Riscv.cpp ****             mc_sip(Riscv::SIP_SSIP);
GAS LISTING /tmp/ccbLgW2Y.s 			page 3


 105:src/Riscv.cpp ****             //Riscv::printString("timerInterrupt\n");
 106:src/Riscv.cpp ****             //static uint64 total = 0;
 107:src/Riscv.cpp ****             totalTime++;
 108:src/Riscv.cpp ****             Riscv::printInteger(totalTime);
 109:src/Riscv.cpp **** 
 110:src/Riscv.cpp ****             PCB::timeSliceCounter++;
 111:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
 112:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
 113:src/Riscv.cpp ****             {
 114:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 115:src/Riscv.cpp ****                 PCB::dispatch();
 116:src/Riscv.cpp ****             }
 117:src/Riscv.cpp **** 
 118:src/Riscv.cpp ****             Riscv::w_sstatus(sstatus);
 119:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 120:src/Riscv.cpp **** 
 121:src/Riscv.cpp ****             break;
 122:src/Riscv.cpp ****         }
 123:src/Riscv.cpp ****         case hwInterrupt: // todo
 124:src/Riscv.cpp ****         {
 125:src/Riscv.cpp ****             uint64 x = CONSOLE_STATUS;
 126:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0"::"r"(x));
 127:src/Riscv.cpp ****             __asm__ volatile("lb a1, 0(a0)");
 128:src/Riscv.cpp ****             uint64 operation;
 129:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" :  "=r"(operation));
 130:src/Riscv.cpp ****             if(operation & KConsole::STATUS_READ_MASK)
 131:src/Riscv.cpp ****             {
 132:src/Riscv.cpp ****                 x = CONSOLE_TX_DATA;
 133:src/Riscv.cpp ****                 __asm__ volatile("mv a0, %0"::"r"(x));
 134:src/Riscv.cpp ****                 __asm__ volatile("lb a1,0(a0)");
 135:src/Riscv.cpp ****                 char c;
 136:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" :  "=r"(c));
 137:src/Riscv.cpp ****                 //putCharacterOutput(c);
 138:src/Riscv.cpp **** 
 139:src/Riscv.cpp ****                 if(KConsole::pendingGetc > 0)
 140:src/Riscv.cpp ****                 {
 141:src/Riscv.cpp ****                     KConsole::pendingGetc--;
 142:src/Riscv.cpp ****                     KConsole::putCharacterInput(c);
 143:src/Riscv.cpp ****                     KConsole::putCharacterOutput(c);
 144:src/Riscv.cpp ****                 }
 145:src/Riscv.cpp ****             }
 146:src/Riscv.cpp **** 
 147:src/Riscv.cpp ****             plic_complete(plic_claim());
 148:src/Riscv.cpp **** 
 149:src/Riscv.cpp ****             break;
 150:src/Riscv.cpp ****         }
 151:src/Riscv.cpp ****         case operationInterrupt: // todo
 152:src/Riscv.cpp ****         {
 153:src/Riscv.cpp ****             break;
 154:src/Riscv.cpp ****         }
 155:src/Riscv.cpp ****         case addrReadInterrupt: // todo
 156:src/Riscv.cpp ****         {
 157:src/Riscv.cpp ****             break;
 158:src/Riscv.cpp ****         }
 159:src/Riscv.cpp ****         case addrWriteInterrupt: // todo
 160:src/Riscv.cpp ****         {
 161:src/Riscv.cpp ****             break;
GAS LISTING /tmp/ccbLgW2Y.s 			page 4


 162:src/Riscv.cpp ****         }
 163:src/Riscv.cpp ****         case ecallSystemInterupt:
 164:src/Riscv.cpp ****         case ecallUserInterrupt:
 165:src/Riscv.cpp ****         {
 166:src/Riscv.cpp ****             uint64 operation;
 167:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
 168:src/Riscv.cpp **** 
 169:src/Riscv.cpp ****             uint64 volatile sepc = Riscv::r_sepc() + 4;
 170:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 171:src/Riscv.cpp **** 
 172:src/Riscv.cpp ****             switch(operation)
 173:src/Riscv.cpp ****             {
 174:src/Riscv.cpp ****                 case MemoryAllocator::MEM_ALLOC:
 175:src/Riscv.cpp ****                     MemoryAllocator::memAllocHandler();
 176:src/Riscv.cpp ****                     break;
 177:src/Riscv.cpp ****                 case MemoryAllocator::MEM_FREE:
 178:src/Riscv.cpp ****                     MemoryAllocator::memFreeHandler();
 179:src/Riscv.cpp ****                     break;
 180:src/Riscv.cpp ****                 case PCB::THREAD_MAKE_PCB:
 181:src/Riscv.cpp ****                     PCB::threadMakePCBHandler();
 182:src/Riscv.cpp ****                     break;
 183:src/Riscv.cpp ****                 case PCB::THREAD_CREATE:
 184:src/Riscv.cpp ****                     PCB::threadCreateHandler();
 185:src/Riscv.cpp ****                     break;
 186:src/Riscv.cpp ****                 case PCB::THREAD_START:
 187:src/Riscv.cpp ****                     PCB::threadStartHandler();
 188:src/Riscv.cpp ****                     break;
 189:src/Riscv.cpp ****                 case PCB::THREAD_DISPATCH:
 190:src/Riscv.cpp ****                     PCB::threadDispatchHandler();
 191:src/Riscv.cpp ****                     break;
 192:src/Riscv.cpp ****                 case PCB::THREAD_EXIT:
 193:src/Riscv.cpp ****                     PCB::threadExitHandler();
 194:src/Riscv.cpp ****                     break;
 195:src/Riscv.cpp ****                 case PCB::TIME_SLEEP:
 196:src/Riscv.cpp ****                     PCB::threadSleepHandler();
 197:src/Riscv.cpp ****                     break;
 198:src/Riscv.cpp ****                 case KSemaphore::SEM_OPEN:
 199:src/Riscv.cpp ****                     KSemaphore::semOpenHandler();
 200:src/Riscv.cpp ****                     break;
 201:src/Riscv.cpp ****                 case KSemaphore::SEM_WAIT:
 202:src/Riscv.cpp ****                     KSemaphore::semWaitHandler();
 203:src/Riscv.cpp ****                     break;
 204:src/Riscv.cpp ****                 case KSemaphore::SEM_SIGNAL:
 205:src/Riscv.cpp ****                     KSemaphore::semSignalHandler();
 206:src/Riscv.cpp ****                     break;
 207:src/Riscv.cpp ****                 case KSemaphore::SEM_CLOSE:
 208:src/Riscv.cpp ****                     KSemaphore::semCloseHandler();
 209:src/Riscv.cpp ****                     break;
 210:src/Riscv.cpp ****                 case KConsole::CONSOLE_GETC:
 211:src/Riscv.cpp ****                     KConsole::getcHandler();
 212:src/Riscv.cpp ****                     break;
 213:src/Riscv.cpp ****                 case KConsole::CONSOLE_PUTC:
 214:src/Riscv.cpp ****                     KConsole::putcHandler();
 215:src/Riscv.cpp ****                     break;
 216:src/Riscv.cpp ****             }
 217:src/Riscv.cpp **** 
 218:src/Riscv.cpp ****             Riscv::w_sstatus(sstatus);
GAS LISTING /tmp/ccbLgW2Y.s 			page 5


 219:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 220:src/Riscv.cpp **** 
 221:src/Riscv.cpp ****             break;
 222:src/Riscv.cpp ****         }
 223:src/Riscv.cpp ****     }
 224:src/Riscv.cpp **** }
 225:src/Riscv.cpp **** 
 226:src/Riscv.cpp **** void Riscv::kernelMain()
 227:src/Riscv.cpp **** {
 228:src/Riscv.cpp ****     initSystem();
 229:src/Riscv.cpp **** 
 230:src/Riscv.cpp ****     enableInterrupts();
 231:src/Riscv.cpp **** 
 232:src/Riscv.cpp ****     PCB* userPCB = new PCB(&Riscv::userMainWrapper, 0, kmalloc(DEFAULT_STACK_SIZE), DEFAULT_TIME_SL
 233:src/Riscv.cpp ****     //PCB* userPCB = new PCB(&Riscv::myTestsWrapper, 0, kmalloc(DEFAULT_STACK_SIZE), DEFAULT_TIME_S
 234:src/Riscv.cpp ****     userPCB->start();
 235:src/Riscv.cpp ****     while(!userPCB->isFinished())
 236:src/Riscv.cpp ****     {
 237:src/Riscv.cpp ****         thread_dispatch();
 238:src/Riscv.cpp ****     }
 239:src/Riscv.cpp **** 
 240:src/Riscv.cpp **** 
 241:src/Riscv.cpp ****     disableInterrupts();
 242:src/Riscv.cpp **** 
 243:src/Riscv.cpp ****     endSystem();
 244:src/Riscv.cpp **** 
 245:src/Riscv.cpp ****     Riscv::printString("End...");
 246:src/Riscv.cpp **** }
 247:src/Riscv.cpp **** 
 248:src/Riscv.cpp **** void Riscv::userMainWrapper(void* )
 249:src/Riscv.cpp **** {
  12              		.loc 1 249 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23341100 		sd	ra,8(sp)
  17 0008 23308100 		sd	s0,0(sp)
  18              		.cfi_offset 1, -8
  19              		.cfi_offset 8, -16
  20 000c 13040101 		addi	s0,sp,16
  21              		.cfi_def_cfa 8, 0
 250:src/Riscv.cpp ****     userMain();
  22              		.loc 1 250 5
  23              		.loc 1 250 13 is_stmt 0
  24 0010 97000000 		call	_Z8userMainv@plt
  24      E7800000 
  25              	.LVL0:
 251:src/Riscv.cpp **** }
  26              		.loc 1 251 1
  27 0018 83308100 		ld	ra,8(sp)
  28              		.cfi_restore 1
  29 001c 03340100 		ld	s0,0(sp)
  30              		.cfi_restore 8
  31              		.cfi_def_cfa 2, 16
  32 0020 13010101 		addi	sp,sp,16
  33              		.cfi_def_cfa_offset 0
  34 0024 67800000 		jr	ra
GAS LISTING /tmp/ccbLgW2Y.s 			page 6


  35              		.cfi_endproc
  36              	.LFE35:
  38              		.align	2
  39              		.globl	_ZN5Riscv10initSystemEv
  41              	_ZN5Riscv10initSystemEv:
  42              	.LFB26:
  18:src/Riscv.cpp ****     w_stvec((uint64)&Riscv::supervisorTrap);
  43              		.loc 1 18 1 is_stmt 1
  44              		.cfi_startproc
  45 0028 130101FF 		addi	sp,sp,-16
  46              		.cfi_def_cfa_offset 16
  47 002c 23341100 		sd	ra,8(sp)
  48 0030 23308100 		sd	s0,0(sp)
  49              		.cfi_offset 1, -8
  50              		.cfi_offset 8, -16
  51 0034 13040101 		addi	s0,sp,16
  52              		.cfi_def_cfa 8, 0
  19:src/Riscv.cpp ****     PCB::initialize();
  53              		.loc 1 19 5
  19:src/Riscv.cpp ****     PCB::initialize();
  54              		.loc 1 19 12 is_stmt 0
  55 0038 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
  55      83B70700 
  56              	.LVL1:
  57              	.LBB49:
  58              	.LBB50:
  59              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 4/27/22.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_0_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_0_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** class Riscv
  11:src/../h/Riscv.hpp **** {
  12:src/../h/Riscv.hpp **** public:
  13:src/../h/Riscv.hpp ****     static void kernelMain();
  14:src/../h/Riscv.hpp **** 
  15:src/../h/Riscv.hpp ****     static void initSystem();
  16:src/../h/Riscv.hpp ****     static void endSystem();
  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp ****     static void userMainWrapper(void* p);
  19:src/../h/Riscv.hpp **** 
  20:src/../h/Riscv.hpp ****     static void enableInterrupts();
  21:src/../h/Riscv.hpp **** 
  22:src/../h/Riscv.hpp ****     static void disableTimerInterrupts();
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp ****     static void disableInterrupts();
  25:src/../h/Riscv.hpp **** 
  26:src/../h/Riscv.hpp ****     static void printString(char const *string);
  27:src/../h/Riscv.hpp **** 
  28:src/../h/Riscv.hpp ****     static void printInteger(uint64 num);
  29:src/../h/Riscv.hpp **** 
  30:src/../h/Riscv.hpp ****     static void idleRiscv(void* arg);
GAS LISTING /tmp/ccbLgW2Y.s 			page 7


  31:src/../h/Riscv.hpp **** 
  32:src/../h/Riscv.hpp ****     static void pushRegisters();
  33:src/../h/Riscv.hpp ****     static void popRegisters();
  34:src/../h/Riscv.hpp **** 
  35:src/../h/Riscv.hpp ****     static uint64 r_scause();
  36:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  37:src/../h/Riscv.hpp **** 
  38:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  39:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
  40:src/../h/Riscv.hpp **** 
  41:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  42:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  43:src/../h/Riscv.hpp **** 
  44:src/../h/Riscv.hpp ****     static uint64 r_stval();
  45:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  46:src/../h/Riscv.hpp **** 
  47:src/../h/Riscv.hpp ****     enum BitMaskSip
  48:src/../h/Riscv.hpp ****     {
  49:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  50:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  51:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9),
  52:src/../h/Riscv.hpp ****     };
  53:src/../h/Riscv.hpp **** 
  54:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  55:src/../h/Riscv.hpp **** 
  56:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  57:src/../h/Riscv.hpp **** 
  58:src/../h/Riscv.hpp ****     static uint64 r_sip();
  59:src/../h/Riscv.hpp **** 
  60:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  61:src/../h/Riscv.hpp **** 
  62:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  63:src/../h/Riscv.hpp ****     {
  64:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  65:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  66:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  67:src/../h/Riscv.hpp ****     };
  68:src/../h/Riscv.hpp **** 
  69:src/../h/Riscv.hpp ****     static void w_a0_sscratch();
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  72:src/../h/Riscv.hpp **** 
  73:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  74:src/../h/Riscv.hpp **** 
  75:src/../h/Riscv.hpp ****     static void mc_sie(uint64 mask);
  76:src/../h/Riscv.hpp **** 
  77:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  78:src/../h/Riscv.hpp **** 
  79:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  80:src/../h/Riscv.hpp **** 
  81:src/../h/Riscv.hpp ****     static uint64 r_sie();
  82:src/../h/Riscv.hpp ****     static void w_sie(uint64 sie);
  83:src/../h/Riscv.hpp ****     static void popSppSpie();
  84:src/../h/Riscv.hpp **** 
  85:src/../h/Riscv.hpp ****     static void supervisorTrap();
  86:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  87:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/ccbLgW2Y.s 			page 8


  88:src/../h/Riscv.hpp ****     static void myTestsWrapper(void* );
  89:src/../h/Riscv.hpp **** 
  90:src/../h/Riscv.hpp ****     static const uint64 bntOne = 1UL << 63;;
  91:src/../h/Riscv.hpp ****     static const uint64 bntZero = 0UL;
  92:src/../h/Riscv.hpp ****     static const uint64 timerInterrupt = bntOne + 1UL;
  93:src/../h/Riscv.hpp ****     static const uint64 hwInterrupt = bntOne + 9UL;
  94:src/../h/Riscv.hpp ****     static const uint64 operationInterrupt = bntZero + 2UL;
  95:src/../h/Riscv.hpp ****     static const uint64 addrReadInterrupt = bntZero + 5UL;
  96:src/../h/Riscv.hpp ****     static const uint64 addrWriteInterrupt = bntZero + 7UL;
  97:src/../h/Riscv.hpp ****     static const uint64 ecallUserInterrupt = bntZero + 8UL;
  98:src/../h/Riscv.hpp ****     static const uint64 ecallSystemInterupt = bntZero + 9UL;
  99:src/../h/Riscv.hpp **** 
 100:src/../h/Riscv.hpp ****     static uint64 totalTime;
 101:src/../h/Riscv.hpp **** };
 102:src/../h/Riscv.hpp **** 
 103:src/../h/Riscv.hpp **** inline void Riscv::mc_sie(uint64 mask)
 104:src/../h/Riscv.hpp **** {
 105:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sie, %0" : :"r"(mask));
 106:src/../h/Riscv.hpp **** }
 107:src/../h/Riscv.hpp **** 
 108:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause() {
 109:src/../h/Riscv.hpp ****     uint64 volatile scause;
 110:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
 111:src/../h/Riscv.hpp ****     return scause;
 112:src/../h/Riscv.hpp **** }
 113:src/../h/Riscv.hpp **** 
 114:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
 115:src/../h/Riscv.hpp ****     __asm__ volatile("csrw scause, %0" : :"r"(scause));
 116:src/../h/Riscv.hpp **** }
 117:src/../h/Riscv.hpp **** 
 118:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc() {
 119:src/../h/Riscv.hpp ****     uint64 volatile sepc;
 120:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 121:src/../h/Riscv.hpp ****     return sepc;
 122:src/../h/Riscv.hpp **** }
 123:src/../h/Riscv.hpp **** 
 124:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
 125:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sepc, %0" : :"r"(sepc));
 126:src/../h/Riscv.hpp **** }
 127:src/../h/Riscv.hpp **** 
 128:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec() {
 129:src/../h/Riscv.hpp ****     uint64 volatile stvec;
 130:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, stvec" : "=r"(stvec));
 131:src/../h/Riscv.hpp ****     return stvec;
 132:src/../h/Riscv.hpp **** }
 133:src/../h/Riscv.hpp **** 
 134:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 135:src/../h/Riscv.hpp ****     __asm__ volatile("csrw stvec, %0" : :"r"(stvec));
  60              		.loc 2 135 5 is_stmt 1
  61              		.loc 2 135 53 is_stmt 0
  62              	#APP
  63              	# 135 "src/../h/Riscv.hpp" 1
 136              	}
  64              		csrw stvec, a5
  65              	# 0 "" 2
  66              	.LVL2:
  67              	#NO_APP
GAS LISTING /tmp/ccbLgW2Y.s 			page 9


  68              	.LBE50:
  69              	.LBE49:
  20:src/Riscv.cpp ****     KConsole::initialize();
  70              		.loc 1 20 5 is_stmt 1
  20:src/Riscv.cpp ****     KConsole::initialize();
  71              		.loc 1 20 20 is_stmt 0
  72 0044 97000000 		call	_ZN3PCB10initializeEv@plt
  72      E7800000 
  73              	.LVL3:
  21:src/Riscv.cpp **** }
  74              		.loc 1 21 5 is_stmt 1
  21:src/Riscv.cpp **** }
  75              		.loc 1 21 25 is_stmt 0
  76 004c 97000000 		call	_ZN8KConsole10initializeEv@plt
  76      E7800000 
  77              	.LVL4:
  22:src/Riscv.cpp **** 
  78              		.loc 1 22 1
  79 0054 83308100 		ld	ra,8(sp)
  80              		.cfi_restore 1
  81 0058 03340100 		ld	s0,0(sp)
  82              		.cfi_restore 8
  83              		.cfi_def_cfa 2, 16
  84 005c 13010101 		addi	sp,sp,16
  85              		.cfi_def_cfa_offset 0
  86 0060 67800000 		jr	ra
  87              		.cfi_endproc
  88              	.LFE26:
  90              		.align	2
  91              		.globl	_ZN5Riscv16enableInterruptsEv
  93              	_ZN5Riscv16enableInterruptsEv:
  94              	.LFB28:
  31:src/Riscv.cpp ****     ms_sstatus(Riscv::SSTATUS_SIE);
  95              		.loc 1 31 32 is_stmt 1
  96              		.cfi_startproc
  97 0064 130101FF 		addi	sp,sp,-16
  98              		.cfi_def_cfa_offset 16
  99 0068 23348100 		sd	s0,8(sp)
 100              		.cfi_offset 8, -8
 101 006c 13040101 		addi	s0,sp,16
 102              		.cfi_def_cfa 8, 0
  32:src/Riscv.cpp **** }
 103              		.loc 1 32 5
 104              	.LVL5:
 105              	.LBB51:
 106              	.LBB52:
 137:src/../h/Riscv.hpp **** 
 138:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stval() {
 139:src/../h/Riscv.hpp ****     uint64 volatile stval;
 140:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, stval" : "=r"(stval));
 141:src/../h/Riscv.hpp ****     return stval;
 142:src/../h/Riscv.hpp **** }
 143:src/../h/Riscv.hpp **** 
 144:src/../h/Riscv.hpp **** inline void Riscv::w_sie(uint64 sie)
 145:src/../h/Riscv.hpp **** {
 146:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sie, %0" : :"r"(sie));
 147:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/ccbLgW2Y.s 			page 10


 148:src/../h/Riscv.hpp **** 
 149:src/../h/Riscv.hpp **** inline void Riscv::w_stval(uint64 stval) {
 150:src/../h/Riscv.hpp ****     __asm__ volatile("csrw stval, %0" : :"r"(stval));
 151:src/../h/Riscv.hpp **** }
 152:src/../h/Riscv.hpp **** 
 153:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 154:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sip, %0" : :"r"(mask));
 155:src/../h/Riscv.hpp **** }
 156:src/../h/Riscv.hpp **** 
 157:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 158:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sip, %0" : :"r"(mask));
 159:src/../h/Riscv.hpp **** }
 160:src/../h/Riscv.hpp **** 
 161:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sie()
 162:src/../h/Riscv.hpp **** {
 163:src/../h/Riscv.hpp ****     uint64 volatile sie;
 164:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sip" : "=r"(sie));
 165:src/../h/Riscv.hpp ****     return sie;
 166:src/../h/Riscv.hpp **** }
 167:src/../h/Riscv.hpp **** 
 168:src/../h/Riscv.hpp **** 
 169:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip() {
 170:src/../h/Riscv.hpp ****     uint64 volatile sip;
 171:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sip" : "=r"(sip));
 172:src/../h/Riscv.hpp ****     return sip;
 173:src/../h/Riscv.hpp **** }
 174:src/../h/Riscv.hpp **** 
 175:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 176:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sip, %0" : :"r"(sip));
 177:src/../h/Riscv.hpp **** }
 178:src/../h/Riscv.hpp **** 
 179:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 180:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sstatus, %0" : :"r"(mask));
 107              		.loc 2 180 5
 108              		.loc 2 180 54 is_stmt 0
 109 0070 93072000 		li	a5,2
 110              	#APP
 111              	# 180 "src/../h/Riscv.hpp" 1
 181              	}
 112              		csrs sstatus, a5
 113              	# 0 "" 2
 114              	.LVL6:
 115              	#NO_APP
 116              	.LBE52:
 117              	.LBE51:
  33:src/Riscv.cpp **** 
 118              		.loc 1 33 1
 119 0078 03348100 		ld	s0,8(sp)
 120              		.cfi_restore 8
 121              		.cfi_def_cfa 2, 16
 122 007c 13010101 		addi	sp,sp,16
 123              		.cfi_def_cfa_offset 0
 124 0080 67800000 		jr	ra
 125              		.cfi_endproc
 126              	.LFE28:
 128              		.align	2
 129              		.globl	_ZN5Riscv17disableInterruptsEv
GAS LISTING /tmp/ccbLgW2Y.s 			page 11


 131              	_ZN5Riscv17disableInterruptsEv:
 132              	.LFB29:
  36:src/Riscv.cpp ****     mc_sstatus(Riscv::SSTATUS_SIE);
 133              		.loc 1 36 1 is_stmt 1
 134              		.cfi_startproc
 135 0084 130101FF 		addi	sp,sp,-16
 136              		.cfi_def_cfa_offset 16
 137 0088 23348100 		sd	s0,8(sp)
 138              		.cfi_offset 8, -8
 139 008c 13040101 		addi	s0,sp,16
 140              		.cfi_def_cfa 8, 0
  37:src/Riscv.cpp **** }
 141              		.loc 1 37 5
 142              	.LVL7:
 143              	.LBB53:
 144              	.LBB54:
 182:src/../h/Riscv.hpp **** 
 183:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 184:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sstatus, %0" : :"r"(mask));
 145              		.loc 2 184 5
 146              		.loc 2 184 54 is_stmt 0
 147 0090 93072000 		li	a5,2
 148              	#APP
 149              	# 184 "src/../h/Riscv.hpp" 1
 185              	}
 150              		csrc sstatus, a5
 151              	# 0 "" 2
 152              	.LVL8:
 153              	#NO_APP
 154              	.LBE54:
 155              	.LBE53:
  38:src/Riscv.cpp **** 
 156              		.loc 1 38 1
 157 0098 03348100 		ld	s0,8(sp)
 158              		.cfi_restore 8
 159              		.cfi_def_cfa 2, 16
 160 009c 13010101 		addi	sp,sp,16
 161              		.cfi_def_cfa_offset 0
 162 00a0 67800000 		jr	ra
 163              		.cfi_endproc
 164              	.LFE29:
 166              		.align	2
 167              		.globl	_ZN5Riscv9endSystemEv
 169              	_ZN5Riscv9endSystemEv:
 170              	.LFB27:
  25:src/Riscv.cpp ****     //todo
 171              		.loc 1 25 1 is_stmt 1
 172              		.cfi_startproc
 173 00a4 130101FF 		addi	sp,sp,-16
 174              		.cfi_def_cfa_offset 16
 175 00a8 23341100 		sd	ra,8(sp)
 176 00ac 23308100 		sd	s0,0(sp)
 177              		.cfi_offset 1, -8
 178              		.cfi_offset 8, -16
 179 00b0 13040101 		addi	s0,sp,16
 180              		.cfi_def_cfa 8, 0
  27:src/Riscv.cpp **** }
GAS LISTING /tmp/ccbLgW2Y.s 			page 12


 181              		.loc 1 27 5
  27:src/Riscv.cpp **** }
 182              		.loc 1 27 29 is_stmt 0
 183 00b4 97000000 		call	_ZN5Riscv17disableInterruptsEv
 183      E7800000 
 184              	.LVL9:
  28:src/Riscv.cpp **** 
 185              		.loc 1 28 1
 186 00bc 83308100 		ld	ra,8(sp)
 187              		.cfi_restore 1
 188 00c0 03340100 		ld	s0,0(sp)
 189              		.cfi_restore 8
 190              		.cfi_def_cfa 2, 16
 191 00c4 13010101 		addi	sp,sp,16
 192              		.cfi_def_cfa_offset 0
 193 00c8 67800000 		jr	ra
 194              		.cfi_endproc
 195              	.LFE27:
 197              		.align	2
 198              		.globl	_ZN5Riscv10popSppSpieEv
 200              	_ZN5Riscv10popSppSpieEv:
 201              	.LFB30:
  41:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
 202              		.loc 1 41 1 is_stmt 1
 203              		.cfi_startproc
 204 00cc 130101FF 		addi	sp,sp,-16
 205              		.cfi_def_cfa_offset 16
 206 00d0 23348100 		sd	s0,8(sp)
 207              		.cfi_offset 8, -8
 208 00d4 13040101 		addi	s0,sp,16
 209              		.cfi_def_cfa 8, 0
  42:src/Riscv.cpp ****     __asm__ volatile ("sret");
 210              		.loc 1 42 5
  42:src/Riscv.cpp ****     __asm__ volatile ("sret");
 211              		.loc 1 42 39 is_stmt 0
 212              	#APP
 213              	# 42 "src/Riscv.cpp" 1
  43:src/Riscv.cpp **** }
 214              		csrw sepc, ra
 215              	# 0 "" 2
 216              		.loc 1 43 5 is_stmt 1
  43:src/Riscv.cpp **** }
 217              		.loc 1 43 30 is_stmt 0
 218              	# 43 "src/Riscv.cpp" 1
  44:src/Riscv.cpp **** 
 219              		sret
 220              	# 0 "" 2
 221              		.loc 1 44 1
 222              	#NO_APP
 223 00e0 03348100 		ld	s0,8(sp)
 224              		.cfi_restore 8
 225              		.cfi_def_cfa 2, 16
 226 00e4 13010101 		addi	sp,sp,16
 227              		.cfi_def_cfa_offset 0
 228 00e8 67800000 		jr	ra
 229              		.cfi_endproc
 230              	.LFE30:
GAS LISTING /tmp/ccbLgW2Y.s 			page 13


 232              		.align	2
 233              		.globl	_ZN5Riscv11printStringEPKc
 235              	_ZN5Riscv11printStringEPKc:
 236              	.LFB31:
  47:src/Riscv.cpp ****     uint64 sstatus = r_sstatus();
 237              		.loc 1 47 1 is_stmt 1
 238              		.cfi_startproc
 239              	.LVL10:
 240 00ec 130101FD 		addi	sp,sp,-48
 241              		.cfi_def_cfa_offset 48
 242 00f0 23341102 		sd	ra,40(sp)
 243 00f4 23308102 		sd	s0,32(sp)
 244 00f8 233C9100 		sd	s1,24(sp)
 245 00fc 23382101 		sd	s2,16(sp)
 246              		.cfi_offset 1, -8
 247              		.cfi_offset 8, -16
 248              		.cfi_offset 9, -24
 249              		.cfi_offset 18, -32
 250 0100 13040103 		addi	s0,sp,48
 251              		.cfi_def_cfa 8, 0
 252 0104 93040500 		mv	s1,a0
  48:src/Riscv.cpp ****     mc_sstatus(SSTATUS_SIE);
 253              		.loc 1 48 5
 254              	.LBB55:
 255              	.LBB56:
 186:src/../h/Riscv.hpp **** 
 187:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sstatus() {
 188:src/../h/Riscv.hpp ****     uint64 volatile sstatus;
 256              		.loc 2 188 5
 189:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 257              		.loc 2 189 5
 258              		.loc 2 189 57 is_stmt 0
 259              	#APP
 260              	# 189 "src/../h/Riscv.hpp" 1
 190              	    return sstatus;
 261              		csrr a5, sstatus
 262              	# 0 "" 2
 263              	#NO_APP
 264 010c 233CF4FC 		sd	a5,-40(s0)
 265              		.loc 2 190 5 is_stmt 1
 266              		.loc 2 190 12 is_stmt 0
 267 0110 033984FD 		ld	s2,-40(s0)
 268              	.LVL11:
 269              	.LBE56:
 270              	.LBE55:
  49:src/Riscv.cpp ****     while (*string != '\0')
 271              		.loc 1 49 5 is_stmt 1
 272              	.LBB57:
 273              	.LBB58:
 184:src/../h/Riscv.hpp **** }
 274              		.loc 2 184 5
 184:src/../h/Riscv.hpp **** }
 275              		.loc 2 184 54 is_stmt 0
 276 0114 93072000 		li	a5,2
 277              	#APP
 278              	# 184 "src/../h/Riscv.hpp" 1
 279              		csrc sstatus, a5
GAS LISTING /tmp/ccbLgW2Y.s 			page 14


 280              	# 0 "" 2
 281              	.LVL12:
 282              	#NO_APP
 283              	.L15:
 284              	.LBE58:
 285              	.LBE57:
  50:src/Riscv.cpp ****     {
 286              		.loc 1 50 5 is_stmt 1
  50:src/Riscv.cpp ****     {
 287              		.loc 1 50 20
  50:src/Riscv.cpp ****     {
 288              		.loc 1 50 12 is_stmt 0
 289 011c 03C50400 		lbu	a0,0(s1)
  50:src/Riscv.cpp ****     {
 290              		.loc 1 50 20
 291 0120 630A0500 		beqz	a0,.L14
  52:src/Riscv.cpp ****         string++;
 292              		.loc 1 52 9 is_stmt 1
  52:src/Riscv.cpp ****         string++;
 293              		.loc 1 52 15 is_stmt 0
 294 0124 97000000 		call	__putc@plt
 294      E7800000 
 295              	.LVL13:
  53:src/Riscv.cpp ****     }
 296              		.loc 1 53 9 is_stmt 1
  53:src/Riscv.cpp ****     }
 297              		.loc 1 53 15 is_stmt 0
 298 012c 93841400 		addi	s1,s1,1
 299              	.LVL14:
  50:src/Riscv.cpp ****     {
 300              		.loc 1 50 5
 301 0130 6FF0DFFE 		j	.L15
 302              	.L14:
  55:src/Riscv.cpp **** }
 303              		.loc 1 55 5 is_stmt 1
  55:src/Riscv.cpp **** }
 304              		.loc 1 55 38 is_stmt 0
 305 0134 1B090900 		sext.w	s2,s2
 306              	.LVL15:
  55:src/Riscv.cpp **** }
 307              		.loc 1 55 15
 308 0138 13792900 		andi	s2,s2,2
 309 013c 1B090900 		sext.w	s2,s2
 310              	.LVL16:
 311              	.LBB59:
 312              	.LBB60:
 180:src/../h/Riscv.hpp **** }
 313              		.loc 2 180 5 is_stmt 1
 180:src/../h/Riscv.hpp **** }
 314              		.loc 2 180 54 is_stmt 0
 315              	#APP
 316              	# 180 "src/../h/Riscv.hpp" 1
 317              		csrs sstatus, s2
 318              	# 0 "" 2
 319              	.LVL17:
 320              	#NO_APP
 321              	.LBE60:
GAS LISTING /tmp/ccbLgW2Y.s 			page 15


 322              	.LBE59:
  56:src/Riscv.cpp **** 
 323              		.loc 1 56 1
 324 0144 83308102 		ld	ra,40(sp)
 325              		.cfi_restore 1
 326 0148 03340102 		ld	s0,32(sp)
 327              		.cfi_restore 8
 328              		.cfi_def_cfa 2, 48
 329 014c 83348101 		ld	s1,24(sp)
 330              		.cfi_restore 9
 331              	.LVL18:
 332 0150 03390101 		ld	s2,16(sp)
 333              		.cfi_restore 18
 334 0154 13010103 		addi	sp,sp,48
 335              		.cfi_def_cfa_offset 0
 336 0158 67800000 		jr	ra
 337              		.cfi_endproc
 338              	.LFE31:
 340              		.align	2
 341              		.globl	_ZN5Riscv12printIntegerEm
 343              	_ZN5Riscv12printIntegerEm:
 344              	.LFB32:
  59:src/Riscv.cpp ****     uint64 sstatus = r_sstatus();
 345              		.loc 1 59 1 is_stmt 1
 346              		.cfi_startproc
 347              	.LVL19:
 348 015c 130101FC 		addi	sp,sp,-64
 349              		.cfi_def_cfa_offset 64
 350 0160 233C1102 		sd	ra,56(sp)
 351 0164 23388102 		sd	s0,48(sp)
 352 0168 23349102 		sd	s1,40(sp)
 353 016c 23302103 		sd	s2,32(sp)
 354              		.cfi_offset 1, -8
 355              		.cfi_offset 8, -16
 356              		.cfi_offset 9, -24
 357              		.cfi_offset 18, -32
 358 0170 13040104 		addi	s0,sp,64
 359              		.cfi_def_cfa 8, 0
  60:src/Riscv.cpp ****     mc_sstatus(SSTATUS_SIE);
 360              		.loc 1 60 5
 361              	.LBB61:
 362              	.LBB62:
 188:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 363              		.loc 2 188 5
 189:src/../h/Riscv.hpp ****     return sstatus;
 364              		.loc 2 189 5
 189:src/../h/Riscv.hpp ****     return sstatus;
 365              		.loc 2 189 57 is_stmt 0
 366              	#APP
 367              	# 189 "src/../h/Riscv.hpp" 1
 368              		csrr a5, sstatus
 369              	# 0 "" 2
 370              	#NO_APP
 371 0178 2334F4FC 		sd	a5,-56(s0)
 372              		.loc 2 190 5 is_stmt 1
 373              		.loc 2 190 12 is_stmt 0
 374 017c 033984FC 		ld	s2,-56(s0)
GAS LISTING /tmp/ccbLgW2Y.s 			page 16


 375              	.LVL20:
 376              	.LBE62:
 377              	.LBE61:
  61:src/Riscv.cpp ****     static char digits[] = "0123456789";
 378              		.loc 1 61 5 is_stmt 1
 379              	.LBB63:
 380              	.LBB64:
 184:src/../h/Riscv.hpp **** }
 381              		.loc 2 184 5
 184:src/../h/Riscv.hpp **** }
 382              		.loc 2 184 54 is_stmt 0
 383 0180 93072000 		li	a5,2
 384              	#APP
 385              	# 184 "src/../h/Riscv.hpp" 1
 386              		csrc sstatus, a5
 387              	# 0 "" 2
 388              	.LVL21:
 389              	#NO_APP
 390              	.LBE64:
 391              	.LBE63:
  62:src/Riscv.cpp ****     char buf[16];
 392              		.loc 1 62 5 is_stmt 1
  63:src/Riscv.cpp ****     int i, neg;
 393              		.loc 1 63 5
  64:src/Riscv.cpp ****     uint x;
 394              		.loc 1 64 5
  65:src/Riscv.cpp **** 
 395              		.loc 1 65 5
  67:src/Riscv.cpp ****     if(num < 0)
 396              		.loc 1 67 5
  68:src/Riscv.cpp ****     {
 397              		.loc 1 68 5
  74:src/Riscv.cpp **** 
 398              		.loc 1 74 9
  74:src/Riscv.cpp **** 
 399              		.loc 1 74 11 is_stmt 0
 400 0188 1B050500 		sext.w	a0,a0
 401              	.LVL22:
  76:src/Riscv.cpp ****     do
 402              		.loc 1 76 5 is_stmt 1
  76:src/Riscv.cpp ****     do
 403              		.loc 1 76 7 is_stmt 0
 404 018c 93040000 		li	s1,0
 405              	.LVL23:
 406              	.L18:
  77:src/Riscv.cpp ****     {
 407              		.loc 1 77 5 is_stmt 1
  79:src/Riscv.cpp ****     }while((x/=10) != 0);
 408              		.loc 1 79 9
  79:src/Riscv.cpp ****     }while((x/=10) != 0);
 409              		.loc 1 79 28 is_stmt 0
 410 0190 1306A000 		li	a2,10
 411 0194 3B77C502 		remuw	a4,a0,a2
 412              	.LVL24:
  79:src/Riscv.cpp ****     }while((x/=10) != 0);
 413              		.loc 1 79 31
 414 0198 93160702 		slli	a3,a4,32
GAS LISTING /tmp/ccbLgW2Y.s 			page 17


 415 019c 93D60602 		srli	a3,a3,32
 416 01a0 17070000 		lla	a4,.LANCHOR0
 416      13070700 
 417 01a8 3307D700 		add	a4,a4,a3
 418 01ac 03470700 		lbu	a4,0(a4)
  79:src/Riscv.cpp ****     }while((x/=10) != 0);
 419              		.loc 1 79 18
 420 01b0 930604FE 		addi	a3,s0,-32
 421 01b4 B3879600 		add	a5,a3,s1
 422 01b8 9B841400 		addiw	s1,s1,1
 423              	.LVL25:
 424 01bc 2388E7FE 		sb	a4,-16(a5)
  80:src/Riscv.cpp ****     if(neg)
 425              		.loc 1 80 20 is_stmt 1
 426 01c0 1B070500 		sext.w	a4,a0
  80:src/Riscv.cpp ****     if(neg)
 427              		.loc 1 80 14 is_stmt 0
 428 01c4 3B55C502 		divuw	a0,a0,a2
 429              	.LVL26:
  80:src/Riscv.cpp ****     if(neg)
 430              		.loc 1 80 20
 431 01c8 93079000 		li	a5,9
 432 01cc E3E2E7FC 		bgtu	a4,a5,.L18
 433              	.LVL27:
 434              	.L20:
  84:src/Riscv.cpp ****         __putc(buf[i]);
 435              		.loc 1 84 5 is_stmt 1
  84:src/Riscv.cpp ****         __putc(buf[i]);
 436              		.loc 1 84 15
 437 01d0 9B84F4FF 		addiw	s1,s1,-1
 438              	.LVL28:
 439 01d4 63CE0400 		bltz	s1,.L19
  85:src/Riscv.cpp **** 
 440              		.loc 1 85 9
  85:src/Riscv.cpp **** 
 441              		.loc 1 85 15 is_stmt 0
 442 01d8 930704FE 		addi	a5,s0,-32
 443 01dc B3879700 		add	a5,a5,s1
 444 01e0 03C507FF 		lbu	a0,-16(a5)
 445 01e4 97000000 		call	__putc@plt
 445      E7800000 
 446              	.LVL29:
 447 01ec 6FF05FFE 		j	.L20
 448              	.L19:
  87:src/Riscv.cpp **** 
 449              		.loc 1 87 5 is_stmt 1
  87:src/Riscv.cpp **** 
 450              		.loc 1 87 11 is_stmt 0
 451 01f0 1305A000 		li	a0,10
 452 01f4 97000000 		call	__putc@plt
 452      E7800000 
 453              	.LVL30:
  89:src/Riscv.cpp **** }
 454              		.loc 1 89 5 is_stmt 1
  89:src/Riscv.cpp **** }
 455              		.loc 1 89 38 is_stmt 0
 456 01fc 1B090900 		sext.w	s2,s2
GAS LISTING /tmp/ccbLgW2Y.s 			page 18


 457              	.LVL31:
  89:src/Riscv.cpp **** }
 458              		.loc 1 89 15
 459 0200 13792900 		andi	s2,s2,2
 460 0204 1B090900 		sext.w	s2,s2
 461              	.LVL32:
 462              	.LBB65:
 463              	.LBB66:
 180:src/../h/Riscv.hpp **** }
 464              		.loc 2 180 5 is_stmt 1
 180:src/../h/Riscv.hpp **** }
 465              		.loc 2 180 54 is_stmt 0
 466              	#APP
 467              	# 180 "src/../h/Riscv.hpp" 1
 468              		csrs sstatus, s2
 469              	# 0 "" 2
 470              	.LVL33:
 471              	#NO_APP
 472              	.LBE66:
 473              	.LBE65:
  90:src/Riscv.cpp **** 
 474              		.loc 1 90 1
 475 020c 83308103 		ld	ra,56(sp)
 476              		.cfi_restore 1
 477 0210 03340103 		ld	s0,48(sp)
 478              		.cfi_restore 8
 479              		.cfi_def_cfa 2, 64
 480 0214 83348102 		ld	s1,40(sp)
 481              		.cfi_restore 9
 482 0218 03390102 		ld	s2,32(sp)
 483              		.cfi_restore 18
 484 021c 13010104 		addi	sp,sp,64
 485              		.cfi_def_cfa_offset 0
 486 0220 67800000 		jr	ra
 487              		.cfi_endproc
 488              	.LFE32:
 490              		.align	2
 491              		.globl	_ZN5Riscv20handleSupervisorTrapEv
 493              	_ZN5Riscv20handleSupervisorTrapEv:
 494              	.LFB33:
  93:src/Riscv.cpp ****     __asm__ volatile("mv %0, a4" : "=r"(PCB::savedRegA4));
 495              		.loc 1 93 1 is_stmt 1
 496              		.cfi_startproc
 497 0224 130101F9 		addi	sp,sp,-112
 498              		.cfi_def_cfa_offset 112
 499 0228 23341106 		sd	ra,104(sp)
 500 022c 23308106 		sd	s0,96(sp)
 501 0230 233C9104 		sd	s1,88(sp)
 502              		.cfi_offset 1, -8
 503              		.cfi_offset 8, -16
 504              		.cfi_offset 9, -24
 505 0234 13040107 		addi	s0,sp,112
 506              		.cfi_def_cfa 8, 0
  94:src/Riscv.cpp **** 
 507              		.loc 1 94 5
  94:src/Riscv.cpp **** 
 508              		.loc 1 94 58 is_stmt 0
GAS LISTING /tmp/ccbLgW2Y.s 			page 19


 509              	#APP
 510              	# 94 "src/Riscv.cpp" 1
 511              		mv a4, a4
 512              	# 0 "" 2
 513              	#NO_APP
 514 023c 97070000 		la	a5,_ZN3PCB10savedRegA4E
 514      83B70700 
 515 0244 23B0E700 		sd	a4,0(a5)
  96:src/Riscv.cpp **** 
 516              		.loc 1 96 5 is_stmt 1
 517              	.LBB67:
 518              	.LBB68:
 109:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
 519              		.loc 2 109 5
 110:src/../h/Riscv.hpp ****     return scause;
 520              		.loc 2 110 5
 110:src/../h/Riscv.hpp ****     return scause;
 521              		.loc 2 110 55 is_stmt 0
 522              	#APP
 523              	# 110 "src/../h/Riscv.hpp" 1
 524              		csrr a5, scause
 525              	# 0 "" 2
 526              	#NO_APP
 527 024c 233CF4FA 		sd	a5,-72(s0)
 111:src/../h/Riscv.hpp **** }
 528              		.loc 2 111 5 is_stmt 1
 111:src/../h/Riscv.hpp **** }
 529              		.loc 2 111 12 is_stmt 0
 530 0250 833784FB 		ld	a5,-72(s0)
 531              	.LVL34:
 532              	.LBE68:
 533              	.LBE67:
  98:src/Riscv.cpp ****     {
 534              		.loc 1 98 5 is_stmt 1
 535              	.LBB69:
 536 0254 1307F0FF 		li	a4,-1
 537 0258 1317F703 		slli	a4,a4,63
 538 025c 13071700 		addi	a4,a4,1
 539 0260 638EE70C 		beq	a5,a4,.L23
 540 0264 1307F0FF 		li	a4,-1
 541 0268 1317F703 		slli	a4,a4,63
 542 026c 13071700 		addi	a4,a4,1
 543 0270 636EF704 		bgtu	a5,a4,.L24
 544 0274 938787FF 		addi	a5,a5,-8
 545              	.LVL35:
 546 0278 13071000 		li	a4,1
 547 027c 6360F71A 		bgtu	a5,a4,.L22
 548              	.LBE69:
 163:src/Riscv.cpp ****         case ecallUserInterrupt:
 549              		.loc 1 163 9
 164:src/Riscv.cpp ****         {
 550              		.loc 1 164 9
 165:src/Riscv.cpp ****             uint64 operation;
 551              		.loc 1 165 9
 552              	.LBB100:
 553              	.LBB70:
 166:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
GAS LISTING /tmp/ccbLgW2Y.s 			page 20


 554              		.loc 1 166 13
 167:src/Riscv.cpp **** 
 555              		.loc 1 167 13
 167:src/Riscv.cpp **** 
 556              		.loc 1 167 61 is_stmt 0
 557              	#APP
 558              	# 167 "src/Riscv.cpp" 1
 559              		mv a5, a0
 560              	# 0 "" 2
 561              	.LVL36:
 169:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 562              		.loc 1 169 13 is_stmt 1
 563              	#NO_APP
 564              	.LBB71:
 565              	.LBB72:
 119:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 566              		.loc 2 119 5
 120:src/../h/Riscv.hpp ****     return sepc;
 567              		.loc 2 120 5
 120:src/../h/Riscv.hpp ****     return sepc;
 568              		.loc 2 120 51 is_stmt 0
 569              	#APP
 570              	# 120 "src/../h/Riscv.hpp" 1
 571              		csrr a4, sepc
 572              	# 0 "" 2
 573              	#NO_APP
 574 0288 233CE4FC 		sd	a4,-40(s0)
 121:src/../h/Riscv.hpp **** }
 575              		.loc 2 121 5 is_stmt 1
 121:src/../h/Riscv.hpp **** }
 576              		.loc 2 121 12 is_stmt 0
 577 028c 033784FD 		ld	a4,-40(s0)
 578              	.LBE72:
 579              	.LBE71:
 169:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 580              		.loc 1 169 52
 581 0290 13074700 		addi	a4,a4,4
 169:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 582              		.loc 1 169 54
 583 0294 2334E4FA 		sd	a4,-88(s0)
 170:src/Riscv.cpp **** 
 584              		.loc 1 170 13 is_stmt 1
 585              	.LBB73:
 586              	.LBB74:
 188:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 587              		.loc 2 188 5
 189:src/../h/Riscv.hpp ****     return sstatus;
 588              		.loc 2 189 5
 189:src/../h/Riscv.hpp ****     return sstatus;
 589              		.loc 2 189 57 is_stmt 0
 590              	#APP
 591              	# 189 "src/../h/Riscv.hpp" 1
 592              		csrr a4, sstatus
 593              	# 0 "" 2
 594              	#NO_APP
 595 029c 2338E4FC 		sd	a4,-48(s0)
 596              		.loc 2 190 5 is_stmt 1
GAS LISTING /tmp/ccbLgW2Y.s 			page 21


 597              		.loc 2 190 12 is_stmt 0
 598 02a0 033704FD 		ld	a4,-48(s0)
 599              	.LBE74:
 600              	.LBE73:
 170:src/Riscv.cpp **** 
 601              		.loc 1 170 56
 602 02a4 2338E4FA 		sd	a4,-80(s0)
 172:src/Riscv.cpp ****             {
 603              		.loc 1 172 13 is_stmt 1
 604 02a8 13072004 		li	a4,66
 605 02ac 6360F716 		bgtu	a5,a4,.L30
 606 02b0 93972700 		slli	a5,a5,2
 607              	.LVL37:
 608 02b4 17070000 		lla	a4,.L32
 608      13070700 
 609 02bc B387E700 		add	a5,a5,a4
 610 02c0 83A70700 		lw	a5,0(a5)
 611 02c4 B387E700 		add	a5,a5,a4
 612 02c8 67800700 		jr	a5
 613              		.section	.rodata
 614              		.align	2
 615              		.align	2
 616              	.L32:
 617 0000 00000000 		.word	.L30-.L32
 618 0004 00000000 		.word	.L45-.L32
 619 0008 00000000 		.word	.L44-.L32
 620 000c 00000000 		.word	.L30-.L32
 621 0010 00000000 		.word	.L30-.L32
 622 0014 00000000 		.word	.L30-.L32
 623 0018 00000000 		.word	.L30-.L32
 624 001c 00000000 		.word	.L30-.L32
 625 0020 00000000 		.word	.L30-.L32
 626 0024 00000000 		.word	.L30-.L32
 627 0028 00000000 		.word	.L30-.L32
 628 002c 00000000 		.word	.L30-.L32
 629 0030 00000000 		.word	.L30-.L32
 630 0034 00000000 		.word	.L30-.L32
 631 0038 00000000 		.word	.L30-.L32
 632 003c 00000000 		.word	.L30-.L32
 633 0040 00000000 		.word	.L30-.L32
 634 0044 00000000 		.word	.L43-.L32
 635 0048 00000000 		.word	.L42-.L32
 636 004c 00000000 		.word	.L41-.L32
 637 0050 00000000 		.word	.L40-.L32
 638 0054 00000000 		.word	.L39-.L32
 639 0058 00000000 		.word	.L30-.L32
 640 005c 00000000 		.word	.L30-.L32
 641 0060 00000000 		.word	.L30-.L32
 642 0064 00000000 		.word	.L30-.L32
 643 0068 00000000 		.word	.L30-.L32
 644 006c 00000000 		.word	.L30-.L32
 645 0070 00000000 		.word	.L30-.L32
 646 0074 00000000 		.word	.L30-.L32
 647 0078 00000000 		.word	.L30-.L32
 648 007c 00000000 		.word	.L30-.L32
 649 0080 00000000 		.word	.L30-.L32
 650 0084 00000000 		.word	.L38-.L32
GAS LISTING /tmp/ccbLgW2Y.s 			page 22


 651 0088 00000000 		.word	.L37-.L32
 652 008c 00000000 		.word	.L36-.L32
 653 0090 00000000 		.word	.L35-.L32
 654 0094 00000000 		.word	.L30-.L32
 655 0098 00000000 		.word	.L30-.L32
 656 009c 00000000 		.word	.L30-.L32
 657 00a0 00000000 		.word	.L30-.L32
 658 00a4 00000000 		.word	.L30-.L32
 659 00a8 00000000 		.word	.L30-.L32
 660 00ac 00000000 		.word	.L30-.L32
 661 00b0 00000000 		.word	.L30-.L32
 662 00b4 00000000 		.word	.L30-.L32
 663 00b8 00000000 		.word	.L30-.L32
 664 00bc 00000000 		.word	.L30-.L32
 665 00c0 00000000 		.word	.L30-.L32
 666 00c4 00000000 		.word	.L34-.L32
 667 00c8 00000000 		.word	.L30-.L32
 668 00cc 00000000 		.word	.L30-.L32
 669 00d0 00000000 		.word	.L30-.L32
 670 00d4 00000000 		.word	.L30-.L32
 671 00d8 00000000 		.word	.L30-.L32
 672 00dc 00000000 		.word	.L30-.L32
 673 00e0 00000000 		.word	.L30-.L32
 674 00e4 00000000 		.word	.L30-.L32
 675 00e8 00000000 		.word	.L30-.L32
 676 00ec 00000000 		.word	.L30-.L32
 677 00f0 00000000 		.word	.L30-.L32
 678 00f4 00000000 		.word	.L30-.L32
 679 00f8 00000000 		.word	.L30-.L32
 680 00fc 00000000 		.word	.L30-.L32
 681 0100 00000000 		.word	.L30-.L32
 682 0104 00000000 		.word	.L33-.L32
 683 0108 00000000 		.word	.L31-.L32
 684              		.text
 685              	.LVL38:
 686              	.L24:
 687              	.LBE70:
  98:src/Riscv.cpp ****     {
 688              		.loc 1 98 5 is_stmt 0
 689 02cc 1307F0FF 		li	a4,-1
 690 02d0 1317F703 		slli	a4,a4,63
 691 02d4 13079700 		addi	a4,a4,9
 692 02d8 6392E714 		bne	a5,a4,.L22
 693              	.LBE100:
 123:src/Riscv.cpp ****         {
 694              		.loc 1 123 9 is_stmt 1
 124:src/Riscv.cpp ****             uint64 x = CONSOLE_STATUS;
 695              		.loc 1 124 9
 696              	.LBB101:
 697              	.LBB79:
 125:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0"::"r"(x));
 698              		.loc 1 125 13
 125:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0"::"r"(x));
 699              		.loc 1 125 20 is_stmt 0
 700 02dc 97070000 		la	a5,CONSOLE_STATUS
 700      83B70700 
 701              	.LVL39:
GAS LISTING /tmp/ccbLgW2Y.s 			page 23


 702 02e4 83B70700 		ld	a5,0(a5)
 703              	.LVL40:
 126:src/Riscv.cpp ****             __asm__ volatile("lb a1, 0(a0)");
 704              		.loc 1 126 13 is_stmt 1
 126:src/Riscv.cpp ****             __asm__ volatile("lb a1, 0(a0)");
 705              		.loc 1 126 50 is_stmt 0
 706              	#APP
 707              	# 126 "src/Riscv.cpp" 1
 127:src/Riscv.cpp ****             uint64 operation;
 708              		mv a0, a5
 709              	# 0 "" 2
 710              		.loc 1 127 13 is_stmt 1
 127:src/Riscv.cpp ****             uint64 operation;
 711              		.loc 1 127 45 is_stmt 0
 712              	# 127 "src/Riscv.cpp" 1
 128:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" :  "=r"(operation));
 713              		lb a1, 0(a0)
 714              	# 0 "" 2
 715              		.loc 1 128 13 is_stmt 1
 129:src/Riscv.cpp ****             if(operation & KConsole::STATUS_READ_MASK)
 716              		.loc 1 129 13
 129:src/Riscv.cpp ****             if(operation & KConsole::STATUS_READ_MASK)
 717              		.loc 1 129 61 is_stmt 0
 718              	# 129 "src/Riscv.cpp" 1
 719              		mv a5, a1
 720              	# 0 "" 2
 721              	.LVL41:
 130:src/Riscv.cpp ****             {
 722              		.loc 1 130 13 is_stmt 1
 723              	#NO_APP
 724              	.LBB80:
 130:src/Riscv.cpp ****             {
 725              		.loc 1 130 26 is_stmt 0
 726 02f4 93F71700 		andi	a5,a5,1
 727              	.LVL42:
 130:src/Riscv.cpp ****             {
 728              		.loc 1 130 13
 729 02f8 63880702 		beqz	a5,.L29
 730              	.LBB81:
 132:src/Riscv.cpp ****                 __asm__ volatile("mv a0, %0"::"r"(x));
 731              		.loc 1 132 17 is_stmt 1
 132:src/Riscv.cpp ****                 __asm__ volatile("mv a0, %0"::"r"(x));
 732              		.loc 1 132 19 is_stmt 0
 733 02fc 97070000 		la	a5,CONSOLE_TX_DATA
 733      83B70700 
 734 0304 83B70700 		ld	a5,0(a5)
 735              	.LVL43:
 133:src/Riscv.cpp ****                 __asm__ volatile("lb a1,0(a0)");
 736              		.loc 1 133 17 is_stmt 1
 133:src/Riscv.cpp ****                 __asm__ volatile("lb a1,0(a0)");
 737              		.loc 1 133 54 is_stmt 0
 738              	#APP
 739              	# 133 "src/Riscv.cpp" 1
 134:src/Riscv.cpp ****                 char c;
 740              		mv a0, a5
 741              	# 0 "" 2
 742              		.loc 1 134 17 is_stmt 1
GAS LISTING /tmp/ccbLgW2Y.s 			page 24


 134:src/Riscv.cpp ****                 char c;
 743              		.loc 1 134 48 is_stmt 0
 744              	# 134 "src/Riscv.cpp" 1
 135:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" :  "=r"(c));
 745              		lb a1,0(a0)
 746              	# 0 "" 2
 747              		.loc 1 135 17 is_stmt 1
 136:src/Riscv.cpp ****                 //putCharacterOutput(c);
 748              		.loc 1 136 17
 136:src/Riscv.cpp ****                 //putCharacterOutput(c);
 749              		.loc 1 136 57 is_stmt 0
 750              	# 136 "src/Riscv.cpp" 1
 751              		mv a0, a1
 752              	# 0 "" 2
 753              	#NO_APP
 754 0314 9374F50F 		andi	s1,a0,0xff
 755              	.LVL44:
 139:src/Riscv.cpp ****                 {
 756              		.loc 1 139 17 is_stmt 1
 139:src/Riscv.cpp ****                 {
 757              		.loc 1 139 42 is_stmt 0
 758 0318 97070000 		la	a5,_ZN8KConsole11pendingGetcE
 758      83B70700 
 759              	.LVL45:
 760 0320 83B70700 		ld	a5,0(a5)
 139:src/Riscv.cpp ****                 {
 761              		.loc 1 139 17
 762 0324 639A070A 		bnez	a5,.L48
 763              	.LVL46:
 764              	.L29:
 765              	.LBE81:
 766              	.LBE80:
 147:src/Riscv.cpp **** 
 767              		.loc 1 147 13 is_stmt 1
 147:src/Riscv.cpp **** 
 768              		.loc 1 147 26 is_stmt 0
 769 0328 97000000 		call	plic_claim@plt
 769      E7800000 
 770              	.LVL47:
 771 0330 97000000 		call	plic_complete@plt
 771      E7800000 
 772              	.LVL48:
 149:src/Riscv.cpp ****         }
 773              		.loc 1 149 13 is_stmt 1
 774 0338 6F00400E 		j	.L22
 775              	.LVL49:
 776              	.L23:
 777              	.LBE79:
 778              	.LBE101:
 100:src/Riscv.cpp ****         {
 779              		.loc 1 100 9
 101:src/Riscv.cpp ****             uint64 volatile sepc = Riscv::r_sepc();
 780              		.loc 1 101 9
 781              	.LBB102:
 782              	.LBB84:
 102:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 783              		.loc 1 102 13
GAS LISTING /tmp/ccbLgW2Y.s 			page 25


 784              	.LBB85:
 785              	.LBB86:
 119:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 786              		.loc 2 119 5
 120:src/../h/Riscv.hpp ****     return sepc;
 787              		.loc 2 120 5
 120:src/../h/Riscv.hpp ****     return sepc;
 788              		.loc 2 120 51 is_stmt 0
 789              	#APP
 790              	# 120 "src/../h/Riscv.hpp" 1
 791              		csrr a5, sepc
 792              	# 0 "" 2
 793              	.LVL50:
 794              	#NO_APP
 795 0340 2334F4FC 		sd	a5,-56(s0)
 121:src/../h/Riscv.hpp **** }
 796              		.loc 2 121 5 is_stmt 1
 121:src/../h/Riscv.hpp **** }
 797              		.loc 2 121 12 is_stmt 0
 798 0344 833784FC 		ld	a5,-56(s0)
 799              	.LBE86:
 800              	.LBE85:
 102:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 801              		.loc 1 102 50
 802 0348 233CF4F8 		sd	a5,-104(s0)
 103:src/Riscv.cpp ****             mc_sip(Riscv::SIP_SSIP);
 803              		.loc 1 103 13 is_stmt 1
 804              	.LBB87:
 805              	.LBB88:
 188:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 806              		.loc 2 188 5
 189:src/../h/Riscv.hpp ****     return sstatus;
 807              		.loc 2 189 5
 189:src/../h/Riscv.hpp ****     return sstatus;
 808              		.loc 2 189 57 is_stmt 0
 809              	#APP
 810              	# 189 "src/../h/Riscv.hpp" 1
 811              		csrr a5, sstatus
 812              	# 0 "" 2
 813              	#NO_APP
 814 0350 2330F4FC 		sd	a5,-64(s0)
 815              		.loc 2 190 5 is_stmt 1
 816              		.loc 2 190 12 is_stmt 0
 817 0354 833704FC 		ld	a5,-64(s0)
 818              	.LBE88:
 819              	.LBE87:
 103:src/Riscv.cpp ****             mc_sip(Riscv::SIP_SSIP);
 820              		.loc 1 103 56
 821 0358 2330F4FA 		sd	a5,-96(s0)
 104:src/Riscv.cpp ****             //Riscv::printString("timerInterrupt\n");
 822              		.loc 1 104 13 is_stmt 1
 823              	.LVL51:
 824              	.LBB89:
 825              	.LBB90:
 158:src/../h/Riscv.hpp **** }
 826              		.loc 2 158 5
 158:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/ccbLgW2Y.s 			page 26


 827              		.loc 2 158 50 is_stmt 0
 828 035c 93072000 		li	a5,2
 829              	#APP
 830              	# 158 "src/../h/Riscv.hpp" 1
 831              		csrc sip, a5
 832              	# 0 "" 2
 833              	.LVL52:
 834              	#NO_APP
 835              	.LBE90:
 836              	.LBE89:
 107:src/Riscv.cpp ****             Riscv::printInteger(totalTime);
 837              		.loc 1 107 13 is_stmt 1
 107:src/Riscv.cpp ****             Riscv::printInteger(totalTime);
 838              		.loc 1 107 22 is_stmt 0
 839 0364 97070000 		lla	a5,.LANCHOR1
 839      93870700 
 840 036c 03B50700 		ld	a0,0(a5)
 841 0370 13051500 		addi	a0,a0,1
 842 0374 23B0A700 		sd	a0,0(a5)
 108:src/Riscv.cpp **** 
 843              		.loc 1 108 13 is_stmt 1
 108:src/Riscv.cpp **** 
 844              		.loc 1 108 32 is_stmt 0
 845 0378 97000000 		call	_ZN5Riscv12printIntegerEm
 845      E7800000 
 846              	.LVL53:
 110:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
 847              		.loc 1 110 13 is_stmt 1
 110:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
 848              		.loc 1 110 34 is_stmt 0
 849 0380 97040000 		la	s1,_ZN3PCB16timeSliceCounterE
 849      83B40400 
 850 0388 83B70400 		ld	a5,0(s1)
 851 038c 93871700 		addi	a5,a5,1
 852 0390 23B0F400 		sd	a5,0(s1)
 111:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
 853              		.loc 1 111 13 is_stmt 1
 111:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
 854              		.loc 1 111 40 is_stmt 0
 855 0394 97000000 		call	_ZN12SleepPCBList13tryToWakePCBsEv@plt
 855      E7800000 
 856              	.LVL54:
 112:src/Riscv.cpp ****             {
 857              		.loc 1 112 13 is_stmt 1
 112:src/Riscv.cpp ****             {
 858              		.loc 1 112 68 is_stmt 0
 859 039c 97070000 		la	a5,_ZN3PCB7runningE
 859      83B70700 
 860 03a4 83B70700 		ld	a5,0(a5)
 861              	.LVL55:
 862              	.LBB91:
 863              	.LBB92:
 864              		.file 3 "src/../h/PCB.hpp"
   1:src/../h/PCB.hpp **** //
   2:src/../h/PCB.hpp **** // Created by os on 4/27/22.
   3:src/../h/PCB.hpp **** //
   4:src/../h/PCB.hpp **** 
GAS LISTING /tmp/ccbLgW2Y.s 			page 27


   5:src/../h/PCB.hpp **** #ifndef PROJECT_BASE_V1_0_PCB_HPP
   6:src/../h/PCB.hpp **** #define PROJECT_BASE_V1_0_PCB_HPP
   7:src/../h/PCB.hpp **** 
   8:src/../h/PCB.hpp **** #include "../lib/hw.h"
   9:src/../h/PCB.hpp **** #include "Scheduler.hpp"
  10:src/../h/PCB.hpp **** #include "Riscv.hpp"
  11:src/../h/PCB.hpp **** 
  12:src/../h/PCB.hpp **** class PCB
  13:src/../h/PCB.hpp **** {
  14:src/../h/PCB.hpp **** public:
  15:src/../h/PCB.hpp ****     static uint64 savedRegA4;
  16:src/../h/PCB.hpp **** 
  17:src/../h/PCB.hpp ****     using Body = void (*)(void*);
  18:src/../h/PCB.hpp **** 
  19:src/../h/PCB.hpp ****     PCB(Body body,  void* args, void* stack_space, uint64 timeSlice);
  20:src/../h/PCB.hpp ****     ~PCB();
  21:src/../h/PCB.hpp **** 
  22:src/../h/PCB.hpp ****     void start();
  23:src/../h/PCB.hpp ****     static void dispatch();
  24:src/../h/PCB.hpp ****     static void sleep(time_t);
  25:src/../h/PCB.hpp **** 
  26:src/../h/PCB.hpp ****     static PCB* running;
  27:src/../h/PCB.hpp **** 
  28:src/../h/PCB.hpp ****     static uint64 timeSliceCounter;
  29:src/../h/PCB.hpp ****     uint64 getTimeSlice() { return timeSlice;}
 865              		.loc 3 29 29 is_stmt 1
 866              		.loc 3 29 36 is_stmt 0
 867 03a8 83B70701 		ld	a5,16(a5)
 868              	.LVL56:
 869              	.LBE92:
 870              	.LBE91:
 112:src/Riscv.cpp ****             {
 871              		.loc 1 112 39
 872 03ac 03B70400 		ld	a4,0(s1)
 112:src/Riscv.cpp ****             {
 873              		.loc 1 112 13
 874 03b0 637CF700 		bgeu	a4,a5,.L49
 875              	.L28:
 118:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 876              		.loc 1 118 13 is_stmt 1
 118:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 877              		.loc 1 118 29 is_stmt 0
 878 03b4 833704FA 		ld	a5,-96(s0)
 879              	.LVL57:
 880              	.LBB93:
 881              	.LBB94:
 191:src/../h/Riscv.hpp **** }
 192:src/../h/Riscv.hpp **** 
 193:src/../h/Riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus) {
 194:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sstatus, %0" : :"r"(sstatus));
 882              		.loc 2 194 5 is_stmt 1
 883              		.loc 2 194 57 is_stmt 0
 884              	#APP
 885              	# 194 "src/../h/Riscv.hpp" 1
 195              	}
 886              		csrw sstatus, a5
 887              	# 0 "" 2
GAS LISTING /tmp/ccbLgW2Y.s 			page 28


 888              	.LVL58:
 889              	#NO_APP
 890              	.LBE94:
 891              	.LBE93:
 119:src/Riscv.cpp **** 
 892              		.loc 1 119 13 is_stmt 1
 119:src/Riscv.cpp **** 
 893              		.loc 1 119 26 is_stmt 0
 894 03bc 833784F9 		ld	a5,-104(s0)
 895              	.LVL59:
 896              	.LBB95:
 897              	.LBB96:
 125:src/../h/Riscv.hpp **** }
 898              		.loc 2 125 5 is_stmt 1
 125:src/../h/Riscv.hpp **** }
 899              		.loc 2 125 51 is_stmt 0
 900              	#APP
 901              	# 125 "src/../h/Riscv.hpp" 1
 126:src/../h/Riscv.hpp **** 
 902              		csrw sepc, a5
 903              	# 0 "" 2
 904              		.loc 2 126 1
 905              	#NO_APP
 906 03c4 6F008005 		j	.L22
 907              	.LVL60:
 908              	.L49:
 909              	.LBE96:
 910              	.LBE95:
 114:src/Riscv.cpp ****                 PCB::dispatch();
 911              		.loc 1 114 17 is_stmt 1
 114:src/Riscv.cpp ****                 PCB::dispatch();
 912              		.loc 1 114 39 is_stmt 0
 913 03c8 23B00400 		sd	zero,0(s1)
 115:src/Riscv.cpp ****             }
 914              		.loc 1 115 17 is_stmt 1
 115:src/Riscv.cpp ****             }
 915              		.loc 1 115 30 is_stmt 0
 916 03cc 97000000 		call	_ZN3PCB8dispatchEv@plt
 916      E7800000 
 917              	.LVL61:
 918 03d4 6FF01FFE 		j	.L28
 919              	.LVL62:
 920              	.L48:
 921              	.LBE84:
 922              	.LBB97:
 923              	.LBB83:
 924              	.LBB82:
 141:src/Riscv.cpp ****                     KConsole::putCharacterInput(c);
 925              		.loc 1 141 21 is_stmt 1
 141:src/Riscv.cpp ****                     KConsole::putCharacterInput(c);
 926              		.loc 1 141 42 is_stmt 0
 927 03d8 9387F7FF 		addi	a5,a5,-1
 928 03dc 17070000 		la	a4,_ZN8KConsole11pendingGetcE
 928      03370700 
 929 03e4 2330F700 		sd	a5,0(a4)
 142:src/Riscv.cpp ****                     KConsole::putCharacterOutput(c);
 930              		.loc 1 142 21 is_stmt 1
GAS LISTING /tmp/ccbLgW2Y.s 			page 29


 142:src/Riscv.cpp ****                     KConsole::putCharacterOutput(c);
 931              		.loc 1 142 48 is_stmt 0
 932 03e8 13850400 		mv	a0,s1
 933              	.LVL63:
 934 03ec 97000000 		call	_ZN8KConsole17putCharacterInputEc@plt
 934      E7800000 
 935              	.LVL64:
 143:src/Riscv.cpp ****                 }
 936              		.loc 1 143 21 is_stmt 1
 143:src/Riscv.cpp ****                 }
 937              		.loc 1 143 49 is_stmt 0
 938 03f4 13850400 		mv	a0,s1
 939 03f8 97000000 		call	_ZN8KConsole18putCharacterOutputEc@plt
 939      E7800000 
 940              	.LVL65:
 941 0400 6FF09FF2 		j	.L29
 942              	.LVL66:
 943              	.L45:
 944              	.LBE82:
 945              	.LBE83:
 946              	.LBE97:
 947              	.LBB98:
 174:src/Riscv.cpp ****                     MemoryAllocator::memAllocHandler();
 948              		.loc 1 174 17 is_stmt 1
 175:src/Riscv.cpp ****                     break;
 949              		.loc 1 175 21
 175:src/Riscv.cpp ****                     break;
 950              		.loc 1 175 53 is_stmt 0
 951 0404 97000000 		call	_ZN15MemoryAllocator15memAllocHandlerEv@plt
 951      E7800000 
 952              	.LVL67:
 176:src/Riscv.cpp ****                 case MemoryAllocator::MEM_FREE:
 953              		.loc 1 176 21 is_stmt 1
 954              	.L30:
 218:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 955              		.loc 1 218 13
 218:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 956              		.loc 1 218 29 is_stmt 0
 957 040c 833704FB 		ld	a5,-80(s0)
 958              	.LVL68:
 959              	.LBB75:
 960              	.LBB76:
 194:src/../h/Riscv.hpp **** }
 961              		.loc 2 194 5 is_stmt 1
 194:src/../h/Riscv.hpp **** }
 962              		.loc 2 194 57 is_stmt 0
 963              	#APP
 964              	# 194 "src/../h/Riscv.hpp" 1
 965              		csrw sstatus, a5
 966              	# 0 "" 2
 967              	.LVL69:
 968              	#NO_APP
 969              	.LBE76:
 970              	.LBE75:
 219:src/Riscv.cpp **** 
 971              		.loc 1 219 13 is_stmt 1
 219:src/Riscv.cpp **** 
GAS LISTING /tmp/ccbLgW2Y.s 			page 30


 972              		.loc 1 219 26 is_stmt 0
 973 0414 833784FA 		ld	a5,-88(s0)
 974              	.LVL70:
 975              	.LBB77:
 976              	.LBB78:
 125:src/../h/Riscv.hpp **** }
 977              		.loc 2 125 5 is_stmt 1
 125:src/../h/Riscv.hpp **** }
 978              		.loc 2 125 51 is_stmt 0
 979              	#APP
 980              	# 125 "src/../h/Riscv.hpp" 1
 981              		csrw sepc, a5
 982              	# 0 "" 2
 983              	.LVL71:
 984              	#NO_APP
 985              	.L22:
 986              	.LBE78:
 987              	.LBE77:
 988              	.LBE98:
 989              	.LBE102:
 224:src/Riscv.cpp **** 
 990              		.loc 1 224 1
 991 041c 83308106 		ld	ra,104(sp)
 992              		.cfi_remember_state
 993              		.cfi_restore 1
 994 0420 03340106 		ld	s0,96(sp)
 995              		.cfi_restore 8
 996              		.cfi_def_cfa 2, 112
 997 0424 83348105 		ld	s1,88(sp)
 998              		.cfi_restore 9
 999 0428 13010107 		addi	sp,sp,112
 1000              		.cfi_def_cfa_offset 0
 1001 042c 67800000 		jr	ra
 1002              	.L44:
 1003              		.cfi_restore_state
 1004              	.LBB103:
 1005              	.LBB99:
 177:src/Riscv.cpp ****                     MemoryAllocator::memFreeHandler();
 1006              		.loc 1 177 17 is_stmt 1
 178:src/Riscv.cpp ****                     break;
 1007              		.loc 1 178 21
 178:src/Riscv.cpp ****                     break;
 1008              		.loc 1 178 52 is_stmt 0
 1009 0430 97000000 		call	_ZN15MemoryAllocator14memFreeHandlerEv@plt
 1009      E7800000 
 1010              	.LVL72:
 179:src/Riscv.cpp ****                 case PCB::THREAD_MAKE_PCB:
 1011              		.loc 1 179 21 is_stmt 1
 1012 0438 6FF05FFD 		j	.L30
 1013              	.L40:
 180:src/Riscv.cpp ****                     PCB::threadMakePCBHandler();
 1014              		.loc 1 180 17
 181:src/Riscv.cpp ****                     break;
 1015              		.loc 1 181 21
 181:src/Riscv.cpp ****                     break;
 1016              		.loc 1 181 46 is_stmt 0
 1017 043c 97000000 		call	_ZN3PCB20threadMakePCBHandlerEv@plt
GAS LISTING /tmp/ccbLgW2Y.s 			page 31


 1017      E7800000 
 1018              	.LVL73:
 182:src/Riscv.cpp ****                 case PCB::THREAD_CREATE:
 1019              		.loc 1 182 21 is_stmt 1
 1020 0444 6FF09FFC 		j	.L30
 1021              	.L43:
 183:src/Riscv.cpp ****                     PCB::threadCreateHandler();
 1022              		.loc 1 183 17
 184:src/Riscv.cpp ****                     break;
 1023              		.loc 1 184 21
 184:src/Riscv.cpp ****                     break;
 1024              		.loc 1 184 45 is_stmt 0
 1025 0448 97000000 		call	_ZN3PCB19threadCreateHandlerEv@plt
 1025      E7800000 
 1026              	.LVL74:
 185:src/Riscv.cpp ****                 case PCB::THREAD_START:
 1027              		.loc 1 185 21 is_stmt 1
 1028 0450 6FF0DFFB 		j	.L30
 1029              	.L39:
 186:src/Riscv.cpp ****                     PCB::threadStartHandler();
 1030              		.loc 1 186 17
 187:src/Riscv.cpp ****                     break;
 1031              		.loc 1 187 21
 187:src/Riscv.cpp ****                     break;
 1032              		.loc 1 187 44 is_stmt 0
 1033 0454 97000000 		call	_ZN3PCB18threadStartHandlerEv@plt
 1033      E7800000 
 1034              	.LVL75:
 188:src/Riscv.cpp ****                 case PCB::THREAD_DISPATCH:
 1035              		.loc 1 188 21 is_stmt 1
 1036 045c 6FF01FFB 		j	.L30
 1037              	.L41:
 189:src/Riscv.cpp ****                     PCB::threadDispatchHandler();
 1038              		.loc 1 189 17
 190:src/Riscv.cpp ****                     break;
 1039              		.loc 1 190 21
 190:src/Riscv.cpp ****                     break;
 1040              		.loc 1 190 47 is_stmt 0
 1041 0460 97000000 		call	_ZN3PCB21threadDispatchHandlerEv@plt
 1041      E7800000 
 1042              	.LVL76:
 191:src/Riscv.cpp ****                 case PCB::THREAD_EXIT:
 1043              		.loc 1 191 21 is_stmt 1
 1044 0468 6FF05FFA 		j	.L30
 1045              	.L42:
 192:src/Riscv.cpp ****                     PCB::threadExitHandler();
 1046              		.loc 1 192 17
 193:src/Riscv.cpp ****                     break;
 1047              		.loc 1 193 21
 193:src/Riscv.cpp ****                     break;
 1048              		.loc 1 193 43 is_stmt 0
 1049 046c 97000000 		call	_ZN3PCB17threadExitHandlerEv@plt
 1049      E7800000 
 1050              	.LVL77:
 194:src/Riscv.cpp ****                 case PCB::TIME_SLEEP:
 1051              		.loc 1 194 21 is_stmt 1
 1052 0474 6FF09FF9 		j	.L30
GAS LISTING /tmp/ccbLgW2Y.s 			page 32


 1053              	.L34:
 195:src/Riscv.cpp ****                     PCB::threadSleepHandler();
 1054              		.loc 1 195 17
 196:src/Riscv.cpp ****                     break;
 1055              		.loc 1 196 21
 196:src/Riscv.cpp ****                     break;
 1056              		.loc 1 196 44 is_stmt 0
 1057 0478 97000000 		call	_ZN3PCB18threadSleepHandlerEv@plt
 1057      E7800000 
 1058              	.LVL78:
 197:src/Riscv.cpp ****                 case KSemaphore::SEM_OPEN:
 1059              		.loc 1 197 21 is_stmt 1
 1060 0480 6FF0DFF8 		j	.L30
 1061              	.L38:
 198:src/Riscv.cpp ****                     KSemaphore::semOpenHandler();
 1062              		.loc 1 198 17
 199:src/Riscv.cpp ****                     break;
 1063              		.loc 1 199 21
 199:src/Riscv.cpp ****                     break;
 1064              		.loc 1 199 47 is_stmt 0
 1065 0484 97000000 		call	_ZN10KSemaphore14semOpenHandlerEv@plt
 1065      E7800000 
 1066              	.LVL79:
 200:src/Riscv.cpp ****                 case KSemaphore::SEM_WAIT:
 1067              		.loc 1 200 21 is_stmt 1
 1068 048c 6FF01FF8 		j	.L30
 1069              	.L36:
 201:src/Riscv.cpp ****                     KSemaphore::semWaitHandler();
 1070              		.loc 1 201 17
 202:src/Riscv.cpp ****                     break;
 1071              		.loc 1 202 21
 202:src/Riscv.cpp ****                     break;
 1072              		.loc 1 202 47 is_stmt 0
 1073 0490 97000000 		call	_ZN10KSemaphore14semWaitHandlerEv@plt
 1073      E7800000 
 1074              	.LVL80:
 203:src/Riscv.cpp ****                 case KSemaphore::SEM_SIGNAL:
 1075              		.loc 1 203 21 is_stmt 1
 1076 0498 6FF05FF7 		j	.L30
 1077              	.L35:
 204:src/Riscv.cpp ****                     KSemaphore::semSignalHandler();
 1078              		.loc 1 204 17
 205:src/Riscv.cpp ****                     break;
 1079              		.loc 1 205 21
 205:src/Riscv.cpp ****                     break;
 1080              		.loc 1 205 49 is_stmt 0
 1081 049c 97000000 		call	_ZN10KSemaphore16semSignalHandlerEv@plt
 1081      E7800000 
 1082              	.LVL81:
 206:src/Riscv.cpp ****                 case KSemaphore::SEM_CLOSE:
 1083              		.loc 1 206 21 is_stmt 1
 1084 04a4 6FF09FF6 		j	.L30
 1085              	.L37:
 207:src/Riscv.cpp ****                     KSemaphore::semCloseHandler();
 1086              		.loc 1 207 17
 208:src/Riscv.cpp ****                     break;
 1087              		.loc 1 208 21
GAS LISTING /tmp/ccbLgW2Y.s 			page 33


 208:src/Riscv.cpp ****                     break;
 1088              		.loc 1 208 48 is_stmt 0
 1089 04a8 97000000 		call	_ZN10KSemaphore15semCloseHandlerEv@plt
 1089      E7800000 
 1090              	.LVL82:
 209:src/Riscv.cpp ****                 case KConsole::CONSOLE_GETC:
 1091              		.loc 1 209 21 is_stmt 1
 1092 04b0 6FF0DFF5 		j	.L30
 1093              	.L33:
 210:src/Riscv.cpp ****                     KConsole::getcHandler();
 1094              		.loc 1 210 17
 211:src/Riscv.cpp ****                     break;
 1095              		.loc 1 211 21
 211:src/Riscv.cpp ****                     break;
 1096              		.loc 1 211 42 is_stmt 0
 1097 04b4 97000000 		call	_ZN8KConsole11getcHandlerEv@plt
 1097      E7800000 
 1098              	.LVL83:
 212:src/Riscv.cpp ****                 case KConsole::CONSOLE_PUTC:
 1099              		.loc 1 212 21 is_stmt 1
 1100 04bc 6FF01FF5 		j	.L30
 1101              	.L31:
 213:src/Riscv.cpp ****                     KConsole::putcHandler();
 1102              		.loc 1 213 17
 214:src/Riscv.cpp ****                     break;
 1103              		.loc 1 214 21
 214:src/Riscv.cpp ****                     break;
 1104              		.loc 1 214 42 is_stmt 0
 1105 04c0 97000000 		call	_ZN8KConsole11putcHandlerEv@plt
 1105      E7800000 
 1106              	.LVL84:
 215:src/Riscv.cpp ****             }
 1107              		.loc 1 215 21 is_stmt 1
 1108 04c8 6FF05FF4 		j	.L30
 1109              	.LBE99:
 1110              	.LBE103:
 1111              		.cfi_endproc
 1112              	.LFE33:
 1114              		.section	.rodata.str1.8,"aMS",@progbits,1
 1115              		.align	3
 1116              	.LC0:
 1117 0000 456E642E 		.string	"End..."
 1117      2E2E00
 1118              		.text
 1119              		.align	2
 1120              		.globl	_ZN5Riscv10kernelMainEv
 1122              	_ZN5Riscv10kernelMainEv:
 1123              	.LFB34:
 227:src/Riscv.cpp ****     initSystem();
 1124              		.loc 1 227 1
 1125              		.cfi_startproc
 1126              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 1127              		.cfi_lsda 0x1b,.LLSDA34
 1128 04cc 130101FE 		addi	sp,sp,-32
 1129              		.cfi_def_cfa_offset 32
 1130 04d0 233C1100 		sd	ra,24(sp)
 1131 04d4 23388100 		sd	s0,16(sp)
GAS LISTING /tmp/ccbLgW2Y.s 			page 34


 1132 04d8 23349100 		sd	s1,8(sp)
 1133 04dc 23302101 		sd	s2,0(sp)
 1134              		.cfi_offset 1, -8
 1135              		.cfi_offset 8, -16
 1136              		.cfi_offset 9, -24
 1137              		.cfi_offset 18, -32
 1138 04e0 13040102 		addi	s0,sp,32
 1139              		.cfi_def_cfa 8, 0
 228:src/Riscv.cpp **** 
 1140              		.loc 1 228 5
 1141              	.LEHB0:
 228:src/Riscv.cpp **** 
 1142              		.loc 1 228 15 is_stmt 0
 1143 04e4 97000000 		call	_ZN5Riscv10initSystemEv
 1143      E7800000 
 1144              	.LVL85:
 230:src/Riscv.cpp **** 
 1145              		.loc 1 230 5 is_stmt 1
 230:src/Riscv.cpp **** 
 1146              		.loc 1 230 21 is_stmt 0
 1147 04ec 97000000 		call	_ZN5Riscv16enableInterruptsEv
 1147      E7800000 
 1148              	.LVL86:
 232:src/Riscv.cpp ****     //PCB* userPCB = new PCB(&Riscv::myTestsWrapper, 0, kmalloc(DEFAULT_STACK_SIZE), DEFAULT_TIME_S
 1149              		.loc 1 232 5 is_stmt 1
 232:src/Riscv.cpp ****     //PCB* userPCB = new PCB(&Riscv::myTestsWrapper, 0, kmalloc(DEFAULT_STACK_SIZE), DEFAULT_TIME_S
 1150              		.loc 1 232 63 is_stmt 0
 1151 04f4 37150000 		li	a0,4096
 1152 04f8 97000000 		call	_Z7kmallocm@plt
 1152      E7800000 
 1153              	.LVL87:
 1154 0500 13090500 		mv	s2,a0
 232:src/Riscv.cpp ****     //PCB* userPCB = new PCB(&Riscv::myTestsWrapper, 0, kmalloc(DEFAULT_STACK_SIZE), DEFAULT_TIME_S
 1155              		.loc 1 232 103
 1156 0504 13050005 		li	a0,80
 1157 0508 97000000 		call	_ZN3PCBnwEm@plt
 1157      E7800000 
 1158              	.LVL88:
 1159              	.LEHE0:
 1160 0510 93040500 		mv	s1,a0
 1161 0514 13072000 		li	a4,2
 1162 0518 93060900 		mv	a3,s2
 1163 051c 13060000 		li	a2,0
 1164 0520 97050000 		lla	a1,_ZN5Riscv15userMainWrapperEPv
 1164      93850500 
 1165              	.LEHB1:
 1166 0528 97000000 		call	_ZN3PCBC1EPFvPvES0_S0_m@plt
 1166      E7800000 
 1167              	.LVL89:
 1168              	.LEHE1:
 234:src/Riscv.cpp ****     while(!userPCB->isFinished())
 1169              		.loc 1 234 5 is_stmt 1 discriminator 2
 234:src/Riscv.cpp ****     while(!userPCB->isFinished())
 1170              		.loc 1 234 19 is_stmt 0 discriminator 2
 1171 0530 13850400 		mv	a0,s1
 1172              	.LEHB2:
 1173 0534 97000000 		call	_ZN3PCB5startEv@plt
GAS LISTING /tmp/ccbLgW2Y.s 			page 35


 1173      E7800000 
 1174              	.LVL90:
 1175              	.L52:
 235:src/Riscv.cpp ****     {
 1176              		.loc 1 235 5 is_stmt 1
 235:src/Riscv.cpp ****     {
 1177              		.loc 1 235 11
 235:src/Riscv.cpp ****     {
 1178              		.loc 1 235 31 is_stmt 0
 1179 053c 13850400 		mv	a0,s1
 1180 0540 97000000 		call	_ZN3PCB10isFinishedEv@plt
 1180      E7800000 
 1181              	.LVL91:
 235:src/Riscv.cpp ****     {
 1182              		.loc 1 235 11
 1183 0548 63180500 		bnez	a0,.L51
 237:src/Riscv.cpp ****     }
 1184              		.loc 1 237 9 is_stmt 1
 237:src/Riscv.cpp ****     }
 1185              		.loc 1 237 24 is_stmt 0
 1186 054c 97000000 		call	thread_dispatch@plt
 1186      E7800000 
 1187              	.LVL92:
 235:src/Riscv.cpp ****     {
 1188              		.loc 1 235 5
 1189 0554 6FF09FFE 		j	.L52
 1190              	.L51:
 241:src/Riscv.cpp **** 
 1191              		.loc 1 241 5 is_stmt 1
 241:src/Riscv.cpp **** 
 1192              		.loc 1 241 22 is_stmt 0
 1193 0558 97000000 		call	_ZN5Riscv17disableInterruptsEv
 1193      E7800000 
 1194              	.LVL93:
 243:src/Riscv.cpp **** 
 1195              		.loc 1 243 5 is_stmt 1
 243:src/Riscv.cpp **** 
 1196              		.loc 1 243 14 is_stmt 0
 1197 0560 97000000 		call	_ZN5Riscv9endSystemEv
 1197      E7800000 
 1198              	.LVL94:
 245:src/Riscv.cpp **** }
 1199              		.loc 1 245 5 is_stmt 1
 245:src/Riscv.cpp **** }
 1200              		.loc 1 245 23 is_stmt 0
 1201 0568 17050000 		lla	a0,.LC0
 1201      13050500 
 1202 0570 97000000 		call	_ZN5Riscv11printStringEPKc
 1202      E7800000 
 1203              	.LVL95:
 1204              	.LEHE2:
 246:src/Riscv.cpp **** 
 1205              		.loc 1 246 1
 1206 0578 83308101 		ld	ra,24(sp)
 1207              		.cfi_remember_state
 1208              		.cfi_restore 1
 1209 057c 03340101 		ld	s0,16(sp)
GAS LISTING /tmp/ccbLgW2Y.s 			page 36


 1210              		.cfi_restore 8
 1211              		.cfi_def_cfa 2, 32
 1212 0580 83348100 		ld	s1,8(sp)
 1213              		.cfi_restore 9
 1214              	.LVL96:
 1215 0584 03390100 		ld	s2,0(sp)
 1216              		.cfi_restore 18
 1217 0588 13010102 		addi	sp,sp,32
 1218              		.cfi_def_cfa_offset 0
 1219 058c 67800000 		jr	ra
 1220              	.L54:
 1221              		.cfi_restore_state
 1222 0590 13090500 		mv	s2,a0
 232:src/Riscv.cpp ****     //PCB* userPCB = new PCB(&Riscv::myTestsWrapper, 0, kmalloc(DEFAULT_STACK_SIZE), DEFAULT_TIME_S
 1223              		.loc 1 232 103
 1224 0594 13850400 		mv	a0,s1
 1225 0598 97000000 		call	_ZN3PCBdlEPv@plt
 1225      E7800000 
 1226              	.LVL97:
 1227 05a0 13050900 		mv	a0,s2
 1228              	.LEHB3:
 1229 05a4 97000000 		call	_Unwind_Resume@plt
 1229      E7800000 
 1230              	.LVL98:
 1231              	.LEHE3:
 1232              		.cfi_endproc
 1233              	.LFE34:
 1234              		.globl	__gxx_personality_v0
 1235              		.section	.gcc_except_table,"a",@progbits
 1236              	.LLSDA34:
 1237 0000 FF       		.byte	0xff
 1238 0001 FF       		.byte	0xff
 1239 0002 03       		.byte	0x3
 1240 0003 34       		.byte	0x34
 1241 0004 00000000 		.4byte	.LEHB0-.LFB34
 1242 0008 00000000 		.4byte	.LEHE0-.LEHB0
 1243 000c 00000000 		.4byte	0
 1244 0010 00       		.byte	0
 1245 0011 00000000 		.4byte	.LEHB1-.LFB34
 1246 0015 00000000 		.4byte	.LEHE1-.LEHB1
 1247 0019 00000000 		.4byte	.L54-.LFB34
 1248 001d 00       		.byte	0
 1249 001e 00000000 		.4byte	.LEHB2-.LFB34
 1250 0022 00000000 		.4byte	.LEHE2-.LEHB2
 1251 0026 00000000 		.4byte	0
 1252 002a 00       		.byte	0
 1253 002b 00000000 		.4byte	.LEHB3-.LFB34
 1254 002f 00000000 		.4byte	.LEHE3-.LEHB3
 1255 0033 00000000 		.4byte	0
 1256 0037 00       		.byte	0
 1257              		.text
 1259              		.align	2
 1260              		.globl	_ZN5Riscv14myTestsWrapperEPv
 1262              	_ZN5Riscv14myTestsWrapperEPv:
 1263              	.LFB36:
 252:src/Riscv.cpp **** 
 253:src/Riscv.cpp **** void Riscv::myTestsWrapper(void* p)
GAS LISTING /tmp/ccbLgW2Y.s 			page 37


 254:src/Riscv.cpp **** {
 1264              		.loc 1 254 1 is_stmt 1
 1265              		.cfi_startproc
 1266              	.LVL99:
 1267 05ac 130101FF 		addi	sp,sp,-16
 1268              		.cfi_def_cfa_offset 16
 1269 05b0 23341100 		sd	ra,8(sp)
 1270 05b4 23308100 		sd	s0,0(sp)
 1271              		.cfi_offset 1, -8
 1272              		.cfi_offset 8, -16
 1273 05b8 13040101 		addi	s0,sp,16
 1274              		.cfi_def_cfa 8, 0
 255:src/Riscv.cpp ****     myTests();
 1275              		.loc 1 255 5
 1276              		.loc 1 255 12 is_stmt 0
 1277 05bc 97000000 		call	_Z7myTestsv@plt
 1277      E7800000 
 1278              	.LVL100:
 256:src/Riscv.cpp **** }
 1279              		.loc 1 256 1
 1280 05c4 83308100 		ld	ra,8(sp)
 1281              		.cfi_restore 1
 1282 05c8 03340100 		ld	s0,0(sp)
 1283              		.cfi_restore 8
 1284              		.cfi_def_cfa 2, 16
 1285 05cc 13010101 		addi	sp,sp,16
 1286              		.cfi_def_cfa_offset 0
 1287 05d0 67800000 		jr	ra
 1288              		.cfi_endproc
 1289              	.LFE36:
 1291              		.align	2
 1292              		.globl	_ZN5Riscv22disableTimerInterruptsEv
 1294              	_ZN5Riscv22disableTimerInterruptsEv:
 1295              	.LFB37:
 257:src/Riscv.cpp **** 
 258:src/Riscv.cpp **** void Riscv::disableTimerInterrupts()
 259:src/Riscv.cpp **** {
 1296              		.loc 1 259 1 is_stmt 1
 1297              		.cfi_startproc
 1298 05d4 130101FF 		addi	sp,sp,-16
 1299              		.cfi_def_cfa_offset 16
 1300 05d8 23348100 		sd	s0,8(sp)
 1301              		.cfi_offset 8, -8
 1302 05dc 13040101 		addi	s0,sp,16
 1303              		.cfi_def_cfa 8, 0
 260:src/Riscv.cpp ****     //uint64 x = 0x200;
 261:src/Riscv.cpp ****     //__asm__ volatile("csrs sie, %0"::"r"(x));
 262:src/Riscv.cpp ****     uint64 x = 0x2;
 1304              		.loc 1 262 5
 1305              	.LVL101:
 263:src/Riscv.cpp ****     __asm__ volatile("csrc sie, %0"::"r"(x));
 1306              		.loc 1 263 5
 1307              		.loc 1 263 45 is_stmt 0
 1308 05e0 93072000 		li	a5,2
 1309              	#APP
 1310              	# 263 "src/Riscv.cpp" 1
 264              	}
GAS LISTING /tmp/ccbLgW2Y.s 			page 38


 1311              		csrc sie, a5
 1312              	# 0 "" 2
 1313              		.loc 1 264 1
 1314              	#NO_APP
 1315 05e8 03348100 		ld	s0,8(sp)
 1316              		.cfi_restore 8
 1317              		.cfi_def_cfa 2, 16
 1318 05ec 13010101 		addi	sp,sp,16
 1319              		.cfi_def_cfa_offset 0
 1320 05f0 67800000 		jr	ra
 1321              		.cfi_endproc
 1322              	.LFE37:
 1324              		.align	2
 1325              		.globl	_ZN5Riscv9idleRiscvEPv
 1327              	_ZN5Riscv9idleRiscvEPv:
 1328              	.LFB38:
 265:src/Riscv.cpp **** 
 266:src/Riscv.cpp **** void Riscv::idleRiscv(void* p)
 267:src/Riscv.cpp **** {
 1329              		.loc 1 267 1 is_stmt 1
 1330              		.cfi_startproc
 1331              	.LVL102:
 1332 05f4 130101FF 		addi	sp,sp,-16
 1333              		.cfi_def_cfa_offset 16
 1334 05f8 23348100 		sd	s0,8(sp)
 1335              		.cfi_offset 8, -8
 1336 05fc 13040101 		addi	s0,sp,16
 1337              		.cfi_def_cfa 8, 0
 1338              	.L62:
 268:src/Riscv.cpp ****     while(true)
 1339              		.loc 1 268 5 discriminator 1
 1340              		.loc 1 268 5 discriminator 1
 1341 0600 6F000000 		j	.L62
 1342              		.cfi_endproc
 1343              	.LFE38:
 1345              		.align	2
 1346              		.globl	_ZN5Riscv13w_a0_sscratchEv
 1348              	_ZN5Riscv13w_a0_sscratchEv:
 1349              	.LFB39:
 269:src/Riscv.cpp ****     {
 270:src/Riscv.cpp **** 
 271:src/Riscv.cpp ****     }
 272:src/Riscv.cpp **** }
 273:src/Riscv.cpp **** 
 274:src/Riscv.cpp **** void Riscv::w_a0_sscratch()
 275:src/Riscv.cpp **** {
 1350              		.loc 1 275 1
 1351              		.cfi_startproc
 1352 0604 130101FF 		addi	sp,sp,-16
 1353              		.cfi_def_cfa_offset 16
 1354 0608 23348100 		sd	s0,8(sp)
 1355              		.cfi_offset 8, -8
 1356 060c 13040101 		addi	s0,sp,16
 1357              		.cfi_def_cfa 8, 0
 276:src/Riscv.cpp ****     uint64 a1Temp;
 1358              		.loc 1 276 5
 277:src/Riscv.cpp ****     __asm__ volatile("mv %0, a1":"=r"(a1Temp));
GAS LISTING /tmp/ccbLgW2Y.s 			page 39


 1359              		.loc 1 277 5
 1360              		.loc 1 277 47 is_stmt 0
 1361              	#APP
 1362              	# 277 "src/Riscv.cpp" 1
 278              	    __asm__ volatile("csrr a1, sscratch");
 1363              		mv a5, a1
 1364              	# 0 "" 2
 1365              	.LVL103:
 1366              		.loc 1 278 5 is_stmt 1
 1367              		.loc 1 278 42 is_stmt 0
 1368              	# 278 "src/Riscv.cpp" 1
 279              	    __asm__ volatile("sd a0, 80(a1)");
 1369              		csrr a1, sscratch
 1370              	# 0 "" 2
 1371              		.loc 1 279 5 is_stmt 1
 1372              		.loc 1 279 38 is_stmt 0
 1373              	# 279 "src/Riscv.cpp" 1
 280              	    __asm__ volatile("mv a1,%0"::"r"(a1Temp));
 1374              		sd a0, 80(a1)
 1375              	# 0 "" 2
 1376              		.loc 1 280 5 is_stmt 1
 1377              		.loc 1 280 46 is_stmt 0
 1378              	# 280 "src/Riscv.cpp" 1
 281              	}
 1379              		mv a1,a5
 1380              	# 0 "" 2
 1381              		.loc 1 281 1
 1382              	#NO_APP
 1383 0620 03348100 		ld	s0,8(sp)
 1384              		.cfi_restore 8
 1385              		.cfi_def_cfa 2, 16
 1386 0624 13010101 		addi	sp,sp,16
 1387              		.cfi_def_cfa_offset 0
 1388 0628 67800000 		jr	ra
 1389              		.cfi_endproc
 1390              	.LFE39:
 1392              		.globl	_ZN5Riscv9totalTimeE
 1393              		.bss
 1394              		.align	3
 1395              		.set	.LANCHOR1,. + 0
 1398              	_ZN5Riscv9totalTimeE:
 1399 0000 00000000 		.zero	8
 1399      00000000 
 1400              		.section	.rodata
 1401 010c 00000000 		.align	3
 1402              		.set	.LANCHOR0,. + 0
 1405              	_ZZN5Riscv12printIntegerEmE6digits:
 1406 0110 30313233 		.string	"0123456789"
 1406      34353637 
 1406      383900
 1407              		.text
 1408              	.Letext0:
 1409              		.file 4 "src/../h/../lib/hw.h"
 1410              		.file 5 "src/../h/MemoryAllocator.hpp"
 1411              		.file 6 "src/../h/KSemaphore.hpp"
 1412              		.file 7 "src/../h/SleepPCBList.hpp"
 1413              		.file 8 "src/../h/KConsole.hpp"
GAS LISTING /tmp/ccbLgW2Y.s 			page 40


 1414              		.file 9 "src/../h/Tests.hpp"
 1415              		.file 10 "src/../test/userMain.hpp"
 1416              		.file 11 "src/../h/syscall_c.h"
 1417              		.file 12 "src/../lib/console.h"
 6401              		.align	3
 6404              	DW.ref.__gxx_personality_v0:
 6405 0000 00000000 		.dword	__gxx_personality_v0
 6405      00000000 
 6406              		.ident	"GCC: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0"
 6407              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/ccbLgW2Y.s 			page 41


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Riscv.cpp
     /tmp/ccbLgW2Y.s:9      .text:0000000000000000 _ZN5Riscv15userMainWrapperEPv
     /tmp/ccbLgW2Y.s:13     .text:0000000000000000 .L0 
     /tmp/ccbLgW2Y.s:14     .text:0000000000000000 .L0 
     /tmp/ccbLgW2Y.s:15     .text:0000000000000004 .L0 
     /tmp/ccbLgW2Y.s:18     .text:000000000000000c .L0 
     /tmp/ccbLgW2Y.s:19     .text:000000000000000c .L0 
     /tmp/ccbLgW2Y.s:21     .text:0000000000000010 .L0 
     /tmp/ccbLgW2Y.s:23     .text:0000000000000010 .L0 
     /tmp/ccbLgW2Y.s:24     .text:0000000000000010 .L0 
     /tmp/ccbLgW2Y.s:27     .text:0000000000000018 .L0 
     /tmp/ccbLgW2Y.s:28     .text:000000000000001c .L0 
     /tmp/ccbLgW2Y.s:30     .text:0000000000000020 .L0 
     /tmp/ccbLgW2Y.s:31     .text:0000000000000020 .L0 
     /tmp/ccbLgW2Y.s:33     .text:0000000000000024 .L0 
     /tmp/ccbLgW2Y.s:35     .text:0000000000000028 .L0 
     /tmp/ccbLgW2Y.s:41     .text:0000000000000028 _ZN5Riscv10initSystemEv
     /tmp/ccbLgW2Y.s:44     .text:0000000000000028 .L0 
     /tmp/ccbLgW2Y.s:45     .text:0000000000000028 .L0 
     /tmp/ccbLgW2Y.s:46     .text:000000000000002c .L0 
     /tmp/ccbLgW2Y.s:49     .text:0000000000000034 .L0 
     /tmp/ccbLgW2Y.s:50     .text:0000000000000034 .L0 
     /tmp/ccbLgW2Y.s:52     .text:0000000000000038 .L0 
     /tmp/ccbLgW2Y.s:54     .text:0000000000000038 .L0 
     /tmp/ccbLgW2Y.s:55     .text:0000000000000038 .L0 
     /tmp/ccbLgW2Y.s:61     .text:0000000000000040 .L0 
  src/../h/Riscv.hpp:135    .text:0000000000000040 .L0 
     /tmp/ccbLgW2Y.s:71     .text:0000000000000044 .L0 
     /tmp/ccbLgW2Y.s:72     .text:0000000000000044 .L0 
     /tmp/ccbLgW2Y.s:75     .text:000000000000004c .L0 
     /tmp/ccbLgW2Y.s:76     .text:000000000000004c .L0 
     /tmp/ccbLgW2Y.s:79     .text:0000000000000054 .L0 
     /tmp/ccbLgW2Y.s:80     .text:0000000000000058 .L0 
     /tmp/ccbLgW2Y.s:82     .text:000000000000005c .L0 
     /tmp/ccbLgW2Y.s:83     .text:000000000000005c .L0 
     /tmp/ccbLgW2Y.s:85     .text:0000000000000060 .L0 
     /tmp/ccbLgW2Y.s:87     .text:0000000000000064 .L0 
     /tmp/ccbLgW2Y.s:93     .text:0000000000000064 _ZN5Riscv16enableInterruptsEv
     /tmp/ccbLgW2Y.s:96     .text:0000000000000064 .L0 
     /tmp/ccbLgW2Y.s:97     .text:0000000000000064 .L0 
     /tmp/ccbLgW2Y.s:98     .text:0000000000000068 .L0 
     /tmp/ccbLgW2Y.s:100    .text:000000000000006c .L0 
     /tmp/ccbLgW2Y.s:102    .text:0000000000000070 .L0 
     /tmp/ccbLgW2Y.s:107    .text:0000000000000070 .L0 
     /tmp/ccbLgW2Y.s:108    .text:0000000000000070 .L0 
     /tmp/ccbLgW2Y.s:109    .text:0000000000000070 .L0 
     /tmp/ccbLgW2Y.s:119    .text:0000000000000078 .L0 
     /tmp/ccbLgW2Y.s:120    .text:000000000000007c .L0 
     /tmp/ccbLgW2Y.s:121    .text:000000000000007c .L0 
     /tmp/ccbLgW2Y.s:123    .text:0000000000000080 .L0 
     /tmp/ccbLgW2Y.s:125    .text:0000000000000084 .L0 
     /tmp/ccbLgW2Y.s:131    .text:0000000000000084 _ZN5Riscv17disableInterruptsEv
     /tmp/ccbLgW2Y.s:134    .text:0000000000000084 .L0 
     /tmp/ccbLgW2Y.s:135    .text:0000000000000084 .L0 
     /tmp/ccbLgW2Y.s:136    .text:0000000000000088 .L0 
     /tmp/ccbLgW2Y.s:138    .text:000000000000008c .L0 
GAS LISTING /tmp/ccbLgW2Y.s 			page 42


     /tmp/ccbLgW2Y.s:140    .text:0000000000000090 .L0 
     /tmp/ccbLgW2Y.s:145    .text:0000000000000090 .L0 
     /tmp/ccbLgW2Y.s:146    .text:0000000000000090 .L0 
     /tmp/ccbLgW2Y.s:147    .text:0000000000000090 .L0 
     /tmp/ccbLgW2Y.s:157    .text:0000000000000098 .L0 
     /tmp/ccbLgW2Y.s:158    .text:000000000000009c .L0 
     /tmp/ccbLgW2Y.s:159    .text:000000000000009c .L0 
     /tmp/ccbLgW2Y.s:161    .text:00000000000000a0 .L0 
     /tmp/ccbLgW2Y.s:163    .text:00000000000000a4 .L0 
     /tmp/ccbLgW2Y.s:169    .text:00000000000000a4 _ZN5Riscv9endSystemEv
     /tmp/ccbLgW2Y.s:172    .text:00000000000000a4 .L0 
     /tmp/ccbLgW2Y.s:173    .text:00000000000000a4 .L0 
     /tmp/ccbLgW2Y.s:174    .text:00000000000000a8 .L0 
     /tmp/ccbLgW2Y.s:177    .text:00000000000000b0 .L0 
     /tmp/ccbLgW2Y.s:178    .text:00000000000000b0 .L0 
     /tmp/ccbLgW2Y.s:180    .text:00000000000000b4 .L0 
     /tmp/ccbLgW2Y.s:182    .text:00000000000000b4 .L0 
     /tmp/ccbLgW2Y.s:183    .text:00000000000000b4 .L0 
     /tmp/ccbLgW2Y.s:186    .text:00000000000000bc .L0 
     /tmp/ccbLgW2Y.s:187    .text:00000000000000c0 .L0 
     /tmp/ccbLgW2Y.s:189    .text:00000000000000c4 .L0 
     /tmp/ccbLgW2Y.s:190    .text:00000000000000c4 .L0 
     /tmp/ccbLgW2Y.s:192    .text:00000000000000c8 .L0 
     /tmp/ccbLgW2Y.s:194    .text:00000000000000cc .L0 
     /tmp/ccbLgW2Y.s:200    .text:00000000000000cc _ZN5Riscv10popSppSpieEv
     /tmp/ccbLgW2Y.s:203    .text:00000000000000cc .L0 
     /tmp/ccbLgW2Y.s:204    .text:00000000000000cc .L0 
     /tmp/ccbLgW2Y.s:205    .text:00000000000000d0 .L0 
     /tmp/ccbLgW2Y.s:207    .text:00000000000000d4 .L0 
     /tmp/ccbLgW2Y.s:209    .text:00000000000000d8 .L0 
     /tmp/ccbLgW2Y.s:211    .text:00000000000000d8 .L0 
       src/Riscv.cpp:42     .text:00000000000000d8 .L0 
     /tmp/ccbLgW2Y.s:217    .text:00000000000000dc .L0 
       src/Riscv.cpp:43     .text:00000000000000dc .L0 
     /tmp/ccbLgW2Y.s:223    .text:00000000000000e0 .L0 
     /tmp/ccbLgW2Y.s:224    .text:00000000000000e4 .L0 
     /tmp/ccbLgW2Y.s:225    .text:00000000000000e4 .L0 
     /tmp/ccbLgW2Y.s:227    .text:00000000000000e8 .L0 
     /tmp/ccbLgW2Y.s:229    .text:00000000000000ec .L0 
     /tmp/ccbLgW2Y.s:235    .text:00000000000000ec _ZN5Riscv11printStringEPKc
     /tmp/ccbLgW2Y.s:238    .text:00000000000000ec .L0 
     /tmp/ccbLgW2Y.s:240    .text:00000000000000ec .L0 
     /tmp/ccbLgW2Y.s:241    .text:00000000000000f0 .L0 
     /tmp/ccbLgW2Y.s:246    .text:0000000000000100 .L0 
     /tmp/ccbLgW2Y.s:247    .text:0000000000000100 .L0 
     /tmp/ccbLgW2Y.s:248    .text:0000000000000100 .L0 
     /tmp/ccbLgW2Y.s:249    .text:0000000000000100 .L0 
     /tmp/ccbLgW2Y.s:251    .text:0000000000000104 .L0 
     /tmp/ccbLgW2Y.s:256    .text:0000000000000108 .L0 
     /tmp/ccbLgW2Y.s:257    .text:0000000000000108 .L0 
     /tmp/ccbLgW2Y.s:258    .text:0000000000000108 .L0 
  src/../h/Riscv.hpp:189    .text:0000000000000108 .L0 
     /tmp/ccbLgW2Y.s:266    .text:0000000000000110 .L0 
     /tmp/ccbLgW2Y.s:267    .text:0000000000000110 .L0 
     /tmp/ccbLgW2Y.s:274    .text:0000000000000114 .L0 
     /tmp/ccbLgW2Y.s:275    .text:0000000000000114 .L0 
     /tmp/ccbLgW2Y.s:276    .text:0000000000000114 .L0 
GAS LISTING /tmp/ccbLgW2Y.s 			page 43


     /tmp/ccbLgW2Y.s:287    .text:000000000000011c .L0 
     /tmp/ccbLgW2Y.s:288    .text:000000000000011c .L0 
     /tmp/ccbLgW2Y.s:289    .text:000000000000011c .L0 
     /tmp/ccbLgW2Y.s:291    .text:0000000000000120 .L0 
     /tmp/ccbLgW2Y.s:293    .text:0000000000000124 .L0 
     /tmp/ccbLgW2Y.s:294    .text:0000000000000124 .L0 
     /tmp/ccbLgW2Y.s:297    .text:000000000000012c .L0 
     /tmp/ccbLgW2Y.s:298    .text:000000000000012c .L0 
     /tmp/ccbLgW2Y.s:301    .text:0000000000000130 .L0 
     /tmp/ccbLgW2Y.s:304    .text:0000000000000134 .L0 
     /tmp/ccbLgW2Y.s:305    .text:0000000000000134 .L0 
     /tmp/ccbLgW2Y.s:308    .text:0000000000000138 .L0 
     /tmp/ccbLgW2Y.s:314    .text:0000000000000140 .L0 
  src/../h/Riscv.hpp:180    .text:0000000000000140 .L0 
     /tmp/ccbLgW2Y.s:324    .text:0000000000000144 .L0 
     /tmp/ccbLgW2Y.s:325    .text:0000000000000148 .L0 
     /tmp/ccbLgW2Y.s:327    .text:000000000000014c .L0 
     /tmp/ccbLgW2Y.s:328    .text:000000000000014c .L0 
     /tmp/ccbLgW2Y.s:330    .text:0000000000000150 .L0 
     /tmp/ccbLgW2Y.s:333    .text:0000000000000154 .L0 
     /tmp/ccbLgW2Y.s:335    .text:0000000000000158 .L0 
     /tmp/ccbLgW2Y.s:337    .text:000000000000015c .L0 
     /tmp/ccbLgW2Y.s:343    .text:000000000000015c _ZN5Riscv12printIntegerEm
     /tmp/ccbLgW2Y.s:346    .text:000000000000015c .L0 
     /tmp/ccbLgW2Y.s:348    .text:000000000000015c .L0 
     /tmp/ccbLgW2Y.s:349    .text:0000000000000160 .L0 
     /tmp/ccbLgW2Y.s:354    .text:0000000000000170 .L0 
     /tmp/ccbLgW2Y.s:355    .text:0000000000000170 .L0 
     /tmp/ccbLgW2Y.s:356    .text:0000000000000170 .L0 
     /tmp/ccbLgW2Y.s:357    .text:0000000000000170 .L0 
     /tmp/ccbLgW2Y.s:359    .text:0000000000000174 .L0 
     /tmp/ccbLgW2Y.s:363    .text:0000000000000174 .L0 
     /tmp/ccbLgW2Y.s:364    .text:0000000000000174 .L0 
     /tmp/ccbLgW2Y.s:365    .text:0000000000000174 .L0 
  src/../h/Riscv.hpp:189    .text:0000000000000174 .L0 
     /tmp/ccbLgW2Y.s:373    .text:000000000000017c .L0 
     /tmp/ccbLgW2Y.s:374    .text:000000000000017c .L0 
     /tmp/ccbLgW2Y.s:381    .text:0000000000000180 .L0 
     /tmp/ccbLgW2Y.s:382    .text:0000000000000180 .L0 
     /tmp/ccbLgW2Y.s:383    .text:0000000000000180 .L0 
     /tmp/ccbLgW2Y.s:393    .text:0000000000000188 .L0 
     /tmp/ccbLgW2Y.s:394    .text:0000000000000188 .L0 
     /tmp/ccbLgW2Y.s:395    .text:0000000000000188 .L0 
     /tmp/ccbLgW2Y.s:396    .text:0000000000000188 .L0 
     /tmp/ccbLgW2Y.s:397    .text:0000000000000188 .L0 
     /tmp/ccbLgW2Y.s:398    .text:0000000000000188 .L0 
     /tmp/ccbLgW2Y.s:399    .text:0000000000000188 .L0 
     /tmp/ccbLgW2Y.s:400    .text:0000000000000188 .L0 
     /tmp/ccbLgW2Y.s:403    .text:000000000000018c .L0 
     /tmp/ccbLgW2Y.s:404    .text:000000000000018c .L0 
     /tmp/ccbLgW2Y.s:408    .text:0000000000000190 .L0 
     /tmp/ccbLgW2Y.s:409    .text:0000000000000190 .L0 
     /tmp/ccbLgW2Y.s:410    .text:0000000000000190 .L0 
     /tmp/ccbLgW2Y.s:414    .text:0000000000000198 .L0 
     /tmp/ccbLgW2Y.s:420    .text:00000000000001b0 .L0 
     /tmp/ccbLgW2Y.s:426    .text:00000000000001c0 .L0 
     /tmp/ccbLgW2Y.s:428    .text:00000000000001c4 .L0 
GAS LISTING /tmp/ccbLgW2Y.s 			page 44


     /tmp/ccbLgW2Y.s:431    .text:00000000000001c8 .L0 
     /tmp/ccbLgW2Y.s:436    .text:00000000000001d0 .L0 
     /tmp/ccbLgW2Y.s:437    .text:00000000000001d0 .L0 
     /tmp/ccbLgW2Y.s:441    .text:00000000000001d8 .L0 
     /tmp/ccbLgW2Y.s:442    .text:00000000000001d8 .L0 
     /tmp/ccbLgW2Y.s:450    .text:00000000000001f0 .L0 
     /tmp/ccbLgW2Y.s:451    .text:00000000000001f0 .L0 
     /tmp/ccbLgW2Y.s:455    .text:00000000000001fc .L0 
     /tmp/ccbLgW2Y.s:456    .text:00000000000001fc .L0 
     /tmp/ccbLgW2Y.s:459    .text:0000000000000200 .L0 
     /tmp/ccbLgW2Y.s:465    .text:0000000000000208 .L0 
  src/../h/Riscv.hpp:180    .text:0000000000000208 .L0 
     /tmp/ccbLgW2Y.s:475    .text:000000000000020c .L0 
     /tmp/ccbLgW2Y.s:476    .text:0000000000000210 .L0 
     /tmp/ccbLgW2Y.s:478    .text:0000000000000214 .L0 
     /tmp/ccbLgW2Y.s:479    .text:0000000000000214 .L0 
     /tmp/ccbLgW2Y.s:481    .text:0000000000000218 .L0 
     /tmp/ccbLgW2Y.s:483    .text:000000000000021c .L0 
     /tmp/ccbLgW2Y.s:485    .text:0000000000000220 .L0 
     /tmp/ccbLgW2Y.s:487    .text:0000000000000224 .L0 
     /tmp/ccbLgW2Y.s:493    .text:0000000000000224 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccbLgW2Y.s:496    .text:0000000000000224 .L0 
     /tmp/ccbLgW2Y.s:497    .text:0000000000000224 .L0 
     /tmp/ccbLgW2Y.s:498    .text:0000000000000228 .L0 
     /tmp/ccbLgW2Y.s:502    .text:0000000000000234 .L0 
     /tmp/ccbLgW2Y.s:503    .text:0000000000000234 .L0 
     /tmp/ccbLgW2Y.s:504    .text:0000000000000234 .L0 
     /tmp/ccbLgW2Y.s:506    .text:0000000000000238 .L0 
     /tmp/ccbLgW2Y.s:508    .text:0000000000000238 .L0 
       src/Riscv.cpp:94     .text:0000000000000238 .L0 
     /tmp/ccbLgW2Y.s:519    .text:0000000000000248 .L0 
     /tmp/ccbLgW2Y.s:520    .text:0000000000000248 .L0 
     /tmp/ccbLgW2Y.s:521    .text:0000000000000248 .L0 
  src/../h/Riscv.hpp:110    .text:0000000000000248 .L0 
     /tmp/ccbLgW2Y.s:529    .text:0000000000000250 .L0 
     /tmp/ccbLgW2Y.s:530    .text:0000000000000250 .L0 
     /tmp/ccbLgW2Y.s:536    .text:0000000000000254 .L0 
     /tmp/ccbLgW2Y.s:550    .text:0000000000000280 .L0 
     /tmp/ccbLgW2Y.s:551    .text:0000000000000280 .L0 
     /tmp/ccbLgW2Y.s:554    .text:0000000000000280 .L0 
     /tmp/ccbLgW2Y.s:555    .text:0000000000000280 .L0 
     /tmp/ccbLgW2Y.s:556    .text:0000000000000280 .L0 
       src/Riscv.cpp:167    .text:0000000000000280 .L0 
     /tmp/ccbLgW2Y.s:566    .text:0000000000000284 .L0 
     /tmp/ccbLgW2Y.s:567    .text:0000000000000284 .L0 
     /tmp/ccbLgW2Y.s:568    .text:0000000000000284 .L0 
  src/../h/Riscv.hpp:120    .text:0000000000000284 .L0 
     /tmp/ccbLgW2Y.s:576    .text:000000000000028c .L0 
     /tmp/ccbLgW2Y.s:577    .text:000000000000028c .L0 
     /tmp/ccbLgW2Y.s:581    .text:0000000000000290 .L0 
     /tmp/ccbLgW2Y.s:583    .text:0000000000000294 .L0 
     /tmp/ccbLgW2Y.s:587    .text:0000000000000298 .L0 
     /tmp/ccbLgW2Y.s:588    .text:0000000000000298 .L0 
     /tmp/ccbLgW2Y.s:589    .text:0000000000000298 .L0 
  src/../h/Riscv.hpp:189    .text:0000000000000298 .L0 
     /tmp/ccbLgW2Y.s:597    .text:00000000000002a0 .L0 
     /tmp/ccbLgW2Y.s:598    .text:00000000000002a0 .L0 
GAS LISTING /tmp/ccbLgW2Y.s 			page 45


     /tmp/ccbLgW2Y.s:602    .text:00000000000002a4 .L0 
     /tmp/ccbLgW2Y.s:604    .text:00000000000002a8 .L0 
     /tmp/ccbLgW2Y.s:689    .text:00000000000002cc .L0 
     /tmp/ccbLgW2Y.s:695    .text:00000000000002dc .L0 
     /tmp/ccbLgW2Y.s:698    .text:00000000000002dc .L0 
     /tmp/ccbLgW2Y.s:699    .text:00000000000002dc .L0 
     /tmp/ccbLgW2Y.s:700    .text:00000000000002dc .L0 
     /tmp/ccbLgW2Y.s:705    .text:00000000000002e8 .L0 
       src/Riscv.cpp:126    .text:00000000000002e8 .L0 
     /tmp/ccbLgW2Y.s:711    .text:00000000000002ec .L0 
       src/Riscv.cpp:127    .text:00000000000002ec .L0 
     /tmp/ccbLgW2Y.s:716    .text:00000000000002f0 .L0 
     /tmp/ccbLgW2Y.s:717    .text:00000000000002f0 .L0 
       src/Riscv.cpp:129    .text:00000000000002f0 .L0 
     /tmp/ccbLgW2Y.s:725    .text:00000000000002f4 .L0 
     /tmp/ccbLgW2Y.s:726    .text:00000000000002f4 .L0 
     /tmp/ccbLgW2Y.s:729    .text:00000000000002f8 .L0 
     /tmp/ccbLgW2Y.s:732    .text:00000000000002fc .L0 
     /tmp/ccbLgW2Y.s:733    .text:00000000000002fc .L0 
     /tmp/ccbLgW2Y.s:737    .text:0000000000000308 .L0 
       src/Riscv.cpp:133    .text:0000000000000308 .L0 
     /tmp/ccbLgW2Y.s:743    .text:000000000000030c .L0 
       src/Riscv.cpp:134    .text:000000000000030c .L0 
     /tmp/ccbLgW2Y.s:748    .text:0000000000000310 .L0 
     /tmp/ccbLgW2Y.s:749    .text:0000000000000310 .L0 
       src/Riscv.cpp:136    .text:0000000000000310 .L0 
     /tmp/ccbLgW2Y.s:757    .text:0000000000000318 .L0 
     /tmp/ccbLgW2Y.s:758    .text:0000000000000318 .L0 
     /tmp/ccbLgW2Y.s:762    .text:0000000000000324 .L0 
     /tmp/ccbLgW2Y.s:768    .text:0000000000000328 .L0 
     /tmp/ccbLgW2Y.s:769    .text:0000000000000328 .L0 
     /tmp/ccbLgW2Y.s:774    .text:0000000000000338 .L0 
     /tmp/ccbLgW2Y.s:780    .text:000000000000033c .L0 
     /tmp/ccbLgW2Y.s:783    .text:000000000000033c .L0 
     /tmp/ccbLgW2Y.s:786    .text:000000000000033c .L0 
     /tmp/ccbLgW2Y.s:787    .text:000000000000033c .L0 
     /tmp/ccbLgW2Y.s:788    .text:000000000000033c .L0 
  src/../h/Riscv.hpp:120    .text:000000000000033c .L0 
     /tmp/ccbLgW2Y.s:797    .text:0000000000000344 .L0 
     /tmp/ccbLgW2Y.s:798    .text:0000000000000344 .L0 
     /tmp/ccbLgW2Y.s:802    .text:0000000000000348 .L0 
     /tmp/ccbLgW2Y.s:806    .text:000000000000034c .L0 
     /tmp/ccbLgW2Y.s:807    .text:000000000000034c .L0 
     /tmp/ccbLgW2Y.s:808    .text:000000000000034c .L0 
  src/../h/Riscv.hpp:189    .text:000000000000034c .L0 
     /tmp/ccbLgW2Y.s:816    .text:0000000000000354 .L0 
     /tmp/ccbLgW2Y.s:817    .text:0000000000000354 .L0 
     /tmp/ccbLgW2Y.s:821    .text:0000000000000358 .L0 
     /tmp/ccbLgW2Y.s:826    .text:000000000000035c .L0 
     /tmp/ccbLgW2Y.s:827    .text:000000000000035c .L0 
     /tmp/ccbLgW2Y.s:828    .text:000000000000035c .L0 
     /tmp/ccbLgW2Y.s:838    .text:0000000000000364 .L0 
     /tmp/ccbLgW2Y.s:839    .text:0000000000000364 .L0 
     /tmp/ccbLgW2Y.s:844    .text:0000000000000378 .L0 
     /tmp/ccbLgW2Y.s:845    .text:0000000000000378 .L0 
     /tmp/ccbLgW2Y.s:848    .text:0000000000000380 .L0 
     /tmp/ccbLgW2Y.s:849    .text:0000000000000380 .L0 
GAS LISTING /tmp/ccbLgW2Y.s 			page 46


     /tmp/ccbLgW2Y.s:854    .text:0000000000000394 .L0 
     /tmp/ccbLgW2Y.s:855    .text:0000000000000394 .L0 
     /tmp/ccbLgW2Y.s:858    .text:000000000000039c .L0 
     /tmp/ccbLgW2Y.s:859    .text:000000000000039c .L0 
     /tmp/ccbLgW2Y.s:866    .text:00000000000003a8 .L0 
     /tmp/ccbLgW2Y.s:867    .text:00000000000003a8 .L0 
     /tmp/ccbLgW2Y.s:872    .text:00000000000003ac .L0 
     /tmp/ccbLgW2Y.s:874    .text:00000000000003b0 .L0 
     /tmp/ccbLgW2Y.s:877    .text:00000000000003b4 .L0 
     /tmp/ccbLgW2Y.s:878    .text:00000000000003b4 .L0 
     /tmp/ccbLgW2Y.s:883    .text:00000000000003b8 .L0 
  src/../h/Riscv.hpp:194    .text:00000000000003b8 .L0 
     /tmp/ccbLgW2Y.s:893    .text:00000000000003bc .L0 
     /tmp/ccbLgW2Y.s:894    .text:00000000000003bc .L0 
     /tmp/ccbLgW2Y.s:899    .text:00000000000003c0 .L0 
  src/../h/Riscv.hpp:125    .text:00000000000003c0 .L0 
     /tmp/ccbLgW2Y.s:906    .text:00000000000003c4 .L0 
     /tmp/ccbLgW2Y.s:912    .text:00000000000003c8 .L0 
     /tmp/ccbLgW2Y.s:913    .text:00000000000003c8 .L0 
     /tmp/ccbLgW2Y.s:915    .text:00000000000003cc .L0 
     /tmp/ccbLgW2Y.s:916    .text:00000000000003cc .L0 
     /tmp/ccbLgW2Y.s:926    .text:00000000000003d8 .L0 
     /tmp/ccbLgW2Y.s:927    .text:00000000000003d8 .L0 
     /tmp/ccbLgW2Y.s:931    .text:00000000000003e8 .L0 
     /tmp/ccbLgW2Y.s:932    .text:00000000000003e8 .L0 
     /tmp/ccbLgW2Y.s:937    .text:00000000000003f4 .L0 
     /tmp/ccbLgW2Y.s:938    .text:00000000000003f4 .L0 
     /tmp/ccbLgW2Y.s:949    .text:0000000000000404 .L0 
     /tmp/ccbLgW2Y.s:950    .text:0000000000000404 .L0 
     /tmp/ccbLgW2Y.s:951    .text:0000000000000404 .L0 
     /tmp/ccbLgW2Y.s:955    .text:000000000000040c .L0 
     /tmp/ccbLgW2Y.s:956    .text:000000000000040c .L0 
     /tmp/ccbLgW2Y.s:957    .text:000000000000040c .L0 
     /tmp/ccbLgW2Y.s:962    .text:0000000000000410 .L0 
  src/../h/Riscv.hpp:194    .text:0000000000000410 .L0 
     /tmp/ccbLgW2Y.s:972    .text:0000000000000414 .L0 
     /tmp/ccbLgW2Y.s:973    .text:0000000000000414 .L0 
     /tmp/ccbLgW2Y.s:978    .text:0000000000000418 .L0 
  src/../h/Riscv.hpp:125    .text:0000000000000418 .L0 
     /tmp/ccbLgW2Y.s:991    .text:000000000000041c .L0 
     /tmp/ccbLgW2Y.s:992    .text:0000000000000420 .L0 
     /tmp/ccbLgW2Y.s:993    .text:0000000000000420 .L0 
     /tmp/ccbLgW2Y.s:995    .text:0000000000000424 .L0 
     /tmp/ccbLgW2Y.s:996    .text:0000000000000424 .L0 
     /tmp/ccbLgW2Y.s:998    .text:0000000000000428 .L0 
     /tmp/ccbLgW2Y.s:1000   .text:000000000000042c .L0 
     /tmp/ccbLgW2Y.s:1003   .text:0000000000000430 .L0 
     /tmp/ccbLgW2Y.s:1007   .text:0000000000000430 .L0 
     /tmp/ccbLgW2Y.s:1008   .text:0000000000000430 .L0 
     /tmp/ccbLgW2Y.s:1009   .text:0000000000000430 .L0 
     /tmp/ccbLgW2Y.s:1012   .text:0000000000000438 .L0 
     /tmp/ccbLgW2Y.s:1015   .text:000000000000043c .L0 
     /tmp/ccbLgW2Y.s:1016   .text:000000000000043c .L0 
     /tmp/ccbLgW2Y.s:1017   .text:000000000000043c .L0 
     /tmp/ccbLgW2Y.s:1020   .text:0000000000000444 .L0 
     /tmp/ccbLgW2Y.s:1023   .text:0000000000000448 .L0 
     /tmp/ccbLgW2Y.s:1024   .text:0000000000000448 .L0 
GAS LISTING /tmp/ccbLgW2Y.s 			page 47


     /tmp/ccbLgW2Y.s:1025   .text:0000000000000448 .L0 
     /tmp/ccbLgW2Y.s:1028   .text:0000000000000450 .L0 
     /tmp/ccbLgW2Y.s:1031   .text:0000000000000454 .L0 
     /tmp/ccbLgW2Y.s:1032   .text:0000000000000454 .L0 
     /tmp/ccbLgW2Y.s:1033   .text:0000000000000454 .L0 
     /tmp/ccbLgW2Y.s:1036   .text:000000000000045c .L0 
     /tmp/ccbLgW2Y.s:1039   .text:0000000000000460 .L0 
     /tmp/ccbLgW2Y.s:1040   .text:0000000000000460 .L0 
     /tmp/ccbLgW2Y.s:1041   .text:0000000000000460 .L0 
     /tmp/ccbLgW2Y.s:1044   .text:0000000000000468 .L0 
     /tmp/ccbLgW2Y.s:1047   .text:000000000000046c .L0 
     /tmp/ccbLgW2Y.s:1048   .text:000000000000046c .L0 
     /tmp/ccbLgW2Y.s:1049   .text:000000000000046c .L0 
     /tmp/ccbLgW2Y.s:1052   .text:0000000000000474 .L0 
     /tmp/ccbLgW2Y.s:1055   .text:0000000000000478 .L0 
     /tmp/ccbLgW2Y.s:1056   .text:0000000000000478 .L0 
     /tmp/ccbLgW2Y.s:1057   .text:0000000000000478 .L0 
     /tmp/ccbLgW2Y.s:1060   .text:0000000000000480 .L0 
     /tmp/ccbLgW2Y.s:1063   .text:0000000000000484 .L0 
     /tmp/ccbLgW2Y.s:1064   .text:0000000000000484 .L0 
     /tmp/ccbLgW2Y.s:1065   .text:0000000000000484 .L0 
     /tmp/ccbLgW2Y.s:1068   .text:000000000000048c .L0 
     /tmp/ccbLgW2Y.s:1071   .text:0000000000000490 .L0 
     /tmp/ccbLgW2Y.s:1072   .text:0000000000000490 .L0 
     /tmp/ccbLgW2Y.s:1073   .text:0000000000000490 .L0 
     /tmp/ccbLgW2Y.s:1076   .text:0000000000000498 .L0 
     /tmp/ccbLgW2Y.s:1079   .text:000000000000049c .L0 
     /tmp/ccbLgW2Y.s:1080   .text:000000000000049c .L0 
     /tmp/ccbLgW2Y.s:1081   .text:000000000000049c .L0 
     /tmp/ccbLgW2Y.s:1084   .text:00000000000004a4 .L0 
     /tmp/ccbLgW2Y.s:1087   .text:00000000000004a8 .L0 
     /tmp/ccbLgW2Y.s:1088   .text:00000000000004a8 .L0 
     /tmp/ccbLgW2Y.s:1089   .text:00000000000004a8 .L0 
     /tmp/ccbLgW2Y.s:1092   .text:00000000000004b0 .L0 
     /tmp/ccbLgW2Y.s:1095   .text:00000000000004b4 .L0 
     /tmp/ccbLgW2Y.s:1096   .text:00000000000004b4 .L0 
     /tmp/ccbLgW2Y.s:1097   .text:00000000000004b4 .L0 
     /tmp/ccbLgW2Y.s:1100   .text:00000000000004bc .L0 
     /tmp/ccbLgW2Y.s:1103   .text:00000000000004c0 .L0 
     /tmp/ccbLgW2Y.s:1104   .text:00000000000004c0 .L0 
     /tmp/ccbLgW2Y.s:1105   .text:00000000000004c0 .L0 
     /tmp/ccbLgW2Y.s:1108   .text:00000000000004c8 .L0 
     /tmp/ccbLgW2Y.s:1111   .text:00000000000004cc .L0 
     /tmp/ccbLgW2Y.s:1122   .text:00000000000004cc _ZN5Riscv10kernelMainEv
     /tmp/ccbLgW2Y.s:1125   .text:00000000000004cc .L0 
     /tmp/ccbLgW2Y.s:6404   .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/ccbLgW2Y.s:1128   .text:00000000000004cc .L0 
     /tmp/ccbLgW2Y.s:1129   .text:00000000000004d0 .L0 
     /tmp/ccbLgW2Y.s:1134   .text:00000000000004e0 .L0 
     /tmp/ccbLgW2Y.s:1135   .text:00000000000004e0 .L0 
     /tmp/ccbLgW2Y.s:1136   .text:00000000000004e0 .L0 
     /tmp/ccbLgW2Y.s:1137   .text:00000000000004e0 .L0 
     /tmp/ccbLgW2Y.s:1139   .text:00000000000004e4 .L0 
     /tmp/ccbLgW2Y.s:1142   .text:00000000000004e4 .L0 
     /tmp/ccbLgW2Y.s:1143   .text:00000000000004e4 .L0 
     /tmp/ccbLgW2Y.s:1146   .text:00000000000004ec .L0 
     /tmp/ccbLgW2Y.s:1147   .text:00000000000004ec .L0 
GAS LISTING /tmp/ccbLgW2Y.s 			page 48


     /tmp/ccbLgW2Y.s:1150   .text:00000000000004f4 .L0 
     /tmp/ccbLgW2Y.s:1151   .text:00000000000004f4 .L0 
     /tmp/ccbLgW2Y.s:1156   .text:0000000000000504 .L0 
     /tmp/ccbLgW2Y.s:1170   .text:0000000000000530 .L0 
     /tmp/ccbLgW2Y.s:1171   .text:0000000000000530 .L0 
     /tmp/ccbLgW2Y.s:1177   .text:000000000000053c .L0 
     /tmp/ccbLgW2Y.s:1178   .text:000000000000053c .L0 
     /tmp/ccbLgW2Y.s:1179   .text:000000000000053c .L0 
     /tmp/ccbLgW2Y.s:1183   .text:0000000000000548 .L0 
     /tmp/ccbLgW2Y.s:1185   .text:000000000000054c .L0 
     /tmp/ccbLgW2Y.s:1186   .text:000000000000054c .L0 
     /tmp/ccbLgW2Y.s:1189   .text:0000000000000554 .L0 
     /tmp/ccbLgW2Y.s:1192   .text:0000000000000558 .L0 
     /tmp/ccbLgW2Y.s:1193   .text:0000000000000558 .L0 
     /tmp/ccbLgW2Y.s:1196   .text:0000000000000560 .L0 
     /tmp/ccbLgW2Y.s:1197   .text:0000000000000560 .L0 
     /tmp/ccbLgW2Y.s:1200   .text:0000000000000568 .L0 
     /tmp/ccbLgW2Y.s:1201   .text:0000000000000568 .L0 
     /tmp/ccbLgW2Y.s:1206   .text:0000000000000578 .L0 
     /tmp/ccbLgW2Y.s:1207   .text:000000000000057c .L0 
     /tmp/ccbLgW2Y.s:1208   .text:000000000000057c .L0 
     /tmp/ccbLgW2Y.s:1210   .text:0000000000000580 .L0 
     /tmp/ccbLgW2Y.s:1211   .text:0000000000000580 .L0 
     /tmp/ccbLgW2Y.s:1213   .text:0000000000000584 .L0 
     /tmp/ccbLgW2Y.s:1216   .text:0000000000000588 .L0 
     /tmp/ccbLgW2Y.s:1218   .text:000000000000058c .L0 
     /tmp/ccbLgW2Y.s:1221   .text:0000000000000590 .L0 
     /tmp/ccbLgW2Y.s:1224   .text:0000000000000594 .L0 
     /tmp/ccbLgW2Y.s:1232   .text:00000000000005ac .L0 
     /tmp/ccbLgW2Y.s:1262   .text:00000000000005ac _ZN5Riscv14myTestsWrapperEPv
     /tmp/ccbLgW2Y.s:1265   .text:00000000000005ac .L0 
     /tmp/ccbLgW2Y.s:1267   .text:00000000000005ac .L0 
     /tmp/ccbLgW2Y.s:1268   .text:00000000000005b0 .L0 
     /tmp/ccbLgW2Y.s:1271   .text:00000000000005b8 .L0 
     /tmp/ccbLgW2Y.s:1272   .text:00000000000005b8 .L0 
     /tmp/ccbLgW2Y.s:1274   .text:00000000000005bc .L0 
     /tmp/ccbLgW2Y.s:1276   .text:00000000000005bc .L0 
     /tmp/ccbLgW2Y.s:1277   .text:00000000000005bc .L0 
     /tmp/ccbLgW2Y.s:1280   .text:00000000000005c4 .L0 
     /tmp/ccbLgW2Y.s:1281   .text:00000000000005c8 .L0 
     /tmp/ccbLgW2Y.s:1283   .text:00000000000005cc .L0 
     /tmp/ccbLgW2Y.s:1284   .text:00000000000005cc .L0 
     /tmp/ccbLgW2Y.s:1286   .text:00000000000005d0 .L0 
     /tmp/ccbLgW2Y.s:1288   .text:00000000000005d4 .L0 
     /tmp/ccbLgW2Y.s:1294   .text:00000000000005d4 _ZN5Riscv22disableTimerInterruptsEv
     /tmp/ccbLgW2Y.s:1297   .text:00000000000005d4 .L0 
     /tmp/ccbLgW2Y.s:1298   .text:00000000000005d4 .L0 
     /tmp/ccbLgW2Y.s:1299   .text:00000000000005d8 .L0 
     /tmp/ccbLgW2Y.s:1301   .text:00000000000005dc .L0 
     /tmp/ccbLgW2Y.s:1303   .text:00000000000005e0 .L0 
     /tmp/ccbLgW2Y.s:1306   .text:00000000000005e0 .L0 
     /tmp/ccbLgW2Y.s:1307   .text:00000000000005e0 .L0 
     /tmp/ccbLgW2Y.s:1308   .text:00000000000005e0 .L0 
     /tmp/ccbLgW2Y.s:1315   .text:00000000000005e8 .L0 
     /tmp/ccbLgW2Y.s:1316   .text:00000000000005ec .L0 
     /tmp/ccbLgW2Y.s:1317   .text:00000000000005ec .L0 
     /tmp/ccbLgW2Y.s:1319   .text:00000000000005f0 .L0 
GAS LISTING /tmp/ccbLgW2Y.s 			page 49


     /tmp/ccbLgW2Y.s:1321   .text:00000000000005f4 .L0 
     /tmp/ccbLgW2Y.s:1327   .text:00000000000005f4 _ZN5Riscv9idleRiscvEPv
     /tmp/ccbLgW2Y.s:1330   .text:00000000000005f4 .L0 
     /tmp/ccbLgW2Y.s:1332   .text:00000000000005f4 .L0 
     /tmp/ccbLgW2Y.s:1333   .text:00000000000005f8 .L0 
     /tmp/ccbLgW2Y.s:1335   .text:00000000000005fc .L0 
     /tmp/ccbLgW2Y.s:1337   .text:0000000000000600 .L0 
     /tmp/ccbLgW2Y.s:1340   .text:0000000000000600 .L0 
     /tmp/ccbLgW2Y.s:1341   .text:0000000000000600 .L0 
     /tmp/ccbLgW2Y.s:1342   .text:0000000000000604 .L0 
     /tmp/ccbLgW2Y.s:1348   .text:0000000000000604 _ZN5Riscv13w_a0_sscratchEv
     /tmp/ccbLgW2Y.s:1351   .text:0000000000000604 .L0 
     /tmp/ccbLgW2Y.s:1352   .text:0000000000000604 .L0 
     /tmp/ccbLgW2Y.s:1353   .text:0000000000000608 .L0 
     /tmp/ccbLgW2Y.s:1355   .text:000000000000060c .L0 
     /tmp/ccbLgW2Y.s:1357   .text:0000000000000610 .L0 
     /tmp/ccbLgW2Y.s:1359   .text:0000000000000610 .L0 
     /tmp/ccbLgW2Y.s:1360   .text:0000000000000610 .L0 
       src/Riscv.cpp:277    .text:0000000000000610 .L0 
     /tmp/ccbLgW2Y.s:1367   .text:0000000000000614 .L0 
       src/Riscv.cpp:278    .text:0000000000000614 .L0 
     /tmp/ccbLgW2Y.s:1372   .text:0000000000000618 .L0 
       src/Riscv.cpp:279    .text:0000000000000618 .L0 
     /tmp/ccbLgW2Y.s:1377   .text:000000000000061c .L0 
       src/Riscv.cpp:280    .text:000000000000061c .L0 
     /tmp/ccbLgW2Y.s:1383   .text:0000000000000620 .L0 
     /tmp/ccbLgW2Y.s:1384   .text:0000000000000624 .L0 
     /tmp/ccbLgW2Y.s:1385   .text:0000000000000624 .L0 
     /tmp/ccbLgW2Y.s:1387   .text:0000000000000628 .L0 
     /tmp/ccbLgW2Y.s:1389   .text:000000000000062c .L0 
     /tmp/ccbLgW2Y.s:1398   .bss:0000000000000000 _ZN5Riscv9totalTimeE
     /tmp/ccbLgW2Y.s:1395   .bss:0000000000000000 .LANCHOR1
     /tmp/ccbLgW2Y.s:1402   .rodata:0000000000000110 .LANCHOR0
     /tmp/ccbLgW2Y.s:1405   .rodata:0000000000000110 _ZZN5Riscv12printIntegerEmE6digits
     /tmp/ccbLgW2Y.s:1418   .text:000000000000062c .L0 
     /tmp/ccbLgW2Y.s:55     .text:0000000000000038 .L0 
     /tmp/ccbLgW2Y.s:416    .text:00000000000001a0 .L0 
     /tmp/ccbLgW2Y.s:514    .text:000000000000023c .L0 
     /tmp/ccbLgW2Y.s:616    .rodata:0000000000000000 .L32
     /tmp/ccbLgW2Y.s:608    .text:00000000000002b4 .L0 
     /tmp/ccbLgW2Y.s:700    .text:00000000000002dc .L0 
     /tmp/ccbLgW2Y.s:733    .text:00000000000002fc .L0 
     /tmp/ccbLgW2Y.s:758    .text:0000000000000318 .L0 
     /tmp/ccbLgW2Y.s:839    .text:0000000000000364 .L0 
     /tmp/ccbLgW2Y.s:849    .text:0000000000000380 .L0 
     /tmp/ccbLgW2Y.s:859    .text:000000000000039c .L0 
     /tmp/ccbLgW2Y.s:928    .text:00000000000003dc .L0 
     /tmp/ccbLgW2Y.s:1164   .text:0000000000000520 .L0 
     /tmp/ccbLgW2Y.s:1116   .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccbLgW2Y.s:1201   .text:0000000000000568 .L0 
     /tmp/ccbLgW2Y.s:302    .text:0000000000000134 .L14
     /tmp/ccbLgW2Y.s:283    .text:000000000000011c .L15
     /tmp/ccbLgW2Y.s:406    .text:0000000000000190 .L18
     /tmp/ccbLgW2Y.s:448    .text:00000000000001f0 .L19
     /tmp/ccbLgW2Y.s:434    .text:00000000000001d0 .L20
     /tmp/ccbLgW2Y.s:776    .text:000000000000033c .L23
     /tmp/ccbLgW2Y.s:686    .text:00000000000002cc .L24
GAS LISTING /tmp/ccbLgW2Y.s 			page 50


     /tmp/ccbLgW2Y.s:985    .text:000000000000041c .L22
     /tmp/ccbLgW2Y.s:954    .text:000000000000040c .L30
     /tmp/ccbLgW2Y.s:764    .text:0000000000000328 .L29
     /tmp/ccbLgW2Y.s:920    .text:00000000000003d8 .L48
     /tmp/ccbLgW2Y.s:908    .text:00000000000003c8 .L49
     /tmp/ccbLgW2Y.s:875    .text:00000000000003b4 .L28
     /tmp/ccbLgW2Y.s:1190   .text:0000000000000558 .L51
     /tmp/ccbLgW2Y.s:1175   .text:000000000000053c .L52
     /tmp/ccbLgW2Y.s:1338   .text:0000000000000600 .L62
     /tmp/ccbLgW2Y.s:943    .text:0000000000000404 .L45
     /tmp/ccbLgW2Y.s:1002   .text:0000000000000430 .L44
     /tmp/ccbLgW2Y.s:1021   .text:0000000000000448 .L43
     /tmp/ccbLgW2Y.s:1045   .text:000000000000046c .L42
     /tmp/ccbLgW2Y.s:1037   .text:0000000000000460 .L41
     /tmp/ccbLgW2Y.s:1013   .text:000000000000043c .L40
     /tmp/ccbLgW2Y.s:1029   .text:0000000000000454 .L39
     /tmp/ccbLgW2Y.s:1061   .text:0000000000000484 .L38
     /tmp/ccbLgW2Y.s:1085   .text:00000000000004a8 .L37
     /tmp/ccbLgW2Y.s:1069   .text:0000000000000490 .L36
     /tmp/ccbLgW2Y.s:1077   .text:000000000000049c .L35
     /tmp/ccbLgW2Y.s:1053   .text:0000000000000478 .L34
     /tmp/ccbLgW2Y.s:1093   .text:00000000000004b4 .L33
     /tmp/ccbLgW2Y.s:1101   .text:00000000000004c0 .L31
     /tmp/ccbLgW2Y.s:1141   .text:00000000000004e4 .LEHB0
     /tmp/ccbLgW2Y.s:1123   .text:00000000000004cc .LFB34
     /tmp/ccbLgW2Y.s:1159   .text:0000000000000510 .LEHE0
     /tmp/ccbLgW2Y.s:1165   .text:0000000000000528 .LEHB1
     /tmp/ccbLgW2Y.s:1168   .text:0000000000000530 .LEHE1
     /tmp/ccbLgW2Y.s:1220   .text:0000000000000590 .L54
     /tmp/ccbLgW2Y.s:1172   .text:0000000000000534 .LEHB2
     /tmp/ccbLgW2Y.s:1204   .text:0000000000000578 .LEHE2
     /tmp/ccbLgW2Y.s:1228   .text:00000000000005a4 .LEHB3
     /tmp/ccbLgW2Y.s:1231   .text:00000000000005ac .LEHE3
     /tmp/ccbLgW2Y.s:4213   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccbLgW2Y.s:5832   .debug_str:00000000000002b3 .LASF308
     /tmp/ccbLgW2Y.s:5868   .debug_str:0000000000000489 .LASF309
     /tmp/ccbLgW2Y.s:6286   .debug_str:0000000000001221 .LASF310
     /tmp/ccbLgW2Y.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccbLgW2Y.s:1408   .text:000000000000062c .Letext0
     /tmp/ccbLgW2Y.s:5760   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccbLgW2Y.s:5984   .debug_str:0000000000000860 .LASF0
     /tmp/ccbLgW2Y.s:6164   .debug_str:0000000000000e91 .LASF3
     /tmp/ccbLgW2Y.s:6026   .debug_str:00000000000009b6 .LASF1
     /tmp/ccbLgW2Y.s:6182   .debug_str:0000000000000f09 .LASF2
     /tmp/ccbLgW2Y.s:6200   .debug_str:0000000000000f97 .LASF4
     /tmp/ccbLgW2Y.s:6004   .debug_str:0000000000000908 .LASF5
     /tmp/ccbLgW2Y.s:5786   .debug_str:00000000000000f1 .LASF6
     /tmp/ccbLgW2Y.s:6142   .debug_str:0000000000000ddf .LASF7
     /tmp/ccbLgW2Y.s:6130   .debug_str:0000000000000d89 .LASF8
     /tmp/ccbLgW2Y.s:6016   .debug_str:000000000000097d .LASF9
     /tmp/ccbLgW2Y.s:5946   .debug_str:000000000000070a .LASF10
     /tmp/ccbLgW2Y.s:5958   .debug_str:000000000000077c .LASF11
     /tmp/ccbLgW2Y.s:5852   .debug_str:000000000000041b .LASF12
     /tmp/ccbLgW2Y.s:5934   .debug_str:00000000000006c6 .LASF13
     /tmp/ccbLgW2Y.s:5870   .debug_str:0000000000000497 .LASF14
     /tmp/ccbLgW2Y.s:5850   .debug_str:000000000000040b .LASF15
     /tmp/ccbLgW2Y.s:6248   .debug_str:0000000000001128 .LASF16
GAS LISTING /tmp/ccbLgW2Y.s 			page 51


     /tmp/ccbLgW2Y.s:5914   .debug_str:00000000000005f5 .LASF17
     /tmp/ccbLgW2Y.s:6234   .debug_str:0000000000001086 .LASF18
     /tmp/ccbLgW2Y.s:6332   .debug_str:000000000000138e .LASF109
     /tmp/ccbLgW2Y.s:6158   .debug_str:0000000000000e67 .LASF22
     /tmp/ccbLgW2Y.s:6036   .debug_str:00000000000009f9 .LASF19
     /tmp/ccbLgW2Y.s:5922   .debug_str:0000000000000642 .LASF20
     /tmp/ccbLgW2Y.s:6352   .debug_str:000000000000143c .LASF21
     /tmp/ccbLgW2Y.s:6318   .debug_str:0000000000001310 .LASF23
     /tmp/ccbLgW2Y.s:5928   .debug_str:0000000000000682 .LASF24
     /tmp/ccbLgW2Y.s:6272   .debug_str:00000000000011b6 .LASF25
     /tmp/ccbLgW2Y.s:5888   .debug_str:000000000000052b .LASF26
     /tmp/ccbLgW2Y.s:5978   .debug_str:0000000000000837 .LASF27
     /tmp/ccbLgW2Y.s:6238   .debug_str:00000000000010ab .LASF29
     /tmp/ccbLgW2Y.s:6086   .debug_str:0000000000000bf3 .LASF28
     /tmp/ccbLgW2Y.s:6066   .debug_str:0000000000000b32 .LASF30
     /tmp/ccbLgW2Y.s:5910   .debug_str:00000000000005d8 .LASF31
     /tmp/ccbLgW2Y.s:5774   .debug_str:000000000000005b .LASF32
     /tmp/ccbLgW2Y.s:6068   .debug_str:0000000000000b4a .LASF39
     /tmp/ccbLgW2Y.s:6324   .debug_str:000000000000133a .LASF41
     /tmp/ccbLgW2Y.s:5846   .debug_str:00000000000003e7 .LASF33
     /tmp/ccbLgW2Y.s:6044   .debug_str:0000000000000a51 .LASF34
     /tmp/ccbLgW2Y.s:5904   .debug_str:0000000000000587 .LASF35
     /tmp/ccbLgW2Y.s:5858   .debug_str:0000000000000438 .LASF36
     /tmp/ccbLgW2Y.s:5996   .debug_str:00000000000008c6 .LASF37
     /tmp/ccbLgW2Y.s:5876   .debug_str:00000000000004dd .LASF38
     /tmp/ccbLgW2Y.s:6360   .debug_str:0000000000001470 .LASF40
     /tmp/ccbLgW2Y.s:5800   .debug_str:0000000000000190 .LASF42
     /tmp/ccbLgW2Y.s:6138   .debug_str:0000000000000dc2 .LASF43
     /tmp/ccbLgW2Y.s:5808   .debug_str:00000000000001d8 .LASF44
     /tmp/ccbLgW2Y.s:5820   .debug_str:0000000000000269 .LASF45
     /tmp/ccbLgW2Y.s:5948   .debug_str:000000000000071a .LASF46
     /tmp/ccbLgW2Y.s:6210   .debug_str:0000000000000fc8 .LASF47
     /tmp/ccbLgW2Y.s:5920   .debug_str:0000000000000627 .LASF48
     /tmp/ccbLgW2Y.s:5990   .debug_str:000000000000089f .LASF49
     /tmp/ccbLgW2Y.s:6344   .debug_str:00000000000013f4 .LASF50
     /tmp/ccbLgW2Y.s:6312   .debug_str:00000000000012ef .LASF53
     /tmp/ccbLgW2Y.s:6300   .debug_str:0000000000001294 .LASF55
     /tmp/ccbLgW2Y.s:6178   .debug_str:0000000000000ef5 .LASF51
     /tmp/ccbLgW2Y.s:6110   .debug_str:0000000000000ccd .LASF52
     /tmp/ccbLgW2Y.s:6148   .debug_str:0000000000000df9 .LASF54
     /tmp/ccbLgW2Y.s:6154   .debug_str:0000000000000e40 .LASF56
     /tmp/ccbLgW2Y.s:6100   .debug_str:0000000000000c5e .LASF57
     /tmp/ccbLgW2Y.s:6018   .debug_str:0000000000000990 .LASF58
     /tmp/ccbLgW2Y.s:6346   .debug_str:000000000000140e .LASF59
     /tmp/ccbLgW2Y.s:6280   .debug_str:00000000000011e0 .LASF60
     /tmp/ccbLgW2Y.s:6094   .debug_str:0000000000000c2e .LASF61
     /tmp/ccbLgW2Y.s:6108   .debug_str:0000000000000cb9 .LASF62
     /tmp/ccbLgW2Y.s:6080   .debug_str:0000000000000bb4 .LASF63
     /tmp/ccbLgW2Y.s:6156   .debug_str:0000000000000e53 .LASF64
     /tmp/ccbLgW2Y.s:6390   .debug_str:0000000000001565 .LASF65
     /tmp/ccbLgW2Y.s:5994   .debug_str:00000000000008b2 .LASF66
     /tmp/ccbLgW2Y.s:6244   .debug_str:00000000000010ff .LASF67
     /tmp/ccbLgW2Y.s:6204   .debug_str:0000000000000fa6 .LASF68
     /tmp/ccbLgW2Y.s:6206   .debug_str:0000000000000fb9 .LASF69
     /tmp/ccbLgW2Y.s:5908   .debug_str:00000000000005c5 .LASF70
     /tmp/ccbLgW2Y.s:5902   .debug_str:0000000000000581 .LASF71
     /tmp/ccbLgW2Y.s:5792   .debug_str:0000000000000124 .LASF72
GAS LISTING /tmp/ccbLgW2Y.s 			page 52


     /tmp/ccbLgW2Y.s:5992   .debug_str:00000000000008ac .LASF73
     /tmp/ccbLgW2Y.s:5892   .debug_str:000000000000054a .LASF74
     /tmp/ccbLgW2Y.s:5838   .debug_str:0000000000000393 .LASF75
     /tmp/ccbLgW2Y.s:6212   .debug_str:0000000000000fd6 .LASF76
     /tmp/ccbLgW2Y.s:5788   .debug_str:00000000000000f8 .LASF77
     /tmp/ccbLgW2Y.s:6188   .debug_str:0000000000000f26 .LASF78
     /tmp/ccbLgW2Y.s:6180   .debug_str:0000000000000efe .LASF79
     /tmp/ccbLgW2Y.s:6380   .debug_str:000000000000150c .LASF80
     /tmp/ccbLgW2Y.s:6186   .debug_str:0000000000000f1f .LASF81
     /tmp/ccbLgW2Y.s:5848   .debug_str:00000000000003f8 .LASF82
     /tmp/ccbLgW2Y.s:6334   .debug_str:0000000000001394 .LASF83
     /tmp/ccbLgW2Y.s:6358   .debug_str:000000000000145a .LASF84
     /tmp/ccbLgW2Y.s:6326   .debug_str:0000000000001358 .LASF85
     /tmp/ccbLgW2Y.s:6070   .debug_str:0000000000000b5a .LASF86
     /tmp/ccbLgW2Y.s:6168   .debug_str:0000000000000eb8 .LASF87
     /tmp/ccbLgW2Y.s:5968   .debug_str:00000000000007f9 .LASF88
     /tmp/ccbLgW2Y.s:5976   .debug_str:0000000000000831 .LASF89
     /tmp/ccbLgW2Y.s:5880   .debug_str:0000000000000501 .LASF90
     /tmp/ccbLgW2Y.s:5972   .debug_str:0000000000000811 .LASF91
     /tmp/ccbLgW2Y.s:5980   .debug_str:0000000000000842 .LASF92
     /tmp/ccbLgW2Y.s:6306   .debug_str:00000000000012bc .LASF93
     /tmp/ccbLgW2Y.s:5956   .debug_str:0000000000000760 .LASF94
     /tmp/ccbLgW2Y.s:6134   .debug_str:0000000000000da4 .LASF95
     /tmp/ccbLgW2Y.s:6012   .debug_str:000000000000094f .LASF96
     /tmp/ccbLgW2Y.s:5816   .debug_str:0000000000000247 .LASF97
     /tmp/ccbLgW2Y.s:6060   .debug_str:0000000000000af4 .LASF98
     /tmp/ccbLgW2Y.s:6170   .debug_str:0000000000000ebe .LASF99
     /tmp/ccbLgW2Y.s:5780   .debug_str:00000000000000a7 .LASF100
     /tmp/ccbLgW2Y.s:5822   .debug_str:0000000000000273 .LASF101
     /tmp/ccbLgW2Y.s:6304   .debug_str:00000000000012b0 .LASF102
     /tmp/ccbLgW2Y.s:5824   .debug_str:0000000000000282 .LASF103
     /tmp/ccbLgW2Y.s:6084   .debug_str:0000000000000be1 .LASF104
     /tmp/ccbLgW2Y.s:5960   .debug_str:000000000000078a .LASF105
     /tmp/ccbLgW2Y.s:6002   .debug_str:00000000000008f5 .LASF106
     /tmp/ccbLgW2Y.s:5844   .debug_str:00000000000003d3 .LASF107
     /tmp/ccbLgW2Y.s:6266   .debug_str:0000000000001192 .LASF144
     /tmp/ccbLgW2Y.s:6262   .debug_str:0000000000001187 .LASF108
     /tmp/ccbLgW2Y.s:6122   .debug_str:0000000000000d3d .LASF110
     /tmp/ccbLgW2Y.s:6222   .debug_str:0000000000001028 .LASF146
     /tmp/ccbLgW2Y.s:6024   .debug_str:00000000000009b1 .LASF111
     /tmp/ccbLgW2Y.s:5854   .debug_str:000000000000042a .LASF112
     /tmp/ccbLgW2Y.s:5942   .debug_str:00000000000006f4 .LASF113
     /tmp/ccbLgW2Y.s:6028   .debug_str:00000000000009c9 .LASF114
     /tmp/ccbLgW2Y.s:6034   .debug_str:00000000000009e6 .LASF115
     /tmp/ccbLgW2Y.s:5940   .debug_str:00000000000006eb .LASF116
     /tmp/ccbLgW2Y.s:6394   .debug_str:000000000000158b .LASF117
     /tmp/ccbLgW2Y.s:6074   .debug_str:0000000000000b7d .LASF118
     /tmp/ccbLgW2Y.s:5790   .debug_str:0000000000000103 .LASF120
     /tmp/ccbLgW2Y.s:6256   .debug_str:000000000000115e .LASF119
     /tmp/ccbLgW2Y.s:6076   .debug_str:0000000000000b87 .LASF121
     /tmp/ccbLgW2Y.s:6322   .debug_str:000000000000132f .LASF122
     /tmp/ccbLgW2Y.s:6284   .debug_str:00000000000011fe .LASF123
     /tmp/ccbLgW2Y.s:6250   .debug_str:0000000000001134 .LASF124
     /tmp/ccbLgW2Y.s:5782   .debug_str:00000000000000af .LASF125
     /tmp/ccbLgW2Y.s:6338   .debug_str:00000000000013a3 .LASF126
     /tmp/ccbLgW2Y.s:5778   .debug_str:0000000000000079 .LASF127
     /tmp/ccbLgW2Y.s:6260   .debug_str:0000000000001172 .LASF128
GAS LISTING /tmp/ccbLgW2Y.s 			page 53


     /tmp/ccbLgW2Y.s:5966   .debug_str:00000000000007ca .LASF129
     /tmp/ccbLgW2Y.s:5768   .debug_str:000000000000002b .LASF130
     /tmp/ccbLgW2Y.s:6112   .debug_str:0000000000000ce2 .LASF131
     /tmp/ccbLgW2Y.s:5916   .debug_str:000000000000060b .LASF132
     /tmp/ccbLgW2Y.s:6342   .debug_str:00000000000013cc .LASF133
     /tmp/ccbLgW2Y.s:6236   .debug_str:000000000000109c .LASF134
     /tmp/ccbLgW2Y.s:5906   .debug_str:000000000000059e .LASF135
     /tmp/ccbLgW2Y.s:6264   .debug_str:000000000000118c .LASF136
     /tmp/ccbLgW2Y.s:5842   .debug_str:00000000000003cd .LASF137
     /tmp/ccbLgW2Y.s:6220   .debug_str:0000000000001020 .LASF138
     /tmp/ccbLgW2Y.s:5860   .debug_str:000000000000045c .LASF139
     /tmp/ccbLgW2Y.s:5828   .debug_str:000000000000029c .LASF140
     /tmp/ccbLgW2Y.s:6132   .debug_str:0000000000000d9c .LASF141
     /tmp/ccbLgW2Y.s:6022   .debug_str:00000000000009a8 .LASF142
     /tmp/ccbLgW2Y.s:6202   .debug_str:0000000000000f9e .LASF206
     /tmp/ccbLgW2Y.s:5970   .debug_str:000000000000080b .LASF143
     /tmp/ccbLgW2Y.s:6292   .debug_str:000000000000126b .LASF145
     /tmp/ccbLgW2Y.s:6090   .debug_str:0000000000000c0d .LASF311
     /tmp/ccbLgW2Y.s:6116   .debug_str:0000000000000d1c .LASF147
     /tmp/ccbLgW2Y.s:6336   .debug_str:000000000000139e .LASF148
     /tmp/ccbLgW2Y.s:6376   .debug_str:00000000000014d7 .LASF149
     /tmp/ccbLgW2Y.s:6370   .debug_str:00000000000014ae .LASF150
     /tmp/ccbLgW2Y.s:6278   .debug_str:00000000000011d0 .LASF151
     /tmp/ccbLgW2Y.s:5896   .debug_str:000000000000056d .LASF152
     /tmp/ccbLgW2Y.s:5798   .debug_str:000000000000017d .LASF153
     /tmp/ccbLgW2Y.s:6032   .debug_str:00000000000009e0 .LASF154
     /tmp/ccbLgW2Y.s:6118   .debug_str:0000000000000d21 .LASF155
     /tmp/ccbLgW2Y.s:6270   .debug_str:00000000000011ae .LASF156
     /tmp/ccbLgW2Y.s:5894   .debug_str:000000000000055c .LASF157
     /tmp/ccbLgW2Y.s:6064   .debug_str:0000000000000b25 .LASF162
     /tmp/ccbLgW2Y.s:6046   .debug_str:0000000000000a6f .LASF164
     /tmp/ccbLgW2Y.s:6384   .debug_str:0000000000001539 .LASF158
     /tmp/ccbLgW2Y.s:5938   .debug_str:00000000000006df .LASF159
     /tmp/ccbLgW2Y.s:5986   .debug_str:000000000000086d .LASF160
     /tmp/ccbLgW2Y.s:5998   .debug_str:00000000000008d8 .LASF161
     /tmp/ccbLgW2Y.s:6214   .debug_str:0000000000000ff1 .LASF163
     /tmp/ccbLgW2Y.s:5890   .debug_str:0000000000000537 .LASF165
     /tmp/ccbLgW2Y.s:6194   .debug_str:0000000000000f5d .LASF166
     /tmp/ccbLgW2Y.s:6242   .debug_str:00000000000010e3 .LASF167
     /tmp/ccbLgW2Y.s:6088   .debug_str:0000000000000bfe .LASF168
     /tmp/ccbLgW2Y.s:5770   .debug_str:000000000000003c .LASF169
     /tmp/ccbLgW2Y.s:6356   .debug_str:000000000000144b .LASF170
     /tmp/ccbLgW2Y.s:6126   .debug_str:0000000000000d5b .LASF171
     /tmp/ccbLgW2Y.s:6232   .debug_str:0000000000001078 .LASF172
     /tmp/ccbLgW2Y.s:6146   .debug_str:0000000000000ded .LASF173
     /tmp/ccbLgW2Y.s:5764   .debug_str:000000000000000f .LASF174
     /tmp/ccbLgW2Y.s:6106   .debug_str:0000000000000ca9 .LASF175
     /tmp/ccbLgW2Y.s:6174   .debug_str:0000000000000ecf .LASF176
     /tmp/ccbLgW2Y.s:6362   .debug_str:000000000000147c .LASF177
     /tmp/ccbLgW2Y.s:6006   .debug_str:000000000000091a .LASF178
     /tmp/ccbLgW2Y.s:6226   .debug_str:000000000000104b .LASF179
     /tmp/ccbLgW2Y.s:6374   .debug_str:00000000000014c1 .LASF180
     /tmp/ccbLgW2Y.s:6258   .debug_str:0000000000001167 .LASF181
     /tmp/ccbLgW2Y.s:6228   .debug_str:0000000000001056 .LASF182
     /tmp/ccbLgW2Y.s:6208   .debug_str:0000000000000fc0 .LASF183
     /tmp/ccbLgW2Y.s:6128   .debug_str:0000000000000d75 .LASF184
     /tmp/ccbLgW2Y.s:6098   .debug_str:0000000000000c3f .LASF185
GAS LISTING /tmp/ccbLgW2Y.s 			page 54


     /tmp/ccbLgW2Y.s:5874   .debug_str:00000000000004cb .LASF186
     /tmp/ccbLgW2Y.s:6152   .debug_str:0000000000000e23 .LASF187
     /tmp/ccbLgW2Y.s:6396   .debug_str:0000000000001595 .LASF188
     /tmp/ccbLgW2Y.s:6102   .debug_str:0000000000000c65 .LASF189
     /tmp/ccbLgW2Y.s:6192   .debug_str:0000000000000f4a .LASF190
     /tmp/ccbLgW2Y.s:6216   .debug_str:0000000000000ffa .LASF191
     /tmp/ccbLgW2Y.s:6316   .debug_str:00000000000012fd .LASF192
     /tmp/ccbLgW2Y.s:6392   .debug_str:000000000000156d .LASF193
     /tmp/ccbLgW2Y.s:6382   .debug_str:0000000000001524 .LASF194
     /tmp/ccbLgW2Y.s:6240   .debug_str:00000000000010c3 .LASF195
     /tmp/ccbLgW2Y.s:6282   .debug_str:00000000000011f4 .LASF196
     /tmp/ccbLgW2Y.s:6120   .debug_str:0000000000000d31 .LASF197
     /tmp/ccbLgW2Y.s:6368   .debug_str:00000000000014a0 .LASF198
     /tmp/ccbLgW2Y.s:5814   .debug_str:000000000000021f .LASF200
     /tmp/ccbLgW2Y.s:5812   .debug_str:000000000000020a .LASF199
     /tmp/ccbLgW2Y.s:5840   .debug_str:00000000000003a1 .LASF201
     /tmp/ccbLgW2Y.s:6386   .debug_str:0000000000001546 .LASF312
     /tmp/ccbLgW2Y.s:5836   .debug_str:0000000000000382 .LASF313
     /tmp/ccbLgW2Y.s:5772   .debug_str:0000000000000056 .LASF202
     /tmp/ccbLgW2Y.s:6314   .debug_str:00000000000012f8 .LASF203
     /tmp/ccbLgW2Y.s:6052   .debug_str:0000000000000aac .LASF204
     /tmp/ccbLgW2Y.s:5900   .debug_str:000000000000057b .LASF205
     /tmp/ccbLgW2Y.s:6298   .debug_str:000000000000128c .LASF207
     /tmp/ccbLgW2Y.s:6058   .debug_str:0000000000000aef .LASF208
     /tmp/ccbLgW2Y.s:6162   .debug_str:0000000000000e86 .LASF209
     /tmp/ccbLgW2Y.s:5954   .debug_str:000000000000074c .LASF210
     /tmp/ccbLgW2Y.s:5804   .debug_str:00000000000001c7 .LASF211
     /tmp/ccbLgW2Y.s:6160   .debug_str:0000000000000e72 .LASF212
     /tmp/ccbLgW2Y.s:5898   .debug_str:0000000000000576 .LASF213
     /tmp/ccbLgW2Y.s:6224   .debug_str:0000000000001034 .LASF214
     /tmp/ccbLgW2Y.s:6252   .debug_str:000000000000114f .LASF215
     /tmp/ccbLgW2Y.s:6176   .debug_str:0000000000000edc .LASF216
     /tmp/ccbLgW2Y.s:5766   .debug_str:000000000000001f .LASF217
     /tmp/ccbLgW2Y.s:6190   .debug_str:0000000000000f3e .LASF218
     /tmp/ccbLgW2Y.s:6062   .debug_str:0000000000000b11 .LASF219
     /tmp/ccbLgW2Y.s:5974   .debug_str:000000000000081c .LASF220
     /tmp/ccbLgW2Y.s:5856   .debug_str:000000000000042f .LASF221
     /tmp/ccbLgW2Y.s:5864   .debug_str:0000000000000474 .LASF222
     /tmp/ccbLgW2Y.s:6092   .debug_str:0000000000000c25 .LASF223
     /tmp/ccbLgW2Y.s:6198   .debug_str:0000000000000f8c .LASF224
     /tmp/ccbLgW2Y.s:5762   .debug_str:0000000000000000 .LASF225
     /tmp/ccbLgW2Y.s:5964   .debug_str:00000000000007a8 .LASF226
     /tmp/ccbLgW2Y.s:6296   .debug_str:000000000000127d .LASF227
     /tmp/ccbLgW2Y.s:6246   .debug_str:0000000000001106 .LASF228
     /tmp/ccbLgW2Y.s:6054   .debug_str:0000000000000ab4 .LASF229
     /tmp/ccbLgW2Y.s:5872   .debug_str:00000000000004a7 .LASF230
     /tmp/ccbLgW2Y.s:6114   .debug_str:0000000000000d0c .LASF231
     /tmp/ccbLgW2Y.s:6150   .debug_str:0000000000000e00 .LASF232
     /tmp/ccbLgW2Y.s:6030   .debug_str:00000000000009d7 .LASF233
     /tmp/ccbLgW2Y.s:5982   .debug_str:000000000000085a .LASF234
     /tmp/ccbLgW2Y.s:6388   .debug_str:000000000000154d .LASF235
     /tmp/ccbLgW2Y.s:5776   .debug_str:0000000000000071 .LASF236
     /tmp/ccbLgW2Y.s:6050   .debug_str:0000000000000a92 .LASF237
     /tmp/ccbLgW2Y.s:6000   .debug_str:00000000000008e5 .LASF238
     /tmp/ccbLgW2Y.s:6104   .debug_str:0000000000000c86 .LASF239
     /tmp/ccbLgW2Y.s:6340   .debug_str:00000000000013b9 .LASF240
     /tmp/ccbLgW2Y.s:6196   .debug_str:0000000000000f66 .LASF241
GAS LISTING /tmp/ccbLgW2Y.s 			page 55


     /tmp/ccbLgW2Y.s:6372   .debug_str:00000000000014b4 .LASF242
     /tmp/ccbLgW2Y.s:5796   .debug_str:0000000000000159 .LASF243
     /tmp/ccbLgW2Y.s:6350   .debug_str:000000000000142f .LASF244
     /tmp/ccbLgW2Y.s:6140   .debug_str:0000000000000dcf .LASF245
     /tmp/ccbLgW2Y.s:6290   .debug_str:0000000000001259 .LASF246
     /tmp/ccbLgW2Y.s:5930   .debug_str:000000000000068e .LASF247
     /tmp/ccbLgW2Y.s:5830   .debug_str:00000000000002a5 .LASF248
     /tmp/ccbLgW2Y.s:5794   .debug_str:0000000000000136 .LASF249
     /tmp/ccbLgW2Y.s:6096   .debug_str:0000000000000c36 .LASF250
     /tmp/ccbLgW2Y.s:5878   .debug_str:00000000000004fc .LASF251
     /tmp/ccbLgW2Y.s:6020   .debug_str:00000000000009a3 .LASF252
     /tmp/ccbLgW2Y.s:5936   .debug_str:00000000000006d5 .LASF253
     /tmp/ccbLgW2Y.s:6364   .debug_str:0000000000001487 .LASF254
     /tmp/ccbLgW2Y.s:5866   .debug_str:000000000000047e .LASF255
     /tmp/ccbLgW2Y.s:5962   .debug_str:000000000000079d .LASF256
     /tmp/ccbLgW2Y.s:6124   .debug_str:0000000000000d4d .LASF257
     /tmp/ccbLgW2Y.s:5950   .debug_str:0000000000000731 .LASF258
     /tmp/ccbLgW2Y.s:5924   .debug_str:000000000000064b .LASF259
     /tmp/ccbLgW2Y.s:6254   .debug_str:0000000000001156 .LASF260
     /tmp/ccbLgW2Y.s:6082   .debug_str:0000000000000bbc .LASF261
     /tmp/ccbLgW2Y.s:6276   .debug_str:00000000000011c8 .LASF262
     /tmp/ccbLgW2Y.s:6328   .debug_str:0000000000001362 .LASF263
     /tmp/ccbLgW2Y.s:6078   .debug_str:0000000000000ba8 .LASF264
     /tmp/ccbLgW2Y.s:6310   .debug_str:00000000000012dd .LASF265
     /tmp/ccbLgW2Y.s:5988   .debug_str:000000000000087d .LASF266
     /tmp/ccbLgW2Y.s:6308   .debug_str:00000000000012cb .LASF267
     /tmp/ccbLgW2Y.s:6166   .debug_str:0000000000000e96 .LASF268
     /tmp/ccbLgW2Y.s:5818   .debug_str:0000000000000256 .LASF269
     /tmp/ccbLgW2Y.s:5834   .debug_str:000000000000035f .LASF270
     /tmp/ccbLgW2Y.s:5912   .debug_str:00000000000005e2 .LASF271
     /tmp/ccbLgW2Y.s:5926   .debug_str:000000000000065f .LASF272
     /tmp/ccbLgW2Y.s:6038   .debug_str:0000000000000a02 .LASF273
     /tmp/ccbLgW2Y.s:6348   .debug_str:0000000000001416 .LASF274
     /tmp/ccbLgW2Y.s:6056   .debug_str:0000000000000ac5 .LASF275
     /tmp/ccbLgW2Y.s:6040   .debug_str:0000000000000a1d .LASF276
     /tmp/ccbLgW2Y.s:6378   .debug_str:00000000000014e3 .LASF277
     /tmp/ccbLgW2Y.s:6014   .debug_str:0000000000000971 .LASF278
     /tmp/ccbLgW2Y.s:6008   .debug_str:0000000000000927 .LASF279
     /tmp/ccbLgW2Y.s:5932   .debug_str:00000000000006b5 .LASF280
     /tmp/ccbLgW2Y.s:6268   .debug_str:000000000000119c .LASF281
     /tmp/ccbLgW2Y.s:5944   .debug_str:00000000000006fd .LASF282
     /tmp/ccbLgW2Y.s:5784   .debug_str:00000000000000e4 .LASF283
     /tmp/ccbLgW2Y.s:6010   .debug_str:0000000000000943 .LASF284
     /tmp/ccbLgW2Y.s:6042   .debug_str:0000000000000a35 .LASF285
     /tmp/ccbLgW2Y.s:6230   .debug_str:000000000000106c .LASF286
     /tmp/ccbLgW2Y.s:5802   .debug_str:00000000000001ab .LASF287
     /tmp/ccbLgW2Y.s:6288   .debug_str:0000000000001244 .LASF314
     /tmp/ccbLgW2Y.s:1349   .text:0000000000000604 .LFB39
     /tmp/ccbLgW2Y.s:1390   .text:000000000000062c .LFE39
     /tmp/ccbLgW2Y.s:6302   .debug_str:00000000000012a9 .LASF288
     /tmp/ccbLgW2Y.s:1328   .text:00000000000005f4 .LFB38
     /tmp/ccbLgW2Y.s:1343   .text:0000000000000604 .LFE38
     /tmp/ccbLgW2Y.s:1295   .text:00000000000005d4 .LFB37
     /tmp/ccbLgW2Y.s:1322   .text:00000000000005f4 .LFE37
     /tmp/ccbLgW2Y.s:1263   .text:00000000000005ac .LFB36
     /tmp/ccbLgW2Y.s:1289   .text:00000000000005d4 .LFE36
     /tmp/ccbLgW2Y.s:5471   .debug_loc:0000000000000000 .LLST24
GAS LISTING /tmp/ccbLgW2Y.s 			page 56


     /tmp/ccbLgW2Y.s:1278   .text:00000000000005c4 .LVL100
     /tmp/ccbLgW2Y.s:10     .text:0000000000000000 .LFB35
     /tmp/ccbLgW2Y.s:36     .text:0000000000000028 .LFE35
     /tmp/ccbLgW2Y.s:25     .text:0000000000000018 .LVL0
     /tmp/ccbLgW2Y.s:1233   .text:00000000000005ac .LFE34
     /tmp/ccbLgW2Y.s:5952   .debug_str:0000000000000744 .LASF289
     /tmp/ccbLgW2Y.s:5485   .debug_loc:0000000000000039 .LLST23
     /tmp/ccbLgW2Y.s:1144   .text:00000000000004ec .LVL85
     /tmp/ccbLgW2Y.s:1148   .text:00000000000004f4 .LVL86
     /tmp/ccbLgW2Y.s:1153   .text:0000000000000500 .LVL87
     /tmp/ccbLgW2Y.s:1158   .text:0000000000000510 .LVL88
     /tmp/ccbLgW2Y.s:1167   .text:0000000000000530 .LVL89
     /tmp/ccbLgW2Y.s:1174   .text:000000000000053c .LVL90
     /tmp/ccbLgW2Y.s:1181   .text:0000000000000548 .LVL91
     /tmp/ccbLgW2Y.s:1187   .text:0000000000000554 .LVL92
     /tmp/ccbLgW2Y.s:1194   .text:0000000000000560 .LVL93
     /tmp/ccbLgW2Y.s:1198   .text:0000000000000568 .LVL94
     /tmp/ccbLgW2Y.s:1203   .text:0000000000000578 .LVL95
     /tmp/ccbLgW2Y.s:1226   .text:00000000000005a0 .LVL97
     /tmp/ccbLgW2Y.s:1230   .text:00000000000005ac .LVL98
     /tmp/ccbLgW2Y.s:494    .text:0000000000000224 .LFB33
     /tmp/ccbLgW2Y.s:1112   .text:00000000000004cc .LFE33
     /tmp/ccbLgW2Y.s:6144   .debug_str:0000000000000de6 .LASF290
     /tmp/ccbLgW2Y.s:5492   .debug_loc:000000000000005c .LLST12
     /tmp/ccbLgW2Y.s:782    .text:000000000000033c .LBB84
     /tmp/ccbLgW2Y.s:921    .text:00000000000003d8 .LBE84
     /tmp/ccbLgW2Y.s:6274   .debug_str:00000000000011c3 .LASF291
     /tmp/ccbLgW2Y.s:6218   .debug_str:0000000000001018 .LASF292
     /tmp/ccbLgW2Y.s:784    .text:000000000000033c .LBB85
     /tmp/ccbLgW2Y.s:800    .text:0000000000000348 .LBE85
     /tmp/ccbLgW2Y.s:804    .text:000000000000034c .LBB87
     /tmp/ccbLgW2Y.s:819    .text:0000000000000358 .LBE87
     /tmp/ccbLgW2Y.s:824    .text:000000000000035c .LBB89
     /tmp/ccbLgW2Y.s:836    .text:0000000000000364 .LBE89
     /tmp/ccbLgW2Y.s:5513   .debug_loc:00000000000000ba .LLST19
     /tmp/ccbLgW2Y.s:862    .text:00000000000003a8 .LBB91
     /tmp/ccbLgW2Y.s:870    .text:00000000000003ac .LBE91
     /tmp/ccbLgW2Y.s:5521   .debug_loc:00000000000000de .LLST20
     /tmp/ccbLgW2Y.s:880    .text:00000000000003b8 .LBB93
     /tmp/ccbLgW2Y.s:891    .text:00000000000003bc .LBE93
     /tmp/ccbLgW2Y.s:5528   .debug_loc:0000000000000101 .LLST21
     /tmp/ccbLgW2Y.s:896    .text:00000000000003c0 .LBB95
     /tmp/ccbLgW2Y.s:910    .text:00000000000003c8 .LBE95
     /tmp/ccbLgW2Y.s:5535   .debug_loc:0000000000000124 .LLST22
     /tmp/ccbLgW2Y.s:846    .text:0000000000000380 .LVL53
     /tmp/ccbLgW2Y.s:856    .text:000000000000039c .LVL54
     /tmp/ccbLgW2Y.s:917    .text:00000000000003d4 .LVL61
     /tmp/ccbLgW2Y.s:5738   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccbLgW2Y.s:5542   .debug_loc:0000000000000147 .LLST16
     /tmp/ccbLgW2Y.s:6172   .debug_str:0000000000000ec5 .LASF293
     /tmp/ccbLgW2Y.s:5553   .debug_loc:000000000000017d .LLST17
     /tmp/ccbLgW2Y.s:5560   .debug_loc:00000000000001a0 .LLST18
     /tmp/ccbLgW2Y.s:935    .text:00000000000003f4 .LVL64
     /tmp/ccbLgW2Y.s:940    .text:0000000000000400 .LVL65
     /tmp/ccbLgW2Y.s:770    .text:0000000000000330 .LVL47
     /tmp/ccbLgW2Y.s:772    .text:0000000000000338 .LVL48
     /tmp/ccbLgW2Y.s:5575   .debug_loc:00000000000001e9 .LLST13
GAS LISTING /tmp/ccbLgW2Y.s 			page 57


     /tmp/ccbLgW2Y.s:564    .text:0000000000000284 .LBB71
     /tmp/ccbLgW2Y.s:579    .text:0000000000000290 .LBE71
     /tmp/ccbLgW2Y.s:585    .text:0000000000000298 .LBB73
     /tmp/ccbLgW2Y.s:600    .text:00000000000002a4 .LBE73
     /tmp/ccbLgW2Y.s:959    .text:0000000000000410 .LBB75
     /tmp/ccbLgW2Y.s:970    .text:0000000000000414 .LBE75
     /tmp/ccbLgW2Y.s:5582   .debug_loc:000000000000020c .LLST14
     /tmp/ccbLgW2Y.s:975    .text:0000000000000418 .LBB77
     /tmp/ccbLgW2Y.s:987    .text:000000000000041c .LBE77
     /tmp/ccbLgW2Y.s:5589   .debug_loc:000000000000022f .LLST15
     /tmp/ccbLgW2Y.s:952    .text:000000000000040c .LVL67
     /tmp/ccbLgW2Y.s:1010   .text:0000000000000438 .LVL72
     /tmp/ccbLgW2Y.s:1018   .text:0000000000000444 .LVL73
     /tmp/ccbLgW2Y.s:1026   .text:0000000000000450 .LVL74
     /tmp/ccbLgW2Y.s:1034   .text:000000000000045c .LVL75
     /tmp/ccbLgW2Y.s:1042   .text:0000000000000468 .LVL76
     /tmp/ccbLgW2Y.s:1050   .text:0000000000000474 .LVL77
     /tmp/ccbLgW2Y.s:1058   .text:0000000000000480 .LVL78
     /tmp/ccbLgW2Y.s:1066   .text:000000000000048c .LVL79
     /tmp/ccbLgW2Y.s:1074   .text:0000000000000498 .LVL80
     /tmp/ccbLgW2Y.s:1082   .text:00000000000004a4 .LVL81
     /tmp/ccbLgW2Y.s:1090   .text:00000000000004b0 .LVL82
     /tmp/ccbLgW2Y.s:1098   .text:00000000000004bc .LVL83
     /tmp/ccbLgW2Y.s:1106   .text:00000000000004c8 .LVL84
     /tmp/ccbLgW2Y.s:517    .text:0000000000000248 .LBB67
     /tmp/ccbLgW2Y.s:533    .text:0000000000000254 .LBE67
     /tmp/ccbLgW2Y.s:344    .text:000000000000015c .LFB32
     /tmp/ccbLgW2Y.s:488    .text:0000000000000224 .LFE32
     /tmp/ccbLgW2Y.s:5596   .debug_loc:0000000000000252 .LLST6
     /tmp/ccbLgW2Y.s:5610   .debug_loc:000000000000028b .LLST7
     /tmp/ccbLgW2Y.s:6294   .debug_str:0000000000001276 .LASF294
     /tmp/ccbLgW2Y.s:5617   .debug_loc:00000000000002ae .LLST8
     /tmp/ccbLgW2Y.s:5639   .debug_loc:000000000000030d .LLST9
     /tmp/ccbLgW2Y.s:361    .text:0000000000000174 .LBB61
     /tmp/ccbLgW2Y.s:377    .text:0000000000000180 .LBE61
     /tmp/ccbLgW2Y.s:379    .text:0000000000000180 .LBB63
     /tmp/ccbLgW2Y.s:391    .text:0000000000000188 .LBE63
     /tmp/ccbLgW2Y.s:5661   .debug_loc:000000000000034e .LLST10
     /tmp/ccbLgW2Y.s:462    .text:0000000000000208 .LBB65
     /tmp/ccbLgW2Y.s:473    .text:000000000000020c .LBE65
     /tmp/ccbLgW2Y.s:5669   .debug_loc:0000000000000372 .LLST11
     /tmp/ccbLgW2Y.s:446    .text:00000000000001ec .LVL29
     /tmp/ccbLgW2Y.s:453    .text:00000000000001fc .LVL30
     /tmp/ccbLgW2Y.s:236    .text:00000000000000ec .LFB31
     /tmp/ccbLgW2Y.s:338    .text:000000000000015c .LFE31
     /tmp/ccbLgW2Y.s:5826   .debug_str:0000000000000295 .LASF295
     /tmp/ccbLgW2Y.s:5676   .debug_loc:0000000000000395 .LLST2
     /tmp/ccbLgW2Y.s:5687   .debug_loc:00000000000003cb .LLST3
     /tmp/ccbLgW2Y.s:254    .text:0000000000000108 .LBB55
     /tmp/ccbLgW2Y.s:270    .text:0000000000000114 .LBE55
     /tmp/ccbLgW2Y.s:272    .text:0000000000000114 .LBB57
     /tmp/ccbLgW2Y.s:285    .text:000000000000011c .LBE57
     /tmp/ccbLgW2Y.s:5694   .debug_loc:00000000000003ee .LLST4
     /tmp/ccbLgW2Y.s:311    .text:0000000000000140 .LBB59
     /tmp/ccbLgW2Y.s:322    .text:0000000000000144 .LBE59
     /tmp/ccbLgW2Y.s:5702   .debug_loc:0000000000000412 .LLST5
     /tmp/ccbLgW2Y.s:295    .text:000000000000012c .LVL13
GAS LISTING /tmp/ccbLgW2Y.s 			page 58


     /tmp/ccbLgW2Y.s:201    .text:00000000000000cc .LFB30
     /tmp/ccbLgW2Y.s:230    .text:00000000000000ec .LFE30
     /tmp/ccbLgW2Y.s:132    .text:0000000000000084 .LFB29
     /tmp/ccbLgW2Y.s:164    .text:00000000000000a4 .LFE29
     /tmp/ccbLgW2Y.s:143    .text:0000000000000090 .LBB53
     /tmp/ccbLgW2Y.s:155    .text:0000000000000098 .LBE53
     /tmp/ccbLgW2Y.s:5709   .debug_loc:0000000000000435 .LLST1
     /tmp/ccbLgW2Y.s:94     .text:0000000000000064 .LFB28
     /tmp/ccbLgW2Y.s:126    .text:0000000000000084 .LFE28
     /tmp/ccbLgW2Y.s:105    .text:0000000000000070 .LBB51
     /tmp/ccbLgW2Y.s:117    .text:0000000000000078 .LBE51
     /tmp/ccbLgW2Y.s:5717   .debug_loc:0000000000000459 .LLST0
     /tmp/ccbLgW2Y.s:170    .text:00000000000000a4 .LFB27
     /tmp/ccbLgW2Y.s:195    .text:00000000000000cc .LFE27
     /tmp/ccbLgW2Y.s:184    .text:00000000000000bc .LVL9
     /tmp/ccbLgW2Y.s:42     .text:0000000000000028 .LFB26
     /tmp/ccbLgW2Y.s:88     .text:0000000000000064 .LFE26
     /tmp/ccbLgW2Y.s:57     .text:0000000000000040 .LBB49
     /tmp/ccbLgW2Y.s:69     .text:0000000000000044 .LBE49
     /tmp/ccbLgW2Y.s:73     .text:000000000000004c .LVL3
     /tmp/ccbLgW2Y.s:77     .text:0000000000000054 .LVL4
     /tmp/ccbLgW2Y.s:5886   .debug_str:0000000000000526 .LASF315
     /tmp/ccbLgW2Y.s:5806   .debug_str:00000000000001d3 .LASF296
     /tmp/ccbLgW2Y.s:6354   .debug_str:0000000000001445 .LASF297
     /tmp/ccbLgW2Y.s:5918   .debug_str:000000000000061b .LASF298
     /tmp/ccbLgW2Y.s:6184   .debug_str:0000000000000f17 .LASF300
     /tmp/ccbLgW2Y.s:6072   .debug_str:0000000000000b70 .LASF299
     /tmp/ccbLgW2Y.s:6136   .debug_str:0000000000000db9 .LASF301
     /tmp/ccbLgW2Y.s:5884   .debug_str:000000000000051a .LASF302
     /tmp/ccbLgW2Y.s:6330   .debug_str:0000000000001386 .LASF303
     /tmp/ccbLgW2Y.s:6320   .debug_str:000000000000131f .LASF304
     /tmp/ccbLgW2Y.s:6366   .debug_str:0000000000001491 .LASF316
     /tmp/ccbLgW2Y.s:5810   .debug_str:00000000000001f2 .LASF317
     /tmp/ccbLgW2Y.s:6048   .debug_str:0000000000000a87 .LASF305
     /tmp/ccbLgW2Y.s:5862   .debug_str:0000000000000466 .LASF306
     /tmp/ccbLgW2Y.s:5882   .debug_str:0000000000000513 .LASF307
     /tmp/ccbLgW2Y.s:1266   .text:00000000000005ac .LVL99
     /tmp/ccbLgW2Y.s:1214   .text:0000000000000584 .LVL96
     /tmp/ccbLgW2Y.s:531    .text:0000000000000254 .LVL34
     /tmp/ccbLgW2Y.s:545    .text:0000000000000278 .LVL35
     /tmp/ccbLgW2Y.s:561    .text:0000000000000284 .LVL36
     /tmp/ccbLgW2Y.s:685    .text:00000000000002cc .LVL38
     /tmp/ccbLgW2Y.s:701    .text:00000000000002e4 .LVL39
     /tmp/ccbLgW2Y.s:775    .text:000000000000033c .LVL49
     /tmp/ccbLgW2Y.s:793    .text:0000000000000340 .LVL50
     /tmp/ccbLgW2Y.s:823    .text:000000000000035c .LVL51
     /tmp/ccbLgW2Y.s:833    .text:0000000000000364 .LVL52
     /tmp/ccbLgW2Y.s:861    .text:00000000000003a8 .LVL55
     /tmp/ccbLgW2Y.s:868    .text:00000000000003ac .LVL56
     /tmp/ccbLgW2Y.s:879    .text:00000000000003b8 .LVL57
     /tmp/ccbLgW2Y.s:888    .text:00000000000003bc .LVL58
     /tmp/ccbLgW2Y.s:895    .text:00000000000003c0 .LVL59
     /tmp/ccbLgW2Y.s:907    .text:00000000000003c8 .LVL60
     /tmp/ccbLgW2Y.s:703    .text:00000000000002e8 .LVL40
     /tmp/ccbLgW2Y.s:721    .text:00000000000002f4 .LVL41
     /tmp/ccbLgW2Y.s:735    .text:0000000000000308 .LVL43
     /tmp/ccbLgW2Y.s:759    .text:0000000000000320 .LVL45
GAS LISTING /tmp/ccbLgW2Y.s 			page 59


     /tmp/ccbLgW2Y.s:727    .text:00000000000002f8 .LVL42
     /tmp/ccbLgW2Y.s:755    .text:0000000000000318 .LVL44
     /tmp/ccbLgW2Y.s:763    .text:0000000000000328 .LVL46
     /tmp/ccbLgW2Y.s:919    .text:00000000000003d8 .LVL62
     /tmp/ccbLgW2Y.s:933    .text:00000000000003ec .LVL63
     /tmp/ccbLgW2Y.s:942    .text:0000000000000404 .LVL66
     /tmp/ccbLgW2Y.s:607    .text:00000000000002b4 .LVL37
     /tmp/ccbLgW2Y.s:958    .text:0000000000000410 .LVL68
     /tmp/ccbLgW2Y.s:967    .text:0000000000000414 .LVL69
     /tmp/ccbLgW2Y.s:974    .text:0000000000000418 .LVL70
     /tmp/ccbLgW2Y.s:983    .text:000000000000041c .LVL71
     /tmp/ccbLgW2Y.s:347    .text:000000000000015c .LVL19
     /tmp/ccbLgW2Y.s:401    .text:000000000000018c .LVL22
     /tmp/ccbLgW2Y.s:375    .text:0000000000000180 .LVL20
     /tmp/ccbLgW2Y.s:457    .text:0000000000000200 .LVL31
     /tmp/ccbLgW2Y.s:405    .text:0000000000000190 .LVL23
     /tmp/ccbLgW2Y.s:412    .text:0000000000000198 .LVL24
     /tmp/ccbLgW2Y.s:423    .text:00000000000001bc .LVL25
     /tmp/ccbLgW2Y.s:433    .text:00000000000001d0 .LVL27
     /tmp/ccbLgW2Y.s:438    .text:00000000000001d4 .LVL28
     /tmp/ccbLgW2Y.s:429    .text:00000000000001c8 .LVL26
     /tmp/ccbLgW2Y.s:388    .text:0000000000000188 .LVL21
     /tmp/ccbLgW2Y.s:461    .text:0000000000000208 .LVL32
     /tmp/ccbLgW2Y.s:470    .text:000000000000020c .LVL33
     /tmp/ccbLgW2Y.s:239    .text:00000000000000ec .LVL10
     /tmp/ccbLgW2Y.s:281    .text:000000000000011c .LVL12
     /tmp/ccbLgW2Y.s:331    .text:0000000000000150 .LVL18
     /tmp/ccbLgW2Y.s:268    .text:0000000000000114 .LVL11
     /tmp/ccbLgW2Y.s:306    .text:0000000000000138 .LVL15
     /tmp/ccbLgW2Y.s:310    .text:0000000000000140 .LVL16
     /tmp/ccbLgW2Y.s:319    .text:0000000000000144 .LVL17
     /tmp/ccbLgW2Y.s:142    .text:0000000000000090 .LVL7
     /tmp/ccbLgW2Y.s:152    .text:0000000000000098 .LVL8
     /tmp/ccbLgW2Y.s:104    .text:0000000000000070 .LVL5
     /tmp/ccbLgW2Y.s:114    .text:0000000000000078 .LVL6
     /tmp/ccbLgW2Y.s:1419   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccbLgW2Y.s:553    .text:0000000000000280 .LBB70
     /tmp/ccbLgW2Y.s:687    .text:00000000000002cc .LBE70
     /tmp/ccbLgW2Y.s:947    .text:0000000000000404 .LBB98
     /tmp/ccbLgW2Y.s:988    .text:000000000000041c .LBE98
     /tmp/ccbLgW2Y.s:1005   .text:0000000000000430 .LBB99
     /tmp/ccbLgW2Y.s:1109   .text:00000000000004cc .LBE99
     /tmp/ccbLgW2Y.s:697    .text:00000000000002dc .LBB79
     /tmp/ccbLgW2Y.s:777    .text:000000000000033c .LBE79
     /tmp/ccbLgW2Y.s:922    .text:00000000000003d8 .LBB97
     /tmp/ccbLgW2Y.s:946    .text:0000000000000404 .LBE97
     /tmp/ccbLgW2Y.s:730    .text:00000000000002fc .LBB81
     /tmp/ccbLgW2Y.s:765    .text:0000000000000328 .LBE81
     /tmp/ccbLgW2Y.s:924    .text:00000000000003d8 .LBB82
     /tmp/ccbLgW2Y.s:944    .text:0000000000000404 .LBE82
     /tmp/ccbLgW2Y.s:1236   .gcc_except_table:0000000000000000 .LLSDA34

UNDEFINED SYMBOLS
_Z8userMainv
_ZN5Riscv14supervisorTrapEv
_ZN3PCB10initializeEv
_ZN8KConsole10initializeEv
GAS LISTING /tmp/ccbLgW2Y.s 			page 60


__putc
_ZN3PCB10savedRegA4E
CONSOLE_STATUS
CONSOLE_TX_DATA
_ZN8KConsole11pendingGetcE
plic_claim
plic_complete
_ZN3PCB16timeSliceCounterE
_ZN12SleepPCBList13tryToWakePCBsEv
_ZN3PCB7runningE
_ZN3PCB8dispatchEv
_ZN8KConsole17putCharacterInputEc
_ZN8KConsole18putCharacterOutputEc
_ZN15MemoryAllocator15memAllocHandlerEv
_ZN15MemoryAllocator14memFreeHandlerEv
_ZN3PCB20threadMakePCBHandlerEv
_ZN3PCB19threadCreateHandlerEv
_ZN3PCB18threadStartHandlerEv
_ZN3PCB21threadDispatchHandlerEv
_ZN3PCB17threadExitHandlerEv
_ZN3PCB18threadSleepHandlerEv
_ZN10KSemaphore14semOpenHandlerEv
_ZN10KSemaphore14semWaitHandlerEv
_ZN10KSemaphore16semSignalHandlerEv
_ZN10KSemaphore15semCloseHandlerEv
_ZN8KConsole11getcHandlerEv
_ZN8KConsole11putcHandlerEv
_Z7kmallocm
_ZN3PCBnwEm
_ZN3PCBC1EPFvPvES0_S0_m
_ZN3PCB5startEv
_ZN3PCB10isFinishedEv
thread_dispatch
_ZN3PCBdlEPv
_Unwind_Resume
__gxx_personality_v0
_Z7myTestsv
