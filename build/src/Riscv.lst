GAS LISTING /tmp/ccnr7RuG.s 			page 1


   1              		.file	"Riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10initSystemEv
   9              	_ZN5Riscv10initSystemEv:
  10              	.LFB21:
  11              		.file 1 "src/Riscv.cpp"
   1:src/Riscv.cpp **** //
   2:src/Riscv.cpp **** // Created by os on 4/27/22.
   3:src/Riscv.cpp **** //
   4:src/Riscv.cpp **** 
   5:src/Riscv.cpp **** #include "../h/Riscv.hpp"
   6:src/Riscv.cpp **** #include "../h/MemoryAllocator.hpp"
   7:src/Riscv.cpp **** #include "../h/PCB.hpp"
   8:src/Riscv.cpp **** #include "../lib/console.h"
   9:src/Riscv.cpp **** #include "../h/syscall_cpp.hpp"
  10:src/Riscv.cpp **** #include "../h/SleepPCBList.hpp"
  11:src/Riscv.cpp **** 
  12:src/Riscv.cpp **** //todo
  13:src/Riscv.cpp **** //sta sve treba da se odradi ovde
  14:src/Riscv.cpp **** void Riscv::initSystem() {
  12              		.loc 1 14 26
  13              		.cfi_startproc
  14              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
  15              		.cfi_lsda 0x1b,.LLSDA21
  16 0000 130101FE 		addi	sp,sp,-32
  17              		.cfi_def_cfa_offset 32
  18 0004 233C1100 		sd	ra,24(sp)
  19 0008 23388100 		sd	s0,16(sp)
  20 000c 23349100 		sd	s1,8(sp)
  21 0010 23302101 		sd	s2,0(sp)
  22              		.cfi_offset 1, -8
  23              		.cfi_offset 8, -16
  24              		.cfi_offset 9, -24
  25              		.cfi_offset 18, -32
  26 0014 13040102 		addi	s0,sp,32
  27              		.cfi_def_cfa 8, 0
  15:src/Riscv.cpp ****     w_stvec((uint64)&Riscv::supervisorTrap);
  28              		.loc 1 15 5
  29              		.loc 1 15 12 is_stmt 0
  30 0018 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
  30      83B70700 
  31              	.LVL0:
  32              	.LBB74:
  33              	.LBB75:
  34              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 4/27/22.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_0_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_0_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
GAS LISTING /tmp/ccnr7RuG.s 			page 2


   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** class Riscv
  11:src/../h/Riscv.hpp **** {
  12:src/../h/Riscv.hpp **** private:
  13:src/../h/Riscv.hpp **** 
  14:src/../h/Riscv.hpp **** public:
  15:src/../h/Riscv.hpp ****     static void initSystem();
  16:src/../h/Riscv.hpp ****     static void endSystem();
  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp ****     static void enableInterrupts();
  19:src/../h/Riscv.hpp **** 
  20:src/../h/Riscv.hpp ****     static void disableInterrupts();
  21:src/../h/Riscv.hpp **** 
  22:src/../h/Riscv.hpp ****     static void printString(char const *string);
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp ****     static void printInteger(uint64 num);
  25:src/../h/Riscv.hpp **** 
  26:src/../h/Riscv.hpp ****     static void pushRegisters();
  27:src/../h/Riscv.hpp ****     static void popRegisters();
  28:src/../h/Riscv.hpp **** 
  29:src/../h/Riscv.hpp ****     static uint64 r_scause();
  30:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  31:src/../h/Riscv.hpp **** 
  32:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  33:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
  34:src/../h/Riscv.hpp **** 
  35:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  36:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  37:src/../h/Riscv.hpp **** 
  38:src/../h/Riscv.hpp ****     static uint64 r_stval();
  39:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  40:src/../h/Riscv.hpp **** 
  41:src/../h/Riscv.hpp ****     enum BitMaskSip
  42:src/../h/Riscv.hpp ****     {
  43:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  44:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  45:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9),
  46:src/../h/Riscv.hpp ****     };
  47:src/../h/Riscv.hpp **** 
  48:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  49:src/../h/Riscv.hpp **** 
  50:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  51:src/../h/Riscv.hpp **** 
  52:src/../h/Riscv.hpp ****     static uint64 r_sip();
  53:src/../h/Riscv.hpp **** 
  54:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  55:src/../h/Riscv.hpp **** 
  56:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  57:src/../h/Riscv.hpp ****     {
  58:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  59:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  60:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  61:src/../h/Riscv.hpp ****     };
  62:src/../h/Riscv.hpp **** 
  63:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  64:src/../h/Riscv.hpp **** 
  65:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
GAS LISTING /tmp/ccnr7RuG.s 			page 3


  66:src/../h/Riscv.hpp **** 
  67:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  68:src/../h/Riscv.hpp **** 
  69:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp ****     static void popSppSpie();
  72:src/../h/Riscv.hpp **** 
  73:src/../h/Riscv.hpp ****     static void supervisorTrap();
  74:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  75:src/../h/Riscv.hpp **** 
  76:src/../h/Riscv.hpp ****     static const uint64 bntOne = 1UL << 63;;
  77:src/../h/Riscv.hpp ****     static const uint64 bntZero = 0UL;
  78:src/../h/Riscv.hpp ****     static const uint64 timerInterrupt = bntOne + 1UL;
  79:src/../h/Riscv.hpp ****     static const uint64 hwInterrupt = bntOne + 9UL;
  80:src/../h/Riscv.hpp ****     static const uint64 operationInterrupt = bntZero + 2UL;
  81:src/../h/Riscv.hpp ****     static const uint64 addrReadInterrupt = bntZero + 5UL;
  82:src/../h/Riscv.hpp ****     static const uint64 addrWriteInterrupt = bntZero + 7UL;
  83:src/../h/Riscv.hpp ****     static const uint64 ecallUserInterrupt = bntZero + 8UL;
  84:src/../h/Riscv.hpp ****     static const uint64 ecallSystemInterupt = bntZero + 9UL;
  85:src/../h/Riscv.hpp **** };
  86:src/../h/Riscv.hpp **** 
  87:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause() {
  88:src/../h/Riscv.hpp ****     uint64 volatile scause;
  89:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
  90:src/../h/Riscv.hpp ****     return scause;
  91:src/../h/Riscv.hpp **** }
  92:src/../h/Riscv.hpp **** 
  93:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
  94:src/../h/Riscv.hpp ****     __asm__ volatile("csrw scause, %0" : :"r"(scause));
  95:src/../h/Riscv.hpp **** }
  96:src/../h/Riscv.hpp **** 
  97:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc() {
  98:src/../h/Riscv.hpp ****     uint64 volatile sepc;
  99:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 100:src/../h/Riscv.hpp ****     return sepc;
 101:src/../h/Riscv.hpp **** }
 102:src/../h/Riscv.hpp **** 
 103:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
 104:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sepc, %0" : :"r"(sepc));
 105:src/../h/Riscv.hpp **** }
 106:src/../h/Riscv.hpp **** 
 107:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec() {
 108:src/../h/Riscv.hpp ****     uint64 volatile stvec;
 109:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, stvec" : "=r"(stvec));
 110:src/../h/Riscv.hpp ****     return stvec;
 111:src/../h/Riscv.hpp **** }
 112:src/../h/Riscv.hpp **** 
 113:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 114:src/../h/Riscv.hpp ****     __asm__ volatile("csrw stvec, %0" : :"r"(stvec));
  35              		.loc 2 114 5 is_stmt 1
  36              		.loc 2 114 53 is_stmt 0
  37              	#APP
  38              	# 114 "src/../h/Riscv.hpp" 1
 115              	}
  39              		csrw stvec, a5
  40              	# 0 "" 2
  41              	.LVL1:
GAS LISTING /tmp/ccnr7RuG.s 			page 4


  42              	#NO_APP
  43              	.LBE75:
  44              	.LBE74:
  16:src/Riscv.cpp ****     Thread* t = new Thread(0, 0);
  45              		.loc 1 16 5 is_stmt 1
  46              		.loc 1 16 32 is_stmt 0
  47 0024 13058001 		li	a0,24
  48              	.LEHB0:
  49 0028 97000000 		call	_Znwm@plt
  49      E7800000 
  50              	.LVL2:
  51              	.LEHE0:
  52 0030 93040500 		mv	s1,a0
  53 0034 13060000 		li	a2,0
  54 0038 93050000 		li	a1,0
  55              	.LEHB1:
  56 003c 97000000 		call	_ZN6ThreadC1EPFvPvES0_@plt
  56      E7800000 
  57              	.LVL3:
  58              	.LEHE1:
  17:src/Riscv.cpp ****     t->start();
  59              		.loc 1 17 5 is_stmt 1 discriminator 2
  60              		.loc 1 17 13 is_stmt 0 discriminator 2
  61 0044 13850400 		mv	a0,s1
  62              	.LEHB2:
  63 0048 97000000 		call	_ZN6Thread5startEv@plt
  63      E7800000 
  64              	.LVL4:
  18:src/Riscv.cpp ****     PCB::running = Scheduler::get();
  65              		.loc 1 18 5 is_stmt 1 discriminator 2
  66              		.loc 1 18 34 is_stmt 0 discriminator 2
  67 0050 97000000 		call	_ZN9Scheduler3getEv@plt
  67      E7800000 
  68              	.LVL5:
  69              	.LEHE2:
  70              		.loc 1 18 18 discriminator 2
  71 0058 97070000 		la	a5,_ZN3PCB7runningE
  71      83B70700 
  72 0060 23B0A700 		sd	a0,0(a5)
  19:src/Riscv.cpp ****     PCB::running->setState(PCB::RUNNING);
  73              		.loc 1 19 5 is_stmt 1 discriminator 2
  74              	.LVL6:
  75              	.LBB76:
  76              	.LBB77:
  77              		.file 3 "src/../h/PCB.hpp"
   1:src/../h/PCB.hpp **** //
   2:src/../h/PCB.hpp **** // Created by os on 4/27/22.
   3:src/../h/PCB.hpp **** //
   4:src/../h/PCB.hpp **** 
   5:src/../h/PCB.hpp **** #ifndef PROJECT_BASE_V1_0_PCB_HPP
   6:src/../h/PCB.hpp **** #define PROJECT_BASE_V1_0_PCB_HPP
   7:src/../h/PCB.hpp **** 
   8:src/../h/PCB.hpp **** #include "../lib/hw.h"
   9:src/../h/PCB.hpp **** #include "Scheduler.hpp"
  10:src/../h/PCB.hpp **** #include "Riscv.hpp"
  11:src/../h/PCB.hpp **** 
  12:src/../h/PCB.hpp **** class PCB
GAS LISTING /tmp/ccnr7RuG.s 			page 5


  13:src/../h/PCB.hpp **** {
  14:src/../h/PCB.hpp **** public:
  15:src/../h/PCB.hpp ****     using Body = void (*)(void*);
  16:src/../h/PCB.hpp **** 
  17:src/../h/PCB.hpp ****     PCB(Body body,  void* args, void* stack_space, uint64 timeSlice);
  18:src/../h/PCB.hpp ****     ~PCB();
  19:src/../h/PCB.hpp **** 
  20:src/../h/PCB.hpp ****     void start();
  21:src/../h/PCB.hpp ****     static void dispatch();
  22:src/../h/PCB.hpp ****     static void sleep(time_t);
  23:src/../h/PCB.hpp **** 
  24:src/../h/PCB.hpp ****     static PCB* running;
  25:src/../h/PCB.hpp ****     static PCB* exitingPCB;
  26:src/../h/PCB.hpp **** 
  27:src/../h/PCB.hpp ****     static uint64 timeSliceCounter;
  28:src/../h/PCB.hpp ****     uint64 getTimeSlice() { return timeSlice;}
  29:src/../h/PCB.hpp **** 
  30:src/../h/PCB.hpp ****     void* operator new(size_t size);
  31:src/../h/PCB.hpp ****     void operator delete(void *p);
  32:src/../h/PCB.hpp **** 
  33:src/../h/PCB.hpp ****     enum State{READY, RUNNING, SUSPENDED, FINISHED, EXITING, SLEEPING};
  34:src/../h/PCB.hpp ****     State getState() {return state;}
  35:src/../h/PCB.hpp ****     void setState(State s) {state = s;}
  78              		.loc 3 35 29 discriminator 2
  79              		.loc 3 35 35 is_stmt 0 discriminator 2
  80 0064 93071000 		li	a5,1
  81 0068 2328F502 		sw	a5,48(a0)
  82              	.LVL7:
  83              	.LBE77:
  84              	.LBE76:
  20:src/Riscv.cpp **** }
  85              		.loc 1 20 1 discriminator 2
  86 006c 83308101 		ld	ra,24(sp)
  87              		.cfi_remember_state
  88              		.cfi_restore 1
  89 0070 03340101 		ld	s0,16(sp)
  90              		.cfi_restore 8
  91              		.cfi_def_cfa 2, 32
  92 0074 83348100 		ld	s1,8(sp)
  93              		.cfi_restore 9
  94              	.LVL8:
  95 0078 03390100 		ld	s2,0(sp)
  96              		.cfi_restore 18
  97 007c 13010102 		addi	sp,sp,32
  98              		.cfi_def_cfa_offset 0
  99 0080 67800000 		jr	ra
 100              	.L3:
 101              		.cfi_restore_state
 102 0084 13090500 		mv	s2,a0
  16:src/Riscv.cpp ****     t->start();
 103              		.loc 1 16 32
 104 0088 13850400 		mv	a0,s1
 105 008c 97000000 		call	_ZdlPv@plt
 105      E7800000 
 106              	.LVL9:
 107 0094 13050900 		mv	a0,s2
 108              	.LEHB3:
GAS LISTING /tmp/ccnr7RuG.s 			page 6


 109 0098 97000000 		call	_Unwind_Resume@plt
 109      E7800000 
 110              	.LVL10:
 111              	.LEHE3:
 112              		.cfi_endproc
 113              	.LFE21:
 114              		.globl	__gxx_personality_v0
 115              		.section	.gcc_except_table,"a",@progbits
 116              	.LLSDA21:
 117 0000 FF       		.byte	0xff
 118 0001 FF       		.byte	0xff
 119 0002 03       		.byte	0x3
 120 0003 34       		.byte	0x34
 121 0004 00000000 		.4byte	.LEHB0-.LFB21
 122 0008 00000000 		.4byte	.LEHE0-.LEHB0
 123 000c 00000000 		.4byte	0
 124 0010 00       		.byte	0
 125 0011 00000000 		.4byte	.LEHB1-.LFB21
 126 0015 00000000 		.4byte	.LEHE1-.LEHB1
 127 0019 00000000 		.4byte	.L3-.LFB21
 128 001d 00       		.byte	0
 129 001e 00000000 		.4byte	.LEHB2-.LFB21
 130 0022 00000000 		.4byte	.LEHE2-.LEHB2
 131 0026 00000000 		.4byte	0
 132 002a 00       		.byte	0
 133 002b 00000000 		.4byte	.LEHB3-.LFB21
 134 002f 00000000 		.4byte	.LEHE3-.LEHB3
 135 0033 00000000 		.4byte	0
 136 0037 00       		.byte	0
 137              		.text
 139              		.align	2
 140              		.globl	_ZN5Riscv16enableInterruptsEv
 142              	_ZN5Riscv16enableInterruptsEv:
 143              	.LFB23:
  21:src/Riscv.cpp **** 
  22:src/Riscv.cpp **** void Riscv::endSystem() {
  23:src/Riscv.cpp ****     //todo
  24:src/Riscv.cpp ****     //da li treba jos nesto da se ocisti
  25:src/Riscv.cpp ****     Riscv::disableInterrupts();
  26:src/Riscv.cpp **** }
  27:src/Riscv.cpp **** 
  28:src/Riscv.cpp **** 
  29:src/Riscv.cpp **** void Riscv::enableInterrupts() {
 144              		.loc 1 29 32 is_stmt 1
 145              		.cfi_startproc
 146 00a0 130101FF 		addi	sp,sp,-16
 147              		.cfi_def_cfa_offset 16
 148 00a4 23348100 		sd	s0,8(sp)
 149              		.cfi_offset 8, -8
 150 00a8 13040101 		addi	s0,sp,16
 151              		.cfi_def_cfa 8, 0
  30:src/Riscv.cpp ****     ms_sstatus(Riscv::SSTATUS_SIE);
 152              		.loc 1 30 5
 153              	.LVL11:
 154              	.LBB78:
 155              	.LBB79:
 116:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/ccnr7RuG.s 			page 7


 117:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stval() {
 118:src/../h/Riscv.hpp ****     uint64 volatile stval;
 119:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, stval" : "=r"(stval));
 120:src/../h/Riscv.hpp ****     return stval;
 121:src/../h/Riscv.hpp **** }
 122:src/../h/Riscv.hpp **** 
 123:src/../h/Riscv.hpp **** inline void Riscv::w_stval(uint64 stval) {
 124:src/../h/Riscv.hpp ****     __asm__ volatile("csrw stval, %0" : :"r"(stval));
 125:src/../h/Riscv.hpp **** }
 126:src/../h/Riscv.hpp **** 
 127:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 128:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sip, %0" : :"r"(mask));
 129:src/../h/Riscv.hpp **** }
 130:src/../h/Riscv.hpp **** 
 131:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 132:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sip, %0" : :"r"(mask));
 133:src/../h/Riscv.hpp **** }
 134:src/../h/Riscv.hpp **** 
 135:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip() {
 136:src/../h/Riscv.hpp ****     uint64 volatile sip;
 137:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sip" : "=r"(sip));
 138:src/../h/Riscv.hpp ****     return sip;
 139:src/../h/Riscv.hpp **** }
 140:src/../h/Riscv.hpp **** 
 141:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 142:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sip, %0" : :"r"(sip));
 143:src/../h/Riscv.hpp **** }
 144:src/../h/Riscv.hpp **** 
 145:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 146:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sstatus, %0" : :"r"(mask));
 156              		.loc 2 146 5
 157              		.loc 2 146 54 is_stmt 0
 158 00ac 93072000 		li	a5,2
 159              	#APP
 160              	# 146 "src/../h/Riscv.hpp" 1
 147              	}
 161              		csrs sstatus, a5
 162              	# 0 "" 2
 163              	.LVL12:
 164              	#NO_APP
 165              	.LBE79:
 166              	.LBE78:
  31:src/Riscv.cpp **** }
 167              		.loc 1 31 1
 168 00b4 03348100 		ld	s0,8(sp)
 169              		.cfi_restore 8
 170              		.cfi_def_cfa 2, 16
 171 00b8 13010101 		addi	sp,sp,16
 172              		.cfi_def_cfa_offset 0
 173 00bc 67800000 		jr	ra
 174              		.cfi_endproc
 175              	.LFE23:
 177              		.align	2
 178              		.globl	_ZN5Riscv17disableInterruptsEv
 180              	_ZN5Riscv17disableInterruptsEv:
 181              	.LFB24:
  32:src/Riscv.cpp **** 
GAS LISTING /tmp/ccnr7RuG.s 			page 8


  33:src/Riscv.cpp **** void Riscv::disableInterrupts()
  34:src/Riscv.cpp **** {
 182              		.loc 1 34 1 is_stmt 1
 183              		.cfi_startproc
 184 00c0 130101FF 		addi	sp,sp,-16
 185              		.cfi_def_cfa_offset 16
 186 00c4 23348100 		sd	s0,8(sp)
 187              		.cfi_offset 8, -8
 188 00c8 13040101 		addi	s0,sp,16
 189              		.cfi_def_cfa 8, 0
  35:src/Riscv.cpp ****     mc_sstatus(Riscv::SSTATUS_SIE);
 190              		.loc 1 35 5
 191              	.LVL13:
 192              	.LBB80:
 193              	.LBB81:
 148:src/../h/Riscv.hpp **** 
 149:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 150:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sstatus, %0" : :"r"(mask));
 194              		.loc 2 150 5
 195              		.loc 2 150 54 is_stmt 0
 196 00cc 93072000 		li	a5,2
 197              	#APP
 198              	# 150 "src/../h/Riscv.hpp" 1
 151              	}
 199              		csrc sstatus, a5
 200              	# 0 "" 2
 201              	.LVL14:
 202              	#NO_APP
 203              	.LBE81:
 204              	.LBE80:
  36:src/Riscv.cpp **** }
 205              		.loc 1 36 1
 206 00d4 03348100 		ld	s0,8(sp)
 207              		.cfi_restore 8
 208              		.cfi_def_cfa 2, 16
 209 00d8 13010101 		addi	sp,sp,16
 210              		.cfi_def_cfa_offset 0
 211 00dc 67800000 		jr	ra
 212              		.cfi_endproc
 213              	.LFE24:
 215              		.align	2
 216              		.globl	_ZN5Riscv9endSystemEv
 218              	_ZN5Riscv9endSystemEv:
 219              	.LFB22:
  22:src/Riscv.cpp ****     //todo
 220              		.loc 1 22 25 is_stmt 1
 221              		.cfi_startproc
 222 00e0 130101FF 		addi	sp,sp,-16
 223              		.cfi_def_cfa_offset 16
 224 00e4 23341100 		sd	ra,8(sp)
 225 00e8 23308100 		sd	s0,0(sp)
 226              		.cfi_offset 1, -8
 227              		.cfi_offset 8, -16
 228 00ec 13040101 		addi	s0,sp,16
 229              		.cfi_def_cfa 8, 0
  25:src/Riscv.cpp **** }
 230              		.loc 1 25 5
GAS LISTING /tmp/ccnr7RuG.s 			page 9


  25:src/Riscv.cpp **** }
 231              		.loc 1 25 29 is_stmt 0
 232 00f0 97000000 		call	_ZN5Riscv17disableInterruptsEv
 232      E7800000 
 233              	.LVL15:
  26:src/Riscv.cpp **** 
 234              		.loc 1 26 1
 235 00f8 83308100 		ld	ra,8(sp)
 236              		.cfi_restore 1
 237 00fc 03340100 		ld	s0,0(sp)
 238              		.cfi_restore 8
 239              		.cfi_def_cfa 2, 16
 240 0100 13010101 		addi	sp,sp,16
 241              		.cfi_def_cfa_offset 0
 242 0104 67800000 		jr	ra
 243              		.cfi_endproc
 244              	.LFE22:
 246              		.align	2
 247              		.globl	_ZN5Riscv10popSppSpieEv
 249              	_ZN5Riscv10popSppSpieEv:
 250              	.LFB25:
  37:src/Riscv.cpp **** 
  38:src/Riscv.cpp **** void Riscv::popSppSpie() {
 251              		.loc 1 38 26 is_stmt 1
 252              		.cfi_startproc
 253 0108 130101FF 		addi	sp,sp,-16
 254              		.cfi_def_cfa_offset 16
 255 010c 23348100 		sd	s0,8(sp)
 256              		.cfi_offset 8, -8
 257 0110 13040101 		addi	s0,sp,16
 258              		.cfi_def_cfa 8, 0
  39:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
 259              		.loc 1 39 5
 260              		.loc 1 39 39 is_stmt 0
 261              	#APP
 262              	# 39 "src/Riscv.cpp" 1
  40              	    __asm__ volatile ("sret");
 263              		csrw sepc, ra
 264              	# 0 "" 2
 265              		.loc 1 40 5 is_stmt 1
 266              		.loc 1 40 30 is_stmt 0
 267              	# 40 "src/Riscv.cpp" 1
  41              	}
 268              		sret
 269              	# 0 "" 2
 270              		.loc 1 41 1
 271              	#NO_APP
 272 011c 03348100 		ld	s0,8(sp)
 273              		.cfi_restore 8
 274              		.cfi_def_cfa 2, 16
 275 0120 13010101 		addi	sp,sp,16
 276              		.cfi_def_cfa_offset 0
 277 0124 67800000 		jr	ra
 278              		.cfi_endproc
 279              	.LFE25:
 281              		.align	2
 282              		.globl	_ZN5Riscv11printStringEPKc
GAS LISTING /tmp/ccnr7RuG.s 			page 10


 284              	_ZN5Riscv11printStringEPKc:
 285              	.LFB26:
  42:src/Riscv.cpp **** 
  43:src/Riscv.cpp **** void Riscv::printString(const char *string)
  44:src/Riscv.cpp **** {
 286              		.loc 1 44 1 is_stmt 1
 287              		.cfi_startproc
 288              	.LVL16:
 289 0128 130101FD 		addi	sp,sp,-48
 290              		.cfi_def_cfa_offset 48
 291 012c 23341102 		sd	ra,40(sp)
 292 0130 23308102 		sd	s0,32(sp)
 293 0134 233C9100 		sd	s1,24(sp)
 294 0138 23382101 		sd	s2,16(sp)
 295              		.cfi_offset 1, -8
 296              		.cfi_offset 8, -16
 297              		.cfi_offset 9, -24
 298              		.cfi_offset 18, -32
 299 013c 13040103 		addi	s0,sp,48
 300              		.cfi_def_cfa 8, 0
 301 0140 93040500 		mv	s1,a0
  45:src/Riscv.cpp ****     uint64 sstatus = r_sstatus();
 302              		.loc 1 45 5
 303              	.LBB82:
 304              	.LBB83:
 152:src/../h/Riscv.hpp **** 
 153:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sstatus() {
 154:src/../h/Riscv.hpp ****     uint64 volatile sstatus;
 305              		.loc 2 154 5
 155:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 306              		.loc 2 155 5
 307              		.loc 2 155 57 is_stmt 0
 308              	#APP
 309              	# 155 "src/../h/Riscv.hpp" 1
 156              	    return sstatus;
 310              		csrr a5, sstatus
 311              	# 0 "" 2
 312              	#NO_APP
 313 0148 233CF4FC 		sd	a5,-40(s0)
 314              		.loc 2 156 5 is_stmt 1
 315              		.loc 2 156 12 is_stmt 0
 316 014c 033984FD 		ld	s2,-40(s0)
 317              	.LVL17:
 318              	.LBE83:
 319              	.LBE82:
  46:src/Riscv.cpp ****     mc_sstatus(SSTATUS_SIE);
 320              		.loc 1 46 5 is_stmt 1
 321              	.LBB84:
 322              	.LBB85:
 150:src/../h/Riscv.hpp **** }
 323              		.loc 2 150 5
 150:src/../h/Riscv.hpp **** }
 324              		.loc 2 150 54 is_stmt 0
 325 0150 93072000 		li	a5,2
 326              	#APP
 327              	# 150 "src/../h/Riscv.hpp" 1
 328              		csrc sstatus, a5
GAS LISTING /tmp/ccnr7RuG.s 			page 11


 329              	# 0 "" 2
 330              	.LVL18:
 331              	#NO_APP
 332              	.L16:
 333              	.LBE85:
 334              	.LBE84:
  47:src/Riscv.cpp ****     while (*string != '\0')
 335              		.loc 1 47 5 is_stmt 1
 336              		.loc 1 47 20
 337              		.loc 1 47 12 is_stmt 0
 338 0158 03C50400 		lbu	a0,0(s1)
 339              		.loc 1 47 20
 340 015c 630A0500 		beqz	a0,.L15
  48:src/Riscv.cpp ****     {
  49:src/Riscv.cpp ****         __putc(*string);
 341              		.loc 1 49 9 is_stmt 1
 342              		.loc 1 49 15 is_stmt 0
 343 0160 97000000 		call	__putc@plt
 343      E7800000 
 344              	.LVL19:
  50:src/Riscv.cpp ****         string++;
 345              		.loc 1 50 9 is_stmt 1
 346              		.loc 1 50 15 is_stmt 0
 347 0168 93841400 		addi	s1,s1,1
 348              	.LVL20:
  47:src/Riscv.cpp ****     while (*string != '\0')
 349              		.loc 1 47 5
 350 016c 6FF0DFFE 		j	.L16
 351              	.L15:
  51:src/Riscv.cpp ****     }
  52:src/Riscv.cpp ****     ms_sstatus(sstatus & SSTATUS_SIE ? SSTATUS_SIE : 0);
 352              		.loc 1 52 5 is_stmt 1
 353              		.loc 1 52 38 is_stmt 0
 354 0170 1B090900 		sext.w	s2,s2
 355              	.LVL21:
 356              		.loc 1 52 15
 357 0174 13792900 		andi	s2,s2,2
 358 0178 1B090900 		sext.w	s2,s2
 359              	.LVL22:
 360              	.LBB86:
 361              	.LBB87:
 146:src/../h/Riscv.hpp **** }
 362              		.loc 2 146 5 is_stmt 1
 146:src/../h/Riscv.hpp **** }
 363              		.loc 2 146 54 is_stmt 0
 364              	#APP
 365              	# 146 "src/../h/Riscv.hpp" 1
 366              		csrs sstatus, s2
 367              	# 0 "" 2
 368              	.LVL23:
 369              	#NO_APP
 370              	.LBE87:
 371              	.LBE86:
  53:src/Riscv.cpp **** }
 372              		.loc 1 53 1
 373 0180 83308102 		ld	ra,40(sp)
 374              		.cfi_restore 1
GAS LISTING /tmp/ccnr7RuG.s 			page 12


 375 0184 03340102 		ld	s0,32(sp)
 376              		.cfi_restore 8
 377              		.cfi_def_cfa 2, 48
 378 0188 83348101 		ld	s1,24(sp)
 379              		.cfi_restore 9
 380              	.LVL24:
 381 018c 03390101 		ld	s2,16(sp)
 382              		.cfi_restore 18
 383 0190 13010103 		addi	sp,sp,48
 384              		.cfi_def_cfa_offset 0
 385 0194 67800000 		jr	ra
 386              		.cfi_endproc
 387              	.LFE26:
 389              		.align	2
 390              		.globl	_ZN5Riscv12printIntegerEm
 392              	_ZN5Riscv12printIntegerEm:
 393              	.LFB27:
  54:src/Riscv.cpp **** 
  55:src/Riscv.cpp **** void Riscv::printInteger(uint64 num)
  56:src/Riscv.cpp **** {
 394              		.loc 1 56 1 is_stmt 1
 395              		.cfi_startproc
 396              	.LVL25:
 397 0198 130101FC 		addi	sp,sp,-64
 398              		.cfi_def_cfa_offset 64
 399 019c 233C1102 		sd	ra,56(sp)
 400 01a0 23388102 		sd	s0,48(sp)
 401 01a4 23349102 		sd	s1,40(sp)
 402 01a8 23302103 		sd	s2,32(sp)
 403              		.cfi_offset 1, -8
 404              		.cfi_offset 8, -16
 405              		.cfi_offset 9, -24
 406              		.cfi_offset 18, -32
 407 01ac 13040104 		addi	s0,sp,64
 408              		.cfi_def_cfa 8, 0
  57:src/Riscv.cpp ****     uint64 sstatus = r_sstatus();
 409              		.loc 1 57 5
 410              	.LBB88:
 411              	.LBB89:
 154:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 412              		.loc 2 154 5
 155:src/../h/Riscv.hpp ****     return sstatus;
 413              		.loc 2 155 5
 155:src/../h/Riscv.hpp ****     return sstatus;
 414              		.loc 2 155 57 is_stmt 0
 415              	#APP
 416              	# 155 "src/../h/Riscv.hpp" 1
 417              		csrr a5, sstatus
 418              	# 0 "" 2
 419              	#NO_APP
 420 01b4 2334F4FC 		sd	a5,-56(s0)
 421              		.loc 2 156 5 is_stmt 1
 422              		.loc 2 156 12 is_stmt 0
 423 01b8 033984FC 		ld	s2,-56(s0)
 424              	.LVL26:
 425              	.LBE89:
 426              	.LBE88:
GAS LISTING /tmp/ccnr7RuG.s 			page 13


  58:src/Riscv.cpp ****     mc_sstatus(SSTATUS_SIE);
 427              		.loc 1 58 5 is_stmt 1
 428              	.LBB90:
 429              	.LBB91:
 150:src/../h/Riscv.hpp **** }
 430              		.loc 2 150 5
 150:src/../h/Riscv.hpp **** }
 431              		.loc 2 150 54 is_stmt 0
 432 01bc 93072000 		li	a5,2
 433              	#APP
 434              	# 150 "src/../h/Riscv.hpp" 1
 435              		csrc sstatus, a5
 436              	# 0 "" 2
 437              	.LVL27:
 438              	#NO_APP
 439              	.LBE91:
 440              	.LBE90:
  59:src/Riscv.cpp ****     static char digits[] = "0123456789";
 441              		.loc 1 59 5 is_stmt 1
  60:src/Riscv.cpp ****     char buf[16];
 442              		.loc 1 60 5
  61:src/Riscv.cpp ****     int i, neg;
 443              		.loc 1 61 5
  62:src/Riscv.cpp ****     uint x;
 444              		.loc 1 62 5
  63:src/Riscv.cpp **** 
  64:src/Riscv.cpp ****     neg = 0;
 445              		.loc 1 64 5
  65:src/Riscv.cpp ****     if(num < 0)
 446              		.loc 1 65 5
  66:src/Riscv.cpp ****     {
  67:src/Riscv.cpp ****         neg = 1;
  68:src/Riscv.cpp ****         x = -num;
  69:src/Riscv.cpp ****     }
  70:src/Riscv.cpp ****     else
  71:src/Riscv.cpp ****         x = num;
 447              		.loc 1 71 9
 448              		.loc 1 71 11 is_stmt 0
 449 01c4 1B050500 		sext.w	a0,a0
 450              	.LVL28:
  72:src/Riscv.cpp **** 
  73:src/Riscv.cpp ****     i = 0;
 451              		.loc 1 73 5 is_stmt 1
 452              		.loc 1 73 7 is_stmt 0
 453 01c8 93040000 		li	s1,0
 454              	.LVL29:
 455              	.L19:
  74:src/Riscv.cpp ****     do
 456              		.loc 1 74 5 is_stmt 1
  75:src/Riscv.cpp ****     {
  76:src/Riscv.cpp ****         buf[i++] = digits[x%10];
 457              		.loc 1 76 9
 458              		.loc 1 76 28 is_stmt 0
 459 01cc 1306A000 		li	a2,10
 460 01d0 3B77C502 		remuw	a4,a0,a2
 461              	.LVL30:
 462              		.loc 1 76 31
GAS LISTING /tmp/ccnr7RuG.s 			page 14


 463 01d4 93160702 		slli	a3,a4,32
 464 01d8 93D60602 		srli	a3,a3,32
 465 01dc 17070000 		lla	a4,.LANCHOR0
 465      13070700 
 466 01e4 3307D700 		add	a4,a4,a3
 467 01e8 03470700 		lbu	a4,0(a4)
 468              		.loc 1 76 18
 469 01ec 930604FE 		addi	a3,s0,-32
 470 01f0 B3879600 		add	a5,a3,s1
 471 01f4 9B841400 		addiw	s1,s1,1
 472              	.LVL31:
 473 01f8 2388E7FE 		sb	a4,-16(a5)
  77:src/Riscv.cpp ****     }while((x/=10) != 0);
 474              		.loc 1 77 20 is_stmt 1
 475 01fc 1B070500 		sext.w	a4,a0
 476              		.loc 1 77 14 is_stmt 0
 477 0200 3B55C502 		divuw	a0,a0,a2
 478              	.LVL32:
 479              		.loc 1 77 20
 480 0204 93079000 		li	a5,9
 481 0208 E3E2E7FC 		bgtu	a4,a5,.L19
 482              	.LVL33:
 483              	.L21:
  78:src/Riscv.cpp ****     if(neg)
  79:src/Riscv.cpp ****         buf[i++] = '-';
  80:src/Riscv.cpp **** 
  81:src/Riscv.cpp ****     while(--i >= 0)
 484              		.loc 1 81 5 is_stmt 1
 485              		.loc 1 81 15
 486 020c 9B84F4FF 		addiw	s1,s1,-1
 487              	.LVL34:
 488 0210 63CE0400 		bltz	s1,.L20
  82:src/Riscv.cpp ****         __putc(buf[i]);
 489              		.loc 1 82 9
 490              		.loc 1 82 15 is_stmt 0
 491 0214 930704FE 		addi	a5,s0,-32
 492 0218 B3879700 		add	a5,a5,s1
 493 021c 03C507FF 		lbu	a0,-16(a5)
 494 0220 97000000 		call	__putc@plt
 494      E7800000 
 495              	.LVL35:
 496 0228 6FF05FFE 		j	.L21
 497              	.L20:
  83:src/Riscv.cpp **** 
  84:src/Riscv.cpp ****     __putc('\n');
 498              		.loc 1 84 5 is_stmt 1
 499              		.loc 1 84 11 is_stmt 0
 500 022c 1305A000 		li	a0,10
 501 0230 97000000 		call	__putc@plt
 501      E7800000 
 502              	.LVL36:
  85:src/Riscv.cpp **** 
  86:src/Riscv.cpp ****     ms_sstatus(sstatus & SSTATUS_SIE ? SSTATUS_SIE : 0);
 503              		.loc 1 86 5 is_stmt 1
 504              		.loc 1 86 38 is_stmt 0
 505 0238 1B090900 		sext.w	s2,s2
 506              	.LVL37:
GAS LISTING /tmp/ccnr7RuG.s 			page 15


 507              		.loc 1 86 15
 508 023c 13792900 		andi	s2,s2,2
 509 0240 1B090900 		sext.w	s2,s2
 510              	.LVL38:
 511              	.LBB92:
 512              	.LBB93:
 146:src/../h/Riscv.hpp **** }
 513              		.loc 2 146 5 is_stmt 1
 146:src/../h/Riscv.hpp **** }
 514              		.loc 2 146 54 is_stmt 0
 515              	#APP
 516              	# 146 "src/../h/Riscv.hpp" 1
 517              		csrs sstatus, s2
 518              	# 0 "" 2
 519              	.LVL39:
 520              	#NO_APP
 521              	.LBE93:
 522              	.LBE92:
  87:src/Riscv.cpp **** }
 523              		.loc 1 87 1
 524 0248 83308103 		ld	ra,56(sp)
 525              		.cfi_restore 1
 526 024c 03340103 		ld	s0,48(sp)
 527              		.cfi_restore 8
 528              		.cfi_def_cfa 2, 64
 529 0250 83348102 		ld	s1,40(sp)
 530              		.cfi_restore 9
 531 0254 03390102 		ld	s2,32(sp)
 532              		.cfi_restore 18
 533 0258 13010104 		addi	sp,sp,64
 534              		.cfi_def_cfa_offset 0
 535 025c 67800000 		jr	ra
 536              		.cfi_endproc
 537              	.LFE27:
 539              		.section	.rodata.str1.8,"aMS",@progbits,1
 540              		.align	3
 541              	.LC0:
 542 0000 74696D65 		.string	"timerInterrupt\n"
 542      72496E74 
 542      65727275 
 542      70740A00 
 543              		.text
 544              		.align	2
 545              		.globl	_ZN5Riscv20handleSupervisorTrapEv
 547              	_ZN5Riscv20handleSupervisorTrapEv:
 548              	.LFB28:
  88:src/Riscv.cpp **** 
  89:src/Riscv.cpp **** void Riscv::handleSupervisorTrap() {
 549              		.loc 1 89 36 is_stmt 1
 550              		.cfi_startproc
 551              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 552              		.cfi_lsda 0x1b,.LLSDA28
 553 0260 130101F8 		addi	sp,sp,-128
 554              		.cfi_def_cfa_offset 128
 555 0264 233C1106 		sd	ra,120(sp)
 556 0268 23388106 		sd	s0,112(sp)
 557 026c 23349106 		sd	s1,104(sp)
GAS LISTING /tmp/ccnr7RuG.s 			page 16


 558 0270 23302107 		sd	s2,96(sp)
 559 0274 233C3105 		sd	s3,88(sp)
 560 0278 23384105 		sd	s4,80(sp)
 561 027c 23345105 		sd	s5,72(sp)
 562 0280 23306105 		sd	s6,64(sp)
 563              		.cfi_offset 1, -8
 564              		.cfi_offset 8, -16
 565              		.cfi_offset 9, -24
 566              		.cfi_offset 18, -32
 567              		.cfi_offset 19, -40
 568              		.cfi_offset 20, -48
 569              		.cfi_offset 21, -56
 570              		.cfi_offset 22, -64
 571 0284 13040108 		addi	s0,sp,128
 572              		.cfi_def_cfa 8, 0
  90:src/Riscv.cpp **** 
  91:src/Riscv.cpp ****     uint64 a4;
 573              		.loc 1 91 5
  92:src/Riscv.cpp ****     __asm__ volatile("mv %0, a4" : "=r"(a4));
 574              		.loc 1 92 5
 575              		.loc 1 92 45 is_stmt 0
 576              	#APP
 577              	# 92 "src/Riscv.cpp" 1
  93              	
 578              		mv s2, a4
 579              	# 0 "" 2
 580              	.LVL40:
  94:src/Riscv.cpp ****     uint64 scause = Riscv::r_scause();
 581              		.loc 1 94 5 is_stmt 1
 582              	#NO_APP
 583              	.LBB94:
 584              	.LBB95:
  88:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
 585              		.loc 2 88 5
  89:src/../h/Riscv.hpp ****     return scause;
 586              		.loc 2 89 5
  89:src/../h/Riscv.hpp ****     return scause;
 587              		.loc 2 89 55 is_stmt 0
 588              	#APP
 589              	# 89 "src/../h/Riscv.hpp" 1
 590              		csrr a5, scause
 591              	# 0 "" 2
 592              	#NO_APP
 593 0290 2334F4F8 		sd	a5,-120(s0)
  90:src/../h/Riscv.hpp **** }
 594              		.loc 2 90 5 is_stmt 1
  90:src/../h/Riscv.hpp **** }
 595              		.loc 2 90 12 is_stmt 0
 596 0294 033784F8 		ld	a4,-120(s0)
 597              	.LVL41:
 598              	.LBE95:
 599              	.LBE94:
  95:src/Riscv.cpp **** 
  96:src/Riscv.cpp ****     switch(scause) {
 600              		.loc 1 96 5 is_stmt 1
 601              	.LBB96:
 602 0298 93079000 		li	a5,9
GAS LISTING /tmp/ccnr7RuG.s 			page 17


 603 029c 63FAE70A 		bleu	a4,a5,.L39
 604 02a0 9307F0FF 		li	a5,-1
 605 02a4 9397F703 		slli	a5,a5,63
 606 02a8 93871700 		addi	a5,a5,1
 607 02ac 6316F70A 		bne	a4,a5,.L26
 608              	.LBB97:
  97:src/Riscv.cpp **** 
  98:src/Riscv.cpp ****         case timerInterrupt:
 609              		.loc 1 98 9
  99:src/Riscv.cpp **** 
 100:src/Riscv.cpp ****             Riscv::mc_sip(Riscv::SIP_SSIP);
 610              		.loc 1 100 13
 611              	.LVL42:
 612              	.LBB98:
 613              	.LBB99:
 132:src/../h/Riscv.hpp **** }
 614              		.loc 2 132 5
 132:src/../h/Riscv.hpp **** }
 615              		.loc 2 132 50 is_stmt 0
 616 02b0 93072000 		li	a5,2
 617              	#APP
 618              	# 132 "src/../h/Riscv.hpp" 1
 619              		csrc sip, a5
 620              	# 0 "" 2
 621              	.LVL43:
 622              	#NO_APP
 623              	.LBE99:
 624              	.LBE98:
 101:src/Riscv.cpp ****             Riscv::printString("timerInterrupt\n");
 625              		.loc 1 101 13 is_stmt 1
 626              		.loc 1 101 31 is_stmt 0
 627 02b8 17050000 		lla	a0,.LC0
 627      13050500 
 628              	.LEHB4:
 629 02c0 97000000 		call	_ZN5Riscv11printStringEPKc
 629      E7800000 
 630              	.LVL44:
 102:src/Riscv.cpp ****             PCB::timeSliceCounter++;
 631              		.loc 1 102 13 is_stmt 1
 632              		.loc 1 102 34 is_stmt 0
 633 02c8 97040000 		la	s1,_ZN3PCB16timeSliceCounterE
 633      83B40400 
 634 02d0 83B70400 		ld	a5,0(s1)
 635 02d4 93871700 		addi	a5,a5,1
 636 02d8 23B0F400 		sd	a5,0(s1)
 103:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
 637              		.loc 1 103 13 is_stmt 1
 638              		.loc 1 103 40 is_stmt 0
 639 02dc 97000000 		call	_ZN12SleepPCBList13tryToWakePCBsEv@plt
 639      E7800000 
 640              	.LVL45:
 104:src/Riscv.cpp ****             static uint64 sumInterrupts = 0;
 641              		.loc 1 104 13 is_stmt 1
 105:src/Riscv.cpp ****             sumInterrupts++;
 642              		.loc 1 105 13
 643              		.loc 1 105 26 is_stmt 0
 644 02e4 97070000 		lla	a5,.LANCHOR1
GAS LISTING /tmp/ccnr7RuG.s 			page 18


 644      93870700 
 645 02ec 03B50700 		ld	a0,0(a5)
 646 02f0 13051500 		addi	a0,a0,1
 647 02f4 23B0A700 		sd	a0,0(a5)
 106:src/Riscv.cpp ****             Riscv::printInteger(sumInterrupts);
 648              		.loc 1 106 13 is_stmt 1
 649              		.loc 1 106 32 is_stmt 0
 650 02f8 97000000 		call	_ZN5Riscv12printIntegerEm
 650      E7800000 
 651              	.LVL46:
 107:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
 652              		.loc 1 107 13 is_stmt 1
 653              	.LBB100:
 654              		.loc 1 107 68 is_stmt 0
 655 0300 97070000 		la	a5,_ZN3PCB7runningE
 655      83B70700 
 656 0308 83B70700 		ld	a5,0(a5)
 657              	.LVL47:
 658              	.LBB101:
 659              	.LBB102:
  28:src/../h/PCB.hpp **** 
 660              		.loc 3 28 29 is_stmt 1
  28:src/../h/PCB.hpp **** 
 661              		.loc 3 28 36 is_stmt 0
 662 030c 83B78700 		ld	a5,8(a5)
 663              	.LVL48:
 664              	.LBE102:
 665              	.LBE101:
 666              		.loc 1 107 39
 667 0310 03B70400 		ld	a4,0(s1)
 668              		.loc 1 107 13
 669 0314 6362F704 		bltu	a4,a5,.L26
 670              	.LBB103:
 108:src/Riscv.cpp ****             {
 109:src/Riscv.cpp ****                 uint64 sepc = Riscv::r_sepc();
 671              		.loc 1 109 17 is_stmt 1
 672              	.LBB104:
 673              	.LBB105:
  98:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 674              		.loc 2 98 5
  99:src/../h/Riscv.hpp ****     return sepc;
 675              		.loc 2 99 5
  99:src/../h/Riscv.hpp ****     return sepc;
 676              		.loc 2 99 51 is_stmt 0
 677              	#APP
 678              	# 99 "src/../h/Riscv.hpp" 1
 679              		csrr a5, sepc
 680              	# 0 "" 2
 681              	#NO_APP
 682 031c 233CF4F8 		sd	a5,-104(s0)
 100:src/../h/Riscv.hpp **** }
 683              		.loc 2 100 5 is_stmt 1
 100:src/../h/Riscv.hpp **** }
 684              		.loc 2 100 12 is_stmt 0
 685 0320 833484F9 		ld	s1,-104(s0)
 686              	.LVL49:
 687              	.LBE105:
GAS LISTING /tmp/ccnr7RuG.s 			page 19


 688              	.LBE104:
 110:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 689              		.loc 1 110 17 is_stmt 1
 690              	.LBB106:
 691              	.LBB107:
 154:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 692              		.loc 2 154 5
 155:src/../h/Riscv.hpp ****     return sstatus;
 693              		.loc 2 155 5
 155:src/../h/Riscv.hpp ****     return sstatus;
 694              		.loc 2 155 57 is_stmt 0
 695              	#APP
 696              	# 155 "src/../h/Riscv.hpp" 1
 697              		csrr a5, sstatus
 698              	# 0 "" 2
 699              	#NO_APP
 700 0328 2338F4F8 		sd	a5,-112(s0)
 701              		.loc 2 156 5 is_stmt 1
 702              		.loc 2 156 12 is_stmt 0
 703 032c 033904F9 		ld	s2,-112(s0)
 704              	.LVL50:
 705              	.LBE107:
 706              	.LBE106:
 111:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 707              		.loc 1 111 17 is_stmt 1
 708              		.loc 1 111 39 is_stmt 0
 709 0330 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 709      83B70700 
 710 0338 23B00700 		sd	zero,0(a5)
 112:src/Riscv.cpp ****                 PCB::dispatch();
 711              		.loc 1 112 17 is_stmt 1
 712              		.loc 1 112 30 is_stmt 0
 713 033c 97000000 		call	_ZN3PCB8dispatchEv@plt
 713      E7800000 
 714              	.LVL51:
 113:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 715              		.loc 1 113 17 is_stmt 1
 716              	.LBB108:
 717              	.LBB109:
 157:src/../h/Riscv.hpp **** }
 158:src/../h/Riscv.hpp **** 
 159:src/../h/Riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus) {
 160:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sstatus, %0" : :"r"(sstatus));
 718              		.loc 2 160 5
 719              		.loc 2 160 57 is_stmt 0
 720              	#APP
 721              	# 160 "src/../h/Riscv.hpp" 1
 161              	}
 722              		csrw sstatus, s2
 723              	# 0 "" 2
 724              	.LVL52:
 725              	#NO_APP
 726              	.LBE109:
 727              	.LBE108:
 114:src/Riscv.cpp ****                 Riscv::w_sepc(sepc);
 728              		.loc 1 114 17 is_stmt 1
 729              	.LBB110:
GAS LISTING /tmp/ccnr7RuG.s 			page 20


 730              	.LBB111:
 104:src/../h/Riscv.hpp **** }
 731              		.loc 2 104 5
 104:src/../h/Riscv.hpp **** }
 732              		.loc 2 104 51 is_stmt 0
 733              	#APP
 734              	# 104 "src/../h/Riscv.hpp" 1
 105:src/../h/Riscv.hpp **** 
 735              		csrw sepc, s1
 736              	# 0 "" 2
 737              		.loc 2 105 1
 738              	#NO_APP
 739 034c 6F00C000 		j	.L26
 740              	.LVL53:
 741              	.L39:
 742              	.LBE111:
 743              	.LBE110:
 744              	.LBE103:
 745              	.LBE100:
 746              	.LBE97:
  96:src/Riscv.cpp **** 
 747              		.loc 1 96 5
 748 0350 93078000 		li	a5,8
 749 0354 637AF702 		bgeu	a4,a5,.L40
 750              	.LVL54:
 751              	.L26:
 752              	.LBE96:
 115:src/Riscv.cpp ****             }
 116:src/Riscv.cpp **** 
 117:src/Riscv.cpp ****             //Riscv::mc_sip(Riscv::SIP_SSIP);
 118:src/Riscv.cpp **** 
 119:src/Riscv.cpp ****             break;
 120:src/Riscv.cpp **** 
 121:src/Riscv.cpp ****         case hwInterrupt: // todo
 122:src/Riscv.cpp **** 
 123:src/Riscv.cpp ****             break;
 124:src/Riscv.cpp **** 
 125:src/Riscv.cpp ****         case operationInterrupt: // todo
 126:src/Riscv.cpp ****             break;
 127:src/Riscv.cpp **** 
 128:src/Riscv.cpp ****         case addrReadInterrupt: // todo
 129:src/Riscv.cpp ****             break;
 130:src/Riscv.cpp **** 
 131:src/Riscv.cpp ****         case addrWriteInterrupt: // todo
 132:src/Riscv.cpp ****             break;
 133:src/Riscv.cpp **** 
 134:src/Riscv.cpp ****         case ecallSystemInterupt:
 135:src/Riscv.cpp ****         case ecallUserInterrupt:
 136:src/Riscv.cpp **** 
 137:src/Riscv.cpp ****             uint64 operation;
 138:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
 139:src/Riscv.cpp **** 
 140:src/Riscv.cpp ****             uint64 sepc = Riscv::r_sepc();
 141:src/Riscv.cpp ****             sepc+=4;
 142:src/Riscv.cpp **** 
 143:src/Riscv.cpp ****             if(operation == MemoryAllocator::MEM_ALLOC)
 144:src/Riscv.cpp ****             {
GAS LISTING /tmp/ccnr7RuG.s 			page 21


 145:src/Riscv.cpp ****                 size_t size;
 146:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(size));
 147:src/Riscv.cpp ****                 size*=MEM_BLOCK_SIZE;
 148:src/Riscv.cpp ****                 void* allocatedAddr = kmalloc(size);
 149:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : : "r"((uint64)allocatedAddr));
 150:src/Riscv.cpp ****             }
 151:src/Riscv.cpp ****             else if(operation == MemoryAllocator::MEM_FREE)
 152:src/Riscv.cpp ****             {
 153:src/Riscv.cpp ****                 uint64 addr = 0;
 154:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(addr));
 155:src/Riscv.cpp ****                 uint64 retval = kfree((void*)addr);
 156:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 157:src/Riscv.cpp ****             }
 158:src/Riscv.cpp ****             else if(operation == PCB::THREAD_CREATE)
 159:src/Riscv.cpp ****             {
 160:src/Riscv.cpp ****                 //todo
 161:src/Riscv.cpp ****                 uint64 start_routine;
 162:src/Riscv.cpp ****                 uint64 args;
 163:src/Riscv.cpp ****                 PCB** threadHandle;
 164:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(threadHandle));
 165:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(start_routine));
 166:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a3" : "=r"(args));
 167:src/Riscv.cpp ****                 //uint64 stack_space;
 168:src/Riscv.cpp ****                 //__asm__ volatile("mv %0, a4" : "=r"(stack_space));
 169:src/Riscv.cpp **** 
 170:src/Riscv.cpp ****                 //todo
 171:src/Riscv.cpp ****                 //da li treba ovako ili tipa da se ne koristi new
 172:src/Riscv.cpp ****                 //nego direktno kmalloc - ali onda kako konstruktor
 173:src/Riscv.cpp ****                 //sta se desava ako preklopljeni new vrati 0
 174:src/Riscv.cpp ****                 PCB* newPCB = new PCB((void (*)(void*))start_routine, (void*)args, (void*)a4, 3UL);
 175:src/Riscv.cpp **** 
 176:src/Riscv.cpp ****                 (*threadHandle) = newPCB;
 177:src/Riscv.cpp **** 
 178:src/Riscv.cpp ****                 if(newPCB == 0)
 179:src/Riscv.cpp ****                     __asm__ volatile("li a0, 0xffffffffffffffff");
 180:src/Riscv.cpp ****                 else
 181:src/Riscv.cpp ****                     __asm__ volatile("li a0, 0");
 182:src/Riscv.cpp ****             }
 183:src/Riscv.cpp ****             else if(operation == PCB::THREAD_DISPATCH)
 184:src/Riscv.cpp ****             {
 185:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 186:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 187:src/Riscv.cpp ****                 PCB::dispatch();
 188:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 189:src/Riscv.cpp ****             }
 190:src/Riscv.cpp ****             else if(operation == PCB::THREAD_EXIT)
 191:src/Riscv.cpp ****             {
 192:src/Riscv.cpp ****                 if(PCB::running == 0)
 193:src/Riscv.cpp ****                 {
 194:src/Riscv.cpp ****                     __asm__ volatile("li a0, 0xffffffffffffffff");
 195:src/Riscv.cpp ****                     return;
 196:src/Riscv.cpp ****                 }
 197:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 198:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 199:src/Riscv.cpp ****                 PCB::exitingPCB = PCB::running;
 200:src/Riscv.cpp ****                 PCB::exitingPCB->setState(PCB::EXITING);
 201:src/Riscv.cpp ****                 //todo
GAS LISTING /tmp/ccnr7RuG.s 			page 22


 202:src/Riscv.cpp ****                 //da li se iz ovog dispatch-a neka nit vraca uopste
 203:src/Riscv.cpp ****                 PCB::dispatch();
 204:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 205:src/Riscv.cpp ****             }
 206:src/Riscv.cpp ****             else if(operation == PCB::TIME_SLEEP)
 207:src/Riscv.cpp ****             {
 208:src/Riscv.cpp ****                 uint64 time;
 209:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(time));
 210:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 211:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 212:src/Riscv.cpp ****                 PCB::running->setState(PCB::SLEEPING);
 213:src/Riscv.cpp ****                 PCB::running->setTimeToSleep(time);
 214:src/Riscv.cpp ****                 SleepPCBList::insertSleepingPCB();
 215:src/Riscv.cpp ****                 PCB::dispatch();
 216:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 217:src/Riscv.cpp ****                 //todo
 218:src/Riscv.cpp ****                 //kad treba vratiti kod greske
 219:src/Riscv.cpp ****                 __asm__ volatile("li a0, 0x0");
 220:src/Riscv.cpp ****             }
 221:src/Riscv.cpp **** 
 222:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 223:src/Riscv.cpp **** 
 224:src/Riscv.cpp ****             return;
 225:src/Riscv.cpp ****             //break;
 226:src/Riscv.cpp ****     }
 227:src/Riscv.cpp **** 
 228:src/Riscv.cpp ****     console_handler();
 753              		.loc 1 228 5 is_stmt 1
 754              		.loc 1 228 20 is_stmt 0
 755 0358 97000000 		call	console_handler@plt
 755      E7800000 
 756              	.LVL55:
 757              	.L23:
 229:src/Riscv.cpp **** }
 758              		.loc 1 229 1
 759 0360 83308107 		ld	ra,120(sp)
 760              		.cfi_remember_state
 761              		.cfi_restore 1
 762 0364 03340107 		ld	s0,112(sp)
 763              		.cfi_restore 8
 764              		.cfi_def_cfa 2, 128
 765 0368 83348106 		ld	s1,104(sp)
 766              		.cfi_restore 9
 767 036c 03390106 		ld	s2,96(sp)
 768              		.cfi_restore 18
 769 0370 83398105 		ld	s3,88(sp)
 770              		.cfi_restore 19
 771 0374 033A0105 		ld	s4,80(sp)
 772              		.cfi_restore 20
 773 0378 833A8104 		ld	s5,72(sp)
 774              		.cfi_restore 21
 775 037c 033B0104 		ld	s6,64(sp)
 776              		.cfi_restore 22
 777 0380 13010108 		addi	sp,sp,128
 778              		.cfi_def_cfa_offset 0
 779 0384 67800000 		jr	ra
 780              	.LVL56:
GAS LISTING /tmp/ccnr7RuG.s 			page 23


 781              	.L40:
 782              		.cfi_restore_state
 783              	.LBB174:
 784              	.LBB168:
 134:src/Riscv.cpp ****         case ecallUserInterrupt:
 785              		.loc 1 134 9 is_stmt 1
 135:src/Riscv.cpp **** 
 786              		.loc 1 135 9
 137:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
 787              		.loc 1 137 13
 138:src/Riscv.cpp **** 
 788              		.loc 1 138 13
 138:src/Riscv.cpp **** 
 789              		.loc 1 138 61 is_stmt 0
 790              	#APP
 791              	# 138 "src/Riscv.cpp" 1
 792              		mv a5, a0
 793              	# 0 "" 2
 794              	.LVL57:
 140:src/Riscv.cpp ****             sepc+=4;
 795              		.loc 1 140 13 is_stmt 1
 796              	#NO_APP
 797              	.LBB112:
 798              	.LBB113:
  98:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 799              		.loc 2 98 5
  99:src/../h/Riscv.hpp ****     return sepc;
 800              		.loc 2 99 5
  99:src/../h/Riscv.hpp ****     return sepc;
 801              		.loc 2 99 51 is_stmt 0
 802              	#APP
 803              	# 99 "src/../h/Riscv.hpp" 1
 804              		csrr a4, sepc
 805              	# 0 "" 2
 806              	.LVL58:
 807              	#NO_APP
 808 0390 2330E4FA 		sd	a4,-96(s0)
 100:src/../h/Riscv.hpp **** }
 809              		.loc 2 100 5 is_stmt 1
 100:src/../h/Riscv.hpp **** }
 810              		.loc 2 100 12 is_stmt 0
 811 0394 033704FA 		ld	a4,-96(s0)
 812              	.LVL59:
 813              	.LBE113:
 814              	.LBE112:
 141:src/Riscv.cpp **** 
 815              		.loc 1 141 13 is_stmt 1
 141:src/Riscv.cpp **** 
 816              		.loc 1 141 17 is_stmt 0
 817 0398 93044700 		addi	s1,a4,4
 818              	.LVL60:
 143:src/Riscv.cpp ****             {
 819              		.loc 1 143 13 is_stmt 1
 820              	.LBB114:
 821 039c 13071000 		li	a4,1
 822 03a0 638AE702 		beq	a5,a4,.L41
 823              	.LBE114:
GAS LISTING /tmp/ccnr7RuG.s 			page 24


 824              	.LBE168:
 825              	.LBE174:
 151:src/Riscv.cpp ****             {
 826              		.loc 1 151 18
 827              	.LBB175:
 828              	.LBB169:
 829              	.LBB160:
 830              	.LBB115:
 831 03a4 13072000 		li	a4,2
 832 03a8 6382E704 		beq	a5,a4,.L42
 833              	.LBE115:
 834              	.LBE160:
 835              	.LBE169:
 836              	.LBE175:
 158:src/Riscv.cpp ****             {
 837              		.loc 1 158 18
 838              	.LBB176:
 839              	.LBB170:
 840              	.LBB161:
 841              	.LBB154:
 842              	.LBB116:
 843 03ac 13071001 		li	a4,17
 844 03b0 6388E704 		beq	a5,a4,.L43
 845              	.LBE116:
 846              	.LBE154:
 847              	.LBE161:
 848              	.LBE170:
 849              	.LBE176:
 183:src/Riscv.cpp ****             {
 850              		.loc 1 183 18
 851              	.LBB177:
 852              	.LBB171:
 853              	.LBB162:
 854              	.LBB155:
 855              	.LBB149:
 856              	.LBB117:
 857 03b4 13073001 		li	a4,19
 858 03b8 638AE708 		beq	a5,a4,.L44
 859              	.LBE117:
 860              	.LBE149:
 861              	.LBE155:
 862              	.LBE162:
 863              	.LBE171:
 864              	.LBE177:
 190:src/Riscv.cpp ****             {
 865              		.loc 1 190 18
 866              	.LBB178:
 867              	.LBB172:
 868              	.LBB163:
 869              	.LBB156:
 870              	.LBB150:
 871              	.LBB144:
 872              	.LBB118:
 873 03bc 13072001 		li	a4,18
 874 03c0 638AE70A 		beq	a5,a4,.L45
 875              	.LBE118:
 876              	.LBE144:
GAS LISTING /tmp/ccnr7RuG.s 			page 25


 877              	.LBE150:
 878              	.LBE156:
 879              	.LBE163:
 880              	.LBE172:
 881              	.LBE178:
 206:src/Riscv.cpp ****             {
 882              		.loc 1 206 18
 883              	.LBB179:
 884              	.LBB173:
 885              	.LBB164:
 886              	.LBB157:
 887              	.LBB151:
 888              	.LBB145:
 889              	.LBB137:
 890              	.LBB119:
 891 03c4 13071003 		li	a4,49
 892 03c8 6386E710 		beq	a5,a4,.L46
 893              	.LVL61:
 894              	.L28:
 895              	.LBE119:
 896              	.LBE137:
 897              	.LBE145:
 898              	.LBE151:
 899              	.LBE157:
 900              	.LBE164:
 222:src/Riscv.cpp **** 
 901              		.loc 1 222 13
 902              	.LBB165:
 903              	.LBB166:
 104:src/../h/Riscv.hpp **** }
 904              		.loc 2 104 5
 104:src/../h/Riscv.hpp **** }
 905              		.loc 2 104 51 is_stmt 0
 906              	#APP
 907              	# 104 "src/../h/Riscv.hpp" 1
 105:src/../h/Riscv.hpp **** 
 908              		csrw sepc, s1
 909              	# 0 "" 2
 910              		.loc 2 105 1
 911              	#NO_APP
 912 03d0 6FF01FF9 		j	.L23
 913              	.LVL62:
 914              	.L41:
 915              	.LBE166:
 916              	.LBE165:
 917              	.LBB167:
 918              	.LBB158:
 145:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(size));
 919              		.loc 1 145 17 is_stmt 1
 146:src/Riscv.cpp ****                 size*=MEM_BLOCK_SIZE;
 920              		.loc 1 146 17
 146:src/Riscv.cpp ****                 size*=MEM_BLOCK_SIZE;
 921              		.loc 1 146 59 is_stmt 0
 922              	#APP
 923              	# 146 "src/Riscv.cpp" 1
 924              		mv a0, a1
 925              	# 0 "" 2
GAS LISTING /tmp/ccnr7RuG.s 			page 26


 926              	.LVL63:
 147:src/Riscv.cpp ****                 void* allocatedAddr = kmalloc(size);
 927              		.loc 1 147 17 is_stmt 1
 148:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : : "r"((uint64)allocatedAddr));
 928              		.loc 1 148 17
 148:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : : "r"((uint64)allocatedAddr));
 929              		.loc 1 148 46 is_stmt 0
 930              	#NO_APP
 931 03d8 13156500 		slli	a0,a0,6
 932              	.LVL64:
 933 03dc 97000000 		call	_Z7kmallocm@plt
 933      E7800000 
 934              	.LVL65:
 149:src/Riscv.cpp ****             }
 935              		.loc 1 149 17 is_stmt 1
 149:src/Riscv.cpp ****             }
 936              		.loc 1 149 76 is_stmt 0
 937              	#APP
 938              	# 149 "src/Riscv.cpp" 1
 939              		mv a0,a0
 940              	# 0 "" 2
 941              	#NO_APP
 942              	.LBE158:
 943 03e8 6FF05FFE 		j	.L28
 944              	.LVL66:
 945              	.L42:
 946              	.LBB159:
 947              	.LBB152:
 153:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(addr));
 948              		.loc 1 153 17 is_stmt 1
 154:src/Riscv.cpp ****                 uint64 retval = kfree((void*)addr);
 949              		.loc 1 154 17
 154:src/Riscv.cpp ****                 uint64 retval = kfree((void*)addr);
 950              		.loc 1 154 59 is_stmt 0
 951              	#APP
 952              	# 154 "src/Riscv.cpp" 1
 953              		mv a0, a1
 954              	# 0 "" 2
 955              	.LVL67:
 155:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 956              		.loc 1 155 17 is_stmt 1
 155:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 957              		.loc 1 155 38 is_stmt 0
 958              	#NO_APP
 959 03f0 97000000 		call	_Z5kfreePv@plt
 959      E7800000 
 960              	.LVL68:
 156:src/Riscv.cpp ****             }
 961              		.loc 1 156 17 is_stmt 1
 156:src/Riscv.cpp ****             }
 962              		.loc 1 156 60 is_stmt 0
 963              	#APP
 964              	# 156 "src/Riscv.cpp" 1
 965              		mv a0,a0
 966              	# 0 "" 2
 967              	#NO_APP
 968              	.LBE152:
GAS LISTING /tmp/ccnr7RuG.s 			page 27


 969 03fc 6FF01FFD 		j	.L28
 970              	.LVL69:
 971              	.L43:
 972              	.LBB153:
 973              	.LBB146:
 161:src/Riscv.cpp ****                 uint64 args;
 974              		.loc 1 161 17 is_stmt 1
 162:src/Riscv.cpp ****                 PCB** threadHandle;
 975              		.loc 1 162 17
 163:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(threadHandle));
 976              		.loc 1 163 17
 164:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(start_routine));
 977              		.loc 1 164 17
 164:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(start_routine));
 978              		.loc 1 164 67 is_stmt 0
 979              	#APP
 980              	# 164 "src/Riscv.cpp" 1
 981              		mv s4, a1
 982              	# 0 "" 2
 983              	.LVL70:
 165:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a3" : "=r"(args));
 984              		.loc 1 165 17 is_stmt 1
 165:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a3" : "=r"(args));
 985              		.loc 1 165 68 is_stmt 0
 986              	# 165 "src/Riscv.cpp" 1
 987              		mv s5, a2
 988              	# 0 "" 2
 989              	.LVL71:
 166:src/Riscv.cpp ****                 //uint64 stack_space;
 990              		.loc 1 166 17 is_stmt 1
 166:src/Riscv.cpp ****                 //uint64 stack_space;
 991              		.loc 1 166 59 is_stmt 0
 992              	# 166 "src/Riscv.cpp" 1
 993              		mv s6, a3
 994              	# 0 "" 2
 995              	.LVL72:
 174:src/Riscv.cpp **** 
 996              		.loc 1 174 17 is_stmt 1
 174:src/Riscv.cpp **** 
 997              		.loc 1 174 98 is_stmt 0
 998              	#NO_APP
 999 040c 13058005 		li	a0,88
 1000 0410 97000000 		call	_ZN3PCBnwEm@plt
 1000      E7800000 
 1001              	.LVL73:
 1002              	.LEHE4:
 1003 0418 93090500 		mv	s3,a0
 1004 041c 13073000 		li	a4,3
 1005 0420 93060900 		mv	a3,s2
 1006 0424 13060B00 		mv	a2,s6
 1007 0428 93850A00 		mv	a1,s5
 1008              	.LEHB5:
 1009 042c 97000000 		call	_ZN3PCBC1EPFvPvES0_S0_m@plt
 1009      E7800000 
 1010              	.LVL74:
 1011              	.LEHE5:
 176:src/Riscv.cpp **** 
GAS LISTING /tmp/ccnr7RuG.s 			page 28


 1012              		.loc 1 176 17 is_stmt 1 discriminator 2
 176:src/Riscv.cpp **** 
 1013              		.loc 1 176 33 is_stmt 0 discriminator 2
 1014 0434 23303A01 		sd	s3,0(s4)
 178:src/Riscv.cpp ****                     __asm__ volatile("li a0, 0xffffffffffffffff");
 1015              		.loc 1 178 17 is_stmt 1 discriminator 2
 1016 0438 63860900 		beqz	s3,.L47
 181:src/Riscv.cpp ****             }
 1017              		.loc 1 181 21
 181:src/Riscv.cpp ****             }
 1018              		.loc 1 181 49 is_stmt 0
 1019              	#APP
 1020              	# 181 "src/Riscv.cpp" 1
 1021              		li a0, 0
 1022              	# 0 "" 2
 1023              	#NO_APP
 1024 0440 6FF0DFF8 		j	.L28
 1025              	.L47:
 179:src/Riscv.cpp ****                 else
 1026              		.loc 1 179 21 is_stmt 1
 179:src/Riscv.cpp ****                 else
 1027              		.loc 1 179 66 is_stmt 0
 1028              	#APP
 1029              	# 179 "src/Riscv.cpp" 1
 1030              		li a0, 0xffffffffffffffff
 1031              	# 0 "" 2
 1032              	#NO_APP
 1033 0448 6FF05FF8 		j	.L28
 1034              	.LVL75:
 1035              	.L44:
 1036              	.LBE146:
 1037              	.LBB147:
 1038              	.LBB138:
 185:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 1039              		.loc 1 185 17 is_stmt 1
 1040              	.LBB139:
 1041              	.LBB140:
 154:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 1042              		.loc 2 154 5
 155:src/../h/Riscv.hpp ****     return sstatus;
 1043              		.loc 2 155 5
 155:src/../h/Riscv.hpp ****     return sstatus;
 1044              		.loc 2 155 57 is_stmt 0
 1045              	#APP
 1046              	# 155 "src/../h/Riscv.hpp" 1
 1047              		csrr a5, sstatus
 1048              	# 0 "" 2
 1049              	.LVL76:
 1050              	#NO_APP
 1051 0450 2334F4FA 		sd	a5,-88(s0)
 156:src/../h/Riscv.hpp **** }
 1052              		.loc 2 156 5 is_stmt 1
 156:src/../h/Riscv.hpp **** }
 1053              		.loc 2 156 12 is_stmt 0
 1054 0454 033984FA 		ld	s2,-88(s0)
 1055              	.LVL77:
 1056              	.LBE140:
GAS LISTING /tmp/ccnr7RuG.s 			page 29


 1057              	.LBE139:
 186:src/Riscv.cpp ****                 PCB::dispatch();
 1058              		.loc 1 186 17 is_stmt 1
 186:src/Riscv.cpp ****                 PCB::dispatch();
 1059              		.loc 1 186 39 is_stmt 0
 1060 0458 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 1060      83B70700 
 1061 0460 23B00700 		sd	zero,0(a5)
 187:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1062              		.loc 1 187 17 is_stmt 1
 1063              	.LEHB6:
 187:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1064              		.loc 1 187 30 is_stmt 0
 1065 0464 97000000 		call	_ZN3PCB8dispatchEv@plt
 1065      E7800000 
 1066              	.LVL78:
 188:src/Riscv.cpp ****             }
 1067              		.loc 1 188 17 is_stmt 1
 1068              	.LBB141:
 1069              	.LBB142:
 160:src/../h/Riscv.hpp **** }
 1070              		.loc 2 160 5
 160:src/../h/Riscv.hpp **** }
 1071              		.loc 2 160 57 is_stmt 0
 1072              	#APP
 1073              	# 160 "src/../h/Riscv.hpp" 1
 1074              		csrw sstatus, s2
 1075              	# 0 "" 2
 1076              		.loc 2 161 1
 1077              	#NO_APP
 1078 0470 6FF0DFF5 		j	.L28
 1079              	.LVL79:
 1080              	.L45:
 1081              	.LBE142:
 1082              	.LBE141:
 1083              	.LBE138:
 1084              	.LBB143:
 1085              	.LBB129:
 192:src/Riscv.cpp ****                 {
 1086              		.loc 1 192 17 is_stmt 1
 192:src/Riscv.cpp ****                 {
 1087              		.loc 1 192 33 is_stmt 0
 1088 0474 97070000 		la	a5,_ZN3PCB7runningE
 1088      83B70700 
 1089              	.LVL80:
 1090 047c 83B70700 		ld	a5,0(a5)
 192:src/Riscv.cpp ****                 {
 1091              		.loc 1 192 17
 1092 0480 63860704 		beqz	a5,.L48
 197:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 1093              		.loc 1 197 17 is_stmt 1
 1094              	.LBB130:
 1095              	.LBB131:
 154:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 1096              		.loc 2 154 5
 155:src/../h/Riscv.hpp ****     return sstatus;
 1097              		.loc 2 155 5
GAS LISTING /tmp/ccnr7RuG.s 			page 30


 155:src/../h/Riscv.hpp ****     return sstatus;
 1098              		.loc 2 155 57 is_stmt 0
 1099              	#APP
 1100              	# 155 "src/../h/Riscv.hpp" 1
 1101              		csrr a5, sstatus
 1102              	# 0 "" 2
 1103              	#NO_APP
 1104 0488 2338F4FA 		sd	a5,-80(s0)
 156:src/../h/Riscv.hpp **** }
 1105              		.loc 2 156 5 is_stmt 1
 156:src/../h/Riscv.hpp **** }
 1106              		.loc 2 156 12 is_stmt 0
 1107 048c 033904FB 		ld	s2,-80(s0)
 1108              	.LVL81:
 1109              	.LBE131:
 1110              	.LBE130:
 198:src/Riscv.cpp ****                 PCB::exitingPCB = PCB::running;
 1111              		.loc 1 198 17 is_stmt 1
 198:src/Riscv.cpp ****                 PCB::exitingPCB = PCB::running;
 1112              		.loc 1 198 39 is_stmt 0
 1113 0490 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 1113      83B70700 
 1114 0498 23B00700 		sd	zero,0(a5)
 199:src/Riscv.cpp ****                 PCB::exitingPCB->setState(PCB::EXITING);
 1115              		.loc 1 199 17 is_stmt 1
 199:src/Riscv.cpp ****                 PCB::exitingPCB->setState(PCB::EXITING);
 1116              		.loc 1 199 33 is_stmt 0
 1117 049c 97070000 		la	a5,_ZN3PCB7runningE
 1117      83B70700 
 1118 04a4 83B70700 		ld	a5,0(a5)
 1119 04a8 17070000 		la	a4,_ZN3PCB10exitingPCBE
 1119      03370700 
 1120 04b0 2330F700 		sd	a5,0(a4)
 200:src/Riscv.cpp ****                 //todo
 1121              		.loc 1 200 17 is_stmt 1
 1122              	.LVL82:
 1123              	.LBB132:
 1124              	.LBB133:
 1125              		.loc 3 35 29
 1126              		.loc 3 35 35 is_stmt 0
 1127 04b4 13074000 		li	a4,4
 1128 04b8 23A8E702 		sw	a4,48(a5)
 1129              	.LVL83:
 1130              	.LBE133:
 1131              	.LBE132:
 203:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1132              		.loc 1 203 17 is_stmt 1
 203:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1133              		.loc 1 203 30 is_stmt 0
 1134 04bc 97000000 		call	_ZN3PCB8dispatchEv@plt
 1134      E7800000 
 1135              	.LVL84:
 204:src/Riscv.cpp ****             }
 1136              		.loc 1 204 17 is_stmt 1
 1137              	.LBB134:
 1138              	.LBB135:
 160:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/ccnr7RuG.s 			page 31


 1139              		.loc 2 160 5
 160:src/../h/Riscv.hpp **** }
 1140              		.loc 2 160 57 is_stmt 0
 1141              	#APP
 1142              	# 160 "src/../h/Riscv.hpp" 1
 1143              		csrw sstatus, s2
 1144              	# 0 "" 2
 1145              		.loc 2 161 1
 1146              	#NO_APP
 1147 04c8 6FF05FF0 		j	.L28
 1148              	.LVL85:
 1149              	.L48:
 1150              	.LBE135:
 1151              	.LBE134:
 194:src/Riscv.cpp ****                     return;
 1152              		.loc 1 194 21 is_stmt 1
 194:src/Riscv.cpp ****                     return;
 1153              		.loc 1 194 66 is_stmt 0
 1154              	#APP
 1155              	# 194 "src/Riscv.cpp" 1
 195:src/Riscv.cpp ****                 }
 1156              		li a0, 0xffffffffffffffff
 1157              	# 0 "" 2
 1158              		.loc 1 195 21 is_stmt 1
 1159              	#NO_APP
 1160 04d0 6FF01FE9 		j	.L23
 1161              	.LVL86:
 1162              	.L46:
 1163              	.LBE129:
 1164              	.LBB136:
 1165              	.LBB120:
 208:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(time));
 1166              		.loc 1 208 17
 209:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 1167              		.loc 1 209 17
 209:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 1168              		.loc 1 209 59 is_stmt 0
 1169              	#APP
 1170              	# 209 "src/Riscv.cpp" 1
 1171              		mv a4, a1
 1172              	# 0 "" 2
 1173              	.LVL87:
 210:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 1174              		.loc 1 210 17 is_stmt 1
 1175              	#NO_APP
 1176              	.LBB121:
 1177              	.LBB122:
 154:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 1178              		.loc 2 154 5
 155:src/../h/Riscv.hpp ****     return sstatus;
 1179              		.loc 2 155 5
 155:src/../h/Riscv.hpp ****     return sstatus;
 1180              		.loc 2 155 57 is_stmt 0
 1181              	#APP
 1182              	# 155 "src/../h/Riscv.hpp" 1
 1183              		csrr a5, sstatus
 1184              	# 0 "" 2
GAS LISTING /tmp/ccnr7RuG.s 			page 32


 1185              	.LVL88:
 1186              	#NO_APP
 1187 04dc 233CF4FA 		sd	a5,-72(s0)
 156:src/../h/Riscv.hpp **** }
 1188              		.loc 2 156 5 is_stmt 1
 156:src/../h/Riscv.hpp **** }
 1189              		.loc 2 156 12 is_stmt 0
 1190 04e0 033984FB 		ld	s2,-72(s0)
 1191              	.LVL89:
 1192              	.LBE122:
 1193              	.LBE121:
 211:src/Riscv.cpp ****                 PCB::running->setState(PCB::SLEEPING);
 1194              		.loc 1 211 17 is_stmt 1
 211:src/Riscv.cpp ****                 PCB::running->setState(PCB::SLEEPING);
 1195              		.loc 1 211 39 is_stmt 0
 1196 04e4 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 1196      83B70700 
 1197 04ec 23B00700 		sd	zero,0(a5)
 212:src/Riscv.cpp ****                 PCB::running->setTimeToSleep(time);
 1198              		.loc 1 212 17 is_stmt 1
 212:src/Riscv.cpp ****                 PCB::running->setTimeToSleep(time);
 1199              		.loc 1 212 39 is_stmt 0
 1200 04f0 97070000 		la	a5,_ZN3PCB7runningE
 1200      83B70700 
 1201 04f8 83B70700 		ld	a5,0(a5)
 1202              	.LVL90:
 1203              	.LBB123:
 1204              	.LBB124:
 1205              		.loc 3 35 29 is_stmt 1
 1206              		.loc 3 35 35 is_stmt 0
 1207 04fc 93065000 		li	a3,5
 1208 0500 23A8D702 		sw	a3,48(a5)
 1209              	.LVL91:
 1210              	.LBE124:
 1211              	.LBE123:
 213:src/Riscv.cpp ****                 SleepPCBList::insertSleepingPCB();
 1212              		.loc 1 213 17 is_stmt 1
 1213              	.LBB125:
 1214              	.LBB126:
  36:src/../h/PCB.hpp ****     void setTimeToSleep(uint64 time) {timeToSleep = time;}
 1215              		.loc 3 36 39
 1216              		.loc 3 36 51 is_stmt 0
 1217 0504 23B8E700 		sd	a4,16(a5)
 1218              	.LVL92:
 1219              	.LBE126:
 1220              	.LBE125:
 214:src/Riscv.cpp ****                 PCB::dispatch();
 1221              		.loc 1 214 17 is_stmt 1
 214:src/Riscv.cpp ****                 PCB::dispatch();
 1222              		.loc 1 214 48 is_stmt 0
 1223 0508 97000000 		call	_ZN12SleepPCBList17insertSleepingPCBEv@plt
 1223      E7800000 
 1224              	.LVL93:
 215:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1225              		.loc 1 215 17 is_stmt 1
 215:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1226              		.loc 1 215 30 is_stmt 0
GAS LISTING /tmp/ccnr7RuG.s 			page 33


 1227 0510 97000000 		call	_ZN3PCB8dispatchEv@plt
 1227      E7800000 
 1228              	.LVL94:
 1229              	.LEHE6:
 216:src/Riscv.cpp ****                 //todo
 1230              		.loc 1 216 17 is_stmt 1
 1231              	.LBB127:
 1232              	.LBB128:
 160:src/../h/Riscv.hpp **** }
 1233              		.loc 2 160 5
 160:src/../h/Riscv.hpp **** }
 1234              		.loc 2 160 57 is_stmt 0
 1235              	#APP
 1236              	# 160 "src/../h/Riscv.hpp" 1
 1237              		csrw sstatus, s2
 1238              	# 0 "" 2
 1239              	.LVL95:
 1240              	#NO_APP
 1241              	.LBE128:
 1242              	.LBE127:
 219:src/Riscv.cpp ****             }
 1243              		.loc 1 219 17 is_stmt 1
 219:src/Riscv.cpp ****             }
 1244              		.loc 1 219 47 is_stmt 0
 1245              	#APP
 1246              	# 219 "src/Riscv.cpp" 1
 1247              		li a0, 0x0
 1248              	# 0 "" 2
 1249              	#NO_APP
 1250              	.LBE120:
 1251 0520 6FF0DFEA 		j	.L28
 1252              	.LVL96:
 1253              	.L37:
 1254 0524 93040500 		mv	s1,a0
 1255              	.LVL97:
 1256              	.LBE136:
 1257              	.LBE143:
 1258              	.LBE147:
 1259              	.LBB148:
 174:src/Riscv.cpp **** 
 1260              		.loc 1 174 98
 1261 0528 13850900 		mv	a0,s3
 1262 052c 97000000 		call	_ZN3PCBdlEPv@plt
 1262      E7800000 
 1263              	.LVL98:
 1264 0534 13850400 		mv	a0,s1
 1265              	.LEHB7:
 1266 0538 97000000 		call	_Unwind_Resume@plt
 1266      E7800000 
 1267              	.LVL99:
 1268              	.LEHE7:
 1269              	.LBE148:
 1270              	.LBE153:
 1271              	.LBE159:
 1272              	.LBE167:
 1273              	.LBE173:
 1274              	.LBE179:
GAS LISTING /tmp/ccnr7RuG.s 			page 34


 1275              		.cfi_endproc
 1276              	.LFE28:
 1277              		.section	.gcc_except_table
 1278              	.LLSDA28:
 1279 0038 FF       		.byte	0xff
 1280 0039 FF       		.byte	0xff
 1281 003a 03       		.byte	0x3
 1282 003b 34       		.byte	0x34
 1283 003c 00000000 		.4byte	.LEHB4-.LFB28
 1284 0040 00000000 		.4byte	.LEHE4-.LEHB4
 1285 0044 00000000 		.4byte	0
 1286 0048 00       		.byte	0
 1287 0049 00000000 		.4byte	.LEHB5-.LFB28
 1288 004d 00000000 		.4byte	.LEHE5-.LEHB5
 1289 0051 00000000 		.4byte	.L37-.LFB28
 1290 0055 00       		.byte	0
 1291 0056 00000000 		.4byte	.LEHB6-.LFB28
 1292 005a 00000000 		.4byte	.LEHE6-.LEHB6
 1293 005e 00000000 		.4byte	0
 1294 0062 00       		.byte	0
 1295 0063 00000000 		.4byte	.LEHB7-.LFB28
 1296 0067 00000000 		.4byte	.LEHE7-.LEHB7
 1297 006b 00000000 		.4byte	0
 1298 006f 00       		.byte	0
 1299              		.text
 1301              		.section	.rodata
 1302              		.align	3
 1303              		.set	.LANCHOR0,. + 0
 1306              	_ZZN5Riscv12printIntegerEmE6digits:
 1307 0000 30313233 		.string	"0123456789"
 1307      34353637 
 1307      383900
 1308              		.bss
 1309              		.align	3
 1310              		.set	.LANCHOR1,. + 0
 1313              	_ZZN5Riscv20handleSupervisorTrapEvE13sumInterrupts:
 1314 0000 00000000 		.zero	8
 1314      00000000 
 1315              		.text
 1316              	.Letext0:
 1317              		.file 4 "src/../h/../lib/hw.h"
 1318              		.file 5 "src/../h/Queue.hpp"
 1319              		.file 6 "src/../h/Scheduler.hpp"
 1320              		.file 7 "src/../h/syscall_cpp.hpp"
 1321              		.file 8 "src/../h/SleepPCBList.hpp"
 1322              		.file 9 "src/../h/MemoryAllocator.hpp"
 1323              		.file 10 "src/../lib/console.h"
 5802              		.align	3
 5805              	DW.ref.__gxx_personality_v0:
 5806 0000 00000000 		.dword	__gxx_personality_v0
 5806      00000000 
 5807              		.ident	"GCC: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0"
 5808              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/ccnr7RuG.s 			page 35


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Riscv.cpp
     /tmp/ccnr7RuG.s:9      .text:0000000000000000 _ZN5Riscv10initSystemEv
     /tmp/ccnr7RuG.s:13     .text:0000000000000000 .L0 
     /tmp/ccnr7RuG.s:5805   .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/ccnr7RuG.s:16     .text:0000000000000000 .L0 
     /tmp/ccnr7RuG.s:17     .text:0000000000000004 .L0 
     /tmp/ccnr7RuG.s:22     .text:0000000000000014 .L0 
     /tmp/ccnr7RuG.s:23     .text:0000000000000014 .L0 
     /tmp/ccnr7RuG.s:24     .text:0000000000000014 .L0 
     /tmp/ccnr7RuG.s:25     .text:0000000000000014 .L0 
     /tmp/ccnr7RuG.s:27     .text:0000000000000018 .L0 
     /tmp/ccnr7RuG.s:29     .text:0000000000000018 .L0 
     /tmp/ccnr7RuG.s:30     .text:0000000000000018 .L0 
     /tmp/ccnr7RuG.s:36     .text:0000000000000020 .L0 
  src/../h/Riscv.hpp:114    .text:0000000000000020 .L0 
     /tmp/ccnr7RuG.s:46     .text:0000000000000024 .L0 
     /tmp/ccnr7RuG.s:47     .text:0000000000000024 .L0 
     /tmp/ccnr7RuG.s:60     .text:0000000000000044 .L0 
     /tmp/ccnr7RuG.s:61     .text:0000000000000044 .L0 
     /tmp/ccnr7RuG.s:66     .text:0000000000000050 .L0 
     /tmp/ccnr7RuG.s:67     .text:0000000000000050 .L0 
     /tmp/ccnr7RuG.s:71     .text:0000000000000058 .L0 
     /tmp/ccnr7RuG.s:78     .text:0000000000000064 .L0 
     /tmp/ccnr7RuG.s:79     .text:0000000000000064 .L0 
     /tmp/ccnr7RuG.s:80     .text:0000000000000064 .L0 
     /tmp/ccnr7RuG.s:86     .text:000000000000006c .L0 
     /tmp/ccnr7RuG.s:87     .text:0000000000000070 .L0 
     /tmp/ccnr7RuG.s:88     .text:0000000000000070 .L0 
     /tmp/ccnr7RuG.s:90     .text:0000000000000074 .L0 
     /tmp/ccnr7RuG.s:91     .text:0000000000000074 .L0 
     /tmp/ccnr7RuG.s:93     .text:0000000000000078 .L0 
     /tmp/ccnr7RuG.s:96     .text:000000000000007c .L0 
     /tmp/ccnr7RuG.s:98     .text:0000000000000080 .L0 
     /tmp/ccnr7RuG.s:101    .text:0000000000000084 .L0 
     /tmp/ccnr7RuG.s:104    .text:0000000000000088 .L0 
     /tmp/ccnr7RuG.s:112    .text:00000000000000a0 .L0 
     /tmp/ccnr7RuG.s:142    .text:00000000000000a0 _ZN5Riscv16enableInterruptsEv
     /tmp/ccnr7RuG.s:145    .text:00000000000000a0 .L0 
     /tmp/ccnr7RuG.s:146    .text:00000000000000a0 .L0 
     /tmp/ccnr7RuG.s:147    .text:00000000000000a4 .L0 
     /tmp/ccnr7RuG.s:149    .text:00000000000000a8 .L0 
     /tmp/ccnr7RuG.s:151    .text:00000000000000ac .L0 
     /tmp/ccnr7RuG.s:156    .text:00000000000000ac .L0 
     /tmp/ccnr7RuG.s:157    .text:00000000000000ac .L0 
     /tmp/ccnr7RuG.s:158    .text:00000000000000ac .L0 
     /tmp/ccnr7RuG.s:168    .text:00000000000000b4 .L0 
     /tmp/ccnr7RuG.s:169    .text:00000000000000b8 .L0 
     /tmp/ccnr7RuG.s:170    .text:00000000000000b8 .L0 
     /tmp/ccnr7RuG.s:172    .text:00000000000000bc .L0 
     /tmp/ccnr7RuG.s:174    .text:00000000000000c0 .L0 
     /tmp/ccnr7RuG.s:180    .text:00000000000000c0 _ZN5Riscv17disableInterruptsEv
     /tmp/ccnr7RuG.s:183    .text:00000000000000c0 .L0 
     /tmp/ccnr7RuG.s:184    .text:00000000000000c0 .L0 
     /tmp/ccnr7RuG.s:185    .text:00000000000000c4 .L0 
     /tmp/ccnr7RuG.s:187    .text:00000000000000c8 .L0 
     /tmp/ccnr7RuG.s:189    .text:00000000000000cc .L0 
GAS LISTING /tmp/ccnr7RuG.s 			page 36


     /tmp/ccnr7RuG.s:194    .text:00000000000000cc .L0 
     /tmp/ccnr7RuG.s:195    .text:00000000000000cc .L0 
     /tmp/ccnr7RuG.s:196    .text:00000000000000cc .L0 
     /tmp/ccnr7RuG.s:206    .text:00000000000000d4 .L0 
     /tmp/ccnr7RuG.s:207    .text:00000000000000d8 .L0 
     /tmp/ccnr7RuG.s:208    .text:00000000000000d8 .L0 
     /tmp/ccnr7RuG.s:210    .text:00000000000000dc .L0 
     /tmp/ccnr7RuG.s:212    .text:00000000000000e0 .L0 
     /tmp/ccnr7RuG.s:218    .text:00000000000000e0 _ZN5Riscv9endSystemEv
     /tmp/ccnr7RuG.s:221    .text:00000000000000e0 .L0 
     /tmp/ccnr7RuG.s:222    .text:00000000000000e0 .L0 
     /tmp/ccnr7RuG.s:223    .text:00000000000000e4 .L0 
     /tmp/ccnr7RuG.s:226    .text:00000000000000ec .L0 
     /tmp/ccnr7RuG.s:227    .text:00000000000000ec .L0 
     /tmp/ccnr7RuG.s:229    .text:00000000000000f0 .L0 
     /tmp/ccnr7RuG.s:231    .text:00000000000000f0 .L0 
     /tmp/ccnr7RuG.s:232    .text:00000000000000f0 .L0 
     /tmp/ccnr7RuG.s:235    .text:00000000000000f8 .L0 
     /tmp/ccnr7RuG.s:236    .text:00000000000000fc .L0 
     /tmp/ccnr7RuG.s:238    .text:0000000000000100 .L0 
     /tmp/ccnr7RuG.s:239    .text:0000000000000100 .L0 
     /tmp/ccnr7RuG.s:241    .text:0000000000000104 .L0 
     /tmp/ccnr7RuG.s:243    .text:0000000000000108 .L0 
     /tmp/ccnr7RuG.s:249    .text:0000000000000108 _ZN5Riscv10popSppSpieEv
     /tmp/ccnr7RuG.s:252    .text:0000000000000108 .L0 
     /tmp/ccnr7RuG.s:253    .text:0000000000000108 .L0 
     /tmp/ccnr7RuG.s:254    .text:000000000000010c .L0 
     /tmp/ccnr7RuG.s:256    .text:0000000000000110 .L0 
     /tmp/ccnr7RuG.s:258    .text:0000000000000114 .L0 
     /tmp/ccnr7RuG.s:260    .text:0000000000000114 .L0 
       src/Riscv.cpp:39     .text:0000000000000114 .L0 
     /tmp/ccnr7RuG.s:266    .text:0000000000000118 .L0 
       src/Riscv.cpp:40     .text:0000000000000118 .L0 
     /tmp/ccnr7RuG.s:272    .text:000000000000011c .L0 
     /tmp/ccnr7RuG.s:273    .text:0000000000000120 .L0 
     /tmp/ccnr7RuG.s:274    .text:0000000000000120 .L0 
     /tmp/ccnr7RuG.s:276    .text:0000000000000124 .L0 
     /tmp/ccnr7RuG.s:278    .text:0000000000000128 .L0 
     /tmp/ccnr7RuG.s:284    .text:0000000000000128 _ZN5Riscv11printStringEPKc
     /tmp/ccnr7RuG.s:287    .text:0000000000000128 .L0 
     /tmp/ccnr7RuG.s:289    .text:0000000000000128 .L0 
     /tmp/ccnr7RuG.s:290    .text:000000000000012c .L0 
     /tmp/ccnr7RuG.s:295    .text:000000000000013c .L0 
     /tmp/ccnr7RuG.s:296    .text:000000000000013c .L0 
     /tmp/ccnr7RuG.s:297    .text:000000000000013c .L0 
     /tmp/ccnr7RuG.s:298    .text:000000000000013c .L0 
     /tmp/ccnr7RuG.s:300    .text:0000000000000140 .L0 
     /tmp/ccnr7RuG.s:305    .text:0000000000000144 .L0 
     /tmp/ccnr7RuG.s:306    .text:0000000000000144 .L0 
     /tmp/ccnr7RuG.s:307    .text:0000000000000144 .L0 
  src/../h/Riscv.hpp:155    .text:0000000000000144 .L0 
     /tmp/ccnr7RuG.s:315    .text:000000000000014c .L0 
     /tmp/ccnr7RuG.s:316    .text:000000000000014c .L0 
     /tmp/ccnr7RuG.s:323    .text:0000000000000150 .L0 
     /tmp/ccnr7RuG.s:324    .text:0000000000000150 .L0 
     /tmp/ccnr7RuG.s:325    .text:0000000000000150 .L0 
     /tmp/ccnr7RuG.s:336    .text:0000000000000158 .L0 
GAS LISTING /tmp/ccnr7RuG.s 			page 37


     /tmp/ccnr7RuG.s:337    .text:0000000000000158 .L0 
     /tmp/ccnr7RuG.s:338    .text:0000000000000158 .L0 
     /tmp/ccnr7RuG.s:340    .text:000000000000015c .L0 
     /tmp/ccnr7RuG.s:342    .text:0000000000000160 .L0 
     /tmp/ccnr7RuG.s:343    .text:0000000000000160 .L0 
     /tmp/ccnr7RuG.s:346    .text:0000000000000168 .L0 
     /tmp/ccnr7RuG.s:347    .text:0000000000000168 .L0 
     /tmp/ccnr7RuG.s:350    .text:000000000000016c .L0 
     /tmp/ccnr7RuG.s:353    .text:0000000000000170 .L0 
     /tmp/ccnr7RuG.s:354    .text:0000000000000170 .L0 
     /tmp/ccnr7RuG.s:357    .text:0000000000000174 .L0 
     /tmp/ccnr7RuG.s:363    .text:000000000000017c .L0 
  src/../h/Riscv.hpp:146    .text:000000000000017c .L0 
     /tmp/ccnr7RuG.s:373    .text:0000000000000180 .L0 
     /tmp/ccnr7RuG.s:374    .text:0000000000000184 .L0 
     /tmp/ccnr7RuG.s:376    .text:0000000000000188 .L0 
     /tmp/ccnr7RuG.s:377    .text:0000000000000188 .L0 
     /tmp/ccnr7RuG.s:379    .text:000000000000018c .L0 
     /tmp/ccnr7RuG.s:382    .text:0000000000000190 .L0 
     /tmp/ccnr7RuG.s:384    .text:0000000000000194 .L0 
     /tmp/ccnr7RuG.s:386    .text:0000000000000198 .L0 
     /tmp/ccnr7RuG.s:392    .text:0000000000000198 _ZN5Riscv12printIntegerEm
     /tmp/ccnr7RuG.s:395    .text:0000000000000198 .L0 
     /tmp/ccnr7RuG.s:397    .text:0000000000000198 .L0 
     /tmp/ccnr7RuG.s:398    .text:000000000000019c .L0 
     /tmp/ccnr7RuG.s:403    .text:00000000000001ac .L0 
     /tmp/ccnr7RuG.s:404    .text:00000000000001ac .L0 
     /tmp/ccnr7RuG.s:405    .text:00000000000001ac .L0 
     /tmp/ccnr7RuG.s:406    .text:00000000000001ac .L0 
     /tmp/ccnr7RuG.s:408    .text:00000000000001b0 .L0 
     /tmp/ccnr7RuG.s:412    .text:00000000000001b0 .L0 
     /tmp/ccnr7RuG.s:413    .text:00000000000001b0 .L0 
     /tmp/ccnr7RuG.s:414    .text:00000000000001b0 .L0 
  src/../h/Riscv.hpp:155    .text:00000000000001b0 .L0 
     /tmp/ccnr7RuG.s:422    .text:00000000000001b8 .L0 
     /tmp/ccnr7RuG.s:423    .text:00000000000001b8 .L0 
     /tmp/ccnr7RuG.s:430    .text:00000000000001bc .L0 
     /tmp/ccnr7RuG.s:431    .text:00000000000001bc .L0 
     /tmp/ccnr7RuG.s:432    .text:00000000000001bc .L0 
     /tmp/ccnr7RuG.s:442    .text:00000000000001c4 .L0 
     /tmp/ccnr7RuG.s:443    .text:00000000000001c4 .L0 
     /tmp/ccnr7RuG.s:444    .text:00000000000001c4 .L0 
     /tmp/ccnr7RuG.s:445    .text:00000000000001c4 .L0 
     /tmp/ccnr7RuG.s:446    .text:00000000000001c4 .L0 
     /tmp/ccnr7RuG.s:447    .text:00000000000001c4 .L0 
     /tmp/ccnr7RuG.s:448    .text:00000000000001c4 .L0 
     /tmp/ccnr7RuG.s:449    .text:00000000000001c4 .L0 
     /tmp/ccnr7RuG.s:452    .text:00000000000001c8 .L0 
     /tmp/ccnr7RuG.s:453    .text:00000000000001c8 .L0 
     /tmp/ccnr7RuG.s:457    .text:00000000000001cc .L0 
     /tmp/ccnr7RuG.s:458    .text:00000000000001cc .L0 
     /tmp/ccnr7RuG.s:459    .text:00000000000001cc .L0 
     /tmp/ccnr7RuG.s:463    .text:00000000000001d4 .L0 
     /tmp/ccnr7RuG.s:469    .text:00000000000001ec .L0 
     /tmp/ccnr7RuG.s:475    .text:00000000000001fc .L0 
     /tmp/ccnr7RuG.s:477    .text:0000000000000200 .L0 
     /tmp/ccnr7RuG.s:480    .text:0000000000000204 .L0 
GAS LISTING /tmp/ccnr7RuG.s 			page 38


     /tmp/ccnr7RuG.s:485    .text:000000000000020c .L0 
     /tmp/ccnr7RuG.s:486    .text:000000000000020c .L0 
     /tmp/ccnr7RuG.s:490    .text:0000000000000214 .L0 
     /tmp/ccnr7RuG.s:491    .text:0000000000000214 .L0 
     /tmp/ccnr7RuG.s:499    .text:000000000000022c .L0 
     /tmp/ccnr7RuG.s:500    .text:000000000000022c .L0 
     /tmp/ccnr7RuG.s:504    .text:0000000000000238 .L0 
     /tmp/ccnr7RuG.s:505    .text:0000000000000238 .L0 
     /tmp/ccnr7RuG.s:508    .text:000000000000023c .L0 
     /tmp/ccnr7RuG.s:514    .text:0000000000000244 .L0 
  src/../h/Riscv.hpp:146    .text:0000000000000244 .L0 
     /tmp/ccnr7RuG.s:524    .text:0000000000000248 .L0 
     /tmp/ccnr7RuG.s:525    .text:000000000000024c .L0 
     /tmp/ccnr7RuG.s:527    .text:0000000000000250 .L0 
     /tmp/ccnr7RuG.s:528    .text:0000000000000250 .L0 
     /tmp/ccnr7RuG.s:530    .text:0000000000000254 .L0 
     /tmp/ccnr7RuG.s:532    .text:0000000000000258 .L0 
     /tmp/ccnr7RuG.s:534    .text:000000000000025c .L0 
     /tmp/ccnr7RuG.s:536    .text:0000000000000260 .L0 
     /tmp/ccnr7RuG.s:547    .text:0000000000000260 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccnr7RuG.s:550    .text:0000000000000260 .L0 
     /tmp/ccnr7RuG.s:553    .text:0000000000000260 .L0 
     /tmp/ccnr7RuG.s:554    .text:0000000000000264 .L0 
     /tmp/ccnr7RuG.s:563    .text:0000000000000284 .L0 
     /tmp/ccnr7RuG.s:564    .text:0000000000000284 .L0 
     /tmp/ccnr7RuG.s:565    .text:0000000000000284 .L0 
     /tmp/ccnr7RuG.s:566    .text:0000000000000284 .L0 
     /tmp/ccnr7RuG.s:567    .text:0000000000000284 .L0 
     /tmp/ccnr7RuG.s:568    .text:0000000000000284 .L0 
     /tmp/ccnr7RuG.s:569    .text:0000000000000284 .L0 
     /tmp/ccnr7RuG.s:570    .text:0000000000000284 .L0 
     /tmp/ccnr7RuG.s:572    .text:0000000000000288 .L0 
     /tmp/ccnr7RuG.s:574    .text:0000000000000288 .L0 
     /tmp/ccnr7RuG.s:575    .text:0000000000000288 .L0 
       src/Riscv.cpp:92     .text:0000000000000288 .L0 
     /tmp/ccnr7RuG.s:585    .text:000000000000028c .L0 
     /tmp/ccnr7RuG.s:586    .text:000000000000028c .L0 
     /tmp/ccnr7RuG.s:587    .text:000000000000028c .L0 
  src/../h/Riscv.hpp:89     .text:000000000000028c .L0 
     /tmp/ccnr7RuG.s:595    .text:0000000000000294 .L0 
     /tmp/ccnr7RuG.s:596    .text:0000000000000294 .L0 
     /tmp/ccnr7RuG.s:602    .text:0000000000000298 .L0 
     /tmp/ccnr7RuG.s:610    .text:00000000000002b0 .L0 
     /tmp/ccnr7RuG.s:614    .text:00000000000002b0 .L0 
     /tmp/ccnr7RuG.s:615    .text:00000000000002b0 .L0 
     /tmp/ccnr7RuG.s:616    .text:00000000000002b0 .L0 
     /tmp/ccnr7RuG.s:626    .text:00000000000002b8 .L0 
     /tmp/ccnr7RuG.s:627    .text:00000000000002b8 .L0 
     /tmp/ccnr7RuG.s:632    .text:00000000000002c8 .L0 
     /tmp/ccnr7RuG.s:633    .text:00000000000002c8 .L0 
     /tmp/ccnr7RuG.s:638    .text:00000000000002dc .L0 
     /tmp/ccnr7RuG.s:639    .text:00000000000002dc .L0 
     /tmp/ccnr7RuG.s:642    .text:00000000000002e4 .L0 
     /tmp/ccnr7RuG.s:643    .text:00000000000002e4 .L0 
     /tmp/ccnr7RuG.s:644    .text:00000000000002e4 .L0 
     /tmp/ccnr7RuG.s:649    .text:00000000000002f8 .L0 
     /tmp/ccnr7RuG.s:650    .text:00000000000002f8 .L0 
GAS LISTING /tmp/ccnr7RuG.s 			page 39


     /tmp/ccnr7RuG.s:654    .text:0000000000000300 .L0 
     /tmp/ccnr7RuG.s:655    .text:0000000000000300 .L0 
     /tmp/ccnr7RuG.s:661    .text:000000000000030c .L0 
     /tmp/ccnr7RuG.s:662    .text:000000000000030c .L0 
     /tmp/ccnr7RuG.s:667    .text:0000000000000310 .L0 
     /tmp/ccnr7RuG.s:669    .text:0000000000000314 .L0 
     /tmp/ccnr7RuG.s:674    .text:0000000000000318 .L0 
     /tmp/ccnr7RuG.s:675    .text:0000000000000318 .L0 
     /tmp/ccnr7RuG.s:676    .text:0000000000000318 .L0 
  src/../h/Riscv.hpp:99     .text:0000000000000318 .L0 
     /tmp/ccnr7RuG.s:684    .text:0000000000000320 .L0 
     /tmp/ccnr7RuG.s:685    .text:0000000000000320 .L0 
     /tmp/ccnr7RuG.s:692    .text:0000000000000324 .L0 
     /tmp/ccnr7RuG.s:693    .text:0000000000000324 .L0 
     /tmp/ccnr7RuG.s:694    .text:0000000000000324 .L0 
  src/../h/Riscv.hpp:155    .text:0000000000000324 .L0 
     /tmp/ccnr7RuG.s:702    .text:000000000000032c .L0 
     /tmp/ccnr7RuG.s:703    .text:000000000000032c .L0 
     /tmp/ccnr7RuG.s:708    .text:0000000000000330 .L0 
     /tmp/ccnr7RuG.s:709    .text:0000000000000330 .L0 
     /tmp/ccnr7RuG.s:712    .text:000000000000033c .L0 
     /tmp/ccnr7RuG.s:713    .text:000000000000033c .L0 
     /tmp/ccnr7RuG.s:718    .text:0000000000000344 .L0 
     /tmp/ccnr7RuG.s:719    .text:0000000000000344 .L0 
  src/../h/Riscv.hpp:160    .text:0000000000000344 .L0 
     /tmp/ccnr7RuG.s:731    .text:0000000000000348 .L0 
     /tmp/ccnr7RuG.s:732    .text:0000000000000348 .L0 
  src/../h/Riscv.hpp:104    .text:0000000000000348 .L0 
     /tmp/ccnr7RuG.s:739    .text:000000000000034c .L0 
     /tmp/ccnr7RuG.s:748    .text:0000000000000350 .L0 
     /tmp/ccnr7RuG.s:754    .text:0000000000000358 .L0 
     /tmp/ccnr7RuG.s:755    .text:0000000000000358 .L0 
     /tmp/ccnr7RuG.s:759    .text:0000000000000360 .L0 
     /tmp/ccnr7RuG.s:760    .text:0000000000000364 .L0 
     /tmp/ccnr7RuG.s:761    .text:0000000000000364 .L0 
     /tmp/ccnr7RuG.s:763    .text:0000000000000368 .L0 
     /tmp/ccnr7RuG.s:764    .text:0000000000000368 .L0 
     /tmp/ccnr7RuG.s:766    .text:000000000000036c .L0 
     /tmp/ccnr7RuG.s:768    .text:0000000000000370 .L0 
     /tmp/ccnr7RuG.s:770    .text:0000000000000374 .L0 
     /tmp/ccnr7RuG.s:772    .text:0000000000000378 .L0 
     /tmp/ccnr7RuG.s:774    .text:000000000000037c .L0 
     /tmp/ccnr7RuG.s:776    .text:0000000000000380 .L0 
     /tmp/ccnr7RuG.s:778    .text:0000000000000384 .L0 
     /tmp/ccnr7RuG.s:782    .text:0000000000000388 .L0 
     /tmp/ccnr7RuG.s:786    .text:0000000000000388 .L0 
     /tmp/ccnr7RuG.s:787    .text:0000000000000388 .L0 
     /tmp/ccnr7RuG.s:788    .text:0000000000000388 .L0 
     /tmp/ccnr7RuG.s:789    .text:0000000000000388 .L0 
       src/Riscv.cpp:138    .text:0000000000000388 .L0 
     /tmp/ccnr7RuG.s:799    .text:000000000000038c .L0 
     /tmp/ccnr7RuG.s:800    .text:000000000000038c .L0 
     /tmp/ccnr7RuG.s:801    .text:000000000000038c .L0 
  src/../h/Riscv.hpp:99     .text:000000000000038c .L0 
     /tmp/ccnr7RuG.s:810    .text:0000000000000394 .L0 
     /tmp/ccnr7RuG.s:811    .text:0000000000000394 .L0 
     /tmp/ccnr7RuG.s:816    .text:0000000000000398 .L0 
GAS LISTING /tmp/ccnr7RuG.s 			page 40


     /tmp/ccnr7RuG.s:817    .text:0000000000000398 .L0 
     /tmp/ccnr7RuG.s:821    .text:000000000000039c .L0 
     /tmp/ccnr7RuG.s:831    .text:00000000000003a4 .L0 
     /tmp/ccnr7RuG.s:843    .text:00000000000003ac .L0 
     /tmp/ccnr7RuG.s:857    .text:00000000000003b4 .L0 
     /tmp/ccnr7RuG.s:873    .text:00000000000003bc .L0 
     /tmp/ccnr7RuG.s:891    .text:00000000000003c4 .L0 
     /tmp/ccnr7RuG.s:904    .text:00000000000003cc .L0 
     /tmp/ccnr7RuG.s:905    .text:00000000000003cc .L0 
  src/../h/Riscv.hpp:104    .text:00000000000003cc .L0 
     /tmp/ccnr7RuG.s:912    .text:00000000000003d0 .L0 
     /tmp/ccnr7RuG.s:920    .text:00000000000003d4 .L0 
     /tmp/ccnr7RuG.s:921    .text:00000000000003d4 .L0 
       src/Riscv.cpp:146    .text:00000000000003d4 .L0 
     /tmp/ccnr7RuG.s:928    .text:00000000000003d8 .L0 
     /tmp/ccnr7RuG.s:929    .text:00000000000003d8 .L0 
     /tmp/ccnr7RuG.s:931    .text:00000000000003d8 .L0 
     /tmp/ccnr7RuG.s:936    .text:00000000000003e4 .L0 
       src/Riscv.cpp:149    .text:00000000000003e4 .L0 
     /tmp/ccnr7RuG.s:949    .text:00000000000003ec .L0 
     /tmp/ccnr7RuG.s:950    .text:00000000000003ec .L0 
       src/Riscv.cpp:154    .text:00000000000003ec .L0 
     /tmp/ccnr7RuG.s:957    .text:00000000000003f0 .L0 
     /tmp/ccnr7RuG.s:959    .text:00000000000003f0 .L0 
     /tmp/ccnr7RuG.s:962    .text:00000000000003f8 .L0 
       src/Riscv.cpp:156    .text:00000000000003f8 .L0 
     /tmp/ccnr7RuG.s:975    .text:0000000000000400 .L0 
     /tmp/ccnr7RuG.s:976    .text:0000000000000400 .L0 
     /tmp/ccnr7RuG.s:977    .text:0000000000000400 .L0 
     /tmp/ccnr7RuG.s:978    .text:0000000000000400 .L0 
       src/Riscv.cpp:164    .text:0000000000000400 .L0 
     /tmp/ccnr7RuG.s:985    .text:0000000000000404 .L0 
       src/Riscv.cpp:165    .text:0000000000000404 .L0 
     /tmp/ccnr7RuG.s:991    .text:0000000000000408 .L0 
       src/Riscv.cpp:166    .text:0000000000000408 .L0 
     /tmp/ccnr7RuG.s:997    .text:000000000000040c .L0 
     /tmp/ccnr7RuG.s:999    .text:000000000000040c .L0 
     /tmp/ccnr7RuG.s:1013   .text:0000000000000434 .L0 
     /tmp/ccnr7RuG.s:1014   .text:0000000000000434 .L0 
     /tmp/ccnr7RuG.s:1016   .text:0000000000000438 .L0 
     /tmp/ccnr7RuG.s:1018   .text:000000000000043c .L0 
       src/Riscv.cpp:181    .text:000000000000043c .L0 
     /tmp/ccnr7RuG.s:1027   .text:0000000000000444 .L0 
       src/Riscv.cpp:179    .text:0000000000000444 .L0 
     /tmp/ccnr7RuG.s:1042   .text:000000000000044c .L0 
     /tmp/ccnr7RuG.s:1043   .text:000000000000044c .L0 
     /tmp/ccnr7RuG.s:1044   .text:000000000000044c .L0 
  src/../h/Riscv.hpp:155    .text:000000000000044c .L0 
     /tmp/ccnr7RuG.s:1053   .text:0000000000000454 .L0 
     /tmp/ccnr7RuG.s:1054   .text:0000000000000454 .L0 
     /tmp/ccnr7RuG.s:1059   .text:0000000000000458 .L0 
     /tmp/ccnr7RuG.s:1060   .text:0000000000000458 .L0 
     /tmp/ccnr7RuG.s:1064   .text:0000000000000464 .L0 
     /tmp/ccnr7RuG.s:1065   .text:0000000000000464 .L0 
     /tmp/ccnr7RuG.s:1070   .text:000000000000046c .L0 
     /tmp/ccnr7RuG.s:1071   .text:000000000000046c .L0 
  src/../h/Riscv.hpp:160    .text:000000000000046c .L0 
GAS LISTING /tmp/ccnr7RuG.s 			page 41


     /tmp/ccnr7RuG.s:1078   .text:0000000000000470 .L0 
     /tmp/ccnr7RuG.s:1087   .text:0000000000000474 .L0 
     /tmp/ccnr7RuG.s:1088   .text:0000000000000474 .L0 
     /tmp/ccnr7RuG.s:1092   .text:0000000000000480 .L0 
     /tmp/ccnr7RuG.s:1096   .text:0000000000000484 .L0 
     /tmp/ccnr7RuG.s:1097   .text:0000000000000484 .L0 
     /tmp/ccnr7RuG.s:1098   .text:0000000000000484 .L0 
  src/../h/Riscv.hpp:155    .text:0000000000000484 .L0 
     /tmp/ccnr7RuG.s:1106   .text:000000000000048c .L0 
     /tmp/ccnr7RuG.s:1107   .text:000000000000048c .L0 
     /tmp/ccnr7RuG.s:1112   .text:0000000000000490 .L0 
     /tmp/ccnr7RuG.s:1113   .text:0000000000000490 .L0 
     /tmp/ccnr7RuG.s:1116   .text:000000000000049c .L0 
     /tmp/ccnr7RuG.s:1117   .text:000000000000049c .L0 
     /tmp/ccnr7RuG.s:1125   .text:00000000000004b4 .L0 
     /tmp/ccnr7RuG.s:1126   .text:00000000000004b4 .L0 
     /tmp/ccnr7RuG.s:1127   .text:00000000000004b4 .L0 
     /tmp/ccnr7RuG.s:1133   .text:00000000000004bc .L0 
     /tmp/ccnr7RuG.s:1134   .text:00000000000004bc .L0 
     /tmp/ccnr7RuG.s:1139   .text:00000000000004c4 .L0 
     /tmp/ccnr7RuG.s:1140   .text:00000000000004c4 .L0 
  src/../h/Riscv.hpp:160    .text:00000000000004c4 .L0 
     /tmp/ccnr7RuG.s:1147   .text:00000000000004c8 .L0 
     /tmp/ccnr7RuG.s:1153   .text:00000000000004cc .L0 
       src/Riscv.cpp:194    .text:00000000000004cc .L0 
     /tmp/ccnr7RuG.s:1160   .text:00000000000004d0 .L0 
     /tmp/ccnr7RuG.s:1167   .text:00000000000004d4 .L0 
     /tmp/ccnr7RuG.s:1168   .text:00000000000004d4 .L0 
       src/Riscv.cpp:209    .text:00000000000004d4 .L0 
     /tmp/ccnr7RuG.s:1178   .text:00000000000004d8 .L0 
     /tmp/ccnr7RuG.s:1179   .text:00000000000004d8 .L0 
     /tmp/ccnr7RuG.s:1180   .text:00000000000004d8 .L0 
  src/../h/Riscv.hpp:155    .text:00000000000004d8 .L0 
     /tmp/ccnr7RuG.s:1189   .text:00000000000004e0 .L0 
     /tmp/ccnr7RuG.s:1190   .text:00000000000004e0 .L0 
     /tmp/ccnr7RuG.s:1195   .text:00000000000004e4 .L0 
     /tmp/ccnr7RuG.s:1196   .text:00000000000004e4 .L0 
     /tmp/ccnr7RuG.s:1199   .text:00000000000004f0 .L0 
     /tmp/ccnr7RuG.s:1200   .text:00000000000004f0 .L0 
     /tmp/ccnr7RuG.s:1206   .text:00000000000004fc .L0 
     /tmp/ccnr7RuG.s:1207   .text:00000000000004fc .L0 
     /tmp/ccnr7RuG.s:1215   .text:0000000000000504 .L0 
     /tmp/ccnr7RuG.s:1216   .text:0000000000000504 .L0 
     /tmp/ccnr7RuG.s:1217   .text:0000000000000504 .L0 
     /tmp/ccnr7RuG.s:1222   .text:0000000000000508 .L0 
     /tmp/ccnr7RuG.s:1223   .text:0000000000000508 .L0 
     /tmp/ccnr7RuG.s:1226   .text:0000000000000510 .L0 
     /tmp/ccnr7RuG.s:1227   .text:0000000000000510 .L0 
     /tmp/ccnr7RuG.s:1233   .text:0000000000000518 .L0 
     /tmp/ccnr7RuG.s:1234   .text:0000000000000518 .L0 
  src/../h/Riscv.hpp:160    .text:0000000000000518 .L0 
     /tmp/ccnr7RuG.s:1244   .text:000000000000051c .L0 
       src/Riscv.cpp:219    .text:000000000000051c .L0 
     /tmp/ccnr7RuG.s:1261   .text:0000000000000528 .L0 
     /tmp/ccnr7RuG.s:1275   .text:0000000000000540 .L0 
     /tmp/ccnr7RuG.s:1303   .rodata:0000000000000000 .LANCHOR0
     /tmp/ccnr7RuG.s:1306   .rodata:0000000000000000 _ZZN5Riscv12printIntegerEmE6digits
GAS LISTING /tmp/ccnr7RuG.s 			page 42


     /tmp/ccnr7RuG.s:1310   .bss:0000000000000000 .LANCHOR1
     /tmp/ccnr7RuG.s:1313   .bss:0000000000000000 _ZZN5Riscv20handleSupervisorTrapEvE13sumInterrupts
     /tmp/ccnr7RuG.s:1324   .text:0000000000000540 .L0 
     /tmp/ccnr7RuG.s:30     .text:0000000000000018 .L0 
     /tmp/ccnr7RuG.s:71     .text:0000000000000058 .L0 
     /tmp/ccnr7RuG.s:465    .text:00000000000001dc .L0 
     /tmp/ccnr7RuG.s:541    .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccnr7RuG.s:627    .text:00000000000002b8 .L0 
     /tmp/ccnr7RuG.s:633    .text:00000000000002c8 .L0 
     /tmp/ccnr7RuG.s:644    .text:00000000000002e4 .L0 
     /tmp/ccnr7RuG.s:655    .text:0000000000000300 .L0 
     /tmp/ccnr7RuG.s:709    .text:0000000000000330 .L0 
     /tmp/ccnr7RuG.s:1060   .text:0000000000000458 .L0 
     /tmp/ccnr7RuG.s:1088   .text:0000000000000474 .L0 
     /tmp/ccnr7RuG.s:1113   .text:0000000000000490 .L0 
     /tmp/ccnr7RuG.s:1117   .text:000000000000049c .L0 
     /tmp/ccnr7RuG.s:1119   .text:00000000000004a8 .L0 
     /tmp/ccnr7RuG.s:1196   .text:00000000000004e4 .L0 
     /tmp/ccnr7RuG.s:1200   .text:00000000000004f0 .L0 
     /tmp/ccnr7RuG.s:351    .text:0000000000000170 .L15
     /tmp/ccnr7RuG.s:332    .text:0000000000000158 .L16
     /tmp/ccnr7RuG.s:455    .text:00000000000001cc .L19
     /tmp/ccnr7RuG.s:497    .text:000000000000022c .L20
     /tmp/ccnr7RuG.s:483    .text:000000000000020c .L21
     /tmp/ccnr7RuG.s:741    .text:0000000000000350 .L39
     /tmp/ccnr7RuG.s:751    .text:0000000000000358 .L26
     /tmp/ccnr7RuG.s:781    .text:0000000000000388 .L40
     /tmp/ccnr7RuG.s:914    .text:00000000000003d4 .L41
     /tmp/ccnr7RuG.s:945    .text:00000000000003ec .L42
     /tmp/ccnr7RuG.s:971    .text:0000000000000400 .L43
     /tmp/ccnr7RuG.s:1035   .text:000000000000044c .L44
     /tmp/ccnr7RuG.s:1080   .text:0000000000000474 .L45
     /tmp/ccnr7RuG.s:1162   .text:00000000000004d4 .L46
     /tmp/ccnr7RuG.s:757    .text:0000000000000360 .L23
     /tmp/ccnr7RuG.s:894    .text:00000000000003cc .L28
     /tmp/ccnr7RuG.s:1025   .text:0000000000000444 .L47
     /tmp/ccnr7RuG.s:1149   .text:00000000000004cc .L48
     /tmp/ccnr7RuG.s:48     .text:0000000000000028 .LEHB0
     /tmp/ccnr7RuG.s:10     .text:0000000000000000 .LFB21
     /tmp/ccnr7RuG.s:51     .text:0000000000000030 .LEHE0
     /tmp/ccnr7RuG.s:55     .text:000000000000003c .LEHB1
     /tmp/ccnr7RuG.s:58     .text:0000000000000044 .LEHE1
     /tmp/ccnr7RuG.s:100    .text:0000000000000084 .L3
     /tmp/ccnr7RuG.s:62     .text:0000000000000048 .LEHB2
     /tmp/ccnr7RuG.s:69     .text:0000000000000058 .LEHE2
     /tmp/ccnr7RuG.s:108    .text:0000000000000098 .LEHB3
     /tmp/ccnr7RuG.s:111    .text:00000000000000a0 .LEHE3
     /tmp/ccnr7RuG.s:628    .text:00000000000002c0 .LEHB4
     /tmp/ccnr7RuG.s:548    .text:0000000000000260 .LFB28
     /tmp/ccnr7RuG.s:1002   .text:0000000000000418 .LEHE4
     /tmp/ccnr7RuG.s:1008   .text:000000000000042c .LEHB5
     /tmp/ccnr7RuG.s:1011   .text:0000000000000434 .LEHE5
     /tmp/ccnr7RuG.s:1253   .text:0000000000000524 .L37
     /tmp/ccnr7RuG.s:1063   .text:0000000000000464 .LEHB6
     /tmp/ccnr7RuG.s:1229   .text:0000000000000518 .LEHE6
     /tmp/ccnr7RuG.s:1265   .text:0000000000000538 .LEHB7
     /tmp/ccnr7RuG.s:1268   .text:0000000000000540 .LEHE7
GAS LISTING /tmp/ccnr7RuG.s 			page 43


     /tmp/ccnr7RuG.s:3729   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccnr7RuG.s:5575   .debug_str:0000000000000699 .LASF213
     /tmp/ccnr7RuG.s:5431   .debug_str:0000000000000289 .LASF214
     /tmp/ccnr7RuG.s:5709   .debug_str:0000000000000a87 .LASF215
     /tmp/ccnr7RuG.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccnr7RuG.s:1316   .text:0000000000000540 .Letext0
     /tmp/ccnr7RuG.s:5351   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccnr7RuG.s:5513   .debug_str:00000000000004d8 .LASF0
     /tmp/ccnr7RuG.s:5635   .debug_str:00000000000008d0 .LASF3
     /tmp/ccnr7RuG.s:5547   .debug_str:00000000000005bb .LASF1
     /tmp/ccnr7RuG.s:5643   .debug_str:00000000000008f0 .LASF2
     /tmp/ccnr7RuG.s:5651   .debug_str:000000000000092b .LASF4
     /tmp/ccnr7RuG.s:5531   .debug_str:0000000000000549 .LASF5
     /tmp/ccnr7RuG.s:5365   .debug_str:0000000000000065 .LASF6
     /tmp/ccnr7RuG.s:5621   .debug_str:0000000000000876 .LASF7
     /tmp/ccnr7RuG.s:5611   .debug_str:0000000000000834 .LASF8
     /tmp/ccnr7RuG.s:5537   .debug_str:0000000000000582 .LASF9
     /tmp/ccnr7RuG.s:5493   .debug_str:0000000000000439 .LASF10
     /tmp/ccnr7RuG.s:5499   .debug_str:0000000000000475 .LASF11
     /tmp/ccnr7RuG.s:5421   .debug_str:000000000000024a .LASF12
     /tmp/ccnr7RuG.s:5479   .debug_str:00000000000003eb .LASF13
     /tmp/ccnr7RuG.s:5433   .debug_str:0000000000000297 .LASF14
     /tmp/ccnr7RuG.s:5419   .debug_str:000000000000023a .LASF15
     /tmp/ccnr7RuG.s:5683   .debug_str:00000000000009ff .LASF16
     /tmp/ccnr7RuG.s:5465   .debug_str:0000000000000373 .LASF17
     /tmp/ccnr7RuG.s:5673   .debug_str:00000000000009b8 .LASF18
     /tmp/ccnr7RuG.s:5743   .debug_str:0000000000000b7b .LASF91
     /tmp/ccnr7RuG.s:5633   .debug_str:00000000000008c5 .LASF22
     /tmp/ccnr7RuG.s:5553   .debug_str:00000000000005e7 .LASF19
     /tmp/ccnr7RuG.s:5469   .debug_str:00000000000003a4 .LASF20
     /tmp/ccnr7RuG.s:5761   .debug_str:0000000000000be0 .LASF21
     /tmp/ccnr7RuG.s:5735   .debug_str:0000000000000b4a .LASF23
     /tmp/ccnr7RuG.s:5471   .debug_str:00000000000003ad .LASF24
     /tmp/ccnr7RuG.s:5697   .debug_str:0000000000000a31 .LASF25
     /tmp/ccnr7RuG.s:5449   .debug_str:0000000000000309 .LASF26
     /tmp/ccnr7RuG.s:5581   .debug_str:0000000000000755 .LASF27
     /tmp/ccnr7RuG.s:5569   .debug_str:000000000000065b .LASF29
     /tmp/ccnr7RuG.s:5463   .debug_str:0000000000000369 .LASF28
     /tmp/ccnr7RuG.s:5361   .debug_str:0000000000000047 .LASF30
     /tmp/ccnr7RuG.s:5417   .debug_str:0000000000000229 .LASF31
     /tmp/ccnr7RuG.s:5557   .debug_str:00000000000005f5 .LASF32
     /tmp/ccnr7RuG.s:5527   .debug_str:000000000000052a .LASF33
     /tmp/ccnr7RuG.s:5439   .debug_str:00000000000002ca .LASF34
     /tmp/ccnr7RuG.s:5769   .debug_str:0000000000000c15 .LASF35
     /tmp/ccnr7RuG.s:5379   .debug_str:00000000000000d8 .LASF37
     /tmp/ccnr7RuG.s:5619   .debug_str:0000000000000869 .LASF36
     /tmp/ccnr7RuG.s:5385   .debug_str:0000000000000106 .LASF38
     /tmp/ccnr7RuG.s:5659   .debug_str:0000000000000954 .LASF39
     /tmp/ccnr7RuG.s:5467   .debug_str:0000000000000389 .LASF40
     /tmp/ccnr7RuG.s:5519   .debug_str:00000000000004fa .LASF41
     /tmp/ccnr7RuG.s:5755   .debug_str:0000000000000bb1 .LASF42
     /tmp/ccnr7RuG.s:5727   .debug_str:0000000000000b1a .LASF45
     /tmp/ccnr7RuG.s:5719   .debug_str:0000000000000ad8 .LASF47
     /tmp/ccnr7RuG.s:5639   .debug_str:00000000000008dc .LASF43
     /tmp/ccnr7RuG.s:5595   .debug_str:00000000000007c3 .LASF44
     /tmp/ccnr7RuG.s:5627   .debug_str:0000000000000897 .LASF46
     /tmp/ccnr7RuG.s:5629   .debug_str:000000000000089e .LASF48
GAS LISTING /tmp/ccnr7RuG.s 			page 44


     /tmp/ccnr7RuG.s:5589   .debug_str:000000000000078f .LASF49
     /tmp/ccnr7RuG.s:5539   .debug_str:0000000000000595 .LASF50
     /tmp/ccnr7RuG.s:5757   .debug_str:0000000000000bcb .LASF51
     /tmp/ccnr7RuG.s:5705   .debug_str:0000000000000a69 .LASF52
     /tmp/ccnr7RuG.s:5587   .debug_str:0000000000000787 .LASF53
     /tmp/ccnr7RuG.s:5593   .debug_str:00000000000007af .LASF54
     /tmp/ccnr7RuG.s:5577   .debug_str:000000000000073b .LASF55
     /tmp/ccnr7RuG.s:5631   .debug_str:00000000000008b1 .LASF56
     /tmp/ccnr7RuG.s:5793   .debug_str:0000000000000cbe .LASF57
     /tmp/ccnr7RuG.s:5523   .debug_str:000000000000050d .LASF58
     /tmp/ccnr7RuG.s:5679   .debug_str:00000000000009f1 .LASF59
     /tmp/ccnr7RuG.s:5653   .debug_str:0000000000000932 .LASF60
     /tmp/ccnr7RuG.s:5655   .debug_str:0000000000000945 .LASF61
     /tmp/ccnr7RuG.s:5427   .debug_str:000000000000026c .LASF62
     /tmp/ccnr7RuG.s:5459   .debug_str:0000000000000351 .LASF63
     /tmp/ccnr7RuG.s:5509   .debug_str:00000000000004ae .LASF64
     /tmp/ccnr7RuG.s:5521   .debug_str:0000000000000507 .LASF65
     /tmp/ccnr7RuG.s:5453   .debug_str:0000000000000328 .LASF66
     /tmp/ccnr7RuG.s:5367   .debug_str:000000000000006c .LASF67
     /tmp/ccnr7RuG.s:5647   .debug_str:000000000000090a .LASF68
     /tmp/ccnr7RuG.s:5641   .debug_str:00000000000008e5 .LASF69
     /tmp/ccnr7RuG.s:5785   .debug_str:0000000000000c87 .LASF70
     /tmp/ccnr7RuG.s:5745   .debug_str:0000000000000b81 .LASF71
     /tmp/ccnr7RuG.s:5765   .debug_str:0000000000000bf8 .LASF72
     /tmp/ccnr7RuG.s:5741   .debug_str:0000000000000b71 .LASF73
     /tmp/ccnr7RuG.s:5571   .debug_str:0000000000000673 .LASF74
     /tmp/ccnr7RuG.s:5505   .debug_str:000000000000049d .LASF75
     /tmp/ccnr7RuG.s:5511   .debug_str:00000000000004c0 .LASF76
     /tmp/ccnr7RuG.s:5725   .debug_str:0000000000000b0b .LASF77
     /tmp/ccnr7RuG.s:5497   .debug_str:0000000000000459 .LASF78
     /tmp/ccnr7RuG.s:5617   .debug_str:0000000000000854 .LASF79
     /tmp/ccnr7RuG.s:5535   .debug_str:0000000000000560 .LASF80
     /tmp/ccnr7RuG.s:5637   .debug_str:00000000000008d5 .LASF81
     /tmp/ccnr7RuG.s:5363   .debug_str:000000000000005d .LASF82
     /tmp/ccnr7RuG.s:5399   .debug_str:0000000000000194 .LASF83
     /tmp/ccnr7RuG.s:5723   .debug_str:0000000000000aff .LASF84
     /tmp/ccnr7RuG.s:5401   .debug_str:00000000000001a3 .LASF85
     /tmp/ccnr7RuG.s:5579   .debug_str:0000000000000743 .LASF86
     /tmp/ccnr7RuG.s:5501   .debug_str:0000000000000483 .LASF87
     /tmp/ccnr7RuG.s:5739   .debug_str:0000000000000b5e .LASF88
     /tmp/ccnr7RuG.s:5415   .debug_str:0000000000000215 .LASF89
     /tmp/ccnr7RuG.s:5691   .debug_str:0000000000000a1e .LASF90
     /tmp/ccnr7RuG.s:5711   .debug_str:0000000000000aaa .LASF92
     /tmp/ccnr7RuG.s:5729   .debug_str:0000000000000b23 .LASF95
     /tmp/ccnr7RuG.s:5541   .debug_str:00000000000005a8 .LASF93
     /tmp/ccnr7RuG.s:5423   .debug_str:0000000000000259 .LASF94
     /tmp/ccnr7RuG.s:5689   .debug_str:0000000000000a18 .LASF96
     /tmp/ccnr7RuG.s:5555   .debug_str:00000000000005f0 .LASF97
     /tmp/ccnr7RuG.s:5773   .debug_str:0000000000000c2c .LASF116
     /tmp/ccnr7RuG.s:5381   .debug_str:00000000000000f3 .LASF99
     /tmp/ccnr7RuG.s:5437   .debug_str:00000000000002b8 .LASF101
     /tmp/ccnr7RuG.s:5517   .debug_str:00000000000004f5 .LASF98
     /tmp/ccnr7RuG.s:5667   .debug_str:000000000000098d .LASF103
     /tmp/ccnr7RuG.s:5545   .debug_str:00000000000005b6 .LASF100
     /tmp/ccnr7RuG.s:5563   .debug_str:0000000000000633 .LASF102
     /tmp/ccnr7RuG.s:5457   .debug_str:0000000000000343 .LASF104
     /tmp/ccnr7RuG.s:5767   .debug_str:0000000000000c0e .LASF105
GAS LISTING /tmp/ccnr7RuG.s 			page 45


     /tmp/ccnr7RuG.s:5395   .debug_str:000000000000017c .LASF106
     /tmp/ccnr7RuG.s:5693   .debug_str:0000000000000a23 .LASF107
     /tmp/ccnr7RuG.s:5413   .debug_str:000000000000020f .LASF108
     /tmp/ccnr7RuG.s:5669   .debug_str:00000000000009a2 .LASF109
     /tmp/ccnr7RuG.s:5429   .debug_str:000000000000027f .LASF110
     /tmp/ccnr7RuG.s:5403   .debug_str:00000000000001b6 .LASF111
     /tmp/ccnr7RuG.s:5613   .debug_str:0000000000000847 .LASF112
     /tmp/ccnr7RuG.s:5543   .debug_str:00000000000005ad .LASF113
     /tmp/ccnr7RuG.s:5687   .debug_str:0000000000000a10 .LASF114
     /tmp/ccnr7RuG.s:5507   .debug_str:00000000000004a8 .LASF115
     /tmp/ccnr7RuG.s:5585   .debug_str:000000000000076f .LASF117
     /tmp/ccnr7RuG.s:5601   .debug_str:00000000000007e6 .LASF216
     /tmp/ccnr7RuG.s:5747   .debug_str:0000000000000b8b .LASF118
     /tmp/ccnr7RuG.s:5783   .debug_str:0000000000000c7b .LASF119
     /tmp/ccnr7RuG.s:5779   .debug_str:0000000000000c61 .LASF120
     /tmp/ccnr7RuG.s:5703   .debug_str:0000000000000a59 .LASF121
     /tmp/ccnr7RuG.s:5455   .debug_str:000000000000033a .LASF122
     /tmp/ccnr7RuG.s:5377   .debug_str:00000000000000c5 .LASF123
     /tmp/ccnr7RuG.s:5549   .debug_str:00000000000005ce .LASF124
     /tmp/ccnr7RuG.s:5605   .debug_str:00000000000007fe .LASF125
     /tmp/ccnr7RuG.s:5695   .debug_str:0000000000000a29 .LASF126
     /tmp/ccnr7RuG.s:5749   .debug_str:0000000000000b90 .LASF127
     /tmp/ccnr7RuG.s:5661   .debug_str:0000000000000962 .LASF128
     /tmp/ccnr7RuG.s:5567   .debug_str:000000000000064e .LASF129
     /tmp/ccnr7RuG.s:5559   .debug_str:0000000000000613 .LASF130
     /tmp/ccnr7RuG.s:5787   .debug_str:0000000000000c9f .LASF131
     /tmp/ccnr7RuG.s:5485   .debug_str:0000000000000417 .LASF132
     /tmp/ccnr7RuG.s:5515   .debug_str:00000000000004e5 .LASF133
     /tmp/ccnr7RuG.s:5529   .debug_str:000000000000053c .LASF134
     /tmp/ccnr7RuG.s:5665   .debug_str:0000000000000984 .LASF135
     /tmp/ccnr7RuG.s:5451   .debug_str:0000000000000315 .LASF136
     /tmp/ccnr7RuG.s:5649   .debug_str:0000000000000922 .LASF137
     /tmp/ccnr7RuG.s:5677   .debug_str:00000000000009d5 .LASF138
     /tmp/ccnr7RuG.s:5583   .debug_str:0000000000000760 .LASF139
     /tmp/ccnr7RuG.s:5355   .debug_str:0000000000000010 .LASF140
     /tmp/ccnr7RuG.s:5763   .debug_str:0000000000000be9 .LASF141
     /tmp/ccnr7RuG.s:5609   .debug_str:000000000000081a .LASF142
     /tmp/ccnr7RuG.s:5671   .debug_str:00000000000009aa .LASF143
     /tmp/ccnr7RuG.s:5625   .debug_str:000000000000088b .LASF144
     /tmp/ccnr7RuG.s:5353   .debug_str:0000000000000000 .LASF145
     /tmp/ccnr7RuG.s:5771   .debug_str:0000000000000c21 .LASF146
     /tmp/ccnr7RuG.s:5573   .debug_str:0000000000000689 .LASF147
     /tmp/ccnr7RuG.s:5461   .debug_str:0000000000000357 .LASF148
     /tmp/ccnr7RuG.s:5733   .debug_str:0000000000000b2d .LASF149
     /tmp/ccnr7RuG.s:5405   .debug_str:00000000000001bf .LASF150
     /tmp/ccnr7RuG.s:5713   .debug_str:0000000000000ab0 .LASF151
     /tmp/ccnr7RuG.s:5657   .debug_str:000000000000094c .LASF176
     /tmp/ccnr7RuG.s:5707   .debug_str:0000000000000a7d .LASF152
     /tmp/ccnr7RuG.s:5607   .debug_str:000000000000080e .LASF153
     /tmp/ccnr7RuG.s:5443   .debug_str:00000000000002ef .LASF154
     /tmp/ccnr7RuG.s:5391   .debug_str:000000000000014d .LASF156
     /tmp/ccnr7RuG.s:5389   .debug_str:0000000000000138 .LASF155
     /tmp/ccnr7RuG.s:5411   .debug_str:00000000000001e3 .LASF157
     /tmp/ccnr7RuG.s:5791   .debug_str:0000000000000cb7 .LASF217
     /tmp/ccnr7RuG.s:5409   .debug_str:00000000000001d2 .LASF218
     /tmp/ccnr7RuG.s:5359   .debug_str:0000000000000042 .LASF158
     /tmp/ccnr7RuG.s:5685   .debug_str:0000000000000a0b .LASF159
GAS LISTING /tmp/ccnr7RuG.s 			page 46


     /tmp/ccnr7RuG.s:5561   .debug_str:000000000000062b .LASF160
     /tmp/ccnr7RuG.s:5441   .debug_str:00000000000002e9 .LASF161
     /tmp/ccnr7RuG.s:5717   .debug_str:0000000000000ad0 .LASF162
     /tmp/ccnr7RuG.s:5397   .debug_str:000000000000018a .LASF163
     /tmp/ccnr7RuG.s:5491   .debug_str:000000000000042f .LASF164
     /tmp/ccnr7RuG.s:5371   .debug_str:0000000000000081 .LASF219
     /tmp/ccnr7RuG.s:5781   .debug_str:0000000000000c67 .LASF220
     /tmp/ccnr7RuG.s:5533   .debug_str:000000000000055b .LASF165
     /tmp/ccnr7RuG.s:5591   .debug_str:0000000000000796 .LASF166
     /tmp/ccnr7RuG.s:5477   .debug_str:00000000000003e6 .LASF167
     /tmp/ccnr7RuG.s:5481   .debug_str:00000000000003fa .LASF168
     /tmp/ccnr7RuG.s:5721   .debug_str:0000000000000aed .LASF169
     /tmp/ccnr7RuG.s:5603   .debug_str:00000000000007eb .LASF170
     /tmp/ccnr7RuG.s:5699   .debug_str:0000000000000a3e .LASF171
     /tmp/ccnr7RuG.s:5357   .debug_str:000000000000002a .LASF172
     /tmp/ccnr7RuG.s:5663   .debug_str:0000000000000973 .LASF173
     /tmp/ccnr7RuG.s:5435   .debug_str:00000000000002a7 .LASF174
     /tmp/ccnr7RuG.s:5373   .debug_str:0000000000000099 .LASF175
     /tmp/ccnr7RuG.s:5369   .debug_str:0000000000000077 .LASF177
     /tmp/ccnr7RuG.s:5503   .debug_str:0000000000000496 .LASF178
     /tmp/ccnr7RuG.s:5797   .debug_str:0000000000000cd5 .LASF179
     /tmp/ccnr7RuG.s:5551   .debug_str:00000000000005d4 .LASF180
     /tmp/ccnr7RuG.s:5775   .debug_str:0000000000000c3c .LASF181
     /tmp/ccnr7RuG.s:5701   .debug_str:0000000000000a46 .LASF182
     /tmp/ccnr7RuG.s:5525   .debug_str:0000000000000521 .LASF183
     /tmp/ccnr7RuG.s:5795   .debug_str:0000000000000cc6 .LASF184
     /tmp/ccnr7RuG.s:5759   .debug_str:0000000000000bd3 .LASF185
     /tmp/ccnr7RuG.s:5473   .debug_str:00000000000003b9 .LASF186
     /tmp/ccnr7RuG.s:5375   .debug_str:00000000000000a2 .LASF187
     /tmp/ccnr7RuG.s:1276   .text:0000000000000540 .LFE28
     /tmp/ccnr7RuG.s:4851   .debug_loc:0000000000000000 .LLST15
     /tmp/ccnr7RuG.s:5675   .debug_str:00000000000009ce .LASF188
     /tmp/ccnr7RuG.s:4882   .debug_loc:0000000000000095 .LLST16
     /tmp/ccnr7RuG.s:5327   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccnr7RuG.s:5425   .debug_str:000000000000025e .LASF189
     /tmp/ccnr7RuG.s:5565   .debug_str:0000000000000644 .LASF190
     /tmp/ccnr7RuG.s:4897   .debug_loc:00000000000000de .LLST17
     /tmp/ccnr7RuG.s:5731   .debug_str:0000000000000b28 .LASF191
     /tmp/ccnr7RuG.s:4928   .debug_loc:0000000000000173 .LLST18
     /tmp/ccnr7RuG.s:670    .text:0000000000000318 .LBB103
     /tmp/ccnr7RuG.s:744    .text:0000000000000350 .LBE103
     /tmp/ccnr7RuG.s:4939   .debug_loc:00000000000001a9 .LLST21
     /tmp/ccnr7RuG.s:5751   .debug_str:0000000000000b9b .LASF192
     /tmp/ccnr7RuG.s:4946   .debug_loc:00000000000001cc .LLST22
     /tmp/ccnr7RuG.s:672    .text:0000000000000318 .LBB104
     /tmp/ccnr7RuG.s:688    .text:0000000000000324 .LBE104
     /tmp/ccnr7RuG.s:690    .text:0000000000000324 .LBB106
     /tmp/ccnr7RuG.s:706    .text:0000000000000330 .LBE106
     /tmp/ccnr7RuG.s:716    .text:0000000000000344 .LBB108
     /tmp/ccnr7RuG.s:727    .text:0000000000000348 .LBE108
     /tmp/ccnr7RuG.s:4953   .debug_loc:00000000000001ef .LLST23
     /tmp/ccnr7RuG.s:729    .text:0000000000000348 .LBB110
     /tmp/ccnr7RuG.s:743    .text:0000000000000350 .LBE110
     /tmp/ccnr7RuG.s:4960   .debug_loc:0000000000000212 .LLST24
     /tmp/ccnr7RuG.s:714    .text:0000000000000344 .LVL51
     /tmp/ccnr7RuG.s:918    .text:00000000000003d4 .LBB158
     /tmp/ccnr7RuG.s:942    .text:00000000000003e8 .LBE158
GAS LISTING /tmp/ccnr7RuG.s 			page 47


     /tmp/ccnr7RuG.s:4967   .debug_loc:0000000000000235 .LLST44
     /tmp/ccnr7RuG.s:5753   .debug_str:0000000000000ba3 .LASF193
     /tmp/ccnr7RuG.s:4982   .debug_loc:000000000000026f .LLST45
     /tmp/ccnr7RuG.s:934    .text:00000000000003e4 .LVL65
     /tmp/ccnr7RuG.s:947    .text:00000000000003ec .LBB152
     /tmp/ccnr7RuG.s:968    .text:00000000000003fc .LBE152
     /tmp/ccnr7RuG.s:5407   .debug_str:00000000000001cd .LASF194
     /tmp/ccnr7RuG.s:4989   .debug_loc:0000000000000292 .LLST42
     /tmp/ccnr7RuG.s:5393   .debug_str:0000000000000175 .LASF195
     /tmp/ccnr7RuG.s:5001   .debug_loc:00000000000002c9 .LLST43
     /tmp/ccnr7RuG.s:960    .text:00000000000003f8 .LVL68
     /tmp/ccnr7RuG.s:5623   .debug_str:000000000000087d .LASF196
     /tmp/ccnr7RuG.s:5008   .debug_loc:00000000000002ec .LLST38
     /tmp/ccnr7RuG.s:5019   .debug_loc:0000000000000322 .LLST39
     /tmp/ccnr7RuG.s:5383   .debug_str:00000000000000f9 .LASF197
     /tmp/ccnr7RuG.s:5030   .debug_loc:0000000000000358 .LLST40
     /tmp/ccnr7RuG.s:5597   .debug_str:00000000000007d8 .LASF198
     /tmp/ccnr7RuG.s:5041   .debug_loc:000000000000038e .LLST41
     /tmp/ccnr7RuG.s:1001   .text:0000000000000418 .LVL73
     /tmp/ccnr7RuG.s:1010   .text:0000000000000434 .LVL74
     /tmp/ccnr7RuG.s:1263   .text:0000000000000534 .LVL98
     /tmp/ccnr7RuG.s:1038   .text:000000000000044c .LBB138
     /tmp/ccnr7RuG.s:1083   .text:0000000000000474 .LBE138
     /tmp/ccnr7RuG.s:5048   .debug_loc:00000000000003b1 .LLST36
     /tmp/ccnr7RuG.s:1040   .text:000000000000044c .LBB139
     /tmp/ccnr7RuG.s:1057   .text:0000000000000458 .LBE139
     /tmp/ccnr7RuG.s:1068   .text:000000000000046c .LBB141
     /tmp/ccnr7RuG.s:1082   .text:0000000000000474 .LBE141
     /tmp/ccnr7RuG.s:5055   .debug_loc:00000000000003d4 .LLST37
     /tmp/ccnr7RuG.s:1066   .text:000000000000046c .LVL78
     /tmp/ccnr7RuG.s:1085   .text:0000000000000474 .LBB129
     /tmp/ccnr7RuG.s:1163   .text:00000000000004d4 .LBE129
     /tmp/ccnr7RuG.s:5062   .debug_loc:00000000000003f7 .LLST32
     /tmp/ccnr7RuG.s:1094   .text:0000000000000484 .LBB130
     /tmp/ccnr7RuG.s:1110   .text:0000000000000490 .LBE130
     /tmp/ccnr7RuG.s:1123   .text:00000000000004b4 .LBB132
     /tmp/ccnr7RuG.s:1131   .text:00000000000004bc .LBE132
     /tmp/ccnr7RuG.s:5069   .debug_loc:000000000000041a .LLST33
     /tmp/ccnr7RuG.s:5077   .debug_loc:000000000000043e .LLST34
     /tmp/ccnr7RuG.s:1137   .text:00000000000004c4 .LBB134
     /tmp/ccnr7RuG.s:1151   .text:00000000000004cc .LBE134
     /tmp/ccnr7RuG.s:5084   .debug_loc:0000000000000461 .LLST35
     /tmp/ccnr7RuG.s:1135   .text:00000000000004c4 .LVL84
     /tmp/ccnr7RuG.s:1165   .text:00000000000004d4 .LBB120
     /tmp/ccnr7RuG.s:1250   .text:0000000000000520 .LBE120
     /tmp/ccnr7RuG.s:5615   .debug_str:000000000000084f .LASF199
     /tmp/ccnr7RuG.s:5091   .debug_loc:0000000000000484 .LLST25
     /tmp/ccnr7RuG.s:5098   .debug_loc:00000000000004a7 .LLST26
     /tmp/ccnr7RuG.s:1176   .text:00000000000004d8 .LBB121
     /tmp/ccnr7RuG.s:1193   .text:00000000000004e4 .LBE121
     /tmp/ccnr7RuG.s:1203   .text:00000000000004fc .LBB123
     /tmp/ccnr7RuG.s:1211   .text:0000000000000504 .LBE123
     /tmp/ccnr7RuG.s:5105   .debug_loc:00000000000004ca .LLST27
     /tmp/ccnr7RuG.s:5113   .debug_loc:00000000000004ee .LLST28
     /tmp/ccnr7RuG.s:1213   .text:0000000000000504 .LBB125
     /tmp/ccnr7RuG.s:1220   .text:0000000000000508 .LBE125
     /tmp/ccnr7RuG.s:5120   .debug_loc:0000000000000511 .LLST29
GAS LISTING /tmp/ccnr7RuG.s 			page 48


     /tmp/ccnr7RuG.s:5127   .debug_loc:0000000000000534 .LLST30
     /tmp/ccnr7RuG.s:1231   .text:0000000000000518 .LBB127
     /tmp/ccnr7RuG.s:1242   .text:000000000000051c .LBE127
     /tmp/ccnr7RuG.s:5134   .debug_loc:0000000000000557 .LLST31
     /tmp/ccnr7RuG.s:1224   .text:0000000000000510 .LVL93
     /tmp/ccnr7RuG.s:1228   .text:0000000000000518 .LVL94
     /tmp/ccnr7RuG.s:612    .text:00000000000002b0 .LBB98
     /tmp/ccnr7RuG.s:624    .text:00000000000002b8 .LBE98
     /tmp/ccnr7RuG.s:5141   .debug_loc:000000000000057a .LLST19
     /tmp/ccnr7RuG.s:658    .text:000000000000030c .LBB101
     /tmp/ccnr7RuG.s:665    .text:0000000000000310 .LBE101
     /tmp/ccnr7RuG.s:5149   .debug_loc:000000000000059e .LLST20
     /tmp/ccnr7RuG.s:797    .text:000000000000038c .LBB112
     /tmp/ccnr7RuG.s:814    .text:0000000000000398 .LBE112
     /tmp/ccnr7RuG.s:902    .text:00000000000003cc .LBB165
     /tmp/ccnr7RuG.s:916    .text:00000000000003d4 .LBE165
     /tmp/ccnr7RuG.s:5156   .debug_loc:00000000000005c1 .LLST46
     /tmp/ccnr7RuG.s:630    .text:00000000000002c8 .LVL44
     /tmp/ccnr7RuG.s:640    .text:00000000000002e4 .LVL45
     /tmp/ccnr7RuG.s:651    .text:0000000000000300 .LVL46
     /tmp/ccnr7RuG.s:583    .text:000000000000028c .LBB94
     /tmp/ccnr7RuG.s:599    .text:0000000000000298 .LBE94
     /tmp/ccnr7RuG.s:756    .text:0000000000000360 .LVL55
     /tmp/ccnr7RuG.s:1267   .text:0000000000000540 .LVL99
     /tmp/ccnr7RuG.s:393    .text:0000000000000198 .LFB27
     /tmp/ccnr7RuG.s:537    .text:0000000000000260 .LFE27
     /tmp/ccnr7RuG.s:5163   .debug_loc:00000000000005e4 .LLST9
     /tmp/ccnr7RuG.s:5177   .debug_loc:000000000000061d .LLST10
     /tmp/ccnr7RuG.s:5715   .debug_str:0000000000000ac9 .LASF200
     /tmp/ccnr7RuG.s:5184   .debug_loc:0000000000000640 .LLST11
     /tmp/ccnr7RuG.s:5206   .debug_loc:000000000000069f .LLST12
     /tmp/ccnr7RuG.s:410    .text:00000000000001b0 .LBB88
     /tmp/ccnr7RuG.s:426    .text:00000000000001bc .LBE88
     /tmp/ccnr7RuG.s:428    .text:00000000000001bc .LBB90
     /tmp/ccnr7RuG.s:440    .text:00000000000001c4 .LBE90
     /tmp/ccnr7RuG.s:5228   .debug_loc:00000000000006e0 .LLST13
     /tmp/ccnr7RuG.s:511    .text:0000000000000244 .LBB92
     /tmp/ccnr7RuG.s:522    .text:0000000000000248 .LBE92
     /tmp/ccnr7RuG.s:5236   .debug_loc:0000000000000704 .LLST14
     /tmp/ccnr7RuG.s:495    .text:0000000000000228 .LVL35
     /tmp/ccnr7RuG.s:502    .text:0000000000000238 .LVL36
     /tmp/ccnr7RuG.s:285    .text:0000000000000128 .LFB26
     /tmp/ccnr7RuG.s:387    .text:0000000000000198 .LFE26
     /tmp/ccnr7RuG.s:5681   .debug_str:00000000000009f8 .LASF201
     /tmp/ccnr7RuG.s:5243   .debug_loc:0000000000000727 .LLST5
     /tmp/ccnr7RuG.s:5254   .debug_loc:000000000000075d .LLST6
     /tmp/ccnr7RuG.s:303    .text:0000000000000144 .LBB82
     /tmp/ccnr7RuG.s:319    .text:0000000000000150 .LBE82
     /tmp/ccnr7RuG.s:321    .text:0000000000000150 .LBB84
     /tmp/ccnr7RuG.s:334    .text:0000000000000158 .LBE84
     /tmp/ccnr7RuG.s:5261   .debug_loc:0000000000000780 .LLST7
     /tmp/ccnr7RuG.s:360    .text:000000000000017c .LBB86
     /tmp/ccnr7RuG.s:371    .text:0000000000000180 .LBE86
     /tmp/ccnr7RuG.s:5269   .debug_loc:00000000000007a4 .LLST8
     /tmp/ccnr7RuG.s:344    .text:0000000000000168 .LVL19
     /tmp/ccnr7RuG.s:250    .text:0000000000000108 .LFB25
     /tmp/ccnr7RuG.s:279    .text:0000000000000128 .LFE25
GAS LISTING /tmp/ccnr7RuG.s 			page 49


     /tmp/ccnr7RuG.s:181    .text:00000000000000c0 .LFB24
     /tmp/ccnr7RuG.s:213    .text:00000000000000e0 .LFE24
     /tmp/ccnr7RuG.s:192    .text:00000000000000cc .LBB80
     /tmp/ccnr7RuG.s:204    .text:00000000000000d4 .LBE80
     /tmp/ccnr7RuG.s:5276   .debug_loc:00000000000007c7 .LLST4
     /tmp/ccnr7RuG.s:143    .text:00000000000000a0 .LFB23
     /tmp/ccnr7RuG.s:175    .text:00000000000000c0 .LFE23
     /tmp/ccnr7RuG.s:154    .text:00000000000000ac .LBB78
     /tmp/ccnr7RuG.s:166    .text:00000000000000b4 .LBE78
     /tmp/ccnr7RuG.s:5284   .debug_loc:00000000000007eb .LLST3
     /tmp/ccnr7RuG.s:219    .text:00000000000000e0 .LFB22
     /tmp/ccnr7RuG.s:244    .text:0000000000000108 .LFE22
     /tmp/ccnr7RuG.s:233    .text:00000000000000f8 .LVL15
     /tmp/ccnr7RuG.s:113    .text:00000000000000a0 .LFE21
     /tmp/ccnr7RuG.s:5292   .debug_loc:000000000000080f .LLST0
     /tmp/ccnr7RuG.s:32     .text:0000000000000020 .LBB74
     /tmp/ccnr7RuG.s:44     .text:0000000000000024 .LBE74
     /tmp/ccnr7RuG.s:75     .text:0000000000000064 .LBB76
     /tmp/ccnr7RuG.s:84     .text:000000000000006c .LBE76
     /tmp/ccnr7RuG.s:5299   .debug_loc:0000000000000832 .LLST1
     /tmp/ccnr7RuG.s:5307   .debug_loc:0000000000000856 .LLST2
     /tmp/ccnr7RuG.s:50     .text:0000000000000030 .LVL2
     /tmp/ccnr7RuG.s:57     .text:0000000000000044 .LVL3
     /tmp/ccnr7RuG.s:64     .text:0000000000000050 .LVL4
     /tmp/ccnr7RuG.s:68     .text:0000000000000058 .LVL5
     /tmp/ccnr7RuG.s:106    .text:0000000000000094 .LVL9
     /tmp/ccnr7RuG.s:110    .text:00000000000000a0 .LVL10
     /tmp/ccnr7RuG.s:5447   .debug_str:0000000000000304 .LASF202
     /tmp/ccnr7RuG.s:5737   .debug_str:0000000000000b59 .LASF203
     /tmp/ccnr7RuG.s:5489   .debug_str:0000000000000429 .LASF204
     /tmp/ccnr7RuG.s:5645   .debug_str:00000000000008fe .LASF205
     /tmp/ccnr7RuG.s:5483   .debug_str:000000000000040f .LASF207
     /tmp/ccnr7RuG.s:5789   .debug_str:0000000000000cac .LASF206
     /tmp/ccnr7RuG.s:5487   .debug_str:0000000000000423 .LASF208
     /tmp/ccnr7RuG.s:5495   .debug_str:0000000000000449 .LASF209
     /tmp/ccnr7RuG.s:5777   .debug_str:0000000000000c52 .LASF221
     /tmp/ccnr7RuG.s:5387   .debug_str:0000000000000120 .LASF222
     /tmp/ccnr7RuG.s:5445   .debug_str:00000000000002fd .LASF210
     /tmp/ccnr7RuG.s:5475   .debug_str:00000000000003e0 .LASF211
     /tmp/ccnr7RuG.s:5599   .debug_str:00000000000007df .LASF212
     /tmp/ccnr7RuG.s:580    .text:000000000000028c .LVL40
     /tmp/ccnr7RuG.s:704    .text:0000000000000330 .LVL50
     /tmp/ccnr7RuG.s:740    .text:0000000000000350 .LVL53
     /tmp/ccnr7RuG.s:750    .text:0000000000000358 .LVL54
     /tmp/ccnr7RuG.s:780    .text:0000000000000388 .LVL56
     /tmp/ccnr7RuG.s:893    .text:00000000000003cc .LVL61
     /tmp/ccnr7RuG.s:913    .text:00000000000003d4 .LVL62
     /tmp/ccnr7RuG.s:1055   .text:0000000000000458 .LVL77
     /tmp/ccnr7RuG.s:1079   .text:0000000000000474 .LVL79
     /tmp/ccnr7RuG.s:1108   .text:0000000000000490 .LVL81
     /tmp/ccnr7RuG.s:1148   .text:00000000000004cc .LVL85
     /tmp/ccnr7RuG.s:1191   .text:00000000000004e4 .LVL89
     /tmp/ccnr7RuG.s:1252   .text:0000000000000524 .LVL96
     /tmp/ccnr7RuG.s:597    .text:0000000000000298 .LVL41
     /tmp/ccnr7RuG.s:806    .text:0000000000000390 .LVL58
     /tmp/ccnr7RuG.s:794    .text:000000000000038c .LVL57
     /tmp/ccnr7RuG.s:944    .text:00000000000003ec .LVL66
GAS LISTING /tmp/ccnr7RuG.s 			page 50


     /tmp/ccnr7RuG.s:970    .text:0000000000000400 .LVL69
     /tmp/ccnr7RuG.s:1034   .text:000000000000044c .LVL75
     /tmp/ccnr7RuG.s:1049   .text:0000000000000450 .LVL76
     /tmp/ccnr7RuG.s:1089   .text:000000000000047c .LVL80
     /tmp/ccnr7RuG.s:1161   .text:00000000000004d4 .LVL86
     /tmp/ccnr7RuG.s:1185   .text:00000000000004dc .LVL88
     /tmp/ccnr7RuG.s:812    .text:0000000000000398 .LVL59
     /tmp/ccnr7RuG.s:818    .text:000000000000039c .LVL60
     /tmp/ccnr7RuG.s:1255   .text:0000000000000528 .LVL97
     /tmp/ccnr7RuG.s:686    .text:0000000000000324 .LVL49
     /tmp/ccnr7RuG.s:724    .text:0000000000000348 .LVL52
     /tmp/ccnr7RuG.s:926    .text:00000000000003d8 .LVL63
     /tmp/ccnr7RuG.s:932    .text:00000000000003dc .LVL64
     /tmp/ccnr7RuG.s:955    .text:00000000000003f0 .LVL67
     /tmp/ccnr7RuG.s:989    .text:0000000000000408 .LVL71
     /tmp/ccnr7RuG.s:995    .text:000000000000040c .LVL72
     /tmp/ccnr7RuG.s:983    .text:0000000000000404 .LVL70
     /tmp/ccnr7RuG.s:1122   .text:00000000000004b4 .LVL82
     /tmp/ccnr7RuG.s:1129   .text:00000000000004bc .LVL83
     /tmp/ccnr7RuG.s:1173   .text:00000000000004d8 .LVL87
     /tmp/ccnr7RuG.s:1202   .text:00000000000004fc .LVL90
     /tmp/ccnr7RuG.s:1209   .text:0000000000000504 .LVL91
     /tmp/ccnr7RuG.s:1218   .text:0000000000000508 .LVL92
     /tmp/ccnr7RuG.s:1239   .text:000000000000051c .LVL95
     /tmp/ccnr7RuG.s:611    .text:00000000000002b0 .LVL42
     /tmp/ccnr7RuG.s:621    .text:00000000000002b8 .LVL43
     /tmp/ccnr7RuG.s:657    .text:000000000000030c .LVL47
     /tmp/ccnr7RuG.s:663    .text:0000000000000310 .LVL48
     /tmp/ccnr7RuG.s:396    .text:0000000000000198 .LVL25
     /tmp/ccnr7RuG.s:450    .text:00000000000001c8 .LVL28
     /tmp/ccnr7RuG.s:424    .text:00000000000001bc .LVL26
     /tmp/ccnr7RuG.s:506    .text:000000000000023c .LVL37
     /tmp/ccnr7RuG.s:454    .text:00000000000001cc .LVL29
     /tmp/ccnr7RuG.s:461    .text:00000000000001d4 .LVL30
     /tmp/ccnr7RuG.s:472    .text:00000000000001f8 .LVL31
     /tmp/ccnr7RuG.s:482    .text:000000000000020c .LVL33
     /tmp/ccnr7RuG.s:487    .text:0000000000000210 .LVL34
     /tmp/ccnr7RuG.s:478    .text:0000000000000204 .LVL32
     /tmp/ccnr7RuG.s:437    .text:00000000000001c4 .LVL27
     /tmp/ccnr7RuG.s:510    .text:0000000000000244 .LVL38
     /tmp/ccnr7RuG.s:519    .text:0000000000000248 .LVL39
     /tmp/ccnr7RuG.s:288    .text:0000000000000128 .LVL16
     /tmp/ccnr7RuG.s:330    .text:0000000000000158 .LVL18
     /tmp/ccnr7RuG.s:380    .text:000000000000018c .LVL24
     /tmp/ccnr7RuG.s:317    .text:0000000000000150 .LVL17
     /tmp/ccnr7RuG.s:355    .text:0000000000000174 .LVL21
     /tmp/ccnr7RuG.s:359    .text:000000000000017c .LVL22
     /tmp/ccnr7RuG.s:368    .text:0000000000000180 .LVL23
     /tmp/ccnr7RuG.s:191    .text:00000000000000cc .LVL13
     /tmp/ccnr7RuG.s:201    .text:00000000000000d4 .LVL14
     /tmp/ccnr7RuG.s:153    .text:00000000000000ac .LVL11
     /tmp/ccnr7RuG.s:163    .text:00000000000000b4 .LVL12
     /tmp/ccnr7RuG.s:94     .text:0000000000000078 .LVL8
     /tmp/ccnr7RuG.s:74     .text:0000000000000064 .LVL6
     /tmp/ccnr7RuG.s:82     .text:000000000000006c .LVL7
     /tmp/ccnr7RuG.s:1325   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccnr7RuG.s:608    .text:00000000000002b0 .LBB97
GAS LISTING /tmp/ccnr7RuG.s 			page 51


     /tmp/ccnr7RuG.s:746    .text:0000000000000350 .LBE97
     /tmp/ccnr7RuG.s:784    .text:0000000000000388 .LBB168
     /tmp/ccnr7RuG.s:824    .text:00000000000003a4 .LBE168
     /tmp/ccnr7RuG.s:828    .text:00000000000003a4 .LBB169
     /tmp/ccnr7RuG.s:835    .text:00000000000003ac .LBE169
     /tmp/ccnr7RuG.s:839    .text:00000000000003ac .LBB170
     /tmp/ccnr7RuG.s:848    .text:00000000000003b4 .LBE170
     /tmp/ccnr7RuG.s:852    .text:00000000000003b4 .LBB171
     /tmp/ccnr7RuG.s:863    .text:00000000000003bc .LBE171
     /tmp/ccnr7RuG.s:867    .text:00000000000003bc .LBB172
     /tmp/ccnr7RuG.s:880    .text:00000000000003c4 .LBE172
     /tmp/ccnr7RuG.s:884    .text:00000000000003c4 .LBB173
     /tmp/ccnr7RuG.s:1273   .text:0000000000000540 .LBE173
     /tmp/ccnr7RuG.s:973    .text:0000000000000400 .LBB146
     /tmp/ccnr7RuG.s:1036   .text:000000000000044c .LBE146
     /tmp/ccnr7RuG.s:1259   .text:0000000000000528 .LBB148
     /tmp/ccnr7RuG.s:1269   .text:0000000000000540 .LBE148
     /tmp/ccnr7RuG.s:116    .gcc_except_table:0000000000000000 .LLSDA21
     /tmp/ccnr7RuG.s:1278   .gcc_except_table:0000000000000038 .LLSDA28

UNDEFINED SYMBOLS
_ZN5Riscv14supervisorTrapEv
_Znwm
_ZN6ThreadC1EPFvPvES0_
_ZN6Thread5startEv
_ZN9Scheduler3getEv
_ZN3PCB7runningE
_ZdlPv
_Unwind_Resume
__gxx_personality_v0
__putc
_ZN3PCB16timeSliceCounterE
_ZN12SleepPCBList13tryToWakePCBsEv
_ZN3PCB8dispatchEv
console_handler
_Z7kmallocm
_Z5kfreePv
_ZN3PCBnwEm
_ZN3PCBC1EPFvPvES0_S0_m
_ZN3PCB10exitingPCBE
_ZN12SleepPCBList17insertSleepingPCBEv
_ZN3PCBdlEPv
