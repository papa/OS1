GAS LISTING /tmp/ccxK7nyA.s 			page 1


   1              		.file	"Riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10initSystemEv
   9              	_ZN5Riscv10initSystemEv:
  10              	.LFB19:
  11              		.file 1 "src/Riscv.cpp"
   1:src/Riscv.cpp **** //
   2:src/Riscv.cpp **** // Created by os on 4/27/22.
   3:src/Riscv.cpp **** //
   4:src/Riscv.cpp **** 
   5:src/Riscv.cpp **** #include "../h/Riscv.h"
   6:src/Riscv.cpp **** #include "../h/MemoryAllocator.h"
   7:src/Riscv.cpp **** #include "../h/PCB.h"
   8:src/Riscv.cpp **** #include "../lib/console.h"
   9:src/Riscv.cpp **** 
  10:src/Riscv.cpp **** //todo
  11:src/Riscv.cpp **** //sta sve treba da se odradi ovde
  12:src/Riscv.cpp **** void Riscv::initSystem() {
  12              		.loc 1 12 26
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  13:src/Riscv.cpp ****     w_stvec((uint64)&Riscv::supervisorTrap);
  20              		.loc 1 13 5
  21              		.loc 1 13 12 is_stmt 0
  22 000c 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
  22      83B70700 
  23              	.LVL0:
  24              	.LBB50:
  25              	.LBB51:
  26              		.file 2 "src/../h/Riscv.h"
   1:src/../h/Riscv.h **** //
   2:src/../h/Riscv.h **** // Created by os on 4/27/22.
   3:src/../h/Riscv.h **** //
   4:src/../h/Riscv.h **** 
   5:src/../h/Riscv.h **** #ifndef PROJECT_BASE_V1_0_RISCV_H
   6:src/../h/Riscv.h **** #define PROJECT_BASE_V1_0_RISCV_H
   7:src/../h/Riscv.h **** 
   8:src/../h/Riscv.h **** #include "../lib/hw.h"
   9:src/../h/Riscv.h **** 
  10:src/../h/Riscv.h **** class Riscv
  11:src/../h/Riscv.h **** {
  12:src/../h/Riscv.h **** private:
  13:src/../h/Riscv.h **** 
  14:src/../h/Riscv.h **** public:
  15:src/../h/Riscv.h ****     static void initSystem();
  16:src/../h/Riscv.h **** 
  17:src/../h/Riscv.h ****     static void printString(char const *string);
  18:src/../h/Riscv.h **** 
GAS LISTING /tmp/ccxK7nyA.s 			page 2


  19:src/../h/Riscv.h ****     static void printInteger(uint64 num);
  20:src/../h/Riscv.h **** 
  21:src/../h/Riscv.h ****     static void pushRegisters();
  22:src/../h/Riscv.h ****     static void popRegisters();
  23:src/../h/Riscv.h **** 
  24:src/../h/Riscv.h ****     static uint64 r_scause();
  25:src/../h/Riscv.h ****     static void w_scause(uint64 scause);
  26:src/../h/Riscv.h **** 
  27:src/../h/Riscv.h ****     static uint64 r_sepc();
  28:src/../h/Riscv.h ****     static void w_sepc(uint64 sepc);
  29:src/../h/Riscv.h **** 
  30:src/../h/Riscv.h ****     static uint64 r_stvec();
  31:src/../h/Riscv.h ****     static void w_stvec(uint64 stvec);
  32:src/../h/Riscv.h **** 
  33:src/../h/Riscv.h ****     static uint64 r_stval();
  34:src/../h/Riscv.h ****     static void w_stval(uint64 stval);
  35:src/../h/Riscv.h **** 
  36:src/../h/Riscv.h ****     enum BitMaskSip
  37:src/../h/Riscv.h ****     {
  38:src/../h/Riscv.h ****         SIP_SSIP = (1 << 1),
  39:src/../h/Riscv.h ****         SIP_STIP = (1 << 5),
  40:src/../h/Riscv.h ****         SIP_SEIP = (1 << 9),
  41:src/../h/Riscv.h ****     };
  42:src/../h/Riscv.h **** 
  43:src/../h/Riscv.h ****     static void ms_sip(uint64 mask);
  44:src/../h/Riscv.h **** 
  45:src/../h/Riscv.h ****     static void mc_sip(uint64 mask);
  46:src/../h/Riscv.h **** 
  47:src/../h/Riscv.h ****     static uint64 r_sip();
  48:src/../h/Riscv.h **** 
  49:src/../h/Riscv.h ****     static void w_sip(uint64 sip);
  50:src/../h/Riscv.h **** 
  51:src/../h/Riscv.h ****     enum BitMaskSstatus
  52:src/../h/Riscv.h ****     {
  53:src/../h/Riscv.h ****         SSTATUS_SIE = (1 << 1),
  54:src/../h/Riscv.h ****         SSTATUS_SPIE = (1 << 5),
  55:src/../h/Riscv.h ****         SSTATUS_SPP = (1 << 8),
  56:src/../h/Riscv.h ****     };
  57:src/../h/Riscv.h **** 
  58:src/../h/Riscv.h ****     static void ms_sstatus(uint64 mask);
  59:src/../h/Riscv.h **** 
  60:src/../h/Riscv.h ****     static void mc_sstatus(uint64 mask);
  61:src/../h/Riscv.h **** 
  62:src/../h/Riscv.h ****     static uint64 r_sstatus();
  63:src/../h/Riscv.h **** 
  64:src/../h/Riscv.h ****     static void w_sstatus(uint64 sstatus);
  65:src/../h/Riscv.h **** 
  66:src/../h/Riscv.h ****     static void popSppSpie();
  67:src/../h/Riscv.h **** 
  68:src/../h/Riscv.h ****     static void supervisorTrap();
  69:src/../h/Riscv.h ****     static void handleSupervisorTrap();
  70:src/../h/Riscv.h **** 
  71:src/../h/Riscv.h ****     static const uint64 bntOne = 1UL << 63;;
  72:src/../h/Riscv.h ****     static const uint64 bntZero = 0UL;
  73:src/../h/Riscv.h ****     static const uint64 timerInterrupt = bntOne + 8UL;
  74:src/../h/Riscv.h ****     static const uint64 hwInterrupt = bntOne + 9UL;;
  75:src/../h/Riscv.h ****     static const uint64 operationInterrupt = bntZero + 2UL;
GAS LISTING /tmp/ccxK7nyA.s 			page 3


  76:src/../h/Riscv.h ****     static const uint64 addrReadInterrupt = bntZero + 5UL;
  77:src/../h/Riscv.h ****     static const uint64 addrWriteInterrupt = bntZero + 7UL;
  78:src/../h/Riscv.h ****     static const uint64 ecallUserInterrupt = bntZero + 8UL;
  79:src/../h/Riscv.h ****     static const uint64 ecallSystemInterupt = bntZero + 9UL;
  80:src/../h/Riscv.h **** };
  81:src/../h/Riscv.h **** 
  82:src/../h/Riscv.h **** inline uint64 Riscv::r_scause() {
  83:src/../h/Riscv.h ****     uint64 volatile scause;
  84:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
  85:src/../h/Riscv.h ****     return scause;
  86:src/../h/Riscv.h **** }
  87:src/../h/Riscv.h **** 
  88:src/../h/Riscv.h **** inline void Riscv::w_scause(uint64 scause) {
  89:src/../h/Riscv.h ****     __asm__ volatile("csrw scause, %0" : :"r"(scause));
  90:src/../h/Riscv.h **** }
  91:src/../h/Riscv.h **** 
  92:src/../h/Riscv.h **** inline uint64 Riscv::r_sepc() {
  93:src/../h/Riscv.h ****     uint64 volatile sepc;
  94:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
  95:src/../h/Riscv.h ****     return sepc;
  96:src/../h/Riscv.h **** }
  97:src/../h/Riscv.h **** 
  98:src/../h/Riscv.h **** inline void Riscv::w_sepc(uint64 sepc) {
  99:src/../h/Riscv.h ****     __asm__ volatile("csrw sepc, %0" : :"r"(sepc));
 100:src/../h/Riscv.h **** }
 101:src/../h/Riscv.h **** 
 102:src/../h/Riscv.h **** inline uint64 Riscv::r_stvec() {
 103:src/../h/Riscv.h ****     uint64 volatile stvec;
 104:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, stvec" : "=r"(stvec));
 105:src/../h/Riscv.h ****     return stvec;
 106:src/../h/Riscv.h **** }
 107:src/../h/Riscv.h **** 
 108:src/../h/Riscv.h **** inline void Riscv::w_stvec(uint64 stvec) {
 109:src/../h/Riscv.h ****     __asm__ volatile("csrw stvec, %0" : :"r"(stvec));
  27              		.loc 2 109 5 is_stmt 1
  28              		.loc 2 109 53 is_stmt 0
  29              	#APP
  30              	# 109 "src/../h/Riscv.h" 1
 110              	}
  31              		csrw stvec, a5
  32              	# 0 "" 2
  33              	.LVL1:
  34              	#NO_APP
  35              	.LBE51:
  36              	.LBE50:
  14:src/Riscv.cpp ****     //todo
  15:src/Riscv.cpp ****     //no need for comment, but sync context switch
  16:src/Riscv.cpp ****     //should be tested, before hardware interrupts are enabled
  17:src/Riscv.cpp ****     //Riscv::ms_sstatus(Riscv::SSTATUS_SIE);
  18:src/Riscv.cpp **** }
  37              		.loc 1 18 1
  38 0018 03348100 		ld	s0,8(sp)
  39              		.cfi_restore 8
  40              		.cfi_def_cfa 2, 16
  41 001c 13010101 		addi	sp,sp,16
  42              		.cfi_def_cfa_offset 0
  43 0020 67800000 		jr	ra
GAS LISTING /tmp/ccxK7nyA.s 			page 4


  44              		.cfi_endproc
  45              	.LFE19:
  47              		.align	2
  48              		.globl	_ZN5Riscv10popSppSpieEv
  50              	_ZN5Riscv10popSppSpieEv:
  51              	.LFB20:
  19:src/Riscv.cpp **** 
  20:src/Riscv.cpp **** void Riscv::popSppSpie() {
  52              		.loc 1 20 26 is_stmt 1
  53              		.cfi_startproc
  54 0024 130101FF 		addi	sp,sp,-16
  55              		.cfi_def_cfa_offset 16
  56 0028 23348100 		sd	s0,8(sp)
  57              		.cfi_offset 8, -8
  58 002c 13040101 		addi	s0,sp,16
  59              		.cfi_def_cfa 8, 0
  21:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
  60              		.loc 1 21 5
  61              		.loc 1 21 39 is_stmt 0
  62              	#APP
  63              	# 21 "src/Riscv.cpp" 1
  22              	    __asm__ volatile ("sret");
  64              		csrw sepc, ra
  65              	# 0 "" 2
  66              		.loc 1 22 5 is_stmt 1
  67              		.loc 1 22 30 is_stmt 0
  68              	# 22 "src/Riscv.cpp" 1
  23              	}
  69              		sret
  70              	# 0 "" 2
  71              		.loc 1 23 1
  72              	#NO_APP
  73 0038 03348100 		ld	s0,8(sp)
  74              		.cfi_restore 8
  75              		.cfi_def_cfa 2, 16
  76 003c 13010101 		addi	sp,sp,16
  77              		.cfi_def_cfa_offset 0
  78 0040 67800000 		jr	ra
  79              		.cfi_endproc
  80              	.LFE20:
  82              		.align	2
  83              		.globl	_ZN5Riscv11printStringEPKc
  85              	_ZN5Riscv11printStringEPKc:
  86              	.LFB21:
  24:src/Riscv.cpp **** 
  25:src/Riscv.cpp **** void Riscv::printString(const char *string)
  26:src/Riscv.cpp **** {
  87              		.loc 1 26 1 is_stmt 1
  88              		.cfi_startproc
  89              	.LVL2:
  90 0044 130101FD 		addi	sp,sp,-48
  91              		.cfi_def_cfa_offset 48
  92 0048 23341102 		sd	ra,40(sp)
  93 004c 23308102 		sd	s0,32(sp)
  94 0050 233C9100 		sd	s1,24(sp)
  95 0054 23382101 		sd	s2,16(sp)
  96              		.cfi_offset 1, -8
GAS LISTING /tmp/ccxK7nyA.s 			page 5


  97              		.cfi_offset 8, -16
  98              		.cfi_offset 9, -24
  99              		.cfi_offset 18, -32
 100 0058 13040103 		addi	s0,sp,48
 101              		.cfi_def_cfa 8, 0
 102 005c 93040500 		mv	s1,a0
  27:src/Riscv.cpp ****     uint64 sstatus = r_sstatus();
 103              		.loc 1 27 5
 104              	.LBB52:
 105              	.LBB53:
 111:src/../h/Riscv.h **** 
 112:src/../h/Riscv.h **** inline uint64 Riscv::r_stval() {
 113:src/../h/Riscv.h ****     uint64 volatile stval;
 114:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, stval" : "=r"(stval));
 115:src/../h/Riscv.h ****     return stval;
 116:src/../h/Riscv.h **** }
 117:src/../h/Riscv.h **** 
 118:src/../h/Riscv.h **** inline void Riscv::w_stval(uint64 stval) {
 119:src/../h/Riscv.h ****     __asm__ volatile("csrw stval, %0" : :"r"(stval));
 120:src/../h/Riscv.h **** }
 121:src/../h/Riscv.h **** 
 122:src/../h/Riscv.h **** inline void Riscv::ms_sip(uint64 mask) {
 123:src/../h/Riscv.h ****     __asm__ volatile("csrs sip, %0" : :"r"(mask));
 124:src/../h/Riscv.h **** }
 125:src/../h/Riscv.h **** 
 126:src/../h/Riscv.h **** inline void Riscv::mc_sip(uint64 mask) {
 127:src/../h/Riscv.h ****     __asm__ volatile("csrc sip, %0" : :"r"(mask));
 128:src/../h/Riscv.h **** }
 129:src/../h/Riscv.h **** 
 130:src/../h/Riscv.h **** inline uint64 Riscv::r_sip() {
 131:src/../h/Riscv.h ****     uint64 volatile sip;
 132:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, sip" : "=r"(sip));
 133:src/../h/Riscv.h ****     return sip;
 134:src/../h/Riscv.h **** }
 135:src/../h/Riscv.h **** 
 136:src/../h/Riscv.h **** inline void Riscv::w_sip(uint64 sip) {
 137:src/../h/Riscv.h ****     __asm__ volatile("csrw sip, %0" : :"r"(sip));
 138:src/../h/Riscv.h **** }
 139:src/../h/Riscv.h **** 
 140:src/../h/Riscv.h **** inline void Riscv::ms_sstatus(uint64 mask) {
 141:src/../h/Riscv.h ****     __asm__ volatile("csrs sstatus, %0" : :"r"(mask));
 142:src/../h/Riscv.h **** }
 143:src/../h/Riscv.h **** 
 144:src/../h/Riscv.h **** inline void Riscv::mc_sstatus(uint64 mask) {
 145:src/../h/Riscv.h ****     __asm__ volatile("csrc sstatus, %0" : :"r"(mask));
 146:src/../h/Riscv.h **** }
 147:src/../h/Riscv.h **** 
 148:src/../h/Riscv.h **** inline uint64 Riscv::r_sstatus() {
 149:src/../h/Riscv.h ****     uint64 volatile sstatus;
 106              		.loc 2 149 5
 150:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 107              		.loc 2 150 5
 108              		.loc 2 150 57 is_stmt 0
 109              	#APP
 110              	# 150 "src/../h/Riscv.h" 1
 151              	    return sstatus;
 111              		csrr a5, sstatus
GAS LISTING /tmp/ccxK7nyA.s 			page 6


 112              	# 0 "" 2
 113              	#NO_APP
 114 0064 233CF4FC 		sd	a5,-40(s0)
 115              		.loc 2 151 5 is_stmt 1
 116              		.loc 2 151 12 is_stmt 0
 117 0068 033984FD 		ld	s2,-40(s0)
 118              	.LVL3:
 119              	.LBE53:
 120              	.LBE52:
  28:src/Riscv.cpp ****     mc_sstatus(SSTATUS_SIE);
 121              		.loc 1 28 5 is_stmt 1
 122              	.LBB54:
 123              	.LBB55:
 145:src/../h/Riscv.h **** }
 124              		.loc 2 145 5
 145:src/../h/Riscv.h **** }
 125              		.loc 2 145 54 is_stmt 0
 126 006c 93072000 		li	a5,2
 127              	#APP
 128              	# 145 "src/../h/Riscv.h" 1
 129              		csrc sstatus, a5
 130              	# 0 "" 2
 131              	.LVL4:
 132              	#NO_APP
 133              	.L7:
 134              	.LBE55:
 135              	.LBE54:
  29:src/Riscv.cpp ****     while (*string != '\0')
 136              		.loc 1 29 5 is_stmt 1
 137              		.loc 1 29 20
 138              		.loc 1 29 12 is_stmt 0
 139 0074 03C50400 		lbu	a0,0(s1)
 140              		.loc 1 29 20
 141 0078 630A0500 		beqz	a0,.L6
  30:src/Riscv.cpp ****     {
  31:src/Riscv.cpp ****         __putc(*string);
 142              		.loc 1 31 9 is_stmt 1
 143              		.loc 1 31 15 is_stmt 0
 144 007c 97000000 		call	__putc@plt
 144      E7800000 
 145              	.LVL5:
  32:src/Riscv.cpp ****         string++;
 146              		.loc 1 32 9 is_stmt 1
 147              		.loc 1 32 15 is_stmt 0
 148 0084 93841400 		addi	s1,s1,1
 149              	.LVL6:
  29:src/Riscv.cpp ****     while (*string != '\0')
 150              		.loc 1 29 5
 151 0088 6FF0DFFE 		j	.L7
 152              	.L6:
  33:src/Riscv.cpp ****     }
  34:src/Riscv.cpp ****     ms_sstatus(sstatus & SSTATUS_SIE ? SSTATUS_SIE : 0);
 153              		.loc 1 34 5 is_stmt 1
 154              		.loc 1 34 38 is_stmt 0
 155 008c 1B090900 		sext.w	s2,s2
 156              	.LVL7:
 157              		.loc 1 34 15
GAS LISTING /tmp/ccxK7nyA.s 			page 7


 158 0090 13792900 		andi	s2,s2,2
 159 0094 1B090900 		sext.w	s2,s2
 160              	.LVL8:
 161              	.LBB56:
 162              	.LBB57:
 141:src/../h/Riscv.h **** }
 163              		.loc 2 141 5 is_stmt 1
 141:src/../h/Riscv.h **** }
 164              		.loc 2 141 54 is_stmt 0
 165              	#APP
 166              	# 141 "src/../h/Riscv.h" 1
 167              		csrs sstatus, s2
 168              	# 0 "" 2
 169              	.LVL9:
 170              	#NO_APP
 171              	.LBE57:
 172              	.LBE56:
  35:src/Riscv.cpp **** }
 173              		.loc 1 35 1
 174 009c 83308102 		ld	ra,40(sp)
 175              		.cfi_restore 1
 176 00a0 03340102 		ld	s0,32(sp)
 177              		.cfi_restore 8
 178              		.cfi_def_cfa 2, 48
 179 00a4 83348101 		ld	s1,24(sp)
 180              		.cfi_restore 9
 181              	.LVL10:
 182 00a8 03390101 		ld	s2,16(sp)
 183              		.cfi_restore 18
 184 00ac 13010103 		addi	sp,sp,48
 185              		.cfi_def_cfa_offset 0
 186 00b0 67800000 		jr	ra
 187              		.cfi_endproc
 188              	.LFE21:
 190              		.section	.rodata.str1.8,"aMS",@progbits,1
 191              		.align	3
 192              	.LC0:
 193 0000 0A00     		.string	"\n"
 194              		.text
 195              		.align	2
 196              		.globl	_ZN5Riscv12printIntegerEm
 198              	_ZN5Riscv12printIntegerEm:
 199              	.LFB22:
  36:src/Riscv.cpp **** 
  37:src/Riscv.cpp **** void Riscv::printInteger(uint64 num)
  38:src/Riscv.cpp **** {
 200              		.loc 1 38 1 is_stmt 1
 201              		.cfi_startproc
 202              	.LVL11:
 203 00b4 130101FC 		addi	sp,sp,-64
 204              		.cfi_def_cfa_offset 64
 205 00b8 233C1102 		sd	ra,56(sp)
 206 00bc 23388102 		sd	s0,48(sp)
 207 00c0 23349102 		sd	s1,40(sp)
 208 00c4 23302103 		sd	s2,32(sp)
 209              		.cfi_offset 1, -8
 210              		.cfi_offset 8, -16
GAS LISTING /tmp/ccxK7nyA.s 			page 8


 211              		.cfi_offset 9, -24
 212              		.cfi_offset 18, -32
 213 00c8 13040104 		addi	s0,sp,64
 214              		.cfi_def_cfa 8, 0
  39:src/Riscv.cpp ****     uint64 sstatus = r_sstatus();
 215              		.loc 1 39 5
 216              	.LBB58:
 217              	.LBB59:
 149:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 218              		.loc 2 149 5
 150:src/../h/Riscv.h ****     return sstatus;
 219              		.loc 2 150 5
 150:src/../h/Riscv.h ****     return sstatus;
 220              		.loc 2 150 57 is_stmt 0
 221              	#APP
 222              	# 150 "src/../h/Riscv.h" 1
 223              		csrr a5, sstatus
 224              	# 0 "" 2
 225              	#NO_APP
 226 00d0 2334F4FC 		sd	a5,-56(s0)
 227              		.loc 2 151 5 is_stmt 1
 228              		.loc 2 151 12 is_stmt 0
 229 00d4 033984FC 		ld	s2,-56(s0)
 230              	.LVL12:
 231              	.LBE59:
 232              	.LBE58:
  40:src/Riscv.cpp ****     mc_sstatus(SSTATUS_SIE);
 233              		.loc 1 40 5 is_stmt 1
 234              	.LBB60:
 235              	.LBB61:
 145:src/../h/Riscv.h **** }
 236              		.loc 2 145 5
 145:src/../h/Riscv.h **** }
 237              		.loc 2 145 54 is_stmt 0
 238 00d8 93072000 		li	a5,2
 239              	#APP
 240              	# 145 "src/../h/Riscv.h" 1
 241              		csrc sstatus, a5
 242              	# 0 "" 2
 243              	.LVL13:
 244              	#NO_APP
 245              	.LBE61:
 246              	.LBE60:
  41:src/Riscv.cpp ****     static char digits[] = "0123456789";
 247              		.loc 1 41 5 is_stmt 1
  42:src/Riscv.cpp ****     char buf[16];
 248              		.loc 1 42 5
  43:src/Riscv.cpp ****     int i, neg;
 249              		.loc 1 43 5
  44:src/Riscv.cpp ****     uint x;
 250              		.loc 1 44 5
  45:src/Riscv.cpp **** 
  46:src/Riscv.cpp ****     neg = 0;
 251              		.loc 1 46 5
  47:src/Riscv.cpp ****     if(num < 0)
 252              		.loc 1 47 5
  48:src/Riscv.cpp ****     {
GAS LISTING /tmp/ccxK7nyA.s 			page 9


  49:src/Riscv.cpp ****         neg = 1;
  50:src/Riscv.cpp ****         x = -num;
  51:src/Riscv.cpp ****     }
  52:src/Riscv.cpp ****     else
  53:src/Riscv.cpp ****         x = num;
 253              		.loc 1 53 9
 254              		.loc 1 53 11 is_stmt 0
 255 00e0 1B050500 		sext.w	a0,a0
 256              	.LVL14:
  54:src/Riscv.cpp **** 
  55:src/Riscv.cpp ****     i = 0;
 257              		.loc 1 55 5 is_stmt 1
 258              		.loc 1 55 7 is_stmt 0
 259 00e4 93040000 		li	s1,0
 260              	.LVL15:
 261              	.L10:
  56:src/Riscv.cpp ****     do
 262              		.loc 1 56 5 is_stmt 1
  57:src/Riscv.cpp ****     {
  58:src/Riscv.cpp ****         buf[i++] = digits[x%10];
 263              		.loc 1 58 9
 264              		.loc 1 58 28 is_stmt 0
 265 00e8 1306A000 		li	a2,10
 266 00ec 3B77C502 		remuw	a4,a0,a2
 267              	.LVL16:
 268              		.loc 1 58 31
 269 00f0 93160702 		slli	a3,a4,32
 270 00f4 93D60602 		srli	a3,a3,32
 271 00f8 17070000 		lla	a4,.LANCHOR0
 271      13070700 
 272 0100 3307D700 		add	a4,a4,a3
 273 0104 03470700 		lbu	a4,0(a4)
 274              		.loc 1 58 18
 275 0108 930604FE 		addi	a3,s0,-32
 276 010c B3879600 		add	a5,a3,s1
 277 0110 9B841400 		addiw	s1,s1,1
 278              	.LVL17:
 279 0114 2388E7FE 		sb	a4,-16(a5)
  59:src/Riscv.cpp ****     }while((x/=10) != 0);
 280              		.loc 1 59 20 is_stmt 1
 281 0118 1B070500 		sext.w	a4,a0
 282              		.loc 1 59 14 is_stmt 0
 283 011c 3B55C502 		divuw	a0,a0,a2
 284              	.LVL18:
 285              		.loc 1 59 20
 286 0120 93079000 		li	a5,9
 287 0124 E3E2E7FC 		bgtu	a4,a5,.L10
 288              	.LVL19:
 289              	.L12:
  60:src/Riscv.cpp ****     if(neg)
  61:src/Riscv.cpp ****         buf[i++] = '-';
  62:src/Riscv.cpp **** 
  63:src/Riscv.cpp ****     while(--i >= 0)
 290              		.loc 1 63 5 is_stmt 1
 291              		.loc 1 63 15
 292 0128 9B84F4FF 		addiw	s1,s1,-1
 293              	.LVL20:
GAS LISTING /tmp/ccxK7nyA.s 			page 10


 294 012c 63CE0400 		bltz	s1,.L11
  64:src/Riscv.cpp ****         __putc(buf[i]);
 295              		.loc 1 64 9
 296              		.loc 1 64 15 is_stmt 0
 297 0130 930704FE 		addi	a5,s0,-32
 298 0134 B3879700 		add	a5,a5,s1
 299 0138 03C507FF 		lbu	a0,-16(a5)
 300 013c 97000000 		call	__putc@plt
 300      E7800000 
 301              	.LVL21:
 302 0144 6FF05FFE 		j	.L12
 303              	.L11:
  65:src/Riscv.cpp **** 
  66:src/Riscv.cpp ****     Riscv::printString("\n");
 304              		.loc 1 66 5 is_stmt 1
 305              		.loc 1 66 23 is_stmt 0
 306 0148 17050000 		lla	a0,.LC0
 306      13050500 
 307 0150 97000000 		call	_ZN5Riscv11printStringEPKc
 307      E7800000 
 308              	.LVL22:
  67:src/Riscv.cpp **** 
  68:src/Riscv.cpp ****     ms_sstatus(sstatus & SSTATUS_SIE ? SSTATUS_SIE : 0);
 309              		.loc 1 68 5 is_stmt 1
 310              		.loc 1 68 38 is_stmt 0
 311 0158 1B090900 		sext.w	s2,s2
 312              	.LVL23:
 313              		.loc 1 68 15
 314 015c 13792900 		andi	s2,s2,2
 315 0160 1B090900 		sext.w	s2,s2
 316              	.LVL24:
 317              	.LBB62:
 318              	.LBB63:
 141:src/../h/Riscv.h **** }
 319              		.loc 2 141 5 is_stmt 1
 141:src/../h/Riscv.h **** }
 320              		.loc 2 141 54 is_stmt 0
 321              	#APP
 322              	# 141 "src/../h/Riscv.h" 1
 323              		csrs sstatus, s2
 324              	# 0 "" 2
 325              	.LVL25:
 326              	#NO_APP
 327              	.LBE63:
 328              	.LBE62:
  69:src/Riscv.cpp **** }
 329              		.loc 1 69 1
 330 0168 83308103 		ld	ra,56(sp)
 331              		.cfi_restore 1
 332 016c 03340103 		ld	s0,48(sp)
 333              		.cfi_restore 8
 334              		.cfi_def_cfa 2, 64
 335 0170 83348102 		ld	s1,40(sp)
 336              		.cfi_restore 9
 337 0174 03390102 		ld	s2,32(sp)
 338              		.cfi_restore 18
 339 0178 13010104 		addi	sp,sp,64
GAS LISTING /tmp/ccxK7nyA.s 			page 11


 340              		.cfi_def_cfa_offset 0
 341 017c 67800000 		jr	ra
 342              		.cfi_endproc
 343              	.LFE22:
 345              		.align	2
 346              		.globl	_ZN5Riscv20handleSupervisorTrapEv
 348              	_ZN5Riscv20handleSupervisorTrapEv:
 349              	.LFB23:
  70:src/Riscv.cpp **** 
  71:src/Riscv.cpp **** void Riscv::handleSupervisorTrap() {
 350              		.loc 1 71 36 is_stmt 1
 351              		.cfi_startproc
 352              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 353              		.cfi_lsda 0x1b,.LLSDA23
 354 0180 130101F9 		addi	sp,sp,-112
 355              		.cfi_def_cfa_offset 112
 356 0184 23341106 		sd	ra,104(sp)
 357 0188 23308106 		sd	s0,96(sp)
 358 018c 233C9104 		sd	s1,88(sp)
 359 0190 23382105 		sd	s2,80(sp)
 360 0194 23343105 		sd	s3,72(sp)
 361 0198 23304105 		sd	s4,64(sp)
 362 019c 233C5103 		sd	s5,56(sp)
 363 01a0 23386103 		sd	s6,48(sp)
 364              		.cfi_offset 1, -8
 365              		.cfi_offset 8, -16
 366              		.cfi_offset 9, -24
 367              		.cfi_offset 18, -32
 368              		.cfi_offset 19, -40
 369              		.cfi_offset 20, -48
 370              		.cfi_offset 21, -56
 371              		.cfi_offset 22, -64
 372 01a4 13040107 		addi	s0,sp,112
 373              		.cfi_def_cfa 8, 0
  72:src/Riscv.cpp **** 
  73:src/Riscv.cpp ****     uint64 a4;
 374              		.loc 1 73 5
  74:src/Riscv.cpp ****     __asm__ volatile("mv %0, a4" : "=r"(a4));
 375              		.loc 1 74 5
 376              		.loc 1 74 45 is_stmt 0
 377              	#APP
 378              	# 74 "src/Riscv.cpp" 1
  75              	
 379              		mv s2, a4
 380              	# 0 "" 2
 381              	.LVL26:
  76:src/Riscv.cpp ****     uint64 scause = Riscv::r_scause();
 382              		.loc 1 76 5 is_stmt 1
 383              	#NO_APP
 384              	.LBB64:
 385              	.LBB65:
  83:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
 386              		.loc 2 83 5
  84:src/../h/Riscv.h ****     return scause;
 387              		.loc 2 84 5
  84:src/../h/Riscv.h ****     return scause;
 388              		.loc 2 84 55 is_stmt 0
GAS LISTING /tmp/ccxK7nyA.s 			page 12


 389              	#APP
 390              	# 84 "src/../h/Riscv.h" 1
 391              		csrr a5, scause
 392              	# 0 "" 2
 393              	#NO_APP
 394 01b0 233CF4F8 		sd	a5,-104(s0)
  85:src/../h/Riscv.h **** }
 395              		.loc 2 85 5 is_stmt 1
  85:src/../h/Riscv.h **** }
 396              		.loc 2 85 12 is_stmt 0
 397 01b4 033784F9 		ld	a4,-104(s0)
 398              	.LVL27:
 399              	.LBE65:
 400              	.LBE64:
  77:src/Riscv.cpp ****     switch(scause) {
 401              		.loc 1 77 5 is_stmt 1
 402              	.LBB66:
 403 01b8 93079000 		li	a5,9
 404 01bc 6302F70A 		beq	a4,a5,.L15
 405 01c0 9307F0FF 		li	a5,-1
 406 01c4 9397F703 		slli	a5,a5,63
 407 01c8 93878700 		addi	a5,a5,8
 408 01cc 631AF702 		bne	a4,a5,.L14
 409              	.LBB67:
  78:src/Riscv.cpp **** 
  79:src/Riscv.cpp ****         case timerInterrupt:
 410              		.loc 1 79 9
  80:src/Riscv.cpp **** 
  81:src/Riscv.cpp ****             PCB::timeSliceCounter++;
 411              		.loc 1 81 13
 412              		.loc 1 81 34 is_stmt 0
 413 01d0 17070000 		la	a4,_ZN3PCB16timeSliceCounterE
 413      03370700 
 414              	.LVL28:
 415 01d8 83370700 		ld	a5,0(a4)
 416 01dc 93871700 		addi	a5,a5,1
 417 01e0 2330F700 		sd	a5,0(a4)
  82:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice()) {
 418              		.loc 1 82 13 is_stmt 1
 419              	.LBB68:
 420              		.loc 1 82 68 is_stmt 0
 421 01e4 17070000 		la	a4,_ZN3PCB7runningE
 421      03370700 
 422 01ec 03370700 		ld	a4,0(a4)
 423              	.LVL29:
 424              	.LBB69:
 425              	.LBB70:
 426              		.file 3 "src/../h/PCB.h"
   1:src/../h/PCB.h **** //
   2:src/../h/PCB.h **** // Created by os on 4/27/22.
   3:src/../h/PCB.h **** //
   4:src/../h/PCB.h **** 
   5:src/../h/PCB.h **** #ifndef PROJECT_BASE_V1_0_PCB_H
   6:src/../h/PCB.h **** #define PROJECT_BASE_V1_0_PCB_H
   7:src/../h/PCB.h **** 
   8:src/../h/PCB.h **** #include "../lib/hw.h"
   9:src/../h/PCB.h **** #include "Scheduler.h"
GAS LISTING /tmp/ccxK7nyA.s 			page 13


  10:src/../h/PCB.h **** #include "Riscv.h"
  11:src/../h/PCB.h **** 
  12:src/../h/PCB.h **** class PCB
  13:src/../h/PCB.h **** {
  14:src/../h/PCB.h **** public:
  15:src/../h/PCB.h ****     using Body = void (*)(void*);
  16:src/../h/PCB.h **** 
  17:src/../h/PCB.h ****     PCB(Body body,  void* args, void* stack_space);
  18:src/../h/PCB.h **** 
  19:src/../h/PCB.h ****     void start();
  20:src/../h/PCB.h ****     static void dispatch();
  21:src/../h/PCB.h ****     static void sleep(time_t);
  22:src/../h/PCB.h **** 
  23:src/../h/PCB.h ****     static PCB* running;
  24:src/../h/PCB.h **** 
  25:src/../h/PCB.h ****     static const uint64 THREAD_CREATE = 0x11;
  26:src/../h/PCB.h **** 
  27:src/../h/PCB.h ****     static const uint64 THREAD_EXIT = 0x12;
  28:src/../h/PCB.h ****     static const uint64 THREAD_DISPATCH = 0x13;
  29:src/../h/PCB.h **** 
  30:src/../h/PCB.h ****     static uint64 timeSliceCounter;
  31:src/../h/PCB.h **** 
  32:src/../h/PCB.h ****     uint64 getTimeSlice() { return timeSlice;}
 427              		.loc 3 32 29 is_stmt 1
 428              		.loc 3 32 36 is_stmt 0
 429 01f0 03370700 		ld	a4,0(a4)
 430              	.LVL30:
 431              	.LBE70:
 432              	.LBE69:
 433              		.loc 1 82 13
 434 01f4 63FAE702 		bgeu	a5,a4,.L26
 435              	.LVL31:
 436              	.L17:
 437              	.LBE68:
  83:src/Riscv.cpp ****                 uint64 sepc = Riscv::r_sepc();
  84:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
  85:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
  86:src/Riscv.cpp ****                 PCB::dispatch();
  87:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
  88:src/Riscv.cpp ****                 Riscv::w_sepc(sepc);
  89:src/Riscv.cpp ****             }
  90:src/Riscv.cpp ****             Riscv::mc_sip(Riscv::SIP_SSIP);
 438              		.loc 1 90 13 is_stmt 1
 439              	.LBB80:
 440              	.LBB81:
 127:src/../h/Riscv.h **** }
 441              		.loc 2 127 5
 127:src/../h/Riscv.h **** }
 442              		.loc 2 127 50 is_stmt 0
 443 01f8 93072000 		li	a5,2
 444              	#APP
 445              	# 127 "src/../h/Riscv.h" 1
 446              		csrc sip, a5
 447              	# 0 "" 2
 448              	.LVL32:
 449              	#NO_APP
 450              	.L14:
GAS LISTING /tmp/ccxK7nyA.s 			page 14


 451              	.LBE81:
 452              	.LBE80:
 453              	.LBE67:
 454              	.LBE66:
  91:src/Riscv.cpp **** 
  92:src/Riscv.cpp ****             break;
  93:src/Riscv.cpp **** 
  94:src/Riscv.cpp ****         case hwInterrupt: // todo
  95:src/Riscv.cpp ****             break;
  96:src/Riscv.cpp **** 
  97:src/Riscv.cpp ****         case operationInterrupt: // todo
  98:src/Riscv.cpp ****             break;
  99:src/Riscv.cpp **** 
 100:src/Riscv.cpp ****         case addrReadInterrupt: // todo
 101:src/Riscv.cpp ****             break;
 102:src/Riscv.cpp **** 
 103:src/Riscv.cpp ****         case addrWriteInterrupt: // todo
 104:src/Riscv.cpp ****             break;
 105:src/Riscv.cpp **** 
 106:src/Riscv.cpp ****         case ecallUserInterrupt: // todo
 107:src/Riscv.cpp **** 
 108:src/Riscv.cpp **** 
 109:src/Riscv.cpp **** 
 110:src/Riscv.cpp ****             break;
 111:src/Riscv.cpp **** 
 112:src/Riscv.cpp ****         case ecallSystemInterupt:
 113:src/Riscv.cpp **** 
 114:src/Riscv.cpp ****             uint64 operation;
 115:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
 116:src/Riscv.cpp **** 
 117:src/Riscv.cpp ****             uint64 sepc = Riscv::r_sepc();
 118:src/Riscv.cpp ****             sepc+=4;
 119:src/Riscv.cpp **** 
 120:src/Riscv.cpp ****             if(operation == MemoryAllocator::MEM_ALLOC) {
 121:src/Riscv.cpp ****                 size_t size;
 122:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(size));
 123:src/Riscv.cpp ****                 size*=MEM_BLOCK_SIZE;
 124:src/Riscv.cpp ****                 void* allocatedAddr = kmalloc(size);
 125:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : : "r"((uint64)allocatedAddr));
 126:src/Riscv.cpp ****             }
 127:src/Riscv.cpp ****             else if(operation == MemoryAllocator::MEM_FREE) {
 128:src/Riscv.cpp ****                 uint64 addr = 0;
 129:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(addr));
 130:src/Riscv.cpp ****                 uint64 retval = kfree((void*)addr);
 131:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 132:src/Riscv.cpp ****             }
 133:src/Riscv.cpp ****             else if(operation == PCB::THREAD_CREATE)
 134:src/Riscv.cpp ****             {
 135:src/Riscv.cpp ****                 //todo
 136:src/Riscv.cpp ****                 //thread create
 137:src/Riscv.cpp ****                 uint64 start_routine;
 138:src/Riscv.cpp ****                 uint64 args;
 139:src/Riscv.cpp ****                 //uint64 stack_space;
 140:src/Riscv.cpp ****                 PCB** threadHandle;
 141:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(threadHandle));
 142:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(start_routine));
 143:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a3" : "=r"(args));
GAS LISTING /tmp/ccxK7nyA.s 			page 15


 144:src/Riscv.cpp ****                 //__asm__ volatile("mv %0, a4" : "=r"(stack_space));
 145:src/Riscv.cpp ****                 //todo
 146:src/Riscv.cpp ****                 //da li treba ovako ili tipa da se ne koristi new
 147:src/Riscv.cpp ****                 //nego direktno kmalloc - ali onda kako konstruktor
 148:src/Riscv.cpp ****                 //sta se desava ako preklopljeni new vrati 0
 149:src/Riscv.cpp ****                 PCB* newPCB = new PCB((void (*)(void*))start_routine, (void*)args, (void*)a4);
 150:src/Riscv.cpp **** 
 151:src/Riscv.cpp ****                 (*threadHandle) = newPCB;
 152:src/Riscv.cpp **** 
 153:src/Riscv.cpp ****                 if(newPCB == 0)
 154:src/Riscv.cpp ****                 {
 155:src/Riscv.cpp ****                     __asm__ volatile("li a0, 0xffffffffffffffff");
 156:src/Riscv.cpp ****                     //__asm__ volatile("mv a1, %0" : :"r"((uint64)newPCB));
 157:src/Riscv.cpp ****                 }
 158:src/Riscv.cpp ****                 else
 159:src/Riscv.cpp ****                 {
 160:src/Riscv.cpp ****                     __asm__ volatile("li a0, 0");
 161:src/Riscv.cpp ****                     //__asm__ volatile("mv a1, %0" : :"r"((uint64)newPCB));
 162:src/Riscv.cpp ****                 }
 163:src/Riscv.cpp **** 
 164:src/Riscv.cpp ****             }
 165:src/Riscv.cpp ****             else if(operation == PCB::THREAD_DISPATCH)
 166:src/Riscv.cpp ****             {
 167:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 168:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 169:src/Riscv.cpp ****                 PCB::dispatch();
 170:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 171:src/Riscv.cpp ****             }
 172:src/Riscv.cpp **** 
 173:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 174:src/Riscv.cpp **** 
 175:src/Riscv.cpp ****             break;
 176:src/Riscv.cpp ****     }
 177:src/Riscv.cpp **** 
 178:src/Riscv.cpp ****     //console_handler();
 179:src/Riscv.cpp **** }
 455              		.loc 1 179 1
 456 0200 83308106 		ld	ra,104(sp)
 457              		.cfi_remember_state
 458              		.cfi_restore 1
 459 0204 03340106 		ld	s0,96(sp)
 460              		.cfi_restore 8
 461              		.cfi_def_cfa 2, 112
 462 0208 83348105 		ld	s1,88(sp)
 463              		.cfi_restore 9
 464 020c 03390105 		ld	s2,80(sp)
 465              		.cfi_restore 18
 466 0210 83398104 		ld	s3,72(sp)
 467              		.cfi_restore 19
 468 0214 033A0104 		ld	s4,64(sp)
 469              		.cfi_restore 20
 470 0218 833A8103 		ld	s5,56(sp)
 471              		.cfi_restore 21
 472 021c 033B0103 		ld	s6,48(sp)
 473              		.cfi_restore 22
 474 0220 13010107 		addi	sp,sp,112
 475              		.cfi_def_cfa_offset 0
GAS LISTING /tmp/ccxK7nyA.s 			page 16


 476 0224 67800000 		jr	ra
 477              	.LVL33:
 478              	.L26:
 479              		.cfi_restore_state
 480              	.LBB115:
 481              	.LBB110:
 482              	.LBB82:
 483              	.LBB71:
  83:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 484              		.loc 1 83 17 is_stmt 1
 485              	.LBB72:
 486              	.LBB73:
  93:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 487              		.loc 2 93 5
  94:src/../h/Riscv.h ****     return sepc;
 488              		.loc 2 94 5
  94:src/../h/Riscv.h ****     return sepc;
 489              		.loc 2 94 51 is_stmt 0
 490              	#APP
 491              	# 94 "src/../h/Riscv.h" 1
 492              		csrr a5, sepc
 493              	# 0 "" 2
 494              	#NO_APP
 495 022c 2334F4FA 		sd	a5,-88(s0)
  95:src/../h/Riscv.h **** }
 496              		.loc 2 95 5 is_stmt 1
  95:src/../h/Riscv.h **** }
 497              		.loc 2 95 12 is_stmt 0
 498 0230 833484FA 		ld	s1,-88(s0)
 499              	.LVL34:
 500              	.LBE73:
 501              	.LBE72:
  84:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 502              		.loc 1 84 17 is_stmt 1
 503              	.LBB74:
 504              	.LBB75:
 149:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 505              		.loc 2 149 5
 150:src/../h/Riscv.h ****     return sstatus;
 506              		.loc 2 150 5
 150:src/../h/Riscv.h ****     return sstatus;
 507              		.loc 2 150 57 is_stmt 0
 508              	#APP
 509              	# 150 "src/../h/Riscv.h" 1
 510              		csrr a5, sstatus
 511              	# 0 "" 2
 512              	#NO_APP
 513 0238 2330F4FA 		sd	a5,-96(s0)
 514              		.loc 2 151 5 is_stmt 1
 515              		.loc 2 151 12 is_stmt 0
 516 023c 033904FA 		ld	s2,-96(s0)
 517              	.LVL35:
 518              	.LBE75:
 519              	.LBE74:
  85:src/Riscv.cpp ****                 PCB::dispatch();
 520              		.loc 1 85 17 is_stmt 1
  85:src/Riscv.cpp ****                 PCB::dispatch();
GAS LISTING /tmp/ccxK7nyA.s 			page 17


 521              		.loc 1 85 39 is_stmt 0
 522 0240 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 522      83B70700 
 523 0248 23B00700 		sd	zero,0(a5)
  86:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 524              		.loc 1 86 17 is_stmt 1
 525              	.LEHB0:
  86:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 526              		.loc 1 86 30 is_stmt 0
 527 024c 97000000 		call	_ZN3PCB8dispatchEv@plt
 527      E7800000 
 528              	.LVL36:
  87:src/Riscv.cpp ****                 Riscv::w_sepc(sepc);
 529              		.loc 1 87 17 is_stmt 1
 530              	.LBB76:
 531              	.LBB77:
 152:src/../h/Riscv.h **** }
 153:src/../h/Riscv.h **** 
 154:src/../h/Riscv.h **** inline void Riscv::w_sstatus(uint64 sstatus) {
 155:src/../h/Riscv.h ****     __asm__ volatile("csrw sstatus, %0" : :"r"(sstatus));
 532              		.loc 2 155 5
 533              		.loc 2 155 57 is_stmt 0
 534              	#APP
 535              	# 155 "src/../h/Riscv.h" 1
 156              	}
 536              		csrw sstatus, s2
 537              	# 0 "" 2
 538              	.LVL37:
 539              	#NO_APP
 540              	.LBE77:
 541              	.LBE76:
  88:src/Riscv.cpp ****             }
 542              		.loc 1 88 17 is_stmt 1
 543              	.LBB78:
 544              	.LBB79:
  99:src/../h/Riscv.h **** }
 545              		.loc 2 99 5
  99:src/../h/Riscv.h **** }
 546              		.loc 2 99 51 is_stmt 0
 547              	#APP
 548              	# 99 "src/../h/Riscv.h" 1
 100:src/../h/Riscv.h **** 
 549              		csrw sepc, s1
 550              	# 0 "" 2
 551              		.loc 2 100 1
 552              	#NO_APP
 553 025c 6FF0DFF9 		j	.L17
 554              	.LVL38:
 555              	.L15:
 556              	.LBE79:
 557              	.LBE78:
 558              	.LBE71:
 559              	.LBE82:
 112:src/Riscv.cpp **** 
 560              		.loc 1 112 9 is_stmt 1
 114:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
 561              		.loc 1 114 13
GAS LISTING /tmp/ccxK7nyA.s 			page 18


 115:src/Riscv.cpp **** 
 562              		.loc 1 115 13
 115:src/Riscv.cpp **** 
 563              		.loc 1 115 61 is_stmt 0
 564              	#APP
 565              	# 115 "src/Riscv.cpp" 1
 566              		mv a5, a0
 567              	# 0 "" 2
 568              	.LVL39:
 117:src/Riscv.cpp ****             sepc+=4;
 569              		.loc 1 117 13 is_stmt 1
 570              	#NO_APP
 571              	.LBB83:
 572              	.LBB84:
  93:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 573              		.loc 2 93 5
  94:src/../h/Riscv.h ****     return sepc;
 574              		.loc 2 94 5
  94:src/../h/Riscv.h ****     return sepc;
 575              		.loc 2 94 51 is_stmt 0
 576              	#APP
 577              	# 94 "src/../h/Riscv.h" 1
 578              		csrr a4, sepc
 579              	# 0 "" 2
 580              	.LVL40:
 581              	#NO_APP
 582 0268 2338E4FA 		sd	a4,-80(s0)
  95:src/../h/Riscv.h **** }
 583              		.loc 2 95 5 is_stmt 1
  95:src/../h/Riscv.h **** }
 584              		.loc 2 95 12 is_stmt 0
 585 026c 833404FB 		ld	s1,-80(s0)
 586              	.LVL41:
 587              	.LBE84:
 588              	.LBE83:
 118:src/Riscv.cpp **** 
 589              		.loc 1 118 13 is_stmt 1
 118:src/Riscv.cpp **** 
 590              		.loc 1 118 17 is_stmt 0
 591 0270 93844400 		addi	s1,s1,4
 592              	.LVL42:
 120:src/Riscv.cpp ****                 size_t size;
 593              		.loc 1 120 13 is_stmt 1
 594              	.LBB85:
 595 0274 13071000 		li	a4,1
 596 0278 6382E702 		beq	a5,a4,.L27
 597              	.LBE85:
 598              	.LBE110:
 599              	.LBE115:
 127:src/Riscv.cpp ****                 uint64 addr = 0;
 600              		.loc 1 127 18
 601              	.LBB116:
 602              	.LBB111:
 603              	.LBB104:
 604              	.LBB86:
 605 027c 13072000 		li	a4,2
 606 0280 638AE702 		beq	a5,a4,.L28
GAS LISTING /tmp/ccxK7nyA.s 			page 19


 607              	.LBE86:
 608              	.LBE104:
 609              	.LBE111:
 610              	.LBE116:
 133:src/Riscv.cpp ****             {
 611              		.loc 1 133 18
 612              	.LBB117:
 613              	.LBB112:
 614              	.LBB105:
 615              	.LBB100:
 616              	.LBB87:
 617 0284 13071001 		li	a4,17
 618 0288 6380E704 		beq	a5,a4,.L29
 619              	.LBE87:
 620              	.LBE100:
 621              	.LBE105:
 622              	.LBE112:
 623              	.LBE117:
 165:src/Riscv.cpp ****             {
 624              		.loc 1 165 18
 625              	.LBB118:
 626              	.LBB113:
 627              	.LBB106:
 628              	.LBB101:
 629              	.LBB97:
 630              	.LBB88:
 631 028c 13073001 		li	a4,19
 632 0290 6380E708 		beq	a5,a4,.L30
 633              	.LVL43:
 634              	.L19:
 635              	.LBE88:
 636              	.LBE97:
 637              	.LBE101:
 638              	.LBE106:
 173:src/Riscv.cpp **** 
 639              		.loc 1 173 13
 640              	.LBB107:
 641              	.LBB108:
  99:src/../h/Riscv.h **** }
 642              		.loc 2 99 5
  99:src/../h/Riscv.h **** }
 643              		.loc 2 99 51 is_stmt 0
 644              	#APP
 645              	# 99 "src/../h/Riscv.h" 1
 646              		csrw sepc, s1
 647              	# 0 "" 2
 648              	.LVL44:
 649              	#NO_APP
 650              	.LBE108:
 651              	.LBE107:
 652              	.LBE113:
 653              	.LBE118:
 654              		.loc 1 179 1
 655 0298 6FF09FF6 		j	.L14
 656              	.LVL45:
 657              	.L27:
 658              	.LBB119:
GAS LISTING /tmp/ccxK7nyA.s 			page 20


 659              	.LBB114:
 660              	.LBB109:
 661              	.LBB102:
 121:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(size));
 662              		.loc 1 121 17 is_stmt 1
 122:src/Riscv.cpp ****                 size*=MEM_BLOCK_SIZE;
 663              		.loc 1 122 17
 122:src/Riscv.cpp ****                 size*=MEM_BLOCK_SIZE;
 664              		.loc 1 122 59 is_stmt 0
 665              	#APP
 666              	# 122 "src/Riscv.cpp" 1
 667              		mv a0, a1
 668              	# 0 "" 2
 669              	.LVL46:
 123:src/Riscv.cpp ****                 void* allocatedAddr = kmalloc(size);
 670              		.loc 1 123 17 is_stmt 1
 124:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : : "r"((uint64)allocatedAddr));
 671              		.loc 1 124 17
 124:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : : "r"((uint64)allocatedAddr));
 672              		.loc 1 124 46 is_stmt 0
 673              	#NO_APP
 674 02a0 13156500 		slli	a0,a0,6
 675              	.LVL47:
 676 02a4 97000000 		call	_Z7kmallocm@plt
 676      E7800000 
 677              	.LVL48:
 125:src/Riscv.cpp ****             }
 678              		.loc 1 125 17 is_stmt 1
 125:src/Riscv.cpp ****             }
 679              		.loc 1 125 76 is_stmt 0
 680              	#APP
 681              	# 125 "src/Riscv.cpp" 1
 682              		mv a0,a0
 683              	# 0 "" 2
 684              	#NO_APP
 685              	.LBE102:
 686 02b0 6FF05FFE 		j	.L19
 687              	.LVL49:
 688              	.L28:
 689              	.LBB103:
 690              	.LBB98:
 128:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(addr));
 691              		.loc 1 128 17 is_stmt 1
 129:src/Riscv.cpp ****                 uint64 retval = kfree((void*)addr);
 692              		.loc 1 129 17
 129:src/Riscv.cpp ****                 uint64 retval = kfree((void*)addr);
 693              		.loc 1 129 59 is_stmt 0
 694              	#APP
 695              	# 129 "src/Riscv.cpp" 1
 696              		mv a0, a1
 697              	# 0 "" 2
 698              	.LVL50:
 130:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 699              		.loc 1 130 17 is_stmt 1
 130:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 700              		.loc 1 130 38 is_stmt 0
 701              	#NO_APP
GAS LISTING /tmp/ccxK7nyA.s 			page 21


 702 02b8 97000000 		call	_Z5kfreePv@plt
 702      E7800000 
 703              	.LVL51:
 131:src/Riscv.cpp ****             }
 704              		.loc 1 131 17 is_stmt 1
 131:src/Riscv.cpp ****             }
 705              		.loc 1 131 60 is_stmt 0
 706              	#APP
 707              	# 131 "src/Riscv.cpp" 1
 708              		mv a0,a0
 709              	# 0 "" 2
 710              	#NO_APP
 711              	.LBE98:
 712 02c4 6FF01FFD 		j	.L19
 713              	.LVL52:
 714              	.L29:
 715              	.LBB99:
 716              	.LBB94:
 137:src/Riscv.cpp ****                 uint64 args;
 717              		.loc 1 137 17 is_stmt 1
 138:src/Riscv.cpp ****                 //uint64 stack_space;
 718              		.loc 1 138 17
 140:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(threadHandle));
 719              		.loc 1 140 17
 141:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(start_routine));
 720              		.loc 1 141 17
 141:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(start_routine));
 721              		.loc 1 141 67 is_stmt 0
 722              	#APP
 723              	# 141 "src/Riscv.cpp" 1
 724              		mv s4, a1
 725              	# 0 "" 2
 726              	.LVL53:
 142:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a3" : "=r"(args));
 727              		.loc 1 142 17 is_stmt 1
 142:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a3" : "=r"(args));
 728              		.loc 1 142 68 is_stmt 0
 729              	# 142 "src/Riscv.cpp" 1
 730              		mv s5, a2
 731              	# 0 "" 2
 732              	.LVL54:
 143:src/Riscv.cpp ****                 //__asm__ volatile("mv %0, a4" : "=r"(stack_space));
 733              		.loc 1 143 17 is_stmt 1
 143:src/Riscv.cpp ****                 //__asm__ volatile("mv %0, a4" : "=r"(stack_space));
 734              		.loc 1 143 59 is_stmt 0
 735              	# 143 "src/Riscv.cpp" 1
 736              		mv s6, a3
 737              	# 0 "" 2
 738              	.LVL55:
 149:src/Riscv.cpp **** 
 739              		.loc 1 149 17 is_stmt 1
 149:src/Riscv.cpp **** 
 740              		.loc 1 149 93 is_stmt 0
 741              	#NO_APP
 742 02d4 13050004 		li	a0,64
 743 02d8 97000000 		call	_ZN3PCBnwEm@plt
 743      E7800000 
GAS LISTING /tmp/ccxK7nyA.s 			page 22


 744              	.LVL56:
 745              	.LEHE0:
 746 02e0 93090500 		mv	s3,a0
 747 02e4 93060900 		mv	a3,s2
 748 02e8 13060B00 		mv	a2,s6
 749 02ec 93850A00 		mv	a1,s5
 750              	.LEHB1:
 751 02f0 97000000 		call	_ZN3PCBC1EPFvPvES0_S0_@plt
 751      E7800000 
 752              	.LVL57:
 753              	.LEHE1:
 151:src/Riscv.cpp **** 
 754              		.loc 1 151 17 is_stmt 1 discriminator 2
 151:src/Riscv.cpp **** 
 755              		.loc 1 151 33 is_stmt 0 discriminator 2
 756 02f8 23303A01 		sd	s3,0(s4)
 153:src/Riscv.cpp ****                 {
 757              		.loc 1 153 17 is_stmt 1 discriminator 2
 758 02fc 63860900 		beqz	s3,.L31
 160:src/Riscv.cpp ****                     //__asm__ volatile("mv a1, %0" : :"r"((uint64)newPCB));
 759              		.loc 1 160 21
 160:src/Riscv.cpp ****                     //__asm__ volatile("mv a1, %0" : :"r"((uint64)newPCB));
 760              		.loc 1 160 49 is_stmt 0
 761              	#APP
 762              	# 160 "src/Riscv.cpp" 1
 763              		li a0, 0
 764              	# 0 "" 2
 765              	#NO_APP
 766 0304 6FF01FF9 		j	.L19
 767              	.L31:
 155:src/Riscv.cpp ****                     //__asm__ volatile("mv a1, %0" : :"r"((uint64)newPCB));
 768              		.loc 1 155 21 is_stmt 1
 155:src/Riscv.cpp ****                     //__asm__ volatile("mv a1, %0" : :"r"((uint64)newPCB));
 769              		.loc 1 155 66 is_stmt 0
 770              	#APP
 771              	# 155 "src/Riscv.cpp" 1
 772              		li a0, 0xffffffffffffffff
 773              	# 0 "" 2
 774              	#NO_APP
 775 030c 6FF09FF8 		j	.L19
 776              	.LVL58:
 777              	.L30:
 778              	.LBE94:
 779              	.LBB95:
 780              	.LBB89:
 167:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 781              		.loc 1 167 17 is_stmt 1
 782              	.LBB90:
 783              	.LBB91:
 149:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 784              		.loc 2 149 5
 150:src/../h/Riscv.h ****     return sstatus;
 785              		.loc 2 150 5
 150:src/../h/Riscv.h ****     return sstatus;
 786              		.loc 2 150 57 is_stmt 0
 787              	#APP
 788              	# 150 "src/../h/Riscv.h" 1
GAS LISTING /tmp/ccxK7nyA.s 			page 23


 789              		csrr a5, sstatus
 790              	# 0 "" 2
 791              	.LVL59:
 792              	#NO_APP
 793 0314 233CF4FA 		sd	a5,-72(s0)
 151:src/../h/Riscv.h **** }
 794              		.loc 2 151 5 is_stmt 1
 151:src/../h/Riscv.h **** }
 795              		.loc 2 151 12 is_stmt 0
 796 0318 033984FB 		ld	s2,-72(s0)
 797              	.LVL60:
 798              	.LBE91:
 799              	.LBE90:
 168:src/Riscv.cpp ****                 PCB::dispatch();
 800              		.loc 1 168 17 is_stmt 1
 168:src/Riscv.cpp ****                 PCB::dispatch();
 801              		.loc 1 168 39 is_stmt 0
 802 031c 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 802      83B70700 
 803 0324 23B00700 		sd	zero,0(a5)
 169:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 804              		.loc 1 169 17 is_stmt 1
 805              	.LEHB2:
 169:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 806              		.loc 1 169 30 is_stmt 0
 807 0328 97000000 		call	_ZN3PCB8dispatchEv@plt
 807      E7800000 
 808              	.LVL61:
 809              	.LEHE2:
 170:src/Riscv.cpp ****             }
 810              		.loc 1 170 17 is_stmt 1
 811              	.LBB92:
 812              	.LBB93:
 155:src/../h/Riscv.h **** }
 813              		.loc 2 155 5
 155:src/../h/Riscv.h **** }
 814              		.loc 2 155 57 is_stmt 0
 815              	#APP
 816              	# 155 "src/../h/Riscv.h" 1
 817              		csrw sstatus, s2
 818              	# 0 "" 2
 819              		.loc 2 156 1
 820              	#NO_APP
 821 0334 6FF01FF6 		j	.L19
 822              	.LVL62:
 823              	.L24:
 824 0338 93040500 		mv	s1,a0
 825              	.LVL63:
 826              	.LBE93:
 827              	.LBE92:
 828              	.LBE89:
 829              	.LBE95:
 830              	.LBB96:
 149:src/Riscv.cpp **** 
 831              		.loc 1 149 93
 832 033c 13850900 		mv	a0,s3
 833 0340 97000000 		call	_ZN3PCBdlEPv@plt
GAS LISTING /tmp/ccxK7nyA.s 			page 24


 833      E7800000 
 834              	.LVL64:
 835 0348 13850400 		mv	a0,s1
 836              	.LEHB3:
 837 034c 97000000 		call	_Unwind_Resume@plt
 837      E7800000 
 838              	.LVL65:
 839              	.LEHE3:
 840              	.LBE96:
 841              	.LBE99:
 842              	.LBE103:
 843              	.LBE109:
 844              	.LBE114:
 845              	.LBE119:
 846              		.cfi_endproc
 847              	.LFE23:
 848              		.globl	__gxx_personality_v0
 849              		.section	.gcc_except_table,"a",@progbits
 850              	.LLSDA23:
 851 0000 FF       		.byte	0xff
 852 0001 FF       		.byte	0xff
 853 0002 03       		.byte	0x3
 854 0003 34       		.byte	0x34
 855 0004 00000000 		.4byte	.LEHB0-.LFB23
 856 0008 00000000 		.4byte	.LEHE0-.LEHB0
 857 000c 00000000 		.4byte	0
 858 0010 00       		.byte	0
 859 0011 00000000 		.4byte	.LEHB1-.LFB23
 860 0015 00000000 		.4byte	.LEHE1-.LEHB1
 861 0019 00000000 		.4byte	.L24-.LFB23
 862 001d 00       		.byte	0
 863 001e 00000000 		.4byte	.LEHB2-.LFB23
 864 0022 00000000 		.4byte	.LEHE2-.LEHB2
 865 0026 00000000 		.4byte	0
 866 002a 00       		.byte	0
 867 002b 00000000 		.4byte	.LEHB3-.LFB23
 868 002f 00000000 		.4byte	.LEHE3-.LEHB3
 869 0033 00000000 		.4byte	0
 870 0037 00       		.byte	0
 871              		.text
 873              		.section	.rodata
 874              		.align	3
 875              		.set	.LANCHOR0,. + 0
 878              	_ZZN5Riscv12printIntegerEmE6digits:
 879 0000 30313233 		.string	"0123456789"
 879      34353637 
 879      383900
 880              		.text
 881              	.Letext0:
 882              		.file 4 "src/../h/../lib/hw.h"
 883              		.file 5 "src/../h/MemoryAllocator.h"
 884              		.file 6 "src/../lib/console.h"
 4064              		.align	3
 4067              	DW.ref.__gxx_personality_v0:
 4068 0000 00000000 		.dword	__gxx_personality_v0
 4068      00000000 
 4069              		.ident	"GCC: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0"
GAS LISTING /tmp/ccxK7nyA.s 			page 25


 4070              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/ccxK7nyA.s 			page 26


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Riscv.cpp
     /tmp/ccxK7nyA.s:9      .text:0000000000000000 _ZN5Riscv10initSystemEv
     /tmp/ccxK7nyA.s:13     .text:0000000000000000 .L0 
     /tmp/ccxK7nyA.s:14     .text:0000000000000000 .L0 
     /tmp/ccxK7nyA.s:15     .text:0000000000000004 .L0 
     /tmp/ccxK7nyA.s:17     .text:0000000000000008 .L0 
     /tmp/ccxK7nyA.s:19     .text:000000000000000c .L0 
     /tmp/ccxK7nyA.s:21     .text:000000000000000c .L0 
     /tmp/ccxK7nyA.s:22     .text:000000000000000c .L0 
     /tmp/ccxK7nyA.s:28     .text:0000000000000014 .L0 
    src/../h/Riscv.h:109    .text:0000000000000014 .L0 
     /tmp/ccxK7nyA.s:38     .text:0000000000000018 .L0 
     /tmp/ccxK7nyA.s:39     .text:000000000000001c .L0 
     /tmp/ccxK7nyA.s:40     .text:000000000000001c .L0 
     /tmp/ccxK7nyA.s:42     .text:0000000000000020 .L0 
     /tmp/ccxK7nyA.s:44     .text:0000000000000024 .L0 
     /tmp/ccxK7nyA.s:50     .text:0000000000000024 _ZN5Riscv10popSppSpieEv
     /tmp/ccxK7nyA.s:53     .text:0000000000000024 .L0 
     /tmp/ccxK7nyA.s:54     .text:0000000000000024 .L0 
     /tmp/ccxK7nyA.s:55     .text:0000000000000028 .L0 
     /tmp/ccxK7nyA.s:57     .text:000000000000002c .L0 
     /tmp/ccxK7nyA.s:59     .text:0000000000000030 .L0 
     /tmp/ccxK7nyA.s:61     .text:0000000000000030 .L0 
       src/Riscv.cpp:21     .text:0000000000000030 .L0 
     /tmp/ccxK7nyA.s:67     .text:0000000000000034 .L0 
       src/Riscv.cpp:22     .text:0000000000000034 .L0 
     /tmp/ccxK7nyA.s:73     .text:0000000000000038 .L0 
     /tmp/ccxK7nyA.s:74     .text:000000000000003c .L0 
     /tmp/ccxK7nyA.s:75     .text:000000000000003c .L0 
     /tmp/ccxK7nyA.s:77     .text:0000000000000040 .L0 
     /tmp/ccxK7nyA.s:79     .text:0000000000000044 .L0 
     /tmp/ccxK7nyA.s:85     .text:0000000000000044 _ZN5Riscv11printStringEPKc
     /tmp/ccxK7nyA.s:88     .text:0000000000000044 .L0 
     /tmp/ccxK7nyA.s:90     .text:0000000000000044 .L0 
     /tmp/ccxK7nyA.s:91     .text:0000000000000048 .L0 
     /tmp/ccxK7nyA.s:96     .text:0000000000000058 .L0 
     /tmp/ccxK7nyA.s:97     .text:0000000000000058 .L0 
     /tmp/ccxK7nyA.s:98     .text:0000000000000058 .L0 
     /tmp/ccxK7nyA.s:99     .text:0000000000000058 .L0 
     /tmp/ccxK7nyA.s:101    .text:000000000000005c .L0 
     /tmp/ccxK7nyA.s:106    .text:0000000000000060 .L0 
     /tmp/ccxK7nyA.s:107    .text:0000000000000060 .L0 
     /tmp/ccxK7nyA.s:108    .text:0000000000000060 .L0 
    src/../h/Riscv.h:150    .text:0000000000000060 .L0 
     /tmp/ccxK7nyA.s:116    .text:0000000000000068 .L0 
     /tmp/ccxK7nyA.s:117    .text:0000000000000068 .L0 
     /tmp/ccxK7nyA.s:124    .text:000000000000006c .L0 
     /tmp/ccxK7nyA.s:125    .text:000000000000006c .L0 
     /tmp/ccxK7nyA.s:126    .text:000000000000006c .L0 
     /tmp/ccxK7nyA.s:137    .text:0000000000000074 .L0 
     /tmp/ccxK7nyA.s:138    .text:0000000000000074 .L0 
     /tmp/ccxK7nyA.s:139    .text:0000000000000074 .L0 
     /tmp/ccxK7nyA.s:141    .text:0000000000000078 .L0 
     /tmp/ccxK7nyA.s:143    .text:000000000000007c .L0 
     /tmp/ccxK7nyA.s:144    .text:000000000000007c .L0 
     /tmp/ccxK7nyA.s:147    .text:0000000000000084 .L0 
GAS LISTING /tmp/ccxK7nyA.s 			page 27


     /tmp/ccxK7nyA.s:148    .text:0000000000000084 .L0 
     /tmp/ccxK7nyA.s:151    .text:0000000000000088 .L0 
     /tmp/ccxK7nyA.s:154    .text:000000000000008c .L0 
     /tmp/ccxK7nyA.s:155    .text:000000000000008c .L0 
     /tmp/ccxK7nyA.s:158    .text:0000000000000090 .L0 
     /tmp/ccxK7nyA.s:164    .text:0000000000000098 .L0 
    src/../h/Riscv.h:141    .text:0000000000000098 .L0 
     /tmp/ccxK7nyA.s:174    .text:000000000000009c .L0 
     /tmp/ccxK7nyA.s:175    .text:00000000000000a0 .L0 
     /tmp/ccxK7nyA.s:177    .text:00000000000000a4 .L0 
     /tmp/ccxK7nyA.s:178    .text:00000000000000a4 .L0 
     /tmp/ccxK7nyA.s:180    .text:00000000000000a8 .L0 
     /tmp/ccxK7nyA.s:183    .text:00000000000000ac .L0 
     /tmp/ccxK7nyA.s:185    .text:00000000000000b0 .L0 
     /tmp/ccxK7nyA.s:187    .text:00000000000000b4 .L0 
     /tmp/ccxK7nyA.s:198    .text:00000000000000b4 _ZN5Riscv12printIntegerEm
     /tmp/ccxK7nyA.s:201    .text:00000000000000b4 .L0 
     /tmp/ccxK7nyA.s:203    .text:00000000000000b4 .L0 
     /tmp/ccxK7nyA.s:204    .text:00000000000000b8 .L0 
     /tmp/ccxK7nyA.s:209    .text:00000000000000c8 .L0 
     /tmp/ccxK7nyA.s:210    .text:00000000000000c8 .L0 
     /tmp/ccxK7nyA.s:211    .text:00000000000000c8 .L0 
     /tmp/ccxK7nyA.s:212    .text:00000000000000c8 .L0 
     /tmp/ccxK7nyA.s:214    .text:00000000000000cc .L0 
     /tmp/ccxK7nyA.s:218    .text:00000000000000cc .L0 
     /tmp/ccxK7nyA.s:219    .text:00000000000000cc .L0 
     /tmp/ccxK7nyA.s:220    .text:00000000000000cc .L0 
    src/../h/Riscv.h:150    .text:00000000000000cc .L0 
     /tmp/ccxK7nyA.s:228    .text:00000000000000d4 .L0 
     /tmp/ccxK7nyA.s:229    .text:00000000000000d4 .L0 
     /tmp/ccxK7nyA.s:236    .text:00000000000000d8 .L0 
     /tmp/ccxK7nyA.s:237    .text:00000000000000d8 .L0 
     /tmp/ccxK7nyA.s:238    .text:00000000000000d8 .L0 
     /tmp/ccxK7nyA.s:248    .text:00000000000000e0 .L0 
     /tmp/ccxK7nyA.s:249    .text:00000000000000e0 .L0 
     /tmp/ccxK7nyA.s:250    .text:00000000000000e0 .L0 
     /tmp/ccxK7nyA.s:251    .text:00000000000000e0 .L0 
     /tmp/ccxK7nyA.s:252    .text:00000000000000e0 .L0 
     /tmp/ccxK7nyA.s:253    .text:00000000000000e0 .L0 
     /tmp/ccxK7nyA.s:254    .text:00000000000000e0 .L0 
     /tmp/ccxK7nyA.s:255    .text:00000000000000e0 .L0 
     /tmp/ccxK7nyA.s:258    .text:00000000000000e4 .L0 
     /tmp/ccxK7nyA.s:259    .text:00000000000000e4 .L0 
     /tmp/ccxK7nyA.s:263    .text:00000000000000e8 .L0 
     /tmp/ccxK7nyA.s:264    .text:00000000000000e8 .L0 
     /tmp/ccxK7nyA.s:265    .text:00000000000000e8 .L0 
     /tmp/ccxK7nyA.s:269    .text:00000000000000f0 .L0 
     /tmp/ccxK7nyA.s:275    .text:0000000000000108 .L0 
     /tmp/ccxK7nyA.s:281    .text:0000000000000118 .L0 
     /tmp/ccxK7nyA.s:283    .text:000000000000011c .L0 
     /tmp/ccxK7nyA.s:286    .text:0000000000000120 .L0 
     /tmp/ccxK7nyA.s:291    .text:0000000000000128 .L0 
     /tmp/ccxK7nyA.s:292    .text:0000000000000128 .L0 
     /tmp/ccxK7nyA.s:296    .text:0000000000000130 .L0 
     /tmp/ccxK7nyA.s:297    .text:0000000000000130 .L0 
     /tmp/ccxK7nyA.s:305    .text:0000000000000148 .L0 
     /tmp/ccxK7nyA.s:306    .text:0000000000000148 .L0 
GAS LISTING /tmp/ccxK7nyA.s 			page 28


     /tmp/ccxK7nyA.s:310    .text:0000000000000158 .L0 
     /tmp/ccxK7nyA.s:311    .text:0000000000000158 .L0 
     /tmp/ccxK7nyA.s:314    .text:000000000000015c .L0 
     /tmp/ccxK7nyA.s:320    .text:0000000000000164 .L0 
    src/../h/Riscv.h:141    .text:0000000000000164 .L0 
     /tmp/ccxK7nyA.s:330    .text:0000000000000168 .L0 
     /tmp/ccxK7nyA.s:331    .text:000000000000016c .L0 
     /tmp/ccxK7nyA.s:333    .text:0000000000000170 .L0 
     /tmp/ccxK7nyA.s:334    .text:0000000000000170 .L0 
     /tmp/ccxK7nyA.s:336    .text:0000000000000174 .L0 
     /tmp/ccxK7nyA.s:338    .text:0000000000000178 .L0 
     /tmp/ccxK7nyA.s:340    .text:000000000000017c .L0 
     /tmp/ccxK7nyA.s:342    .text:0000000000000180 .L0 
     /tmp/ccxK7nyA.s:348    .text:0000000000000180 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccxK7nyA.s:351    .text:0000000000000180 .L0 
     /tmp/ccxK7nyA.s:4067   .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/ccxK7nyA.s:354    .text:0000000000000180 .L0 
     /tmp/ccxK7nyA.s:355    .text:0000000000000184 .L0 
     /tmp/ccxK7nyA.s:364    .text:00000000000001a4 .L0 
     /tmp/ccxK7nyA.s:365    .text:00000000000001a4 .L0 
     /tmp/ccxK7nyA.s:366    .text:00000000000001a4 .L0 
     /tmp/ccxK7nyA.s:367    .text:00000000000001a4 .L0 
     /tmp/ccxK7nyA.s:368    .text:00000000000001a4 .L0 
     /tmp/ccxK7nyA.s:369    .text:00000000000001a4 .L0 
     /tmp/ccxK7nyA.s:370    .text:00000000000001a4 .L0 
     /tmp/ccxK7nyA.s:371    .text:00000000000001a4 .L0 
     /tmp/ccxK7nyA.s:373    .text:00000000000001a8 .L0 
     /tmp/ccxK7nyA.s:375    .text:00000000000001a8 .L0 
     /tmp/ccxK7nyA.s:376    .text:00000000000001a8 .L0 
       src/Riscv.cpp:74     .text:00000000000001a8 .L0 
     /tmp/ccxK7nyA.s:386    .text:00000000000001ac .L0 
     /tmp/ccxK7nyA.s:387    .text:00000000000001ac .L0 
     /tmp/ccxK7nyA.s:388    .text:00000000000001ac .L0 
    src/../h/Riscv.h:84     .text:00000000000001ac .L0 
     /tmp/ccxK7nyA.s:396    .text:00000000000001b4 .L0 
     /tmp/ccxK7nyA.s:397    .text:00000000000001b4 .L0 
     /tmp/ccxK7nyA.s:403    .text:00000000000001b8 .L0 
     /tmp/ccxK7nyA.s:411    .text:00000000000001d0 .L0 
     /tmp/ccxK7nyA.s:412    .text:00000000000001d0 .L0 
     /tmp/ccxK7nyA.s:413    .text:00000000000001d0 .L0 
     /tmp/ccxK7nyA.s:420    .text:00000000000001e4 .L0 
     /tmp/ccxK7nyA.s:421    .text:00000000000001e4 .L0 
     /tmp/ccxK7nyA.s:428    .text:00000000000001f0 .L0 
     /tmp/ccxK7nyA.s:429    .text:00000000000001f0 .L0 
     /tmp/ccxK7nyA.s:434    .text:00000000000001f4 .L0 
     /tmp/ccxK7nyA.s:441    .text:00000000000001f8 .L0 
     /tmp/ccxK7nyA.s:442    .text:00000000000001f8 .L0 
     /tmp/ccxK7nyA.s:443    .text:00000000000001f8 .L0 
     /tmp/ccxK7nyA.s:456    .text:0000000000000200 .L0 
     /tmp/ccxK7nyA.s:457    .text:0000000000000204 .L0 
     /tmp/ccxK7nyA.s:458    .text:0000000000000204 .L0 
     /tmp/ccxK7nyA.s:460    .text:0000000000000208 .L0 
     /tmp/ccxK7nyA.s:461    .text:0000000000000208 .L0 
     /tmp/ccxK7nyA.s:463    .text:000000000000020c .L0 
     /tmp/ccxK7nyA.s:465    .text:0000000000000210 .L0 
     /tmp/ccxK7nyA.s:467    .text:0000000000000214 .L0 
     /tmp/ccxK7nyA.s:469    .text:0000000000000218 .L0 
GAS LISTING /tmp/ccxK7nyA.s 			page 29


     /tmp/ccxK7nyA.s:471    .text:000000000000021c .L0 
     /tmp/ccxK7nyA.s:473    .text:0000000000000220 .L0 
     /tmp/ccxK7nyA.s:475    .text:0000000000000224 .L0 
     /tmp/ccxK7nyA.s:479    .text:0000000000000228 .L0 
     /tmp/ccxK7nyA.s:487    .text:0000000000000228 .L0 
     /tmp/ccxK7nyA.s:488    .text:0000000000000228 .L0 
     /tmp/ccxK7nyA.s:489    .text:0000000000000228 .L0 
    src/../h/Riscv.h:94     .text:0000000000000228 .L0 
     /tmp/ccxK7nyA.s:497    .text:0000000000000230 .L0 
     /tmp/ccxK7nyA.s:498    .text:0000000000000230 .L0 
     /tmp/ccxK7nyA.s:505    .text:0000000000000234 .L0 
     /tmp/ccxK7nyA.s:506    .text:0000000000000234 .L0 
     /tmp/ccxK7nyA.s:507    .text:0000000000000234 .L0 
    src/../h/Riscv.h:150    .text:0000000000000234 .L0 
     /tmp/ccxK7nyA.s:515    .text:000000000000023c .L0 
     /tmp/ccxK7nyA.s:516    .text:000000000000023c .L0 
     /tmp/ccxK7nyA.s:521    .text:0000000000000240 .L0 
     /tmp/ccxK7nyA.s:522    .text:0000000000000240 .L0 
     /tmp/ccxK7nyA.s:526    .text:000000000000024c .L0 
     /tmp/ccxK7nyA.s:527    .text:000000000000024c .L0 
     /tmp/ccxK7nyA.s:532    .text:0000000000000254 .L0 
     /tmp/ccxK7nyA.s:533    .text:0000000000000254 .L0 
    src/../h/Riscv.h:155    .text:0000000000000254 .L0 
     /tmp/ccxK7nyA.s:545    .text:0000000000000258 .L0 
     /tmp/ccxK7nyA.s:546    .text:0000000000000258 .L0 
    src/../h/Riscv.h:99     .text:0000000000000258 .L0 
     /tmp/ccxK7nyA.s:553    .text:000000000000025c .L0 
     /tmp/ccxK7nyA.s:561    .text:0000000000000260 .L0 
     /tmp/ccxK7nyA.s:562    .text:0000000000000260 .L0 
     /tmp/ccxK7nyA.s:563    .text:0000000000000260 .L0 
       src/Riscv.cpp:115    .text:0000000000000260 .L0 
     /tmp/ccxK7nyA.s:573    .text:0000000000000264 .L0 
     /tmp/ccxK7nyA.s:574    .text:0000000000000264 .L0 
     /tmp/ccxK7nyA.s:575    .text:0000000000000264 .L0 
    src/../h/Riscv.h:94     .text:0000000000000264 .L0 
     /tmp/ccxK7nyA.s:584    .text:000000000000026c .L0 
     /tmp/ccxK7nyA.s:585    .text:000000000000026c .L0 
     /tmp/ccxK7nyA.s:590    .text:0000000000000270 .L0 
     /tmp/ccxK7nyA.s:591    .text:0000000000000270 .L0 
     /tmp/ccxK7nyA.s:595    .text:0000000000000274 .L0 
     /tmp/ccxK7nyA.s:605    .text:000000000000027c .L0 
     /tmp/ccxK7nyA.s:617    .text:0000000000000284 .L0 
     /tmp/ccxK7nyA.s:631    .text:000000000000028c .L0 
     /tmp/ccxK7nyA.s:642    .text:0000000000000294 .L0 
     /tmp/ccxK7nyA.s:643    .text:0000000000000294 .L0 
    src/../h/Riscv.h:99     .text:0000000000000294 .L0 
     /tmp/ccxK7nyA.s:655    .text:0000000000000298 .L0 
     /tmp/ccxK7nyA.s:663    .text:000000000000029c .L0 
     /tmp/ccxK7nyA.s:664    .text:000000000000029c .L0 
       src/Riscv.cpp:122    .text:000000000000029c .L0 
     /tmp/ccxK7nyA.s:671    .text:00000000000002a0 .L0 
     /tmp/ccxK7nyA.s:672    .text:00000000000002a0 .L0 
     /tmp/ccxK7nyA.s:674    .text:00000000000002a0 .L0 
     /tmp/ccxK7nyA.s:679    .text:00000000000002ac .L0 
       src/Riscv.cpp:125    .text:00000000000002ac .L0 
     /tmp/ccxK7nyA.s:692    .text:00000000000002b4 .L0 
     /tmp/ccxK7nyA.s:693    .text:00000000000002b4 .L0 
GAS LISTING /tmp/ccxK7nyA.s 			page 30


       src/Riscv.cpp:129    .text:00000000000002b4 .L0 
     /tmp/ccxK7nyA.s:700    .text:00000000000002b8 .L0 
     /tmp/ccxK7nyA.s:702    .text:00000000000002b8 .L0 
     /tmp/ccxK7nyA.s:705    .text:00000000000002c0 .L0 
       src/Riscv.cpp:131    .text:00000000000002c0 .L0 
     /tmp/ccxK7nyA.s:718    .text:00000000000002c8 .L0 
     /tmp/ccxK7nyA.s:719    .text:00000000000002c8 .L0 
     /tmp/ccxK7nyA.s:720    .text:00000000000002c8 .L0 
     /tmp/ccxK7nyA.s:721    .text:00000000000002c8 .L0 
       src/Riscv.cpp:141    .text:00000000000002c8 .L0 
     /tmp/ccxK7nyA.s:728    .text:00000000000002cc .L0 
       src/Riscv.cpp:142    .text:00000000000002cc .L0 
     /tmp/ccxK7nyA.s:734    .text:00000000000002d0 .L0 
       src/Riscv.cpp:143    .text:00000000000002d0 .L0 
     /tmp/ccxK7nyA.s:740    .text:00000000000002d4 .L0 
     /tmp/ccxK7nyA.s:742    .text:00000000000002d4 .L0 
     /tmp/ccxK7nyA.s:755    .text:00000000000002f8 .L0 
     /tmp/ccxK7nyA.s:756    .text:00000000000002f8 .L0 
     /tmp/ccxK7nyA.s:758    .text:00000000000002fc .L0 
     /tmp/ccxK7nyA.s:760    .text:0000000000000300 .L0 
       src/Riscv.cpp:160    .text:0000000000000300 .L0 
     /tmp/ccxK7nyA.s:769    .text:0000000000000308 .L0 
       src/Riscv.cpp:155    .text:0000000000000308 .L0 
     /tmp/ccxK7nyA.s:784    .text:0000000000000310 .L0 
     /tmp/ccxK7nyA.s:785    .text:0000000000000310 .L0 
     /tmp/ccxK7nyA.s:786    .text:0000000000000310 .L0 
    src/../h/Riscv.h:150    .text:0000000000000310 .L0 
     /tmp/ccxK7nyA.s:795    .text:0000000000000318 .L0 
     /tmp/ccxK7nyA.s:796    .text:0000000000000318 .L0 
     /tmp/ccxK7nyA.s:801    .text:000000000000031c .L0 
     /tmp/ccxK7nyA.s:802    .text:000000000000031c .L0 
     /tmp/ccxK7nyA.s:806    .text:0000000000000328 .L0 
     /tmp/ccxK7nyA.s:807    .text:0000000000000328 .L0 
     /tmp/ccxK7nyA.s:813    .text:0000000000000330 .L0 
     /tmp/ccxK7nyA.s:814    .text:0000000000000330 .L0 
    src/../h/Riscv.h:155    .text:0000000000000330 .L0 
     /tmp/ccxK7nyA.s:821    .text:0000000000000334 .L0 
     /tmp/ccxK7nyA.s:832    .text:000000000000033c .L0 
     /tmp/ccxK7nyA.s:846    .text:0000000000000354 .L0 
     /tmp/ccxK7nyA.s:875    .rodata:0000000000000000 .LANCHOR0
     /tmp/ccxK7nyA.s:878    .rodata:0000000000000000 _ZZN5Riscv12printIntegerEmE6digits
     /tmp/ccxK7nyA.s:885    .text:0000000000000354 .L0 
     /tmp/ccxK7nyA.s:22     .text:000000000000000c .L0 
     /tmp/ccxK7nyA.s:271    .text:00000000000000f8 .L0 
     /tmp/ccxK7nyA.s:192    .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccxK7nyA.s:306    .text:0000000000000148 .L0 
     /tmp/ccxK7nyA.s:413    .text:00000000000001d0 .L0 
     /tmp/ccxK7nyA.s:421    .text:00000000000001e4 .L0 
     /tmp/ccxK7nyA.s:522    .text:0000000000000240 .L0 
     /tmp/ccxK7nyA.s:802    .text:000000000000031c .L0 
     /tmp/ccxK7nyA.s:152    .text:000000000000008c .L6
     /tmp/ccxK7nyA.s:133    .text:0000000000000074 .L7
     /tmp/ccxK7nyA.s:261    .text:00000000000000e8 .L10
     /tmp/ccxK7nyA.s:303    .text:0000000000000148 .L11
     /tmp/ccxK7nyA.s:289    .text:0000000000000128 .L12
     /tmp/ccxK7nyA.s:555    .text:0000000000000260 .L15
     /tmp/ccxK7nyA.s:450    .text:0000000000000200 .L14
GAS LISTING /tmp/ccxK7nyA.s 			page 31


     /tmp/ccxK7nyA.s:478    .text:0000000000000228 .L26
     /tmp/ccxK7nyA.s:436    .text:00000000000001f8 .L17
     /tmp/ccxK7nyA.s:657    .text:000000000000029c .L27
     /tmp/ccxK7nyA.s:688    .text:00000000000002b4 .L28
     /tmp/ccxK7nyA.s:714    .text:00000000000002c8 .L29
     /tmp/ccxK7nyA.s:777    .text:0000000000000310 .L30
     /tmp/ccxK7nyA.s:634    .text:0000000000000294 .L19
     /tmp/ccxK7nyA.s:767    .text:0000000000000308 .L31
     /tmp/ccxK7nyA.s:525    .text:000000000000024c .LEHB0
     /tmp/ccxK7nyA.s:349    .text:0000000000000180 .LFB23
     /tmp/ccxK7nyA.s:745    .text:00000000000002e0 .LEHE0
     /tmp/ccxK7nyA.s:750    .text:00000000000002f0 .LEHB1
     /tmp/ccxK7nyA.s:753    .text:00000000000002f8 .LEHE1
     /tmp/ccxK7nyA.s:823    .text:0000000000000338 .L24
     /tmp/ccxK7nyA.s:805    .text:0000000000000328 .LEHB2
     /tmp/ccxK7nyA.s:809    .text:0000000000000330 .LEHE2
     /tmp/ccxK7nyA.s:836    .text:000000000000034c .LEHB3
     /tmp/ccxK7nyA.s:839    .text:0000000000000354 .LEHE3
     /tmp/ccxK7nyA.s:2406   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccxK7nyA.s:3903   .debug_str:000000000000040b .LASF136
     /tmp/ccxK7nyA.s:3807   .debug_str:000000000000015f .LASF137
     /tmp/ccxK7nyA.s:3997   .debug_str:00000000000006e4 .LASF138
     /tmp/ccxK7nyA.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccxK7nyA.s:881    .text:0000000000000354 .Letext0
     /tmp/ccxK7nyA.s:3763   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccxK7nyA.s:3859   .debug_str:00000000000002ca .LASF0
     /tmp/ccxK7nyA.s:3939   .debug_str:0000000000000598 .LASF3
     /tmp/ccxK7nyA.s:3881   .debug_str:0000000000000378 .LASF1
     /tmp/ccxK7nyA.s:3947   .debug_str:00000000000005b8 .LASF2
     /tmp/ccxK7nyA.s:3953   .debug_str:00000000000005ea .LASF4
     /tmp/ccxK7nyA.s:3869   .debug_str:000000000000030b .LASF5
     /tmp/ccxK7nyA.s:3771   .debug_str:000000000000001d .LASF6
     /tmp/ccxK7nyA.s:3927   .debug_str:000000000000054c .LASF7
     /tmp/ccxK7nyA.s:3919   .debug_str:0000000000000507 .LASF8
     /tmp/ccxK7nyA.s:3873   .debug_str:000000000000033f .LASF9
     /tmp/ccxK7nyA.s:3843   .debug_str:0000000000000242 .LASF10
     /tmp/ccxK7nyA.s:3847   .debug_str:000000000000026e .LASF11
     /tmp/ccxK7nyA.s:3801   .debug_str:0000000000000126 .LASF12
     /tmp/ccxK7nyA.s:3833   .debug_str:0000000000000213 .LASF13
     /tmp/ccxK7nyA.s:3809   .debug_str:000000000000016d .LASF14
     /tmp/ccxK7nyA.s:3799   .debug_str:0000000000000116 .LASF15
     /tmp/ccxK7nyA.s:3975   .debug_str:0000000000000670 .LASF16
     /tmp/ccxK7nyA.s:3825   .debug_str:00000000000001cd .LASF17
     /tmp/ccxK7nyA.s:3967   .debug_str:0000000000000645 .LASF18
     /tmp/ccxK7nyA.s:4025   .debug_str:00000000000007ba .LASF85
     /tmp/ccxK7nyA.s:3937   .debug_str:000000000000058d .LASF22
     /tmp/ccxK7nyA.s:3885   .debug_str:0000000000000391 .LASF19
     /tmp/ccxK7nyA.s:3829   .debug_str:00000000000001fe .LASF20
     /tmp/ccxK7nyA.s:4037   .debug_str:0000000000000802 .LASF21
     /tmp/ccxK7nyA.s:4015   .debug_str:0000000000000772 .LASF23
     /tmp/ccxK7nyA.s:3831   .debug_str:0000000000000207 .LASF24
     /tmp/ccxK7nyA.s:3987   .debug_str:00000000000006a4 .LASF25
     /tmp/ccxK7nyA.s:3815   .debug_str:0000000000000190 .LASF26
     /tmp/ccxK7nyA.s:3907   .debug_str:00000000000004bf .LASF31
     /tmp/ccxK7nyA.s:3899   .debug_str:00000000000003dd .LASF33
     /tmp/ccxK7nyA.s:4041   .debug_str:0000000000000821 .LASF27
     /tmp/ccxK7nyA.s:3777   .debug_str:0000000000000042 .LASF29
GAS LISTING /tmp/ccxK7nyA.s 			page 32


     /tmp/ccxK7nyA.s:3925   .debug_str:000000000000053f .LASF28
     /tmp/ccxK7nyA.s:3779   .debug_str:000000000000005d .LASF30
     /tmp/ccxK7nyA.s:3959   .debug_str:000000000000060b .LASF32
     /tmp/ccxK7nyA.s:3827   .debug_str:00000000000001e3 .LASF34
     /tmp/ccxK7nyA.s:3861   .debug_str:00000000000002d7 .LASF35
     /tmp/ccxK7nyA.s:4033   .debug_str:00000000000007e0 .LASF36
     /tmp/ccxK7nyA.s:4011   .debug_str:000000000000075d .LASF39
     /tmp/ccxK7nyA.s:4005   .debug_str:000000000000072d .LASF41
     /tmp/ccxK7nyA.s:3943   .debug_str:00000000000005a4 .LASF37
     /tmp/ccxK7nyA.s:3915   .debug_str:00000000000004ed .LASF38
     /tmp/ccxK7nyA.s:3931   .debug_str:000000000000055f .LASF40
     /tmp/ccxK7nyA.s:3933   .debug_str:0000000000000566 .LASF42
     /tmp/ccxK7nyA.s:3911   .debug_str:00000000000004d2 .LASF43
     /tmp/ccxK7nyA.s:3875   .debug_str:0000000000000352 .LASF44
     /tmp/ccxK7nyA.s:4035   .debug_str:00000000000007fa .LASF45
     /tmp/ccxK7nyA.s:3993   .debug_str:00000000000006c6 .LASF46
     /tmp/ccxK7nyA.s:3909   .debug_str:00000000000004ca .LASF47
     /tmp/ccxK7nyA.s:3913   .debug_str:00000000000004d9 .LASF48
     /tmp/ccxK7nyA.s:3887   .debug_str:000000000000039a .LASF49
     /tmp/ccxK7nyA.s:3935   .debug_str:0000000000000579 .LASF50
     /tmp/ccxK7nyA.s:4059   .debug_str:0000000000000885 .LASF51
     /tmp/ccxK7nyA.s:3865   .debug_str:00000000000002ea .LASF52
     /tmp/ccxK7nyA.s:3971   .debug_str:0000000000000662 .LASF53
     /tmp/ccxK7nyA.s:3955   .debug_str:00000000000005f1 .LASF54
     /tmp/ccxK7nyA.s:3957   .debug_str:0000000000000604 .LASF55
     /tmp/ccxK7nyA.s:3803   .debug_str:0000000000000135 .LASF56
     /tmp/ccxK7nyA.s:3823   .debug_str:00000000000001c7 .LASF57
     /tmp/ccxK7nyA.s:3855   .debug_str:00000000000002a0 .LASF58
     /tmp/ccxK7nyA.s:3863   .debug_str:00000000000002e4 .LASF59
     /tmp/ccxK7nyA.s:3819   .debug_str:00000000000001ac .LASF60
     /tmp/ccxK7nyA.s:3773   .debug_str:0000000000000024 .LASF61
     /tmp/ccxK7nyA.s:3951   .debug_str:00000000000005d2 .LASF62
     /tmp/ccxK7nyA.s:3945   .debug_str:00000000000005ad .LASF63
     /tmp/ccxK7nyA.s:4051   .debug_str:000000000000084e .LASF64
     /tmp/ccxK7nyA.s:4027   .debug_str:00000000000007c0 .LASF65
     /tmp/ccxK7nyA.s:4039   .debug_str:000000000000080b .LASF66
     /tmp/ccxK7nyA.s:4023   .debug_str:00000000000007b0 .LASF67
     /tmp/ccxK7nyA.s:3901   .debug_str:00000000000003f5 .LASF68
     /tmp/ccxK7nyA.s:3851   .debug_str:000000000000028f .LASF69
     /tmp/ccxK7nyA.s:3857   .debug_str:00000000000002b2 .LASF70
     /tmp/ccxK7nyA.s:4009   .debug_str:000000000000074e .LASF71
     /tmp/ccxK7nyA.s:3845   .debug_str:0000000000000252 .LASF72
     /tmp/ccxK7nyA.s:3923   .debug_str:000000000000052a .LASF73
     /tmp/ccxK7nyA.s:3871   .debug_str:000000000000031d .LASF74
     /tmp/ccxK7nyA.s:3941   .debug_str:000000000000059d .LASF75
     /tmp/ccxK7nyA.s:3769   .debug_str:0000000000000015 .LASF76
     /tmp/ccxK7nyA.s:3789   .debug_str:00000000000000ca .LASF77
     /tmp/ccxK7nyA.s:4007   .debug_str:0000000000000742 .LASF78
     /tmp/ccxK7nyA.s:3791   .debug_str:00000000000000d9 .LASF79
     /tmp/ccxK7nyA.s:3905   .debug_str:00000000000004ad .LASF80
     /tmp/ccxK7nyA.s:3849   .debug_str:000000000000027c .LASF81
     /tmp/ccxK7nyA.s:4021   .debug_str:000000000000079d .LASF82
     /tmp/ccxK7nyA.s:3797   .debug_str:0000000000000102 .LASF83
     /tmp/ccxK7nyA.s:3981   .debug_str:000000000000068d .LASF84
     /tmp/ccxK7nyA.s:3979   .debug_str:0000000000000685 .LASF111
     /tmp/ccxK7nyA.s:3853   .debug_str:000000000000029a .LASF86
     /tmp/ccxK7nyA.s:4019   .debug_str:0000000000000786 .LASF139
GAS LISTING /tmp/ccxK7nyA.s 			page 33


     /tmp/ccxK7nyA.s:3917   .debug_str:0000000000000502 .LASF140
     /tmp/ccxK7nyA.s:4047   .debug_str:0000000000000843 .LASF87
     /tmp/ccxK7nyA.s:3991   .debug_str:00000000000006b6 .LASF98
     /tmp/ccxK7nyA.s:3821   .debug_str:00000000000001be .LASF88
     /tmp/ccxK7nyA.s:3775   .debug_str:000000000000002f .LASF89
     /tmp/ccxK7nyA.s:3883   .debug_str:000000000000038b .LASF90
     /tmp/ccxK7nyA.s:3921   .debug_str:000000000000051a .LASF91
     /tmp/ccxK7nyA.s:3985   .debug_str:000000000000069c .LASF95
     /tmp/ccxK7nyA.s:3965   .debug_str:0000000000000637 .LASF92
     /tmp/ccxK7nyA.s:3929   .debug_str:0000000000000553 .LASF93
     /tmp/ccxK7nyA.s:3817   .debug_str:000000000000019c .LASF94
     /tmp/ccxK7nyA.s:3961   .debug_str:0000000000000619 .LASF96
     /tmp/ccxK7nyA.s:3897   .debug_str:00000000000003d0 .LASF100
     /tmp/ccxK7nyA.s:3889   .debug_str:00000000000003a2 .LASF102
     /tmp/ccxK7nyA.s:3787   .debug_str:00000000000000be .LASF97
     /tmp/ccxK7nyA.s:3999   .debug_str:0000000000000707 .LASF99
     /tmp/ccxK7nyA.s:4013   .debug_str:0000000000000766 .LASF101
     /tmp/ccxK7nyA.s:3805   .debug_str:0000000000000148 .LASF103
     /tmp/ccxK7nyA.s:4053   .debug_str:0000000000000866 .LASF104
     /tmp/ccxK7nyA.s:3837   .debug_str:000000000000022a .LASF105
     /tmp/ccxK7nyA.s:3767   .debug_str:0000000000000005 .LASF106
     /tmp/ccxK7nyA.s:3867   .debug_str:00000000000002fe .LASF107
     /tmp/ccxK7nyA.s:3995   .debug_str:00000000000006da .LASF108
     /tmp/ccxK7nyA.s:3811   .debug_str:000000000000017d .LASF141
     /tmp/ccxK7nyA.s:3783   .debug_str:000000000000008f .LASF142
     /tmp/ccxK7nyA.s:4057   .debug_str:000000000000087e .LASF143
     /tmp/ccxK7nyA.s:3795   .debug_str:00000000000000f1 .LASF144
     /tmp/ccxK7nyA.s:3765   .debug_str:0000000000000000 .LASF109
     /tmp/ccxK7nyA.s:4049   .debug_str:0000000000000849 .LASF110
     /tmp/ccxK7nyA.s:4003   .debug_str:0000000000000725 .LASF112
     /tmp/ccxK7nyA.s:3983   .debug_str:0000000000000692 .LASF113
     /tmp/ccxK7nyA.s:3977   .debug_str:000000000000067c .LASF114
     /tmp/ccxK7nyA.s:3895   .debug_str:00000000000003cb .LASF115
     /tmp/ccxK7nyA.s:847    .text:0000000000000354 .LFE23
     /tmp/ccxK7nyA.s:3406   .debug_loc:0000000000000000 .LLST10
     /tmp/ccxK7nyA.s:3969   .debug_str:000000000000065b .LASF116
     /tmp/ccxK7nyA.s:3429   .debug_loc:000000000000006f .LLST11
     /tmp/ccxK7nyA.s:3741   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccxK7nyA.s:3893   .debug_str:00000000000003c1 .LASF117
     /tmp/ccxK7nyA.s:3440   .debug_loc:00000000000000a5 .LLST12
     /tmp/ccxK7nyA.s:3989   .debug_str:00000000000006b1 .LASF118
     /tmp/ccxK7nyA.s:3463   .debug_loc:0000000000000114 .LLST13
     /tmp/ccxK7nyA.s:483    .text:0000000000000228 .LBB71
     /tmp/ccxK7nyA.s:558    .text:0000000000000260 .LBE71
     /tmp/ccxK7nyA.s:3470   .debug_loc:0000000000000137 .LLST15
     /tmp/ccxK7nyA.s:4029   .debug_str:00000000000007ca .LASF119
     /tmp/ccxK7nyA.s:3477   .debug_loc:000000000000015a .LLST16
     /tmp/ccxK7nyA.s:485    .text:0000000000000228 .LBB72
     /tmp/ccxK7nyA.s:501    .text:0000000000000234 .LBE72
     /tmp/ccxK7nyA.s:503    .text:0000000000000234 .LBB74
     /tmp/ccxK7nyA.s:519    .text:0000000000000240 .LBE74
     /tmp/ccxK7nyA.s:530    .text:0000000000000254 .LBB76
     /tmp/ccxK7nyA.s:541    .text:0000000000000258 .LBE76
     /tmp/ccxK7nyA.s:3484   .debug_loc:000000000000017d .LLST17
     /tmp/ccxK7nyA.s:543    .text:0000000000000258 .LBB78
     /tmp/ccxK7nyA.s:557    .text:0000000000000260 .LBE78
     /tmp/ccxK7nyA.s:3491   .debug_loc:00000000000001a0 .LLST18
GAS LISTING /tmp/ccxK7nyA.s 			page 34


     /tmp/ccxK7nyA.s:528    .text:0000000000000254 .LVL36
     /tmp/ccxK7nyA.s:661    .text:000000000000029c .LBB102
     /tmp/ccxK7nyA.s:685    .text:00000000000002b0 .LBE102
     /tmp/ccxK7nyA.s:3879   .debug_str:0000000000000373 .LASF120
     /tmp/ccxK7nyA.s:3498   .debug_loc:00000000000001c3 .LLST28
     /tmp/ccxK7nyA.s:4031   .debug_str:00000000000007d2 .LASF121
     /tmp/ccxK7nyA.s:3513   .debug_loc:00000000000001fd .LLST29
     /tmp/ccxK7nyA.s:677    .text:00000000000002ac .LVL48
     /tmp/ccxK7nyA.s:690    .text:00000000000002b4 .LBB98
     /tmp/ccxK7nyA.s:711    .text:00000000000002c4 .LBE98
     /tmp/ccxK7nyA.s:3793   .debug_str:00000000000000ec .LASF122
     /tmp/ccxK7nyA.s:3520   .debug_loc:0000000000000220 .LLST26
     /tmp/ccxK7nyA.s:3785   .debug_str:00000000000000b7 .LASF123
     /tmp/ccxK7nyA.s:3532   .debug_loc:0000000000000257 .LLST27
     /tmp/ccxK7nyA.s:703    .text:00000000000002c0 .LVL51
     /tmp/ccxK7nyA.s:3877   .debug_str:0000000000000365 .LASF124
     /tmp/ccxK7nyA.s:3539   .debug_loc:000000000000027a .LLST22
     /tmp/ccxK7nyA.s:3550   .debug_loc:00000000000002b0 .LLST23
     /tmp/ccxK7nyA.s:3963   .debug_str:000000000000062a .LASF125
     /tmp/ccxK7nyA.s:3561   .debug_loc:00000000000002e6 .LLST24
     /tmp/ccxK7nyA.s:4043   .debug_str:000000000000082d .LASF126
     /tmp/ccxK7nyA.s:3572   .debug_loc:000000000000031c .LLST25
     /tmp/ccxK7nyA.s:744    .text:00000000000002e0 .LVL56
     /tmp/ccxK7nyA.s:752    .text:00000000000002f8 .LVL57
     /tmp/ccxK7nyA.s:834    .text:0000000000000348 .LVL64
     /tmp/ccxK7nyA.s:780    .text:0000000000000310 .LBB89
     /tmp/ccxK7nyA.s:828    .text:000000000000033c .LBE89
     /tmp/ccxK7nyA.s:3579   .debug_loc:000000000000033f .LLST20
     /tmp/ccxK7nyA.s:782    .text:0000000000000310 .LBB90
     /tmp/ccxK7nyA.s:799    .text:000000000000031c .LBE90
     /tmp/ccxK7nyA.s:811    .text:0000000000000330 .LBB92
     /tmp/ccxK7nyA.s:827    .text:000000000000033c .LBE92
     /tmp/ccxK7nyA.s:3586   .debug_loc:0000000000000362 .LLST21
     /tmp/ccxK7nyA.s:808    .text:0000000000000330 .LVL61
     /tmp/ccxK7nyA.s:424    .text:00000000000001f0 .LBB69
     /tmp/ccxK7nyA.s:432    .text:00000000000001f4 .LBE69
     /tmp/ccxK7nyA.s:3593   .debug_loc:0000000000000385 .LLST14
     /tmp/ccxK7nyA.s:439    .text:00000000000001f8 .LBB80
     /tmp/ccxK7nyA.s:452    .text:0000000000000200 .LBE80
     /tmp/ccxK7nyA.s:3600   .debug_loc:00000000000003a8 .LLST19
     /tmp/ccxK7nyA.s:571    .text:0000000000000264 .LBB83
     /tmp/ccxK7nyA.s:588    .text:0000000000000270 .LBE83
     /tmp/ccxK7nyA.s:640    .text:0000000000000294 .LBB107
     /tmp/ccxK7nyA.s:651    .text:0000000000000298 .LBE107
     /tmp/ccxK7nyA.s:3608   .debug_loc:00000000000003cc .LLST30
     /tmp/ccxK7nyA.s:384    .text:00000000000001ac .LBB64
     /tmp/ccxK7nyA.s:400    .text:00000000000001b8 .LBE64
     /tmp/ccxK7nyA.s:838    .text:0000000000000354 .LVL65
     /tmp/ccxK7nyA.s:199    .text:00000000000000b4 .LFB22
     /tmp/ccxK7nyA.s:343    .text:0000000000000180 .LFE22
     /tmp/ccxK7nyA.s:3615   .debug_loc:00000000000003ef .LLST4
     /tmp/ccxK7nyA.s:3629   .debug_loc:0000000000000428 .LLST5
     /tmp/ccxK7nyA.s:4001   .debug_str:000000000000071e .LASF127
     /tmp/ccxK7nyA.s:3636   .debug_loc:000000000000044b .LLST6
     /tmp/ccxK7nyA.s:3658   .debug_loc:00000000000004aa .LLST7
     /tmp/ccxK7nyA.s:216    .text:00000000000000cc .LBB58
     /tmp/ccxK7nyA.s:232    .text:00000000000000d8 .LBE58
GAS LISTING /tmp/ccxK7nyA.s 			page 35


     /tmp/ccxK7nyA.s:234    .text:00000000000000d8 .LBB60
     /tmp/ccxK7nyA.s:246    .text:00000000000000e0 .LBE60
     /tmp/ccxK7nyA.s:3680   .debug_loc:00000000000004eb .LLST8
     /tmp/ccxK7nyA.s:317    .text:0000000000000164 .LBB62
     /tmp/ccxK7nyA.s:328    .text:0000000000000168 .LBE62
     /tmp/ccxK7nyA.s:3688   .debug_loc:000000000000050f .LLST9
     /tmp/ccxK7nyA.s:301    .text:0000000000000144 .LVL21
     /tmp/ccxK7nyA.s:308    .text:0000000000000158 .LVL22
     /tmp/ccxK7nyA.s:86     .text:0000000000000044 .LFB21
     /tmp/ccxK7nyA.s:188    .text:00000000000000b4 .LFE21
     /tmp/ccxK7nyA.s:3973   .debug_str:0000000000000669 .LASF128
     /tmp/ccxK7nyA.s:3695   .debug_loc:0000000000000532 .LLST0
     /tmp/ccxK7nyA.s:3706   .debug_loc:0000000000000568 .LLST1
     /tmp/ccxK7nyA.s:104    .text:0000000000000060 .LBB52
     /tmp/ccxK7nyA.s:120    .text:000000000000006c .LBE52
     /tmp/ccxK7nyA.s:122    .text:000000000000006c .LBB54
     /tmp/ccxK7nyA.s:135    .text:0000000000000074 .LBE54
     /tmp/ccxK7nyA.s:3713   .debug_loc:000000000000058b .LLST2
     /tmp/ccxK7nyA.s:161    .text:0000000000000098 .LBB56
     /tmp/ccxK7nyA.s:172    .text:000000000000009c .LBE56
     /tmp/ccxK7nyA.s:3721   .debug_loc:00000000000005af .LLST3
     /tmp/ccxK7nyA.s:145    .text:0000000000000084 .LVL5
     /tmp/ccxK7nyA.s:51     .text:0000000000000024 .LFB20
     /tmp/ccxK7nyA.s:80     .text:0000000000000044 .LFE20
     /tmp/ccxK7nyA.s:10     .text:0000000000000000 .LFB19
     /tmp/ccxK7nyA.s:45     .text:0000000000000024 .LFE19
     /tmp/ccxK7nyA.s:24     .text:0000000000000014 .LBB50
     /tmp/ccxK7nyA.s:36     .text:0000000000000018 .LBE50
     /tmp/ccxK7nyA.s:3813   .debug_str:000000000000018b .LASF145
     /tmp/ccxK7nyA.s:4017   .debug_str:0000000000000781 .LASF129
     /tmp/ccxK7nyA.s:3841   .debug_str:000000000000023c .LASF130
     /tmp/ccxK7nyA.s:3949   .debug_str:00000000000005c6 .LASF131
     /tmp/ccxK7nyA.s:3835   .debug_str:0000000000000222 .LASF133
     /tmp/ccxK7nyA.s:4055   .debug_str:0000000000000873 .LASF132
     /tmp/ccxK7nyA.s:3839   .debug_str:0000000000000236 .LASF134
     /tmp/ccxK7nyA.s:4045   .debug_str:0000000000000834 .LASF146
     /tmp/ccxK7nyA.s:3781   .debug_str:0000000000000077 .LASF147
     /tmp/ccxK7nyA.s:3891   .debug_str:00000000000003ba .LASF135
     /tmp/ccxK7nyA.s:381    .text:00000000000001ac .LVL26
     /tmp/ccxK7nyA.s:435    .text:00000000000001f8 .LVL31
     /tmp/ccxK7nyA.s:477    .text:0000000000000228 .LVL33
     /tmp/ccxK7nyA.s:517    .text:0000000000000240 .LVL35
     /tmp/ccxK7nyA.s:554    .text:0000000000000260 .LVL38
     /tmp/ccxK7nyA.s:633    .text:0000000000000294 .LVL43
     /tmp/ccxK7nyA.s:656    .text:000000000000029c .LVL45
     /tmp/ccxK7nyA.s:797    .text:000000000000031c .LVL60
     /tmp/ccxK7nyA.s:822    .text:0000000000000338 .LVL62
     /tmp/ccxK7nyA.s:398    .text:00000000000001b8 .LVL27
     /tmp/ccxK7nyA.s:414    .text:00000000000001d8 .LVL28
     /tmp/ccxK7nyA.s:580    .text:0000000000000268 .LVL40
     /tmp/ccxK7nyA.s:568    .text:0000000000000264 .LVL39
     /tmp/ccxK7nyA.s:687    .text:00000000000002b4 .LVL49
     /tmp/ccxK7nyA.s:713    .text:00000000000002c8 .LVL52
     /tmp/ccxK7nyA.s:776    .text:0000000000000310 .LVL58
     /tmp/ccxK7nyA.s:791    .text:0000000000000314 .LVL59
     /tmp/ccxK7nyA.s:586    .text:0000000000000270 .LVL41
     /tmp/ccxK7nyA.s:825    .text:000000000000033c .LVL63
GAS LISTING /tmp/ccxK7nyA.s 			page 36


     /tmp/ccxK7nyA.s:499    .text:0000000000000234 .LVL34
     /tmp/ccxK7nyA.s:538    .text:0000000000000258 .LVL37
     /tmp/ccxK7nyA.s:669    .text:00000000000002a0 .LVL46
     /tmp/ccxK7nyA.s:675    .text:00000000000002a4 .LVL47
     /tmp/ccxK7nyA.s:698    .text:00000000000002b8 .LVL50
     /tmp/ccxK7nyA.s:732    .text:00000000000002d0 .LVL54
     /tmp/ccxK7nyA.s:738    .text:00000000000002d4 .LVL55
     /tmp/ccxK7nyA.s:726    .text:00000000000002cc .LVL53
     /tmp/ccxK7nyA.s:423    .text:00000000000001f0 .LVL29
     /tmp/ccxK7nyA.s:430    .text:00000000000001f4 .LVL30
     /tmp/ccxK7nyA.s:448    .text:0000000000000200 .LVL32
     /tmp/ccxK7nyA.s:648    .text:0000000000000298 .LVL44
     /tmp/ccxK7nyA.s:202    .text:00000000000000b4 .LVL11
     /tmp/ccxK7nyA.s:256    .text:00000000000000e4 .LVL14
     /tmp/ccxK7nyA.s:230    .text:00000000000000d8 .LVL12
     /tmp/ccxK7nyA.s:312    .text:000000000000015c .LVL23
     /tmp/ccxK7nyA.s:260    .text:00000000000000e8 .LVL15
     /tmp/ccxK7nyA.s:267    .text:00000000000000f0 .LVL16
     /tmp/ccxK7nyA.s:278    .text:0000000000000114 .LVL17
     /tmp/ccxK7nyA.s:288    .text:0000000000000128 .LVL19
     /tmp/ccxK7nyA.s:293    .text:000000000000012c .LVL20
     /tmp/ccxK7nyA.s:284    .text:0000000000000120 .LVL18
     /tmp/ccxK7nyA.s:243    .text:00000000000000e0 .LVL13
     /tmp/ccxK7nyA.s:316    .text:0000000000000164 .LVL24
     /tmp/ccxK7nyA.s:325    .text:0000000000000168 .LVL25
     /tmp/ccxK7nyA.s:89     .text:0000000000000044 .LVL2
     /tmp/ccxK7nyA.s:131    .text:0000000000000074 .LVL4
     /tmp/ccxK7nyA.s:181    .text:00000000000000a8 .LVL10
     /tmp/ccxK7nyA.s:118    .text:000000000000006c .LVL3
     /tmp/ccxK7nyA.s:156    .text:0000000000000090 .LVL7
     /tmp/ccxK7nyA.s:160    .text:0000000000000098 .LVL8
     /tmp/ccxK7nyA.s:169    .text:000000000000009c .LVL9
     /tmp/ccxK7nyA.s:886    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccxK7nyA.s:409    .text:00000000000001d0 .LBB67
     /tmp/ccxK7nyA.s:453    .text:0000000000000200 .LBE67
     /tmp/ccxK7nyA.s:481    .text:0000000000000228 .LBB110
     /tmp/ccxK7nyA.s:598    .text:000000000000027c .LBE110
     /tmp/ccxK7nyA.s:602    .text:000000000000027c .LBB111
     /tmp/ccxK7nyA.s:609    .text:0000000000000284 .LBE111
     /tmp/ccxK7nyA.s:613    .text:0000000000000284 .LBB112
     /tmp/ccxK7nyA.s:622    .text:000000000000028c .LBE112
     /tmp/ccxK7nyA.s:626    .text:000000000000028c .LBB113
     /tmp/ccxK7nyA.s:652    .text:0000000000000298 .LBE113
     /tmp/ccxK7nyA.s:659    .text:000000000000029c .LBB114
     /tmp/ccxK7nyA.s:844    .text:0000000000000354 .LBE114
     /tmp/ccxK7nyA.s:716    .text:00000000000002c8 .LBB94
     /tmp/ccxK7nyA.s:778    .text:0000000000000310 .LBE94
     /tmp/ccxK7nyA.s:830    .text:000000000000033c .LBB96
     /tmp/ccxK7nyA.s:840    .text:0000000000000354 .LBE96
     /tmp/ccxK7nyA.s:850    .gcc_except_table:0000000000000000 .LLSDA23

UNDEFINED SYMBOLS
_ZN5Riscv14supervisorTrapEv
__putc
_ZN3PCB16timeSliceCounterE
_ZN3PCB7runningE
_ZN3PCB8dispatchEv
GAS LISTING /tmp/ccxK7nyA.s 			page 37


_Z7kmallocm
_Z5kfreePv
_ZN3PCBnwEm
_ZN3PCBC1EPFvPvES0_S0_
_ZN3PCBdlEPv
_Unwind_Resume
__gxx_personality_v0
