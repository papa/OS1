GAS LISTING /tmp/ccr4ENLm.s 			page 1


   1              		.file	"Riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10initSystemEv
   9              	_ZN5Riscv10initSystemEv:
  10              	.LFB23:
  11              		.file 1 "src/Riscv.cpp"
   1:src/Riscv.cpp **** //
   2:src/Riscv.cpp **** // Created by os on 4/27/22.
   3:src/Riscv.cpp **** //
   4:src/Riscv.cpp **** 
   5:src/Riscv.cpp **** #include "../h/Riscv.hpp"
   6:src/Riscv.cpp **** #include "../h/MemoryAllocator.hpp"
   7:src/Riscv.cpp **** #include "../h/PCB.hpp"
   8:src/Riscv.cpp **** #include "../lib/console.h"
   9:src/Riscv.cpp **** #include "../h/syscall_cpp.hpp"
  10:src/Riscv.cpp **** #include "../h/SleepPCBList.hpp"
  11:src/Riscv.cpp **** 
  12:src/Riscv.cpp **** //todo
  13:src/Riscv.cpp **** //sta sve treba da se odradi ovde
  14:src/Riscv.cpp **** void Riscv::initSystem()
  15:src/Riscv.cpp **** {
  12              		.loc 1 15 1
  13              		.cfi_startproc
  14              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
  15              		.cfi_lsda 0x1b,.LLSDA23
  16 0000 130101FE 		addi	sp,sp,-32
  17              		.cfi_def_cfa_offset 32
  18 0004 233C1100 		sd	ra,24(sp)
  19 0008 23388100 		sd	s0,16(sp)
  20 000c 23349100 		sd	s1,8(sp)
  21 0010 23302101 		sd	s2,0(sp)
  22              		.cfi_offset 1, -8
  23              		.cfi_offset 8, -16
  24              		.cfi_offset 9, -24
  25              		.cfi_offset 18, -32
  26 0014 13040102 		addi	s0,sp,32
  27              		.cfi_def_cfa 8, 0
  16:src/Riscv.cpp ****     w_stvec((uint64)&Riscv::supervisorTrap);
  28              		.loc 1 16 5
  29              		.loc 1 16 12 is_stmt 0
  30 0018 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
  30      83B70700 
  31              	.LVL0:
  32              	.LBB82:
  33              	.LBB83:
  34              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 4/27/22.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_0_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_0_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/ccr4ENLm.s 			page 2


   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** class Riscv
  11:src/../h/Riscv.hpp **** {
  12:src/../h/Riscv.hpp **** private:
  13:src/../h/Riscv.hpp **** 
  14:src/../h/Riscv.hpp **** public:
  15:src/../h/Riscv.hpp ****     static void initSystem();
  16:src/../h/Riscv.hpp ****     static void endSystem();
  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp ****     static void enableInterrupts();
  19:src/../h/Riscv.hpp **** 
  20:src/../h/Riscv.hpp ****     static void disableInterrupts();
  21:src/../h/Riscv.hpp **** 
  22:src/../h/Riscv.hpp ****     static void printString(char const *string);
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp ****     static void printInteger(uint64 num);
  25:src/../h/Riscv.hpp **** 
  26:src/../h/Riscv.hpp ****     static void pushRegisters();
  27:src/../h/Riscv.hpp ****     static void popRegisters();
  28:src/../h/Riscv.hpp **** 
  29:src/../h/Riscv.hpp ****     static uint64 r_scause();
  30:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  31:src/../h/Riscv.hpp **** 
  32:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  33:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
  34:src/../h/Riscv.hpp **** 
  35:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  36:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  37:src/../h/Riscv.hpp **** 
  38:src/../h/Riscv.hpp ****     static uint64 r_stval();
  39:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  40:src/../h/Riscv.hpp **** 
  41:src/../h/Riscv.hpp ****     enum BitMaskSip
  42:src/../h/Riscv.hpp ****     {
  43:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  44:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  45:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9),
  46:src/../h/Riscv.hpp ****     };
  47:src/../h/Riscv.hpp **** 
  48:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  49:src/../h/Riscv.hpp **** 
  50:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  51:src/../h/Riscv.hpp **** 
  52:src/../h/Riscv.hpp ****     static uint64 r_sip();
  53:src/../h/Riscv.hpp **** 
  54:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  55:src/../h/Riscv.hpp **** 
  56:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  57:src/../h/Riscv.hpp ****     {
  58:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  59:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  60:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  61:src/../h/Riscv.hpp ****     };
  62:src/../h/Riscv.hpp **** 
  63:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  64:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/ccr4ENLm.s 			page 3


  65:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  66:src/../h/Riscv.hpp **** 
  67:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  68:src/../h/Riscv.hpp **** 
  69:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp ****     static void popSppSpie();
  72:src/../h/Riscv.hpp **** 
  73:src/../h/Riscv.hpp ****     static void supervisorTrap();
  74:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  75:src/../h/Riscv.hpp **** 
  76:src/../h/Riscv.hpp ****     static const uint64 bntOne = 1UL << 63;;
  77:src/../h/Riscv.hpp ****     static const uint64 bntZero = 0UL;
  78:src/../h/Riscv.hpp ****     static const uint64 timerInterrupt = bntOne + 1UL;
  79:src/../h/Riscv.hpp ****     static const uint64 hwInterrupt = bntOne + 9UL;
  80:src/../h/Riscv.hpp ****     static const uint64 operationInterrupt = bntZero + 2UL;
  81:src/../h/Riscv.hpp ****     static const uint64 addrReadInterrupt = bntZero + 5UL;
  82:src/../h/Riscv.hpp ****     static const uint64 addrWriteInterrupt = bntZero + 7UL;
  83:src/../h/Riscv.hpp ****     static const uint64 ecallUserInterrupt = bntZero + 8UL;
  84:src/../h/Riscv.hpp ****     static const uint64 ecallSystemInterupt = bntZero + 9UL;
  85:src/../h/Riscv.hpp **** };
  86:src/../h/Riscv.hpp **** 
  87:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause() {
  88:src/../h/Riscv.hpp ****     uint64 volatile scause;
  89:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
  90:src/../h/Riscv.hpp ****     return scause;
  91:src/../h/Riscv.hpp **** }
  92:src/../h/Riscv.hpp **** 
  93:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
  94:src/../h/Riscv.hpp ****     __asm__ volatile("csrw scause, %0" : :"r"(scause));
  95:src/../h/Riscv.hpp **** }
  96:src/../h/Riscv.hpp **** 
  97:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc() {
  98:src/../h/Riscv.hpp ****     uint64 volatile sepc;
  99:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 100:src/../h/Riscv.hpp ****     return sepc;
 101:src/../h/Riscv.hpp **** }
 102:src/../h/Riscv.hpp **** 
 103:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
 104:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sepc, %0" : :"r"(sepc));
 105:src/../h/Riscv.hpp **** }
 106:src/../h/Riscv.hpp **** 
 107:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec() {
 108:src/../h/Riscv.hpp ****     uint64 volatile stvec;
 109:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, stvec" : "=r"(stvec));
 110:src/../h/Riscv.hpp ****     return stvec;
 111:src/../h/Riscv.hpp **** }
 112:src/../h/Riscv.hpp **** 
 113:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 114:src/../h/Riscv.hpp ****     __asm__ volatile("csrw stvec, %0" : :"r"(stvec));
  35              		.loc 2 114 5 is_stmt 1
  36              		.loc 2 114 53 is_stmt 0
  37              	#APP
  38              	# 114 "src/../h/Riscv.hpp" 1
 115              	}
  39              		csrw stvec, a5
  40              	# 0 "" 2
GAS LISTING /tmp/ccr4ENLm.s 			page 4


  41              	.LVL1:
  42              	#NO_APP
  43              	.LBE83:
  44              	.LBE82:
  17:src/Riscv.cpp ****     Thread* t = new Thread(0, 0);
  45              		.loc 1 17 5 is_stmt 1
  46              		.loc 1 17 32 is_stmt 0
  47 0024 13050002 		li	a0,32
  48              	.LEHB0:
  49 0028 97000000 		call	_Znwm@plt
  49      E7800000 
  50              	.LVL2:
  51              	.LEHE0:
  52 0030 93040500 		mv	s1,a0
  53 0034 13060000 		li	a2,0
  54 0038 93050000 		li	a1,0
  55              	.LEHB1:
  56 003c 97000000 		call	_ZN6ThreadC1EPFvPvES0_@plt
  56      E7800000 
  57              	.LVL3:
  58              	.LEHE1:
  18:src/Riscv.cpp ****     t->start();
  59              		.loc 1 18 5 is_stmt 1 discriminator 2
  60              		.loc 1 18 13 is_stmt 0 discriminator 2
  61 0044 13850400 		mv	a0,s1
  62              	.LEHB2:
  63 0048 97000000 		call	_ZN6Thread5startEv@plt
  63      E7800000 
  64              	.LVL4:
  19:src/Riscv.cpp ****     PCB::running = Scheduler::get();
  65              		.loc 1 19 5 is_stmt 1 discriminator 2
  66              		.loc 1 19 34 is_stmt 0 discriminator 2
  67 0050 97000000 		call	_ZN9Scheduler3getEv@plt
  67      E7800000 
  68              	.LVL5:
  69              	.LEHE2:
  70              		.loc 1 19 18 discriminator 2
  71 0058 97070000 		la	a5,_ZN3PCB7runningE
  71      83B70700 
  72 0060 23B0A700 		sd	a0,0(a5)
  20:src/Riscv.cpp ****     PCB::running->setState(PCB::RUNNING);
  73              		.loc 1 20 5 is_stmt 1 discriminator 2
  74              	.LVL6:
  75              	.LBB84:
  76              	.LBB85:
  77              		.file 3 "src/../h/PCB.hpp"
   1:src/../h/PCB.hpp **** //
   2:src/../h/PCB.hpp **** // Created by os on 4/27/22.
   3:src/../h/PCB.hpp **** //
   4:src/../h/PCB.hpp **** 
   5:src/../h/PCB.hpp **** #ifndef PROJECT_BASE_V1_0_PCB_HPP
   6:src/../h/PCB.hpp **** #define PROJECT_BASE_V1_0_PCB_HPP
   7:src/../h/PCB.hpp **** 
   8:src/../h/PCB.hpp **** #include "../lib/hw.h"
   9:src/../h/PCB.hpp **** #include "Scheduler.hpp"
  10:src/../h/PCB.hpp **** #include "Riscv.hpp"
  11:src/../h/PCB.hpp **** 
GAS LISTING /tmp/ccr4ENLm.s 			page 5


  12:src/../h/PCB.hpp **** class PCB
  13:src/../h/PCB.hpp **** {
  14:src/../h/PCB.hpp **** public:
  15:src/../h/PCB.hpp ****     using Body = void (*)(void*);
  16:src/../h/PCB.hpp **** 
  17:src/../h/PCB.hpp ****     PCB(Body body,  void* args, void* stack_space, uint64 timeSlice);
  18:src/../h/PCB.hpp ****     ~PCB();
  19:src/../h/PCB.hpp **** 
  20:src/../h/PCB.hpp ****     void start();
  21:src/../h/PCB.hpp ****     static void dispatch();
  22:src/../h/PCB.hpp ****     static void sleep(time_t);
  23:src/../h/PCB.hpp **** 
  24:src/../h/PCB.hpp ****     static PCB* running;
  25:src/../h/PCB.hpp ****     static PCB* exitingPCB;
  26:src/../h/PCB.hpp **** 
  27:src/../h/PCB.hpp ****     static uint64 timeSliceCounter;
  28:src/../h/PCB.hpp ****     uint64 getTimeSlice() { return timeSlice;}
  29:src/../h/PCB.hpp **** 
  30:src/../h/PCB.hpp ****     void* operator new(size_t size);
  31:src/../h/PCB.hpp ****     void operator delete(void *p);
  32:src/../h/PCB.hpp **** 
  33:src/../h/PCB.hpp ****     enum State{READY, RUNNING, SUSPENDED, FINISHED, EXITING, SLEEPING};
  34:src/../h/PCB.hpp ****     State getState() {return state;}
  35:src/../h/PCB.hpp ****     void setState(State s) {state = s;}
  78              		.loc 3 35 29 discriminator 2
  79              		.loc 3 35 35 is_stmt 0 discriminator 2
  80 0064 93071000 		li	a5,1
  81 0068 2328F502 		sw	a5,48(a0)
  82              	.LVL7:
  83              	.LBE85:
  84              	.LBE84:
  21:src/Riscv.cpp **** }
  85              		.loc 1 21 1 discriminator 2
  86 006c 83308101 		ld	ra,24(sp)
  87              		.cfi_remember_state
  88              		.cfi_restore 1
  89 0070 03340101 		ld	s0,16(sp)
  90              		.cfi_restore 8
  91              		.cfi_def_cfa 2, 32
  92 0074 83348100 		ld	s1,8(sp)
  93              		.cfi_restore 9
  94              	.LVL8:
  95 0078 03390100 		ld	s2,0(sp)
  96              		.cfi_restore 18
  97 007c 13010102 		addi	sp,sp,32
  98              		.cfi_def_cfa_offset 0
  99 0080 67800000 		jr	ra
 100              	.L3:
 101              		.cfi_restore_state
 102 0084 13090500 		mv	s2,a0
  17:src/Riscv.cpp ****     t->start();
 103              		.loc 1 17 32
 104 0088 13850400 		mv	a0,s1
 105 008c 97000000 		call	_ZdlPv@plt
 105      E7800000 
 106              	.LVL9:
 107 0094 13050900 		mv	a0,s2
GAS LISTING /tmp/ccr4ENLm.s 			page 6


 108              	.LEHB3:
 109 0098 97000000 		call	_Unwind_Resume@plt
 109      E7800000 
 110              	.LVL10:
 111              	.LEHE3:
 112              		.cfi_endproc
 113              	.LFE23:
 114              		.globl	__gxx_personality_v0
 115              		.section	.gcc_except_table,"a",@progbits
 116              	.LLSDA23:
 117 0000 FF       		.byte	0xff
 118 0001 FF       		.byte	0xff
 119 0002 03       		.byte	0x3
 120 0003 34       		.byte	0x34
 121 0004 00000000 		.4byte	.LEHB0-.LFB23
 122 0008 00000000 		.4byte	.LEHE0-.LEHB0
 123 000c 00000000 		.4byte	0
 124 0010 00       		.byte	0
 125 0011 00000000 		.4byte	.LEHB1-.LFB23
 126 0015 00000000 		.4byte	.LEHE1-.LEHB1
 127 0019 00000000 		.4byte	.L3-.LFB23
 128 001d 00       		.byte	0
 129 001e 00000000 		.4byte	.LEHB2-.LFB23
 130 0022 00000000 		.4byte	.LEHE2-.LEHB2
 131 0026 00000000 		.4byte	0
 132 002a 00       		.byte	0
 133 002b 00000000 		.4byte	.LEHB3-.LFB23
 134 002f 00000000 		.4byte	.LEHE3-.LEHB3
 135 0033 00000000 		.4byte	0
 136 0037 00       		.byte	0
 137              		.text
 139              		.align	2
 140              		.globl	_ZN5Riscv16enableInterruptsEv
 142              	_ZN5Riscv16enableInterruptsEv:
 143              	.LFB25:
  22:src/Riscv.cpp **** 
  23:src/Riscv.cpp **** void Riscv::endSystem() {
  24:src/Riscv.cpp ****     //todo
  25:src/Riscv.cpp ****     //da li treba jos nesto da se ocisti
  26:src/Riscv.cpp ****     Riscv::disableInterrupts();
  27:src/Riscv.cpp **** }
  28:src/Riscv.cpp **** 
  29:src/Riscv.cpp **** 
  30:src/Riscv.cpp **** void Riscv::enableInterrupts() {
 144              		.loc 1 30 32 is_stmt 1
 145              		.cfi_startproc
 146 00a0 130101FF 		addi	sp,sp,-16
 147              		.cfi_def_cfa_offset 16
 148 00a4 23348100 		sd	s0,8(sp)
 149              		.cfi_offset 8, -8
 150 00a8 13040101 		addi	s0,sp,16
 151              		.cfi_def_cfa 8, 0
  31:src/Riscv.cpp ****     ms_sstatus(Riscv::SSTATUS_SIE);
 152              		.loc 1 31 5
 153              	.LVL11:
 154              	.LBB86:
 155              	.LBB87:
GAS LISTING /tmp/ccr4ENLm.s 			page 7


 116:src/../h/Riscv.hpp **** 
 117:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stval() {
 118:src/../h/Riscv.hpp ****     uint64 volatile stval;
 119:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, stval" : "=r"(stval));
 120:src/../h/Riscv.hpp ****     return stval;
 121:src/../h/Riscv.hpp **** }
 122:src/../h/Riscv.hpp **** 
 123:src/../h/Riscv.hpp **** inline void Riscv::w_stval(uint64 stval) {
 124:src/../h/Riscv.hpp ****     __asm__ volatile("csrw stval, %0" : :"r"(stval));
 125:src/../h/Riscv.hpp **** }
 126:src/../h/Riscv.hpp **** 
 127:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 128:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sip, %0" : :"r"(mask));
 129:src/../h/Riscv.hpp **** }
 130:src/../h/Riscv.hpp **** 
 131:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 132:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sip, %0" : :"r"(mask));
 133:src/../h/Riscv.hpp **** }
 134:src/../h/Riscv.hpp **** 
 135:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip() {
 136:src/../h/Riscv.hpp ****     uint64 volatile sip;
 137:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sip" : "=r"(sip));
 138:src/../h/Riscv.hpp ****     return sip;
 139:src/../h/Riscv.hpp **** }
 140:src/../h/Riscv.hpp **** 
 141:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 142:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sip, %0" : :"r"(sip));
 143:src/../h/Riscv.hpp **** }
 144:src/../h/Riscv.hpp **** 
 145:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 146:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sstatus, %0" : :"r"(mask));
 156              		.loc 2 146 5
 157              		.loc 2 146 54 is_stmt 0
 158 00ac 93072000 		li	a5,2
 159              	#APP
 160              	# 146 "src/../h/Riscv.hpp" 1
 147              	}
 161              		csrs sstatus, a5
 162              	# 0 "" 2
 163              	.LVL12:
 164              	#NO_APP
 165              	.LBE87:
 166              	.LBE86:
  32:src/Riscv.cpp **** }
 167              		.loc 1 32 1
 168 00b4 03348100 		ld	s0,8(sp)
 169              		.cfi_restore 8
 170              		.cfi_def_cfa 2, 16
 171 00b8 13010101 		addi	sp,sp,16
 172              		.cfi_def_cfa_offset 0
 173 00bc 67800000 		jr	ra
 174              		.cfi_endproc
 175              	.LFE25:
 177              		.align	2
 178              		.globl	_ZN5Riscv17disableInterruptsEv
 180              	_ZN5Riscv17disableInterruptsEv:
 181              	.LFB26:
GAS LISTING /tmp/ccr4ENLm.s 			page 8


  33:src/Riscv.cpp **** 
  34:src/Riscv.cpp **** void Riscv::disableInterrupts()
  35:src/Riscv.cpp **** {
 182              		.loc 1 35 1 is_stmt 1
 183              		.cfi_startproc
 184 00c0 130101FF 		addi	sp,sp,-16
 185              		.cfi_def_cfa_offset 16
 186 00c4 23348100 		sd	s0,8(sp)
 187              		.cfi_offset 8, -8
 188 00c8 13040101 		addi	s0,sp,16
 189              		.cfi_def_cfa 8, 0
  36:src/Riscv.cpp ****     mc_sstatus(Riscv::SSTATUS_SIE);
 190              		.loc 1 36 5
 191              	.LVL13:
 192              	.LBB88:
 193              	.LBB89:
 148:src/../h/Riscv.hpp **** 
 149:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 150:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sstatus, %0" : :"r"(mask));
 194              		.loc 2 150 5
 195              		.loc 2 150 54 is_stmt 0
 196 00cc 93072000 		li	a5,2
 197              	#APP
 198              	# 150 "src/../h/Riscv.hpp" 1
 151              	}
 199              		csrc sstatus, a5
 200              	# 0 "" 2
 201              	.LVL14:
 202              	#NO_APP
 203              	.LBE89:
 204              	.LBE88:
  37:src/Riscv.cpp **** }
 205              		.loc 1 37 1
 206 00d4 03348100 		ld	s0,8(sp)
 207              		.cfi_restore 8
 208              		.cfi_def_cfa 2, 16
 209 00d8 13010101 		addi	sp,sp,16
 210              		.cfi_def_cfa_offset 0
 211 00dc 67800000 		jr	ra
 212              		.cfi_endproc
 213              	.LFE26:
 215              		.align	2
 216              		.globl	_ZN5Riscv9endSystemEv
 218              	_ZN5Riscv9endSystemEv:
 219              	.LFB24:
  23:src/Riscv.cpp ****     //todo
 220              		.loc 1 23 25 is_stmt 1
 221              		.cfi_startproc
 222 00e0 130101FF 		addi	sp,sp,-16
 223              		.cfi_def_cfa_offset 16
 224 00e4 23341100 		sd	ra,8(sp)
 225 00e8 23308100 		sd	s0,0(sp)
 226              		.cfi_offset 1, -8
 227              		.cfi_offset 8, -16
 228 00ec 13040101 		addi	s0,sp,16
 229              		.cfi_def_cfa 8, 0
  26:src/Riscv.cpp **** }
GAS LISTING /tmp/ccr4ENLm.s 			page 9


 230              		.loc 1 26 5
  26:src/Riscv.cpp **** }
 231              		.loc 1 26 29 is_stmt 0
 232 00f0 97000000 		call	_ZN5Riscv17disableInterruptsEv
 232      E7800000 
 233              	.LVL15:
  27:src/Riscv.cpp **** 
 234              		.loc 1 27 1
 235 00f8 83308100 		ld	ra,8(sp)
 236              		.cfi_restore 1
 237 00fc 03340100 		ld	s0,0(sp)
 238              		.cfi_restore 8
 239              		.cfi_def_cfa 2, 16
 240 0100 13010101 		addi	sp,sp,16
 241              		.cfi_def_cfa_offset 0
 242 0104 67800000 		jr	ra
 243              		.cfi_endproc
 244              	.LFE24:
 246              		.align	2
 247              		.globl	_ZN5Riscv10popSppSpieEv
 249              	_ZN5Riscv10popSppSpieEv:
 250              	.LFB27:
  38:src/Riscv.cpp **** 
  39:src/Riscv.cpp **** void Riscv::popSppSpie() {
 251              		.loc 1 39 26 is_stmt 1
 252              		.cfi_startproc
 253 0108 130101FF 		addi	sp,sp,-16
 254              		.cfi_def_cfa_offset 16
 255 010c 23348100 		sd	s0,8(sp)
 256              		.cfi_offset 8, -8
 257 0110 13040101 		addi	s0,sp,16
 258              		.cfi_def_cfa 8, 0
  40:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
 259              		.loc 1 40 5
 260              		.loc 1 40 39 is_stmt 0
 261              	#APP
 262              	# 40 "src/Riscv.cpp" 1
  41              	    __asm__ volatile ("sret");
 263              		csrw sepc, ra
 264              	# 0 "" 2
 265              		.loc 1 41 5 is_stmt 1
 266              		.loc 1 41 30 is_stmt 0
 267              	# 41 "src/Riscv.cpp" 1
  42              	}
 268              		sret
 269              	# 0 "" 2
 270              		.loc 1 42 1
 271              	#NO_APP
 272 011c 03348100 		ld	s0,8(sp)
 273              		.cfi_restore 8
 274              		.cfi_def_cfa 2, 16
 275 0120 13010101 		addi	sp,sp,16
 276              		.cfi_def_cfa_offset 0
 277 0124 67800000 		jr	ra
 278              		.cfi_endproc
 279              	.LFE27:
 281              		.align	2
GAS LISTING /tmp/ccr4ENLm.s 			page 10


 282              		.globl	_ZN5Riscv11printStringEPKc
 284              	_ZN5Riscv11printStringEPKc:
 285              	.LFB28:
  43:src/Riscv.cpp **** 
  44:src/Riscv.cpp **** void Riscv::printString(const char *string)
  45:src/Riscv.cpp **** {
 286              		.loc 1 45 1 is_stmt 1
 287              		.cfi_startproc
 288              	.LVL16:
 289 0128 130101FD 		addi	sp,sp,-48
 290              		.cfi_def_cfa_offset 48
 291 012c 23341102 		sd	ra,40(sp)
 292 0130 23308102 		sd	s0,32(sp)
 293 0134 233C9100 		sd	s1,24(sp)
 294 0138 23382101 		sd	s2,16(sp)
 295              		.cfi_offset 1, -8
 296              		.cfi_offset 8, -16
 297              		.cfi_offset 9, -24
 298              		.cfi_offset 18, -32
 299 013c 13040103 		addi	s0,sp,48
 300              		.cfi_def_cfa 8, 0
 301 0140 93040500 		mv	s1,a0
  46:src/Riscv.cpp ****     uint64 sstatus = r_sstatus();
 302              		.loc 1 46 5
 303              	.LBB90:
 304              	.LBB91:
 152:src/../h/Riscv.hpp **** 
 153:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sstatus() {
 154:src/../h/Riscv.hpp ****     uint64 volatile sstatus;
 305              		.loc 2 154 5
 155:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 306              		.loc 2 155 5
 307              		.loc 2 155 57 is_stmt 0
 308              	#APP
 309              	# 155 "src/../h/Riscv.hpp" 1
 156              	    return sstatus;
 310              		csrr a5, sstatus
 311              	# 0 "" 2
 312              	#NO_APP
 313 0148 233CF4FC 		sd	a5,-40(s0)
 314              		.loc 2 156 5 is_stmt 1
 315              		.loc 2 156 12 is_stmt 0
 316 014c 033984FD 		ld	s2,-40(s0)
 317              	.LVL17:
 318              	.LBE91:
 319              	.LBE90:
  47:src/Riscv.cpp ****     mc_sstatus(SSTATUS_SIE);
 320              		.loc 1 47 5 is_stmt 1
 321              	.LBB92:
 322              	.LBB93:
 150:src/../h/Riscv.hpp **** }
 323              		.loc 2 150 5
 150:src/../h/Riscv.hpp **** }
 324              		.loc 2 150 54 is_stmt 0
 325 0150 93072000 		li	a5,2
 326              	#APP
 327              	# 150 "src/../h/Riscv.hpp" 1
GAS LISTING /tmp/ccr4ENLm.s 			page 11


 328              		csrc sstatus, a5
 329              	# 0 "" 2
 330              	.LVL18:
 331              	#NO_APP
 332              	.L16:
 333              	.LBE93:
 334              	.LBE92:
  48:src/Riscv.cpp ****     while (*string != '\0')
 335              		.loc 1 48 5 is_stmt 1
 336              		.loc 1 48 20
 337              		.loc 1 48 12 is_stmt 0
 338 0158 03C50400 		lbu	a0,0(s1)
 339              		.loc 1 48 20
 340 015c 630A0500 		beqz	a0,.L15
  49:src/Riscv.cpp ****     {
  50:src/Riscv.cpp ****         __putc(*string);
 341              		.loc 1 50 9 is_stmt 1
 342              		.loc 1 50 15 is_stmt 0
 343 0160 97000000 		call	__putc@plt
 343      E7800000 
 344              	.LVL19:
  51:src/Riscv.cpp ****         string++;
 345              		.loc 1 51 9 is_stmt 1
 346              		.loc 1 51 15 is_stmt 0
 347 0168 93841400 		addi	s1,s1,1
 348              	.LVL20:
  48:src/Riscv.cpp ****     while (*string != '\0')
 349              		.loc 1 48 5
 350 016c 6FF0DFFE 		j	.L16
 351              	.L15:
  52:src/Riscv.cpp ****     }
  53:src/Riscv.cpp ****     ms_sstatus(sstatus & SSTATUS_SIE ? SSTATUS_SIE : 0);
 352              		.loc 1 53 5 is_stmt 1
 353              		.loc 1 53 38 is_stmt 0
 354 0170 1B090900 		sext.w	s2,s2
 355              	.LVL21:
 356              		.loc 1 53 15
 357 0174 13792900 		andi	s2,s2,2
 358 0178 1B090900 		sext.w	s2,s2
 359              	.LVL22:
 360              	.LBB94:
 361              	.LBB95:
 146:src/../h/Riscv.hpp **** }
 362              		.loc 2 146 5 is_stmt 1
 146:src/../h/Riscv.hpp **** }
 363              		.loc 2 146 54 is_stmt 0
 364              	#APP
 365              	# 146 "src/../h/Riscv.hpp" 1
 366              		csrs sstatus, s2
 367              	# 0 "" 2
 368              	.LVL23:
 369              	#NO_APP
 370              	.LBE95:
 371              	.LBE94:
  54:src/Riscv.cpp **** }
 372              		.loc 1 54 1
 373 0180 83308102 		ld	ra,40(sp)
GAS LISTING /tmp/ccr4ENLm.s 			page 12


 374              		.cfi_restore 1
 375 0184 03340102 		ld	s0,32(sp)
 376              		.cfi_restore 8
 377              		.cfi_def_cfa 2, 48
 378 0188 83348101 		ld	s1,24(sp)
 379              		.cfi_restore 9
 380              	.LVL24:
 381 018c 03390101 		ld	s2,16(sp)
 382              		.cfi_restore 18
 383 0190 13010103 		addi	sp,sp,48
 384              		.cfi_def_cfa_offset 0
 385 0194 67800000 		jr	ra
 386              		.cfi_endproc
 387              	.LFE28:
 389              		.align	2
 390              		.globl	_ZN5Riscv12printIntegerEm
 392              	_ZN5Riscv12printIntegerEm:
 393              	.LFB29:
  55:src/Riscv.cpp **** 
  56:src/Riscv.cpp **** void Riscv::printInteger(uint64 num)
  57:src/Riscv.cpp **** {
 394              		.loc 1 57 1 is_stmt 1
 395              		.cfi_startproc
 396              	.LVL25:
 397 0198 130101FC 		addi	sp,sp,-64
 398              		.cfi_def_cfa_offset 64
 399 019c 233C1102 		sd	ra,56(sp)
 400 01a0 23388102 		sd	s0,48(sp)
 401 01a4 23349102 		sd	s1,40(sp)
 402 01a8 23302103 		sd	s2,32(sp)
 403              		.cfi_offset 1, -8
 404              		.cfi_offset 8, -16
 405              		.cfi_offset 9, -24
 406              		.cfi_offset 18, -32
 407 01ac 13040104 		addi	s0,sp,64
 408              		.cfi_def_cfa 8, 0
  58:src/Riscv.cpp ****     uint64 sstatus = r_sstatus();
 409              		.loc 1 58 5
 410              	.LBB96:
 411              	.LBB97:
 154:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 412              		.loc 2 154 5
 155:src/../h/Riscv.hpp ****     return sstatus;
 413              		.loc 2 155 5
 155:src/../h/Riscv.hpp ****     return sstatus;
 414              		.loc 2 155 57 is_stmt 0
 415              	#APP
 416              	# 155 "src/../h/Riscv.hpp" 1
 417              		csrr a5, sstatus
 418              	# 0 "" 2
 419              	#NO_APP
 420 01b4 2334F4FC 		sd	a5,-56(s0)
 421              		.loc 2 156 5 is_stmt 1
 422              		.loc 2 156 12 is_stmt 0
 423 01b8 033984FC 		ld	s2,-56(s0)
 424              	.LVL26:
 425              	.LBE97:
GAS LISTING /tmp/ccr4ENLm.s 			page 13


 426              	.LBE96:
  59:src/Riscv.cpp ****     mc_sstatus(SSTATUS_SIE);
 427              		.loc 1 59 5 is_stmt 1
 428              	.LBB98:
 429              	.LBB99:
 150:src/../h/Riscv.hpp **** }
 430              		.loc 2 150 5
 150:src/../h/Riscv.hpp **** }
 431              		.loc 2 150 54 is_stmt 0
 432 01bc 93072000 		li	a5,2
 433              	#APP
 434              	# 150 "src/../h/Riscv.hpp" 1
 435              		csrc sstatus, a5
 436              	# 0 "" 2
 437              	.LVL27:
 438              	#NO_APP
 439              	.LBE99:
 440              	.LBE98:
  60:src/Riscv.cpp ****     static char digits[] = "0123456789";
 441              		.loc 1 60 5 is_stmt 1
  61:src/Riscv.cpp ****     char buf[16];
 442              		.loc 1 61 5
  62:src/Riscv.cpp ****     int i, neg;
 443              		.loc 1 62 5
  63:src/Riscv.cpp ****     uint x;
 444              		.loc 1 63 5
  64:src/Riscv.cpp **** 
  65:src/Riscv.cpp ****     neg = 0;
 445              		.loc 1 65 5
  66:src/Riscv.cpp ****     if(num < 0)
 446              		.loc 1 66 5
  67:src/Riscv.cpp ****     {
  68:src/Riscv.cpp ****         neg = 1;
  69:src/Riscv.cpp ****         x = -num;
  70:src/Riscv.cpp ****     }
  71:src/Riscv.cpp ****     else
  72:src/Riscv.cpp ****         x = num;
 447              		.loc 1 72 9
 448              		.loc 1 72 11 is_stmt 0
 449 01c4 1B050500 		sext.w	a0,a0
 450              	.LVL28:
  73:src/Riscv.cpp **** 
  74:src/Riscv.cpp ****     i = 0;
 451              		.loc 1 74 5 is_stmt 1
 452              		.loc 1 74 7 is_stmt 0
 453 01c8 93040000 		li	s1,0
 454              	.LVL29:
 455              	.L19:
  75:src/Riscv.cpp ****     do
 456              		.loc 1 75 5 is_stmt 1
  76:src/Riscv.cpp ****     {
  77:src/Riscv.cpp ****         buf[i++] = digits[x%10];
 457              		.loc 1 77 9
 458              		.loc 1 77 28 is_stmt 0
 459 01cc 1306A000 		li	a2,10
 460 01d0 3B77C502 		remuw	a4,a0,a2
 461              	.LVL30:
GAS LISTING /tmp/ccr4ENLm.s 			page 14


 462              		.loc 1 77 31
 463 01d4 93160702 		slli	a3,a4,32
 464 01d8 93D60602 		srli	a3,a3,32
 465 01dc 17070000 		lla	a4,.LANCHOR0
 465      13070700 
 466 01e4 3307D700 		add	a4,a4,a3
 467 01e8 03470700 		lbu	a4,0(a4)
 468              		.loc 1 77 18
 469 01ec 930604FE 		addi	a3,s0,-32
 470 01f0 B3879600 		add	a5,a3,s1
 471 01f4 9B841400 		addiw	s1,s1,1
 472              	.LVL31:
 473 01f8 2388E7FE 		sb	a4,-16(a5)
  78:src/Riscv.cpp ****     }while((x/=10) != 0);
 474              		.loc 1 78 20 is_stmt 1
 475 01fc 1B070500 		sext.w	a4,a0
 476              		.loc 1 78 14 is_stmt 0
 477 0200 3B55C502 		divuw	a0,a0,a2
 478              	.LVL32:
 479              		.loc 1 78 20
 480 0204 93079000 		li	a5,9
 481 0208 E3E2E7FC 		bgtu	a4,a5,.L19
 482              	.LVL33:
 483              	.L21:
  79:src/Riscv.cpp ****     if(neg)
  80:src/Riscv.cpp ****         buf[i++] = '-';
  81:src/Riscv.cpp **** 
  82:src/Riscv.cpp ****     while(--i >= 0)
 484              		.loc 1 82 5 is_stmt 1
 485              		.loc 1 82 15
 486 020c 9B84F4FF 		addiw	s1,s1,-1
 487              	.LVL34:
 488 0210 63CE0400 		bltz	s1,.L20
  83:src/Riscv.cpp ****         __putc(buf[i]);
 489              		.loc 1 83 9
 490              		.loc 1 83 15 is_stmt 0
 491 0214 930704FE 		addi	a5,s0,-32
 492 0218 B3879700 		add	a5,a5,s1
 493 021c 03C507FF 		lbu	a0,-16(a5)
 494 0220 97000000 		call	__putc@plt
 494      E7800000 
 495              	.LVL35:
 496 0228 6FF05FFE 		j	.L21
 497              	.L20:
  84:src/Riscv.cpp **** 
  85:src/Riscv.cpp ****     __putc('\n');
 498              		.loc 1 85 5 is_stmt 1
 499              		.loc 1 85 11 is_stmt 0
 500 022c 1305A000 		li	a0,10
 501 0230 97000000 		call	__putc@plt
 501      E7800000 
 502              	.LVL36:
  86:src/Riscv.cpp **** 
  87:src/Riscv.cpp ****     ms_sstatus(sstatus & SSTATUS_SIE ? SSTATUS_SIE : 0);
 503              		.loc 1 87 5 is_stmt 1
 504              		.loc 1 87 38 is_stmt 0
 505 0238 1B090900 		sext.w	s2,s2
GAS LISTING /tmp/ccr4ENLm.s 			page 15


 506              	.LVL37:
 507              		.loc 1 87 15
 508 023c 13792900 		andi	s2,s2,2
 509 0240 1B090900 		sext.w	s2,s2
 510              	.LVL38:
 511              	.LBB100:
 512              	.LBB101:
 146:src/../h/Riscv.hpp **** }
 513              		.loc 2 146 5 is_stmt 1
 146:src/../h/Riscv.hpp **** }
 514              		.loc 2 146 54 is_stmt 0
 515              	#APP
 516              	# 146 "src/../h/Riscv.hpp" 1
 517              		csrs sstatus, s2
 518              	# 0 "" 2
 519              	.LVL39:
 520              	#NO_APP
 521              	.LBE101:
 522              	.LBE100:
  88:src/Riscv.cpp **** }
 523              		.loc 1 88 1
 524 0248 83308103 		ld	ra,56(sp)
 525              		.cfi_restore 1
 526 024c 03340103 		ld	s0,48(sp)
 527              		.cfi_restore 8
 528              		.cfi_def_cfa 2, 64
 529 0250 83348102 		ld	s1,40(sp)
 530              		.cfi_restore 9
 531 0254 03390102 		ld	s2,32(sp)
 532              		.cfi_restore 18
 533 0258 13010104 		addi	sp,sp,64
 534              		.cfi_def_cfa_offset 0
 535 025c 67800000 		jr	ra
 536              		.cfi_endproc
 537              	.LFE29:
 539              		.align	2
 540              		.globl	_ZN5Riscv20handleSupervisorTrapEv
 542              	_ZN5Riscv20handleSupervisorTrapEv:
 543              	.LFB30:
  89:src/Riscv.cpp **** 
  90:src/Riscv.cpp **** void Riscv::handleSupervisorTrap()
  91:src/Riscv.cpp **** {
 544              		.loc 1 91 1 is_stmt 1
 545              		.cfi_startproc
 546              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 547              		.cfi_lsda 0x1b,.LLSDA30
 548 0260 130101F8 		addi	sp,sp,-128
 549              		.cfi_def_cfa_offset 128
 550 0264 233C1106 		sd	ra,120(sp)
 551 0268 23388106 		sd	s0,112(sp)
 552 026c 23349106 		sd	s1,104(sp)
 553 0270 23302107 		sd	s2,96(sp)
 554 0274 233C3105 		sd	s3,88(sp)
 555 0278 23384105 		sd	s4,80(sp)
 556 027c 23345105 		sd	s5,72(sp)
 557 0280 23306105 		sd	s6,64(sp)
 558              		.cfi_offset 1, -8
GAS LISTING /tmp/ccr4ENLm.s 			page 16


 559              		.cfi_offset 8, -16
 560              		.cfi_offset 9, -24
 561              		.cfi_offset 18, -32
 562              		.cfi_offset 19, -40
 563              		.cfi_offset 20, -48
 564              		.cfi_offset 21, -56
 565              		.cfi_offset 22, -64
 566 0284 13040108 		addi	s0,sp,128
 567              		.cfi_def_cfa 8, 0
  92:src/Riscv.cpp ****     uint64 a4;
 568              		.loc 1 92 5
  93:src/Riscv.cpp ****     __asm__ volatile("mv %0, a4" : "=r"(a4));
 569              		.loc 1 93 5
 570              		.loc 1 93 45 is_stmt 0
 571              	#APP
 572              	# 93 "src/Riscv.cpp" 1
  94              	
 573              		mv s2, a4
 574              	# 0 "" 2
 575              	.LVL40:
  95:src/Riscv.cpp ****     uint64 scause = Riscv::r_scause();
 576              		.loc 1 95 5 is_stmt 1
 577              	#NO_APP
 578              	.LBB102:
 579              	.LBB103:
  88:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
 580              		.loc 2 88 5
  89:src/../h/Riscv.hpp ****     return scause;
 581              		.loc 2 89 5
  89:src/../h/Riscv.hpp ****     return scause;
 582              		.loc 2 89 55 is_stmt 0
 583              	#APP
 584              	# 89 "src/../h/Riscv.hpp" 1
 585              		csrr a5, scause
 586              	# 0 "" 2
 587              	#NO_APP
 588 0290 2334F4F8 		sd	a5,-120(s0)
  90:src/../h/Riscv.hpp **** }
 589              		.loc 2 90 5 is_stmt 1
  90:src/../h/Riscv.hpp **** }
 590              		.loc 2 90 12 is_stmt 0
 591 0294 033784F8 		ld	a4,-120(s0)
 592              	.LVL41:
 593              	.LBE103:
 594              	.LBE102:
  96:src/Riscv.cpp **** 
  97:src/Riscv.cpp ****     switch(scause)
 595              		.loc 1 97 5 is_stmt 1
 596              	.LBB104:
 597 0298 93079000 		li	a5,9
 598 029c 63F2E70A 		bleu	a4,a5,.L47
 599 02a0 9307F0FF 		li	a5,-1
 600 02a4 9397F703 		slli	a5,a5,63
 601 02a8 93871700 		addi	a5,a5,1
 602 02ac 631EF708 		bne	a4,a5,.L26
 603              	.LBB105:
  98:src/Riscv.cpp ****     {
GAS LISTING /tmp/ccr4ENLm.s 			page 17


  99:src/Riscv.cpp **** 
 100:src/Riscv.cpp ****         case timerInterrupt:
 604              		.loc 1 100 9
 101:src/Riscv.cpp **** 
 102:src/Riscv.cpp ****             Riscv::mc_sip(Riscv::SIP_SSIP);
 605              		.loc 1 102 13
 606              	.LVL42:
 607              	.LBB106:
 608              	.LBB107:
 132:src/../h/Riscv.hpp **** }
 609              		.loc 2 132 5
 132:src/../h/Riscv.hpp **** }
 610              		.loc 2 132 50 is_stmt 0
 611 02b0 93072000 		li	a5,2
 612              	#APP
 613              	# 132 "src/../h/Riscv.hpp" 1
 614              		csrc sip, a5
 615              	# 0 "" 2
 616              	.LVL43:
 617              	#NO_APP
 618              	.LBE107:
 619              	.LBE106:
 103:src/Riscv.cpp ****             //Riscv::printString("timerInterrupt\n");
 104:src/Riscv.cpp **** 
 105:src/Riscv.cpp ****             static uint64 total = 0;
 620              		.loc 1 105 13 is_stmt 1
 106:src/Riscv.cpp ****             total++;
 621              		.loc 1 106 13
 622              		.loc 1 106 18 is_stmt 0
 623 02b8 97070000 		lla	a5,.LANCHOR1
 623      93870700 
 624 02c0 03B50700 		ld	a0,0(a5)
 625 02c4 13051500 		addi	a0,a0,1
 626 02c8 23B0A700 		sd	a0,0(a5)
 107:src/Riscv.cpp ****             Riscv::printInteger(total);
 627              		.loc 1 107 13 is_stmt 1
 628              	.LEHB4:
 629              		.loc 1 107 32 is_stmt 0
 630 02cc 97000000 		call	_ZN5Riscv12printIntegerEm
 630      E7800000 
 631              	.LVL44:
 108:src/Riscv.cpp **** 
 109:src/Riscv.cpp ****             PCB::timeSliceCounter++;
 632              		.loc 1 109 13 is_stmt 1
 633              		.loc 1 109 34 is_stmt 0
 634 02d4 97040000 		la	s1,_ZN3PCB16timeSliceCounterE
 634      83B40400 
 635 02dc 83B70400 		ld	a5,0(s1)
 636 02e0 93871700 		addi	a5,a5,1
 637 02e4 23B0F400 		sd	a5,0(s1)
 110:src/Riscv.cpp **** 
 111:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
 638              		.loc 1 111 13 is_stmt 1
 639              		.loc 1 111 40 is_stmt 0
 640 02e8 97000000 		call	_ZN12SleepPCBList13tryToWakePCBsEv@plt
 640      E7800000 
 641              	.LVL45:
GAS LISTING /tmp/ccr4ENLm.s 			page 18


 112:src/Riscv.cpp **** 
 113:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
 642              		.loc 1 113 13 is_stmt 1
 643              	.LBB108:
 644              		.loc 1 113 68 is_stmt 0
 645 02f0 97070000 		la	a5,_ZN3PCB7runningE
 645      83B70700 
 646 02f8 83B70700 		ld	a5,0(a5)
 647              	.LVL46:
 648              	.LBB109:
 649              	.LBB110:
  28:src/../h/PCB.hpp **** 
 650              		.loc 3 28 29 is_stmt 1
  28:src/../h/PCB.hpp **** 
 651              		.loc 3 28 36 is_stmt 0
 652 02fc 83B78700 		ld	a5,8(a5)
 653              	.LVL47:
 654              	.LBE110:
 655              	.LBE109:
 656              		.loc 1 113 39
 657 0300 03B70400 		ld	a4,0(s1)
 658              		.loc 1 113 13
 659 0304 6366F704 		bltu	a4,a5,.L23
 660              	.LBB111:
 114:src/Riscv.cpp ****             {
 115:src/Riscv.cpp ****                 uint64 sepc = Riscv::r_sepc();
 661              		.loc 1 115 17 is_stmt 1
 662              	.LBB112:
 663              	.LBB113:
  98:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 664              		.loc 2 98 5
  99:src/../h/Riscv.hpp ****     return sepc;
 665              		.loc 2 99 5
  99:src/../h/Riscv.hpp ****     return sepc;
 666              		.loc 2 99 51 is_stmt 0
 667              	#APP
 668              	# 99 "src/../h/Riscv.hpp" 1
 669              		csrr a5, sepc
 670              	# 0 "" 2
 671              	#NO_APP
 672 030c 233CF4F8 		sd	a5,-104(s0)
 100:src/../h/Riscv.hpp **** }
 673              		.loc 2 100 5 is_stmt 1
 100:src/../h/Riscv.hpp **** }
 674              		.loc 2 100 12 is_stmt 0
 675 0310 833484F9 		ld	s1,-104(s0)
 676              	.LVL48:
 677              	.LBE113:
 678              	.LBE112:
 116:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 679              		.loc 1 116 17 is_stmt 1
 680              	.LBB114:
 681              	.LBB115:
 154:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 682              		.loc 2 154 5
 155:src/../h/Riscv.hpp ****     return sstatus;
 683              		.loc 2 155 5
GAS LISTING /tmp/ccr4ENLm.s 			page 19


 155:src/../h/Riscv.hpp ****     return sstatus;
 684              		.loc 2 155 57 is_stmt 0
 685              	#APP
 686              	# 155 "src/../h/Riscv.hpp" 1
 687              		csrr a5, sstatus
 688              	# 0 "" 2
 689              	#NO_APP
 690 0318 2338F4F8 		sd	a5,-112(s0)
 691              		.loc 2 156 5 is_stmt 1
 692              		.loc 2 156 12 is_stmt 0
 693 031c 033904F9 		ld	s2,-112(s0)
 694              	.LVL49:
 695              	.LBE115:
 696              	.LBE114:
 117:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 697              		.loc 1 117 17 is_stmt 1
 698              		.loc 1 117 39 is_stmt 0
 699 0320 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 699      83B70700 
 700 0328 23B00700 		sd	zero,0(a5)
 118:src/Riscv.cpp ****                 PCB::dispatch();
 701              		.loc 1 118 17 is_stmt 1
 702              		.loc 1 118 30 is_stmt 0
 703 032c 97000000 		call	_ZN3PCB8dispatchEv@plt
 703      E7800000 
 704              	.LVL50:
 119:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 705              		.loc 1 119 17 is_stmt 1
 706              	.LBB116:
 707              	.LBB117:
 157:src/../h/Riscv.hpp **** }
 158:src/../h/Riscv.hpp **** 
 159:src/../h/Riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus) {
 160:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sstatus, %0" : :"r"(sstatus));
 708              		.loc 2 160 5
 709              		.loc 2 160 57 is_stmt 0
 710              	#APP
 711              	# 160 "src/../h/Riscv.hpp" 1
 161              	}
 712              		csrw sstatus, s2
 713              	# 0 "" 2
 714              	.LVL51:
 715              	#NO_APP
 716              	.LBE117:
 717              	.LBE116:
 120:src/Riscv.cpp ****                 Riscv::w_sepc(sepc);
 718              		.loc 1 120 17 is_stmt 1
 719              	.LBB118:
 720              	.LBB119:
 104:src/../h/Riscv.hpp **** }
 721              		.loc 2 104 5
 104:src/../h/Riscv.hpp **** }
 722              		.loc 2 104 51 is_stmt 0
 723              	#APP
 724              	# 104 "src/../h/Riscv.hpp" 1
 105:src/../h/Riscv.hpp **** 
 725              		csrw sepc, s1
GAS LISTING /tmp/ccr4ENLm.s 			page 20


 726              	# 0 "" 2
 727              		.loc 2 105 1
 728              	#NO_APP
 729 033c 6F004001 		j	.L23
 730              	.LVL52:
 731              	.L47:
 732              	.LBE119:
 733              	.LBE118:
 734              	.LBE111:
 735              	.LBE108:
 736              	.LBE105:
  97:src/Riscv.cpp ****     {
 737              		.loc 1 97 5
 738 0340 93078000 		li	a5,8
 739 0344 637AF702 		bgeu	a4,a5,.L48
 740              	.L26:
 741              	.LBE104:
 121:src/Riscv.cpp ****             }
 122:src/Riscv.cpp **** 
 123:src/Riscv.cpp ****             return;
 124:src/Riscv.cpp **** 
 125:src/Riscv.cpp ****         case hwInterrupt: // todo
 126:src/Riscv.cpp **** 
 127:src/Riscv.cpp ****             //Riscv::printString("Hardware interrupt...\n");
 128:src/Riscv.cpp **** 
 129:src/Riscv.cpp ****             break;
 130:src/Riscv.cpp **** 
 131:src/Riscv.cpp ****         case operationInterrupt: // todo
 132:src/Riscv.cpp ****             break;
 133:src/Riscv.cpp **** 
 134:src/Riscv.cpp ****         case addrReadInterrupt: // todo
 135:src/Riscv.cpp ****             break;
 136:src/Riscv.cpp **** 
 137:src/Riscv.cpp ****         case addrWriteInterrupt: // todo
 138:src/Riscv.cpp ****             break;
 139:src/Riscv.cpp **** 
 140:src/Riscv.cpp ****         case ecallSystemInterupt:
 141:src/Riscv.cpp ****         case ecallUserInterrupt:
 142:src/Riscv.cpp **** 
 143:src/Riscv.cpp ****             uint64 operation;
 144:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
 145:src/Riscv.cpp **** 
 146:src/Riscv.cpp ****             uint64 sepc = Riscv::r_sepc();
 147:src/Riscv.cpp ****             sepc+=4;
 148:src/Riscv.cpp **** 
 149:src/Riscv.cpp ****             if(operation == MemoryAllocator::MEM_ALLOC)
 150:src/Riscv.cpp ****             {
 151:src/Riscv.cpp ****                 size_t size;
 152:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(size));
 153:src/Riscv.cpp ****                 size*=MEM_BLOCK_SIZE;
 154:src/Riscv.cpp ****                 void* allocatedAddr = kmalloc(size);
 155:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : : "r"((uint64)allocatedAddr));
 156:src/Riscv.cpp ****             }
 157:src/Riscv.cpp ****             else if(operation == MemoryAllocator::MEM_FREE)
 158:src/Riscv.cpp ****             {
 159:src/Riscv.cpp ****                 uint64 addr = 0;
 160:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(addr));
GAS LISTING /tmp/ccr4ENLm.s 			page 21


 161:src/Riscv.cpp ****                 uint64 retval = kfree((void*)addr);
 162:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 163:src/Riscv.cpp ****             }
 164:src/Riscv.cpp ****             else if(operation == PCB::THREAD_CREATE)
 165:src/Riscv.cpp ****             {
 166:src/Riscv.cpp ****                 uint64 start_routine;
 167:src/Riscv.cpp ****                 uint64 args;
 168:src/Riscv.cpp ****                 PCB** threadHandle;
 169:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(threadHandle));
 170:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(start_routine));
 171:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a3" : "=r"(args));
 172:src/Riscv.cpp ****                 //todo
 173:src/Riscv.cpp ****                 //uint64 stack_space;
 174:src/Riscv.cpp ****                 //__asm__ volatile("mv %0, a4" : "=r"(stack_space));
 175:src/Riscv.cpp **** 
 176:src/Riscv.cpp ****                 PCB* newPCB = new PCB((void (*)(void*))start_routine, (void*)args, (void*)a4, DEFAU
 177:src/Riscv.cpp **** 
 178:src/Riscv.cpp ****                 (*threadHandle) = newPCB;
 179:src/Riscv.cpp **** 
 180:src/Riscv.cpp ****                 if(newPCB == 0)
 181:src/Riscv.cpp ****                     __asm__ volatile("li a0, 0xffffffffffffffff");
 182:src/Riscv.cpp ****                 else
 183:src/Riscv.cpp ****                     __asm__ volatile("li a0, 0");
 184:src/Riscv.cpp ****             }
 185:src/Riscv.cpp ****             else if(operation == PCB::THREAD_DISPATCH)
 186:src/Riscv.cpp ****             {
 187:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 188:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 189:src/Riscv.cpp ****                 PCB::dispatch();
 190:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 191:src/Riscv.cpp ****             }
 192:src/Riscv.cpp ****             else if(operation == PCB::THREAD_EXIT)
 193:src/Riscv.cpp ****             {
 194:src/Riscv.cpp ****                 if(PCB::running == 0)
 195:src/Riscv.cpp ****                 {
 196:src/Riscv.cpp ****                     __asm__ volatile("li a0, 0xffffffffffffffff");
 197:src/Riscv.cpp ****                     return;
 198:src/Riscv.cpp ****                 }
 199:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 200:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 201:src/Riscv.cpp ****                 PCB::running->setState(PCB::EXITING);
 202:src/Riscv.cpp ****                 PCB::running->setState(PCB::FINISHED);
 203:src/Riscv.cpp ****                 PCB::dispatch();
 204:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 205:src/Riscv.cpp ****             }
 206:src/Riscv.cpp ****             else if(operation == PCB::TIME_SLEEP)
 207:src/Riscv.cpp ****             {
 208:src/Riscv.cpp ****                 uint64 time;
 209:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(time));
 210:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 211:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 212:src/Riscv.cpp ****                 PCB::running->setTimeToSleep(time);
 213:src/Riscv.cpp ****                 SleepPCBList::insertSleepingPCB();
 214:src/Riscv.cpp ****                 PCB::dispatch();
 215:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 216:src/Riscv.cpp ****                 //todo
 217:src/Riscv.cpp ****                 //kad treba vratiti kod greske
GAS LISTING /tmp/ccr4ENLm.s 			page 22


 218:src/Riscv.cpp ****                 __asm__ volatile("li a0, 0x0");
 219:src/Riscv.cpp ****             }
 220:src/Riscv.cpp ****             else if(operation == KSemaphore::SEM_OPEN)
 221:src/Riscv.cpp ****             {
 222:src/Riscv.cpp ****                 uint64 val;
 223:src/Riscv.cpp ****                 KSemaphore** semaphoreHandle;
 224:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(semaphoreHandle));
 225:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(val));
 226:src/Riscv.cpp **** 
 227:src/Riscv.cpp ****                 KSemaphore* newSem = new KSemaphore(val);
 228:src/Riscv.cpp **** 
 229:src/Riscv.cpp ****                 (*semaphoreHandle) = newSem;
 230:src/Riscv.cpp **** 
 231:src/Riscv.cpp ****                 if(newSem == 0)
 232:src/Riscv.cpp ****                         __asm__ volatile("li a0, 0xffffffffffffffff");
 233:src/Riscv.cpp ****                 else
 234:src/Riscv.cpp ****                         __asm__ volatile("li a0, 0");
 235:src/Riscv.cpp **** 
 236:src/Riscv.cpp ****             }
 237:src/Riscv.cpp ****             else if(operation == KSemaphore::SEM_WAIT)
 238:src/Riscv.cpp ****             {
 239:src/Riscv.cpp ****                 //todo
 240:src/Riscv.cpp ****                 //negativna povratna vrednost sta i kako
 241:src/Riscv.cpp ****                 KSemaphore* kSem;
 242:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(kSem));
 243:src/Riscv.cpp ****                 uint64 retval = kSem->wait();
 244:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 245:src/Riscv.cpp ****             }
 246:src/Riscv.cpp ****             else if(operation == KSemaphore::SEM_SIGNAL)
 247:src/Riscv.cpp ****             {
 248:src/Riscv.cpp ****                 //todo
 249:src/Riscv.cpp ****                 //negativna povratna vrednost sta i kako
 250:src/Riscv.cpp ****                 KSemaphore* kSem;
 251:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(kSem));
 252:src/Riscv.cpp ****                 uint64 retval = kSem->signal();
 253:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 254:src/Riscv.cpp ****             }
 255:src/Riscv.cpp ****             else if(operation == KSemaphore::SEM_CLOSE)
 256:src/Riscv.cpp ****             {
 257:src/Riscv.cpp ****                 //todo
 258:src/Riscv.cpp ****                 //negativna povratna vrednost sta i kako
 259:src/Riscv.cpp ****                 KSemaphore* kSem;
 260:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(kSem));
 261:src/Riscv.cpp **** 
 262:src/Riscv.cpp ****                 delete kSem;
 263:src/Riscv.cpp **** 
 264:src/Riscv.cpp ****                 __asm__ volatile("li a0, 0");
 265:src/Riscv.cpp ****             }
 266:src/Riscv.cpp **** 
 267:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 268:src/Riscv.cpp **** 
 269:src/Riscv.cpp ****             return;
 270:src/Riscv.cpp ****     }
 271:src/Riscv.cpp **** 
 272:src/Riscv.cpp ****     console_handler();
 742              		.loc 1 272 5 is_stmt 1
 743              		.loc 1 272 20 is_stmt 0
GAS LISTING /tmp/ccr4ENLm.s 			page 23


 744 0348 97000000 		call	console_handler@plt
 744      E7800000 
 745              	.LVL53:
 746              	.L23:
 273:src/Riscv.cpp **** }
 747              		.loc 1 273 1
 748 0350 83308107 		ld	ra,120(sp)
 749              		.cfi_remember_state
 750              		.cfi_restore 1
 751 0354 03340107 		ld	s0,112(sp)
 752              		.cfi_restore 8
 753              		.cfi_def_cfa 2, 128
 754 0358 83348106 		ld	s1,104(sp)
 755              		.cfi_restore 9
 756 035c 03390106 		ld	s2,96(sp)
 757              		.cfi_restore 18
 758 0360 83398105 		ld	s3,88(sp)
 759              		.cfi_restore 19
 760 0364 033A0105 		ld	s4,80(sp)
 761              		.cfi_restore 20
 762 0368 833A8104 		ld	s5,72(sp)
 763              		.cfi_restore 21
 764 036c 033B0104 		ld	s6,64(sp)
 765              		.cfi_restore 22
 766 0370 13010108 		addi	sp,sp,128
 767              		.cfi_def_cfa_offset 0
 768 0374 67800000 		jr	ra
 769              	.LVL54:
 770              	.L48:
 771              		.cfi_restore_state
 772              	.LBB237:
 773              	.LBB226:
 140:src/Riscv.cpp ****         case ecallUserInterrupt:
 774              		.loc 1 140 9 is_stmt 1
 141:src/Riscv.cpp **** 
 775              		.loc 1 141 9
 143:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
 776              		.loc 1 143 13
 144:src/Riscv.cpp **** 
 777              		.loc 1 144 13
 144:src/Riscv.cpp **** 
 778              		.loc 1 144 61 is_stmt 0
 779              	#APP
 780              	# 144 "src/Riscv.cpp" 1
 781              		mv a5, a0
 782              	# 0 "" 2
 783              	.LVL55:
 146:src/Riscv.cpp ****             sepc+=4;
 784              		.loc 1 146 13 is_stmt 1
 785              	#NO_APP
 786              	.LBB120:
 787              	.LBB121:
  98:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 788              		.loc 2 98 5
  99:src/../h/Riscv.hpp ****     return sepc;
 789              		.loc 2 99 5
  99:src/../h/Riscv.hpp ****     return sepc;
GAS LISTING /tmp/ccr4ENLm.s 			page 24


 790              		.loc 2 99 51 is_stmt 0
 791              	#APP
 792              	# 99 "src/../h/Riscv.hpp" 1
 793              		csrr a4, sepc
 794              	# 0 "" 2
 795              	.LVL56:
 796              	#NO_APP
 797 0380 2330E4FA 		sd	a4,-96(s0)
 100:src/../h/Riscv.hpp **** }
 798              		.loc 2 100 5 is_stmt 1
 100:src/../h/Riscv.hpp **** }
 799              		.loc 2 100 12 is_stmt 0
 800 0384 033704FA 		ld	a4,-96(s0)
 801              	.LVL57:
 802              	.LBE121:
 803              	.LBE120:
 147:src/Riscv.cpp **** 
 804              		.loc 1 147 13 is_stmt 1
 147:src/Riscv.cpp **** 
 805              		.loc 1 147 17 is_stmt 0
 806 0388 93044700 		addi	s1,a4,4
 807              	.LVL58:
 149:src/Riscv.cpp ****             {
 808              		.loc 1 149 13 is_stmt 1
 809              	.LBB122:
 810 038c 13071000 		li	a4,1
 811 0390 638AE706 		beq	a5,a4,.L49
 812              	.LBE122:
 813              	.LBE226:
 814              	.LBE237:
 157:src/Riscv.cpp ****             {
 815              		.loc 1 157 18
 816              	.LBB238:
 817              	.LBB227:
 818              	.LBB213:
 819              	.LBB123:
 820 0394 13072000 		li	a4,2
 821 0398 6384E708 		beq	a5,a4,.L50
 822              	.LBE123:
 823              	.LBE213:
 824              	.LBE227:
 825              	.LBE238:
 164:src/Riscv.cpp ****             {
 826              		.loc 1 164 18
 827              	.LBB239:
 828              	.LBB228:
 829              	.LBB214:
 830              	.LBB202:
 831              	.LBB124:
 832 039c 13071001 		li	a4,17
 833 03a0 638AE708 		beq	a5,a4,.L51
 834              	.LBE124:
 835              	.LBE202:
 836              	.LBE214:
 837              	.LBE228:
 838              	.LBE239:
 185:src/Riscv.cpp ****             {
GAS LISTING /tmp/ccr4ENLm.s 			page 25


 839              		.loc 1 185 18
 840              	.LBB240:
 841              	.LBB229:
 842              	.LBB215:
 843              	.LBB203:
 844              	.LBB192:
 845              	.LBB125:
 846 03a4 13073001 		li	a4,19
 847 03a8 638CE70C 		beq	a5,a4,.L52
 848              	.LBE125:
 849              	.LBE192:
 850              	.LBE203:
 851              	.LBE215:
 852              	.LBE229:
 853              	.LBE240:
 192:src/Riscv.cpp ****             {
 854              		.loc 1 192 18
 855              	.LBB241:
 856              	.LBB230:
 857              	.LBB216:
 858              	.LBB204:
 859              	.LBB193:
 860              	.LBB181:
 861              	.LBB126:
 862 03ac 13072001 		li	a4,18
 863 03b0 638CE70E 		beq	a5,a4,.L53
 864              	.LBE126:
 865              	.LBE181:
 866              	.LBE193:
 867              	.LBE204:
 868              	.LBE216:
 869              	.LBE230:
 870              	.LBE241:
 206:src/Riscv.cpp ****             {
 871              		.loc 1 206 18
 872              	.LBB242:
 873              	.LBB231:
 874              	.LBB217:
 875              	.LBB205:
 876              	.LBB194:
 877              	.LBB182:
 878              	.LBB168:
 879              	.LBB127:
 880 03b4 13071003 		li	a4,49
 881 03b8 6382E714 		beq	a5,a4,.L54
 882              	.LBE127:
 883              	.LBE168:
 884              	.LBE182:
 885              	.LBE194:
 886              	.LBE205:
 887              	.LBE217:
 888              	.LBE231:
 889              	.LBE242:
 220:src/Riscv.cpp ****             {
 890              		.loc 1 220 18
 891              	.LBB243:
 892              	.LBB232:
GAS LISTING /tmp/ccr4ENLm.s 			page 26


 893              	.LBB218:
 894              	.LBB206:
 895              	.LBB195:
 896              	.LBB183:
 897              	.LBB169:
 898              	.LBB154:
 899              	.LBB128:
 900 03bc 13071002 		li	a4,33
 901 03c0 6382E718 		beq	a5,a4,.L55
 902              	.LBE128:
 903              	.LBE154:
 904              	.LBE169:
 905              	.LBE183:
 906              	.LBE195:
 907              	.LBE206:
 908              	.LBE218:
 909              	.LBE232:
 910              	.LBE243:
 237:src/Riscv.cpp ****             {
 911              		.loc 1 237 18
 912              	.LBB244:
 913              	.LBB233:
 914              	.LBB219:
 915              	.LBB207:
 916              	.LBB196:
 917              	.LBB184:
 918              	.LBB170:
 919              	.LBB155:
 920              	.LBB142:
 921              	.LBB129:
 922 03c4 13073002 		li	a4,35
 923 03c8 638CE71A 		beq	a5,a4,.L56
 924              	.LBE129:
 925              	.LBE142:
 926              	.LBE155:
 927              	.LBE170:
 928              	.LBE184:
 929              	.LBE196:
 930              	.LBE207:
 931              	.LBE219:
 932              	.LBE233:
 933              	.LBE244:
 246:src/Riscv.cpp ****             {
 934              		.loc 1 246 18
 935              	.LBB245:
 936              	.LBB234:
 937              	.LBB220:
 938              	.LBB208:
 939              	.LBB197:
 940              	.LBB185:
 941              	.LBB171:
 942              	.LBB156:
 943              	.LBB143:
 944              	.LBB137:
 945              	.LBB130:
 946 03cc 13074002 		li	a4,36
 947 03d0 6382E71C 		beq	a5,a4,.L57
GAS LISTING /tmp/ccr4ENLm.s 			page 27


 948              	.LBE130:
 949              	.LBE137:
 950              	.LBE143:
 951              	.LBE156:
 952              	.LBE171:
 953              	.LBE185:
 954              	.LBE197:
 955              	.LBE208:
 956              	.LBE220:
 957              	.LBE234:
 958              	.LBE245:
 255:src/Riscv.cpp ****             {
 959              		.loc 1 255 18
 960              	.LBB246:
 961              	.LBB235:
 962              	.LBB221:
 963              	.LBB209:
 964              	.LBB198:
 965              	.LBB186:
 966              	.LBB172:
 967              	.LBB157:
 968              	.LBB144:
 969              	.LBB138:
 970              	.LBB134:
 971              	.LBB131:
 972 03d4 13072002 		li	a4,34
 973 03d8 6390E704 		bne	a5,a4,.L29
 974              	.LBB132:
 259:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(kSem));
 975              		.loc 1 259 17
 260:src/Riscv.cpp **** 
 976              		.loc 1 260 17
 260:src/Riscv.cpp **** 
 977              		.loc 1 260 59 is_stmt 0
 978              	#APP
 979              	# 260 "src/Riscv.cpp" 1
 980              		mv s2, a1
 981              	# 0 "" 2
 982              	.LVL59:
 262:src/Riscv.cpp **** 
 983              		.loc 1 262 17 is_stmt 1
 262:src/Riscv.cpp **** 
 984              		.loc 1 262 28 is_stmt 0
 985              	#NO_APP
 986 03e0 630E0900 		beqz	s2,.L41
 262:src/Riscv.cpp **** 
 987              		.loc 1 262 24 discriminator 1
 988 03e4 13050900 		mv	a0,s2
 989 03e8 97000000 		call	_ZN10KSemaphoreD1Ev@plt
 989      E7800000 
 990              	.LVL60:
 991 03f0 13050900 		mv	a0,s2
 992 03f4 97000000 		call	_ZN10KSemaphoredlEPv@plt
 992      E7800000 
 993              	.LVL61:
 994              	.L41:
 264:src/Riscv.cpp ****             }
GAS LISTING /tmp/ccr4ENLm.s 			page 28


 995              		.loc 1 264 17 is_stmt 1
 264:src/Riscv.cpp ****             }
 996              		.loc 1 264 45 is_stmt 0
 997              	#APP
 998              	# 264 "src/Riscv.cpp" 1
 999              		li a0, 0
 1000              	# 0 "" 2
 1001              	#NO_APP
 1002              	.LBE132:
 1003 0400 6F008001 		j	.L29
 1004              	.LVL62:
 1005              	.L49:
 1006              	.LBE131:
 1007              	.LBE134:
 1008              	.LBE138:
 1009              	.LBE144:
 1010              	.LBE157:
 1011              	.LBE172:
 1012              	.LBE186:
 1013              	.LBE198:
 1014              	.LBE209:
 1015              	.LBB210:
 151:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(size));
 1016              		.loc 1 151 17 is_stmt 1
 152:src/Riscv.cpp ****                 size*=MEM_BLOCK_SIZE;
 1017              		.loc 1 152 17
 152:src/Riscv.cpp ****                 size*=MEM_BLOCK_SIZE;
 1018              		.loc 1 152 59 is_stmt 0
 1019              	#APP
 1020              	# 152 "src/Riscv.cpp" 1
 1021              		mv a0, a1
 1022              	# 0 "" 2
 1023              	.LVL63:
 153:src/Riscv.cpp ****                 void* allocatedAddr = kmalloc(size);
 1024              		.loc 1 153 17 is_stmt 1
 154:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : : "r"((uint64)allocatedAddr));
 1025              		.loc 1 154 17
 154:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : : "r"((uint64)allocatedAddr));
 1026              		.loc 1 154 46 is_stmt 0
 1027              	#NO_APP
 1028 0408 13156500 		slli	a0,a0,6
 1029              	.LVL64:
 1030 040c 97000000 		call	_Z7kmallocm@plt
 1030      E7800000 
 1031              	.LVL65:
 155:src/Riscv.cpp ****             }
 1032              		.loc 1 155 17 is_stmt 1
 155:src/Riscv.cpp ****             }
 1033              		.loc 1 155 76 is_stmt 0
 1034              	#APP
 1035              	# 155 "src/Riscv.cpp" 1
 1036              		mv a0,a0
 1037              	# 0 "" 2
 1038              	.LVL66:
 1039              	#NO_APP
 1040              	.L29:
 1041              	.LBE210:
GAS LISTING /tmp/ccr4ENLm.s 			page 29


 1042              	.LBE221:
 267:src/Riscv.cpp **** 
 1043              		.loc 1 267 13 is_stmt 1
 1044              	.LBB222:
 1045              	.LBB223:
 104:src/../h/Riscv.hpp **** }
 1046              		.loc 2 104 5
 104:src/../h/Riscv.hpp **** }
 1047              		.loc 2 104 51 is_stmt 0
 1048              	#APP
 1049              	# 104 "src/../h/Riscv.hpp" 1
 105:src/../h/Riscv.hpp **** 
 1050              		csrw sepc, s1
 1051              	# 0 "" 2
 1052              		.loc 2 105 1
 1053              	#NO_APP
 1054 041c 6FF05FF3 		j	.L23
 1055              	.LVL67:
 1056              	.L50:
 1057              	.LBE223:
 1058              	.LBE222:
 1059              	.LBB224:
 1060              	.LBB211:
 1061              	.LBB199:
 159:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(addr));
 1062              		.loc 1 159 17 is_stmt 1
 160:src/Riscv.cpp ****                 uint64 retval = kfree((void*)addr);
 1063              		.loc 1 160 17
 160:src/Riscv.cpp ****                 uint64 retval = kfree((void*)addr);
 1064              		.loc 1 160 59 is_stmt 0
 1065              	#APP
 1066              	# 160 "src/Riscv.cpp" 1
 1067              		mv a0, a1
 1068              	# 0 "" 2
 1069              	.LVL68:
 161:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 1070              		.loc 1 161 17 is_stmt 1
 161:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 1071              		.loc 1 161 38 is_stmt 0
 1072              	#NO_APP
 1073 0424 97000000 		call	_Z5kfreePv@plt
 1073      E7800000 
 1074              	.LVL69:
 162:src/Riscv.cpp ****             }
 1075              		.loc 1 162 17 is_stmt 1
 162:src/Riscv.cpp ****             }
 1076              		.loc 1 162 60 is_stmt 0
 1077              	#APP
 1078              	# 162 "src/Riscv.cpp" 1
 1079              		mv a0,a0
 1080              	# 0 "" 2
 1081              	#NO_APP
 1082              	.LBE199:
 1083 0430 6FF09FFE 		j	.L29
 1084              	.LVL70:
 1085              	.L51:
 1086              	.LBB200:
GAS LISTING /tmp/ccr4ENLm.s 			page 30


 1087              	.LBB187:
 166:src/Riscv.cpp ****                 uint64 args;
 1088              		.loc 1 166 17 is_stmt 1
 167:src/Riscv.cpp ****                 PCB** threadHandle;
 1089              		.loc 1 167 17
 168:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(threadHandle));
 1090              		.loc 1 168 17
 169:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(start_routine));
 1091              		.loc 1 169 17
 169:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(start_routine));
 1092              		.loc 1 169 67 is_stmt 0
 1093              	#APP
 1094              	# 169 "src/Riscv.cpp" 1
 1095              		mv s4, a1
 1096              	# 0 "" 2
 1097              	.LVL71:
 170:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a3" : "=r"(args));
 1098              		.loc 1 170 17 is_stmt 1
 170:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a3" : "=r"(args));
 1099              		.loc 1 170 68 is_stmt 0
 1100              	# 170 "src/Riscv.cpp" 1
 1101              		mv s5, a2
 1102              	# 0 "" 2
 1103              	.LVL72:
 171:src/Riscv.cpp ****                 //todo
 1104              		.loc 1 171 17 is_stmt 1
 171:src/Riscv.cpp ****                 //todo
 1105              		.loc 1 171 59 is_stmt 0
 1106              	# 171 "src/Riscv.cpp" 1
 1107              		mv s6, a3
 1108              	# 0 "" 2
 1109              	.LVL73:
 176:src/Riscv.cpp **** 
 1110              		.loc 1 176 17 is_stmt 1
 176:src/Riscv.cpp **** 
 1111              		.loc 1 176 113 is_stmt 0
 1112              	#NO_APP
 1113 0440 13050005 		li	a0,80
 1114 0444 97000000 		call	_ZN3PCBnwEm@plt
 1114      E7800000 
 1115              	.LVL74:
 1116              	.LEHE4:
 1117 044c 93090500 		mv	s3,a0
 1118 0450 13072000 		li	a4,2
 1119 0454 93060900 		mv	a3,s2
 1120 0458 13060B00 		mv	a2,s6
 1121 045c 93850A00 		mv	a1,s5
 1122              	.LEHB5:
 1123 0460 97000000 		call	_ZN3PCBC1EPFvPvES0_S0_m@plt
 1123      E7800000 
 1124              	.LVL75:
 1125              	.LEHE5:
 178:src/Riscv.cpp **** 
 1126              		.loc 1 178 17 is_stmt 1 discriminator 2
 178:src/Riscv.cpp **** 
 1127              		.loc 1 178 33 is_stmt 0 discriminator 2
 1128 0468 23303A01 		sd	s3,0(s4)
GAS LISTING /tmp/ccr4ENLm.s 			page 31


 180:src/Riscv.cpp ****                     __asm__ volatile("li a0, 0xffffffffffffffff");
 1129              		.loc 1 180 17 is_stmt 1 discriminator 2
 1130 046c 63860900 		beqz	s3,.L58
 183:src/Riscv.cpp ****             }
 1131              		.loc 1 183 21
 183:src/Riscv.cpp ****             }
 1132              		.loc 1 183 49 is_stmt 0
 1133              	#APP
 1134              	# 183 "src/Riscv.cpp" 1
 1135              		li a0, 0
 1136              	# 0 "" 2
 1137              	#NO_APP
 1138 0474 6FF05FFA 		j	.L29
 1139              	.L58:
 181:src/Riscv.cpp ****                 else
 1140              		.loc 1 181 21 is_stmt 1
 181:src/Riscv.cpp ****                 else
 1141              		.loc 1 181 66 is_stmt 0
 1142              	#APP
 1143              	# 181 "src/Riscv.cpp" 1
 1144              		li a0, 0xffffffffffffffff
 1145              	# 0 "" 2
 1146              	#NO_APP
 1147 047c 6FF0DFF9 		j	.L29
 1148              	.LVL76:
 1149              	.L52:
 1150              	.LBE187:
 1151              	.LBB188:
 1152              	.LBB173:
 187:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 1153              		.loc 1 187 17 is_stmt 1
 1154              	.LBB174:
 1155              	.LBB175:
 154:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 1156              		.loc 2 154 5
 155:src/../h/Riscv.hpp ****     return sstatus;
 1157              		.loc 2 155 5
 155:src/../h/Riscv.hpp ****     return sstatus;
 1158              		.loc 2 155 57 is_stmt 0
 1159              	#APP
 1160              	# 155 "src/../h/Riscv.hpp" 1
 1161              		csrr a5, sstatus
 1162              	# 0 "" 2
 1163              	.LVL77:
 1164              	#NO_APP
 1165 0484 2334F4FA 		sd	a5,-88(s0)
 156:src/../h/Riscv.hpp **** }
 1166              		.loc 2 156 5 is_stmt 1
 156:src/../h/Riscv.hpp **** }
 1167              		.loc 2 156 12 is_stmt 0
 1168 0488 033984FA 		ld	s2,-88(s0)
 1169              	.LVL78:
 1170              	.LBE175:
 1171              	.LBE174:
 188:src/Riscv.cpp ****                 PCB::dispatch();
 1172              		.loc 1 188 17 is_stmt 1
 188:src/Riscv.cpp ****                 PCB::dispatch();
GAS LISTING /tmp/ccr4ENLm.s 			page 32


 1173              		.loc 1 188 39 is_stmt 0
 1174 048c 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 1174      83B70700 
 1175 0494 23B00700 		sd	zero,0(a5)
 189:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1176              		.loc 1 189 17 is_stmt 1
 1177              	.LEHB6:
 189:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1178              		.loc 1 189 30 is_stmt 0
 1179 0498 97000000 		call	_ZN3PCB8dispatchEv@plt
 1179      E7800000 
 1180              	.LVL79:
 190:src/Riscv.cpp ****             }
 1181              		.loc 1 190 17 is_stmt 1
 1182              	.LBB176:
 1183              	.LBB177:
 160:src/../h/Riscv.hpp **** }
 1184              		.loc 2 160 5
 160:src/../h/Riscv.hpp **** }
 1185              		.loc 2 160 57 is_stmt 0
 1186              	#APP
 1187              	# 160 "src/../h/Riscv.hpp" 1
 1188              		csrw sstatus, s2
 1189              	# 0 "" 2
 1190              		.loc 2 161 1
 1191              	#NO_APP
 1192 04a4 6FF05FF7 		j	.L29
 1193              	.LVL80:
 1194              	.L53:
 1195              	.LBE177:
 1196              	.LBE176:
 1197              	.LBE173:
 1198              	.LBB178:
 1199              	.LBB158:
 194:src/Riscv.cpp ****                 {
 1200              		.loc 1 194 17 is_stmt 1
 194:src/Riscv.cpp ****                 {
 1201              		.loc 1 194 33 is_stmt 0
 1202 04a8 97070000 		la	a5,_ZN3PCB7runningE
 1202      83B70700 
 1203              	.LVL81:
 1204 04b0 83B70700 		ld	a5,0(a5)
 194:src/Riscv.cpp ****                 {
 1205              		.loc 1 194 17
 1206 04b4 63800704 		beqz	a5,.L59
 199:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 1207              		.loc 1 199 17 is_stmt 1
 1208              	.LBB159:
 1209              	.LBB160:
 154:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 1210              		.loc 2 154 5
 155:src/../h/Riscv.hpp ****     return sstatus;
 1211              		.loc 2 155 5
 155:src/../h/Riscv.hpp ****     return sstatus;
 1212              		.loc 2 155 57 is_stmt 0
 1213              	#APP
 1214              	# 155 "src/../h/Riscv.hpp" 1
GAS LISTING /tmp/ccr4ENLm.s 			page 33


 1215              		csrr a5, sstatus
 1216              	# 0 "" 2
 1217              	#NO_APP
 1218 04bc 2338F4FA 		sd	a5,-80(s0)
 156:src/../h/Riscv.hpp **** }
 1219              		.loc 2 156 5 is_stmt 1
 156:src/../h/Riscv.hpp **** }
 1220              		.loc 2 156 12 is_stmt 0
 1221 04c0 033904FB 		ld	s2,-80(s0)
 1222              	.LVL82:
 1223              	.LBE160:
 1224              	.LBE159:
 200:src/Riscv.cpp ****                 PCB::running->setState(PCB::EXITING);
 1225              		.loc 1 200 17 is_stmt 1
 200:src/Riscv.cpp ****                 PCB::running->setState(PCB::EXITING);
 1226              		.loc 1 200 39 is_stmt 0
 1227 04c4 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 1227      83B70700 
 1228 04cc 23B00700 		sd	zero,0(a5)
 201:src/Riscv.cpp ****                 PCB::running->setState(PCB::FINISHED);
 1229              		.loc 1 201 17 is_stmt 1
 201:src/Riscv.cpp ****                 PCB::running->setState(PCB::FINISHED);
 1230              		.loc 1 201 39 is_stmt 0
 1231 04d0 97070000 		la	a5,_ZN3PCB7runningE
 1231      83B70700 
 1232 04d8 83B70700 		ld	a5,0(a5)
 1233              	.LVL83:
 1234              	.LBE158:
 1235              	.LBE178:
 1236              	.LBE188:
 1237              	.LBE200:
 1238              	.LBE211:
 1239              	.LBE224:
 1240              	.LBE235:
 1241              	.LBE246:
 1242              		.loc 3 35 29 is_stmt 1
 1243              	.LBB247:
 1244              	.LBB236:
 1245              	.LBB225:
 1246              	.LBB212:
 1247              	.LBB201:
 1248              	.LBB189:
 1249              	.LBB179:
 1250              	.LBB165:
 202:src/Riscv.cpp ****                 PCB::dispatch();
 1251              		.loc 1 202 17
 1252              	.LBB161:
 1253              	.LBB162:
 1254              		.loc 3 35 29
 1255              		.loc 3 35 35 is_stmt 0
 1256 04dc 13073000 		li	a4,3
 1257 04e0 23A8E702 		sw	a4,48(a5)
 1258              	.LVL84:
 1259              	.LBE162:
 1260              	.LBE161:
 203:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1261              		.loc 1 203 17 is_stmt 1
GAS LISTING /tmp/ccr4ENLm.s 			page 34


 203:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1262              		.loc 1 203 30 is_stmt 0
 1263 04e4 97000000 		call	_ZN3PCB8dispatchEv@plt
 1263      E7800000 
 1264              	.LVL85:
 204:src/Riscv.cpp ****             }
 1265              		.loc 1 204 17 is_stmt 1
 1266              	.LBB163:
 1267              	.LBB164:
 160:src/../h/Riscv.hpp **** }
 1268              		.loc 2 160 5
 160:src/../h/Riscv.hpp **** }
 1269              		.loc 2 160 57 is_stmt 0
 1270              	#APP
 1271              	# 160 "src/../h/Riscv.hpp" 1
 1272              		csrw sstatus, s2
 1273              	# 0 "" 2
 1274              		.loc 2 161 1
 1275              	#NO_APP
 1276 04f0 6FF09FF2 		j	.L29
 1277              	.LVL86:
 1278              	.L59:
 1279              	.LBE164:
 1280              	.LBE163:
 196:src/Riscv.cpp ****                     return;
 1281              		.loc 1 196 21 is_stmt 1
 196:src/Riscv.cpp ****                     return;
 1282              		.loc 1 196 66 is_stmt 0
 1283              	#APP
 1284              	# 196 "src/Riscv.cpp" 1
 197:src/Riscv.cpp ****                 }
 1285              		li a0, 0xffffffffffffffff
 1286              	# 0 "" 2
 1287              		.loc 1 197 21 is_stmt 1
 1288              	#NO_APP
 1289 04f8 6FF09FE5 		j	.L23
 1290              	.LVL87:
 1291              	.L54:
 1292              	.LBE165:
 1293              	.LBB166:
 1294              	.LBB145:
 208:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(time));
 1295              		.loc 1 208 17
 209:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 1296              		.loc 1 209 17
 209:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 1297              		.loc 1 209 59 is_stmt 0
 1298              	#APP
 1299              	# 209 "src/Riscv.cpp" 1
 1300              		mv a4, a1
 1301              	# 0 "" 2
 1302              	.LVL88:
 210:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 1303              		.loc 1 210 17 is_stmt 1
 1304              	#NO_APP
 1305              	.LBB146:
 1306              	.LBB147:
GAS LISTING /tmp/ccr4ENLm.s 			page 35


 154:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 1307              		.loc 2 154 5
 155:src/../h/Riscv.hpp ****     return sstatus;
 1308              		.loc 2 155 5
 155:src/../h/Riscv.hpp ****     return sstatus;
 1309              		.loc 2 155 57 is_stmt 0
 1310              	#APP
 1311              	# 155 "src/../h/Riscv.hpp" 1
 1312              		csrr a5, sstatus
 1313              	# 0 "" 2
 1314              	.LVL89:
 1315              	#NO_APP
 1316 0504 233CF4FA 		sd	a5,-72(s0)
 156:src/../h/Riscv.hpp **** }
 1317              		.loc 2 156 5 is_stmt 1
 156:src/../h/Riscv.hpp **** }
 1318              		.loc 2 156 12 is_stmt 0
 1319 0508 033984FB 		ld	s2,-72(s0)
 1320              	.LVL90:
 1321              	.LBE147:
 1322              	.LBE146:
 211:src/Riscv.cpp ****                 PCB::running->setTimeToSleep(time);
 1323              		.loc 1 211 17 is_stmt 1
 211:src/Riscv.cpp ****                 PCB::running->setTimeToSleep(time);
 1324              		.loc 1 211 39 is_stmt 0
 1325 050c 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 1325      83B70700 
 1326 0514 23B00700 		sd	zero,0(a5)
 212:src/Riscv.cpp ****                 SleepPCBList::insertSleepingPCB();
 1327              		.loc 1 212 17 is_stmt 1
 212:src/Riscv.cpp ****                 SleepPCBList::insertSleepingPCB();
 1328              		.loc 1 212 45 is_stmt 0
 1329 0518 97070000 		la	a5,_ZN3PCB7runningE
 1329      83B70700 
 1330 0520 83B70700 		ld	a5,0(a5)
 1331              	.LVL91:
 1332              	.LBB148:
 1333              	.LBB149:
  36:src/../h/PCB.hpp ****     void setTimeToSleep(uint64 time) {timeToSleep = time;}
 1334              		.loc 3 36 39 is_stmt 1
 1335              		.loc 3 36 51 is_stmt 0
 1336 0524 23B8E700 		sd	a4,16(a5)
 1337              	.LVL92:
 1338              	.LBE149:
 1339              	.LBE148:
 213:src/Riscv.cpp ****                 PCB::dispatch();
 1340              		.loc 1 213 17 is_stmt 1
 213:src/Riscv.cpp ****                 PCB::dispatch();
 1341              		.loc 1 213 48 is_stmt 0
 1342 0528 97000000 		call	_ZN12SleepPCBList17insertSleepingPCBEv@plt
 1342      E7800000 
 1343              	.LVL93:
 214:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1344              		.loc 1 214 17 is_stmt 1
 214:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1345              		.loc 1 214 30 is_stmt 0
 1346 0530 97000000 		call	_ZN3PCB8dispatchEv@plt
GAS LISTING /tmp/ccr4ENLm.s 			page 36


 1346      E7800000 
 1347              	.LVL94:
 215:src/Riscv.cpp ****                 //todo
 1348              		.loc 1 215 17 is_stmt 1
 1349              	.LBB150:
 1350              	.LBB151:
 160:src/../h/Riscv.hpp **** }
 1351              		.loc 2 160 5
 160:src/../h/Riscv.hpp **** }
 1352              		.loc 2 160 57 is_stmt 0
 1353              	#APP
 1354              	# 160 "src/../h/Riscv.hpp" 1
 1355              		csrw sstatus, s2
 1356              	# 0 "" 2
 1357              	.LVL95:
 1358              	#NO_APP
 1359              	.LBE151:
 1360              	.LBE150:
 218:src/Riscv.cpp ****             }
 1361              		.loc 1 218 17 is_stmt 1
 218:src/Riscv.cpp ****             }
 1362              		.loc 1 218 47 is_stmt 0
 1363              	#APP
 1364              	# 218 "src/Riscv.cpp" 1
 1365              		li a0, 0x0
 1366              	# 0 "" 2
 1367              	#NO_APP
 1368              	.LBE145:
 1369 0540 6FF09FED 		j	.L29
 1370              	.LVL96:
 1371              	.L55:
 1372              	.LBB152:
 1373              	.LBB139:
 222:src/Riscv.cpp ****                 KSemaphore** semaphoreHandle;
 1374              		.loc 1 222 17 is_stmt 1
 223:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(semaphoreHandle));
 1375              		.loc 1 223 17
 224:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(val));
 1376              		.loc 1 224 17
 224:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(val));
 1377              		.loc 1 224 70 is_stmt 0
 1378              	#APP
 1379              	# 224 "src/Riscv.cpp" 1
 1380              		mv s3, a1
 1381              	# 0 "" 2
 1382              	.LVL97:
 225:src/Riscv.cpp **** 
 1383              		.loc 1 225 17 is_stmt 1
 225:src/Riscv.cpp **** 
 1384              		.loc 1 225 58 is_stmt 0
 1385              	# 225 "src/Riscv.cpp" 1
 1386              		mv s4, a2
 1387              	# 0 "" 2
 1388              	.LVL98:
 227:src/Riscv.cpp **** 
 1389              		.loc 1 227 17 is_stmt 1
 227:src/Riscv.cpp **** 
GAS LISTING /tmp/ccr4ENLm.s 			page 37


 1390              		.loc 1 227 56 is_stmt 0
 1391              	#NO_APP
 1392 054c 13058001 		li	a0,24
 1393 0550 97000000 		call	_ZN10KSemaphorenwEm@plt
 1393      E7800000 
 1394              	.LVL99:
 1395              	.LEHE6:
 1396 0558 13090500 		mv	s2,a0
 1397              	.LVL100:
 1398 055c 9B050A00 		sext.w	a1,s4
 1399              	.LEHB7:
 1400 0560 97000000 		call	_ZN10KSemaphoreC1Ei@plt
 1400      E7800000 
 1401              	.LVL101:
 1402              	.LEHE7:
 229:src/Riscv.cpp **** 
 1403              		.loc 1 229 17 is_stmt 1 discriminator 2
 229:src/Riscv.cpp **** 
 1404              		.loc 1 229 36 is_stmt 0 discriminator 2
 1405 0568 23B02901 		sd	s2,0(s3)
 231:src/Riscv.cpp ****                         __asm__ volatile("li a0, 0xffffffffffffffff");
 1406              		.loc 1 231 17 is_stmt 1 discriminator 2
 1407 056c 63060900 		beqz	s2,.L60
 234:src/Riscv.cpp **** 
 1408              		.loc 1 234 25
 234:src/Riscv.cpp **** 
 1409              		.loc 1 234 53 is_stmt 0
 1410              	#APP
 1411              	# 234 "src/Riscv.cpp" 1
 1412              		li a0, 0
 1413              	# 0 "" 2
 1414              	#NO_APP
 1415 0574 6FF05FEA 		j	.L29
 1416              	.L60:
 232:src/Riscv.cpp ****                 else
 1417              		.loc 1 232 25 is_stmt 1
 232:src/Riscv.cpp ****                 else
 1418              		.loc 1 232 70 is_stmt 0
 1419              	#APP
 1420              	# 232 "src/Riscv.cpp" 1
 1421              		li a0, 0xffffffffffffffff
 1422              	# 0 "" 2
 1423              	#NO_APP
 1424 057c 6FF0DFE9 		j	.L29
 1425              	.LVL102:
 1426              	.L56:
 1427              	.LBE139:
 1428              	.LBB140:
 1429              	.LBB135:
 241:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(kSem));
 1430              		.loc 1 241 17 is_stmt 1
 242:src/Riscv.cpp ****                 uint64 retval = kSem->wait();
 1431              		.loc 1 242 17
 242:src/Riscv.cpp ****                 uint64 retval = kSem->wait();
 1432              		.loc 1 242 59 is_stmt 0
 1433              	#APP
 1434              	# 242 "src/Riscv.cpp" 1
GAS LISTING /tmp/ccr4ENLm.s 			page 38


 1435              		mv a0, a1
 1436              	# 0 "" 2
 1437              	.LVL103:
 243:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 1438              		.loc 1 243 17 is_stmt 1
 1439              	.LEHB8:
 243:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 1440              		.loc 1 243 43 is_stmt 0
 1441              	#NO_APP
 1442 0584 97000000 		call	_ZN10KSemaphore4waitEv@plt
 1442      E7800000 
 1443              	.LVL104:
 244:src/Riscv.cpp ****             }
 1444              		.loc 1 244 17 is_stmt 1
 244:src/Riscv.cpp ****             }
 1445              		.loc 1 244 60 is_stmt 0
 1446              	#APP
 1447              	# 244 "src/Riscv.cpp" 1
 1448              		mv a0,a0
 1449              	# 0 "" 2
 1450              	#NO_APP
 1451              	.LBE135:
 1452 0590 6FF09FE8 		j	.L29
 1453              	.LVL105:
 1454              	.L57:
 1455              	.LBB136:
 1456              	.LBB133:
 250:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(kSem));
 1457              		.loc 1 250 17 is_stmt 1
 251:src/Riscv.cpp ****                 uint64 retval = kSem->signal();
 1458              		.loc 1 251 17
 251:src/Riscv.cpp ****                 uint64 retval = kSem->signal();
 1459              		.loc 1 251 59 is_stmt 0
 1460              	#APP
 1461              	# 251 "src/Riscv.cpp" 1
 1462              		mv a0, a1
 1463              	# 0 "" 2
 1464              	.LVL106:
 252:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 1465              		.loc 1 252 17 is_stmt 1
 252:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 1466              		.loc 1 252 45 is_stmt 0
 1467              	#NO_APP
 1468 0598 97000000 		call	_ZN10KSemaphore6signalEv@plt
 1468      E7800000 
 1469              	.LVL107:
 1470              	.LEHE8:
 253:src/Riscv.cpp ****             }
 1471              		.loc 1 253 17 is_stmt 1
 253:src/Riscv.cpp ****             }
 1472              		.loc 1 253 60 is_stmt 0
 1473              	#APP
 1474              	# 253 "src/Riscv.cpp" 1
 1475              		mv a0,a0
 1476              	# 0 "" 2
 1477              	#NO_APP
 1478              	.LBE133:
GAS LISTING /tmp/ccr4ENLm.s 			page 39


 1479 05a4 6FF05FE7 		j	.L29
 1480              	.LVL108:
 1481              	.L44:
 1482 05a8 93040500 		mv	s1,a0
 1483              	.LVL109:
 1484              	.LBE136:
 1485              	.LBE140:
 1486              	.LBE152:
 1487              	.LBE166:
 1488              	.LBE179:
 1489              	.LBE189:
 1490              	.LBB190:
 176:src/Riscv.cpp **** 
 1491              		.loc 1 176 113
 1492 05ac 13850900 		mv	a0,s3
 1493 05b0 97000000 		call	_ZN3PCBdlEPv@plt
 1493      E7800000 
 1494              	.LVL110:
 1495 05b8 13850400 		mv	a0,s1
 1496              	.LEHB9:
 1497 05bc 97000000 		call	_Unwind_Resume@plt
 1497      E7800000 
 1498              	.LVL111:
 1499              	.LEHE9:
 1500              	.L45:
 1501 05c4 93040500 		mv	s1,a0
 1502              	.LVL112:
 1503              	.LBE190:
 1504              	.LBB191:
 1505              	.LBB180:
 1506              	.LBB167:
 1507              	.LBB153:
 1508              	.LBB141:
 227:src/Riscv.cpp **** 
 1509              		.loc 1 227 56
 1510 05c8 13050900 		mv	a0,s2
 1511 05cc 97000000 		call	_ZN10KSemaphoredlEPv@plt
 1511      E7800000 
 1512              	.LVL113:
 1513 05d4 13850400 		mv	a0,s1
 1514              	.LEHB10:
 1515 05d8 97000000 		call	_Unwind_Resume@plt
 1515      E7800000 
 1516              	.LVL114:
 1517              	.LEHE10:
 1518              	.LBE141:
 1519              	.LBE153:
 1520              	.LBE167:
 1521              	.LBE180:
 1522              	.LBE191:
 1523              	.LBE201:
 1524              	.LBE212:
 1525              	.LBE225:
 1526              	.LBE236:
 1527              	.LBE247:
 1528              		.cfi_endproc
 1529              	.LFE30:
GAS LISTING /tmp/ccr4ENLm.s 			page 40


 1530              		.section	.gcc_except_table
 1531              	.LLSDA30:
 1532 0038 FF       		.byte	0xff
 1533 0039 FF       		.byte	0xff
 1534 003a 03       		.byte	0x3
 1535 003b 5B       		.byte	0x5b
 1536 003c 00000000 		.4byte	.LEHB4-.LFB30
 1537 0040 00000000 		.4byte	.LEHE4-.LEHB4
 1538 0044 00000000 		.4byte	0
 1539 0048 00       		.byte	0
 1540 0049 00000000 		.4byte	.LEHB5-.LFB30
 1541 004d 00000000 		.4byte	.LEHE5-.LEHB5
 1542 0051 00000000 		.4byte	.L44-.LFB30
 1543 0055 00       		.byte	0
 1544 0056 00000000 		.4byte	.LEHB6-.LFB30
 1545 005a 00000000 		.4byte	.LEHE6-.LEHB6
 1546 005e 00000000 		.4byte	0
 1547 0062 00       		.byte	0
 1548 0063 00000000 		.4byte	.LEHB7-.LFB30
 1549 0067 00000000 		.4byte	.LEHE7-.LEHB7
 1550 006b 00000000 		.4byte	.L45-.LFB30
 1551 006f 00       		.byte	0
 1552 0070 00000000 		.4byte	.LEHB8-.LFB30
 1553 0074 00000000 		.4byte	.LEHE8-.LEHB8
 1554 0078 00000000 		.4byte	0
 1555 007c 00       		.byte	0
 1556 007d 00000000 		.4byte	.LEHB9-.LFB30
 1557 0081 00000000 		.4byte	.LEHE9-.LEHB9
 1558 0085 00000000 		.4byte	0
 1559 0089 00       		.byte	0
 1560 008a 00000000 		.4byte	.LEHB10-.LFB30
 1561 008e 00000000 		.4byte	.LEHE10-.LEHB10
 1562 0092 00000000 		.4byte	0
 1563 0096 00       		.byte	0
 1564              		.text
 1566              		.section	.rodata
 1567              		.align	3
 1568              		.set	.LANCHOR0,. + 0
 1571              	_ZZN5Riscv12printIntegerEmE6digits:
 1572 0000 30313233 		.string	"0123456789"
 1572      34353637 
 1572      383900
 1573              		.bss
 1574              		.align	3
 1575              		.set	.LANCHOR1,. + 0
 1578              	_ZZN5Riscv20handleSupervisorTrapEvE5total:
 1579 0000 00000000 		.zero	8
 1579      00000000 
 1580              		.text
 1581              	.Letext0:
 1582              		.file 4 "src/../h/../lib/hw.h"
 1583              		.file 5 "src/../h/Queue.hpp"
 1584              		.file 6 "src/../h/Scheduler.hpp"
 1585              		.file 7 "src/../h/KSemaphore.hpp"
 1586              		.file 8 "src/../h/SleepPCBList.hpp"
 1587              		.file 9 "src/../h/syscall_cpp.hpp"
 1588              		.file 10 "src/../h/MemoryAllocator.hpp"
GAS LISTING /tmp/ccr4ENLm.s 			page 41


 1589              		.file 11 "src/../lib/console.h"
 6513              		.align	3
 6516              	DW.ref.__gxx_personality_v0:
 6517 0000 00000000 		.dword	__gxx_personality_v0
 6517      00000000 
 6518              		.ident	"GCC: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0"
 6519              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/ccr4ENLm.s 			page 42


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Riscv.cpp
     /tmp/ccr4ENLm.s:9      .text:0000000000000000 _ZN5Riscv10initSystemEv
     /tmp/ccr4ENLm.s:13     .text:0000000000000000 .L0 
     /tmp/ccr4ENLm.s:6516   .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/ccr4ENLm.s:16     .text:0000000000000000 .L0 
     /tmp/ccr4ENLm.s:17     .text:0000000000000004 .L0 
     /tmp/ccr4ENLm.s:22     .text:0000000000000014 .L0 
     /tmp/ccr4ENLm.s:23     .text:0000000000000014 .L0 
     /tmp/ccr4ENLm.s:24     .text:0000000000000014 .L0 
     /tmp/ccr4ENLm.s:25     .text:0000000000000014 .L0 
     /tmp/ccr4ENLm.s:27     .text:0000000000000018 .L0 
     /tmp/ccr4ENLm.s:29     .text:0000000000000018 .L0 
     /tmp/ccr4ENLm.s:30     .text:0000000000000018 .L0 
     /tmp/ccr4ENLm.s:36     .text:0000000000000020 .L0 
  src/../h/Riscv.hpp:114    .text:0000000000000020 .L0 
     /tmp/ccr4ENLm.s:46     .text:0000000000000024 .L0 
     /tmp/ccr4ENLm.s:47     .text:0000000000000024 .L0 
     /tmp/ccr4ENLm.s:60     .text:0000000000000044 .L0 
     /tmp/ccr4ENLm.s:61     .text:0000000000000044 .L0 
     /tmp/ccr4ENLm.s:66     .text:0000000000000050 .L0 
     /tmp/ccr4ENLm.s:67     .text:0000000000000050 .L0 
     /tmp/ccr4ENLm.s:71     .text:0000000000000058 .L0 
     /tmp/ccr4ENLm.s:78     .text:0000000000000064 .L0 
     /tmp/ccr4ENLm.s:79     .text:0000000000000064 .L0 
     /tmp/ccr4ENLm.s:80     .text:0000000000000064 .L0 
     /tmp/ccr4ENLm.s:86     .text:000000000000006c .L0 
     /tmp/ccr4ENLm.s:87     .text:0000000000000070 .L0 
     /tmp/ccr4ENLm.s:88     .text:0000000000000070 .L0 
     /tmp/ccr4ENLm.s:90     .text:0000000000000074 .L0 
     /tmp/ccr4ENLm.s:91     .text:0000000000000074 .L0 
     /tmp/ccr4ENLm.s:93     .text:0000000000000078 .L0 
     /tmp/ccr4ENLm.s:96     .text:000000000000007c .L0 
     /tmp/ccr4ENLm.s:98     .text:0000000000000080 .L0 
     /tmp/ccr4ENLm.s:101    .text:0000000000000084 .L0 
     /tmp/ccr4ENLm.s:104    .text:0000000000000088 .L0 
     /tmp/ccr4ENLm.s:112    .text:00000000000000a0 .L0 
     /tmp/ccr4ENLm.s:142    .text:00000000000000a0 _ZN5Riscv16enableInterruptsEv
     /tmp/ccr4ENLm.s:145    .text:00000000000000a0 .L0 
     /tmp/ccr4ENLm.s:146    .text:00000000000000a0 .L0 
     /tmp/ccr4ENLm.s:147    .text:00000000000000a4 .L0 
     /tmp/ccr4ENLm.s:149    .text:00000000000000a8 .L0 
     /tmp/ccr4ENLm.s:151    .text:00000000000000ac .L0 
     /tmp/ccr4ENLm.s:156    .text:00000000000000ac .L0 
     /tmp/ccr4ENLm.s:157    .text:00000000000000ac .L0 
     /tmp/ccr4ENLm.s:158    .text:00000000000000ac .L0 
     /tmp/ccr4ENLm.s:168    .text:00000000000000b4 .L0 
     /tmp/ccr4ENLm.s:169    .text:00000000000000b8 .L0 
     /tmp/ccr4ENLm.s:170    .text:00000000000000b8 .L0 
     /tmp/ccr4ENLm.s:172    .text:00000000000000bc .L0 
     /tmp/ccr4ENLm.s:174    .text:00000000000000c0 .L0 
     /tmp/ccr4ENLm.s:180    .text:00000000000000c0 _ZN5Riscv17disableInterruptsEv
     /tmp/ccr4ENLm.s:183    .text:00000000000000c0 .L0 
     /tmp/ccr4ENLm.s:184    .text:00000000000000c0 .L0 
     /tmp/ccr4ENLm.s:185    .text:00000000000000c4 .L0 
     /tmp/ccr4ENLm.s:187    .text:00000000000000c8 .L0 
     /tmp/ccr4ENLm.s:189    .text:00000000000000cc .L0 
GAS LISTING /tmp/ccr4ENLm.s 			page 43


     /tmp/ccr4ENLm.s:194    .text:00000000000000cc .L0 
     /tmp/ccr4ENLm.s:195    .text:00000000000000cc .L0 
     /tmp/ccr4ENLm.s:196    .text:00000000000000cc .L0 
     /tmp/ccr4ENLm.s:206    .text:00000000000000d4 .L0 
     /tmp/ccr4ENLm.s:207    .text:00000000000000d8 .L0 
     /tmp/ccr4ENLm.s:208    .text:00000000000000d8 .L0 
     /tmp/ccr4ENLm.s:210    .text:00000000000000dc .L0 
     /tmp/ccr4ENLm.s:212    .text:00000000000000e0 .L0 
     /tmp/ccr4ENLm.s:218    .text:00000000000000e0 _ZN5Riscv9endSystemEv
     /tmp/ccr4ENLm.s:221    .text:00000000000000e0 .L0 
     /tmp/ccr4ENLm.s:222    .text:00000000000000e0 .L0 
     /tmp/ccr4ENLm.s:223    .text:00000000000000e4 .L0 
     /tmp/ccr4ENLm.s:226    .text:00000000000000ec .L0 
     /tmp/ccr4ENLm.s:227    .text:00000000000000ec .L0 
     /tmp/ccr4ENLm.s:229    .text:00000000000000f0 .L0 
     /tmp/ccr4ENLm.s:231    .text:00000000000000f0 .L0 
     /tmp/ccr4ENLm.s:232    .text:00000000000000f0 .L0 
     /tmp/ccr4ENLm.s:235    .text:00000000000000f8 .L0 
     /tmp/ccr4ENLm.s:236    .text:00000000000000fc .L0 
     /tmp/ccr4ENLm.s:238    .text:0000000000000100 .L0 
     /tmp/ccr4ENLm.s:239    .text:0000000000000100 .L0 
     /tmp/ccr4ENLm.s:241    .text:0000000000000104 .L0 
     /tmp/ccr4ENLm.s:243    .text:0000000000000108 .L0 
     /tmp/ccr4ENLm.s:249    .text:0000000000000108 _ZN5Riscv10popSppSpieEv
     /tmp/ccr4ENLm.s:252    .text:0000000000000108 .L0 
     /tmp/ccr4ENLm.s:253    .text:0000000000000108 .L0 
     /tmp/ccr4ENLm.s:254    .text:000000000000010c .L0 
     /tmp/ccr4ENLm.s:256    .text:0000000000000110 .L0 
     /tmp/ccr4ENLm.s:258    .text:0000000000000114 .L0 
     /tmp/ccr4ENLm.s:260    .text:0000000000000114 .L0 
       src/Riscv.cpp:40     .text:0000000000000114 .L0 
     /tmp/ccr4ENLm.s:266    .text:0000000000000118 .L0 
       src/Riscv.cpp:41     .text:0000000000000118 .L0 
     /tmp/ccr4ENLm.s:272    .text:000000000000011c .L0 
     /tmp/ccr4ENLm.s:273    .text:0000000000000120 .L0 
     /tmp/ccr4ENLm.s:274    .text:0000000000000120 .L0 
     /tmp/ccr4ENLm.s:276    .text:0000000000000124 .L0 
     /tmp/ccr4ENLm.s:278    .text:0000000000000128 .L0 
     /tmp/ccr4ENLm.s:284    .text:0000000000000128 _ZN5Riscv11printStringEPKc
     /tmp/ccr4ENLm.s:287    .text:0000000000000128 .L0 
     /tmp/ccr4ENLm.s:289    .text:0000000000000128 .L0 
     /tmp/ccr4ENLm.s:290    .text:000000000000012c .L0 
     /tmp/ccr4ENLm.s:295    .text:000000000000013c .L0 
     /tmp/ccr4ENLm.s:296    .text:000000000000013c .L0 
     /tmp/ccr4ENLm.s:297    .text:000000000000013c .L0 
     /tmp/ccr4ENLm.s:298    .text:000000000000013c .L0 
     /tmp/ccr4ENLm.s:300    .text:0000000000000140 .L0 
     /tmp/ccr4ENLm.s:305    .text:0000000000000144 .L0 
     /tmp/ccr4ENLm.s:306    .text:0000000000000144 .L0 
     /tmp/ccr4ENLm.s:307    .text:0000000000000144 .L0 
  src/../h/Riscv.hpp:155    .text:0000000000000144 .L0 
     /tmp/ccr4ENLm.s:315    .text:000000000000014c .L0 
     /tmp/ccr4ENLm.s:316    .text:000000000000014c .L0 
     /tmp/ccr4ENLm.s:323    .text:0000000000000150 .L0 
     /tmp/ccr4ENLm.s:324    .text:0000000000000150 .L0 
     /tmp/ccr4ENLm.s:325    .text:0000000000000150 .L0 
     /tmp/ccr4ENLm.s:336    .text:0000000000000158 .L0 
GAS LISTING /tmp/ccr4ENLm.s 			page 44


     /tmp/ccr4ENLm.s:337    .text:0000000000000158 .L0 
     /tmp/ccr4ENLm.s:338    .text:0000000000000158 .L0 
     /tmp/ccr4ENLm.s:340    .text:000000000000015c .L0 
     /tmp/ccr4ENLm.s:342    .text:0000000000000160 .L0 
     /tmp/ccr4ENLm.s:343    .text:0000000000000160 .L0 
     /tmp/ccr4ENLm.s:346    .text:0000000000000168 .L0 
     /tmp/ccr4ENLm.s:347    .text:0000000000000168 .L0 
     /tmp/ccr4ENLm.s:350    .text:000000000000016c .L0 
     /tmp/ccr4ENLm.s:353    .text:0000000000000170 .L0 
     /tmp/ccr4ENLm.s:354    .text:0000000000000170 .L0 
     /tmp/ccr4ENLm.s:357    .text:0000000000000174 .L0 
     /tmp/ccr4ENLm.s:363    .text:000000000000017c .L0 
  src/../h/Riscv.hpp:146    .text:000000000000017c .L0 
     /tmp/ccr4ENLm.s:373    .text:0000000000000180 .L0 
     /tmp/ccr4ENLm.s:374    .text:0000000000000184 .L0 
     /tmp/ccr4ENLm.s:376    .text:0000000000000188 .L0 
     /tmp/ccr4ENLm.s:377    .text:0000000000000188 .L0 
     /tmp/ccr4ENLm.s:379    .text:000000000000018c .L0 
     /tmp/ccr4ENLm.s:382    .text:0000000000000190 .L0 
     /tmp/ccr4ENLm.s:384    .text:0000000000000194 .L0 
     /tmp/ccr4ENLm.s:386    .text:0000000000000198 .L0 
     /tmp/ccr4ENLm.s:392    .text:0000000000000198 _ZN5Riscv12printIntegerEm
     /tmp/ccr4ENLm.s:395    .text:0000000000000198 .L0 
     /tmp/ccr4ENLm.s:397    .text:0000000000000198 .L0 
     /tmp/ccr4ENLm.s:398    .text:000000000000019c .L0 
     /tmp/ccr4ENLm.s:403    .text:00000000000001ac .L0 
     /tmp/ccr4ENLm.s:404    .text:00000000000001ac .L0 
     /tmp/ccr4ENLm.s:405    .text:00000000000001ac .L0 
     /tmp/ccr4ENLm.s:406    .text:00000000000001ac .L0 
     /tmp/ccr4ENLm.s:408    .text:00000000000001b0 .L0 
     /tmp/ccr4ENLm.s:412    .text:00000000000001b0 .L0 
     /tmp/ccr4ENLm.s:413    .text:00000000000001b0 .L0 
     /tmp/ccr4ENLm.s:414    .text:00000000000001b0 .L0 
  src/../h/Riscv.hpp:155    .text:00000000000001b0 .L0 
     /tmp/ccr4ENLm.s:422    .text:00000000000001b8 .L0 
     /tmp/ccr4ENLm.s:423    .text:00000000000001b8 .L0 
     /tmp/ccr4ENLm.s:430    .text:00000000000001bc .L0 
     /tmp/ccr4ENLm.s:431    .text:00000000000001bc .L0 
     /tmp/ccr4ENLm.s:432    .text:00000000000001bc .L0 
     /tmp/ccr4ENLm.s:442    .text:00000000000001c4 .L0 
     /tmp/ccr4ENLm.s:443    .text:00000000000001c4 .L0 
     /tmp/ccr4ENLm.s:444    .text:00000000000001c4 .L0 
     /tmp/ccr4ENLm.s:445    .text:00000000000001c4 .L0 
     /tmp/ccr4ENLm.s:446    .text:00000000000001c4 .L0 
     /tmp/ccr4ENLm.s:447    .text:00000000000001c4 .L0 
     /tmp/ccr4ENLm.s:448    .text:00000000000001c4 .L0 
     /tmp/ccr4ENLm.s:449    .text:00000000000001c4 .L0 
     /tmp/ccr4ENLm.s:452    .text:00000000000001c8 .L0 
     /tmp/ccr4ENLm.s:453    .text:00000000000001c8 .L0 
     /tmp/ccr4ENLm.s:457    .text:00000000000001cc .L0 
     /tmp/ccr4ENLm.s:458    .text:00000000000001cc .L0 
     /tmp/ccr4ENLm.s:459    .text:00000000000001cc .L0 
     /tmp/ccr4ENLm.s:463    .text:00000000000001d4 .L0 
     /tmp/ccr4ENLm.s:469    .text:00000000000001ec .L0 
     /tmp/ccr4ENLm.s:475    .text:00000000000001fc .L0 
     /tmp/ccr4ENLm.s:477    .text:0000000000000200 .L0 
     /tmp/ccr4ENLm.s:480    .text:0000000000000204 .L0 
GAS LISTING /tmp/ccr4ENLm.s 			page 45


     /tmp/ccr4ENLm.s:485    .text:000000000000020c .L0 
     /tmp/ccr4ENLm.s:486    .text:000000000000020c .L0 
     /tmp/ccr4ENLm.s:490    .text:0000000000000214 .L0 
     /tmp/ccr4ENLm.s:491    .text:0000000000000214 .L0 
     /tmp/ccr4ENLm.s:499    .text:000000000000022c .L0 
     /tmp/ccr4ENLm.s:500    .text:000000000000022c .L0 
     /tmp/ccr4ENLm.s:504    .text:0000000000000238 .L0 
     /tmp/ccr4ENLm.s:505    .text:0000000000000238 .L0 
     /tmp/ccr4ENLm.s:508    .text:000000000000023c .L0 
     /tmp/ccr4ENLm.s:514    .text:0000000000000244 .L0 
  src/../h/Riscv.hpp:146    .text:0000000000000244 .L0 
     /tmp/ccr4ENLm.s:524    .text:0000000000000248 .L0 
     /tmp/ccr4ENLm.s:525    .text:000000000000024c .L0 
     /tmp/ccr4ENLm.s:527    .text:0000000000000250 .L0 
     /tmp/ccr4ENLm.s:528    .text:0000000000000250 .L0 
     /tmp/ccr4ENLm.s:530    .text:0000000000000254 .L0 
     /tmp/ccr4ENLm.s:532    .text:0000000000000258 .L0 
     /tmp/ccr4ENLm.s:534    .text:000000000000025c .L0 
     /tmp/ccr4ENLm.s:536    .text:0000000000000260 .L0 
     /tmp/ccr4ENLm.s:542    .text:0000000000000260 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccr4ENLm.s:545    .text:0000000000000260 .L0 
     /tmp/ccr4ENLm.s:548    .text:0000000000000260 .L0 
     /tmp/ccr4ENLm.s:549    .text:0000000000000264 .L0 
     /tmp/ccr4ENLm.s:558    .text:0000000000000284 .L0 
     /tmp/ccr4ENLm.s:559    .text:0000000000000284 .L0 
     /tmp/ccr4ENLm.s:560    .text:0000000000000284 .L0 
     /tmp/ccr4ENLm.s:561    .text:0000000000000284 .L0 
     /tmp/ccr4ENLm.s:562    .text:0000000000000284 .L0 
     /tmp/ccr4ENLm.s:563    .text:0000000000000284 .L0 
     /tmp/ccr4ENLm.s:564    .text:0000000000000284 .L0 
     /tmp/ccr4ENLm.s:565    .text:0000000000000284 .L0 
     /tmp/ccr4ENLm.s:567    .text:0000000000000288 .L0 
     /tmp/ccr4ENLm.s:569    .text:0000000000000288 .L0 
     /tmp/ccr4ENLm.s:570    .text:0000000000000288 .L0 
       src/Riscv.cpp:93     .text:0000000000000288 .L0 
     /tmp/ccr4ENLm.s:580    .text:000000000000028c .L0 
     /tmp/ccr4ENLm.s:581    .text:000000000000028c .L0 
     /tmp/ccr4ENLm.s:582    .text:000000000000028c .L0 
  src/../h/Riscv.hpp:89     .text:000000000000028c .L0 
     /tmp/ccr4ENLm.s:590    .text:0000000000000294 .L0 
     /tmp/ccr4ENLm.s:591    .text:0000000000000294 .L0 
     /tmp/ccr4ENLm.s:597    .text:0000000000000298 .L0 
     /tmp/ccr4ENLm.s:605    .text:00000000000002b0 .L0 
     /tmp/ccr4ENLm.s:609    .text:00000000000002b0 .L0 
     /tmp/ccr4ENLm.s:610    .text:00000000000002b0 .L0 
     /tmp/ccr4ENLm.s:611    .text:00000000000002b0 .L0 
     /tmp/ccr4ENLm.s:621    .text:00000000000002b8 .L0 
     /tmp/ccr4ENLm.s:622    .text:00000000000002b8 .L0 
     /tmp/ccr4ENLm.s:623    .text:00000000000002b8 .L0 
     /tmp/ccr4ENLm.s:629    .text:00000000000002cc .L0 
     /tmp/ccr4ENLm.s:630    .text:00000000000002cc .L0 
     /tmp/ccr4ENLm.s:633    .text:00000000000002d4 .L0 
     /tmp/ccr4ENLm.s:634    .text:00000000000002d4 .L0 
     /tmp/ccr4ENLm.s:639    .text:00000000000002e8 .L0 
     /tmp/ccr4ENLm.s:640    .text:00000000000002e8 .L0 
     /tmp/ccr4ENLm.s:644    .text:00000000000002f0 .L0 
     /tmp/ccr4ENLm.s:645    .text:00000000000002f0 .L0 
GAS LISTING /tmp/ccr4ENLm.s 			page 46


     /tmp/ccr4ENLm.s:651    .text:00000000000002fc .L0 
     /tmp/ccr4ENLm.s:652    .text:00000000000002fc .L0 
     /tmp/ccr4ENLm.s:657    .text:0000000000000300 .L0 
     /tmp/ccr4ENLm.s:659    .text:0000000000000304 .L0 
     /tmp/ccr4ENLm.s:664    .text:0000000000000308 .L0 
     /tmp/ccr4ENLm.s:665    .text:0000000000000308 .L0 
     /tmp/ccr4ENLm.s:666    .text:0000000000000308 .L0 
  src/../h/Riscv.hpp:99     .text:0000000000000308 .L0 
     /tmp/ccr4ENLm.s:674    .text:0000000000000310 .L0 
     /tmp/ccr4ENLm.s:675    .text:0000000000000310 .L0 
     /tmp/ccr4ENLm.s:682    .text:0000000000000314 .L0 
     /tmp/ccr4ENLm.s:683    .text:0000000000000314 .L0 
     /tmp/ccr4ENLm.s:684    .text:0000000000000314 .L0 
  src/../h/Riscv.hpp:155    .text:0000000000000314 .L0 
     /tmp/ccr4ENLm.s:692    .text:000000000000031c .L0 
     /tmp/ccr4ENLm.s:693    .text:000000000000031c .L0 
     /tmp/ccr4ENLm.s:698    .text:0000000000000320 .L0 
     /tmp/ccr4ENLm.s:699    .text:0000000000000320 .L0 
     /tmp/ccr4ENLm.s:702    .text:000000000000032c .L0 
     /tmp/ccr4ENLm.s:703    .text:000000000000032c .L0 
     /tmp/ccr4ENLm.s:708    .text:0000000000000334 .L0 
     /tmp/ccr4ENLm.s:709    .text:0000000000000334 .L0 
  src/../h/Riscv.hpp:160    .text:0000000000000334 .L0 
     /tmp/ccr4ENLm.s:721    .text:0000000000000338 .L0 
     /tmp/ccr4ENLm.s:722    .text:0000000000000338 .L0 
  src/../h/Riscv.hpp:104    .text:0000000000000338 .L0 
     /tmp/ccr4ENLm.s:729    .text:000000000000033c .L0 
     /tmp/ccr4ENLm.s:738    .text:0000000000000340 .L0 
     /tmp/ccr4ENLm.s:743    .text:0000000000000348 .L0 
     /tmp/ccr4ENLm.s:744    .text:0000000000000348 .L0 
     /tmp/ccr4ENLm.s:748    .text:0000000000000350 .L0 
     /tmp/ccr4ENLm.s:749    .text:0000000000000354 .L0 
     /tmp/ccr4ENLm.s:750    .text:0000000000000354 .L0 
     /tmp/ccr4ENLm.s:752    .text:0000000000000358 .L0 
     /tmp/ccr4ENLm.s:753    .text:0000000000000358 .L0 
     /tmp/ccr4ENLm.s:755    .text:000000000000035c .L0 
     /tmp/ccr4ENLm.s:757    .text:0000000000000360 .L0 
     /tmp/ccr4ENLm.s:759    .text:0000000000000364 .L0 
     /tmp/ccr4ENLm.s:761    .text:0000000000000368 .L0 
     /tmp/ccr4ENLm.s:763    .text:000000000000036c .L0 
     /tmp/ccr4ENLm.s:765    .text:0000000000000370 .L0 
     /tmp/ccr4ENLm.s:767    .text:0000000000000374 .L0 
     /tmp/ccr4ENLm.s:771    .text:0000000000000378 .L0 
     /tmp/ccr4ENLm.s:775    .text:0000000000000378 .L0 
     /tmp/ccr4ENLm.s:776    .text:0000000000000378 .L0 
     /tmp/ccr4ENLm.s:777    .text:0000000000000378 .L0 
     /tmp/ccr4ENLm.s:778    .text:0000000000000378 .L0 
       src/Riscv.cpp:144    .text:0000000000000378 .L0 
     /tmp/ccr4ENLm.s:788    .text:000000000000037c .L0 
     /tmp/ccr4ENLm.s:789    .text:000000000000037c .L0 
     /tmp/ccr4ENLm.s:790    .text:000000000000037c .L0 
  src/../h/Riscv.hpp:99     .text:000000000000037c .L0 
     /tmp/ccr4ENLm.s:799    .text:0000000000000384 .L0 
     /tmp/ccr4ENLm.s:800    .text:0000000000000384 .L0 
     /tmp/ccr4ENLm.s:805    .text:0000000000000388 .L0 
     /tmp/ccr4ENLm.s:806    .text:0000000000000388 .L0 
     /tmp/ccr4ENLm.s:810    .text:000000000000038c .L0 
GAS LISTING /tmp/ccr4ENLm.s 			page 47


     /tmp/ccr4ENLm.s:820    .text:0000000000000394 .L0 
     /tmp/ccr4ENLm.s:832    .text:000000000000039c .L0 
     /tmp/ccr4ENLm.s:846    .text:00000000000003a4 .L0 
     /tmp/ccr4ENLm.s:862    .text:00000000000003ac .L0 
     /tmp/ccr4ENLm.s:880    .text:00000000000003b4 .L0 
     /tmp/ccr4ENLm.s:900    .text:00000000000003bc .L0 
     /tmp/ccr4ENLm.s:922    .text:00000000000003c4 .L0 
     /tmp/ccr4ENLm.s:946    .text:00000000000003cc .L0 
     /tmp/ccr4ENLm.s:972    .text:00000000000003d4 .L0 
     /tmp/ccr4ENLm.s:976    .text:00000000000003dc .L0 
     /tmp/ccr4ENLm.s:977    .text:00000000000003dc .L0 
       src/Riscv.cpp:260    .text:00000000000003dc .L0 
     /tmp/ccr4ENLm.s:984    .text:00000000000003e0 .L0 
     /tmp/ccr4ENLm.s:986    .text:00000000000003e0 .L0 
     /tmp/ccr4ENLm.s:988    .text:00000000000003e4 .L0 
     /tmp/ccr4ENLm.s:996    .text:00000000000003fc .L0 
       src/Riscv.cpp:264    .text:00000000000003fc .L0 
     /tmp/ccr4ENLm.s:1017   .text:0000000000000404 .L0 
     /tmp/ccr4ENLm.s:1018   .text:0000000000000404 .L0 
       src/Riscv.cpp:152    .text:0000000000000404 .L0 
     /tmp/ccr4ENLm.s:1025   .text:0000000000000408 .L0 
     /tmp/ccr4ENLm.s:1026   .text:0000000000000408 .L0 
     /tmp/ccr4ENLm.s:1028   .text:0000000000000408 .L0 
     /tmp/ccr4ENLm.s:1033   .text:0000000000000414 .L0 
       src/Riscv.cpp:155    .text:0000000000000414 .L0 
     /tmp/ccr4ENLm.s:1046   .text:0000000000000418 .L0 
     /tmp/ccr4ENLm.s:1047   .text:0000000000000418 .L0 
  src/../h/Riscv.hpp:104    .text:0000000000000418 .L0 
     /tmp/ccr4ENLm.s:1054   .text:000000000000041c .L0 
     /tmp/ccr4ENLm.s:1063   .text:0000000000000420 .L0 
     /tmp/ccr4ENLm.s:1064   .text:0000000000000420 .L0 
       src/Riscv.cpp:160    .text:0000000000000420 .L0 
     /tmp/ccr4ENLm.s:1071   .text:0000000000000424 .L0 
     /tmp/ccr4ENLm.s:1073   .text:0000000000000424 .L0 
     /tmp/ccr4ENLm.s:1076   .text:000000000000042c .L0 
       src/Riscv.cpp:162    .text:000000000000042c .L0 
     /tmp/ccr4ENLm.s:1089   .text:0000000000000434 .L0 
     /tmp/ccr4ENLm.s:1090   .text:0000000000000434 .L0 
     /tmp/ccr4ENLm.s:1091   .text:0000000000000434 .L0 
     /tmp/ccr4ENLm.s:1092   .text:0000000000000434 .L0 
       src/Riscv.cpp:169    .text:0000000000000434 .L0 
     /tmp/ccr4ENLm.s:1099   .text:0000000000000438 .L0 
       src/Riscv.cpp:170    .text:0000000000000438 .L0 
     /tmp/ccr4ENLm.s:1105   .text:000000000000043c .L0 
       src/Riscv.cpp:171    .text:000000000000043c .L0 
     /tmp/ccr4ENLm.s:1111   .text:0000000000000440 .L0 
     /tmp/ccr4ENLm.s:1113   .text:0000000000000440 .L0 
     /tmp/ccr4ENLm.s:1127   .text:0000000000000468 .L0 
     /tmp/ccr4ENLm.s:1128   .text:0000000000000468 .L0 
     /tmp/ccr4ENLm.s:1130   .text:000000000000046c .L0 
     /tmp/ccr4ENLm.s:1132   .text:0000000000000470 .L0 
       src/Riscv.cpp:183    .text:0000000000000470 .L0 
     /tmp/ccr4ENLm.s:1141   .text:0000000000000478 .L0 
       src/Riscv.cpp:181    .text:0000000000000478 .L0 
     /tmp/ccr4ENLm.s:1156   .text:0000000000000480 .L0 
     /tmp/ccr4ENLm.s:1157   .text:0000000000000480 .L0 
     /tmp/ccr4ENLm.s:1158   .text:0000000000000480 .L0 
GAS LISTING /tmp/ccr4ENLm.s 			page 48


  src/../h/Riscv.hpp:155    .text:0000000000000480 .L0 
     /tmp/ccr4ENLm.s:1167   .text:0000000000000488 .L0 
     /tmp/ccr4ENLm.s:1168   .text:0000000000000488 .L0 
     /tmp/ccr4ENLm.s:1173   .text:000000000000048c .L0 
     /tmp/ccr4ENLm.s:1174   .text:000000000000048c .L0 
     /tmp/ccr4ENLm.s:1178   .text:0000000000000498 .L0 
     /tmp/ccr4ENLm.s:1179   .text:0000000000000498 .L0 
     /tmp/ccr4ENLm.s:1184   .text:00000000000004a0 .L0 
     /tmp/ccr4ENLm.s:1185   .text:00000000000004a0 .L0 
  src/../h/Riscv.hpp:160    .text:00000000000004a0 .L0 
     /tmp/ccr4ENLm.s:1192   .text:00000000000004a4 .L0 
     /tmp/ccr4ENLm.s:1201   .text:00000000000004a8 .L0 
     /tmp/ccr4ENLm.s:1202   .text:00000000000004a8 .L0 
     /tmp/ccr4ENLm.s:1206   .text:00000000000004b4 .L0 
     /tmp/ccr4ENLm.s:1210   .text:00000000000004b8 .L0 
     /tmp/ccr4ENLm.s:1211   .text:00000000000004b8 .L0 
     /tmp/ccr4ENLm.s:1212   .text:00000000000004b8 .L0 
  src/../h/Riscv.hpp:155    .text:00000000000004b8 .L0 
     /tmp/ccr4ENLm.s:1220   .text:00000000000004c0 .L0 
     /tmp/ccr4ENLm.s:1221   .text:00000000000004c0 .L0 
     /tmp/ccr4ENLm.s:1226   .text:00000000000004c4 .L0 
     /tmp/ccr4ENLm.s:1227   .text:00000000000004c4 .L0 
     /tmp/ccr4ENLm.s:1230   .text:00000000000004d0 .L0 
     /tmp/ccr4ENLm.s:1231   .text:00000000000004d0 .L0 
     /tmp/ccr4ENLm.s:1251   .text:00000000000004dc .L0 
     /tmp/ccr4ENLm.s:1254   .text:00000000000004dc .L0 
     /tmp/ccr4ENLm.s:1255   .text:00000000000004dc .L0 
     /tmp/ccr4ENLm.s:1256   .text:00000000000004dc .L0 
     /tmp/ccr4ENLm.s:1262   .text:00000000000004e4 .L0 
     /tmp/ccr4ENLm.s:1263   .text:00000000000004e4 .L0 
     /tmp/ccr4ENLm.s:1268   .text:00000000000004ec .L0 
     /tmp/ccr4ENLm.s:1269   .text:00000000000004ec .L0 
  src/../h/Riscv.hpp:160    .text:00000000000004ec .L0 
     /tmp/ccr4ENLm.s:1276   .text:00000000000004f0 .L0 
     /tmp/ccr4ENLm.s:1282   .text:00000000000004f4 .L0 
       src/Riscv.cpp:196    .text:00000000000004f4 .L0 
     /tmp/ccr4ENLm.s:1289   .text:00000000000004f8 .L0 
     /tmp/ccr4ENLm.s:1296   .text:00000000000004fc .L0 
     /tmp/ccr4ENLm.s:1297   .text:00000000000004fc .L0 
       src/Riscv.cpp:209    .text:00000000000004fc .L0 
     /tmp/ccr4ENLm.s:1307   .text:0000000000000500 .L0 
     /tmp/ccr4ENLm.s:1308   .text:0000000000000500 .L0 
     /tmp/ccr4ENLm.s:1309   .text:0000000000000500 .L0 
  src/../h/Riscv.hpp:155    .text:0000000000000500 .L0 
     /tmp/ccr4ENLm.s:1318   .text:0000000000000508 .L0 
     /tmp/ccr4ENLm.s:1319   .text:0000000000000508 .L0 
     /tmp/ccr4ENLm.s:1324   .text:000000000000050c .L0 
     /tmp/ccr4ENLm.s:1325   .text:000000000000050c .L0 
     /tmp/ccr4ENLm.s:1328   .text:0000000000000518 .L0 
     /tmp/ccr4ENLm.s:1329   .text:0000000000000518 .L0 
     /tmp/ccr4ENLm.s:1335   .text:0000000000000524 .L0 
     /tmp/ccr4ENLm.s:1336   .text:0000000000000524 .L0 
     /tmp/ccr4ENLm.s:1341   .text:0000000000000528 .L0 
     /tmp/ccr4ENLm.s:1342   .text:0000000000000528 .L0 
     /tmp/ccr4ENLm.s:1345   .text:0000000000000530 .L0 
     /tmp/ccr4ENLm.s:1346   .text:0000000000000530 .L0 
     /tmp/ccr4ENLm.s:1351   .text:0000000000000538 .L0 
GAS LISTING /tmp/ccr4ENLm.s 			page 49


     /tmp/ccr4ENLm.s:1352   .text:0000000000000538 .L0 
  src/../h/Riscv.hpp:160    .text:0000000000000538 .L0 
     /tmp/ccr4ENLm.s:1362   .text:000000000000053c .L0 
       src/Riscv.cpp:218    .text:000000000000053c .L0 
     /tmp/ccr4ENLm.s:1375   .text:0000000000000544 .L0 
     /tmp/ccr4ENLm.s:1376   .text:0000000000000544 .L0 
     /tmp/ccr4ENLm.s:1377   .text:0000000000000544 .L0 
       src/Riscv.cpp:224    .text:0000000000000544 .L0 
     /tmp/ccr4ENLm.s:1384   .text:0000000000000548 .L0 
       src/Riscv.cpp:225    .text:0000000000000548 .L0 
     /tmp/ccr4ENLm.s:1390   .text:000000000000054c .L0 
     /tmp/ccr4ENLm.s:1392   .text:000000000000054c .L0 
     /tmp/ccr4ENLm.s:1404   .text:0000000000000568 .L0 
     /tmp/ccr4ENLm.s:1405   .text:0000000000000568 .L0 
     /tmp/ccr4ENLm.s:1407   .text:000000000000056c .L0 
     /tmp/ccr4ENLm.s:1409   .text:0000000000000570 .L0 
       src/Riscv.cpp:234    .text:0000000000000570 .L0 
     /tmp/ccr4ENLm.s:1418   .text:0000000000000578 .L0 
       src/Riscv.cpp:232    .text:0000000000000578 .L0 
     /tmp/ccr4ENLm.s:1431   .text:0000000000000580 .L0 
     /tmp/ccr4ENLm.s:1432   .text:0000000000000580 .L0 
       src/Riscv.cpp:242    .text:0000000000000580 .L0 
     /tmp/ccr4ENLm.s:1440   .text:0000000000000584 .L0 
     /tmp/ccr4ENLm.s:1442   .text:0000000000000584 .L0 
     /tmp/ccr4ENLm.s:1445   .text:000000000000058c .L0 
       src/Riscv.cpp:244    .text:000000000000058c .L0 
     /tmp/ccr4ENLm.s:1458   .text:0000000000000594 .L0 
     /tmp/ccr4ENLm.s:1459   .text:0000000000000594 .L0 
       src/Riscv.cpp:251    .text:0000000000000594 .L0 
     /tmp/ccr4ENLm.s:1466   .text:0000000000000598 .L0 
     /tmp/ccr4ENLm.s:1468   .text:0000000000000598 .L0 
     /tmp/ccr4ENLm.s:1472   .text:00000000000005a0 .L0 
       src/Riscv.cpp:253    .text:00000000000005a0 .L0 
     /tmp/ccr4ENLm.s:1492   .text:00000000000005ac .L0 
     /tmp/ccr4ENLm.s:1510   .text:00000000000005c8 .L0 
     /tmp/ccr4ENLm.s:1528   .text:00000000000005e0 .L0 
     /tmp/ccr4ENLm.s:1568   .rodata:0000000000000000 .LANCHOR0
     /tmp/ccr4ENLm.s:1571   .rodata:0000000000000000 _ZZN5Riscv12printIntegerEmE6digits
     /tmp/ccr4ENLm.s:1575   .bss:0000000000000000 .LANCHOR1
     /tmp/ccr4ENLm.s:1578   .bss:0000000000000000 _ZZN5Riscv20handleSupervisorTrapEvE5total
     /tmp/ccr4ENLm.s:1590   .text:00000000000005e0 .L0 
     /tmp/ccr4ENLm.s:30     .text:0000000000000018 .L0 
     /tmp/ccr4ENLm.s:71     .text:0000000000000058 .L0 
     /tmp/ccr4ENLm.s:465    .text:00000000000001dc .L0 
     /tmp/ccr4ENLm.s:623    .text:00000000000002b8 .L0 
     /tmp/ccr4ENLm.s:634    .text:00000000000002d4 .L0 
     /tmp/ccr4ENLm.s:645    .text:00000000000002f0 .L0 
     /tmp/ccr4ENLm.s:699    .text:0000000000000320 .L0 
     /tmp/ccr4ENLm.s:1174   .text:000000000000048c .L0 
     /tmp/ccr4ENLm.s:1202   .text:00000000000004a8 .L0 
     /tmp/ccr4ENLm.s:1227   .text:00000000000004c4 .L0 
     /tmp/ccr4ENLm.s:1231   .text:00000000000004d0 .L0 
     /tmp/ccr4ENLm.s:1325   .text:000000000000050c .L0 
     /tmp/ccr4ENLm.s:1329   .text:0000000000000518 .L0 
     /tmp/ccr4ENLm.s:351    .text:0000000000000170 .L15
     /tmp/ccr4ENLm.s:332    .text:0000000000000158 .L16
     /tmp/ccr4ENLm.s:455    .text:00000000000001cc .L19
GAS LISTING /tmp/ccr4ENLm.s 			page 50


     /tmp/ccr4ENLm.s:497    .text:000000000000022c .L20
     /tmp/ccr4ENLm.s:483    .text:000000000000020c .L21
     /tmp/ccr4ENLm.s:731    .text:0000000000000340 .L47
     /tmp/ccr4ENLm.s:740    .text:0000000000000348 .L26
     /tmp/ccr4ENLm.s:746    .text:0000000000000350 .L23
     /tmp/ccr4ENLm.s:770    .text:0000000000000378 .L48
     /tmp/ccr4ENLm.s:1005   .text:0000000000000404 .L49
     /tmp/ccr4ENLm.s:1056   .text:0000000000000420 .L50
     /tmp/ccr4ENLm.s:1085   .text:0000000000000434 .L51
     /tmp/ccr4ENLm.s:1149   .text:0000000000000480 .L52
     /tmp/ccr4ENLm.s:1194   .text:00000000000004a8 .L53
     /tmp/ccr4ENLm.s:1291   .text:00000000000004fc .L54
     /tmp/ccr4ENLm.s:1371   .text:0000000000000544 .L55
     /tmp/ccr4ENLm.s:1426   .text:0000000000000580 .L56
     /tmp/ccr4ENLm.s:1454   .text:0000000000000594 .L57
     /tmp/ccr4ENLm.s:1040   .text:0000000000000418 .L29
     /tmp/ccr4ENLm.s:994    .text:00000000000003fc .L41
     /tmp/ccr4ENLm.s:1139   .text:0000000000000478 .L58
     /tmp/ccr4ENLm.s:1278   .text:00000000000004f4 .L59
     /tmp/ccr4ENLm.s:1416   .text:0000000000000578 .L60
     /tmp/ccr4ENLm.s:48     .text:0000000000000028 .LEHB0
     /tmp/ccr4ENLm.s:10     .text:0000000000000000 .LFB23
     /tmp/ccr4ENLm.s:51     .text:0000000000000030 .LEHE0
     /tmp/ccr4ENLm.s:55     .text:000000000000003c .LEHB1
     /tmp/ccr4ENLm.s:58     .text:0000000000000044 .LEHE1
     /tmp/ccr4ENLm.s:100    .text:0000000000000084 .L3
     /tmp/ccr4ENLm.s:62     .text:0000000000000048 .LEHB2
     /tmp/ccr4ENLm.s:69     .text:0000000000000058 .LEHE2
     /tmp/ccr4ENLm.s:108    .text:0000000000000098 .LEHB3
     /tmp/ccr4ENLm.s:111    .text:00000000000000a0 .LEHE3
     /tmp/ccr4ENLm.s:628    .text:00000000000002cc .LEHB4
     /tmp/ccr4ENLm.s:543    .text:0000000000000260 .LFB30
     /tmp/ccr4ENLm.s:1116   .text:000000000000044c .LEHE4
     /tmp/ccr4ENLm.s:1122   .text:0000000000000460 .LEHB5
     /tmp/ccr4ENLm.s:1125   .text:0000000000000468 .LEHE5
     /tmp/ccr4ENLm.s:1481   .text:00000000000005a8 .L44
     /tmp/ccr4ENLm.s:1177   .text:0000000000000498 .LEHB6
     /tmp/ccr4ENLm.s:1395   .text:0000000000000558 .LEHE6
     /tmp/ccr4ENLm.s:1399   .text:0000000000000560 .LEHB7
     /tmp/ccr4ENLm.s:1402   .text:0000000000000568 .LEHE7
     /tmp/ccr4ENLm.s:1500   .text:00000000000005c4 .L45
     /tmp/ccr4ENLm.s:1439   .text:0000000000000584 .LEHB8
     /tmp/ccr4ENLm.s:1470   .text:00000000000005a0 .LEHE8
     /tmp/ccr4ENLm.s:1496   .text:00000000000005bc .LEHB9
     /tmp/ccr4ENLm.s:1499   .text:00000000000005c4 .LEHE9
     /tmp/ccr4ENLm.s:1514   .text:00000000000005d8 .LEHB10
     /tmp/ccr4ENLm.s:1517   .text:00000000000005e0 .LEHE10
     /tmp/ccr4ENLm.s:4193   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccr4ENLm.s:6090   .debug_str:000000000000021c .LASF230
     /tmp/ccr4ENLm.s:6116   .debug_str:0000000000000384 .LASF231
     /tmp/ccr4ENLm.s:6418   .debug_str:0000000000000bcf .LASF232
     /tmp/ccr4ENLm.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccr4ENLm.s:1581   .text:00000000000005e0 .Letext0
     /tmp/ccr4ENLm.s:6026   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccr4ENLm.s:6204   .debug_str:0000000000000618 .LASF0
     /tmp/ccr4ENLm.s:6328   .debug_str:000000000000099b .LASF3
     /tmp/ccr4ENLm.s:6236   .debug_str:00000000000006fd .LASF1
GAS LISTING /tmp/ccr4ENLm.s 			page 51


     /tmp/ccr4ENLm.s:6338   .debug_str:00000000000009c0 .LASF2
     /tmp/ccr4ENLm.s:6354   .debug_str:0000000000000a44 .LASF4
     /tmp/ccr4ENLm.s:6220   .debug_str:0000000000000680 .LASF5
     /tmp/ccr4ENLm.s:6046   .debug_str:0000000000000086 .LASF6
     /tmp/ccr4ENLm.s:6312   .debug_str:0000000000000936 .LASF7
     /tmp/ccr4ENLm.s:6302   .debug_str:00000000000008f4 .LASF8
     /tmp/ccr4ENLm.s:6226   .debug_str:00000000000006c4 .LASF9
     /tmp/ccr4ENLm.s:6180   .debug_str:0000000000000551 .LASF10
     /tmp/ccr4ENLm.s:6188   .debug_str:00000000000005a1 .LASF11
     /tmp/ccr4ENLm.s:6104   .debug_str:0000000000000340 .LASF12
     /tmp/ccr4ENLm.s:6168   .debug_str:0000000000000507 .LASF13
     /tmp/ccr4ENLm.s:6118   .debug_str:0000000000000392 .LASF14
     /tmp/ccr4ENLm.s:6102   .debug_str:0000000000000330 .LASF15
     /tmp/ccr4ENLm.s:6388   .debug_str:0000000000000b3b .LASF16
     /tmp/ccr4ENLm.s:6152   .debug_str:0000000000000473 .LASF17
     /tmp/ccr4ENLm.s:6378   .debug_str:0000000000000af4 .LASF18
     /tmp/ccr4ENLm.s:6452   .debug_str:0000000000000c99 .LASF91
     /tmp/ccr4ENLm.s:6324   .debug_str:0000000000000985 .LASF22
     /tmp/ccr4ENLm.s:6244   .debug_str:0000000000000732 .LASF19
     /tmp/ccr4ENLm.s:6158   .debug_str:00000000000004bd .LASF20
     /tmp/ccr4ENLm.s:6470   .debug_str:0000000000000cfe .LASF21
     /tmp/ccr4ENLm.s:6442   .debug_str:0000000000000c63 .LASF23
     /tmp/ccr4ENLm.s:6160   .debug_str:00000000000004c6 .LASF24
     /tmp/ccr4ENLm.s:6406   .debug_str:0000000000000b87 .LASF25
     /tmp/ccr4ENLm.s:6134   .debug_str:0000000000000404 .LASF26
     /tmp/ccr4ENLm.s:6274   .debug_str:000000000000082c .LASF27
     /tmp/ccr4ENLm.s:6264   .debug_str:00000000000007d4 .LASF29
     /tmp/ccr4ENLm.s:6150   .debug_str:0000000000000469 .LASF28
     /tmp/ccr4ENLm.s:6040   .debug_str:0000000000000060 .LASF30
     /tmp/ccr4ENLm.s:6100   .debug_str:000000000000031f .LASF31
     /tmp/ccr4ENLm.s:6248   .debug_str:0000000000000740 .LASF32
     /tmp/ccr4ENLm.s:6216   .debug_str:0000000000000661 .LASF33
     /tmp/ccr4ENLm.s:6124   .debug_str:00000000000003c5 .LASF34
     /tmp/ccr4ENLm.s:6480   .debug_str:0000000000000d39 .LASF35
     /tmp/ccr4ENLm.s:6062   .debug_str:0000000000000127 .LASF37
     /tmp/ccr4ENLm.s:6310   .debug_str:0000000000000929 .LASF36
     /tmp/ccr4ENLm.s:6068   .debug_str:0000000000000155 .LASF38
     /tmp/ccr4ENLm.s:6364   .debug_str:0000000000000a90 .LASF39
     /tmp/ccr4ENLm.s:6156   .debug_str:00000000000004a2 .LASF40
     /tmp/ccr4ENLm.s:6210   .debug_str:000000000000063a .LASF41
     /tmp/ccr4ENLm.s:6464   .debug_str:0000000000000ccf .LASF42
     /tmp/ccr4ENLm.s:6436   .debug_str:0000000000000c4f .LASF45
     /tmp/ccr4ENLm.s:6426   .debug_str:0000000000000c07 .LASF47
     /tmp/ccr4ENLm.s:6334   .debug_str:00000000000009ac .LASF43
     /tmp/ccr4ENLm.s:6288   .debug_str:000000000000088a .LASF44
     /tmp/ccr4ENLm.s:6318   .debug_str:0000000000000957 .LASF46
     /tmp/ccr4ENLm.s:6320   .debug_str:000000000000095e .LASF48
     /tmp/ccr4ENLm.s:6284   .debug_str:000000000000086f .LASF49
     /tmp/ccr4ENLm.s:6228   .debug_str:00000000000006d7 .LASF50
     /tmp/ccr4ENLm.s:6466   .debug_str:0000000000000ce9 .LASF51
     /tmp/ccr4ENLm.s:6414   .debug_str:0000000000000bb1 .LASF52
     /tmp/ccr4ENLm.s:6282   .debug_str:0000000000000867 .LASF53
     /tmp/ccr4ENLm.s:6286   .debug_str:0000000000000876 .LASF54
     /tmp/ccr4ENLm.s:6270   .debug_str:0000000000000812 .LASF55
     /tmp/ccr4ENLm.s:6322   .debug_str:0000000000000971 .LASF56
     /tmp/ccr4ENLm.s:6508   .debug_str:0000000000000dfb .LASF57
     /tmp/ccr4ENLm.s:6214   .debug_str:000000000000064d .LASF58
GAS LISTING /tmp/ccr4ENLm.s 			page 52


     /tmp/ccr4ENLm.s:6384   .debug_str:0000000000000b2d .LASF59
     /tmp/ccr4ENLm.s:6358   .debug_str:0000000000000a6e .LASF60
     /tmp/ccr4ENLm.s:6360   .debug_str:0000000000000a81 .LASF61
     /tmp/ccr4ENLm.s:6110   .debug_str:000000000000035d .LASF62
     /tmp/ccr4ENLm.s:6146   .debug_str:0000000000000451 .LASF63
     /tmp/ccr4ENLm.s:6198   .debug_str:00000000000005e8 .LASF64
     /tmp/ccr4ENLm.s:6212   .debug_str:0000000000000647 .LASF65
     /tmp/ccr4ENLm.s:6138   .debug_str:0000000000000423 .LASF66
     /tmp/ccr4ENLm.s:6048   .debug_str:000000000000008d .LASF67
     /tmp/ccr4ENLm.s:6344   .debug_str:00000000000009e6 .LASF68
     /tmp/ccr4ENLm.s:6336   .debug_str:00000000000009b5 .LASF69
     /tmp/ccr4ENLm.s:6496   .debug_str:0000000000000d9c .LASF70
     /tmp/ccr4ENLm.s:6454   .debug_str:0000000000000c9f .LASF71
     /tmp/ccr4ENLm.s:6476   .debug_str:0000000000000d1c .LASF72
     /tmp/ccr4ENLm.s:6448   .debug_str:0000000000000c8a .LASF73
     /tmp/ccr4ENLm.s:6266   .debug_str:00000000000007ec .LASF74
     /tmp/ccr4ENLm.s:6192   .debug_str:00000000000005c2 .LASF75
     /tmp/ccr4ENLm.s:6200   .debug_str:00000000000005fa .LASF76
     /tmp/ccr4ENLm.s:6432   .debug_str:0000000000000c3a .LASF77
     /tmp/ccr4ENLm.s:6186   .debug_str:0000000000000585 .LASF78
     /tmp/ccr4ENLm.s:6308   .debug_str:0000000000000914 .LASF79
     /tmp/ccr4ENLm.s:6224   .debug_str:00000000000006a2 .LASF80
     /tmp/ccr4ENLm.s:6330   .debug_str:00000000000009a0 .LASF81
     /tmp/ccr4ENLm.s:6044   .debug_str:000000000000007e .LASF82
     /tmp/ccr4ENLm.s:6082   .debug_str:00000000000001e3 .LASF83
     /tmp/ccr4ENLm.s:6430   .debug_str:0000000000000c2e .LASF84
     /tmp/ccr4ENLm.s:6084   .debug_str:00000000000001f2 .LASF85
     /tmp/ccr4ENLm.s:6272   .debug_str:000000000000081a .LASF86
     /tmp/ccr4ENLm.s:6190   .debug_str:00000000000005af .LASF87
     /tmp/ccr4ENLm.s:6446   .debug_str:0000000000000c77 .LASF88
     /tmp/ccr4ENLm.s:6098   .debug_str:000000000000030b .LASF89
     /tmp/ccr4ENLm.s:6400   .debug_str:0000000000000b74 .LASF90
     /tmp/ccr4ENLm.s:6420   .debug_str:0000000000000bf2 .LASF92
     /tmp/ccr4ENLm.s:6440   .debug_str:0000000000000c5e .LASF95
     /tmp/ccr4ENLm.s:6230   .debug_str:00000000000006ea .LASF93
     /tmp/ccr4ENLm.s:6106   .debug_str:000000000000034f .LASF94
     /tmp/ccr4ENLm.s:6398   .debug_str:0000000000000b6e .LASF96
     /tmp/ccr4ENLm.s:6246   .debug_str:000000000000073b .LASF97
     /tmp/ccr4ENLm.s:6484   .debug_str:0000000000000d50 .LASF116
     /tmp/ccr4ENLm.s:6064   .debug_str:0000000000000142 .LASF99
     /tmp/ccr4ENLm.s:6122   .debug_str:00000000000003b3 .LASF101
     /tmp/ccr4ENLm.s:6208   .debug_str:0000000000000635 .LASF98
     /tmp/ccr4ENLm.s:6372   .debug_str:0000000000000ac9 .LASF103
     /tmp/ccr4ENLm.s:6234   .debug_str:00000000000006f8 .LASF100
     /tmp/ccr4ENLm.s:6256   .debug_str:0000000000000798 .LASF102
     /tmp/ccr4ENLm.s:6144   .debug_str:0000000000000443 .LASF104
     /tmp/ccr4ENLm.s:6478   .debug_str:0000000000000d32 .LASF105
     /tmp/ccr4ENLm.s:6078   .debug_str:00000000000001cb .LASF106
     /tmp/ccr4ENLm.s:6402   .debug_str:0000000000000b79 .LASF107
     /tmp/ccr4ENLm.s:6096   .debug_str:0000000000000305 .LASF108
     /tmp/ccr4ENLm.s:6374   .debug_str:0000000000000ade .LASF109
     /tmp/ccr4ENLm.s:6112   .debug_str:0000000000000370 .LASF110
     /tmp/ccr4ENLm.s:6086   .debug_str:0000000000000205 .LASF111
     /tmp/ccr4ENLm.s:6304   .debug_str:0000000000000907 .LASF112
     /tmp/ccr4ENLm.s:6232   .debug_str:00000000000006ef .LASF113
     /tmp/ccr4ENLm.s:6396   .debug_str:0000000000000b66 .LASF114
     /tmp/ccr4ENLm.s:6194   .debug_str:00000000000005cd .LASF115
GAS LISTING /tmp/ccr4ENLm.s 			page 53


     /tmp/ccr4ENLm.s:6278   .debug_str:0000000000000846 .LASF117
     /tmp/ccr4ENLm.s:6292   .debug_str:00000000000008a6 .LASF233
     /tmp/ccr4ENLm.s:6456   .debug_str:0000000000000ca9 .LASF118
     /tmp/ccr4ENLm.s:6494   .debug_str:0000000000000d90 .LASF119
     /tmp/ccr4ENLm.s:6488   .debug_str:0000000000000d6f .LASF120
     /tmp/ccr4ENLm.s:6412   .debug_str:0000000000000ba1 .LASF121
     /tmp/ccr4ENLm.s:6140   .debug_str:0000000000000435 .LASF122
     /tmp/ccr4ENLm.s:6060   .debug_str:0000000000000114 .LASF123
     /tmp/ccr4ENLm.s:6240   .debug_str:0000000000000719 .LASF124
     /tmp/ccr4ENLm.s:6296   .debug_str:00000000000008be .LASF125
     /tmp/ccr4ENLm.s:6404   .debug_str:0000000000000b7f .LASF126
     /tmp/ccr4ENLm.s:6458   .debug_str:0000000000000cae .LASF127
     /tmp/ccr4ENLm.s:6366   .debug_str:0000000000000a9e .LASF128
     /tmp/ccr4ENLm.s:6262   .debug_str:00000000000007c7 .LASF129
     /tmp/ccr4ENLm.s:6250   .debug_str:000000000000075e .LASF130
     /tmp/ccr4ENLm.s:6500   .debug_str:0000000000000dc4 .LASF131
     /tmp/ccr4ENLm.s:6172   .debug_str:000000000000051e .LASF132
     /tmp/ccr4ENLm.s:6206   .debug_str:0000000000000625 .LASF133
     /tmp/ccr4ENLm.s:6218   .debug_str:0000000000000673 .LASF134
     /tmp/ccr4ENLm.s:6370   .debug_str:0000000000000ac0 .LASF135
     /tmp/ccr4ENLm.s:6136   .debug_str:0000000000000410 .LASF136
     /tmp/ccr4ENLm.s:6348   .debug_str:0000000000000a0a .LASF137
     /tmp/ccr4ENLm.s:6382   .debug_str:0000000000000b11 .LASF138
     /tmp/ccr4ENLm.s:6276   .debug_str:0000000000000837 .LASF139
     /tmp/ccr4ENLm.s:6034   .debug_str:0000000000000029 .LASF140
     /tmp/ccr4ENLm.s:6474   .debug_str:0000000000000d0d .LASF141
     /tmp/ccr4ENLm.s:6300   .debug_str:00000000000008da .LASF142
     /tmp/ccr4ENLm.s:6376   .debug_str:0000000000000ae6 .LASF143
     /tmp/ccr4ENLm.s:6316   .debug_str:000000000000094b .LASF144
     /tmp/ccr4ENLm.s:6030   .debug_str:000000000000000d .LASF145
     /tmp/ccr4ENLm.s:6482   .debug_str:0000000000000d45 .LASF146
     /tmp/ccr4ENLm.s:6362   .debug_str:0000000000000a88 .LASF175
     /tmp/ccr4ENLm.s:6416   .debug_str:0000000000000bc5 .LASF147
     /tmp/ccr4ENLm.s:6298   .debug_str:00000000000008ce .LASF148
     /tmp/ccr4ENLm.s:6128   .debug_str:00000000000003ea .LASF149
     /tmp/ccr4ENLm.s:6074   .debug_str:000000000000019c .LASF151
     /tmp/ccr4ENLm.s:6072   .debug_str:0000000000000187 .LASF150
     /tmp/ccr4ENLm.s:6094   .debug_str:00000000000002d9 .LASF152
     /tmp/ccr4ENLm.s:6504   .debug_str:0000000000000ddc .LASF234
     /tmp/ccr4ENLm.s:6092   .debug_str:00000000000002c8 .LASF235
     /tmp/ccr4ENLm.s:6038   .debug_str:000000000000005b .LASF153
     /tmp/ccr4ENLm.s:6394   .debug_str:0000000000000b61 .LASF154
     /tmp/ccr4ENLm.s:6254   .debug_str:0000000000000790 .LASF155
     /tmp/ccr4ENLm.s:6126   .debug_str:00000000000003e4 .LASF156
     /tmp/ccr4ENLm.s:6424   .debug_str:0000000000000bff .LASF157
     /tmp/ccr4ENLm.s:6080   .debug_str:00000000000001d9 .LASF158
     /tmp/ccr4ENLm.s:6178   .debug_str:0000000000000547 .LASF159
     /tmp/ccr4ENLm.s:6052   .debug_str:00000000000000ac .LASF236
     /tmp/ccr4ENLm.s:6490   .debug_str:0000000000000d75 .LASF237
     /tmp/ccr4ENLm.s:6428   .debug_str:0000000000000c1c .LASF160
     /tmp/ccr4ENLm.s:6294   .debug_str:00000000000008ab .LASF161
     /tmp/ccr4ENLm.s:6408   .debug_str:0000000000000b94 .LASF162
     /tmp/ccr4ENLm.s:6036   .debug_str:0000000000000043 .LASF163
     /tmp/ccr4ENLm.s:6368   .debug_str:0000000000000aaf .LASF164
     /tmp/ccr4ENLm.s:6120   .debug_str:00000000000003a2 .LASF165
     /tmp/ccr4ENLm.s:6054   .debug_str:00000000000000c4 .LASF166
     /tmp/ccr4ENLm.s:6326   .debug_str:0000000000000990 .LASF167
GAS LISTING /tmp/ccr4ENLm.s 			page 54


     /tmp/ccr4ENLm.s:6184   .debug_str:0000000000000571 .LASF168
     /tmp/ccr4ENLm.s:6342   .debug_str:00000000000009da .LASF169
     /tmp/ccr4ENLm.s:6050   .debug_str:0000000000000098 .LASF170
     /tmp/ccr4ENLm.s:6142   .debug_str:000000000000043e .LASF171
     /tmp/ccr4ENLm.s:6176   .debug_str:0000000000000530 .LASF172
     /tmp/ccr4ENLm.s:6392   .debug_str:0000000000000b5a .LASF173
     /tmp/ccr4ENLm.s:6154   .debug_str:0000000000000489 .LASF174
     /tmp/ccr4ENLm.s:6032   .debug_str:000000000000001d .LASF176
     /tmp/ccr4ENLm.s:6346   .debug_str:00000000000009fe .LASF177
     /tmp/ccr4ENLm.s:6260   .debug_str:00000000000007b3 .LASF178
     /tmp/ccr4ENLm.s:6196   .debug_str:00000000000005d3 .LASF179
     /tmp/ccr4ENLm.s:6108   .debug_str:0000000000000354 .LASF180
     /tmp/ccr4ENLm.s:6114   .debug_str:000000000000037a .LASF181
     /tmp/ccr4ENLm.s:6280   .debug_str:000000000000085e .LASF182
     /tmp/ccr4ENLm.s:6352   .debug_str:0000000000000a39 .LASF183
     /tmp/ccr4ENLm.s:6238   .debug_str:0000000000000710 .LASF184
     /tmp/ccr4ENLm.s:6202   .debug_str:0000000000000612 .LASF185
     /tmp/ccr4ENLm.s:6506   .debug_str:0000000000000de3 .LASF186
     /tmp/ccr4ENLm.s:6042   .debug_str:0000000000000076 .LASF187
     /tmp/ccr4ENLm.s:6252   .debug_str:0000000000000776 .LASF188
     /tmp/ccr4ENLm.s:6498   .debug_str:0000000000000db4 .LASF189
     /tmp/ccr4ENLm.s:6356   .debug_str:0000000000000a4b .LASF190
     /tmp/ccr4ENLm.s:6390   .debug_str:0000000000000b47 .LASF191
     /tmp/ccr4ENLm.s:6350   .debug_str:0000000000000a13 .LASF192
     /tmp/ccr4ENLm.s:6028   .debug_str:0000000000000000 .LASF193
     /tmp/ccr4ENLm.s:6058   .debug_str:00000000000000f0 .LASF194
     /tmp/ccr4ENLm.s:6468   .debug_str:0000000000000cf1 .LASF195
     /tmp/ccr4ENLm.s:6268   .debug_str:0000000000000802 .LASF196
     /tmp/ccr4ENLm.s:6148   .debug_str:0000000000000457 .LASF197
     /tmp/ccr4ENLm.s:6162   .debug_str:00000000000004d2 .LASF198
     /tmp/ccr4ENLm.s:6088   .debug_str:000000000000020e .LASF199
     /tmp/ccr4ENLm.s:6056   .debug_str:00000000000000cd .LASF200
     /tmp/ccr4ENLm.s:1529   .text:00000000000005e0 .LFE30
     /tmp/ccr4ENLm.s:5431   .debug_loc:0000000000000000 .LLST15
     /tmp/ccr4ENLm.s:6380   .debug_str:0000000000000b0a .LASF201
     /tmp/ccr4ENLm.s:5470   .debug_loc:00000000000000bb .LLST16
     /tmp/ccr4ENLm.s:5980   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccr4ENLm.s:6434   .debug_str:0000000000000c49 .LASF202
     /tmp/ccr4ENLm.s:6258   .debug_str:00000000000007a9 .LASF203
     /tmp/ccr4ENLm.s:5485   .debug_loc:0000000000000104 .LLST17
     /tmp/ccr4ENLm.s:6410   .debug_str:0000000000000b9c .LASF204
     /tmp/ccr4ENLm.s:5528   .debug_loc:00000000000001d2 .LLST18
     /tmp/ccr4ENLm.s:660    .text:0000000000000308 .LBB111
     /tmp/ccr4ENLm.s:734    .text:0000000000000340 .LBE111
     /tmp/ccr4ENLm.s:5543   .debug_loc:000000000000021b .LLST21
     /tmp/ccr4ENLm.s:6460   .debug_str:0000000000000cb9 .LASF205
     /tmp/ccr4ENLm.s:5550   .debug_loc:000000000000023e .LLST22
     /tmp/ccr4ENLm.s:662    .text:0000000000000308 .LBB112
     /tmp/ccr4ENLm.s:678    .text:0000000000000314 .LBE112
     /tmp/ccr4ENLm.s:680    .text:0000000000000314 .LBB114
     /tmp/ccr4ENLm.s:696    .text:0000000000000320 .LBE114
     /tmp/ccr4ENLm.s:706    .text:0000000000000334 .LBB116
     /tmp/ccr4ENLm.s:717    .text:0000000000000338 .LBE116
     /tmp/ccr4ENLm.s:5557   .debug_loc:0000000000000261 .LLST23
     /tmp/ccr4ENLm.s:719    .text:0000000000000338 .LBB118
     /tmp/ccr4ENLm.s:733    .text:0000000000000340 .LBE118
     /tmp/ccr4ENLm.s:5564   .debug_loc:0000000000000284 .LLST24
GAS LISTING /tmp/ccr4ENLm.s 			page 55


     /tmp/ccr4ENLm.s:704    .text:0000000000000334 .LVL50
     /tmp/ccr4ENLm.s:1015   .text:0000000000000404 .LBB210
     /tmp/ccr4ENLm.s:1041   .text:0000000000000418 .LBE210
     /tmp/ccr4ENLm.s:5571   .debug_loc:00000000000002a7 .LLST50
     /tmp/ccr4ENLm.s:6462   .debug_str:0000000000000cc1 .LASF206
     /tmp/ccr4ENLm.s:5586   .debug_loc:00000000000002e1 .LLST51
     /tmp/ccr4ENLm.s:1031   .text:0000000000000414 .LVL65
     /tmp/ccr4ENLm.s:1061   .text:0000000000000420 .LBB199
     /tmp/ccr4ENLm.s:1082   .text:0000000000000430 .LBE199
     /tmp/ccr4ENLm.s:6332   .debug_str:00000000000009a7 .LASF207
     /tmp/ccr4ENLm.s:5593   .debug_loc:0000000000000304 .LLST48
     /tmp/ccr4ENLm.s:6076   .debug_str:00000000000001c4 .LASF208
     /tmp/ccr4ENLm.s:5605   .debug_loc:000000000000033b .LLST49
     /tmp/ccr4ENLm.s:1074   .text:000000000000042c .LVL69
     /tmp/ccr4ENLm.s:6314   .debug_str:000000000000093d .LASF209
     /tmp/ccr4ENLm.s:5612   .debug_loc:000000000000035e .LLST44
     /tmp/ccr4ENLm.s:5623   .debug_loc:0000000000000394 .LLST45
     /tmp/ccr4ENLm.s:6066   .debug_str:0000000000000148 .LASF210
     /tmp/ccr4ENLm.s:5634   .debug_loc:00000000000003ca .LLST46
     /tmp/ccr4ENLm.s:6166   .debug_str:0000000000000500 .LASF211
     /tmp/ccr4ENLm.s:5645   .debug_loc:0000000000000400 .LLST47
     /tmp/ccr4ENLm.s:1115   .text:000000000000044c .LVL74
     /tmp/ccr4ENLm.s:1124   .text:0000000000000468 .LVL75
     /tmp/ccr4ENLm.s:1494   .text:00000000000005b8 .LVL110
     /tmp/ccr4ENLm.s:1152   .text:0000000000000480 .LBB173
     /tmp/ccr4ENLm.s:1197   .text:00000000000004a8 .LBE173
     /tmp/ccr4ENLm.s:5652   .debug_loc:0000000000000423 .LLST42
     /tmp/ccr4ENLm.s:1154   .text:0000000000000480 .LBB174
     /tmp/ccr4ENLm.s:1171   .text:000000000000048c .LBE174
     /tmp/ccr4ENLm.s:1182   .text:00000000000004a0 .LBB176
     /tmp/ccr4ENLm.s:1196   .text:00000000000004a8 .LBE176
     /tmp/ccr4ENLm.s:5659   .debug_loc:0000000000000446 .LLST43
     /tmp/ccr4ENLm.s:1180   .text:00000000000004a0 .LVL79
     /tmp/ccr4ENLm.s:5666   .debug_loc:0000000000000469 .LLST38
     /tmp/ccr4ENLm.s:1208   .text:00000000000004b8 .LBB159
     /tmp/ccr4ENLm.s:1224   .text:00000000000004c4 .LBE159
     /tmp/ccr4ENLm.s:1252   .text:00000000000004dc .LBB161
     /tmp/ccr4ENLm.s:1260   .text:00000000000004e4 .LBE161
     /tmp/ccr4ENLm.s:5673   .debug_loc:000000000000048c .LLST39
     /tmp/ccr4ENLm.s:5681   .debug_loc:00000000000004b0 .LLST40
     /tmp/ccr4ENLm.s:1266   .text:00000000000004ec .LBB163
     /tmp/ccr4ENLm.s:1280   .text:00000000000004f4 .LBE163
     /tmp/ccr4ENLm.s:5688   .debug_loc:00000000000004d3 .LLST41
     /tmp/ccr4ENLm.s:1264   .text:00000000000004ec .LVL85
     /tmp/ccr4ENLm.s:1294   .text:00000000000004fc .LBB145
     /tmp/ccr4ENLm.s:1368   .text:0000000000000540 .LBE145
     /tmp/ccr4ENLm.s:6306   .debug_str:000000000000090f .LASF212
     /tmp/ccr4ENLm.s:5695   .debug_loc:00000000000004f6 .LLST33
     /tmp/ccr4ENLm.s:5702   .debug_loc:0000000000000519 .LLST34
     /tmp/ccr4ENLm.s:1305   .text:0000000000000500 .LBB146
     /tmp/ccr4ENLm.s:1322   .text:000000000000050c .LBE146
     /tmp/ccr4ENLm.s:1332   .text:0000000000000524 .LBB148
     /tmp/ccr4ENLm.s:1339   .text:0000000000000528 .LBE148
     /tmp/ccr4ENLm.s:5709   .debug_loc:000000000000053c .LLST35
     /tmp/ccr4ENLm.s:5716   .debug_loc:000000000000055f .LLST36
     /tmp/ccr4ENLm.s:1349   .text:0000000000000538 .LBB150
     /tmp/ccr4ENLm.s:1360   .text:000000000000053c .LBE150
GAS LISTING /tmp/ccr4ENLm.s 			page 56


     /tmp/ccr4ENLm.s:5723   .debug_loc:0000000000000582 .LLST37
     /tmp/ccr4ENLm.s:1343   .text:0000000000000530 .LVL93
     /tmp/ccr4ENLm.s:1347   .text:0000000000000538 .LVL94
     /tmp/ccr4ENLm.s:5730   .debug_loc:00000000000005a5 .LLST30
     /tmp/ccr4ENLm.s:6222   .debug_str:0000000000000692 .LASF213
     /tmp/ccr4ENLm.s:5741   .debug_loc:00000000000005db .LLST31
     /tmp/ccr4ENLm.s:6492   .debug_str:0000000000000d89 .LASF214
     /tmp/ccr4ENLm.s:5752   .debug_loc:0000000000000611 .LLST32
     /tmp/ccr4ENLm.s:1394   .text:0000000000000558 .LVL99
     /tmp/ccr4ENLm.s:1401   .text:0000000000000568 .LVL101
     /tmp/ccr4ENLm.s:1512   .text:00000000000005d4 .LVL113
     /tmp/ccr4ENLm.s:1429   .text:0000000000000580 .LBB135
     /tmp/ccr4ENLm.s:1451   .text:0000000000000590 .LBE135
     /tmp/ccr4ENLm.s:6450   .debug_str:0000000000000c94 .LASF215
     /tmp/ccr4ENLm.s:5759   .debug_loc:0000000000000634 .LLST28
     /tmp/ccr4ENLm.s:5766   .debug_loc:0000000000000657 .LLST29
     /tmp/ccr4ENLm.s:1443   .text:000000000000058c .LVL104
     /tmp/ccr4ENLm.s:1456   .text:0000000000000594 .LBB133
     /tmp/ccr4ENLm.s:1478   .text:00000000000005a4 .LBE133
     /tmp/ccr4ENLm.s:5773   .debug_loc:000000000000067a .LLST26
     /tmp/ccr4ENLm.s:5780   .debug_loc:000000000000069d .LLST27
     /tmp/ccr4ENLm.s:1469   .text:00000000000005a0 .LVL107
     /tmp/ccr4ENLm.s:974    .text:00000000000003dc .LBB132
     /tmp/ccr4ENLm.s:1002   .text:0000000000000400 .LBE132
     /tmp/ccr4ENLm.s:5787   .debug_loc:00000000000006c0 .LLST25
     /tmp/ccr4ENLm.s:990    .text:00000000000003f0 .LVL60
     /tmp/ccr4ENLm.s:993    .text:00000000000003fc .LVL61
     /tmp/ccr4ENLm.s:607    .text:00000000000002b0 .LBB106
     /tmp/ccr4ENLm.s:619    .text:00000000000002b8 .LBE106
     /tmp/ccr4ENLm.s:5794   .debug_loc:00000000000006e3 .LLST19
     /tmp/ccr4ENLm.s:648    .text:00000000000002fc .LBB109
     /tmp/ccr4ENLm.s:655    .text:0000000000000300 .LBE109
     /tmp/ccr4ENLm.s:5802   .debug_loc:0000000000000707 .LLST20
     /tmp/ccr4ENLm.s:786    .text:000000000000037c .LBB120
     /tmp/ccr4ENLm.s:803    .text:0000000000000388 .LBE120
     /tmp/ccr4ENLm.s:1044   .text:0000000000000418 .LBB222
     /tmp/ccr4ENLm.s:1058   .text:0000000000000420 .LBE222
     /tmp/ccr4ENLm.s:5809   .debug_loc:000000000000072a .LLST52
     /tmp/ccr4ENLm.s:631    .text:00000000000002d4 .LVL44
     /tmp/ccr4ENLm.s:641    .text:00000000000002f0 .LVL45
     /tmp/ccr4ENLm.s:578    .text:000000000000028c .LBB102
     /tmp/ccr4ENLm.s:594    .text:0000000000000298 .LBE102
     /tmp/ccr4ENLm.s:745    .text:0000000000000350 .LVL53
     /tmp/ccr4ENLm.s:1498   .text:00000000000005c4 .LVL111
     /tmp/ccr4ENLm.s:1516   .text:00000000000005e0 .LVL114
     /tmp/ccr4ENLm.s:393    .text:0000000000000198 .LFB29
     /tmp/ccr4ENLm.s:537    .text:0000000000000260 .LFE29
     /tmp/ccr4ENLm.s:5816   .debug_loc:000000000000074d .LLST9
     /tmp/ccr4ENLm.s:5830   .debug_loc:0000000000000786 .LLST10
     /tmp/ccr4ENLm.s:6422   .debug_str:0000000000000bf8 .LASF216
     /tmp/ccr4ENLm.s:5837   .debug_loc:00000000000007a9 .LLST11
     /tmp/ccr4ENLm.s:5859   .debug_loc:0000000000000808 .LLST12
     /tmp/ccr4ENLm.s:410    .text:00000000000001b0 .LBB96
     /tmp/ccr4ENLm.s:426    .text:00000000000001bc .LBE96
     /tmp/ccr4ENLm.s:428    .text:00000000000001bc .LBB98
     /tmp/ccr4ENLm.s:440    .text:00000000000001c4 .LBE98
     /tmp/ccr4ENLm.s:5881   .debug_loc:0000000000000849 .LLST13
GAS LISTING /tmp/ccr4ENLm.s 			page 57


     /tmp/ccr4ENLm.s:511    .text:0000000000000244 .LBB100
     /tmp/ccr4ENLm.s:522    .text:0000000000000248 .LBE100
     /tmp/ccr4ENLm.s:5889   .debug_loc:000000000000086d .LLST14
     /tmp/ccr4ENLm.s:495    .text:0000000000000228 .LVL35
     /tmp/ccr4ENLm.s:502    .text:0000000000000238 .LVL36
     /tmp/ccr4ENLm.s:285    .text:0000000000000128 .LFB28
     /tmp/ccr4ENLm.s:387    .text:0000000000000198 .LFE28
     /tmp/ccr4ENLm.s:6386   .debug_str:0000000000000b34 .LASF217
     /tmp/ccr4ENLm.s:5896   .debug_loc:0000000000000890 .LLST5
     /tmp/ccr4ENLm.s:5907   .debug_loc:00000000000008c6 .LLST6
     /tmp/ccr4ENLm.s:303    .text:0000000000000144 .LBB90
     /tmp/ccr4ENLm.s:319    .text:0000000000000150 .LBE90
     /tmp/ccr4ENLm.s:321    .text:0000000000000150 .LBB92
     /tmp/ccr4ENLm.s:334    .text:0000000000000158 .LBE92
     /tmp/ccr4ENLm.s:5914   .debug_loc:00000000000008e9 .LLST7
     /tmp/ccr4ENLm.s:360    .text:000000000000017c .LBB94
     /tmp/ccr4ENLm.s:371    .text:0000000000000180 .LBE94
     /tmp/ccr4ENLm.s:5922   .debug_loc:000000000000090d .LLST8
     /tmp/ccr4ENLm.s:344    .text:0000000000000168 .LVL19
     /tmp/ccr4ENLm.s:250    .text:0000000000000108 .LFB27
     /tmp/ccr4ENLm.s:279    .text:0000000000000128 .LFE27
     /tmp/ccr4ENLm.s:181    .text:00000000000000c0 .LFB26
     /tmp/ccr4ENLm.s:213    .text:00000000000000e0 .LFE26
     /tmp/ccr4ENLm.s:192    .text:00000000000000cc .LBB88
     /tmp/ccr4ENLm.s:204    .text:00000000000000d4 .LBE88
     /tmp/ccr4ENLm.s:5929   .debug_loc:0000000000000930 .LLST4
     /tmp/ccr4ENLm.s:143    .text:00000000000000a0 .LFB25
     /tmp/ccr4ENLm.s:175    .text:00000000000000c0 .LFE25
     /tmp/ccr4ENLm.s:154    .text:00000000000000ac .LBB86
     /tmp/ccr4ENLm.s:166    .text:00000000000000b4 .LBE86
     /tmp/ccr4ENLm.s:5937   .debug_loc:0000000000000954 .LLST3
     /tmp/ccr4ENLm.s:219    .text:00000000000000e0 .LFB24
     /tmp/ccr4ENLm.s:244    .text:0000000000000108 .LFE24
     /tmp/ccr4ENLm.s:233    .text:00000000000000f8 .LVL15
     /tmp/ccr4ENLm.s:113    .text:00000000000000a0 .LFE23
     /tmp/ccr4ENLm.s:5945   .debug_loc:0000000000000978 .LLST0
     /tmp/ccr4ENLm.s:32     .text:0000000000000020 .LBB82
     /tmp/ccr4ENLm.s:44     .text:0000000000000024 .LBE82
     /tmp/ccr4ENLm.s:75     .text:0000000000000064 .LBB84
     /tmp/ccr4ENLm.s:84     .text:000000000000006c .LBE84
     /tmp/ccr4ENLm.s:5952   .debug_loc:000000000000099b .LLST1
     /tmp/ccr4ENLm.s:5960   .debug_loc:00000000000009bf .LLST2
     /tmp/ccr4ENLm.s:50     .text:0000000000000030 .LVL2
     /tmp/ccr4ENLm.s:57     .text:0000000000000044 .LVL3
     /tmp/ccr4ENLm.s:64     .text:0000000000000050 .LVL4
     /tmp/ccr4ENLm.s:68     .text:0000000000000058 .LVL5
     /tmp/ccr4ENLm.s:106    .text:0000000000000094 .LVL9
     /tmp/ccr4ENLm.s:110    .text:00000000000000a0 .LVL10
     /tmp/ccr4ENLm.s:6164   .debug_str:00000000000004f9 .LASF238
     /tmp/ccr4ENLm.s:6242   .debug_str:000000000000071f .LASF221
     /tmp/ccr4ENLm.s:6132   .debug_str:00000000000003ff .LASF218
     /tmp/ccr4ENLm.s:6444   .debug_str:0000000000000c72 .LASF219
     /tmp/ccr4ENLm.s:6472   .debug_str:0000000000000d07 .LASF220
     /tmp/ccr4ENLm.s:6340   .debug_str:00000000000009ce .LASF222
     /tmp/ccr4ENLm.s:6170   .debug_str:0000000000000516 .LASF223
     /tmp/ccr4ENLm.s:6502   .debug_str:0000000000000dd1 .LASF224
     /tmp/ccr4ENLm.s:6174   .debug_str:000000000000052a .LASF225
GAS LISTING /tmp/ccr4ENLm.s 			page 58


     /tmp/ccr4ENLm.s:6182   .debug_str:0000000000000561 .LASF226
     /tmp/ccr4ENLm.s:6486   .debug_str:0000000000000d60 .LASF239
     /tmp/ccr4ENLm.s:6070   .debug_str:000000000000016f .LASF240
     /tmp/ccr4ENLm.s:6130   .debug_str:00000000000003f8 .LASF227
     /tmp/ccr4ENLm.s:6438   .debug_str:0000000000000c58 .LASF228
     /tmp/ccr4ENLm.s:6290   .debug_str:000000000000089f .LASF229
     /tmp/ccr4ENLm.s:575    .text:000000000000028c .LVL40
     /tmp/ccr4ENLm.s:694    .text:0000000000000320 .LVL49
     /tmp/ccr4ENLm.s:730    .text:0000000000000340 .LVL52
     /tmp/ccr4ENLm.s:769    .text:0000000000000378 .LVL54
     /tmp/ccr4ENLm.s:982    .text:00000000000003e0 .LVL59
     /tmp/ccr4ENLm.s:1004   .text:0000000000000404 .LVL62
     /tmp/ccr4ENLm.s:1038   .text:0000000000000418 .LVL66
     /tmp/ccr4ENLm.s:1055   .text:0000000000000420 .LVL67
     /tmp/ccr4ENLm.s:1169   .text:000000000000048c .LVL78
     /tmp/ccr4ENLm.s:1193   .text:00000000000004a8 .LVL80
     /tmp/ccr4ENLm.s:1222   .text:00000000000004c4 .LVL82
     /tmp/ccr4ENLm.s:1277   .text:00000000000004f4 .LVL86
     /tmp/ccr4ENLm.s:1320   .text:000000000000050c .LVL90
     /tmp/ccr4ENLm.s:1370   .text:0000000000000544 .LVL96
     /tmp/ccr4ENLm.s:1397   .text:000000000000055c .LVL100
     /tmp/ccr4ENLm.s:1425   .text:0000000000000580 .LVL102
     /tmp/ccr4ENLm.s:592    .text:0000000000000298 .LVL41
     /tmp/ccr4ENLm.s:795    .text:0000000000000380 .LVL56
     /tmp/ccr4ENLm.s:783    .text:000000000000037c .LVL55
     /tmp/ccr4ENLm.s:1084   .text:0000000000000434 .LVL70
     /tmp/ccr4ENLm.s:1148   .text:0000000000000480 .LVL76
     /tmp/ccr4ENLm.s:1163   .text:0000000000000484 .LVL77
     /tmp/ccr4ENLm.s:1203   .text:00000000000004b0 .LVL81
     /tmp/ccr4ENLm.s:1290   .text:00000000000004fc .LVL87
     /tmp/ccr4ENLm.s:1314   .text:0000000000000504 .LVL89
     /tmp/ccr4ENLm.s:1453   .text:0000000000000594 .LVL105
     /tmp/ccr4ENLm.s:801    .text:0000000000000388 .LVL57
     /tmp/ccr4ENLm.s:807    .text:000000000000038c .LVL58
     /tmp/ccr4ENLm.s:1483   .text:00000000000005ac .LVL109
     /tmp/ccr4ENLm.s:1502   .text:00000000000005c8 .LVL112
     /tmp/ccr4ENLm.s:676    .text:0000000000000314 .LVL48
     /tmp/ccr4ENLm.s:714    .text:0000000000000338 .LVL51
     /tmp/ccr4ENLm.s:1023   .text:0000000000000408 .LVL63
     /tmp/ccr4ENLm.s:1029   .text:000000000000040c .LVL64
     /tmp/ccr4ENLm.s:1069   .text:0000000000000424 .LVL68
     /tmp/ccr4ENLm.s:1103   .text:000000000000043c .LVL72
     /tmp/ccr4ENLm.s:1480   .text:00000000000005a8 .LVL108
     /tmp/ccr4ENLm.s:1109   .text:0000000000000440 .LVL73
     /tmp/ccr4ENLm.s:1097   .text:0000000000000438 .LVL71
     /tmp/ccr4ENLm.s:1233   .text:00000000000004dc .LVL83
     /tmp/ccr4ENLm.s:1258   .text:00000000000004e4 .LVL84
     /tmp/ccr4ENLm.s:1302   .text:0000000000000500 .LVL88
     /tmp/ccr4ENLm.s:1331   .text:0000000000000524 .LVL91
     /tmp/ccr4ENLm.s:1337   .text:0000000000000528 .LVL92
     /tmp/ccr4ENLm.s:1357   .text:000000000000053c .LVL95
     /tmp/ccr4ENLm.s:1388   .text:000000000000054c .LVL98
     /tmp/ccr4ENLm.s:1382   .text:0000000000000548 .LVL97
     /tmp/ccr4ENLm.s:1437   .text:0000000000000584 .LVL103
     /tmp/ccr4ENLm.s:1464   .text:0000000000000598 .LVL106
     /tmp/ccr4ENLm.s:606    .text:00000000000002b0 .LVL42
     /tmp/ccr4ENLm.s:616    .text:00000000000002b8 .LVL43
GAS LISTING /tmp/ccr4ENLm.s 			page 59


     /tmp/ccr4ENLm.s:647    .text:00000000000002fc .LVL46
     /tmp/ccr4ENLm.s:653    .text:0000000000000300 .LVL47
     /tmp/ccr4ENLm.s:396    .text:0000000000000198 .LVL25
     /tmp/ccr4ENLm.s:450    .text:00000000000001c8 .LVL28
     /tmp/ccr4ENLm.s:424    .text:00000000000001bc .LVL26
     /tmp/ccr4ENLm.s:506    .text:000000000000023c .LVL37
     /tmp/ccr4ENLm.s:454    .text:00000000000001cc .LVL29
     /tmp/ccr4ENLm.s:461    .text:00000000000001d4 .LVL30
     /tmp/ccr4ENLm.s:472    .text:00000000000001f8 .LVL31
     /tmp/ccr4ENLm.s:482    .text:000000000000020c .LVL33
     /tmp/ccr4ENLm.s:487    .text:0000000000000210 .LVL34
     /tmp/ccr4ENLm.s:478    .text:0000000000000204 .LVL32
     /tmp/ccr4ENLm.s:437    .text:00000000000001c4 .LVL27
     /tmp/ccr4ENLm.s:510    .text:0000000000000244 .LVL38
     /tmp/ccr4ENLm.s:519    .text:0000000000000248 .LVL39
     /tmp/ccr4ENLm.s:288    .text:0000000000000128 .LVL16
     /tmp/ccr4ENLm.s:330    .text:0000000000000158 .LVL18
     /tmp/ccr4ENLm.s:380    .text:000000000000018c .LVL24
     /tmp/ccr4ENLm.s:317    .text:0000000000000150 .LVL17
     /tmp/ccr4ENLm.s:355    .text:0000000000000174 .LVL21
     /tmp/ccr4ENLm.s:359    .text:000000000000017c .LVL22
     /tmp/ccr4ENLm.s:368    .text:0000000000000180 .LVL23
     /tmp/ccr4ENLm.s:191    .text:00000000000000cc .LVL13
     /tmp/ccr4ENLm.s:201    .text:00000000000000d4 .LVL14
     /tmp/ccr4ENLm.s:153    .text:00000000000000ac .LVL11
     /tmp/ccr4ENLm.s:163    .text:00000000000000b4 .LVL12
     /tmp/ccr4ENLm.s:94     .text:0000000000000078 .LVL8
     /tmp/ccr4ENLm.s:74     .text:0000000000000064 .LVL6
     /tmp/ccr4ENLm.s:82     .text:000000000000006c .LVL7
     /tmp/ccr4ENLm.s:1591   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccr4ENLm.s:603    .text:00000000000002b0 .LBB105
     /tmp/ccr4ENLm.s:736    .text:0000000000000340 .LBE105
     /tmp/ccr4ENLm.s:773    .text:0000000000000378 .LBB226
     /tmp/ccr4ENLm.s:813    .text:0000000000000394 .LBE226
     /tmp/ccr4ENLm.s:817    .text:0000000000000394 .LBB227
     /tmp/ccr4ENLm.s:824    .text:000000000000039c .LBE227
     /tmp/ccr4ENLm.s:828    .text:000000000000039c .LBB228
     /tmp/ccr4ENLm.s:837    .text:00000000000003a4 .LBE228
     /tmp/ccr4ENLm.s:841    .text:00000000000003a4 .LBB229
     /tmp/ccr4ENLm.s:852    .text:00000000000003ac .LBE229
     /tmp/ccr4ENLm.s:856    .text:00000000000003ac .LBB230
     /tmp/ccr4ENLm.s:869    .text:00000000000003b4 .LBE230
     /tmp/ccr4ENLm.s:873    .text:00000000000003b4 .LBB231
     /tmp/ccr4ENLm.s:888    .text:00000000000003bc .LBE231
     /tmp/ccr4ENLm.s:892    .text:00000000000003bc .LBB232
     /tmp/ccr4ENLm.s:909    .text:00000000000003c4 .LBE232
     /tmp/ccr4ENLm.s:913    .text:00000000000003c4 .LBB233
     /tmp/ccr4ENLm.s:932    .text:00000000000003cc .LBE233
     /tmp/ccr4ENLm.s:936    .text:00000000000003cc .LBB234
     /tmp/ccr4ENLm.s:957    .text:00000000000003d4 .LBE234
     /tmp/ccr4ENLm.s:961    .text:00000000000003d4 .LBB235
     /tmp/ccr4ENLm.s:1240   .text:00000000000004dc .LBE235
     /tmp/ccr4ENLm.s:1244   .text:00000000000004dc .LBB236
     /tmp/ccr4ENLm.s:1526   .text:00000000000005e0 .LBE236
     /tmp/ccr4ENLm.s:1373   .text:0000000000000544 .LBB139
     /tmp/ccr4ENLm.s:1427   .text:0000000000000580 .LBE139
     /tmp/ccr4ENLm.s:1508   .text:00000000000005c8 .LBB141
GAS LISTING /tmp/ccr4ENLm.s 			page 60


     /tmp/ccr4ENLm.s:1518   .text:00000000000005e0 .LBE141
     /tmp/ccr4ENLm.s:1199   .text:00000000000004a8 .LBB158
     /tmp/ccr4ENLm.s:1234   .text:00000000000004dc .LBE158
     /tmp/ccr4ENLm.s:1250   .text:00000000000004dc .LBB165
     /tmp/ccr4ENLm.s:1292   .text:00000000000004fc .LBE165
     /tmp/ccr4ENLm.s:1087   .text:0000000000000434 .LBB187
     /tmp/ccr4ENLm.s:1150   .text:0000000000000480 .LBE187
     /tmp/ccr4ENLm.s:1490   .text:00000000000005ac .LBB190
     /tmp/ccr4ENLm.s:1503   .text:00000000000005c8 .LBE190
     /tmp/ccr4ENLm.s:116    .gcc_except_table:0000000000000000 .LLSDA23
     /tmp/ccr4ENLm.s:1531   .gcc_except_table:0000000000000038 .LLSDA30

UNDEFINED SYMBOLS
_ZN5Riscv14supervisorTrapEv
_Znwm
_ZN6ThreadC1EPFvPvES0_
_ZN6Thread5startEv
_ZN9Scheduler3getEv
_ZN3PCB7runningE
_ZdlPv
_Unwind_Resume
__gxx_personality_v0
__putc
_ZN3PCB16timeSliceCounterE
_ZN12SleepPCBList13tryToWakePCBsEv
_ZN3PCB8dispatchEv
console_handler
_ZN10KSemaphoreD1Ev
_ZN10KSemaphoredlEPv
_Z7kmallocm
_Z5kfreePv
_ZN3PCBnwEm
_ZN3PCBC1EPFvPvES0_S0_m
_ZN12SleepPCBList17insertSleepingPCBEv
_ZN10KSemaphorenwEm
_ZN10KSemaphoreC1Ei
_ZN10KSemaphore4waitEv
_ZN10KSemaphore6signalEv
_ZN3PCBdlEPv
