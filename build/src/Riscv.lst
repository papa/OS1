GAS LISTING /tmp/ccBOEXqj.s 			page 1


   1              		.file	"Riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv24getCharactersFromConsoleEv
   9              	_ZN5Riscv24getCharactersFromConsoleEv:
  10              	.LFB23:
  11              		.file 1 "src/Riscv.cpp"
   1:src/Riscv.cpp **** //
   2:src/Riscv.cpp **** // Created by os on 4/27/22.
   3:src/Riscv.cpp **** //
   4:src/Riscv.cpp **** 
   5:src/Riscv.cpp **** #include "../h/Riscv.hpp"
   6:src/Riscv.cpp **** #include "../h/MemoryAllocator.hpp"
   7:src/Riscv.cpp **** #include "../h/PCB.hpp"
   8:src/Riscv.cpp **** #include "../lib/console.h"
   9:src/Riscv.cpp **** #include "../h/syscall_cpp.hpp"
  10:src/Riscv.cpp **** #include "../h/SleepPCBList.hpp"
  11:src/Riscv.cpp **** 
  12:src/Riscv.cpp **** //extern const uint64 CONSOLE_STATUS;
  13:src/Riscv.cpp **** //extern const uint64 CONSOLE_TX_DATA;
  14:src/Riscv.cpp **** //extern const uint64 CONSOLE_RX_DATA;
  15:src/Riscv.cpp **** 
  16:src/Riscv.cpp **** void Riscv::getCharactersFromConsole()
  17:src/Riscv.cpp **** {
  12              		.loc 1 17 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  18:src/Riscv.cpp ****     //uint64 addr = CONSOLE_STATUS;
  19:src/Riscv.cpp ****     //__asm__ volatile("ld a0, %0" : : "r"(addr));
  20:src/Riscv.cpp **** }
  20              		.loc 1 20 1 is_stmt 0
  21 000c 03348100 		ld	s0,8(sp)
  22              		.cfi_restore 8
  23              		.cfi_def_cfa 2, 16
  24 0010 13010101 		addi	sp,sp,16
  25              		.cfi_def_cfa_offset 0
  26 0014 67800000 		jr	ra
  27              		.cfi_endproc
  28              	.LFE23:
  30              		.align	2
  31              		.globl	_ZN5Riscv10initSystemEv
  33              	_ZN5Riscv10initSystemEv:
  34              	.LFB24:
  21:src/Riscv.cpp **** 
  22:src/Riscv.cpp **** void Riscv::initSystem()
  23:src/Riscv.cpp **** {
  35              		.loc 1 23 1 is_stmt 1
  36              		.cfi_startproc
  37              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
GAS LISTING /tmp/ccBOEXqj.s 			page 2


  38              		.cfi_lsda 0x1b,.LLSDA24
  39 0018 130101FE 		addi	sp,sp,-32
  40              		.cfi_def_cfa_offset 32
  41 001c 233C1100 		sd	ra,24(sp)
  42 0020 23388100 		sd	s0,16(sp)
  43 0024 23349100 		sd	s1,8(sp)
  44 0028 23302101 		sd	s2,0(sp)
  45              		.cfi_offset 1, -8
  46              		.cfi_offset 8, -16
  47              		.cfi_offset 9, -24
  48              		.cfi_offset 18, -32
  49 002c 13040102 		addi	s0,sp,32
  50              		.cfi_def_cfa 8, 0
  24:src/Riscv.cpp ****     w_stvec((uint64)&Riscv::supervisorTrap);
  51              		.loc 1 24 5
  52              		.loc 1 24 12 is_stmt 0
  53 0030 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
  53      83B70700 
  54              	.LVL0:
  55              	.LBB82:
  56              	.LBB83:
  57              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 4/27/22.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_0_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_0_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** class Riscv
  11:src/../h/Riscv.hpp **** {
  12:src/../h/Riscv.hpp **** private:
  13:src/../h/Riscv.hpp **** 
  14:src/../h/Riscv.hpp **** public:
  15:src/../h/Riscv.hpp ****     static void initSystem();
  16:src/../h/Riscv.hpp ****     static void endSystem();
  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp ****     static void enableInterrupts();
  19:src/../h/Riscv.hpp **** 
  20:src/../h/Riscv.hpp ****     static void disableInterrupts();
  21:src/../h/Riscv.hpp **** 
  22:src/../h/Riscv.hpp ****     static void printString(char const *string);
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp ****     static void printInteger(uint64 num);
  25:src/../h/Riscv.hpp **** 
  26:src/../h/Riscv.hpp ****     static void pushRegisters();
  27:src/../h/Riscv.hpp ****     static void popRegisters();
  28:src/../h/Riscv.hpp **** 
  29:src/../h/Riscv.hpp ****     static uint64 r_scause();
  30:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  31:src/../h/Riscv.hpp **** 
  32:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  33:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
  34:src/../h/Riscv.hpp **** 
  35:src/../h/Riscv.hpp ****     static uint64 r_stvec();
GAS LISTING /tmp/ccBOEXqj.s 			page 3


  36:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  37:src/../h/Riscv.hpp **** 
  38:src/../h/Riscv.hpp ****     static uint64 r_stval();
  39:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  40:src/../h/Riscv.hpp **** 
  41:src/../h/Riscv.hpp ****     enum BitMaskSip
  42:src/../h/Riscv.hpp ****     {
  43:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  44:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  45:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9),
  46:src/../h/Riscv.hpp ****     };
  47:src/../h/Riscv.hpp **** 
  48:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  49:src/../h/Riscv.hpp **** 
  50:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  51:src/../h/Riscv.hpp **** 
  52:src/../h/Riscv.hpp ****     static uint64 r_sip();
  53:src/../h/Riscv.hpp **** 
  54:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  55:src/../h/Riscv.hpp **** 
  56:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  57:src/../h/Riscv.hpp ****     {
  58:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  59:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  60:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  61:src/../h/Riscv.hpp ****     };
  62:src/../h/Riscv.hpp **** 
  63:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  64:src/../h/Riscv.hpp **** 
  65:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  66:src/../h/Riscv.hpp **** 
  67:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  68:src/../h/Riscv.hpp **** 
  69:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp ****     static void popSppSpie();
  72:src/../h/Riscv.hpp **** 
  73:src/../h/Riscv.hpp ****     static void supervisorTrap();
  74:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  75:src/../h/Riscv.hpp **** 
  76:src/../h/Riscv.hpp ****     static void getCharactersFromConsole();
  77:src/../h/Riscv.hpp **** 
  78:src/../h/Riscv.hpp ****     static const uint64 bntOne = 1UL << 63;;
  79:src/../h/Riscv.hpp ****     static const uint64 bntZero = 0UL;
  80:src/../h/Riscv.hpp ****     static const uint64 timerInterrupt = bntOne + 1UL;
  81:src/../h/Riscv.hpp ****     static const uint64 hwInterrupt = bntOne + 9UL;
  82:src/../h/Riscv.hpp ****     static const uint64 operationInterrupt = bntZero + 2UL;
  83:src/../h/Riscv.hpp ****     static const uint64 addrReadInterrupt = bntZero + 5UL;
  84:src/../h/Riscv.hpp ****     static const uint64 addrWriteInterrupt = bntZero + 7UL;
  85:src/../h/Riscv.hpp ****     static const uint64 ecallUserInterrupt = bntZero + 8UL;
  86:src/../h/Riscv.hpp ****     static const uint64 ecallSystemInterupt = bntZero + 9UL;
  87:src/../h/Riscv.hpp **** };
  88:src/../h/Riscv.hpp **** 
  89:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause() {
  90:src/../h/Riscv.hpp ****     uint64 volatile scause;
  91:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
  92:src/../h/Riscv.hpp ****     return scause;
GAS LISTING /tmp/ccBOEXqj.s 			page 4


  93:src/../h/Riscv.hpp **** }
  94:src/../h/Riscv.hpp **** 
  95:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
  96:src/../h/Riscv.hpp ****     __asm__ volatile("csrw scause, %0" : :"r"(scause));
  97:src/../h/Riscv.hpp **** }
  98:src/../h/Riscv.hpp **** 
  99:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc() {
 100:src/../h/Riscv.hpp ****     uint64 volatile sepc;
 101:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 102:src/../h/Riscv.hpp ****     return sepc;
 103:src/../h/Riscv.hpp **** }
 104:src/../h/Riscv.hpp **** 
 105:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
 106:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sepc, %0" : :"r"(sepc));
 107:src/../h/Riscv.hpp **** }
 108:src/../h/Riscv.hpp **** 
 109:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec() {
 110:src/../h/Riscv.hpp ****     uint64 volatile stvec;
 111:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, stvec" : "=r"(stvec));
 112:src/../h/Riscv.hpp ****     return stvec;
 113:src/../h/Riscv.hpp **** }
 114:src/../h/Riscv.hpp **** 
 115:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 116:src/../h/Riscv.hpp ****     __asm__ volatile("csrw stvec, %0" : :"r"(stvec));
  58              		.loc 2 116 5 is_stmt 1
  59              		.loc 2 116 53 is_stmt 0
  60              	#APP
  61              	# 116 "src/../h/Riscv.hpp" 1
 117              	}
  62              		csrw stvec, a5
  63              	# 0 "" 2
  64              	.LVL1:
  65              	#NO_APP
  66              	.LBE83:
  67              	.LBE82:
  25:src/Riscv.cpp ****     new PCB(0, 0,0,0);
  68              		.loc 1 25 5 is_stmt 1
  69              		.loc 1 25 21 is_stmt 0
  70 003c 13050005 		li	a0,80
  71              	.LEHB0:
  72 0040 97000000 		call	_ZN3PCBnwEm@plt
  72      E7800000 
  73              	.LVL2:
  74              	.LEHE0:
  75 0048 93040500 		mv	s1,a0
  76 004c 13070000 		li	a4,0
  77 0050 93060000 		li	a3,0
  78 0054 13060000 		li	a2,0
  79 0058 93050000 		li	a1,0
  80              	.LEHB1:
  81 005c 97000000 		call	_ZN3PCBC1EPFvPvES0_S0_m@plt
  81      E7800000 
  82              	.LVL3:
  83              	.LEHE1:
  26:src/Riscv.cpp ****     PCB::running = Scheduler::get();
  84              		.loc 1 26 5 is_stmt 1
  85              	.LEHB2:
GAS LISTING /tmp/ccBOEXqj.s 			page 5


  86              		.loc 1 26 34 is_stmt 0
  87 0064 97000000 		call	_ZN9Scheduler3getEv@plt
  87      E7800000 
  88              	.LVL4:
  89              	.LEHE2:
  90              		.loc 1 26 18
  91 006c 97070000 		la	a5,_ZN3PCB7runningE
  91      83B70700 
  92 0074 23B0A700 		sd	a0,0(a5)
  27:src/Riscv.cpp ****     PCB::running->setState(PCB::RUNNING);
  93              		.loc 1 27 5 is_stmt 1
  94              	.LVL5:
  95              	.LBB84:
  96              	.LBB85:
  97              		.file 3 "src/../h/PCB.hpp"
   1:src/../h/PCB.hpp **** //
   2:src/../h/PCB.hpp **** // Created by os on 4/27/22.
   3:src/../h/PCB.hpp **** //
   4:src/../h/PCB.hpp **** 
   5:src/../h/PCB.hpp **** #ifndef PROJECT_BASE_V1_0_PCB_HPP
   6:src/../h/PCB.hpp **** #define PROJECT_BASE_V1_0_PCB_HPP
   7:src/../h/PCB.hpp **** 
   8:src/../h/PCB.hpp **** #include "../lib/hw.h"
   9:src/../h/PCB.hpp **** #include "Scheduler.hpp"
  10:src/../h/PCB.hpp **** #include "Riscv.hpp"
  11:src/../h/PCB.hpp **** 
  12:src/../h/PCB.hpp **** class PCB
  13:src/../h/PCB.hpp **** {
  14:src/../h/PCB.hpp **** public:
  15:src/../h/PCB.hpp ****     using Body = void (*)(void*);
  16:src/../h/PCB.hpp **** 
  17:src/../h/PCB.hpp ****     PCB(Body body,  void* args, void* stack_space, uint64 timeSlice);
  18:src/../h/PCB.hpp ****     ~PCB();
  19:src/../h/PCB.hpp **** 
  20:src/../h/PCB.hpp ****     void start();
  21:src/../h/PCB.hpp ****     static void dispatch();
  22:src/../h/PCB.hpp ****     static void sleep(time_t);
  23:src/../h/PCB.hpp **** 
  24:src/../h/PCB.hpp ****     static PCB* running;
  25:src/../h/PCB.hpp ****     static PCB* exitingPCB;
  26:src/../h/PCB.hpp **** 
  27:src/../h/PCB.hpp ****     static uint64 timeSliceCounter;
  28:src/../h/PCB.hpp ****     uint64 getTimeSlice() { return timeSlice;}
  29:src/../h/PCB.hpp **** 
  30:src/../h/PCB.hpp ****     void* operator new(size_t size);
  31:src/../h/PCB.hpp ****     void operator delete(void *p);
  32:src/../h/PCB.hpp **** 
  33:src/../h/PCB.hpp ****     enum State{READY, RUNNING, SUSPENDED, FINISHED, EXITING, SLEEPING};
  34:src/../h/PCB.hpp ****     State getState() {return state;}
  35:src/../h/PCB.hpp ****     void setState(State s) {state = s;}
  98              		.loc 3 35 29
  99              		.loc 3 35 35 is_stmt 0
 100 0078 93071000 		li	a5,1
 101 007c 2328F502 		sw	a5,48(a0)
 102              	.LVL6:
 103              	.LBE85:
 104              	.LBE84:
GAS LISTING /tmp/ccBOEXqj.s 			page 6


  28:src/Riscv.cpp **** }
 105              		.loc 1 28 1
 106 0080 83308101 		ld	ra,24(sp)
 107              		.cfi_remember_state
 108              		.cfi_restore 1
 109 0084 03340101 		ld	s0,16(sp)
 110              		.cfi_restore 8
 111              		.cfi_def_cfa 2, 32
 112 0088 83348100 		ld	s1,8(sp)
 113              		.cfi_restore 9
 114 008c 03390100 		ld	s2,0(sp)
 115              		.cfi_restore 18
 116 0090 13010102 		addi	sp,sp,32
 117              		.cfi_def_cfa_offset 0
 118 0094 67800000 		jr	ra
 119              	.L5:
 120              		.cfi_restore_state
 121 0098 13090500 		mv	s2,a0
  25:src/Riscv.cpp ****     PCB::running = Scheduler::get();
 122              		.loc 1 25 21
 123 009c 13850400 		mv	a0,s1
 124 00a0 97000000 		call	_ZN3PCBdlEPv@plt
 124      E7800000 
 125              	.LVL7:
 126 00a8 13050900 		mv	a0,s2
 127              	.LEHB3:
 128 00ac 97000000 		call	_Unwind_Resume@plt
 128      E7800000 
 129              	.LVL8:
 130              	.LEHE3:
 131              		.cfi_endproc
 132              	.LFE24:
 133              		.globl	__gxx_personality_v0
 134              		.section	.gcc_except_table,"a",@progbits
 135              	.LLSDA24:
 136 0000 FF       		.byte	0xff
 137 0001 FF       		.byte	0xff
 138 0002 03       		.byte	0x3
 139 0003 34       		.byte	0x34
 140 0004 00000000 		.4byte	.LEHB0-.LFB24
 141 0008 00000000 		.4byte	.LEHE0-.LEHB0
 142 000c 00000000 		.4byte	0
 143 0010 00       		.byte	0
 144 0011 00000000 		.4byte	.LEHB1-.LFB24
 145 0015 00000000 		.4byte	.LEHE1-.LEHB1
 146 0019 00000000 		.4byte	.L5-.LFB24
 147 001d 00       		.byte	0
 148 001e 00000000 		.4byte	.LEHB2-.LFB24
 149 0022 00000000 		.4byte	.LEHE2-.LEHB2
 150 0026 00000000 		.4byte	0
 151 002a 00       		.byte	0
 152 002b 00000000 		.4byte	.LEHB3-.LFB24
 153 002f 00000000 		.4byte	.LEHE3-.LEHB3
 154 0033 00000000 		.4byte	0
 155 0037 00       		.byte	0
 156              		.text
 158              		.align	2
GAS LISTING /tmp/ccBOEXqj.s 			page 7


 159              		.globl	_ZN5Riscv16enableInterruptsEv
 161              	_ZN5Riscv16enableInterruptsEv:
 162              	.LFB26:
  29:src/Riscv.cpp **** 
  30:src/Riscv.cpp **** void Riscv::endSystem() {
  31:src/Riscv.cpp ****     //todo
  32:src/Riscv.cpp ****     //da li treba jos nesto da se ocisti
  33:src/Riscv.cpp ****     Riscv::disableInterrupts();
  34:src/Riscv.cpp **** }
  35:src/Riscv.cpp **** 
  36:src/Riscv.cpp **** 
  37:src/Riscv.cpp **** void Riscv::enableInterrupts() {
 163              		.loc 1 37 32 is_stmt 1
 164              		.cfi_startproc
 165 00b4 130101FF 		addi	sp,sp,-16
 166              		.cfi_def_cfa_offset 16
 167 00b8 23348100 		sd	s0,8(sp)
 168              		.cfi_offset 8, -8
 169 00bc 13040101 		addi	s0,sp,16
 170              		.cfi_def_cfa 8, 0
  38:src/Riscv.cpp ****     ms_sstatus(Riscv::SSTATUS_SIE);
 171              		.loc 1 38 5
 172              	.LVL9:
 173              	.LBB86:
 174              	.LBB87:
 118:src/../h/Riscv.hpp **** 
 119:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stval() {
 120:src/../h/Riscv.hpp ****     uint64 volatile stval;
 121:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, stval" : "=r"(stval));
 122:src/../h/Riscv.hpp ****     return stval;
 123:src/../h/Riscv.hpp **** }
 124:src/../h/Riscv.hpp **** 
 125:src/../h/Riscv.hpp **** inline void Riscv::w_stval(uint64 stval) {
 126:src/../h/Riscv.hpp ****     __asm__ volatile("csrw stval, %0" : :"r"(stval));
 127:src/../h/Riscv.hpp **** }
 128:src/../h/Riscv.hpp **** 
 129:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 130:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sip, %0" : :"r"(mask));
 131:src/../h/Riscv.hpp **** }
 132:src/../h/Riscv.hpp **** 
 133:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 134:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sip, %0" : :"r"(mask));
 135:src/../h/Riscv.hpp **** }
 136:src/../h/Riscv.hpp **** 
 137:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip() {
 138:src/../h/Riscv.hpp ****     uint64 volatile sip;
 139:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sip" : "=r"(sip));
 140:src/../h/Riscv.hpp ****     return sip;
 141:src/../h/Riscv.hpp **** }
 142:src/../h/Riscv.hpp **** 
 143:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 144:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sip, %0" : :"r"(sip));
 145:src/../h/Riscv.hpp **** }
 146:src/../h/Riscv.hpp **** 
 147:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 148:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sstatus, %0" : :"r"(mask));
 175              		.loc 2 148 5
GAS LISTING /tmp/ccBOEXqj.s 			page 8


 176              		.loc 2 148 54 is_stmt 0
 177 00c0 93072000 		li	a5,2
 178              	#APP
 179              	# 148 "src/../h/Riscv.hpp" 1
 149              	}
 180              		csrs sstatus, a5
 181              	# 0 "" 2
 182              	.LVL10:
 183              	#NO_APP
 184              	.LBE87:
 185              	.LBE86:
  39:src/Riscv.cpp **** }
 186              		.loc 1 39 1
 187 00c8 03348100 		ld	s0,8(sp)
 188              		.cfi_restore 8
 189              		.cfi_def_cfa 2, 16
 190 00cc 13010101 		addi	sp,sp,16
 191              		.cfi_def_cfa_offset 0
 192 00d0 67800000 		jr	ra
 193              		.cfi_endproc
 194              	.LFE26:
 196              		.align	2
 197              		.globl	_ZN5Riscv17disableInterruptsEv
 199              	_ZN5Riscv17disableInterruptsEv:
 200              	.LFB27:
  40:src/Riscv.cpp **** 
  41:src/Riscv.cpp **** void Riscv::disableInterrupts()
  42:src/Riscv.cpp **** {
 201              		.loc 1 42 1 is_stmt 1
 202              		.cfi_startproc
 203 00d4 130101FF 		addi	sp,sp,-16
 204              		.cfi_def_cfa_offset 16
 205 00d8 23348100 		sd	s0,8(sp)
 206              		.cfi_offset 8, -8
 207 00dc 13040101 		addi	s0,sp,16
 208              		.cfi_def_cfa 8, 0
  43:src/Riscv.cpp ****     mc_sstatus(Riscv::SSTATUS_SIE);
 209              		.loc 1 43 5
 210              	.LVL11:
 211              	.LBB88:
 212              	.LBB89:
 150:src/../h/Riscv.hpp **** 
 151:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 152:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sstatus, %0" : :"r"(mask));
 213              		.loc 2 152 5
 214              		.loc 2 152 54 is_stmt 0
 215 00e0 93072000 		li	a5,2
 216              	#APP
 217              	# 152 "src/../h/Riscv.hpp" 1
 153              	}
 218              		csrc sstatus, a5
 219              	# 0 "" 2
 220              	.LVL12:
 221              	#NO_APP
 222              	.LBE89:
 223              	.LBE88:
  44:src/Riscv.cpp **** }
GAS LISTING /tmp/ccBOEXqj.s 			page 9


 224              		.loc 1 44 1
 225 00e8 03348100 		ld	s0,8(sp)
 226              		.cfi_restore 8
 227              		.cfi_def_cfa 2, 16
 228 00ec 13010101 		addi	sp,sp,16
 229              		.cfi_def_cfa_offset 0
 230 00f0 67800000 		jr	ra
 231              		.cfi_endproc
 232              	.LFE27:
 234              		.align	2
 235              		.globl	_ZN5Riscv9endSystemEv
 237              	_ZN5Riscv9endSystemEv:
 238              	.LFB25:
  30:src/Riscv.cpp ****     //todo
 239              		.loc 1 30 25 is_stmt 1
 240              		.cfi_startproc
 241 00f4 130101FF 		addi	sp,sp,-16
 242              		.cfi_def_cfa_offset 16
 243 00f8 23341100 		sd	ra,8(sp)
 244 00fc 23308100 		sd	s0,0(sp)
 245              		.cfi_offset 1, -8
 246              		.cfi_offset 8, -16
 247 0100 13040101 		addi	s0,sp,16
 248              		.cfi_def_cfa 8, 0
  33:src/Riscv.cpp **** }
 249              		.loc 1 33 5
  33:src/Riscv.cpp **** }
 250              		.loc 1 33 29 is_stmt 0
 251 0104 97000000 		call	_ZN5Riscv17disableInterruptsEv
 251      E7800000 
 252              	.LVL13:
  34:src/Riscv.cpp **** 
 253              		.loc 1 34 1
 254 010c 83308100 		ld	ra,8(sp)
 255              		.cfi_restore 1
 256 0110 03340100 		ld	s0,0(sp)
 257              		.cfi_restore 8
 258              		.cfi_def_cfa 2, 16
 259 0114 13010101 		addi	sp,sp,16
 260              		.cfi_def_cfa_offset 0
 261 0118 67800000 		jr	ra
 262              		.cfi_endproc
 263              	.LFE25:
 265              		.align	2
 266              		.globl	_ZN5Riscv10popSppSpieEv
 268              	_ZN5Riscv10popSppSpieEv:
 269              	.LFB28:
  45:src/Riscv.cpp **** 
  46:src/Riscv.cpp **** void Riscv::popSppSpie() {
 270              		.loc 1 46 26 is_stmt 1
 271              		.cfi_startproc
 272 011c 130101FF 		addi	sp,sp,-16
 273              		.cfi_def_cfa_offset 16
 274 0120 23348100 		sd	s0,8(sp)
 275              		.cfi_offset 8, -8
 276 0124 13040101 		addi	s0,sp,16
 277              		.cfi_def_cfa 8, 0
GAS LISTING /tmp/ccBOEXqj.s 			page 10


  47:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
 278              		.loc 1 47 5
 279              		.loc 1 47 39 is_stmt 0
 280              	#APP
 281              	# 47 "src/Riscv.cpp" 1
  48              	    __asm__ volatile ("sret");
 282              		csrw sepc, ra
 283              	# 0 "" 2
 284              		.loc 1 48 5 is_stmt 1
 285              		.loc 1 48 30 is_stmt 0
 286              	# 48 "src/Riscv.cpp" 1
  49              	}
 287              		sret
 288              	# 0 "" 2
 289              		.loc 1 49 1
 290              	#NO_APP
 291 0130 03348100 		ld	s0,8(sp)
 292              		.cfi_restore 8
 293              		.cfi_def_cfa 2, 16
 294 0134 13010101 		addi	sp,sp,16
 295              		.cfi_def_cfa_offset 0
 296 0138 67800000 		jr	ra
 297              		.cfi_endproc
 298              	.LFE28:
 300              		.align	2
 301              		.globl	_ZN5Riscv11printStringEPKc
 303              	_ZN5Riscv11printStringEPKc:
 304              	.LFB29:
  50:src/Riscv.cpp **** 
  51:src/Riscv.cpp **** void Riscv::printString(const char *string)
  52:src/Riscv.cpp **** {
 305              		.loc 1 52 1 is_stmt 1
 306              		.cfi_startproc
 307              	.LVL14:
 308 013c 130101FD 		addi	sp,sp,-48
 309              		.cfi_def_cfa_offset 48
 310 0140 23341102 		sd	ra,40(sp)
 311 0144 23308102 		sd	s0,32(sp)
 312 0148 233C9100 		sd	s1,24(sp)
 313 014c 23382101 		sd	s2,16(sp)
 314              		.cfi_offset 1, -8
 315              		.cfi_offset 8, -16
 316              		.cfi_offset 9, -24
 317              		.cfi_offset 18, -32
 318 0150 13040103 		addi	s0,sp,48
 319              		.cfi_def_cfa 8, 0
 320 0154 93040500 		mv	s1,a0
  53:src/Riscv.cpp ****     uint64 sstatus = r_sstatus();
 321              		.loc 1 53 5
 322              	.LBB90:
 323              	.LBB91:
 154:src/../h/Riscv.hpp **** 
 155:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sstatus() {
 156:src/../h/Riscv.hpp ****     uint64 volatile sstatus;
 324              		.loc 2 156 5
 157:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 325              		.loc 2 157 5
GAS LISTING /tmp/ccBOEXqj.s 			page 11


 326              		.loc 2 157 57 is_stmt 0
 327              	#APP
 328              	# 157 "src/../h/Riscv.hpp" 1
 158              	    return sstatus;
 329              		csrr a5, sstatus
 330              	# 0 "" 2
 331              	#NO_APP
 332 015c 233CF4FC 		sd	a5,-40(s0)
 333              		.loc 2 158 5 is_stmt 1
 334              		.loc 2 158 12 is_stmt 0
 335 0160 033984FD 		ld	s2,-40(s0)
 336              	.LVL15:
 337              	.LBE91:
 338              	.LBE90:
  54:src/Riscv.cpp ****     mc_sstatus(SSTATUS_SIE);
 339              		.loc 1 54 5 is_stmt 1
 340              	.LBB92:
 341              	.LBB93:
 152:src/../h/Riscv.hpp **** }
 342              		.loc 2 152 5
 152:src/../h/Riscv.hpp **** }
 343              		.loc 2 152 54 is_stmt 0
 344 0164 93072000 		li	a5,2
 345              	#APP
 346              	# 152 "src/../h/Riscv.hpp" 1
 347              		csrc sstatus, a5
 348              	# 0 "" 2
 349              	.LVL16:
 350              	#NO_APP
 351              	.L18:
 352              	.LBE93:
 353              	.LBE92:
  55:src/Riscv.cpp ****     while (*string != '\0')
 354              		.loc 1 55 5 is_stmt 1
 355              		.loc 1 55 20
 356              		.loc 1 55 12 is_stmt 0
 357 016c 03C50400 		lbu	a0,0(s1)
 358              		.loc 1 55 20
 359 0170 630A0500 		beqz	a0,.L17
  56:src/Riscv.cpp ****     {
  57:src/Riscv.cpp ****         __putc(*string);
 360              		.loc 1 57 9 is_stmt 1
 361              		.loc 1 57 15 is_stmt 0
 362 0174 97000000 		call	__putc@plt
 362      E7800000 
 363              	.LVL17:
  58:src/Riscv.cpp ****         string++;
 364              		.loc 1 58 9 is_stmt 1
 365              		.loc 1 58 15 is_stmt 0
 366 017c 93841400 		addi	s1,s1,1
 367              	.LVL18:
  55:src/Riscv.cpp ****     while (*string != '\0')
 368              		.loc 1 55 5
 369 0180 6FF0DFFE 		j	.L18
 370              	.L17:
  59:src/Riscv.cpp ****     }
  60:src/Riscv.cpp ****     ms_sstatus(sstatus & SSTATUS_SIE ? SSTATUS_SIE : 0);
GAS LISTING /tmp/ccBOEXqj.s 			page 12


 371              		.loc 1 60 5 is_stmt 1
 372              		.loc 1 60 38 is_stmt 0
 373 0184 1B090900 		sext.w	s2,s2
 374              	.LVL19:
 375              		.loc 1 60 15
 376 0188 13792900 		andi	s2,s2,2
 377 018c 1B090900 		sext.w	s2,s2
 378              	.LVL20:
 379              	.LBB94:
 380              	.LBB95:
 148:src/../h/Riscv.hpp **** }
 381              		.loc 2 148 5 is_stmt 1
 148:src/../h/Riscv.hpp **** }
 382              		.loc 2 148 54 is_stmt 0
 383              	#APP
 384              	# 148 "src/../h/Riscv.hpp" 1
 385              		csrs sstatus, s2
 386              	# 0 "" 2
 387              	.LVL21:
 388              	#NO_APP
 389              	.LBE95:
 390              	.LBE94:
  61:src/Riscv.cpp **** }
 391              		.loc 1 61 1
 392 0194 83308102 		ld	ra,40(sp)
 393              		.cfi_restore 1
 394 0198 03340102 		ld	s0,32(sp)
 395              		.cfi_restore 8
 396              		.cfi_def_cfa 2, 48
 397 019c 83348101 		ld	s1,24(sp)
 398              		.cfi_restore 9
 399              	.LVL22:
 400 01a0 03390101 		ld	s2,16(sp)
 401              		.cfi_restore 18
 402 01a4 13010103 		addi	sp,sp,48
 403              		.cfi_def_cfa_offset 0
 404 01a8 67800000 		jr	ra
 405              		.cfi_endproc
 406              	.LFE29:
 408              		.align	2
 409              		.globl	_ZN5Riscv12printIntegerEm
 411              	_ZN5Riscv12printIntegerEm:
 412              	.LFB30:
  62:src/Riscv.cpp **** 
  63:src/Riscv.cpp **** void Riscv::printInteger(uint64 num)
  64:src/Riscv.cpp **** {
 413              		.loc 1 64 1 is_stmt 1
 414              		.cfi_startproc
 415              	.LVL23:
 416 01ac 130101FC 		addi	sp,sp,-64
 417              		.cfi_def_cfa_offset 64
 418 01b0 233C1102 		sd	ra,56(sp)
 419 01b4 23388102 		sd	s0,48(sp)
 420 01b8 23349102 		sd	s1,40(sp)
 421 01bc 23302103 		sd	s2,32(sp)
 422              		.cfi_offset 1, -8
 423              		.cfi_offset 8, -16
GAS LISTING /tmp/ccBOEXqj.s 			page 13


 424              		.cfi_offset 9, -24
 425              		.cfi_offset 18, -32
 426 01c0 13040104 		addi	s0,sp,64
 427              		.cfi_def_cfa 8, 0
  65:src/Riscv.cpp ****     uint64 sstatus = r_sstatus();
 428              		.loc 1 65 5
 429              	.LBB96:
 430              	.LBB97:
 156:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 431              		.loc 2 156 5
 157:src/../h/Riscv.hpp ****     return sstatus;
 432              		.loc 2 157 5
 157:src/../h/Riscv.hpp ****     return sstatus;
 433              		.loc 2 157 57 is_stmt 0
 434              	#APP
 435              	# 157 "src/../h/Riscv.hpp" 1
 436              		csrr a5, sstatus
 437              	# 0 "" 2
 438              	#NO_APP
 439 01c8 2334F4FC 		sd	a5,-56(s0)
 440              		.loc 2 158 5 is_stmt 1
 441              		.loc 2 158 12 is_stmt 0
 442 01cc 033984FC 		ld	s2,-56(s0)
 443              	.LVL24:
 444              	.LBE97:
 445              	.LBE96:
  66:src/Riscv.cpp ****     mc_sstatus(SSTATUS_SIE);
 446              		.loc 1 66 5 is_stmt 1
 447              	.LBB98:
 448              	.LBB99:
 152:src/../h/Riscv.hpp **** }
 449              		.loc 2 152 5
 152:src/../h/Riscv.hpp **** }
 450              		.loc 2 152 54 is_stmt 0
 451 01d0 93072000 		li	a5,2
 452              	#APP
 453              	# 152 "src/../h/Riscv.hpp" 1
 454              		csrc sstatus, a5
 455              	# 0 "" 2
 456              	.LVL25:
 457              	#NO_APP
 458              	.LBE99:
 459              	.LBE98:
  67:src/Riscv.cpp ****     static char digits[] = "0123456789";
 460              		.loc 1 67 5 is_stmt 1
  68:src/Riscv.cpp ****     char buf[16];
 461              		.loc 1 68 5
  69:src/Riscv.cpp ****     int i, neg;
 462              		.loc 1 69 5
  70:src/Riscv.cpp ****     uint x;
 463              		.loc 1 70 5
  71:src/Riscv.cpp **** 
  72:src/Riscv.cpp ****     neg = 0;
 464              		.loc 1 72 5
  73:src/Riscv.cpp ****     if(num < 0)
 465              		.loc 1 73 5
  74:src/Riscv.cpp ****     {
GAS LISTING /tmp/ccBOEXqj.s 			page 14


  75:src/Riscv.cpp ****         neg = 1;
  76:src/Riscv.cpp ****         x = -num;
  77:src/Riscv.cpp ****     }
  78:src/Riscv.cpp ****     else
  79:src/Riscv.cpp ****         x = num;
 466              		.loc 1 79 9
 467              		.loc 1 79 11 is_stmt 0
 468 01d8 1B050500 		sext.w	a0,a0
 469              	.LVL26:
  80:src/Riscv.cpp **** 
  81:src/Riscv.cpp ****     i = 0;
 470              		.loc 1 81 5 is_stmt 1
 471              		.loc 1 81 7 is_stmt 0
 472 01dc 93040000 		li	s1,0
 473              	.LVL27:
 474              	.L21:
  82:src/Riscv.cpp ****     do
 475              		.loc 1 82 5 is_stmt 1
  83:src/Riscv.cpp ****     {
  84:src/Riscv.cpp ****         buf[i++] = digits[x%10];
 476              		.loc 1 84 9
 477              		.loc 1 84 28 is_stmt 0
 478 01e0 1306A000 		li	a2,10
 479 01e4 3B77C502 		remuw	a4,a0,a2
 480              	.LVL28:
 481              		.loc 1 84 31
 482 01e8 93160702 		slli	a3,a4,32
 483 01ec 93D60602 		srli	a3,a3,32
 484 01f0 17070000 		lla	a4,.LANCHOR0
 484      13070700 
 485 01f8 3307D700 		add	a4,a4,a3
 486 01fc 03470700 		lbu	a4,0(a4)
 487              		.loc 1 84 18
 488 0200 930604FE 		addi	a3,s0,-32
 489 0204 B3879600 		add	a5,a3,s1
 490 0208 9B841400 		addiw	s1,s1,1
 491              	.LVL29:
 492 020c 2388E7FE 		sb	a4,-16(a5)
  85:src/Riscv.cpp ****     }while((x/=10) != 0);
 493              		.loc 1 85 20 is_stmt 1
 494 0210 1B070500 		sext.w	a4,a0
 495              		.loc 1 85 14 is_stmt 0
 496 0214 3B55C502 		divuw	a0,a0,a2
 497              	.LVL30:
 498              		.loc 1 85 20
 499 0218 93079000 		li	a5,9
 500 021c E3E2E7FC 		bgtu	a4,a5,.L21
 501              	.LVL31:
 502              	.L23:
  86:src/Riscv.cpp ****     if(neg)
  87:src/Riscv.cpp ****         buf[i++] = '-';
  88:src/Riscv.cpp **** 
  89:src/Riscv.cpp ****     while(--i >= 0)
 503              		.loc 1 89 5 is_stmt 1
 504              		.loc 1 89 15
 505 0220 9B84F4FF 		addiw	s1,s1,-1
 506              	.LVL32:
GAS LISTING /tmp/ccBOEXqj.s 			page 15


 507 0224 63CE0400 		bltz	s1,.L22
  90:src/Riscv.cpp ****         __putc(buf[i]);
 508              		.loc 1 90 9
 509              		.loc 1 90 15 is_stmt 0
 510 0228 930704FE 		addi	a5,s0,-32
 511 022c B3879700 		add	a5,a5,s1
 512 0230 03C507FF 		lbu	a0,-16(a5)
 513 0234 97000000 		call	__putc@plt
 513      E7800000 
 514              	.LVL33:
 515 023c 6FF05FFE 		j	.L23
 516              	.L22:
  91:src/Riscv.cpp **** 
  92:src/Riscv.cpp ****     __putc('\n');
 517              		.loc 1 92 5 is_stmt 1
 518              		.loc 1 92 11 is_stmt 0
 519 0240 1305A000 		li	a0,10
 520 0244 97000000 		call	__putc@plt
 520      E7800000 
 521              	.LVL34:
  93:src/Riscv.cpp **** 
  94:src/Riscv.cpp ****     ms_sstatus(sstatus & SSTATUS_SIE ? SSTATUS_SIE : 0);
 522              		.loc 1 94 5 is_stmt 1
 523              		.loc 1 94 38 is_stmt 0
 524 024c 1B090900 		sext.w	s2,s2
 525              	.LVL35:
 526              		.loc 1 94 15
 527 0250 13792900 		andi	s2,s2,2
 528 0254 1B090900 		sext.w	s2,s2
 529              	.LVL36:
 530              	.LBB100:
 531              	.LBB101:
 148:src/../h/Riscv.hpp **** }
 532              		.loc 2 148 5 is_stmt 1
 148:src/../h/Riscv.hpp **** }
 533              		.loc 2 148 54 is_stmt 0
 534              	#APP
 535              	# 148 "src/../h/Riscv.hpp" 1
 536              		csrs sstatus, s2
 537              	# 0 "" 2
 538              	.LVL37:
 539              	#NO_APP
 540              	.LBE101:
 541              	.LBE100:
  95:src/Riscv.cpp **** }
 542              		.loc 1 95 1
 543 025c 83308103 		ld	ra,56(sp)
 544              		.cfi_restore 1
 545 0260 03340103 		ld	s0,48(sp)
 546              		.cfi_restore 8
 547              		.cfi_def_cfa 2, 64
 548 0264 83348102 		ld	s1,40(sp)
 549              		.cfi_restore 9
 550 0268 03390102 		ld	s2,32(sp)
 551              		.cfi_restore 18
 552 026c 13010104 		addi	sp,sp,64
 553              		.cfi_def_cfa_offset 0
GAS LISTING /tmp/ccBOEXqj.s 			page 16


 554 0270 67800000 		jr	ra
 555              		.cfi_endproc
 556              	.LFE30:
 558              		.align	2
 559              		.globl	_ZN5Riscv20handleSupervisorTrapEv
 561              	_ZN5Riscv20handleSupervisorTrapEv:
 562              	.LFB31:
  96:src/Riscv.cpp **** 
  97:src/Riscv.cpp **** void Riscv::handleSupervisorTrap()
  98:src/Riscv.cpp **** {
 563              		.loc 1 98 1 is_stmt 1
 564              		.cfi_startproc
 565              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 566              		.cfi_lsda 0x1b,.LLSDA31
 567 0274 130101F8 		addi	sp,sp,-128
 568              		.cfi_def_cfa_offset 128
 569 0278 233C1106 		sd	ra,120(sp)
 570 027c 23388106 		sd	s0,112(sp)
 571 0280 23349106 		sd	s1,104(sp)
 572 0284 23302107 		sd	s2,96(sp)
 573 0288 233C3105 		sd	s3,88(sp)
 574 028c 23384105 		sd	s4,80(sp)
 575 0290 23345105 		sd	s5,72(sp)
 576 0294 23306105 		sd	s6,64(sp)
 577              		.cfi_offset 1, -8
 578              		.cfi_offset 8, -16
 579              		.cfi_offset 9, -24
 580              		.cfi_offset 18, -32
 581              		.cfi_offset 19, -40
 582              		.cfi_offset 20, -48
 583              		.cfi_offset 21, -56
 584              		.cfi_offset 22, -64
 585 0298 13040108 		addi	s0,sp,128
 586              		.cfi_def_cfa 8, 0
  99:src/Riscv.cpp ****     uint64 a4;
 587              		.loc 1 99 5
 100:src/Riscv.cpp ****     __asm__ volatile("mv %0, a4" : "=r"(a4));
 588              		.loc 1 100 5
 589              		.loc 1 100 45 is_stmt 0
 590              	#APP
 591              	# 100 "src/Riscv.cpp" 1
 101              	
 592              		mv s2, a4
 593              	# 0 "" 2
 594              	.LVL38:
 102:src/Riscv.cpp ****     uint64 scause = Riscv::r_scause();
 595              		.loc 1 102 5 is_stmt 1
 596              	#NO_APP
 597              	.LBB102:
 598              	.LBB103:
  90:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
 599              		.loc 2 90 5
  91:src/../h/Riscv.hpp ****     return scause;
 600              		.loc 2 91 5
  91:src/../h/Riscv.hpp ****     return scause;
 601              		.loc 2 91 55 is_stmt 0
 602              	#APP
GAS LISTING /tmp/ccBOEXqj.s 			page 17


 603              	# 91 "src/../h/Riscv.hpp" 1
 604              		csrr a5, scause
 605              	# 0 "" 2
 606              	#NO_APP
 607 02a4 2334F4F8 		sd	a5,-120(s0)
  92:src/../h/Riscv.hpp **** }
 608              		.loc 2 92 5 is_stmt 1
  92:src/../h/Riscv.hpp **** }
 609              		.loc 2 92 12 is_stmt 0
 610 02a8 033784F8 		ld	a4,-120(s0)
 611              	.LVL39:
 612              	.LBE103:
 613              	.LBE102:
 103:src/Riscv.cpp **** 
 104:src/Riscv.cpp ****     switch(scause)
 614              		.loc 1 104 5 is_stmt 1
 615              	.LBB104:
 616 02ac 93079000 		li	a5,9
 617 02b0 63F2E70A 		bleu	a4,a5,.L49
 618 02b4 9307F0FF 		li	a5,-1
 619 02b8 9397F703 		slli	a5,a5,63
 620 02bc 93871700 		addi	a5,a5,1
 621 02c0 631EF708 		bne	a4,a5,.L28
 622              	.LBB105:
 105:src/Riscv.cpp ****     {
 106:src/Riscv.cpp **** 
 107:src/Riscv.cpp ****         case timerInterrupt:
 623              		.loc 1 107 9
 108:src/Riscv.cpp **** 
 109:src/Riscv.cpp ****             Riscv::mc_sip(Riscv::SIP_SSIP);
 624              		.loc 1 109 13
 625              	.LVL40:
 626              	.LBB106:
 627              	.LBB107:
 134:src/../h/Riscv.hpp **** }
 628              		.loc 2 134 5
 134:src/../h/Riscv.hpp **** }
 629              		.loc 2 134 50 is_stmt 0
 630 02c4 93072000 		li	a5,2
 631              	#APP
 632              	# 134 "src/../h/Riscv.hpp" 1
 633              		csrc sip, a5
 634              	# 0 "" 2
 635              	.LVL41:
 636              	#NO_APP
 637              	.LBE107:
 638              	.LBE106:
 110:src/Riscv.cpp ****             //Riscv::printString("timerInterrupt\n");
 111:src/Riscv.cpp **** 
 112:src/Riscv.cpp ****             static uint64 total = 0;
 639              		.loc 1 112 13 is_stmt 1
 113:src/Riscv.cpp ****             total++;
 640              		.loc 1 113 13
 641              		.loc 1 113 18 is_stmt 0
 642 02cc 97070000 		lla	a5,.LANCHOR1
 642      93870700 
 643 02d4 03B50700 		ld	a0,0(a5)
GAS LISTING /tmp/ccBOEXqj.s 			page 18


 644 02d8 13051500 		addi	a0,a0,1
 645 02dc 23B0A700 		sd	a0,0(a5)
 114:src/Riscv.cpp ****             Riscv::printInteger(total);
 646              		.loc 1 114 13 is_stmt 1
 647              	.LEHB4:
 648              		.loc 1 114 32 is_stmt 0
 649 02e0 97000000 		call	_ZN5Riscv12printIntegerEm
 649      E7800000 
 650              	.LVL42:
 115:src/Riscv.cpp **** 
 116:src/Riscv.cpp ****             PCB::timeSliceCounter++;
 651              		.loc 1 116 13 is_stmt 1
 652              		.loc 1 116 34 is_stmt 0
 653 02e8 97040000 		la	s1,_ZN3PCB16timeSliceCounterE
 653      83B40400 
 654 02f0 83B70400 		ld	a5,0(s1)
 655 02f4 93871700 		addi	a5,a5,1
 656 02f8 23B0F400 		sd	a5,0(s1)
 117:src/Riscv.cpp **** 
 118:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
 657              		.loc 1 118 13 is_stmt 1
 658              		.loc 1 118 40 is_stmt 0
 659 02fc 97000000 		call	_ZN12SleepPCBList13tryToWakePCBsEv@plt
 659      E7800000 
 660              	.LVL43:
 119:src/Riscv.cpp **** 
 120:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
 661              		.loc 1 120 13 is_stmt 1
 662              	.LBB108:
 663              		.loc 1 120 68 is_stmt 0
 664 0304 97070000 		la	a5,_ZN3PCB7runningE
 664      83B70700 
 665 030c 83B70700 		ld	a5,0(a5)
 666              	.LVL44:
 667              	.LBB109:
 668              	.LBB110:
  28:src/../h/PCB.hpp **** 
 669              		.loc 3 28 29 is_stmt 1
  28:src/../h/PCB.hpp **** 
 670              		.loc 3 28 36 is_stmt 0
 671 0310 83B78700 		ld	a5,8(a5)
 672              	.LVL45:
 673              	.LBE110:
 674              	.LBE109:
 675              		.loc 1 120 39
 676 0314 03B70400 		ld	a4,0(s1)
 677              		.loc 1 120 13
 678 0318 6366F704 		bltu	a4,a5,.L25
 679              	.LBB111:
 121:src/Riscv.cpp ****             {
 122:src/Riscv.cpp ****                 uint64 sepc = Riscv::r_sepc();
 680              		.loc 1 122 17 is_stmt 1
 681              	.LBB112:
 682              	.LBB113:
 100:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 683              		.loc 2 100 5
 101:src/../h/Riscv.hpp ****     return sepc;
GAS LISTING /tmp/ccBOEXqj.s 			page 19


 684              		.loc 2 101 5
 101:src/../h/Riscv.hpp ****     return sepc;
 685              		.loc 2 101 51 is_stmt 0
 686              	#APP
 687              	# 101 "src/../h/Riscv.hpp" 1
 688              		csrr a5, sepc
 689              	# 0 "" 2
 690              	#NO_APP
 691 0320 233CF4F8 		sd	a5,-104(s0)
 102:src/../h/Riscv.hpp **** }
 692              		.loc 2 102 5 is_stmt 1
 102:src/../h/Riscv.hpp **** }
 693              		.loc 2 102 12 is_stmt 0
 694 0324 833484F9 		ld	s1,-104(s0)
 695              	.LVL46:
 696              	.LBE113:
 697              	.LBE112:
 123:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 698              		.loc 1 123 17 is_stmt 1
 699              	.LBB114:
 700              	.LBB115:
 156:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 701              		.loc 2 156 5
 157:src/../h/Riscv.hpp ****     return sstatus;
 702              		.loc 2 157 5
 157:src/../h/Riscv.hpp ****     return sstatus;
 703              		.loc 2 157 57 is_stmt 0
 704              	#APP
 705              	# 157 "src/../h/Riscv.hpp" 1
 706              		csrr a5, sstatus
 707              	# 0 "" 2
 708              	#NO_APP
 709 032c 2338F4F8 		sd	a5,-112(s0)
 710              		.loc 2 158 5 is_stmt 1
 711              		.loc 2 158 12 is_stmt 0
 712 0330 033904F9 		ld	s2,-112(s0)
 713              	.LVL47:
 714              	.LBE115:
 715              	.LBE114:
 124:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 716              		.loc 1 124 17 is_stmt 1
 717              		.loc 1 124 39 is_stmt 0
 718 0334 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 718      83B70700 
 719 033c 23B00700 		sd	zero,0(a5)
 125:src/Riscv.cpp ****                 PCB::dispatch();
 720              		.loc 1 125 17 is_stmt 1
 721              		.loc 1 125 30 is_stmt 0
 722 0340 97000000 		call	_ZN3PCB8dispatchEv@plt
 722      E7800000 
 723              	.LVL48:
 126:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 724              		.loc 1 126 17 is_stmt 1
 725              	.LBB116:
 726              	.LBB117:
 159:src/../h/Riscv.hpp **** }
 160:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/ccBOEXqj.s 			page 20


 161:src/../h/Riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus) {
 162:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sstatus, %0" : :"r"(sstatus));
 727              		.loc 2 162 5
 728              		.loc 2 162 57 is_stmt 0
 729              	#APP
 730              	# 162 "src/../h/Riscv.hpp" 1
 163              	}
 731              		csrw sstatus, s2
 732              	# 0 "" 2
 733              	.LVL49:
 734              	#NO_APP
 735              	.LBE117:
 736              	.LBE116:
 127:src/Riscv.cpp ****                 Riscv::w_sepc(sepc);
 737              		.loc 1 127 17 is_stmt 1
 738              	.LBB118:
 739              	.LBB119:
 106:src/../h/Riscv.hpp **** }
 740              		.loc 2 106 5
 106:src/../h/Riscv.hpp **** }
 741              		.loc 2 106 51 is_stmt 0
 742              	#APP
 743              	# 106 "src/../h/Riscv.hpp" 1
 107:src/../h/Riscv.hpp **** 
 744              		csrw sepc, s1
 745              	# 0 "" 2
 746              		.loc 2 107 1
 747              	#NO_APP
 748 0350 6F004001 		j	.L25
 749              	.LVL50:
 750              	.L49:
 751              	.LBE119:
 752              	.LBE118:
 753              	.LBE111:
 754              	.LBE108:
 755              	.LBE105:
 104:src/Riscv.cpp ****     {
 756              		.loc 1 104 5
 757 0354 93078000 		li	a5,8
 758 0358 637AF702 		bgeu	a4,a5,.L50
 759              	.L28:
 760              	.LBE104:
 128:src/Riscv.cpp ****             }
 129:src/Riscv.cpp **** 
 130:src/Riscv.cpp ****             return;
 131:src/Riscv.cpp **** 
 132:src/Riscv.cpp ****         case hwInterrupt: // todo
 133:src/Riscv.cpp **** 
 134:src/Riscv.cpp ****             //Riscv::printString("Hardware interrupt...\n");
 135:src/Riscv.cpp **** 
 136:src/Riscv.cpp ****             break;
 137:src/Riscv.cpp **** 
 138:src/Riscv.cpp ****         case operationInterrupt: // todo
 139:src/Riscv.cpp ****             break;
 140:src/Riscv.cpp **** 
 141:src/Riscv.cpp ****         case addrReadInterrupt: // todo
 142:src/Riscv.cpp ****             break;
GAS LISTING /tmp/ccBOEXqj.s 			page 21


 143:src/Riscv.cpp **** 
 144:src/Riscv.cpp ****         case addrWriteInterrupt: // todo
 145:src/Riscv.cpp ****             break;
 146:src/Riscv.cpp **** 
 147:src/Riscv.cpp ****         case ecallSystemInterupt:
 148:src/Riscv.cpp ****         case ecallUserInterrupt:
 149:src/Riscv.cpp **** 
 150:src/Riscv.cpp ****             uint64 operation;
 151:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
 152:src/Riscv.cpp **** 
 153:src/Riscv.cpp ****             uint64 sepc = Riscv::r_sepc();
 154:src/Riscv.cpp ****             sepc+=4;
 155:src/Riscv.cpp **** 
 156:src/Riscv.cpp ****             if(operation == MemoryAllocator::MEM_ALLOC)
 157:src/Riscv.cpp ****             {
 158:src/Riscv.cpp ****                 size_t size;
 159:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(size));
 160:src/Riscv.cpp ****                 size*=MEM_BLOCK_SIZE;
 161:src/Riscv.cpp ****                 void* allocatedAddr = kmalloc(size);
 162:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : : "r"((uint64)allocatedAddr));
 163:src/Riscv.cpp ****             }
 164:src/Riscv.cpp ****             else if(operation == MemoryAllocator::MEM_FREE)
 165:src/Riscv.cpp ****             {
 166:src/Riscv.cpp ****                 uint64 addr = 0;
 167:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(addr));
 168:src/Riscv.cpp ****                 uint64 retval = kfree((void*)addr);
 169:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 170:src/Riscv.cpp ****             }
 171:src/Riscv.cpp ****             else if(operation == PCB::THREAD_CREATE)
 172:src/Riscv.cpp ****             {
 173:src/Riscv.cpp ****                 uint64 start_routine;
 174:src/Riscv.cpp ****                 uint64 args;
 175:src/Riscv.cpp ****                 PCB** threadHandle;
 176:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(threadHandle));
 177:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(start_routine));
 178:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a3" : "=r"(args));
 179:src/Riscv.cpp ****                 //todo
 180:src/Riscv.cpp ****                 //uint64 stack_space;
 181:src/Riscv.cpp ****                 //__asm__ volatile("mv %0, a4" : "=r"(stack_space));
 182:src/Riscv.cpp **** 
 183:src/Riscv.cpp ****                 PCB* newPCB = new PCB((void (*)(void*))start_routine, (void*)args, (void*)a4, DEFAU
 184:src/Riscv.cpp **** 
 185:src/Riscv.cpp ****                 (*threadHandle) = newPCB;
 186:src/Riscv.cpp **** 
 187:src/Riscv.cpp ****                 if(newPCB == 0)
 188:src/Riscv.cpp ****                     __asm__ volatile("li a0, 0xffffffffffffffff");
 189:src/Riscv.cpp ****                 else
 190:src/Riscv.cpp ****                     __asm__ volatile("li a0, 0");
 191:src/Riscv.cpp ****             }
 192:src/Riscv.cpp ****             else if(operation == PCB::THREAD_DISPATCH)
 193:src/Riscv.cpp ****             {
 194:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 195:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 196:src/Riscv.cpp ****                 PCB::dispatch();
 197:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 198:src/Riscv.cpp ****             }
 199:src/Riscv.cpp ****             else if(operation == PCB::THREAD_EXIT)
GAS LISTING /tmp/ccBOEXqj.s 			page 22


 200:src/Riscv.cpp ****             {
 201:src/Riscv.cpp ****                 if(PCB::running == 0)
 202:src/Riscv.cpp ****                 {
 203:src/Riscv.cpp ****                     __asm__ volatile("li a0, 0xffffffffffffffff");
 204:src/Riscv.cpp ****                     return;
 205:src/Riscv.cpp ****                 }
 206:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 207:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 208:src/Riscv.cpp ****                 PCB::running->setState(PCB::EXITING);
 209:src/Riscv.cpp ****                 PCB::running->setState(PCB::FINISHED);
 210:src/Riscv.cpp ****                 PCB::dispatch();
 211:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 212:src/Riscv.cpp ****             }
 213:src/Riscv.cpp ****             else if(operation == PCB::TIME_SLEEP)
 214:src/Riscv.cpp ****             {
 215:src/Riscv.cpp ****                 uint64 time;
 216:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(time));
 217:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 218:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 219:src/Riscv.cpp ****                 PCB::running->setTimeToSleep(time);
 220:src/Riscv.cpp ****                 SleepPCBList::insertSleepingPCB();
 221:src/Riscv.cpp ****                 PCB::dispatch();
 222:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 223:src/Riscv.cpp ****                 //todo
 224:src/Riscv.cpp ****                 //kad treba vratiti kod greske
 225:src/Riscv.cpp ****                 __asm__ volatile("li a0, 0x0");
 226:src/Riscv.cpp ****             }
 227:src/Riscv.cpp ****             else if(operation == KSemaphore::SEM_OPEN)
 228:src/Riscv.cpp ****             {
 229:src/Riscv.cpp ****                 uint64 val;
 230:src/Riscv.cpp ****                 KSemaphore** semaphoreHandle;
 231:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(semaphoreHandle));
 232:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(val));
 233:src/Riscv.cpp **** 
 234:src/Riscv.cpp ****                 KSemaphore* newSem = new KSemaphore(val);
 235:src/Riscv.cpp **** 
 236:src/Riscv.cpp ****                 (*semaphoreHandle) = newSem;
 237:src/Riscv.cpp **** 
 238:src/Riscv.cpp ****                 if(newSem == 0)
 239:src/Riscv.cpp ****                         __asm__ volatile("li a0, 0xffffffffffffffff");
 240:src/Riscv.cpp ****                 else
 241:src/Riscv.cpp ****                         __asm__ volatile("li a0, 0");
 242:src/Riscv.cpp **** 
 243:src/Riscv.cpp ****             }
 244:src/Riscv.cpp ****             else if(operation == KSemaphore::SEM_WAIT)
 245:src/Riscv.cpp ****             {
 246:src/Riscv.cpp ****                 //todo
 247:src/Riscv.cpp ****                 //negativna povratna vrednost sta i kako
 248:src/Riscv.cpp ****                 KSemaphore* kSem;
 249:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(kSem));
 250:src/Riscv.cpp ****                 uint64 retval = kSem->wait();
 251:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 252:src/Riscv.cpp ****             }
 253:src/Riscv.cpp ****             else if(operation == KSemaphore::SEM_SIGNAL)
 254:src/Riscv.cpp ****             {
 255:src/Riscv.cpp ****                 //todo
 256:src/Riscv.cpp ****                 //negativna povratna vrednost sta i kako
GAS LISTING /tmp/ccBOEXqj.s 			page 23


 257:src/Riscv.cpp ****                 KSemaphore* kSem;
 258:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(kSem));
 259:src/Riscv.cpp ****                 uint64 retval = kSem->signal();
 260:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 261:src/Riscv.cpp ****             }
 262:src/Riscv.cpp ****             else if(operation == KSemaphore::SEM_CLOSE)
 263:src/Riscv.cpp ****             {
 264:src/Riscv.cpp ****                 //todo
 265:src/Riscv.cpp ****                 //negativna povratna vrednost sta i kako
 266:src/Riscv.cpp ****                 KSemaphore* kSem;
 267:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(kSem));
 268:src/Riscv.cpp **** 
 269:src/Riscv.cpp ****                 delete kSem;
 270:src/Riscv.cpp **** 
 271:src/Riscv.cpp ****                 __asm__ volatile("li a0, 0");
 272:src/Riscv.cpp ****             }
 273:src/Riscv.cpp **** 
 274:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 275:src/Riscv.cpp **** 
 276:src/Riscv.cpp ****             return;
 277:src/Riscv.cpp ****     }
 278:src/Riscv.cpp **** 
 279:src/Riscv.cpp ****     console_handler();
 761              		.loc 1 279 5 is_stmt 1
 762              		.loc 1 279 20 is_stmt 0
 763 035c 97000000 		call	console_handler@plt
 763      E7800000 
 764              	.LVL51:
 765              	.L25:
 280:src/Riscv.cpp **** }
 766              		.loc 1 280 1
 767 0364 83308107 		ld	ra,120(sp)
 768              		.cfi_remember_state
 769              		.cfi_restore 1
 770 0368 03340107 		ld	s0,112(sp)
 771              		.cfi_restore 8
 772              		.cfi_def_cfa 2, 128
 773 036c 83348106 		ld	s1,104(sp)
 774              		.cfi_restore 9
 775 0370 03390106 		ld	s2,96(sp)
 776              		.cfi_restore 18
 777 0374 83398105 		ld	s3,88(sp)
 778              		.cfi_restore 19
 779 0378 033A0105 		ld	s4,80(sp)
 780              		.cfi_restore 20
 781 037c 833A8104 		ld	s5,72(sp)
 782              		.cfi_restore 21
 783 0380 033B0104 		ld	s6,64(sp)
 784              		.cfi_restore 22
 785 0384 13010108 		addi	sp,sp,128
 786              		.cfi_def_cfa_offset 0
 787 0388 67800000 		jr	ra
 788              	.LVL52:
 789              	.L50:
 790              		.cfi_restore_state
 791              	.LBB237:
 792              	.LBB226:
GAS LISTING /tmp/ccBOEXqj.s 			page 24


 147:src/Riscv.cpp ****         case ecallUserInterrupt:
 793              		.loc 1 147 9 is_stmt 1
 148:src/Riscv.cpp **** 
 794              		.loc 1 148 9
 150:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
 795              		.loc 1 150 13
 151:src/Riscv.cpp **** 
 796              		.loc 1 151 13
 151:src/Riscv.cpp **** 
 797              		.loc 1 151 61 is_stmt 0
 798              	#APP
 799              	# 151 "src/Riscv.cpp" 1
 800              		mv a5, a0
 801              	# 0 "" 2
 802              	.LVL53:
 153:src/Riscv.cpp ****             sepc+=4;
 803              		.loc 1 153 13 is_stmt 1
 804              	#NO_APP
 805              	.LBB120:
 806              	.LBB121:
 100:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 807              		.loc 2 100 5
 101:src/../h/Riscv.hpp ****     return sepc;
 808              		.loc 2 101 5
 101:src/../h/Riscv.hpp ****     return sepc;
 809              		.loc 2 101 51 is_stmt 0
 810              	#APP
 811              	# 101 "src/../h/Riscv.hpp" 1
 812              		csrr a4, sepc
 813              	# 0 "" 2
 814              	.LVL54:
 815              	#NO_APP
 816 0394 2330E4FA 		sd	a4,-96(s0)
 102:src/../h/Riscv.hpp **** }
 817              		.loc 2 102 5 is_stmt 1
 102:src/../h/Riscv.hpp **** }
 818              		.loc 2 102 12 is_stmt 0
 819 0398 033704FA 		ld	a4,-96(s0)
 820              	.LVL55:
 821              	.LBE121:
 822              	.LBE120:
 154:src/Riscv.cpp **** 
 823              		.loc 1 154 13 is_stmt 1
 154:src/Riscv.cpp **** 
 824              		.loc 1 154 17 is_stmt 0
 825 039c 93044700 		addi	s1,a4,4
 826              	.LVL56:
 156:src/Riscv.cpp ****             {
 827              		.loc 1 156 13 is_stmt 1
 828              	.LBB122:
 829 03a0 13071000 		li	a4,1
 830 03a4 638AE706 		beq	a5,a4,.L51
 831              	.LBE122:
 832              	.LBE226:
 833              	.LBE237:
 164:src/Riscv.cpp ****             {
 834              		.loc 1 164 18
GAS LISTING /tmp/ccBOEXqj.s 			page 25


 835              	.LBB238:
 836              	.LBB227:
 837              	.LBB213:
 838              	.LBB123:
 839 03a8 13072000 		li	a4,2
 840 03ac 6384E708 		beq	a5,a4,.L52
 841              	.LBE123:
 842              	.LBE213:
 843              	.LBE227:
 844              	.LBE238:
 171:src/Riscv.cpp ****             {
 845              		.loc 1 171 18
 846              	.LBB239:
 847              	.LBB228:
 848              	.LBB214:
 849              	.LBB202:
 850              	.LBB124:
 851 03b0 13071001 		li	a4,17
 852 03b4 638AE708 		beq	a5,a4,.L53
 853              	.LBE124:
 854              	.LBE202:
 855              	.LBE214:
 856              	.LBE228:
 857              	.LBE239:
 192:src/Riscv.cpp ****             {
 858              		.loc 1 192 18
 859              	.LBB240:
 860              	.LBB229:
 861              	.LBB215:
 862              	.LBB203:
 863              	.LBB192:
 864              	.LBB125:
 865 03b8 13073001 		li	a4,19
 866 03bc 638CE70C 		beq	a5,a4,.L54
 867              	.LBE125:
 868              	.LBE192:
 869              	.LBE203:
 870              	.LBE215:
 871              	.LBE229:
 872              	.LBE240:
 199:src/Riscv.cpp ****             {
 873              		.loc 1 199 18
 874              	.LBB241:
 875              	.LBB230:
 876              	.LBB216:
 877              	.LBB204:
 878              	.LBB193:
 879              	.LBB181:
 880              	.LBB126:
 881 03c0 13072001 		li	a4,18
 882 03c4 638CE70E 		beq	a5,a4,.L55
 883              	.LBE126:
 884              	.LBE181:
 885              	.LBE193:
 886              	.LBE204:
 887              	.LBE216:
 888              	.LBE230:
GAS LISTING /tmp/ccBOEXqj.s 			page 26


 889              	.LBE241:
 213:src/Riscv.cpp ****             {
 890              		.loc 1 213 18
 891              	.LBB242:
 892              	.LBB231:
 893              	.LBB217:
 894              	.LBB205:
 895              	.LBB194:
 896              	.LBB182:
 897              	.LBB168:
 898              	.LBB127:
 899 03c8 13071003 		li	a4,49
 900 03cc 6382E714 		beq	a5,a4,.L56
 901              	.LBE127:
 902              	.LBE168:
 903              	.LBE182:
 904              	.LBE194:
 905              	.LBE205:
 906              	.LBE217:
 907              	.LBE231:
 908              	.LBE242:
 227:src/Riscv.cpp ****             {
 909              		.loc 1 227 18
 910              	.LBB243:
 911              	.LBB232:
 912              	.LBB218:
 913              	.LBB206:
 914              	.LBB195:
 915              	.LBB183:
 916              	.LBB169:
 917              	.LBB154:
 918              	.LBB128:
 919 03d0 13071002 		li	a4,33
 920 03d4 6382E718 		beq	a5,a4,.L57
 921              	.LBE128:
 922              	.LBE154:
 923              	.LBE169:
 924              	.LBE183:
 925              	.LBE195:
 926              	.LBE206:
 927              	.LBE218:
 928              	.LBE232:
 929              	.LBE243:
 244:src/Riscv.cpp ****             {
 930              		.loc 1 244 18
 931              	.LBB244:
 932              	.LBB233:
 933              	.LBB219:
 934              	.LBB207:
 935              	.LBB196:
 936              	.LBB184:
 937              	.LBB170:
 938              	.LBB155:
 939              	.LBB142:
 940              	.LBB129:
 941 03d8 13073002 		li	a4,35
 942 03dc 638CE71A 		beq	a5,a4,.L58
GAS LISTING /tmp/ccBOEXqj.s 			page 27


 943              	.LBE129:
 944              	.LBE142:
 945              	.LBE155:
 946              	.LBE170:
 947              	.LBE184:
 948              	.LBE196:
 949              	.LBE207:
 950              	.LBE219:
 951              	.LBE233:
 952              	.LBE244:
 253:src/Riscv.cpp ****             {
 953              		.loc 1 253 18
 954              	.LBB245:
 955              	.LBB234:
 956              	.LBB220:
 957              	.LBB208:
 958              	.LBB197:
 959              	.LBB185:
 960              	.LBB171:
 961              	.LBB156:
 962              	.LBB143:
 963              	.LBB137:
 964              	.LBB130:
 965 03e0 13074002 		li	a4,36
 966 03e4 6382E71C 		beq	a5,a4,.L59
 967              	.LBE130:
 968              	.LBE137:
 969              	.LBE143:
 970              	.LBE156:
 971              	.LBE171:
 972              	.LBE185:
 973              	.LBE197:
 974              	.LBE208:
 975              	.LBE220:
 976              	.LBE234:
 977              	.LBE245:
 262:src/Riscv.cpp ****             {
 978              		.loc 1 262 18
 979              	.LBB246:
 980              	.LBB235:
 981              	.LBB221:
 982              	.LBB209:
 983              	.LBB198:
 984              	.LBB186:
 985              	.LBB172:
 986              	.LBB157:
 987              	.LBB144:
 988              	.LBB138:
 989              	.LBB134:
 990              	.LBB131:
 991 03e8 13072002 		li	a4,34
 992 03ec 6390E704 		bne	a5,a4,.L31
 993              	.LBB132:
 266:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(kSem));
 994              		.loc 1 266 17
 267:src/Riscv.cpp **** 
 995              		.loc 1 267 17
GAS LISTING /tmp/ccBOEXqj.s 			page 28


 267:src/Riscv.cpp **** 
 996              		.loc 1 267 59 is_stmt 0
 997              	#APP
 998              	# 267 "src/Riscv.cpp" 1
 999              		mv s2, a1
 1000              	# 0 "" 2
 1001              	.LVL57:
 269:src/Riscv.cpp **** 
 1002              		.loc 1 269 17 is_stmt 1
 269:src/Riscv.cpp **** 
 1003              		.loc 1 269 28 is_stmt 0
 1004              	#NO_APP
 1005 03f4 630E0900 		beqz	s2,.L43
 269:src/Riscv.cpp **** 
 1006              		.loc 1 269 24 discriminator 1
 1007 03f8 13050900 		mv	a0,s2
 1008 03fc 97000000 		call	_ZN10KSemaphoreD1Ev@plt
 1008      E7800000 
 1009              	.LVL58:
 1010 0404 13050900 		mv	a0,s2
 1011 0408 97000000 		call	_ZN10KSemaphoredlEPv@plt
 1011      E7800000 
 1012              	.LVL59:
 1013              	.L43:
 271:src/Riscv.cpp ****             }
 1014              		.loc 1 271 17 is_stmt 1
 271:src/Riscv.cpp ****             }
 1015              		.loc 1 271 45 is_stmt 0
 1016              	#APP
 1017              	# 271 "src/Riscv.cpp" 1
 1018              		li a0, 0
 1019              	# 0 "" 2
 1020              	#NO_APP
 1021              	.LBE132:
 1022 0414 6F008001 		j	.L31
 1023              	.LVL60:
 1024              	.L51:
 1025              	.LBE131:
 1026              	.LBE134:
 1027              	.LBE138:
 1028              	.LBE144:
 1029              	.LBE157:
 1030              	.LBE172:
 1031              	.LBE186:
 1032              	.LBE198:
 1033              	.LBE209:
 1034              	.LBB210:
 158:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(size));
 1035              		.loc 1 158 17 is_stmt 1
 159:src/Riscv.cpp ****                 size*=MEM_BLOCK_SIZE;
 1036              		.loc 1 159 17
 159:src/Riscv.cpp ****                 size*=MEM_BLOCK_SIZE;
 1037              		.loc 1 159 59 is_stmt 0
 1038              	#APP
 1039              	# 159 "src/Riscv.cpp" 1
 1040              		mv a0, a1
 1041              	# 0 "" 2
GAS LISTING /tmp/ccBOEXqj.s 			page 29


 1042              	.LVL61:
 160:src/Riscv.cpp ****                 void* allocatedAddr = kmalloc(size);
 1043              		.loc 1 160 17 is_stmt 1
 161:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : : "r"((uint64)allocatedAddr));
 1044              		.loc 1 161 17
 161:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : : "r"((uint64)allocatedAddr));
 1045              		.loc 1 161 46 is_stmt 0
 1046              	#NO_APP
 1047 041c 13156500 		slli	a0,a0,6
 1048              	.LVL62:
 1049 0420 97000000 		call	_Z7kmallocm@plt
 1049      E7800000 
 1050              	.LVL63:
 162:src/Riscv.cpp ****             }
 1051              		.loc 1 162 17 is_stmt 1
 162:src/Riscv.cpp ****             }
 1052              		.loc 1 162 76 is_stmt 0
 1053              	#APP
 1054              	# 162 "src/Riscv.cpp" 1
 1055              		mv a0,a0
 1056              	# 0 "" 2
 1057              	.LVL64:
 1058              	#NO_APP
 1059              	.L31:
 1060              	.LBE210:
 1061              	.LBE221:
 274:src/Riscv.cpp **** 
 1062              		.loc 1 274 13 is_stmt 1
 1063              	.LBB222:
 1064              	.LBB223:
 106:src/../h/Riscv.hpp **** }
 1065              		.loc 2 106 5
 106:src/../h/Riscv.hpp **** }
 1066              		.loc 2 106 51 is_stmt 0
 1067              	#APP
 1068              	# 106 "src/../h/Riscv.hpp" 1
 107:src/../h/Riscv.hpp **** 
 1069              		csrw sepc, s1
 1070              	# 0 "" 2
 1071              		.loc 2 107 1
 1072              	#NO_APP
 1073 0430 6FF05FF3 		j	.L25
 1074              	.LVL65:
 1075              	.L52:
 1076              	.LBE223:
 1077              	.LBE222:
 1078              	.LBB224:
 1079              	.LBB211:
 1080              	.LBB199:
 166:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(addr));
 1081              		.loc 1 166 17 is_stmt 1
 167:src/Riscv.cpp ****                 uint64 retval = kfree((void*)addr);
 1082              		.loc 1 167 17
 167:src/Riscv.cpp ****                 uint64 retval = kfree((void*)addr);
 1083              		.loc 1 167 59 is_stmt 0
 1084              	#APP
 1085              	# 167 "src/Riscv.cpp" 1
GAS LISTING /tmp/ccBOEXqj.s 			page 30


 1086              		mv a0, a1
 1087              	# 0 "" 2
 1088              	.LVL66:
 168:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 1089              		.loc 1 168 17 is_stmt 1
 168:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 1090              		.loc 1 168 38 is_stmt 0
 1091              	#NO_APP
 1092 0438 97000000 		call	_Z5kfreePv@plt
 1092      E7800000 
 1093              	.LVL67:
 169:src/Riscv.cpp ****             }
 1094              		.loc 1 169 17 is_stmt 1
 169:src/Riscv.cpp ****             }
 1095              		.loc 1 169 60 is_stmt 0
 1096              	#APP
 1097              	# 169 "src/Riscv.cpp" 1
 1098              		mv a0,a0
 1099              	# 0 "" 2
 1100              	#NO_APP
 1101              	.LBE199:
 1102 0444 6FF09FFE 		j	.L31
 1103              	.LVL68:
 1104              	.L53:
 1105              	.LBB200:
 1106              	.LBB187:
 173:src/Riscv.cpp ****                 uint64 args;
 1107              		.loc 1 173 17 is_stmt 1
 174:src/Riscv.cpp ****                 PCB** threadHandle;
 1108              		.loc 1 174 17
 175:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(threadHandle));
 1109              		.loc 1 175 17
 176:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(start_routine));
 1110              		.loc 1 176 17
 176:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(start_routine));
 1111              		.loc 1 176 67 is_stmt 0
 1112              	#APP
 1113              	# 176 "src/Riscv.cpp" 1
 1114              		mv s4, a1
 1115              	# 0 "" 2
 1116              	.LVL69:
 177:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a3" : "=r"(args));
 1117              		.loc 1 177 17 is_stmt 1
 177:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a3" : "=r"(args));
 1118              		.loc 1 177 68 is_stmt 0
 1119              	# 177 "src/Riscv.cpp" 1
 1120              		mv s5, a2
 1121              	# 0 "" 2
 1122              	.LVL70:
 178:src/Riscv.cpp ****                 //todo
 1123              		.loc 1 178 17 is_stmt 1
 178:src/Riscv.cpp ****                 //todo
 1124              		.loc 1 178 59 is_stmt 0
 1125              	# 178 "src/Riscv.cpp" 1
 1126              		mv s6, a3
 1127              	# 0 "" 2
 1128              	.LVL71:
GAS LISTING /tmp/ccBOEXqj.s 			page 31


 183:src/Riscv.cpp **** 
 1129              		.loc 1 183 17 is_stmt 1
 183:src/Riscv.cpp **** 
 1130              		.loc 1 183 113 is_stmt 0
 1131              	#NO_APP
 1132 0454 13050005 		li	a0,80
 1133 0458 97000000 		call	_ZN3PCBnwEm@plt
 1133      E7800000 
 1134              	.LVL72:
 1135              	.LEHE4:
 1136 0460 93090500 		mv	s3,a0
 1137 0464 13072000 		li	a4,2
 1138 0468 93060900 		mv	a3,s2
 1139 046c 13060B00 		mv	a2,s6
 1140 0470 93850A00 		mv	a1,s5
 1141              	.LEHB5:
 1142 0474 97000000 		call	_ZN3PCBC1EPFvPvES0_S0_m@plt
 1142      E7800000 
 1143              	.LVL73:
 1144              	.LEHE5:
 185:src/Riscv.cpp **** 
 1145              		.loc 1 185 17 is_stmt 1 discriminator 2
 185:src/Riscv.cpp **** 
 1146              		.loc 1 185 33 is_stmt 0 discriminator 2
 1147 047c 23303A01 		sd	s3,0(s4)
 187:src/Riscv.cpp ****                     __asm__ volatile("li a0, 0xffffffffffffffff");
 1148              		.loc 1 187 17 is_stmt 1 discriminator 2
 1149 0480 63860900 		beqz	s3,.L60
 190:src/Riscv.cpp ****             }
 1150              		.loc 1 190 21
 190:src/Riscv.cpp ****             }
 1151              		.loc 1 190 49 is_stmt 0
 1152              	#APP
 1153              	# 190 "src/Riscv.cpp" 1
 1154              		li a0, 0
 1155              	# 0 "" 2
 1156              	#NO_APP
 1157 0488 6FF05FFA 		j	.L31
 1158              	.L60:
 188:src/Riscv.cpp ****                 else
 1159              		.loc 1 188 21 is_stmt 1
 188:src/Riscv.cpp ****                 else
 1160              		.loc 1 188 66 is_stmt 0
 1161              	#APP
 1162              	# 188 "src/Riscv.cpp" 1
 1163              		li a0, 0xffffffffffffffff
 1164              	# 0 "" 2
 1165              	#NO_APP
 1166 0490 6FF0DFF9 		j	.L31
 1167              	.LVL74:
 1168              	.L54:
 1169              	.LBE187:
 1170              	.LBB188:
 1171              	.LBB173:
 194:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 1172              		.loc 1 194 17 is_stmt 1
 1173              	.LBB174:
GAS LISTING /tmp/ccBOEXqj.s 			page 32


 1174              	.LBB175:
 156:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 1175              		.loc 2 156 5
 157:src/../h/Riscv.hpp ****     return sstatus;
 1176              		.loc 2 157 5
 157:src/../h/Riscv.hpp ****     return sstatus;
 1177              		.loc 2 157 57 is_stmt 0
 1178              	#APP
 1179              	# 157 "src/../h/Riscv.hpp" 1
 1180              		csrr a5, sstatus
 1181              	# 0 "" 2
 1182              	.LVL75:
 1183              	#NO_APP
 1184 0498 2334F4FA 		sd	a5,-88(s0)
 158:src/../h/Riscv.hpp **** }
 1185              		.loc 2 158 5 is_stmt 1
 158:src/../h/Riscv.hpp **** }
 1186              		.loc 2 158 12 is_stmt 0
 1187 049c 033984FA 		ld	s2,-88(s0)
 1188              	.LVL76:
 1189              	.LBE175:
 1190              	.LBE174:
 195:src/Riscv.cpp ****                 PCB::dispatch();
 1191              		.loc 1 195 17 is_stmt 1
 195:src/Riscv.cpp ****                 PCB::dispatch();
 1192              		.loc 1 195 39 is_stmt 0
 1193 04a0 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 1193      83B70700 
 1194 04a8 23B00700 		sd	zero,0(a5)
 196:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1195              		.loc 1 196 17 is_stmt 1
 1196              	.LEHB6:
 196:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1197              		.loc 1 196 30 is_stmt 0
 1198 04ac 97000000 		call	_ZN3PCB8dispatchEv@plt
 1198      E7800000 
 1199              	.LVL77:
 197:src/Riscv.cpp ****             }
 1200              		.loc 1 197 17 is_stmt 1
 1201              	.LBB176:
 1202              	.LBB177:
 162:src/../h/Riscv.hpp **** }
 1203              		.loc 2 162 5
 162:src/../h/Riscv.hpp **** }
 1204              		.loc 2 162 57 is_stmt 0
 1205              	#APP
 1206              	# 162 "src/../h/Riscv.hpp" 1
 1207              		csrw sstatus, s2
 1208              	# 0 "" 2
 1209              		.loc 2 163 1
 1210              	#NO_APP
 1211 04b8 6FF05FF7 		j	.L31
 1212              	.LVL78:
 1213              	.L55:
 1214              	.LBE177:
 1215              	.LBE176:
 1216              	.LBE173:
GAS LISTING /tmp/ccBOEXqj.s 			page 33


 1217              	.LBB178:
 1218              	.LBB158:
 201:src/Riscv.cpp ****                 {
 1219              		.loc 1 201 17 is_stmt 1
 201:src/Riscv.cpp ****                 {
 1220              		.loc 1 201 33 is_stmt 0
 1221 04bc 97070000 		la	a5,_ZN3PCB7runningE
 1221      83B70700 
 1222              	.LVL79:
 1223 04c4 83B70700 		ld	a5,0(a5)
 201:src/Riscv.cpp ****                 {
 1224              		.loc 1 201 17
 1225 04c8 63800704 		beqz	a5,.L61
 206:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 1226              		.loc 1 206 17 is_stmt 1
 1227              	.LBB159:
 1228              	.LBB160:
 156:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 1229              		.loc 2 156 5
 157:src/../h/Riscv.hpp ****     return sstatus;
 1230              		.loc 2 157 5
 157:src/../h/Riscv.hpp ****     return sstatus;
 1231              		.loc 2 157 57 is_stmt 0
 1232              	#APP
 1233              	# 157 "src/../h/Riscv.hpp" 1
 1234              		csrr a5, sstatus
 1235              	# 0 "" 2
 1236              	#NO_APP
 1237 04d0 2338F4FA 		sd	a5,-80(s0)
 158:src/../h/Riscv.hpp **** }
 1238              		.loc 2 158 5 is_stmt 1
 158:src/../h/Riscv.hpp **** }
 1239              		.loc 2 158 12 is_stmt 0
 1240 04d4 033904FB 		ld	s2,-80(s0)
 1241              	.LVL80:
 1242              	.LBE160:
 1243              	.LBE159:
 207:src/Riscv.cpp ****                 PCB::running->setState(PCB::EXITING);
 1244              		.loc 1 207 17 is_stmt 1
 207:src/Riscv.cpp ****                 PCB::running->setState(PCB::EXITING);
 1245              		.loc 1 207 39 is_stmt 0
 1246 04d8 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 1246      83B70700 
 1247 04e0 23B00700 		sd	zero,0(a5)
 208:src/Riscv.cpp ****                 PCB::running->setState(PCB::FINISHED);
 1248              		.loc 1 208 17 is_stmt 1
 208:src/Riscv.cpp ****                 PCB::running->setState(PCB::FINISHED);
 1249              		.loc 1 208 39 is_stmt 0
 1250 04e4 97070000 		la	a5,_ZN3PCB7runningE
 1250      83B70700 
 1251 04ec 83B70700 		ld	a5,0(a5)
 1252              	.LVL81:
 1253              	.LBE158:
 1254              	.LBE178:
 1255              	.LBE188:
 1256              	.LBE200:
 1257              	.LBE211:
GAS LISTING /tmp/ccBOEXqj.s 			page 34


 1258              	.LBE224:
 1259              	.LBE235:
 1260              	.LBE246:
 1261              		.loc 3 35 29 is_stmt 1
 1262              	.LBB247:
 1263              	.LBB236:
 1264              	.LBB225:
 1265              	.LBB212:
 1266              	.LBB201:
 1267              	.LBB189:
 1268              	.LBB179:
 1269              	.LBB165:
 209:src/Riscv.cpp ****                 PCB::dispatch();
 1270              		.loc 1 209 17
 1271              	.LBB161:
 1272              	.LBB162:
 1273              		.loc 3 35 29
 1274              		.loc 3 35 35 is_stmt 0
 1275 04f0 13073000 		li	a4,3
 1276 04f4 23A8E702 		sw	a4,48(a5)
 1277              	.LVL82:
 1278              	.LBE162:
 1279              	.LBE161:
 210:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1280              		.loc 1 210 17 is_stmt 1
 210:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1281              		.loc 1 210 30 is_stmt 0
 1282 04f8 97000000 		call	_ZN3PCB8dispatchEv@plt
 1282      E7800000 
 1283              	.LVL83:
 211:src/Riscv.cpp ****             }
 1284              		.loc 1 211 17 is_stmt 1
 1285              	.LBB163:
 1286              	.LBB164:
 162:src/../h/Riscv.hpp **** }
 1287              		.loc 2 162 5
 162:src/../h/Riscv.hpp **** }
 1288              		.loc 2 162 57 is_stmt 0
 1289              	#APP
 1290              	# 162 "src/../h/Riscv.hpp" 1
 1291              		csrw sstatus, s2
 1292              	# 0 "" 2
 1293              		.loc 2 163 1
 1294              	#NO_APP
 1295 0504 6FF09FF2 		j	.L31
 1296              	.LVL84:
 1297              	.L61:
 1298              	.LBE164:
 1299              	.LBE163:
 203:src/Riscv.cpp ****                     return;
 1300              		.loc 1 203 21 is_stmt 1
 203:src/Riscv.cpp ****                     return;
 1301              		.loc 1 203 66 is_stmt 0
 1302              	#APP
 1303              	# 203 "src/Riscv.cpp" 1
 204:src/Riscv.cpp ****                 }
 1304              		li a0, 0xffffffffffffffff
GAS LISTING /tmp/ccBOEXqj.s 			page 35


 1305              	# 0 "" 2
 1306              		.loc 1 204 21 is_stmt 1
 1307              	#NO_APP
 1308 050c 6FF09FE5 		j	.L25
 1309              	.LVL85:
 1310              	.L56:
 1311              	.LBE165:
 1312              	.LBB166:
 1313              	.LBB145:
 215:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(time));
 1314              		.loc 1 215 17
 216:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 1315              		.loc 1 216 17
 216:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 1316              		.loc 1 216 59 is_stmt 0
 1317              	#APP
 1318              	# 216 "src/Riscv.cpp" 1
 1319              		mv a4, a1
 1320              	# 0 "" 2
 1321              	.LVL86:
 217:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 1322              		.loc 1 217 17 is_stmt 1
 1323              	#NO_APP
 1324              	.LBB146:
 1325              	.LBB147:
 156:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 1326              		.loc 2 156 5
 157:src/../h/Riscv.hpp ****     return sstatus;
 1327              		.loc 2 157 5
 157:src/../h/Riscv.hpp ****     return sstatus;
 1328              		.loc 2 157 57 is_stmt 0
 1329              	#APP
 1330              	# 157 "src/../h/Riscv.hpp" 1
 1331              		csrr a5, sstatus
 1332              	# 0 "" 2
 1333              	.LVL87:
 1334              	#NO_APP
 1335 0518 233CF4FA 		sd	a5,-72(s0)
 158:src/../h/Riscv.hpp **** }
 1336              		.loc 2 158 5 is_stmt 1
 158:src/../h/Riscv.hpp **** }
 1337              		.loc 2 158 12 is_stmt 0
 1338 051c 033984FB 		ld	s2,-72(s0)
 1339              	.LVL88:
 1340              	.LBE147:
 1341              	.LBE146:
 218:src/Riscv.cpp ****                 PCB::running->setTimeToSleep(time);
 1342              		.loc 1 218 17 is_stmt 1
 218:src/Riscv.cpp ****                 PCB::running->setTimeToSleep(time);
 1343              		.loc 1 218 39 is_stmt 0
 1344 0520 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 1344      83B70700 
 1345 0528 23B00700 		sd	zero,0(a5)
 219:src/Riscv.cpp ****                 SleepPCBList::insertSleepingPCB();
 1346              		.loc 1 219 17 is_stmt 1
 219:src/Riscv.cpp ****                 SleepPCBList::insertSleepingPCB();
 1347              		.loc 1 219 45 is_stmt 0
GAS LISTING /tmp/ccBOEXqj.s 			page 36


 1348 052c 97070000 		la	a5,_ZN3PCB7runningE
 1348      83B70700 
 1349 0534 83B70700 		ld	a5,0(a5)
 1350              	.LVL89:
 1351              	.LBB148:
 1352              	.LBB149:
  36:src/../h/PCB.hpp ****     void setTimeToSleep(uint64 time) {timeToSleep = time;}
 1353              		.loc 3 36 39 is_stmt 1
 1354              		.loc 3 36 51 is_stmt 0
 1355 0538 23B8E700 		sd	a4,16(a5)
 1356              	.LVL90:
 1357              	.LBE149:
 1358              	.LBE148:
 220:src/Riscv.cpp ****                 PCB::dispatch();
 1359              		.loc 1 220 17 is_stmt 1
 220:src/Riscv.cpp ****                 PCB::dispatch();
 1360              		.loc 1 220 48 is_stmt 0
 1361 053c 97000000 		call	_ZN12SleepPCBList17insertSleepingPCBEv@plt
 1361      E7800000 
 1362              	.LVL91:
 221:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1363              		.loc 1 221 17 is_stmt 1
 221:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1364              		.loc 1 221 30 is_stmt 0
 1365 0544 97000000 		call	_ZN3PCB8dispatchEv@plt
 1365      E7800000 
 1366              	.LVL92:
 222:src/Riscv.cpp ****                 //todo
 1367              		.loc 1 222 17 is_stmt 1
 1368              	.LBB150:
 1369              	.LBB151:
 162:src/../h/Riscv.hpp **** }
 1370              		.loc 2 162 5
 162:src/../h/Riscv.hpp **** }
 1371              		.loc 2 162 57 is_stmt 0
 1372              	#APP
 1373              	# 162 "src/../h/Riscv.hpp" 1
 1374              		csrw sstatus, s2
 1375              	# 0 "" 2
 1376              	.LVL93:
 1377              	#NO_APP
 1378              	.LBE151:
 1379              	.LBE150:
 225:src/Riscv.cpp ****             }
 1380              		.loc 1 225 17 is_stmt 1
 225:src/Riscv.cpp ****             }
 1381              		.loc 1 225 47 is_stmt 0
 1382              	#APP
 1383              	# 225 "src/Riscv.cpp" 1
 1384              		li a0, 0x0
 1385              	# 0 "" 2
 1386              	#NO_APP
 1387              	.LBE145:
 1388 0554 6FF09FED 		j	.L31
 1389              	.LVL94:
 1390              	.L57:
 1391              	.LBB152:
GAS LISTING /tmp/ccBOEXqj.s 			page 37


 1392              	.LBB139:
 229:src/Riscv.cpp ****                 KSemaphore** semaphoreHandle;
 1393              		.loc 1 229 17 is_stmt 1
 230:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(semaphoreHandle));
 1394              		.loc 1 230 17
 231:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(val));
 1395              		.loc 1 231 17
 231:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(val));
 1396              		.loc 1 231 70 is_stmt 0
 1397              	#APP
 1398              	# 231 "src/Riscv.cpp" 1
 1399              		mv s3, a1
 1400              	# 0 "" 2
 1401              	.LVL95:
 232:src/Riscv.cpp **** 
 1402              		.loc 1 232 17 is_stmt 1
 232:src/Riscv.cpp **** 
 1403              		.loc 1 232 58 is_stmt 0
 1404              	# 232 "src/Riscv.cpp" 1
 1405              		mv s4, a2
 1406              	# 0 "" 2
 1407              	.LVL96:
 234:src/Riscv.cpp **** 
 1408              		.loc 1 234 17 is_stmt 1
 234:src/Riscv.cpp **** 
 1409              		.loc 1 234 56 is_stmt 0
 1410              	#NO_APP
 1411 0560 13058001 		li	a0,24
 1412 0564 97000000 		call	_ZN10KSemaphorenwEm@plt
 1412      E7800000 
 1413              	.LVL97:
 1414              	.LEHE6:
 1415 056c 13090500 		mv	s2,a0
 1416              	.LVL98:
 1417 0570 9B050A00 		sext.w	a1,s4
 1418              	.LEHB7:
 1419 0574 97000000 		call	_ZN10KSemaphoreC1Ei@plt
 1419      E7800000 
 1420              	.LVL99:
 1421              	.LEHE7:
 236:src/Riscv.cpp **** 
 1422              		.loc 1 236 17 is_stmt 1 discriminator 2
 236:src/Riscv.cpp **** 
 1423              		.loc 1 236 36 is_stmt 0 discriminator 2
 1424 057c 23B02901 		sd	s2,0(s3)
 238:src/Riscv.cpp ****                         __asm__ volatile("li a0, 0xffffffffffffffff");
 1425              		.loc 1 238 17 is_stmt 1 discriminator 2
 1426 0580 63060900 		beqz	s2,.L62
 241:src/Riscv.cpp **** 
 1427              		.loc 1 241 25
 241:src/Riscv.cpp **** 
 1428              		.loc 1 241 53 is_stmt 0
 1429              	#APP
 1430              	# 241 "src/Riscv.cpp" 1
 1431              		li a0, 0
 1432              	# 0 "" 2
 1433              	#NO_APP
GAS LISTING /tmp/ccBOEXqj.s 			page 38


 1434 0588 6FF05FEA 		j	.L31
 1435              	.L62:
 239:src/Riscv.cpp ****                 else
 1436              		.loc 1 239 25 is_stmt 1
 239:src/Riscv.cpp ****                 else
 1437              		.loc 1 239 70 is_stmt 0
 1438              	#APP
 1439              	# 239 "src/Riscv.cpp" 1
 1440              		li a0, 0xffffffffffffffff
 1441              	# 0 "" 2
 1442              	#NO_APP
 1443 0590 6FF0DFE9 		j	.L31
 1444              	.LVL100:
 1445              	.L58:
 1446              	.LBE139:
 1447              	.LBB140:
 1448              	.LBB135:
 248:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(kSem));
 1449              		.loc 1 248 17 is_stmt 1
 249:src/Riscv.cpp ****                 uint64 retval = kSem->wait();
 1450              		.loc 1 249 17
 249:src/Riscv.cpp ****                 uint64 retval = kSem->wait();
 1451              		.loc 1 249 59 is_stmt 0
 1452              	#APP
 1453              	# 249 "src/Riscv.cpp" 1
 1454              		mv a0, a1
 1455              	# 0 "" 2
 1456              	.LVL101:
 250:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 1457              		.loc 1 250 17 is_stmt 1
 1458              	.LEHB8:
 250:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 1459              		.loc 1 250 43 is_stmt 0
 1460              	#NO_APP
 1461 0598 97000000 		call	_ZN10KSemaphore4waitEv@plt
 1461      E7800000 
 1462              	.LVL102:
 251:src/Riscv.cpp ****             }
 1463              		.loc 1 251 17 is_stmt 1
 251:src/Riscv.cpp ****             }
 1464              		.loc 1 251 60 is_stmt 0
 1465              	#APP
 1466              	# 251 "src/Riscv.cpp" 1
 1467              		mv a0,a0
 1468              	# 0 "" 2
 1469              	#NO_APP
 1470              	.LBE135:
 1471 05a4 6FF09FE8 		j	.L31
 1472              	.LVL103:
 1473              	.L59:
 1474              	.LBB136:
 1475              	.LBB133:
 257:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(kSem));
 1476              		.loc 1 257 17 is_stmt 1
 258:src/Riscv.cpp ****                 uint64 retval = kSem->signal();
 1477              		.loc 1 258 17
 258:src/Riscv.cpp ****                 uint64 retval = kSem->signal();
GAS LISTING /tmp/ccBOEXqj.s 			page 39


 1478              		.loc 1 258 59 is_stmt 0
 1479              	#APP
 1480              	# 258 "src/Riscv.cpp" 1
 1481              		mv a0, a1
 1482              	# 0 "" 2
 1483              	.LVL104:
 259:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 1484              		.loc 1 259 17 is_stmt 1
 259:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 1485              		.loc 1 259 45 is_stmt 0
 1486              	#NO_APP
 1487 05ac 97000000 		call	_ZN10KSemaphore6signalEv@plt
 1487      E7800000 
 1488              	.LVL105:
 1489              	.LEHE8:
 260:src/Riscv.cpp ****             }
 1490              		.loc 1 260 17 is_stmt 1
 260:src/Riscv.cpp ****             }
 1491              		.loc 1 260 60 is_stmt 0
 1492              	#APP
 1493              	# 260 "src/Riscv.cpp" 1
 1494              		mv a0,a0
 1495              	# 0 "" 2
 1496              	#NO_APP
 1497              	.LBE133:
 1498 05b8 6FF05FE7 		j	.L31
 1499              	.LVL106:
 1500              	.L46:
 1501 05bc 93040500 		mv	s1,a0
 1502              	.LVL107:
 1503              	.LBE136:
 1504              	.LBE140:
 1505              	.LBE152:
 1506              	.LBE166:
 1507              	.LBE179:
 1508              	.LBE189:
 1509              	.LBB190:
 183:src/Riscv.cpp **** 
 1510              		.loc 1 183 113
 1511 05c0 13850900 		mv	a0,s3
 1512 05c4 97000000 		call	_ZN3PCBdlEPv@plt
 1512      E7800000 
 1513              	.LVL108:
 1514 05cc 13850400 		mv	a0,s1
 1515              	.LEHB9:
 1516 05d0 97000000 		call	_Unwind_Resume@plt
 1516      E7800000 
 1517              	.LVL109:
 1518              	.LEHE9:
 1519              	.L47:
 1520 05d8 93040500 		mv	s1,a0
 1521              	.LVL110:
 1522              	.LBE190:
 1523              	.LBB191:
 1524              	.LBB180:
 1525              	.LBB167:
 1526              	.LBB153:
GAS LISTING /tmp/ccBOEXqj.s 			page 40


 1527              	.LBB141:
 234:src/Riscv.cpp **** 
 1528              		.loc 1 234 56
 1529 05dc 13050900 		mv	a0,s2
 1530 05e0 97000000 		call	_ZN10KSemaphoredlEPv@plt
 1530      E7800000 
 1531              	.LVL111:
 1532 05e8 13850400 		mv	a0,s1
 1533              	.LEHB10:
 1534 05ec 97000000 		call	_Unwind_Resume@plt
 1534      E7800000 
 1535              	.LVL112:
 1536              	.LEHE10:
 1537              	.LBE141:
 1538              	.LBE153:
 1539              	.LBE167:
 1540              	.LBE180:
 1541              	.LBE191:
 1542              	.LBE201:
 1543              	.LBE212:
 1544              	.LBE225:
 1545              	.LBE236:
 1546              	.LBE247:
 1547              		.cfi_endproc
 1548              	.LFE31:
 1549              		.section	.gcc_except_table
 1550              	.LLSDA31:
 1551 0038 FF       		.byte	0xff
 1552 0039 FF       		.byte	0xff
 1553 003a 03       		.byte	0x3
 1554 003b 5B       		.byte	0x5b
 1555 003c 00000000 		.4byte	.LEHB4-.LFB31
 1556 0040 00000000 		.4byte	.LEHE4-.LEHB4
 1557 0044 00000000 		.4byte	0
 1558 0048 00       		.byte	0
 1559 0049 00000000 		.4byte	.LEHB5-.LFB31
 1560 004d 00000000 		.4byte	.LEHE5-.LEHB5
 1561 0051 00000000 		.4byte	.L46-.LFB31
 1562 0055 00       		.byte	0
 1563 0056 00000000 		.4byte	.LEHB6-.LFB31
 1564 005a 00000000 		.4byte	.LEHE6-.LEHB6
 1565 005e 00000000 		.4byte	0
 1566 0062 00       		.byte	0
 1567 0063 00000000 		.4byte	.LEHB7-.LFB31
 1568 0067 00000000 		.4byte	.LEHE7-.LEHB7
 1569 006b 00000000 		.4byte	.L47-.LFB31
 1570 006f 00       		.byte	0
 1571 0070 00000000 		.4byte	.LEHB8-.LFB31
 1572 0074 00000000 		.4byte	.LEHE8-.LEHB8
 1573 0078 00000000 		.4byte	0
 1574 007c 00       		.byte	0
 1575 007d 00000000 		.4byte	.LEHB9-.LFB31
 1576 0081 00000000 		.4byte	.LEHE9-.LEHB9
 1577 0085 00000000 		.4byte	0
 1578 0089 00       		.byte	0
 1579 008a 00000000 		.4byte	.LEHB10-.LFB31
 1580 008e 00000000 		.4byte	.LEHE10-.LEHB10
GAS LISTING /tmp/ccBOEXqj.s 			page 41


 1581 0092 00000000 		.4byte	0
 1582 0096 00       		.byte	0
 1583              		.text
 1585              		.section	.rodata
 1586              		.align	3
 1587              		.set	.LANCHOR0,. + 0
 1590              	_ZZN5Riscv12printIntegerEmE6digits:
 1591 0000 30313233 		.string	"0123456789"
 1591      34353637 
 1591      383900
 1592              		.bss
 1593              		.align	3
 1594              		.set	.LANCHOR1,. + 0
 1597              	_ZZN5Riscv20handleSupervisorTrapEvE5total:
 1598 0000 00000000 		.zero	8
 1598      00000000 
 1599              		.text
 1600              	.Letext0:
 1601              		.file 4 "src/../h/../lib/hw.h"
 1602              		.file 5 "src/../h/Queue.hpp"
 1603              		.file 6 "src/../h/Scheduler.hpp"
 1604              		.file 7 "src/../h/KSemaphore.hpp"
 1605              		.file 8 "src/../h/SleepPCBList.hpp"
 1606              		.file 9 "src/../h/MemoryAllocator.hpp"
 1607              		.file 10 "src/../lib/console.h"
 6492              		.align	3
 6495              	DW.ref.__gxx_personality_v0:
 6496 0000 00000000 		.dword	__gxx_personality_v0
 6496      00000000 
 6497              		.ident	"GCC: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0"
 6498              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/ccBOEXqj.s 			page 42


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Riscv.cpp
     /tmp/ccBOEXqj.s:9      .text:0000000000000000 _ZN5Riscv24getCharactersFromConsoleEv
     /tmp/ccBOEXqj.s:13     .text:0000000000000000 .L0 
     /tmp/ccBOEXqj.s:14     .text:0000000000000000 .L0 
     /tmp/ccBOEXqj.s:15     .text:0000000000000004 .L0 
     /tmp/ccBOEXqj.s:17     .text:0000000000000008 .L0 
     /tmp/ccBOEXqj.s:19     .text:000000000000000c .L0 
     /tmp/ccBOEXqj.s:21     .text:000000000000000c .L0 
     /tmp/ccBOEXqj.s:22     .text:0000000000000010 .L0 
     /tmp/ccBOEXqj.s:23     .text:0000000000000010 .L0 
     /tmp/ccBOEXqj.s:25     .text:0000000000000014 .L0 
     /tmp/ccBOEXqj.s:27     .text:0000000000000018 .L0 
     /tmp/ccBOEXqj.s:33     .text:0000000000000018 _ZN5Riscv10initSystemEv
     /tmp/ccBOEXqj.s:36     .text:0000000000000018 .L0 
     /tmp/ccBOEXqj.s:6495   .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/ccBOEXqj.s:39     .text:0000000000000018 .L0 
     /tmp/ccBOEXqj.s:40     .text:000000000000001c .L0 
     /tmp/ccBOEXqj.s:45     .text:000000000000002c .L0 
     /tmp/ccBOEXqj.s:46     .text:000000000000002c .L0 
     /tmp/ccBOEXqj.s:47     .text:000000000000002c .L0 
     /tmp/ccBOEXqj.s:48     .text:000000000000002c .L0 
     /tmp/ccBOEXqj.s:50     .text:0000000000000030 .L0 
     /tmp/ccBOEXqj.s:52     .text:0000000000000030 .L0 
     /tmp/ccBOEXqj.s:53     .text:0000000000000030 .L0 
     /tmp/ccBOEXqj.s:59     .text:0000000000000038 .L0 
  src/../h/Riscv.hpp:116    .text:0000000000000038 .L0 
     /tmp/ccBOEXqj.s:69     .text:000000000000003c .L0 
     /tmp/ccBOEXqj.s:70     .text:000000000000003c .L0 
     /tmp/ccBOEXqj.s:86     .text:0000000000000064 .L0 
     /tmp/ccBOEXqj.s:87     .text:0000000000000064 .L0 
     /tmp/ccBOEXqj.s:91     .text:000000000000006c .L0 
     /tmp/ccBOEXqj.s:98     .text:0000000000000078 .L0 
     /tmp/ccBOEXqj.s:99     .text:0000000000000078 .L0 
     /tmp/ccBOEXqj.s:100    .text:0000000000000078 .L0 
     /tmp/ccBOEXqj.s:106    .text:0000000000000080 .L0 
     /tmp/ccBOEXqj.s:107    .text:0000000000000084 .L0 
     /tmp/ccBOEXqj.s:108    .text:0000000000000084 .L0 
     /tmp/ccBOEXqj.s:110    .text:0000000000000088 .L0 
     /tmp/ccBOEXqj.s:111    .text:0000000000000088 .L0 
     /tmp/ccBOEXqj.s:113    .text:000000000000008c .L0 
     /tmp/ccBOEXqj.s:115    .text:0000000000000090 .L0 
     /tmp/ccBOEXqj.s:117    .text:0000000000000094 .L0 
     /tmp/ccBOEXqj.s:120    .text:0000000000000098 .L0 
     /tmp/ccBOEXqj.s:123    .text:000000000000009c .L0 
     /tmp/ccBOEXqj.s:131    .text:00000000000000b4 .L0 
     /tmp/ccBOEXqj.s:161    .text:00000000000000b4 _ZN5Riscv16enableInterruptsEv
     /tmp/ccBOEXqj.s:164    .text:00000000000000b4 .L0 
     /tmp/ccBOEXqj.s:165    .text:00000000000000b4 .L0 
     /tmp/ccBOEXqj.s:166    .text:00000000000000b8 .L0 
     /tmp/ccBOEXqj.s:168    .text:00000000000000bc .L0 
     /tmp/ccBOEXqj.s:170    .text:00000000000000c0 .L0 
     /tmp/ccBOEXqj.s:175    .text:00000000000000c0 .L0 
     /tmp/ccBOEXqj.s:176    .text:00000000000000c0 .L0 
     /tmp/ccBOEXqj.s:177    .text:00000000000000c0 .L0 
     /tmp/ccBOEXqj.s:187    .text:00000000000000c8 .L0 
     /tmp/ccBOEXqj.s:188    .text:00000000000000cc .L0 
GAS LISTING /tmp/ccBOEXqj.s 			page 43


     /tmp/ccBOEXqj.s:189    .text:00000000000000cc .L0 
     /tmp/ccBOEXqj.s:191    .text:00000000000000d0 .L0 
     /tmp/ccBOEXqj.s:193    .text:00000000000000d4 .L0 
     /tmp/ccBOEXqj.s:199    .text:00000000000000d4 _ZN5Riscv17disableInterruptsEv
     /tmp/ccBOEXqj.s:202    .text:00000000000000d4 .L0 
     /tmp/ccBOEXqj.s:203    .text:00000000000000d4 .L0 
     /tmp/ccBOEXqj.s:204    .text:00000000000000d8 .L0 
     /tmp/ccBOEXqj.s:206    .text:00000000000000dc .L0 
     /tmp/ccBOEXqj.s:208    .text:00000000000000e0 .L0 
     /tmp/ccBOEXqj.s:213    .text:00000000000000e0 .L0 
     /tmp/ccBOEXqj.s:214    .text:00000000000000e0 .L0 
     /tmp/ccBOEXqj.s:215    .text:00000000000000e0 .L0 
     /tmp/ccBOEXqj.s:225    .text:00000000000000e8 .L0 
     /tmp/ccBOEXqj.s:226    .text:00000000000000ec .L0 
     /tmp/ccBOEXqj.s:227    .text:00000000000000ec .L0 
     /tmp/ccBOEXqj.s:229    .text:00000000000000f0 .L0 
     /tmp/ccBOEXqj.s:231    .text:00000000000000f4 .L0 
     /tmp/ccBOEXqj.s:237    .text:00000000000000f4 _ZN5Riscv9endSystemEv
     /tmp/ccBOEXqj.s:240    .text:00000000000000f4 .L0 
     /tmp/ccBOEXqj.s:241    .text:00000000000000f4 .L0 
     /tmp/ccBOEXqj.s:242    .text:00000000000000f8 .L0 
     /tmp/ccBOEXqj.s:245    .text:0000000000000100 .L0 
     /tmp/ccBOEXqj.s:246    .text:0000000000000100 .L0 
     /tmp/ccBOEXqj.s:248    .text:0000000000000104 .L0 
     /tmp/ccBOEXqj.s:250    .text:0000000000000104 .L0 
     /tmp/ccBOEXqj.s:251    .text:0000000000000104 .L0 
     /tmp/ccBOEXqj.s:254    .text:000000000000010c .L0 
     /tmp/ccBOEXqj.s:255    .text:0000000000000110 .L0 
     /tmp/ccBOEXqj.s:257    .text:0000000000000114 .L0 
     /tmp/ccBOEXqj.s:258    .text:0000000000000114 .L0 
     /tmp/ccBOEXqj.s:260    .text:0000000000000118 .L0 
     /tmp/ccBOEXqj.s:262    .text:000000000000011c .L0 
     /tmp/ccBOEXqj.s:268    .text:000000000000011c _ZN5Riscv10popSppSpieEv
     /tmp/ccBOEXqj.s:271    .text:000000000000011c .L0 
     /tmp/ccBOEXqj.s:272    .text:000000000000011c .L0 
     /tmp/ccBOEXqj.s:273    .text:0000000000000120 .L0 
     /tmp/ccBOEXqj.s:275    .text:0000000000000124 .L0 
     /tmp/ccBOEXqj.s:277    .text:0000000000000128 .L0 
     /tmp/ccBOEXqj.s:279    .text:0000000000000128 .L0 
       src/Riscv.cpp:47     .text:0000000000000128 .L0 
     /tmp/ccBOEXqj.s:285    .text:000000000000012c .L0 
       src/Riscv.cpp:48     .text:000000000000012c .L0 
     /tmp/ccBOEXqj.s:291    .text:0000000000000130 .L0 
     /tmp/ccBOEXqj.s:292    .text:0000000000000134 .L0 
     /tmp/ccBOEXqj.s:293    .text:0000000000000134 .L0 
     /tmp/ccBOEXqj.s:295    .text:0000000000000138 .L0 
     /tmp/ccBOEXqj.s:297    .text:000000000000013c .L0 
     /tmp/ccBOEXqj.s:303    .text:000000000000013c _ZN5Riscv11printStringEPKc
     /tmp/ccBOEXqj.s:306    .text:000000000000013c .L0 
     /tmp/ccBOEXqj.s:308    .text:000000000000013c .L0 
     /tmp/ccBOEXqj.s:309    .text:0000000000000140 .L0 
     /tmp/ccBOEXqj.s:314    .text:0000000000000150 .L0 
     /tmp/ccBOEXqj.s:315    .text:0000000000000150 .L0 
     /tmp/ccBOEXqj.s:316    .text:0000000000000150 .L0 
     /tmp/ccBOEXqj.s:317    .text:0000000000000150 .L0 
     /tmp/ccBOEXqj.s:319    .text:0000000000000154 .L0 
     /tmp/ccBOEXqj.s:324    .text:0000000000000158 .L0 
GAS LISTING /tmp/ccBOEXqj.s 			page 44


     /tmp/ccBOEXqj.s:325    .text:0000000000000158 .L0 
     /tmp/ccBOEXqj.s:326    .text:0000000000000158 .L0 
  src/../h/Riscv.hpp:157    .text:0000000000000158 .L0 
     /tmp/ccBOEXqj.s:334    .text:0000000000000160 .L0 
     /tmp/ccBOEXqj.s:335    .text:0000000000000160 .L0 
     /tmp/ccBOEXqj.s:342    .text:0000000000000164 .L0 
     /tmp/ccBOEXqj.s:343    .text:0000000000000164 .L0 
     /tmp/ccBOEXqj.s:344    .text:0000000000000164 .L0 
     /tmp/ccBOEXqj.s:355    .text:000000000000016c .L0 
     /tmp/ccBOEXqj.s:356    .text:000000000000016c .L0 
     /tmp/ccBOEXqj.s:357    .text:000000000000016c .L0 
     /tmp/ccBOEXqj.s:359    .text:0000000000000170 .L0 
     /tmp/ccBOEXqj.s:361    .text:0000000000000174 .L0 
     /tmp/ccBOEXqj.s:362    .text:0000000000000174 .L0 
     /tmp/ccBOEXqj.s:365    .text:000000000000017c .L0 
     /tmp/ccBOEXqj.s:366    .text:000000000000017c .L0 
     /tmp/ccBOEXqj.s:369    .text:0000000000000180 .L0 
     /tmp/ccBOEXqj.s:372    .text:0000000000000184 .L0 
     /tmp/ccBOEXqj.s:373    .text:0000000000000184 .L0 
     /tmp/ccBOEXqj.s:376    .text:0000000000000188 .L0 
     /tmp/ccBOEXqj.s:382    .text:0000000000000190 .L0 
  src/../h/Riscv.hpp:148    .text:0000000000000190 .L0 
     /tmp/ccBOEXqj.s:392    .text:0000000000000194 .L0 
     /tmp/ccBOEXqj.s:393    .text:0000000000000198 .L0 
     /tmp/ccBOEXqj.s:395    .text:000000000000019c .L0 
     /tmp/ccBOEXqj.s:396    .text:000000000000019c .L0 
     /tmp/ccBOEXqj.s:398    .text:00000000000001a0 .L0 
     /tmp/ccBOEXqj.s:401    .text:00000000000001a4 .L0 
     /tmp/ccBOEXqj.s:403    .text:00000000000001a8 .L0 
     /tmp/ccBOEXqj.s:405    .text:00000000000001ac .L0 
     /tmp/ccBOEXqj.s:411    .text:00000000000001ac _ZN5Riscv12printIntegerEm
     /tmp/ccBOEXqj.s:414    .text:00000000000001ac .L0 
     /tmp/ccBOEXqj.s:416    .text:00000000000001ac .L0 
     /tmp/ccBOEXqj.s:417    .text:00000000000001b0 .L0 
     /tmp/ccBOEXqj.s:422    .text:00000000000001c0 .L0 
     /tmp/ccBOEXqj.s:423    .text:00000000000001c0 .L0 
     /tmp/ccBOEXqj.s:424    .text:00000000000001c0 .L0 
     /tmp/ccBOEXqj.s:425    .text:00000000000001c0 .L0 
     /tmp/ccBOEXqj.s:427    .text:00000000000001c4 .L0 
     /tmp/ccBOEXqj.s:431    .text:00000000000001c4 .L0 
     /tmp/ccBOEXqj.s:432    .text:00000000000001c4 .L0 
     /tmp/ccBOEXqj.s:433    .text:00000000000001c4 .L0 
  src/../h/Riscv.hpp:157    .text:00000000000001c4 .L0 
     /tmp/ccBOEXqj.s:441    .text:00000000000001cc .L0 
     /tmp/ccBOEXqj.s:442    .text:00000000000001cc .L0 
     /tmp/ccBOEXqj.s:449    .text:00000000000001d0 .L0 
     /tmp/ccBOEXqj.s:450    .text:00000000000001d0 .L0 
     /tmp/ccBOEXqj.s:451    .text:00000000000001d0 .L0 
     /tmp/ccBOEXqj.s:461    .text:00000000000001d8 .L0 
     /tmp/ccBOEXqj.s:462    .text:00000000000001d8 .L0 
     /tmp/ccBOEXqj.s:463    .text:00000000000001d8 .L0 
     /tmp/ccBOEXqj.s:464    .text:00000000000001d8 .L0 
     /tmp/ccBOEXqj.s:465    .text:00000000000001d8 .L0 
     /tmp/ccBOEXqj.s:466    .text:00000000000001d8 .L0 
     /tmp/ccBOEXqj.s:467    .text:00000000000001d8 .L0 
     /tmp/ccBOEXqj.s:468    .text:00000000000001d8 .L0 
     /tmp/ccBOEXqj.s:471    .text:00000000000001dc .L0 
GAS LISTING /tmp/ccBOEXqj.s 			page 45


     /tmp/ccBOEXqj.s:472    .text:00000000000001dc .L0 
     /tmp/ccBOEXqj.s:476    .text:00000000000001e0 .L0 
     /tmp/ccBOEXqj.s:477    .text:00000000000001e0 .L0 
     /tmp/ccBOEXqj.s:478    .text:00000000000001e0 .L0 
     /tmp/ccBOEXqj.s:482    .text:00000000000001e8 .L0 
     /tmp/ccBOEXqj.s:488    .text:0000000000000200 .L0 
     /tmp/ccBOEXqj.s:494    .text:0000000000000210 .L0 
     /tmp/ccBOEXqj.s:496    .text:0000000000000214 .L0 
     /tmp/ccBOEXqj.s:499    .text:0000000000000218 .L0 
     /tmp/ccBOEXqj.s:504    .text:0000000000000220 .L0 
     /tmp/ccBOEXqj.s:505    .text:0000000000000220 .L0 
     /tmp/ccBOEXqj.s:509    .text:0000000000000228 .L0 
     /tmp/ccBOEXqj.s:510    .text:0000000000000228 .L0 
     /tmp/ccBOEXqj.s:518    .text:0000000000000240 .L0 
     /tmp/ccBOEXqj.s:519    .text:0000000000000240 .L0 
     /tmp/ccBOEXqj.s:523    .text:000000000000024c .L0 
     /tmp/ccBOEXqj.s:524    .text:000000000000024c .L0 
     /tmp/ccBOEXqj.s:527    .text:0000000000000250 .L0 
     /tmp/ccBOEXqj.s:533    .text:0000000000000258 .L0 
  src/../h/Riscv.hpp:148    .text:0000000000000258 .L0 
     /tmp/ccBOEXqj.s:543    .text:000000000000025c .L0 
     /tmp/ccBOEXqj.s:544    .text:0000000000000260 .L0 
     /tmp/ccBOEXqj.s:546    .text:0000000000000264 .L0 
     /tmp/ccBOEXqj.s:547    .text:0000000000000264 .L0 
     /tmp/ccBOEXqj.s:549    .text:0000000000000268 .L0 
     /tmp/ccBOEXqj.s:551    .text:000000000000026c .L0 
     /tmp/ccBOEXqj.s:553    .text:0000000000000270 .L0 
     /tmp/ccBOEXqj.s:555    .text:0000000000000274 .L0 
     /tmp/ccBOEXqj.s:561    .text:0000000000000274 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccBOEXqj.s:564    .text:0000000000000274 .L0 
     /tmp/ccBOEXqj.s:567    .text:0000000000000274 .L0 
     /tmp/ccBOEXqj.s:568    .text:0000000000000278 .L0 
     /tmp/ccBOEXqj.s:577    .text:0000000000000298 .L0 
     /tmp/ccBOEXqj.s:578    .text:0000000000000298 .L0 
     /tmp/ccBOEXqj.s:579    .text:0000000000000298 .L0 
     /tmp/ccBOEXqj.s:580    .text:0000000000000298 .L0 
     /tmp/ccBOEXqj.s:581    .text:0000000000000298 .L0 
     /tmp/ccBOEXqj.s:582    .text:0000000000000298 .L0 
     /tmp/ccBOEXqj.s:583    .text:0000000000000298 .L0 
     /tmp/ccBOEXqj.s:584    .text:0000000000000298 .L0 
     /tmp/ccBOEXqj.s:586    .text:000000000000029c .L0 
     /tmp/ccBOEXqj.s:588    .text:000000000000029c .L0 
     /tmp/ccBOEXqj.s:589    .text:000000000000029c .L0 
       src/Riscv.cpp:100    .text:000000000000029c .L0 
     /tmp/ccBOEXqj.s:599    .text:00000000000002a0 .L0 
     /tmp/ccBOEXqj.s:600    .text:00000000000002a0 .L0 
     /tmp/ccBOEXqj.s:601    .text:00000000000002a0 .L0 
  src/../h/Riscv.hpp:91     .text:00000000000002a0 .L0 
     /tmp/ccBOEXqj.s:609    .text:00000000000002a8 .L0 
     /tmp/ccBOEXqj.s:610    .text:00000000000002a8 .L0 
     /tmp/ccBOEXqj.s:616    .text:00000000000002ac .L0 
     /tmp/ccBOEXqj.s:624    .text:00000000000002c4 .L0 
     /tmp/ccBOEXqj.s:628    .text:00000000000002c4 .L0 
     /tmp/ccBOEXqj.s:629    .text:00000000000002c4 .L0 
     /tmp/ccBOEXqj.s:630    .text:00000000000002c4 .L0 
     /tmp/ccBOEXqj.s:640    .text:00000000000002cc .L0 
     /tmp/ccBOEXqj.s:641    .text:00000000000002cc .L0 
GAS LISTING /tmp/ccBOEXqj.s 			page 46


     /tmp/ccBOEXqj.s:642    .text:00000000000002cc .L0 
     /tmp/ccBOEXqj.s:648    .text:00000000000002e0 .L0 
     /tmp/ccBOEXqj.s:649    .text:00000000000002e0 .L0 
     /tmp/ccBOEXqj.s:652    .text:00000000000002e8 .L0 
     /tmp/ccBOEXqj.s:653    .text:00000000000002e8 .L0 
     /tmp/ccBOEXqj.s:658    .text:00000000000002fc .L0 
     /tmp/ccBOEXqj.s:659    .text:00000000000002fc .L0 
     /tmp/ccBOEXqj.s:663    .text:0000000000000304 .L0 
     /tmp/ccBOEXqj.s:664    .text:0000000000000304 .L0 
     /tmp/ccBOEXqj.s:670    .text:0000000000000310 .L0 
     /tmp/ccBOEXqj.s:671    .text:0000000000000310 .L0 
     /tmp/ccBOEXqj.s:676    .text:0000000000000314 .L0 
     /tmp/ccBOEXqj.s:678    .text:0000000000000318 .L0 
     /tmp/ccBOEXqj.s:683    .text:000000000000031c .L0 
     /tmp/ccBOEXqj.s:684    .text:000000000000031c .L0 
     /tmp/ccBOEXqj.s:685    .text:000000000000031c .L0 
  src/../h/Riscv.hpp:101    .text:000000000000031c .L0 
     /tmp/ccBOEXqj.s:693    .text:0000000000000324 .L0 
     /tmp/ccBOEXqj.s:694    .text:0000000000000324 .L0 
     /tmp/ccBOEXqj.s:701    .text:0000000000000328 .L0 
     /tmp/ccBOEXqj.s:702    .text:0000000000000328 .L0 
     /tmp/ccBOEXqj.s:703    .text:0000000000000328 .L0 
  src/../h/Riscv.hpp:157    .text:0000000000000328 .L0 
     /tmp/ccBOEXqj.s:711    .text:0000000000000330 .L0 
     /tmp/ccBOEXqj.s:712    .text:0000000000000330 .L0 
     /tmp/ccBOEXqj.s:717    .text:0000000000000334 .L0 
     /tmp/ccBOEXqj.s:718    .text:0000000000000334 .L0 
     /tmp/ccBOEXqj.s:721    .text:0000000000000340 .L0 
     /tmp/ccBOEXqj.s:722    .text:0000000000000340 .L0 
     /tmp/ccBOEXqj.s:727    .text:0000000000000348 .L0 
     /tmp/ccBOEXqj.s:728    .text:0000000000000348 .L0 
  src/../h/Riscv.hpp:162    .text:0000000000000348 .L0 
     /tmp/ccBOEXqj.s:740    .text:000000000000034c .L0 
     /tmp/ccBOEXqj.s:741    .text:000000000000034c .L0 
  src/../h/Riscv.hpp:106    .text:000000000000034c .L0 
     /tmp/ccBOEXqj.s:748    .text:0000000000000350 .L0 
     /tmp/ccBOEXqj.s:757    .text:0000000000000354 .L0 
     /tmp/ccBOEXqj.s:762    .text:000000000000035c .L0 
     /tmp/ccBOEXqj.s:763    .text:000000000000035c .L0 
     /tmp/ccBOEXqj.s:767    .text:0000000000000364 .L0 
     /tmp/ccBOEXqj.s:768    .text:0000000000000368 .L0 
     /tmp/ccBOEXqj.s:769    .text:0000000000000368 .L0 
     /tmp/ccBOEXqj.s:771    .text:000000000000036c .L0 
     /tmp/ccBOEXqj.s:772    .text:000000000000036c .L0 
     /tmp/ccBOEXqj.s:774    .text:0000000000000370 .L0 
     /tmp/ccBOEXqj.s:776    .text:0000000000000374 .L0 
     /tmp/ccBOEXqj.s:778    .text:0000000000000378 .L0 
     /tmp/ccBOEXqj.s:780    .text:000000000000037c .L0 
     /tmp/ccBOEXqj.s:782    .text:0000000000000380 .L0 
     /tmp/ccBOEXqj.s:784    .text:0000000000000384 .L0 
     /tmp/ccBOEXqj.s:786    .text:0000000000000388 .L0 
     /tmp/ccBOEXqj.s:790    .text:000000000000038c .L0 
     /tmp/ccBOEXqj.s:794    .text:000000000000038c .L0 
     /tmp/ccBOEXqj.s:795    .text:000000000000038c .L0 
     /tmp/ccBOEXqj.s:796    .text:000000000000038c .L0 
     /tmp/ccBOEXqj.s:797    .text:000000000000038c .L0 
       src/Riscv.cpp:151    .text:000000000000038c .L0 
GAS LISTING /tmp/ccBOEXqj.s 			page 47


     /tmp/ccBOEXqj.s:807    .text:0000000000000390 .L0 
     /tmp/ccBOEXqj.s:808    .text:0000000000000390 .L0 
     /tmp/ccBOEXqj.s:809    .text:0000000000000390 .L0 
  src/../h/Riscv.hpp:101    .text:0000000000000390 .L0 
     /tmp/ccBOEXqj.s:818    .text:0000000000000398 .L0 
     /tmp/ccBOEXqj.s:819    .text:0000000000000398 .L0 
     /tmp/ccBOEXqj.s:824    .text:000000000000039c .L0 
     /tmp/ccBOEXqj.s:825    .text:000000000000039c .L0 
     /tmp/ccBOEXqj.s:829    .text:00000000000003a0 .L0 
     /tmp/ccBOEXqj.s:839    .text:00000000000003a8 .L0 
     /tmp/ccBOEXqj.s:851    .text:00000000000003b0 .L0 
     /tmp/ccBOEXqj.s:865    .text:00000000000003b8 .L0 
     /tmp/ccBOEXqj.s:881    .text:00000000000003c0 .L0 
     /tmp/ccBOEXqj.s:899    .text:00000000000003c8 .L0 
     /tmp/ccBOEXqj.s:919    .text:00000000000003d0 .L0 
     /tmp/ccBOEXqj.s:941    .text:00000000000003d8 .L0 
     /tmp/ccBOEXqj.s:965    .text:00000000000003e0 .L0 
     /tmp/ccBOEXqj.s:991    .text:00000000000003e8 .L0 
     /tmp/ccBOEXqj.s:995    .text:00000000000003f0 .L0 
     /tmp/ccBOEXqj.s:996    .text:00000000000003f0 .L0 
       src/Riscv.cpp:267    .text:00000000000003f0 .L0 
     /tmp/ccBOEXqj.s:1003   .text:00000000000003f4 .L0 
     /tmp/ccBOEXqj.s:1005   .text:00000000000003f4 .L0 
     /tmp/ccBOEXqj.s:1007   .text:00000000000003f8 .L0 
     /tmp/ccBOEXqj.s:1015   .text:0000000000000410 .L0 
       src/Riscv.cpp:271    .text:0000000000000410 .L0 
     /tmp/ccBOEXqj.s:1036   .text:0000000000000418 .L0 
     /tmp/ccBOEXqj.s:1037   .text:0000000000000418 .L0 
       src/Riscv.cpp:159    .text:0000000000000418 .L0 
     /tmp/ccBOEXqj.s:1044   .text:000000000000041c .L0 
     /tmp/ccBOEXqj.s:1045   .text:000000000000041c .L0 
     /tmp/ccBOEXqj.s:1047   .text:000000000000041c .L0 
     /tmp/ccBOEXqj.s:1052   .text:0000000000000428 .L0 
       src/Riscv.cpp:162    .text:0000000000000428 .L0 
     /tmp/ccBOEXqj.s:1065   .text:000000000000042c .L0 
     /tmp/ccBOEXqj.s:1066   .text:000000000000042c .L0 
  src/../h/Riscv.hpp:106    .text:000000000000042c .L0 
     /tmp/ccBOEXqj.s:1073   .text:0000000000000430 .L0 
     /tmp/ccBOEXqj.s:1082   .text:0000000000000434 .L0 
     /tmp/ccBOEXqj.s:1083   .text:0000000000000434 .L0 
       src/Riscv.cpp:167    .text:0000000000000434 .L0 
     /tmp/ccBOEXqj.s:1090   .text:0000000000000438 .L0 
     /tmp/ccBOEXqj.s:1092   .text:0000000000000438 .L0 
     /tmp/ccBOEXqj.s:1095   .text:0000000000000440 .L0 
       src/Riscv.cpp:169    .text:0000000000000440 .L0 
     /tmp/ccBOEXqj.s:1108   .text:0000000000000448 .L0 
     /tmp/ccBOEXqj.s:1109   .text:0000000000000448 .L0 
     /tmp/ccBOEXqj.s:1110   .text:0000000000000448 .L0 
     /tmp/ccBOEXqj.s:1111   .text:0000000000000448 .L0 
       src/Riscv.cpp:176    .text:0000000000000448 .L0 
     /tmp/ccBOEXqj.s:1118   .text:000000000000044c .L0 
       src/Riscv.cpp:177    .text:000000000000044c .L0 
     /tmp/ccBOEXqj.s:1124   .text:0000000000000450 .L0 
       src/Riscv.cpp:178    .text:0000000000000450 .L0 
     /tmp/ccBOEXqj.s:1130   .text:0000000000000454 .L0 
     /tmp/ccBOEXqj.s:1132   .text:0000000000000454 .L0 
     /tmp/ccBOEXqj.s:1146   .text:000000000000047c .L0 
GAS LISTING /tmp/ccBOEXqj.s 			page 48


     /tmp/ccBOEXqj.s:1147   .text:000000000000047c .L0 
     /tmp/ccBOEXqj.s:1149   .text:0000000000000480 .L0 
     /tmp/ccBOEXqj.s:1151   .text:0000000000000484 .L0 
       src/Riscv.cpp:190    .text:0000000000000484 .L0 
     /tmp/ccBOEXqj.s:1160   .text:000000000000048c .L0 
       src/Riscv.cpp:188    .text:000000000000048c .L0 
     /tmp/ccBOEXqj.s:1175   .text:0000000000000494 .L0 
     /tmp/ccBOEXqj.s:1176   .text:0000000000000494 .L0 
     /tmp/ccBOEXqj.s:1177   .text:0000000000000494 .L0 
  src/../h/Riscv.hpp:157    .text:0000000000000494 .L0 
     /tmp/ccBOEXqj.s:1186   .text:000000000000049c .L0 
     /tmp/ccBOEXqj.s:1187   .text:000000000000049c .L0 
     /tmp/ccBOEXqj.s:1192   .text:00000000000004a0 .L0 
     /tmp/ccBOEXqj.s:1193   .text:00000000000004a0 .L0 
     /tmp/ccBOEXqj.s:1197   .text:00000000000004ac .L0 
     /tmp/ccBOEXqj.s:1198   .text:00000000000004ac .L0 
     /tmp/ccBOEXqj.s:1203   .text:00000000000004b4 .L0 
     /tmp/ccBOEXqj.s:1204   .text:00000000000004b4 .L0 
  src/../h/Riscv.hpp:162    .text:00000000000004b4 .L0 
     /tmp/ccBOEXqj.s:1211   .text:00000000000004b8 .L0 
     /tmp/ccBOEXqj.s:1220   .text:00000000000004bc .L0 
     /tmp/ccBOEXqj.s:1221   .text:00000000000004bc .L0 
     /tmp/ccBOEXqj.s:1225   .text:00000000000004c8 .L0 
     /tmp/ccBOEXqj.s:1229   .text:00000000000004cc .L0 
     /tmp/ccBOEXqj.s:1230   .text:00000000000004cc .L0 
     /tmp/ccBOEXqj.s:1231   .text:00000000000004cc .L0 
  src/../h/Riscv.hpp:157    .text:00000000000004cc .L0 
     /tmp/ccBOEXqj.s:1239   .text:00000000000004d4 .L0 
     /tmp/ccBOEXqj.s:1240   .text:00000000000004d4 .L0 
     /tmp/ccBOEXqj.s:1245   .text:00000000000004d8 .L0 
     /tmp/ccBOEXqj.s:1246   .text:00000000000004d8 .L0 
     /tmp/ccBOEXqj.s:1249   .text:00000000000004e4 .L0 
     /tmp/ccBOEXqj.s:1250   .text:00000000000004e4 .L0 
     /tmp/ccBOEXqj.s:1270   .text:00000000000004f0 .L0 
     /tmp/ccBOEXqj.s:1273   .text:00000000000004f0 .L0 
     /tmp/ccBOEXqj.s:1274   .text:00000000000004f0 .L0 
     /tmp/ccBOEXqj.s:1275   .text:00000000000004f0 .L0 
     /tmp/ccBOEXqj.s:1281   .text:00000000000004f8 .L0 
     /tmp/ccBOEXqj.s:1282   .text:00000000000004f8 .L0 
     /tmp/ccBOEXqj.s:1287   .text:0000000000000500 .L0 
     /tmp/ccBOEXqj.s:1288   .text:0000000000000500 .L0 
  src/../h/Riscv.hpp:162    .text:0000000000000500 .L0 
     /tmp/ccBOEXqj.s:1295   .text:0000000000000504 .L0 
     /tmp/ccBOEXqj.s:1301   .text:0000000000000508 .L0 
       src/Riscv.cpp:203    .text:0000000000000508 .L0 
     /tmp/ccBOEXqj.s:1308   .text:000000000000050c .L0 
     /tmp/ccBOEXqj.s:1315   .text:0000000000000510 .L0 
     /tmp/ccBOEXqj.s:1316   .text:0000000000000510 .L0 
       src/Riscv.cpp:216    .text:0000000000000510 .L0 
     /tmp/ccBOEXqj.s:1326   .text:0000000000000514 .L0 
     /tmp/ccBOEXqj.s:1327   .text:0000000000000514 .L0 
     /tmp/ccBOEXqj.s:1328   .text:0000000000000514 .L0 
  src/../h/Riscv.hpp:157    .text:0000000000000514 .L0 
     /tmp/ccBOEXqj.s:1337   .text:000000000000051c .L0 
     /tmp/ccBOEXqj.s:1338   .text:000000000000051c .L0 
     /tmp/ccBOEXqj.s:1343   .text:0000000000000520 .L0 
     /tmp/ccBOEXqj.s:1344   .text:0000000000000520 .L0 
GAS LISTING /tmp/ccBOEXqj.s 			page 49


     /tmp/ccBOEXqj.s:1347   .text:000000000000052c .L0 
     /tmp/ccBOEXqj.s:1348   .text:000000000000052c .L0 
     /tmp/ccBOEXqj.s:1354   .text:0000000000000538 .L0 
     /tmp/ccBOEXqj.s:1355   .text:0000000000000538 .L0 
     /tmp/ccBOEXqj.s:1360   .text:000000000000053c .L0 
     /tmp/ccBOEXqj.s:1361   .text:000000000000053c .L0 
     /tmp/ccBOEXqj.s:1364   .text:0000000000000544 .L0 
     /tmp/ccBOEXqj.s:1365   .text:0000000000000544 .L0 
     /tmp/ccBOEXqj.s:1370   .text:000000000000054c .L0 
     /tmp/ccBOEXqj.s:1371   .text:000000000000054c .L0 
  src/../h/Riscv.hpp:162    .text:000000000000054c .L0 
     /tmp/ccBOEXqj.s:1381   .text:0000000000000550 .L0 
       src/Riscv.cpp:225    .text:0000000000000550 .L0 
     /tmp/ccBOEXqj.s:1394   .text:0000000000000558 .L0 
     /tmp/ccBOEXqj.s:1395   .text:0000000000000558 .L0 
     /tmp/ccBOEXqj.s:1396   .text:0000000000000558 .L0 
       src/Riscv.cpp:231    .text:0000000000000558 .L0 
     /tmp/ccBOEXqj.s:1403   .text:000000000000055c .L0 
       src/Riscv.cpp:232    .text:000000000000055c .L0 
     /tmp/ccBOEXqj.s:1409   .text:0000000000000560 .L0 
     /tmp/ccBOEXqj.s:1411   .text:0000000000000560 .L0 
     /tmp/ccBOEXqj.s:1423   .text:000000000000057c .L0 
     /tmp/ccBOEXqj.s:1424   .text:000000000000057c .L0 
     /tmp/ccBOEXqj.s:1426   .text:0000000000000580 .L0 
     /tmp/ccBOEXqj.s:1428   .text:0000000000000584 .L0 
       src/Riscv.cpp:241    .text:0000000000000584 .L0 
     /tmp/ccBOEXqj.s:1437   .text:000000000000058c .L0 
       src/Riscv.cpp:239    .text:000000000000058c .L0 
     /tmp/ccBOEXqj.s:1450   .text:0000000000000594 .L0 
     /tmp/ccBOEXqj.s:1451   .text:0000000000000594 .L0 
       src/Riscv.cpp:249    .text:0000000000000594 .L0 
     /tmp/ccBOEXqj.s:1459   .text:0000000000000598 .L0 
     /tmp/ccBOEXqj.s:1461   .text:0000000000000598 .L0 
     /tmp/ccBOEXqj.s:1464   .text:00000000000005a0 .L0 
       src/Riscv.cpp:251    .text:00000000000005a0 .L0 
     /tmp/ccBOEXqj.s:1477   .text:00000000000005a8 .L0 
     /tmp/ccBOEXqj.s:1478   .text:00000000000005a8 .L0 
       src/Riscv.cpp:258    .text:00000000000005a8 .L0 
     /tmp/ccBOEXqj.s:1485   .text:00000000000005ac .L0 
     /tmp/ccBOEXqj.s:1487   .text:00000000000005ac .L0 
     /tmp/ccBOEXqj.s:1491   .text:00000000000005b4 .L0 
       src/Riscv.cpp:260    .text:00000000000005b4 .L0 
     /tmp/ccBOEXqj.s:1511   .text:00000000000005c0 .L0 
     /tmp/ccBOEXqj.s:1529   .text:00000000000005dc .L0 
     /tmp/ccBOEXqj.s:1547   .text:00000000000005f4 .L0 
     /tmp/ccBOEXqj.s:1587   .rodata:0000000000000000 .LANCHOR0
     /tmp/ccBOEXqj.s:1590   .rodata:0000000000000000 _ZZN5Riscv12printIntegerEmE6digits
     /tmp/ccBOEXqj.s:1594   .bss:0000000000000000 .LANCHOR1
     /tmp/ccBOEXqj.s:1597   .bss:0000000000000000 _ZZN5Riscv20handleSupervisorTrapEvE5total
     /tmp/ccBOEXqj.s:1608   .text:00000000000005f4 .L0 
     /tmp/ccBOEXqj.s:53     .text:0000000000000030 .L0 
     /tmp/ccBOEXqj.s:91     .text:000000000000006c .L0 
     /tmp/ccBOEXqj.s:484    .text:00000000000001f0 .L0 
     /tmp/ccBOEXqj.s:642    .text:00000000000002cc .L0 
     /tmp/ccBOEXqj.s:653    .text:00000000000002e8 .L0 
     /tmp/ccBOEXqj.s:664    .text:0000000000000304 .L0 
     /tmp/ccBOEXqj.s:718    .text:0000000000000334 .L0 
GAS LISTING /tmp/ccBOEXqj.s 			page 50


     /tmp/ccBOEXqj.s:1193   .text:00000000000004a0 .L0 
     /tmp/ccBOEXqj.s:1221   .text:00000000000004bc .L0 
     /tmp/ccBOEXqj.s:1246   .text:00000000000004d8 .L0 
     /tmp/ccBOEXqj.s:1250   .text:00000000000004e4 .L0 
     /tmp/ccBOEXqj.s:1344   .text:0000000000000520 .L0 
     /tmp/ccBOEXqj.s:1348   .text:000000000000052c .L0 
     /tmp/ccBOEXqj.s:370    .text:0000000000000184 .L17
     /tmp/ccBOEXqj.s:351    .text:000000000000016c .L18
     /tmp/ccBOEXqj.s:474    .text:00000000000001e0 .L21
     /tmp/ccBOEXqj.s:516    .text:0000000000000240 .L22
     /tmp/ccBOEXqj.s:502    .text:0000000000000220 .L23
     /tmp/ccBOEXqj.s:750    .text:0000000000000354 .L49
     /tmp/ccBOEXqj.s:759    .text:000000000000035c .L28
     /tmp/ccBOEXqj.s:765    .text:0000000000000364 .L25
     /tmp/ccBOEXqj.s:789    .text:000000000000038c .L50
     /tmp/ccBOEXqj.s:1024   .text:0000000000000418 .L51
     /tmp/ccBOEXqj.s:1075   .text:0000000000000434 .L52
     /tmp/ccBOEXqj.s:1104   .text:0000000000000448 .L53
     /tmp/ccBOEXqj.s:1168   .text:0000000000000494 .L54
     /tmp/ccBOEXqj.s:1213   .text:00000000000004bc .L55
     /tmp/ccBOEXqj.s:1310   .text:0000000000000510 .L56
     /tmp/ccBOEXqj.s:1390   .text:0000000000000558 .L57
     /tmp/ccBOEXqj.s:1445   .text:0000000000000594 .L58
     /tmp/ccBOEXqj.s:1473   .text:00000000000005a8 .L59
     /tmp/ccBOEXqj.s:1059   .text:000000000000042c .L31
     /tmp/ccBOEXqj.s:1013   .text:0000000000000410 .L43
     /tmp/ccBOEXqj.s:1158   .text:000000000000048c .L60
     /tmp/ccBOEXqj.s:1297   .text:0000000000000508 .L61
     /tmp/ccBOEXqj.s:1435   .text:000000000000058c .L62
     /tmp/ccBOEXqj.s:71     .text:0000000000000040 .LEHB0
     /tmp/ccBOEXqj.s:34     .text:0000000000000018 .LFB24
     /tmp/ccBOEXqj.s:74     .text:0000000000000048 .LEHE0
     /tmp/ccBOEXqj.s:80     .text:000000000000005c .LEHB1
     /tmp/ccBOEXqj.s:83     .text:0000000000000064 .LEHE1
     /tmp/ccBOEXqj.s:119    .text:0000000000000098 .L5
     /tmp/ccBOEXqj.s:85     .text:0000000000000064 .LEHB2
     /tmp/ccBOEXqj.s:89     .text:000000000000006c .LEHE2
     /tmp/ccBOEXqj.s:127    .text:00000000000000ac .LEHB3
     /tmp/ccBOEXqj.s:130    .text:00000000000000b4 .LEHE3
     /tmp/ccBOEXqj.s:647    .text:00000000000002e0 .LEHB4
     /tmp/ccBOEXqj.s:562    .text:0000000000000274 .LFB31
     /tmp/ccBOEXqj.s:1135   .text:0000000000000460 .LEHE4
     /tmp/ccBOEXqj.s:1141   .text:0000000000000474 .LEHB5
     /tmp/ccBOEXqj.s:1144   .text:000000000000047c .LEHE5
     /tmp/ccBOEXqj.s:1500   .text:00000000000005bc .L46
     /tmp/ccBOEXqj.s:1196   .text:00000000000004ac .LEHB6
     /tmp/ccBOEXqj.s:1414   .text:000000000000056c .LEHE6
     /tmp/ccBOEXqj.s:1418   .text:0000000000000574 .LEHB7
     /tmp/ccBOEXqj.s:1421   .text:000000000000057c .LEHE7
     /tmp/ccBOEXqj.s:1519   .text:00000000000005d8 .L47
     /tmp/ccBOEXqj.s:1458   .text:0000000000000598 .LEHB8
     /tmp/ccBOEXqj.s:1489   .text:00000000000005b4 .LEHE8
     /tmp/ccBOEXqj.s:1515   .text:00000000000005d0 .LEHB9
     /tmp/ccBOEXqj.s:1518   .text:00000000000005d8 .LEHE9
     /tmp/ccBOEXqj.s:1533   .text:00000000000005ec .LEHB10
     /tmp/ccBOEXqj.s:1536   .text:00000000000005f4 .LEHE10
     /tmp/ccBOEXqj.s:4194   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
GAS LISTING /tmp/ccBOEXqj.s 			page 51


     /tmp/ccBOEXqj.s:6073   .debug_str:000000000000021c .LASF229
     /tmp/ccBOEXqj.s:6099   .debug_str:0000000000000384 .LASF230
     /tmp/ccBOEXqj.s:6395   .debug_str:0000000000000bae .LASF231
     /tmp/ccBOEXqj.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccBOEXqj.s:1600   .text:00000000000005f4 .Letext0
     /tmp/ccBOEXqj.s:6009   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccBOEXqj.s:6185   .debug_str:0000000000000611 .LASF0
     /tmp/ccBOEXqj.s:6305   .debug_str:000000000000097a .LASF3
     /tmp/ccBOEXqj.s:6217   .debug_str:00000000000006f6 .LASF1
     /tmp/ccBOEXqj.s:6315   .debug_str:000000000000099f .LASF2
     /tmp/ccBOEXqj.s:6331   .debug_str:0000000000000a23 .LASF4
     /tmp/ccBOEXqj.s:6201   .debug_str:0000000000000679 .LASF5
     /tmp/ccBOEXqj.s:6029   .debug_str:0000000000000086 .LASF6
     /tmp/ccBOEXqj.s:6289   .debug_str:0000000000000915 .LASF7
     /tmp/ccBOEXqj.s:6279   .debug_str:00000000000008d3 .LASF8
     /tmp/ccBOEXqj.s:6207   .debug_str:00000000000006bd .LASF9
     /tmp/ccBOEXqj.s:6161   .debug_str:000000000000054a .LASF10
     /tmp/ccBOEXqj.s:6169   .debug_str:000000000000059a .LASF11
     /tmp/ccBOEXqj.s:6087   .debug_str:0000000000000340 .LASF12
     /tmp/ccBOEXqj.s:6149   .debug_str:0000000000000500 .LASF13
     /tmp/ccBOEXqj.s:6101   .debug_str:0000000000000392 .LASF14
     /tmp/ccBOEXqj.s:6085   .debug_str:0000000000000330 .LASF15
     /tmp/ccBOEXqj.s:6365   .debug_str:0000000000000b1a .LASF16
     /tmp/ccBOEXqj.s:6135   .debug_str:0000000000000473 .LASF17
     /tmp/ccBOEXqj.s:6355   .debug_str:0000000000000ad3 .LASF18
     /tmp/ccBOEXqj.s:6427   .debug_str:0000000000000c72 .LASF93
     /tmp/ccBOEXqj.s:6301   .debug_str:0000000000000964 .LASF22
     /tmp/ccBOEXqj.s:6223   .debug_str:0000000000000718 .LASF19
     /tmp/ccBOEXqj.s:6141   .debug_str:00000000000004bd .LASF20
     /tmp/ccBOEXqj.s:6449   .debug_str:0000000000000d16 .LASF21
     /tmp/ccBOEXqj.s:6417   .debug_str:0000000000000c3c .LASF23
     /tmp/ccBOEXqj.s:6143   .debug_str:00000000000004c6 .LASF24
     /tmp/ccBOEXqj.s:6383   .debug_str:0000000000000b66 .LASF25
     /tmp/ccBOEXqj.s:6117   .debug_str:0000000000000404 .LASF26
     /tmp/ccBOEXqj.s:6253   .debug_str:0000000000000812 .LASF27
     /tmp/ccBOEXqj.s:6243   .debug_str:00000000000007ba .LASF29
     /tmp/ccBOEXqj.s:6133   .debug_str:0000000000000469 .LASF28
     /tmp/ccBOEXqj.s:6023   .debug_str:0000000000000060 .LASF30
     /tmp/ccBOEXqj.s:6083   .debug_str:000000000000031f .LASF31
     /tmp/ccBOEXqj.s:6227   .debug_str:0000000000000726 .LASF32
     /tmp/ccBOEXqj.s:6197   .debug_str:000000000000065a .LASF33
     /tmp/ccBOEXqj.s:6107   .debug_str:00000000000003c5 .LASF34
     /tmp/ccBOEXqj.s:6459   .debug_str:0000000000000d51 .LASF35
     /tmp/ccBOEXqj.s:6045   .debug_str:0000000000000127 .LASF37
     /tmp/ccBOEXqj.s:6287   .debug_str:0000000000000908 .LASF36
     /tmp/ccBOEXqj.s:6051   .debug_str:0000000000000155 .LASF38
     /tmp/ccBOEXqj.s:6341   .debug_str:0000000000000a6f .LASF39
     /tmp/ccBOEXqj.s:6139   .debug_str:00000000000004a2 .LASF40
     /tmp/ccBOEXqj.s:6191   .debug_str:0000000000000633 .LASF41
     /tmp/ccBOEXqj.s:6441   .debug_str:0000000000000cce .LASF42
     /tmp/ccBOEXqj.s:6413   .debug_str:0000000000000c2e .LASF45
     /tmp/ccBOEXqj.s:6403   .debug_str:0000000000000be6 .LASF47
     /tmp/ccBOEXqj.s:6311   .debug_str:000000000000098b .LASF43
     /tmp/ccBOEXqj.s:6267   .debug_str:0000000000000870 .LASF44
     /tmp/ccBOEXqj.s:6295   .debug_str:0000000000000936 .LASF46
     /tmp/ccBOEXqj.s:6297   .debug_str:000000000000093d .LASF48
     /tmp/ccBOEXqj.s:6263   .debug_str:0000000000000855 .LASF49
GAS LISTING /tmp/ccBOEXqj.s 			page 52


     /tmp/ccBOEXqj.s:6209   .debug_str:00000000000006d0 .LASF50
     /tmp/ccBOEXqj.s:6443   .debug_str:0000000000000ce8 .LASF51
     /tmp/ccBOEXqj.s:6391   .debug_str:0000000000000b90 .LASF52
     /tmp/ccBOEXqj.s:6261   .debug_str:000000000000084d .LASF53
     /tmp/ccBOEXqj.s:6265   .debug_str:000000000000085c .LASF54
     /tmp/ccBOEXqj.s:6249   .debug_str:00000000000007f8 .LASF55
     /tmp/ccBOEXqj.s:6299   .debug_str:0000000000000950 .LASF56
     /tmp/ccBOEXqj.s:6487   .debug_str:0000000000000e13 .LASF57
     /tmp/ccBOEXqj.s:6195   .debug_str:0000000000000646 .LASF58
     /tmp/ccBOEXqj.s:6361   .debug_str:0000000000000b0c .LASF59
     /tmp/ccBOEXqj.s:6335   .debug_str:0000000000000a4d .LASF60
     /tmp/ccBOEXqj.s:6337   .debug_str:0000000000000a60 .LASF61
     /tmp/ccBOEXqj.s:6093   .debug_str:000000000000035d .LASF62
     /tmp/ccBOEXqj.s:6129   .debug_str:0000000000000451 .LASF63
     /tmp/ccBOEXqj.s:6179   .debug_str:00000000000005e1 .LASF64
     /tmp/ccBOEXqj.s:6193   .debug_str:0000000000000640 .LASF65
     /tmp/ccBOEXqj.s:6121   .debug_str:0000000000000423 .LASF66
     /tmp/ccBOEXqj.s:6031   .debug_str:000000000000008d .LASF67
     /tmp/ccBOEXqj.s:6321   .debug_str:00000000000009c5 .LASF68
     /tmp/ccBOEXqj.s:6313   .debug_str:0000000000000994 .LASF69
     /tmp/ccBOEXqj.s:6475   .debug_str:0000000000000db4 .LASF70
     /tmp/ccBOEXqj.s:6429   .debug_str:0000000000000c78 .LASF71
     /tmp/ccBOEXqj.s:6455   .debug_str:0000000000000d34 .LASF72
     /tmp/ccBOEXqj.s:6423   .debug_str:0000000000000c63 .LASF73
     /tmp/ccBOEXqj.s:6245   .debug_str:00000000000007d2 .LASF74
     /tmp/ccBOEXqj.s:6173   .debug_str:00000000000005bb .LASF75
     /tmp/ccBOEXqj.s:6181   .debug_str:00000000000005f3 .LASF76
     /tmp/ccBOEXqj.s:6409   .debug_str:0000000000000c19 .LASF77
     /tmp/ccBOEXqj.s:6167   .debug_str:000000000000057e .LASF78
     /tmp/ccBOEXqj.s:6285   .debug_str:00000000000008f3 .LASF79
     /tmp/ccBOEXqj.s:6205   .debug_str:000000000000069b .LASF80
     /tmp/ccBOEXqj.s:6445   .debug_str:0000000000000cf0 .LASF81
     /tmp/ccBOEXqj.s:6437   .debug_str:0000000000000c9a .LASF82
     /tmp/ccBOEXqj.s:6307   .debug_str:000000000000097f .LASF83
     /tmp/ccBOEXqj.s:6027   .debug_str:000000000000007e .LASF84
     /tmp/ccBOEXqj.s:6065   .debug_str:00000000000001e3 .LASF85
     /tmp/ccBOEXqj.s:6407   .debug_str:0000000000000c0d .LASF86
     /tmp/ccBOEXqj.s:6067   .debug_str:00000000000001f2 .LASF87
     /tmp/ccBOEXqj.s:6251   .debug_str:0000000000000800 .LASF88
     /tmp/ccBOEXqj.s:6171   .debug_str:00000000000005a8 .LASF89
     /tmp/ccBOEXqj.s:6421   .debug_str:0000000000000c50 .LASF90
     /tmp/ccBOEXqj.s:6081   .debug_str:000000000000030b .LASF91
     /tmp/ccBOEXqj.s:6377   .debug_str:0000000000000b53 .LASF92
     /tmp/ccBOEXqj.s:6397   .debug_str:0000000000000bd1 .LASF94
     /tmp/ccBOEXqj.s:6415   .debug_str:0000000000000c37 .LASF97
     /tmp/ccBOEXqj.s:6211   .debug_str:00000000000006e3 .LASF95
     /tmp/ccBOEXqj.s:6089   .debug_str:000000000000034f .LASF96
     /tmp/ccBOEXqj.s:6375   .debug_str:0000000000000b4d .LASF98
     /tmp/ccBOEXqj.s:6225   .debug_str:0000000000000721 .LASF99
     /tmp/ccBOEXqj.s:6463   .debug_str:0000000000000d68 .LASF118
     /tmp/ccBOEXqj.s:6047   .debug_str:0000000000000142 .LASF101
     /tmp/ccBOEXqj.s:6105   .debug_str:00000000000003b3 .LASF103
     /tmp/ccBOEXqj.s:6189   .debug_str:000000000000062e .LASF100
     /tmp/ccBOEXqj.s:6349   .debug_str:0000000000000aa8 .LASF105
     /tmp/ccBOEXqj.s:6215   .debug_str:00000000000006f1 .LASF102
     /tmp/ccBOEXqj.s:6235   .debug_str:000000000000077e .LASF104
     /tmp/ccBOEXqj.s:6127   .debug_str:0000000000000443 .LASF106
GAS LISTING /tmp/ccBOEXqj.s 			page 53


     /tmp/ccBOEXqj.s:6457   .debug_str:0000000000000d4a .LASF107
     /tmp/ccBOEXqj.s:6061   .debug_str:00000000000001cb .LASF108
     /tmp/ccBOEXqj.s:6379   .debug_str:0000000000000b58 .LASF109
     /tmp/ccBOEXqj.s:6079   .debug_str:0000000000000305 .LASF110
     /tmp/ccBOEXqj.s:6351   .debug_str:0000000000000abd .LASF111
     /tmp/ccBOEXqj.s:6095   .debug_str:0000000000000370 .LASF112
     /tmp/ccBOEXqj.s:6069   .debug_str:0000000000000205 .LASF113
     /tmp/ccBOEXqj.s:6281   .debug_str:00000000000008e6 .LASF114
     /tmp/ccBOEXqj.s:6213   .debug_str:00000000000006e8 .LASF115
     /tmp/ccBOEXqj.s:6373   .debug_str:0000000000000b45 .LASF116
     /tmp/ccBOEXqj.s:6175   .debug_str:00000000000005c6 .LASF117
     /tmp/ccBOEXqj.s:6257   .debug_str:000000000000082c .LASF119
     /tmp/ccBOEXqj.s:6269   .debug_str:0000000000000885 .LASF232
     /tmp/ccBOEXqj.s:6431   .debug_str:0000000000000c82 .LASF120
     /tmp/ccBOEXqj.s:6473   .debug_str:0000000000000da8 .LASF121
     /tmp/ccBOEXqj.s:6467   .debug_str:0000000000000d87 .LASF122
     /tmp/ccBOEXqj.s:6389   .debug_str:0000000000000b80 .LASF123
     /tmp/ccBOEXqj.s:6123   .debug_str:0000000000000435 .LASF124
     /tmp/ccBOEXqj.s:6043   .debug_str:0000000000000114 .LASF125
     /tmp/ccBOEXqj.s:6221   .debug_str:0000000000000712 .LASF126
     /tmp/ccBOEXqj.s:6273   .debug_str:000000000000089d .LASF127
     /tmp/ccBOEXqj.s:6381   .debug_str:0000000000000b5e .LASF128
     /tmp/ccBOEXqj.s:6433   .debug_str:0000000000000c87 .LASF129
     /tmp/ccBOEXqj.s:6343   .debug_str:0000000000000a7d .LASF130
     /tmp/ccBOEXqj.s:6241   .debug_str:00000000000007ad .LASF131
     /tmp/ccBOEXqj.s:6229   .debug_str:0000000000000744 .LASF132
     /tmp/ccBOEXqj.s:6479   .debug_str:0000000000000ddc .LASF133
     /tmp/ccBOEXqj.s:6153   .debug_str:0000000000000517 .LASF134
     /tmp/ccBOEXqj.s:6187   .debug_str:000000000000061e .LASF135
     /tmp/ccBOEXqj.s:6199   .debug_str:000000000000066c .LASF136
     /tmp/ccBOEXqj.s:6347   .debug_str:0000000000000a9f .LASF137
     /tmp/ccBOEXqj.s:6119   .debug_str:0000000000000410 .LASF138
     /tmp/ccBOEXqj.s:6325   .debug_str:00000000000009e9 .LASF139
     /tmp/ccBOEXqj.s:6359   .debug_str:0000000000000af0 .LASF140
     /tmp/ccBOEXqj.s:6255   .debug_str:000000000000081d .LASF141
     /tmp/ccBOEXqj.s:6017   .debug_str:0000000000000029 .LASF142
     /tmp/ccBOEXqj.s:6453   .debug_str:0000000000000d25 .LASF143
     /tmp/ccBOEXqj.s:6277   .debug_str:00000000000008b9 .LASF144
     /tmp/ccBOEXqj.s:6353   .debug_str:0000000000000ac5 .LASF145
     /tmp/ccBOEXqj.s:6293   .debug_str:000000000000092a .LASF146
     /tmp/ccBOEXqj.s:6013   .debug_str:000000000000000d .LASF147
     /tmp/ccBOEXqj.s:6461   .debug_str:0000000000000d5d .LASF148
     /tmp/ccBOEXqj.s:6339   .debug_str:0000000000000a67 .LASF177
     /tmp/ccBOEXqj.s:6393   .debug_str:0000000000000ba4 .LASF149
     /tmp/ccBOEXqj.s:6275   .debug_str:00000000000008ad .LASF150
     /tmp/ccBOEXqj.s:6111   .debug_str:00000000000003ea .LASF151
     /tmp/ccBOEXqj.s:6057   .debug_str:000000000000019c .LASF153
     /tmp/ccBOEXqj.s:6055   .debug_str:0000000000000187 .LASF152
     /tmp/ccBOEXqj.s:6077   .debug_str:00000000000002d9 .LASF154
     /tmp/ccBOEXqj.s:6483   .debug_str:0000000000000df4 .LASF233
     /tmp/ccBOEXqj.s:6075   .debug_str:00000000000002c8 .LASF234
     /tmp/ccBOEXqj.s:6021   .debug_str:000000000000005b .LASF155
     /tmp/ccBOEXqj.s:6371   .debug_str:0000000000000b40 .LASF156
     /tmp/ccBOEXqj.s:6233   .debug_str:0000000000000776 .LASF157
     /tmp/ccBOEXqj.s:6109   .debug_str:00000000000003e4 .LASF158
     /tmp/ccBOEXqj.s:6401   .debug_str:0000000000000bde .LASF159
     /tmp/ccBOEXqj.s:6063   .debug_str:00000000000001d9 .LASF160
GAS LISTING /tmp/ccBOEXqj.s 			page 54


     /tmp/ccBOEXqj.s:6159   .debug_str:0000000000000540 .LASF161
     /tmp/ccBOEXqj.s:6035   .debug_str:00000000000000ac .LASF235
     /tmp/ccBOEXqj.s:6469   .debug_str:0000000000000d8d .LASF236
     /tmp/ccBOEXqj.s:6405   .debug_str:0000000000000bfb .LASF162
     /tmp/ccBOEXqj.s:6271   .debug_str:000000000000088a .LASF163
     /tmp/ccBOEXqj.s:6385   .debug_str:0000000000000b73 .LASF164
     /tmp/ccBOEXqj.s:6019   .debug_str:0000000000000043 .LASF165
     /tmp/ccBOEXqj.s:6345   .debug_str:0000000000000a8e .LASF166
     /tmp/ccBOEXqj.s:6103   .debug_str:00000000000003a2 .LASF167
     /tmp/ccBOEXqj.s:6037   .debug_str:00000000000000c4 .LASF168
     /tmp/ccBOEXqj.s:6303   .debug_str:000000000000096f .LASF169
     /tmp/ccBOEXqj.s:6165   .debug_str:000000000000056a .LASF170
     /tmp/ccBOEXqj.s:6319   .debug_str:00000000000009b9 .LASF171
     /tmp/ccBOEXqj.s:6033   .debug_str:0000000000000098 .LASF172
     /tmp/ccBOEXqj.s:6125   .debug_str:000000000000043e .LASF173
     /tmp/ccBOEXqj.s:6157   .debug_str:0000000000000529 .LASF174
     /tmp/ccBOEXqj.s:6369   .debug_str:0000000000000b39 .LASF175
     /tmp/ccBOEXqj.s:6137   .debug_str:0000000000000489 .LASF176
     /tmp/ccBOEXqj.s:6015   .debug_str:000000000000001d .LASF178
     /tmp/ccBOEXqj.s:6323   .debug_str:00000000000009dd .LASF179
     /tmp/ccBOEXqj.s:6239   .debug_str:0000000000000799 .LASF180
     /tmp/ccBOEXqj.s:6177   .debug_str:00000000000005cc .LASF181
     /tmp/ccBOEXqj.s:6091   .debug_str:0000000000000354 .LASF182
     /tmp/ccBOEXqj.s:6097   .debug_str:000000000000037a .LASF183
     /tmp/ccBOEXqj.s:6259   .debug_str:0000000000000844 .LASF184
     /tmp/ccBOEXqj.s:6329   .debug_str:0000000000000a18 .LASF185
     /tmp/ccBOEXqj.s:6219   .debug_str:0000000000000709 .LASF186
     /tmp/ccBOEXqj.s:6183   .debug_str:000000000000060b .LASF187
     /tmp/ccBOEXqj.s:6485   .debug_str:0000000000000dfb .LASF188
     /tmp/ccBOEXqj.s:6025   .debug_str:0000000000000076 .LASF189
     /tmp/ccBOEXqj.s:6231   .debug_str:000000000000075c .LASF190
     /tmp/ccBOEXqj.s:6477   .debug_str:0000000000000dcc .LASF191
     /tmp/ccBOEXqj.s:6333   .debug_str:0000000000000a2a .LASF192
     /tmp/ccBOEXqj.s:6367   .debug_str:0000000000000b26 .LASF193
     /tmp/ccBOEXqj.s:6327   .debug_str:00000000000009f2 .LASF194
     /tmp/ccBOEXqj.s:6011   .debug_str:0000000000000000 .LASF195
     /tmp/ccBOEXqj.s:6041   .debug_str:00000000000000f0 .LASF196
     /tmp/ccBOEXqj.s:6447   .debug_str:0000000000000d09 .LASF197
     /tmp/ccBOEXqj.s:6247   .debug_str:00000000000007e8 .LASF198
     /tmp/ccBOEXqj.s:6131   .debug_str:0000000000000457 .LASF199
     /tmp/ccBOEXqj.s:6145   .debug_str:00000000000004d2 .LASF200
     /tmp/ccBOEXqj.s:6071   .debug_str:000000000000020e .LASF201
     /tmp/ccBOEXqj.s:6039   .debug_str:00000000000000cd .LASF202
     /tmp/ccBOEXqj.s:1548   .text:00000000000005f4 .LFE31
     /tmp/ccBOEXqj.s:5421   .debug_loc:0000000000000000 .LLST14
     /tmp/ccBOEXqj.s:6357   .debug_str:0000000000000ae9 .LASF203
     /tmp/ccBOEXqj.s:5460   .debug_loc:00000000000000bb .LLST15
     /tmp/ccBOEXqj.s:5963   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccBOEXqj.s:6411   .debug_str:0000000000000c28 .LASF204
     /tmp/ccBOEXqj.s:6237   .debug_str:000000000000078f .LASF205
     /tmp/ccBOEXqj.s:5475   .debug_loc:0000000000000104 .LLST16
     /tmp/ccBOEXqj.s:6387   .debug_str:0000000000000b7b .LASF206
     /tmp/ccBOEXqj.s:5518   .debug_loc:00000000000001d2 .LLST17
     /tmp/ccBOEXqj.s:679    .text:000000000000031c .LBB111
     /tmp/ccBOEXqj.s:753    .text:0000000000000354 .LBE111
     /tmp/ccBOEXqj.s:5533   .debug_loc:000000000000021b .LLST20
     /tmp/ccBOEXqj.s:6435   .debug_str:0000000000000c92 .LASF207
GAS LISTING /tmp/ccBOEXqj.s 			page 55


     /tmp/ccBOEXqj.s:5540   .debug_loc:000000000000023e .LLST21
     /tmp/ccBOEXqj.s:681    .text:000000000000031c .LBB112
     /tmp/ccBOEXqj.s:697    .text:0000000000000328 .LBE112
     /tmp/ccBOEXqj.s:699    .text:0000000000000328 .LBB114
     /tmp/ccBOEXqj.s:715    .text:0000000000000334 .LBE114
     /tmp/ccBOEXqj.s:725    .text:0000000000000348 .LBB116
     /tmp/ccBOEXqj.s:736    .text:000000000000034c .LBE116
     /tmp/ccBOEXqj.s:5547   .debug_loc:0000000000000261 .LLST22
     /tmp/ccBOEXqj.s:738    .text:000000000000034c .LBB118
     /tmp/ccBOEXqj.s:752    .text:0000000000000354 .LBE118
     /tmp/ccBOEXqj.s:5554   .debug_loc:0000000000000284 .LLST23
     /tmp/ccBOEXqj.s:723    .text:0000000000000348 .LVL48
     /tmp/ccBOEXqj.s:1034   .text:0000000000000418 .LBB210
     /tmp/ccBOEXqj.s:1060   .text:000000000000042c .LBE210
     /tmp/ccBOEXqj.s:5561   .debug_loc:00000000000002a7 .LLST49
     /tmp/ccBOEXqj.s:6439   .debug_str:0000000000000cc0 .LASF208
     /tmp/ccBOEXqj.s:5576   .debug_loc:00000000000002e1 .LLST50
     /tmp/ccBOEXqj.s:1050   .text:0000000000000428 .LVL63
     /tmp/ccBOEXqj.s:1080   .text:0000000000000434 .LBB199
     /tmp/ccBOEXqj.s:1101   .text:0000000000000444 .LBE199
     /tmp/ccBOEXqj.s:6309   .debug_str:0000000000000986 .LASF209
     /tmp/ccBOEXqj.s:5583   .debug_loc:0000000000000304 .LLST47
     /tmp/ccBOEXqj.s:6059   .debug_str:00000000000001c4 .LASF210
     /tmp/ccBOEXqj.s:5595   .debug_loc:000000000000033b .LLST48
     /tmp/ccBOEXqj.s:1093   .text:0000000000000440 .LVL67
     /tmp/ccBOEXqj.s:6291   .debug_str:000000000000091c .LASF211
     /tmp/ccBOEXqj.s:5602   .debug_loc:000000000000035e .LLST43
     /tmp/ccBOEXqj.s:5613   .debug_loc:0000000000000394 .LLST44
     /tmp/ccBOEXqj.s:6049   .debug_str:0000000000000148 .LASF212
     /tmp/ccBOEXqj.s:5624   .debug_loc:00000000000003ca .LLST45
     /tmp/ccBOEXqj.s:6147   .debug_str:00000000000004f9 .LASF213
     /tmp/ccBOEXqj.s:5635   .debug_loc:0000000000000400 .LLST46
     /tmp/ccBOEXqj.s:1134   .text:0000000000000460 .LVL72
     /tmp/ccBOEXqj.s:1143   .text:000000000000047c .LVL73
     /tmp/ccBOEXqj.s:1513   .text:00000000000005cc .LVL108
     /tmp/ccBOEXqj.s:1171   .text:0000000000000494 .LBB173
     /tmp/ccBOEXqj.s:1216   .text:00000000000004bc .LBE173
     /tmp/ccBOEXqj.s:5642   .debug_loc:0000000000000423 .LLST41
     /tmp/ccBOEXqj.s:1173   .text:0000000000000494 .LBB174
     /tmp/ccBOEXqj.s:1190   .text:00000000000004a0 .LBE174
     /tmp/ccBOEXqj.s:1201   .text:00000000000004b4 .LBB176
     /tmp/ccBOEXqj.s:1215   .text:00000000000004bc .LBE176
     /tmp/ccBOEXqj.s:5649   .debug_loc:0000000000000446 .LLST42
     /tmp/ccBOEXqj.s:1199   .text:00000000000004b4 .LVL77
     /tmp/ccBOEXqj.s:5656   .debug_loc:0000000000000469 .LLST37
     /tmp/ccBOEXqj.s:1227   .text:00000000000004cc .LBB159
     /tmp/ccBOEXqj.s:1243   .text:00000000000004d8 .LBE159
     /tmp/ccBOEXqj.s:1271   .text:00000000000004f0 .LBB161
     /tmp/ccBOEXqj.s:1279   .text:00000000000004f8 .LBE161
     /tmp/ccBOEXqj.s:5663   .debug_loc:000000000000048c .LLST38
     /tmp/ccBOEXqj.s:5671   .debug_loc:00000000000004b0 .LLST39
     /tmp/ccBOEXqj.s:1285   .text:0000000000000500 .LBB163
     /tmp/ccBOEXqj.s:1299   .text:0000000000000508 .LBE163
     /tmp/ccBOEXqj.s:5678   .debug_loc:00000000000004d3 .LLST40
     /tmp/ccBOEXqj.s:1283   .text:0000000000000500 .LVL83
     /tmp/ccBOEXqj.s:1313   .text:0000000000000510 .LBB145
     /tmp/ccBOEXqj.s:1387   .text:0000000000000554 .LBE145
GAS LISTING /tmp/ccBOEXqj.s 			page 56


     /tmp/ccBOEXqj.s:6283   .debug_str:00000000000008ee .LASF214
     /tmp/ccBOEXqj.s:5685   .debug_loc:00000000000004f6 .LLST32
     /tmp/ccBOEXqj.s:5692   .debug_loc:0000000000000519 .LLST33
     /tmp/ccBOEXqj.s:1324   .text:0000000000000514 .LBB146
     /tmp/ccBOEXqj.s:1341   .text:0000000000000520 .LBE146
     /tmp/ccBOEXqj.s:1351   .text:0000000000000538 .LBB148
     /tmp/ccBOEXqj.s:1358   .text:000000000000053c .LBE148
     /tmp/ccBOEXqj.s:5699   .debug_loc:000000000000053c .LLST34
     /tmp/ccBOEXqj.s:5706   .debug_loc:000000000000055f .LLST35
     /tmp/ccBOEXqj.s:1368   .text:000000000000054c .LBB150
     /tmp/ccBOEXqj.s:1379   .text:0000000000000550 .LBE150
     /tmp/ccBOEXqj.s:5713   .debug_loc:0000000000000582 .LLST36
     /tmp/ccBOEXqj.s:1362   .text:0000000000000544 .LVL91
     /tmp/ccBOEXqj.s:1366   .text:000000000000054c .LVL92
     /tmp/ccBOEXqj.s:5720   .debug_loc:00000000000005a5 .LLST29
     /tmp/ccBOEXqj.s:6203   .debug_str:000000000000068b .LASF215
     /tmp/ccBOEXqj.s:5731   .debug_loc:00000000000005db .LLST30
     /tmp/ccBOEXqj.s:6471   .debug_str:0000000000000da1 .LASF216
     /tmp/ccBOEXqj.s:5742   .debug_loc:0000000000000611 .LLST31
     /tmp/ccBOEXqj.s:1413   .text:000000000000056c .LVL97
     /tmp/ccBOEXqj.s:1420   .text:000000000000057c .LVL99
     /tmp/ccBOEXqj.s:1531   .text:00000000000005e8 .LVL111
     /tmp/ccBOEXqj.s:1448   .text:0000000000000594 .LBB135
     /tmp/ccBOEXqj.s:1470   .text:00000000000005a4 .LBE135
     /tmp/ccBOEXqj.s:6425   .debug_str:0000000000000c6d .LASF217
     /tmp/ccBOEXqj.s:5749   .debug_loc:0000000000000634 .LLST27
     /tmp/ccBOEXqj.s:5756   .debug_loc:0000000000000657 .LLST28
     /tmp/ccBOEXqj.s:1462   .text:00000000000005a0 .LVL102
     /tmp/ccBOEXqj.s:1475   .text:00000000000005a8 .LBB133
     /tmp/ccBOEXqj.s:1497   .text:00000000000005b8 .LBE133
     /tmp/ccBOEXqj.s:5763   .debug_loc:000000000000067a .LLST25
     /tmp/ccBOEXqj.s:5770   .debug_loc:000000000000069d .LLST26
     /tmp/ccBOEXqj.s:1488   .text:00000000000005b4 .LVL105
     /tmp/ccBOEXqj.s:993    .text:00000000000003f0 .LBB132
     /tmp/ccBOEXqj.s:1021   .text:0000000000000414 .LBE132
     /tmp/ccBOEXqj.s:5777   .debug_loc:00000000000006c0 .LLST24
     /tmp/ccBOEXqj.s:1009   .text:0000000000000404 .LVL58
     /tmp/ccBOEXqj.s:1012   .text:0000000000000410 .LVL59
     /tmp/ccBOEXqj.s:626    .text:00000000000002c4 .LBB106
     /tmp/ccBOEXqj.s:638    .text:00000000000002cc .LBE106
     /tmp/ccBOEXqj.s:5784   .debug_loc:00000000000006e3 .LLST18
     /tmp/ccBOEXqj.s:667    .text:0000000000000310 .LBB109
     /tmp/ccBOEXqj.s:674    .text:0000000000000314 .LBE109
     /tmp/ccBOEXqj.s:5792   .debug_loc:0000000000000707 .LLST19
     /tmp/ccBOEXqj.s:805    .text:0000000000000390 .LBB120
     /tmp/ccBOEXqj.s:822    .text:000000000000039c .LBE120
     /tmp/ccBOEXqj.s:1063   .text:000000000000042c .LBB222
     /tmp/ccBOEXqj.s:1077   .text:0000000000000434 .LBE222
     /tmp/ccBOEXqj.s:5799   .debug_loc:000000000000072a .LLST51
     /tmp/ccBOEXqj.s:650    .text:00000000000002e8 .LVL42
     /tmp/ccBOEXqj.s:660    .text:0000000000000304 .LVL43
     /tmp/ccBOEXqj.s:597    .text:00000000000002a0 .LBB102
     /tmp/ccBOEXqj.s:613    .text:00000000000002ac .LBE102
     /tmp/ccBOEXqj.s:764    .text:0000000000000364 .LVL51
     /tmp/ccBOEXqj.s:1517   .text:00000000000005d8 .LVL109
     /tmp/ccBOEXqj.s:1535   .text:00000000000005f4 .LVL112
     /tmp/ccBOEXqj.s:412    .text:00000000000001ac .LFB30
GAS LISTING /tmp/ccBOEXqj.s 			page 57


     /tmp/ccBOEXqj.s:556    .text:0000000000000274 .LFE30
     /tmp/ccBOEXqj.s:5806   .debug_loc:000000000000074d .LLST8
     /tmp/ccBOEXqj.s:5820   .debug_loc:0000000000000786 .LLST9
     /tmp/ccBOEXqj.s:6399   .debug_str:0000000000000bd7 .LASF218
     /tmp/ccBOEXqj.s:5827   .debug_loc:00000000000007a9 .LLST10
     /tmp/ccBOEXqj.s:5849   .debug_loc:0000000000000808 .LLST11
     /tmp/ccBOEXqj.s:429    .text:00000000000001c4 .LBB96
     /tmp/ccBOEXqj.s:445    .text:00000000000001d0 .LBE96
     /tmp/ccBOEXqj.s:447    .text:00000000000001d0 .LBB98
     /tmp/ccBOEXqj.s:459    .text:00000000000001d8 .LBE98
     /tmp/ccBOEXqj.s:5871   .debug_loc:0000000000000849 .LLST12
     /tmp/ccBOEXqj.s:530    .text:0000000000000258 .LBB100
     /tmp/ccBOEXqj.s:541    .text:000000000000025c .LBE100
     /tmp/ccBOEXqj.s:5879   .debug_loc:000000000000086d .LLST13
     /tmp/ccBOEXqj.s:514    .text:000000000000023c .LVL33
     /tmp/ccBOEXqj.s:521    .text:000000000000024c .LVL34
     /tmp/ccBOEXqj.s:304    .text:000000000000013c .LFB29
     /tmp/ccBOEXqj.s:406    .text:00000000000001ac .LFE29
     /tmp/ccBOEXqj.s:6363   .debug_str:0000000000000b13 .LASF219
     /tmp/ccBOEXqj.s:5886   .debug_loc:0000000000000890 .LLST4
     /tmp/ccBOEXqj.s:5897   .debug_loc:00000000000008c6 .LLST5
     /tmp/ccBOEXqj.s:322    .text:0000000000000158 .LBB90
     /tmp/ccBOEXqj.s:338    .text:0000000000000164 .LBE90
     /tmp/ccBOEXqj.s:340    .text:0000000000000164 .LBB92
     /tmp/ccBOEXqj.s:353    .text:000000000000016c .LBE92
     /tmp/ccBOEXqj.s:5904   .debug_loc:00000000000008e9 .LLST6
     /tmp/ccBOEXqj.s:379    .text:0000000000000190 .LBB94
     /tmp/ccBOEXqj.s:390    .text:0000000000000194 .LBE94
     /tmp/ccBOEXqj.s:5912   .debug_loc:000000000000090d .LLST7
     /tmp/ccBOEXqj.s:363    .text:000000000000017c .LVL17
     /tmp/ccBOEXqj.s:269    .text:000000000000011c .LFB28
     /tmp/ccBOEXqj.s:298    .text:000000000000013c .LFE28
     /tmp/ccBOEXqj.s:200    .text:00000000000000d4 .LFB27
     /tmp/ccBOEXqj.s:232    .text:00000000000000f4 .LFE27
     /tmp/ccBOEXqj.s:211    .text:00000000000000e0 .LBB88
     /tmp/ccBOEXqj.s:223    .text:00000000000000e8 .LBE88
     /tmp/ccBOEXqj.s:5919   .debug_loc:0000000000000930 .LLST3
     /tmp/ccBOEXqj.s:162    .text:00000000000000b4 .LFB26
     /tmp/ccBOEXqj.s:194    .text:00000000000000d4 .LFE26
     /tmp/ccBOEXqj.s:173    .text:00000000000000c0 .LBB86
     /tmp/ccBOEXqj.s:185    .text:00000000000000c8 .LBE86
     /tmp/ccBOEXqj.s:5927   .debug_loc:0000000000000954 .LLST2
     /tmp/ccBOEXqj.s:238    .text:00000000000000f4 .LFB25
     /tmp/ccBOEXqj.s:263    .text:000000000000011c .LFE25
     /tmp/ccBOEXqj.s:252    .text:000000000000010c .LVL13
     /tmp/ccBOEXqj.s:132    .text:00000000000000b4 .LFE24
     /tmp/ccBOEXqj.s:55     .text:0000000000000038 .LBB82
     /tmp/ccBOEXqj.s:67     .text:000000000000003c .LBE82
     /tmp/ccBOEXqj.s:95     .text:0000000000000078 .LBB84
     /tmp/ccBOEXqj.s:104    .text:0000000000000080 .LBE84
     /tmp/ccBOEXqj.s:5935   .debug_loc:0000000000000978 .LLST0
     /tmp/ccBOEXqj.s:5943   .debug_loc:000000000000099c .LLST1
     /tmp/ccBOEXqj.s:73     .text:0000000000000048 .LVL2
     /tmp/ccBOEXqj.s:82     .text:0000000000000064 .LVL3
     /tmp/ccBOEXqj.s:88     .text:000000000000006c .LVL4
     /tmp/ccBOEXqj.s:125    .text:00000000000000a8 .LVL7
     /tmp/ccBOEXqj.s:129    .text:00000000000000b4 .LVL8
GAS LISTING /tmp/ccBOEXqj.s 			page 58


     /tmp/ccBOEXqj.s:10     .text:0000000000000000 .LFB23
     /tmp/ccBOEXqj.s:28     .text:0000000000000018 .LFE23
     /tmp/ccBOEXqj.s:6115   .debug_str:00000000000003ff .LASF220
     /tmp/ccBOEXqj.s:6419   .debug_str:0000000000000c4b .LASF221
     /tmp/ccBOEXqj.s:6451   .debug_str:0000000000000d1f .LASF222
     /tmp/ccBOEXqj.s:6317   .debug_str:00000000000009ad .LASF223
     /tmp/ccBOEXqj.s:6151   .debug_str:000000000000050f .LASF225
     /tmp/ccBOEXqj.s:6481   .debug_str:0000000000000de9 .LASF224
     /tmp/ccBOEXqj.s:6155   .debug_str:0000000000000523 .LASF226
     /tmp/ccBOEXqj.s:6163   .debug_str:000000000000055a .LASF227
     /tmp/ccBOEXqj.s:6465   .debug_str:0000000000000d78 .LASF237
     /tmp/ccBOEXqj.s:6053   .debug_str:000000000000016f .LASF238
     /tmp/ccBOEXqj.s:6113   .debug_str:00000000000003f8 .LASF228
     /tmp/ccBOEXqj.s:594    .text:00000000000002a0 .LVL38
     /tmp/ccBOEXqj.s:713    .text:0000000000000334 .LVL47
     /tmp/ccBOEXqj.s:749    .text:0000000000000354 .LVL50
     /tmp/ccBOEXqj.s:788    .text:000000000000038c .LVL52
     /tmp/ccBOEXqj.s:1001   .text:00000000000003f4 .LVL57
     /tmp/ccBOEXqj.s:1023   .text:0000000000000418 .LVL60
     /tmp/ccBOEXqj.s:1057   .text:000000000000042c .LVL64
     /tmp/ccBOEXqj.s:1074   .text:0000000000000434 .LVL65
     /tmp/ccBOEXqj.s:1188   .text:00000000000004a0 .LVL76
     /tmp/ccBOEXqj.s:1212   .text:00000000000004bc .LVL78
     /tmp/ccBOEXqj.s:1241   .text:00000000000004d8 .LVL80
     /tmp/ccBOEXqj.s:1296   .text:0000000000000508 .LVL84
     /tmp/ccBOEXqj.s:1339   .text:0000000000000520 .LVL88
     /tmp/ccBOEXqj.s:1389   .text:0000000000000558 .LVL94
     /tmp/ccBOEXqj.s:1416   .text:0000000000000570 .LVL98
     /tmp/ccBOEXqj.s:1444   .text:0000000000000594 .LVL100
     /tmp/ccBOEXqj.s:611    .text:00000000000002ac .LVL39
     /tmp/ccBOEXqj.s:814    .text:0000000000000394 .LVL54
     /tmp/ccBOEXqj.s:802    .text:0000000000000390 .LVL53
     /tmp/ccBOEXqj.s:1103   .text:0000000000000448 .LVL68
     /tmp/ccBOEXqj.s:1167   .text:0000000000000494 .LVL74
     /tmp/ccBOEXqj.s:1182   .text:0000000000000498 .LVL75
     /tmp/ccBOEXqj.s:1222   .text:00000000000004c4 .LVL79
     /tmp/ccBOEXqj.s:1309   .text:0000000000000510 .LVL85
     /tmp/ccBOEXqj.s:1333   .text:0000000000000518 .LVL87
     /tmp/ccBOEXqj.s:1472   .text:00000000000005a8 .LVL103
     /tmp/ccBOEXqj.s:820    .text:000000000000039c .LVL55
     /tmp/ccBOEXqj.s:826    .text:00000000000003a0 .LVL56
     /tmp/ccBOEXqj.s:1502   .text:00000000000005c0 .LVL107
     /tmp/ccBOEXqj.s:1521   .text:00000000000005dc .LVL110
     /tmp/ccBOEXqj.s:695    .text:0000000000000328 .LVL46
     /tmp/ccBOEXqj.s:733    .text:000000000000034c .LVL49
     /tmp/ccBOEXqj.s:1042   .text:000000000000041c .LVL61
     /tmp/ccBOEXqj.s:1048   .text:0000000000000420 .LVL62
     /tmp/ccBOEXqj.s:1088   .text:0000000000000438 .LVL66
     /tmp/ccBOEXqj.s:1122   .text:0000000000000450 .LVL70
     /tmp/ccBOEXqj.s:1499   .text:00000000000005bc .LVL106
     /tmp/ccBOEXqj.s:1128   .text:0000000000000454 .LVL71
     /tmp/ccBOEXqj.s:1116   .text:000000000000044c .LVL69
     /tmp/ccBOEXqj.s:1252   .text:00000000000004f0 .LVL81
     /tmp/ccBOEXqj.s:1277   .text:00000000000004f8 .LVL82
     /tmp/ccBOEXqj.s:1321   .text:0000000000000514 .LVL86
     /tmp/ccBOEXqj.s:1350   .text:0000000000000538 .LVL89
     /tmp/ccBOEXqj.s:1356   .text:000000000000053c .LVL90
GAS LISTING /tmp/ccBOEXqj.s 			page 59


     /tmp/ccBOEXqj.s:1376   .text:0000000000000550 .LVL93
     /tmp/ccBOEXqj.s:1407   .text:0000000000000560 .LVL96
     /tmp/ccBOEXqj.s:1401   .text:000000000000055c .LVL95
     /tmp/ccBOEXqj.s:1456   .text:0000000000000598 .LVL101
     /tmp/ccBOEXqj.s:1483   .text:00000000000005ac .LVL104
     /tmp/ccBOEXqj.s:625    .text:00000000000002c4 .LVL40
     /tmp/ccBOEXqj.s:635    .text:00000000000002cc .LVL41
     /tmp/ccBOEXqj.s:666    .text:0000000000000310 .LVL44
     /tmp/ccBOEXqj.s:672    .text:0000000000000314 .LVL45
     /tmp/ccBOEXqj.s:415    .text:00000000000001ac .LVL23
     /tmp/ccBOEXqj.s:469    .text:00000000000001dc .LVL26
     /tmp/ccBOEXqj.s:443    .text:00000000000001d0 .LVL24
     /tmp/ccBOEXqj.s:525    .text:0000000000000250 .LVL35
     /tmp/ccBOEXqj.s:473    .text:00000000000001e0 .LVL27
     /tmp/ccBOEXqj.s:480    .text:00000000000001e8 .LVL28
     /tmp/ccBOEXqj.s:491    .text:000000000000020c .LVL29
     /tmp/ccBOEXqj.s:501    .text:0000000000000220 .LVL31
     /tmp/ccBOEXqj.s:506    .text:0000000000000224 .LVL32
     /tmp/ccBOEXqj.s:497    .text:0000000000000218 .LVL30
     /tmp/ccBOEXqj.s:456    .text:00000000000001d8 .LVL25
     /tmp/ccBOEXqj.s:529    .text:0000000000000258 .LVL36
     /tmp/ccBOEXqj.s:538    .text:000000000000025c .LVL37
     /tmp/ccBOEXqj.s:307    .text:000000000000013c .LVL14
     /tmp/ccBOEXqj.s:349    .text:000000000000016c .LVL16
     /tmp/ccBOEXqj.s:399    .text:00000000000001a0 .LVL22
     /tmp/ccBOEXqj.s:336    .text:0000000000000164 .LVL15
     /tmp/ccBOEXqj.s:374    .text:0000000000000188 .LVL19
     /tmp/ccBOEXqj.s:378    .text:0000000000000190 .LVL20
     /tmp/ccBOEXqj.s:387    .text:0000000000000194 .LVL21
     /tmp/ccBOEXqj.s:210    .text:00000000000000e0 .LVL11
     /tmp/ccBOEXqj.s:220    .text:00000000000000e8 .LVL12
     /tmp/ccBOEXqj.s:172    .text:00000000000000c0 .LVL9
     /tmp/ccBOEXqj.s:182    .text:00000000000000c8 .LVL10
     /tmp/ccBOEXqj.s:94     .text:0000000000000078 .LVL5
     /tmp/ccBOEXqj.s:102    .text:0000000000000080 .LVL6
     /tmp/ccBOEXqj.s:1609   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccBOEXqj.s:622    .text:00000000000002c4 .LBB105
     /tmp/ccBOEXqj.s:755    .text:0000000000000354 .LBE105
     /tmp/ccBOEXqj.s:792    .text:000000000000038c .LBB226
     /tmp/ccBOEXqj.s:832    .text:00000000000003a8 .LBE226
     /tmp/ccBOEXqj.s:836    .text:00000000000003a8 .LBB227
     /tmp/ccBOEXqj.s:843    .text:00000000000003b0 .LBE227
     /tmp/ccBOEXqj.s:847    .text:00000000000003b0 .LBB228
     /tmp/ccBOEXqj.s:856    .text:00000000000003b8 .LBE228
     /tmp/ccBOEXqj.s:860    .text:00000000000003b8 .LBB229
     /tmp/ccBOEXqj.s:871    .text:00000000000003c0 .LBE229
     /tmp/ccBOEXqj.s:875    .text:00000000000003c0 .LBB230
     /tmp/ccBOEXqj.s:888    .text:00000000000003c8 .LBE230
     /tmp/ccBOEXqj.s:892    .text:00000000000003c8 .LBB231
     /tmp/ccBOEXqj.s:907    .text:00000000000003d0 .LBE231
     /tmp/ccBOEXqj.s:911    .text:00000000000003d0 .LBB232
     /tmp/ccBOEXqj.s:928    .text:00000000000003d8 .LBE232
     /tmp/ccBOEXqj.s:932    .text:00000000000003d8 .LBB233
     /tmp/ccBOEXqj.s:951    .text:00000000000003e0 .LBE233
     /tmp/ccBOEXqj.s:955    .text:00000000000003e0 .LBB234
     /tmp/ccBOEXqj.s:976    .text:00000000000003e8 .LBE234
     /tmp/ccBOEXqj.s:980    .text:00000000000003e8 .LBB235
GAS LISTING /tmp/ccBOEXqj.s 			page 60


     /tmp/ccBOEXqj.s:1259   .text:00000000000004f0 .LBE235
     /tmp/ccBOEXqj.s:1263   .text:00000000000004f0 .LBB236
     /tmp/ccBOEXqj.s:1545   .text:00000000000005f4 .LBE236
     /tmp/ccBOEXqj.s:1392   .text:0000000000000558 .LBB139
     /tmp/ccBOEXqj.s:1446   .text:0000000000000594 .LBE139
     /tmp/ccBOEXqj.s:1527   .text:00000000000005dc .LBB141
     /tmp/ccBOEXqj.s:1537   .text:00000000000005f4 .LBE141
     /tmp/ccBOEXqj.s:1218   .text:00000000000004bc .LBB158
     /tmp/ccBOEXqj.s:1253   .text:00000000000004f0 .LBE158
     /tmp/ccBOEXqj.s:1269   .text:00000000000004f0 .LBB165
     /tmp/ccBOEXqj.s:1311   .text:0000000000000510 .LBE165
     /tmp/ccBOEXqj.s:1106   .text:0000000000000448 .LBB187
     /tmp/ccBOEXqj.s:1169   .text:0000000000000494 .LBE187
     /tmp/ccBOEXqj.s:1509   .text:00000000000005c0 .LBB190
     /tmp/ccBOEXqj.s:1522   .text:00000000000005dc .LBE190
     /tmp/ccBOEXqj.s:135    .gcc_except_table:0000000000000000 .LLSDA24
     /tmp/ccBOEXqj.s:1550   .gcc_except_table:0000000000000038 .LLSDA31

UNDEFINED SYMBOLS
_ZN5Riscv14supervisorTrapEv
_ZN3PCBnwEm
_ZN3PCBC1EPFvPvES0_S0_m
_ZN9Scheduler3getEv
_ZN3PCB7runningE
_ZN3PCBdlEPv
_Unwind_Resume
__gxx_personality_v0
__putc
_ZN3PCB16timeSliceCounterE
_ZN12SleepPCBList13tryToWakePCBsEv
_ZN3PCB8dispatchEv
console_handler
_ZN10KSemaphoreD1Ev
_ZN10KSemaphoredlEPv
_Z7kmallocm
_Z5kfreePv
_ZN12SleepPCBList17insertSleepingPCBEv
_ZN10KSemaphorenwEm
_ZN10KSemaphoreC1Ei
_ZN10KSemaphore4waitEv
_ZN10KSemaphore6signalEv
