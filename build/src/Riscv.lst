GAS LISTING /tmp/ccUmrSFW.s 			page 1


   1              		.file	"Riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv15userMainWrapperEPv
   9              	_ZN5Riscv15userMainWrapperEPv:
  10              	.LFB50:
  11              		.file 1 "src/Riscv.cpp"
   1:src/Riscv.cpp **** //
   2:src/Riscv.cpp **** // Created by os on 4/27/22.
   3:src/Riscv.cpp **** //
   4:src/Riscv.cpp **** 
   5:src/Riscv.cpp **** #include "../h/Riscv.hpp"
   6:src/Riscv.cpp **** #include "../h/MemoryAllocator.hpp"
   7:src/Riscv.cpp **** #include "../h/PCB.hpp"
   8:src/Riscv.cpp **** #include "../lib/console.h"
   9:src/Riscv.cpp **** #include "../h/syscall_cpp.hpp"
  10:src/Riscv.cpp **** #include "../h/SleepPCBList.hpp"
  11:src/Riscv.cpp **** #include "../h/KConsole.hpp"
  12:src/Riscv.cpp **** #include "../h/Tests.hpp"
  13:src/Riscv.cpp **** #include "../test/userMain.hpp"
  14:src/Riscv.cpp **** 
  15:src/Riscv.cpp **** void Riscv::initSystem()
  16:src/Riscv.cpp **** {
  17:src/Riscv.cpp ****     w_stvec((uint64)&Riscv::supervisorTrap);
  18:src/Riscv.cpp ****     PCB::initialize();
  19:src/Riscv.cpp ****     KConsole::initialize();
  20:src/Riscv.cpp **** }
  21:src/Riscv.cpp **** 
  22:src/Riscv.cpp **** void Riscv::endSystem()
  23:src/Riscv.cpp **** {
  24:src/Riscv.cpp ****     //todo
  25:src/Riscv.cpp ****     Riscv::disableInterrupts();
  26:src/Riscv.cpp **** }
  27:src/Riscv.cpp **** 
  28:src/Riscv.cpp **** 
  29:src/Riscv.cpp **** void Riscv::enableInterrupts() {
  30:src/Riscv.cpp ****     ms_sstatus(Riscv::SSTATUS_SIE);
  31:src/Riscv.cpp **** }
  32:src/Riscv.cpp **** 
  33:src/Riscv.cpp **** void Riscv::disableInterrupts()
  34:src/Riscv.cpp **** {
  35:src/Riscv.cpp ****     mc_sstatus(Riscv::SSTATUS_SIE);
  36:src/Riscv.cpp **** }
  37:src/Riscv.cpp **** 
  38:src/Riscv.cpp **** void Riscv::popSppSpie()
  39:src/Riscv.cpp **** {
  40:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
  41:src/Riscv.cpp ****     __asm__ volatile ("sret");
  42:src/Riscv.cpp **** }
  43:src/Riscv.cpp **** 
  44:src/Riscv.cpp **** void Riscv::printString(const char *string)
  45:src/Riscv.cpp **** {
  46:src/Riscv.cpp ****     uint64 sstatus = r_sstatus();
  47:src/Riscv.cpp ****     mc_sstatus(SSTATUS_SIE);
GAS LISTING /tmp/ccUmrSFW.s 			page 2


  48:src/Riscv.cpp ****     while (*string != '\0')
  49:src/Riscv.cpp ****     {
  50:src/Riscv.cpp ****         __putc(*string);
  51:src/Riscv.cpp ****         string++;
  52:src/Riscv.cpp ****     }
  53:src/Riscv.cpp ****     ms_sstatus(sstatus & SSTATUS_SIE ? SSTATUS_SIE : 0);
  54:src/Riscv.cpp **** }
  55:src/Riscv.cpp **** 
  56:src/Riscv.cpp **** void Riscv::printInteger(uint64 num)
  57:src/Riscv.cpp **** {
  58:src/Riscv.cpp ****     uint64 sstatus = r_sstatus();
  59:src/Riscv.cpp ****     mc_sstatus(SSTATUS_SIE);
  60:src/Riscv.cpp ****     static char digits[] = "0123456789";
  61:src/Riscv.cpp ****     char buf[16];
  62:src/Riscv.cpp ****     int i, neg;
  63:src/Riscv.cpp ****     uint x;
  64:src/Riscv.cpp **** 
  65:src/Riscv.cpp ****     neg = 0;
  66:src/Riscv.cpp ****     if(num < 0)
  67:src/Riscv.cpp ****     {
  68:src/Riscv.cpp ****         neg = 1;
  69:src/Riscv.cpp ****         x = -num;
  70:src/Riscv.cpp ****     }
  71:src/Riscv.cpp ****     else
  72:src/Riscv.cpp ****         x = num;
  73:src/Riscv.cpp **** 
  74:src/Riscv.cpp ****     i = 0;
  75:src/Riscv.cpp ****     do
  76:src/Riscv.cpp ****     {
  77:src/Riscv.cpp ****         buf[i++] = digits[x%10];
  78:src/Riscv.cpp ****     }while((x/=10) != 0);
  79:src/Riscv.cpp ****     if(neg)
  80:src/Riscv.cpp ****         buf[i++] = '-';
  81:src/Riscv.cpp **** 
  82:src/Riscv.cpp ****     while(--i >= 0)
  83:src/Riscv.cpp ****         __putc(buf[i]);
  84:src/Riscv.cpp **** 
  85:src/Riscv.cpp ****     __putc('\n');
  86:src/Riscv.cpp **** 
  87:src/Riscv.cpp ****     ms_sstatus(sstatus & SSTATUS_SIE ? SSTATUS_SIE : 0);
  88:src/Riscv.cpp **** }
  89:src/Riscv.cpp **** 
  90:src/Riscv.cpp **** void Riscv::handleSupervisorTrap()
  91:src/Riscv.cpp **** {
  92:src/Riscv.cpp ****     __asm__ volatile("mv %0, a4" : "=r"(PCB::savedRegA4));
  93:src/Riscv.cpp **** 
  94:src/Riscv.cpp ****     uint64 scause = Riscv::r_scause();
  95:src/Riscv.cpp **** 
  96:src/Riscv.cpp ****     switch(scause)
  97:src/Riscv.cpp ****     {
  98:src/Riscv.cpp ****         case timerInterrupt:
  99:src/Riscv.cpp ****         {
 100:src/Riscv.cpp ****             uint64 volatile sepc = Riscv::r_sepc();
 101:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 102:src/Riscv.cpp ****             mc_sip(Riscv::SIP_SSIP);
 103:src/Riscv.cpp ****             //Riscv::printString("timerInterrupt\n");
 104:src/Riscv.cpp ****             static uint64 total = 0;
GAS LISTING /tmp/ccUmrSFW.s 			page 3


 105:src/Riscv.cpp ****             total++;
 106:src/Riscv.cpp **** 
 107:src/Riscv.cpp ****             PCB::timeSliceCounter++;
 108:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
 109:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
 110:src/Riscv.cpp ****             {
 111:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 112:src/Riscv.cpp ****                 PCB::dispatch();
 113:src/Riscv.cpp ****             }
 114:src/Riscv.cpp **** 
 115:src/Riscv.cpp ****             Riscv::w_sstatus(sstatus);
 116:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 117:src/Riscv.cpp **** 
 118:src/Riscv.cpp ****             break;
 119:src/Riscv.cpp ****         }
 120:src/Riscv.cpp ****         case hwInterrupt: // todo
 121:src/Riscv.cpp ****         {
 122:src/Riscv.cpp ****             //Riscv::printString("Hardware interrupt...\n");
 123:src/Riscv.cpp ****             console_handler();
 124:src/Riscv.cpp ****             break;
 125:src/Riscv.cpp ****         }
 126:src/Riscv.cpp ****         case operationInterrupt: // todo
 127:src/Riscv.cpp ****         {
 128:src/Riscv.cpp ****             break;
 129:src/Riscv.cpp ****         }
 130:src/Riscv.cpp ****         case addrReadInterrupt: // todo
 131:src/Riscv.cpp ****         {
 132:src/Riscv.cpp ****             break;
 133:src/Riscv.cpp ****         }
 134:src/Riscv.cpp ****         case addrWriteInterrupt: // todo
 135:src/Riscv.cpp ****         {
 136:src/Riscv.cpp ****             break;
 137:src/Riscv.cpp ****         }
 138:src/Riscv.cpp ****         case ecallSystemInterupt:
 139:src/Riscv.cpp ****         case ecallUserInterrupt: {
 140:src/Riscv.cpp ****             uint64 operation;
 141:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
 142:src/Riscv.cpp **** 
 143:src/Riscv.cpp ****             uint64 volatile sepc = Riscv::r_sepc() + 4;
 144:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 145:src/Riscv.cpp **** 
 146:src/Riscv.cpp ****             switch(operation)
 147:src/Riscv.cpp ****             {
 148:src/Riscv.cpp ****                 case MemoryAllocator::MEM_ALLOC:
 149:src/Riscv.cpp ****                     MemoryAllocator::memAllocHandler();
 150:src/Riscv.cpp ****                     break;
 151:src/Riscv.cpp ****                 case MemoryAllocator::MEM_FREE:
 152:src/Riscv.cpp ****                     MemoryAllocator::memFreeHandler();
 153:src/Riscv.cpp ****                     break;
 154:src/Riscv.cpp ****                 case PCB::THREAD_CREATE:
 155:src/Riscv.cpp ****                     PCB::threadCreateHandler();
 156:src/Riscv.cpp ****                     break;
 157:src/Riscv.cpp ****                 case PCB::THREAD_DISPATCH:
 158:src/Riscv.cpp ****                     PCB::threadDispatchHandler();
 159:src/Riscv.cpp ****                     break;
 160:src/Riscv.cpp ****                 case PCB::THREAD_EXIT:
 161:src/Riscv.cpp ****                     PCB::threadExitHandler();
GAS LISTING /tmp/ccUmrSFW.s 			page 4


 162:src/Riscv.cpp ****                     break;
 163:src/Riscv.cpp ****                 case PCB::TIME_SLEEP:
 164:src/Riscv.cpp ****                     PCB::threadSleepHandler();
 165:src/Riscv.cpp ****                     break;
 166:src/Riscv.cpp ****                 case KSemaphore::SEM_OPEN:
 167:src/Riscv.cpp ****                     KSemaphore::semOpenHandler();
 168:src/Riscv.cpp ****                     break;
 169:src/Riscv.cpp ****                 case KSemaphore::SEM_WAIT:
 170:src/Riscv.cpp ****                     KSemaphore::semWaitHandler();
 171:src/Riscv.cpp ****                     break;
 172:src/Riscv.cpp ****                 case KSemaphore::SEM_SIGNAL:
 173:src/Riscv.cpp ****                     KSemaphore::semSignalHandler();
 174:src/Riscv.cpp ****                     break;
 175:src/Riscv.cpp ****                 case KSemaphore::SEM_CLOSE:
 176:src/Riscv.cpp ****                     KSemaphore::semCloseHandler();
 177:src/Riscv.cpp ****                     break;
 178:src/Riscv.cpp ****                 case KConsole::CONSOLE_GETC:
 179:src/Riscv.cpp ****                     //todo
 180:src/Riscv.cpp ****                     break;
 181:src/Riscv.cpp ****                 case KConsole::CONSOLE_PUTC:
 182:src/Riscv.cpp ****                     //todo
 183:src/Riscv.cpp ****                     break;
 184:src/Riscv.cpp ****             }
 185:src/Riscv.cpp **** 
 186:src/Riscv.cpp ****             Riscv::w_sstatus(sstatus);
 187:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 188:src/Riscv.cpp **** 
 189:src/Riscv.cpp ****             break;
 190:src/Riscv.cpp ****         }
 191:src/Riscv.cpp ****     }
 192:src/Riscv.cpp **** }
 193:src/Riscv.cpp **** 
 194:src/Riscv.cpp **** void Riscv::kernelMain()
 195:src/Riscv.cpp **** {
 196:src/Riscv.cpp ****     initSystem();
 197:src/Riscv.cpp **** 
 198:src/Riscv.cpp ****     //enableInterrupts();
 199:src/Riscv.cpp **** 
 200:src/Riscv.cpp ****     PCB* userPCB = new PCB(&Riscv::userMainWrapper, 0, kmalloc(DEFAULT_STACK_SIZE), DEFAULT_TIME_SL
 201:src/Riscv.cpp ****     while(userPCB->getState() != PCB::FINISHED)
 202:src/Riscv.cpp ****     {
 203:src/Riscv.cpp ****         thread_dispatch();
 204:src/Riscv.cpp ****     }
 205:src/Riscv.cpp **** 
 206:src/Riscv.cpp ****     //myTests();
 207:src/Riscv.cpp **** 
 208:src/Riscv.cpp ****     //disableInterrupts();
 209:src/Riscv.cpp **** 
 210:src/Riscv.cpp ****     endSystem();
 211:src/Riscv.cpp **** 
 212:src/Riscv.cpp ****     Riscv::printString("End...");
 213:src/Riscv.cpp **** }
 214:src/Riscv.cpp **** 
 215:src/Riscv.cpp **** void Riscv::userMainWrapper(void* ) {
  12              		.loc 1 215 37
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
GAS LISTING /tmp/ccUmrSFW.s 			page 5


  15              		.cfi_def_cfa_offset 16
  16 0004 23341100 		sd	ra,8(sp)
  17 0008 23308100 		sd	s0,0(sp)
  18              		.cfi_offset 1, -8
  19              		.cfi_offset 8, -16
  20 000c 13040101 		addi	s0,sp,16
  21              		.cfi_def_cfa 8, 0
 216:src/Riscv.cpp ****     userMain();
  22              		.loc 1 216 5
  23              		.loc 1 216 13 is_stmt 0
  24 0010 97000000 		call	_Z8userMainv@plt
  24      E7800000 
  25              	.LVL0:
 217:src/Riscv.cpp **** }
  26              		.loc 1 217 1
  27 0018 83308100 		ld	ra,8(sp)
  28              		.cfi_restore 1
  29 001c 03340100 		ld	s0,0(sp)
  30              		.cfi_restore 8
  31              		.cfi_def_cfa 2, 16
  32 0020 13010101 		addi	sp,sp,16
  33              		.cfi_def_cfa_offset 0
  34 0024 67800000 		jr	ra
  35              		.cfi_endproc
  36              	.LFE50:
  38              		.align	2
  39              		.globl	_ZN5Riscv10initSystemEv
  41              	_ZN5Riscv10initSystemEv:
  42              	.LFB41:
  16:src/Riscv.cpp ****     w_stvec((uint64)&Riscv::supervisorTrap);
  43              		.loc 1 16 1 is_stmt 1
  44              		.cfi_startproc
  45 0028 130101FF 		addi	sp,sp,-16
  46              		.cfi_def_cfa_offset 16
  47 002c 23341100 		sd	ra,8(sp)
  48 0030 23308100 		sd	s0,0(sp)
  49              		.cfi_offset 1, -8
  50              		.cfi_offset 8, -16
  51 0034 13040101 		addi	s0,sp,16
  52              		.cfi_def_cfa 8, 0
  17:src/Riscv.cpp ****     PCB::initialize();
  53              		.loc 1 17 5
  17:src/Riscv.cpp ****     PCB::initialize();
  54              		.loc 1 17 12 is_stmt 0
  55 0038 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
  55      83B70700 
  56              	.LVL1:
  57              	.LBB48:
  58              	.LBB49:
  59              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 4/27/22.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_0_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_0_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/ccUmrSFW.s 			page 6


   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** class Riscv
  11:src/../h/Riscv.hpp **** {
  12:src/../h/Riscv.hpp **** public:
  13:src/../h/Riscv.hpp ****     static void kernelMain();
  14:src/../h/Riscv.hpp **** 
  15:src/../h/Riscv.hpp ****     static void initSystem();
  16:src/../h/Riscv.hpp ****     static void endSystem();
  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp ****     static void userMainWrapper(void* p);
  19:src/../h/Riscv.hpp **** 
  20:src/../h/Riscv.hpp ****     static void enableInterrupts();
  21:src/../h/Riscv.hpp **** 
  22:src/../h/Riscv.hpp ****     static void disableInterrupts();
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp ****     static void printString(char const *string);
  25:src/../h/Riscv.hpp **** 
  26:src/../h/Riscv.hpp ****     static void printInteger(uint64 num);
  27:src/../h/Riscv.hpp **** 
  28:src/../h/Riscv.hpp ****     static void pushRegisters();
  29:src/../h/Riscv.hpp ****     static void popRegisters();
  30:src/../h/Riscv.hpp **** 
  31:src/../h/Riscv.hpp ****     static uint64 r_scause();
  32:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  33:src/../h/Riscv.hpp **** 
  34:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  35:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
  36:src/../h/Riscv.hpp **** 
  37:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  38:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  39:src/../h/Riscv.hpp **** 
  40:src/../h/Riscv.hpp ****     static uint64 r_stval();
  41:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  42:src/../h/Riscv.hpp **** 
  43:src/../h/Riscv.hpp ****     enum BitMaskSip
  44:src/../h/Riscv.hpp ****     {
  45:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  46:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  47:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9),
  48:src/../h/Riscv.hpp ****     };
  49:src/../h/Riscv.hpp **** 
  50:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  51:src/../h/Riscv.hpp **** 
  52:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  53:src/../h/Riscv.hpp **** 
  54:src/../h/Riscv.hpp ****     static uint64 r_sip();
  55:src/../h/Riscv.hpp **** 
  56:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  57:src/../h/Riscv.hpp **** 
  58:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  59:src/../h/Riscv.hpp ****     {
  60:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  61:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  62:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  63:src/../h/Riscv.hpp ****     };
  64:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/ccUmrSFW.s 			page 7


  65:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  66:src/../h/Riscv.hpp **** 
  67:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  68:src/../h/Riscv.hpp **** 
  69:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  72:src/../h/Riscv.hpp **** 
  73:src/../h/Riscv.hpp ****     static void popSppSpie();
  74:src/../h/Riscv.hpp **** 
  75:src/../h/Riscv.hpp ****     static void supervisorTrap();
  76:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  77:src/../h/Riscv.hpp **** 
  78:src/../h/Riscv.hpp ****     static const uint64 bntOne = 1UL << 63;;
  79:src/../h/Riscv.hpp ****     static const uint64 bntZero = 0UL;
  80:src/../h/Riscv.hpp ****     static const uint64 timerInterrupt = bntOne + 1UL;
  81:src/../h/Riscv.hpp ****     static const uint64 hwInterrupt = bntOne + 9UL;
  82:src/../h/Riscv.hpp ****     static const uint64 operationInterrupt = bntZero + 2UL;
  83:src/../h/Riscv.hpp ****     static const uint64 addrReadInterrupt = bntZero + 5UL;
  84:src/../h/Riscv.hpp ****     static const uint64 addrWriteInterrupt = bntZero + 7UL;
  85:src/../h/Riscv.hpp ****     static const uint64 ecallUserInterrupt = bntZero + 8UL;
  86:src/../h/Riscv.hpp ****     static const uint64 ecallSystemInterupt = bntZero + 9UL;
  87:src/../h/Riscv.hpp **** };
  88:src/../h/Riscv.hpp **** 
  89:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause() {
  90:src/../h/Riscv.hpp ****     uint64 volatile scause;
  91:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
  92:src/../h/Riscv.hpp ****     return scause;
  93:src/../h/Riscv.hpp **** }
  94:src/../h/Riscv.hpp **** 
  95:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
  96:src/../h/Riscv.hpp ****     __asm__ volatile("csrw scause, %0" : :"r"(scause));
  97:src/../h/Riscv.hpp **** }
  98:src/../h/Riscv.hpp **** 
  99:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc() {
 100:src/../h/Riscv.hpp ****     uint64 volatile sepc;
 101:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 102:src/../h/Riscv.hpp ****     return sepc;
 103:src/../h/Riscv.hpp **** }
 104:src/../h/Riscv.hpp **** 
 105:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
 106:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sepc, %0" : :"r"(sepc));
 107:src/../h/Riscv.hpp **** }
 108:src/../h/Riscv.hpp **** 
 109:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec() {
 110:src/../h/Riscv.hpp ****     uint64 volatile stvec;
 111:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, stvec" : "=r"(stvec));
 112:src/../h/Riscv.hpp ****     return stvec;
 113:src/../h/Riscv.hpp **** }
 114:src/../h/Riscv.hpp **** 
 115:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 116:src/../h/Riscv.hpp ****     __asm__ volatile("csrw stvec, %0" : :"r"(stvec));
  60              		.loc 2 116 5 is_stmt 1
  61              		.loc 2 116 53 is_stmt 0
  62              	#APP
  63              	# 116 "src/../h/Riscv.hpp" 1
 117              	}
GAS LISTING /tmp/ccUmrSFW.s 			page 8


  64              		csrw stvec, a5
  65              	# 0 "" 2
  66              	.LVL2:
  67              	#NO_APP
  68              	.LBE49:
  69              	.LBE48:
  18:src/Riscv.cpp ****     KConsole::initialize();
  70              		.loc 1 18 5 is_stmt 1
  18:src/Riscv.cpp ****     KConsole::initialize();
  71              		.loc 1 18 20 is_stmt 0
  72 0044 97000000 		call	_ZN3PCB10initializeEv@plt
  72      E7800000 
  73              	.LVL3:
  19:src/Riscv.cpp **** }
  74              		.loc 1 19 5 is_stmt 1
  19:src/Riscv.cpp **** }
  75              		.loc 1 19 25 is_stmt 0
  76 004c 97000000 		call	_ZN8KConsole10initializeEv@plt
  76      E7800000 
  77              	.LVL4:
  20:src/Riscv.cpp **** 
  78              		.loc 1 20 1
  79 0054 83308100 		ld	ra,8(sp)
  80              		.cfi_restore 1
  81 0058 03340100 		ld	s0,0(sp)
  82              		.cfi_restore 8
  83              		.cfi_def_cfa 2, 16
  84 005c 13010101 		addi	sp,sp,16
  85              		.cfi_def_cfa_offset 0
  86 0060 67800000 		jr	ra
  87              		.cfi_endproc
  88              	.LFE41:
  90              		.align	2
  91              		.globl	_ZN5Riscv16enableInterruptsEv
  93              	_ZN5Riscv16enableInterruptsEv:
  94              	.LFB43:
  29:src/Riscv.cpp ****     ms_sstatus(Riscv::SSTATUS_SIE);
  95              		.loc 1 29 32 is_stmt 1
  96              		.cfi_startproc
  97 0064 130101FF 		addi	sp,sp,-16
  98              		.cfi_def_cfa_offset 16
  99 0068 23348100 		sd	s0,8(sp)
 100              		.cfi_offset 8, -8
 101 006c 13040101 		addi	s0,sp,16
 102              		.cfi_def_cfa 8, 0
  30:src/Riscv.cpp **** }
 103              		.loc 1 30 5
 104              	.LVL5:
 105              	.LBB50:
 106              	.LBB51:
 118:src/../h/Riscv.hpp **** 
 119:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stval() {
 120:src/../h/Riscv.hpp ****     uint64 volatile stval;
 121:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, stval" : "=r"(stval));
 122:src/../h/Riscv.hpp ****     return stval;
 123:src/../h/Riscv.hpp **** }
 124:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/ccUmrSFW.s 			page 9


 125:src/../h/Riscv.hpp **** inline void Riscv::w_stval(uint64 stval) {
 126:src/../h/Riscv.hpp ****     __asm__ volatile("csrw stval, %0" : :"r"(stval));
 127:src/../h/Riscv.hpp **** }
 128:src/../h/Riscv.hpp **** 
 129:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 130:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sip, %0" : :"r"(mask));
 131:src/../h/Riscv.hpp **** }
 132:src/../h/Riscv.hpp **** 
 133:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 134:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sip, %0" : :"r"(mask));
 135:src/../h/Riscv.hpp **** }
 136:src/../h/Riscv.hpp **** 
 137:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip() {
 138:src/../h/Riscv.hpp ****     uint64 volatile sip;
 139:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sip" : "=r"(sip));
 140:src/../h/Riscv.hpp ****     return sip;
 141:src/../h/Riscv.hpp **** }
 142:src/../h/Riscv.hpp **** 
 143:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 144:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sip, %0" : :"r"(sip));
 145:src/../h/Riscv.hpp **** }
 146:src/../h/Riscv.hpp **** 
 147:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 148:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sstatus, %0" : :"r"(mask));
 107              		.loc 2 148 5
 108              		.loc 2 148 54 is_stmt 0
 109 0070 93072000 		li	a5,2
 110              	#APP
 111              	# 148 "src/../h/Riscv.hpp" 1
 149              	}
 112              		csrs sstatus, a5
 113              	# 0 "" 2
 114              	.LVL6:
 115              	#NO_APP
 116              	.LBE51:
 117              	.LBE50:
  31:src/Riscv.cpp **** 
 118              		.loc 1 31 1
 119 0078 03348100 		ld	s0,8(sp)
 120              		.cfi_restore 8
 121              		.cfi_def_cfa 2, 16
 122 007c 13010101 		addi	sp,sp,16
 123              		.cfi_def_cfa_offset 0
 124 0080 67800000 		jr	ra
 125              		.cfi_endproc
 126              	.LFE43:
 128              		.align	2
 129              		.globl	_ZN5Riscv17disableInterruptsEv
 131              	_ZN5Riscv17disableInterruptsEv:
 132              	.LFB44:
  34:src/Riscv.cpp ****     mc_sstatus(Riscv::SSTATUS_SIE);
 133              		.loc 1 34 1 is_stmt 1
 134              		.cfi_startproc
 135 0084 130101FF 		addi	sp,sp,-16
 136              		.cfi_def_cfa_offset 16
 137 0088 23348100 		sd	s0,8(sp)
 138              		.cfi_offset 8, -8
GAS LISTING /tmp/ccUmrSFW.s 			page 10


 139 008c 13040101 		addi	s0,sp,16
 140              		.cfi_def_cfa 8, 0
  35:src/Riscv.cpp **** }
 141              		.loc 1 35 5
 142              	.LVL7:
 143              	.LBB52:
 144              	.LBB53:
 150:src/../h/Riscv.hpp **** 
 151:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 152:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sstatus, %0" : :"r"(mask));
 145              		.loc 2 152 5
 146              		.loc 2 152 54 is_stmt 0
 147 0090 93072000 		li	a5,2
 148              	#APP
 149              	# 152 "src/../h/Riscv.hpp" 1
 153              	}
 150              		csrc sstatus, a5
 151              	# 0 "" 2
 152              	.LVL8:
 153              	#NO_APP
 154              	.LBE53:
 155              	.LBE52:
  36:src/Riscv.cpp **** 
 156              		.loc 1 36 1
 157 0098 03348100 		ld	s0,8(sp)
 158              		.cfi_restore 8
 159              		.cfi_def_cfa 2, 16
 160 009c 13010101 		addi	sp,sp,16
 161              		.cfi_def_cfa_offset 0
 162 00a0 67800000 		jr	ra
 163              		.cfi_endproc
 164              	.LFE44:
 166              		.align	2
 167              		.globl	_ZN5Riscv9endSystemEv
 169              	_ZN5Riscv9endSystemEv:
 170              	.LFB42:
  23:src/Riscv.cpp ****     //todo
 171              		.loc 1 23 1 is_stmt 1
 172              		.cfi_startproc
 173 00a4 130101FF 		addi	sp,sp,-16
 174              		.cfi_def_cfa_offset 16
 175 00a8 23341100 		sd	ra,8(sp)
 176 00ac 23308100 		sd	s0,0(sp)
 177              		.cfi_offset 1, -8
 178              		.cfi_offset 8, -16
 179 00b0 13040101 		addi	s0,sp,16
 180              		.cfi_def_cfa 8, 0
  25:src/Riscv.cpp **** }
 181              		.loc 1 25 5
  25:src/Riscv.cpp **** }
 182              		.loc 1 25 29 is_stmt 0
 183 00b4 97000000 		call	_ZN5Riscv17disableInterruptsEv
 183      E7800000 
 184              	.LVL9:
  26:src/Riscv.cpp **** 
 185              		.loc 1 26 1
 186 00bc 83308100 		ld	ra,8(sp)
GAS LISTING /tmp/ccUmrSFW.s 			page 11


 187              		.cfi_restore 1
 188 00c0 03340100 		ld	s0,0(sp)
 189              		.cfi_restore 8
 190              		.cfi_def_cfa 2, 16
 191 00c4 13010101 		addi	sp,sp,16
 192              		.cfi_def_cfa_offset 0
 193 00c8 67800000 		jr	ra
 194              		.cfi_endproc
 195              	.LFE42:
 197              		.align	2
 198              		.globl	_ZN5Riscv10popSppSpieEv
 200              	_ZN5Riscv10popSppSpieEv:
 201              	.LFB45:
  39:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
 202              		.loc 1 39 1 is_stmt 1
 203              		.cfi_startproc
 204 00cc 130101FF 		addi	sp,sp,-16
 205              		.cfi_def_cfa_offset 16
 206 00d0 23348100 		sd	s0,8(sp)
 207              		.cfi_offset 8, -8
 208 00d4 13040101 		addi	s0,sp,16
 209              		.cfi_def_cfa 8, 0
  40:src/Riscv.cpp ****     __asm__ volatile ("sret");
 210              		.loc 1 40 5
  40:src/Riscv.cpp ****     __asm__ volatile ("sret");
 211              		.loc 1 40 39 is_stmt 0
 212              	#APP
 213              	# 40 "src/Riscv.cpp" 1
  41:src/Riscv.cpp **** }
 214              		csrw sepc, ra
 215              	# 0 "" 2
 216              		.loc 1 41 5 is_stmt 1
  41:src/Riscv.cpp **** }
 217              		.loc 1 41 30 is_stmt 0
 218              	# 41 "src/Riscv.cpp" 1
  42:src/Riscv.cpp **** 
 219              		sret
 220              	# 0 "" 2
 221              		.loc 1 42 1
 222              	#NO_APP
 223 00e0 03348100 		ld	s0,8(sp)
 224              		.cfi_restore 8
 225              		.cfi_def_cfa 2, 16
 226 00e4 13010101 		addi	sp,sp,16
 227              		.cfi_def_cfa_offset 0
 228 00e8 67800000 		jr	ra
 229              		.cfi_endproc
 230              	.LFE45:
 232              		.align	2
 233              		.globl	_ZN5Riscv11printStringEPKc
 235              	_ZN5Riscv11printStringEPKc:
 236              	.LFB46:
  45:src/Riscv.cpp ****     uint64 sstatus = r_sstatus();
 237              		.loc 1 45 1 is_stmt 1
 238              		.cfi_startproc
 239              	.LVL10:
 240 00ec 130101FD 		addi	sp,sp,-48
GAS LISTING /tmp/ccUmrSFW.s 			page 12


 241              		.cfi_def_cfa_offset 48
 242 00f0 23341102 		sd	ra,40(sp)
 243 00f4 23308102 		sd	s0,32(sp)
 244 00f8 233C9100 		sd	s1,24(sp)
 245 00fc 23382101 		sd	s2,16(sp)
 246              		.cfi_offset 1, -8
 247              		.cfi_offset 8, -16
 248              		.cfi_offset 9, -24
 249              		.cfi_offset 18, -32
 250 0100 13040103 		addi	s0,sp,48
 251              		.cfi_def_cfa 8, 0
 252 0104 93040500 		mv	s1,a0
  46:src/Riscv.cpp ****     mc_sstatus(SSTATUS_SIE);
 253              		.loc 1 46 5
 254              	.LBB54:
 255              	.LBB55:
 154:src/../h/Riscv.hpp **** 
 155:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sstatus() {
 156:src/../h/Riscv.hpp ****     uint64 volatile sstatus;
 256              		.loc 2 156 5
 157:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 257              		.loc 2 157 5
 258              		.loc 2 157 57 is_stmt 0
 259              	#APP
 260              	# 157 "src/../h/Riscv.hpp" 1
 158              	    return sstatus;
 261              		csrr a5, sstatus
 262              	# 0 "" 2
 263              	#NO_APP
 264 010c 233CF4FC 		sd	a5,-40(s0)
 265              		.loc 2 158 5 is_stmt 1
 266              		.loc 2 158 12 is_stmt 0
 267 0110 033984FD 		ld	s2,-40(s0)
 268              	.LVL11:
 269              	.LBE55:
 270              	.LBE54:
  47:src/Riscv.cpp ****     while (*string != '\0')
 271              		.loc 1 47 5 is_stmt 1
 272              	.LBB56:
 273              	.LBB57:
 152:src/../h/Riscv.hpp **** }
 274              		.loc 2 152 5
 152:src/../h/Riscv.hpp **** }
 275              		.loc 2 152 54 is_stmt 0
 276 0114 93072000 		li	a5,2
 277              	#APP
 278              	# 152 "src/../h/Riscv.hpp" 1
 279              		csrc sstatus, a5
 280              	# 0 "" 2
 281              	.LVL12:
 282              	#NO_APP
 283              	.L15:
 284              	.LBE57:
 285              	.LBE56:
  48:src/Riscv.cpp ****     {
 286              		.loc 1 48 5 is_stmt 1
  48:src/Riscv.cpp ****     {
GAS LISTING /tmp/ccUmrSFW.s 			page 13


 287              		.loc 1 48 20
  48:src/Riscv.cpp ****     {
 288              		.loc 1 48 12 is_stmt 0
 289 011c 03C50400 		lbu	a0,0(s1)
  48:src/Riscv.cpp ****     {
 290              		.loc 1 48 20
 291 0120 630A0500 		beqz	a0,.L14
  50:src/Riscv.cpp ****         string++;
 292              		.loc 1 50 9 is_stmt 1
  50:src/Riscv.cpp ****         string++;
 293              		.loc 1 50 15 is_stmt 0
 294 0124 97000000 		call	__putc@plt
 294      E7800000 
 295              	.LVL13:
  51:src/Riscv.cpp ****     }
 296              		.loc 1 51 9 is_stmt 1
  51:src/Riscv.cpp ****     }
 297              		.loc 1 51 15 is_stmt 0
 298 012c 93841400 		addi	s1,s1,1
 299              	.LVL14:
  48:src/Riscv.cpp ****     {
 300              		.loc 1 48 5
 301 0130 6FF0DFFE 		j	.L15
 302              	.L14:
  53:src/Riscv.cpp **** }
 303              		.loc 1 53 5 is_stmt 1
  53:src/Riscv.cpp **** }
 304              		.loc 1 53 38 is_stmt 0
 305 0134 1B090900 		sext.w	s2,s2
 306              	.LVL15:
  53:src/Riscv.cpp **** }
 307              		.loc 1 53 15
 308 0138 13792900 		andi	s2,s2,2
 309 013c 1B090900 		sext.w	s2,s2
 310              	.LVL16:
 311              	.LBB58:
 312              	.LBB59:
 148:src/../h/Riscv.hpp **** }
 313              		.loc 2 148 5 is_stmt 1
 148:src/../h/Riscv.hpp **** }
 314              		.loc 2 148 54 is_stmt 0
 315              	#APP
 316              	# 148 "src/../h/Riscv.hpp" 1
 317              		csrs sstatus, s2
 318              	# 0 "" 2
 319              	.LVL17:
 320              	#NO_APP
 321              	.LBE59:
 322              	.LBE58:
  54:src/Riscv.cpp **** 
 323              		.loc 1 54 1
 324 0144 83308102 		ld	ra,40(sp)
 325              		.cfi_restore 1
 326 0148 03340102 		ld	s0,32(sp)
 327              		.cfi_restore 8
 328              		.cfi_def_cfa 2, 48
 329 014c 83348101 		ld	s1,24(sp)
GAS LISTING /tmp/ccUmrSFW.s 			page 14


 330              		.cfi_restore 9
 331              	.LVL18:
 332 0150 03390101 		ld	s2,16(sp)
 333              		.cfi_restore 18
 334 0154 13010103 		addi	sp,sp,48
 335              		.cfi_def_cfa_offset 0
 336 0158 67800000 		jr	ra
 337              		.cfi_endproc
 338              	.LFE46:
 340              		.align	2
 341              		.globl	_ZN5Riscv12printIntegerEm
 343              	_ZN5Riscv12printIntegerEm:
 344              	.LFB47:
  57:src/Riscv.cpp ****     uint64 sstatus = r_sstatus();
 345              		.loc 1 57 1 is_stmt 1
 346              		.cfi_startproc
 347              	.LVL19:
 348 015c 130101FC 		addi	sp,sp,-64
 349              		.cfi_def_cfa_offset 64
 350 0160 233C1102 		sd	ra,56(sp)
 351 0164 23388102 		sd	s0,48(sp)
 352 0168 23349102 		sd	s1,40(sp)
 353 016c 23302103 		sd	s2,32(sp)
 354              		.cfi_offset 1, -8
 355              		.cfi_offset 8, -16
 356              		.cfi_offset 9, -24
 357              		.cfi_offset 18, -32
 358 0170 13040104 		addi	s0,sp,64
 359              		.cfi_def_cfa 8, 0
  58:src/Riscv.cpp ****     mc_sstatus(SSTATUS_SIE);
 360              		.loc 1 58 5
 361              	.LBB60:
 362              	.LBB61:
 156:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 363              		.loc 2 156 5
 157:src/../h/Riscv.hpp ****     return sstatus;
 364              		.loc 2 157 5
 157:src/../h/Riscv.hpp ****     return sstatus;
 365              		.loc 2 157 57 is_stmt 0
 366              	#APP
 367              	# 157 "src/../h/Riscv.hpp" 1
 368              		csrr a5, sstatus
 369              	# 0 "" 2
 370              	#NO_APP
 371 0178 2334F4FC 		sd	a5,-56(s0)
 372              		.loc 2 158 5 is_stmt 1
 373              		.loc 2 158 12 is_stmt 0
 374 017c 033984FC 		ld	s2,-56(s0)
 375              	.LVL20:
 376              	.LBE61:
 377              	.LBE60:
  59:src/Riscv.cpp ****     static char digits[] = "0123456789";
 378              		.loc 1 59 5 is_stmt 1
 379              	.LBB62:
 380              	.LBB63:
 152:src/../h/Riscv.hpp **** }
 381              		.loc 2 152 5
GAS LISTING /tmp/ccUmrSFW.s 			page 15


 152:src/../h/Riscv.hpp **** }
 382              		.loc 2 152 54 is_stmt 0
 383 0180 93072000 		li	a5,2
 384              	#APP
 385              	# 152 "src/../h/Riscv.hpp" 1
 386              		csrc sstatus, a5
 387              	# 0 "" 2
 388              	.LVL21:
 389              	#NO_APP
 390              	.LBE63:
 391              	.LBE62:
  60:src/Riscv.cpp ****     char buf[16];
 392              		.loc 1 60 5 is_stmt 1
  61:src/Riscv.cpp ****     int i, neg;
 393              		.loc 1 61 5
  62:src/Riscv.cpp ****     uint x;
 394              		.loc 1 62 5
  63:src/Riscv.cpp **** 
 395              		.loc 1 63 5
  65:src/Riscv.cpp ****     if(num < 0)
 396              		.loc 1 65 5
  66:src/Riscv.cpp ****     {
 397              		.loc 1 66 5
  72:src/Riscv.cpp **** 
 398              		.loc 1 72 9
  72:src/Riscv.cpp **** 
 399              		.loc 1 72 11 is_stmt 0
 400 0188 1B050500 		sext.w	a0,a0
 401              	.LVL22:
  74:src/Riscv.cpp ****     do
 402              		.loc 1 74 5 is_stmt 1
  74:src/Riscv.cpp ****     do
 403              		.loc 1 74 7 is_stmt 0
 404 018c 93040000 		li	s1,0
 405              	.LVL23:
 406              	.L18:
  75:src/Riscv.cpp ****     {
 407              		.loc 1 75 5 is_stmt 1
  77:src/Riscv.cpp ****     }while((x/=10) != 0);
 408              		.loc 1 77 9
  77:src/Riscv.cpp ****     }while((x/=10) != 0);
 409              		.loc 1 77 28 is_stmt 0
 410 0190 1306A000 		li	a2,10
 411 0194 3B77C502 		remuw	a4,a0,a2
 412              	.LVL24:
  77:src/Riscv.cpp ****     }while((x/=10) != 0);
 413              		.loc 1 77 31
 414 0198 93160702 		slli	a3,a4,32
 415 019c 93D60602 		srli	a3,a3,32
 416 01a0 17070000 		lla	a4,.LANCHOR0
 416      13070700 
 417 01a8 3307D700 		add	a4,a4,a3
 418 01ac 03470700 		lbu	a4,0(a4)
  77:src/Riscv.cpp ****     }while((x/=10) != 0);
 419              		.loc 1 77 18
 420 01b0 930604FE 		addi	a3,s0,-32
 421 01b4 B3879600 		add	a5,a3,s1
GAS LISTING /tmp/ccUmrSFW.s 			page 16


 422 01b8 9B841400 		addiw	s1,s1,1
 423              	.LVL25:
 424 01bc 2388E7FE 		sb	a4,-16(a5)
  78:src/Riscv.cpp ****     if(neg)
 425              		.loc 1 78 20 is_stmt 1
 426 01c0 1B070500 		sext.w	a4,a0
  78:src/Riscv.cpp ****     if(neg)
 427              		.loc 1 78 14 is_stmt 0
 428 01c4 3B55C502 		divuw	a0,a0,a2
 429              	.LVL26:
  78:src/Riscv.cpp ****     if(neg)
 430              		.loc 1 78 20
 431 01c8 93079000 		li	a5,9
 432 01cc E3E2E7FC 		bgtu	a4,a5,.L18
 433              	.LVL27:
 434              	.L20:
  82:src/Riscv.cpp ****         __putc(buf[i]);
 435              		.loc 1 82 5 is_stmt 1
  82:src/Riscv.cpp ****         __putc(buf[i]);
 436              		.loc 1 82 15
 437 01d0 9B84F4FF 		addiw	s1,s1,-1
 438              	.LVL28:
 439 01d4 63CE0400 		bltz	s1,.L19
  83:src/Riscv.cpp **** 
 440              		.loc 1 83 9
  83:src/Riscv.cpp **** 
 441              		.loc 1 83 15 is_stmt 0
 442 01d8 930704FE 		addi	a5,s0,-32
 443 01dc B3879700 		add	a5,a5,s1
 444 01e0 03C507FF 		lbu	a0,-16(a5)
 445 01e4 97000000 		call	__putc@plt
 445      E7800000 
 446              	.LVL29:
 447 01ec 6FF05FFE 		j	.L20
 448              	.L19:
  85:src/Riscv.cpp **** 
 449              		.loc 1 85 5 is_stmt 1
  85:src/Riscv.cpp **** 
 450              		.loc 1 85 11 is_stmt 0
 451 01f0 1305A000 		li	a0,10
 452 01f4 97000000 		call	__putc@plt
 452      E7800000 
 453              	.LVL30:
  87:src/Riscv.cpp **** }
 454              		.loc 1 87 5 is_stmt 1
  87:src/Riscv.cpp **** }
 455              		.loc 1 87 38 is_stmt 0
 456 01fc 1B090900 		sext.w	s2,s2
 457              	.LVL31:
  87:src/Riscv.cpp **** }
 458              		.loc 1 87 15
 459 0200 13792900 		andi	s2,s2,2
 460 0204 1B090900 		sext.w	s2,s2
 461              	.LVL32:
 462              	.LBB64:
 463              	.LBB65:
 148:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/ccUmrSFW.s 			page 17


 464              		.loc 2 148 5 is_stmt 1
 148:src/../h/Riscv.hpp **** }
 465              		.loc 2 148 54 is_stmt 0
 466              	#APP
 467              	# 148 "src/../h/Riscv.hpp" 1
 468              		csrs sstatus, s2
 469              	# 0 "" 2
 470              	.LVL33:
 471              	#NO_APP
 472              	.LBE65:
 473              	.LBE64:
  88:src/Riscv.cpp **** 
 474              		.loc 1 88 1
 475 020c 83308103 		ld	ra,56(sp)
 476              		.cfi_restore 1
 477 0210 03340103 		ld	s0,48(sp)
 478              		.cfi_restore 8
 479              		.cfi_def_cfa 2, 64
 480 0214 83348102 		ld	s1,40(sp)
 481              		.cfi_restore 9
 482 0218 03390102 		ld	s2,32(sp)
 483              		.cfi_restore 18
 484 021c 13010104 		addi	sp,sp,64
 485              		.cfi_def_cfa_offset 0
 486 0220 67800000 		jr	ra
 487              		.cfi_endproc
 488              	.LFE47:
 490              		.align	2
 491              		.globl	_ZN5Riscv20handleSupervisorTrapEv
 493              	_ZN5Riscv20handleSupervisorTrapEv:
 494              	.LFB48:
  91:src/Riscv.cpp ****     __asm__ volatile("mv %0, a4" : "=r"(PCB::savedRegA4));
 495              		.loc 1 91 1 is_stmt 1
 496              		.cfi_startproc
 497 0224 130101F9 		addi	sp,sp,-112
 498              		.cfi_def_cfa_offset 112
 499 0228 23341106 		sd	ra,104(sp)
 500 022c 23308106 		sd	s0,96(sp)
 501 0230 233C9104 		sd	s1,88(sp)
 502              		.cfi_offset 1, -8
 503              		.cfi_offset 8, -16
 504              		.cfi_offset 9, -24
 505 0234 13040107 		addi	s0,sp,112
 506              		.cfi_def_cfa 8, 0
  92:src/Riscv.cpp **** 
 507              		.loc 1 92 5
  92:src/Riscv.cpp **** 
 508              		.loc 1 92 58 is_stmt 0
 509              	#APP
 510              	# 92 "src/Riscv.cpp" 1
 511              		mv a4, a4
 512              	# 0 "" 2
 513              	#NO_APP
 514 023c 97070000 		la	a5,_ZN3PCB10savedRegA4E
 514      83B70700 
 515 0244 23B0E700 		sd	a4,0(a5)
  94:src/Riscv.cpp **** 
GAS LISTING /tmp/ccUmrSFW.s 			page 18


 516              		.loc 1 94 5 is_stmt 1
 517              	.LBB66:
 518              	.LBB67:
  90:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
 519              		.loc 2 90 5
  91:src/../h/Riscv.hpp ****     return scause;
 520              		.loc 2 91 5
  91:src/../h/Riscv.hpp ****     return scause;
 521              		.loc 2 91 55 is_stmt 0
 522              	#APP
 523              	# 91 "src/../h/Riscv.hpp" 1
 524              		csrr a5, scause
 525              	# 0 "" 2
 526              	#NO_APP
 527 024c 233CF4FA 		sd	a5,-72(s0)
  92:src/../h/Riscv.hpp **** }
 528              		.loc 2 92 5 is_stmt 1
  92:src/../h/Riscv.hpp **** }
 529              		.loc 2 92 12 is_stmt 0
 530 0250 833784FB 		ld	a5,-72(s0)
 531              	.LVL34:
 532              	.LBE67:
 533              	.LBE66:
  96:src/Riscv.cpp ****     {
 534              		.loc 1 96 5 is_stmt 1
 535              	.LBB68:
 536 0254 1307F0FF 		li	a4,-1
 537 0258 1317F703 		slli	a4,a4,63
 538 025c 13071700 		addi	a4,a4,1
 539 0260 6384E708 		beq	a5,a4,.L23
 540 0264 1307F0FF 		li	a4,-1
 541 0268 1317F703 		slli	a4,a4,63
 542 026c 13071700 		addi	a4,a4,1
 543 0270 636EF704 		bgtu	a5,a4,.L24
 544 0274 938787FF 		addi	a5,a5,-8
 545              	.LVL35:
 546 0278 13071000 		li	a4,1
 547 027c 6366F70E 		bgtu	a5,a4,.L22
 548              	.LBB69:
 138:src/Riscv.cpp ****         case ecallUserInterrupt: {
 549              		.loc 1 138 9
 139:src/Riscv.cpp ****             uint64 operation;
 550              		.loc 1 139 9
 139:src/Riscv.cpp ****             uint64 operation;
 551              		.loc 1 139 34
 552              	.LBB70:
 140:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
 553              		.loc 1 140 13
 141:src/Riscv.cpp **** 
 554              		.loc 1 141 13
 141:src/Riscv.cpp **** 
 555              		.loc 1 141 61 is_stmt 0
 556              	#APP
 557              	# 141 "src/Riscv.cpp" 1
 558              		mv a5, a0
 559              	# 0 "" 2
 560              	.LVL36:
GAS LISTING /tmp/ccUmrSFW.s 			page 19


 143:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 561              		.loc 1 143 13 is_stmt 1
 562              	#NO_APP
 563              	.LBB71:
 564              	.LBB72:
 100:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 565              		.loc 2 100 5
 101:src/../h/Riscv.hpp ****     return sepc;
 566              		.loc 2 101 5
 101:src/../h/Riscv.hpp ****     return sepc;
 567              		.loc 2 101 51 is_stmt 0
 568              	#APP
 569              	# 101 "src/../h/Riscv.hpp" 1
 570              		csrr a4, sepc
 571              	# 0 "" 2
 572              	#NO_APP
 573 0288 233CE4FC 		sd	a4,-40(s0)
 102:src/../h/Riscv.hpp **** }
 574              		.loc 2 102 5 is_stmt 1
 102:src/../h/Riscv.hpp **** }
 575              		.loc 2 102 12 is_stmt 0
 576 028c 033784FD 		ld	a4,-40(s0)
 577              	.LBE72:
 578              	.LBE71:
 143:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 579              		.loc 1 143 52
 580 0290 13074700 		addi	a4,a4,4
 143:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 581              		.loc 1 143 54
 582 0294 2334E4FA 		sd	a4,-88(s0)
 144:src/Riscv.cpp **** 
 583              		.loc 1 144 13 is_stmt 1
 584              	.LBB73:
 585              	.LBB74:
 156:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 586              		.loc 2 156 5
 157:src/../h/Riscv.hpp ****     return sstatus;
 587              		.loc 2 157 5
 157:src/../h/Riscv.hpp ****     return sstatus;
 588              		.loc 2 157 57 is_stmt 0
 589              	#APP
 590              	# 157 "src/../h/Riscv.hpp" 1
 591              		csrr a4, sstatus
 592              	# 0 "" 2
 593              	#NO_APP
 594 029c 2338E4FC 		sd	a4,-48(s0)
 595              		.loc 2 158 5 is_stmt 1
 596              		.loc 2 158 12 is_stmt 0
 597 02a0 033704FD 		ld	a4,-48(s0)
 598              	.LBE74:
 599              	.LBE73:
 144:src/Riscv.cpp **** 
 600              		.loc 1 144 56
 601 02a4 2338E4FA 		sd	a4,-80(s0)
 146:src/Riscv.cpp ****             {
 602              		.loc 1 146 13 is_stmt 1
 603 02a8 13071003 		li	a4,49
GAS LISTING /tmp/ccUmrSFW.s 			page 20


 604 02ac 6364F70E 		bgtu	a5,a4,.L29
 605 02b0 93972700 		slli	a5,a5,2
 606              	.LVL37:
 607 02b4 17070000 		lla	a4,.L31
 607      13070700 
 608 02bc B387E700 		add	a5,a5,a4
 609 02c0 83A70700 		lw	a5,0(a5)
 610 02c4 B387E700 		add	a5,a5,a4
 611 02c8 67800700 		jr	a5
 612              		.section	.rodata
 613              		.align	2
 614              		.align	2
 615              	.L31:
 616 0000 00000000 		.word	.L29-.L31
 617 0004 00000000 		.word	.L40-.L31
 618 0008 00000000 		.word	.L39-.L31
 619 000c 00000000 		.word	.L29-.L31
 620 0010 00000000 		.word	.L29-.L31
 621 0014 00000000 		.word	.L29-.L31
 622 0018 00000000 		.word	.L29-.L31
 623 001c 00000000 		.word	.L29-.L31
 624 0020 00000000 		.word	.L29-.L31
 625 0024 00000000 		.word	.L29-.L31
 626 0028 00000000 		.word	.L29-.L31
 627 002c 00000000 		.word	.L29-.L31
 628 0030 00000000 		.word	.L29-.L31
 629 0034 00000000 		.word	.L29-.L31
 630 0038 00000000 		.word	.L29-.L31
 631 003c 00000000 		.word	.L29-.L31
 632 0040 00000000 		.word	.L29-.L31
 633 0044 00000000 		.word	.L38-.L31
 634 0048 00000000 		.word	.L37-.L31
 635 004c 00000000 		.word	.L36-.L31
 636 0050 00000000 		.word	.L29-.L31
 637 0054 00000000 		.word	.L29-.L31
 638 0058 00000000 		.word	.L29-.L31
 639 005c 00000000 		.word	.L29-.L31
 640 0060 00000000 		.word	.L29-.L31
 641 0064 00000000 		.word	.L29-.L31
 642 0068 00000000 		.word	.L29-.L31
 643 006c 00000000 		.word	.L29-.L31
 644 0070 00000000 		.word	.L29-.L31
 645 0074 00000000 		.word	.L29-.L31
 646 0078 00000000 		.word	.L29-.L31
 647 007c 00000000 		.word	.L29-.L31
 648 0080 00000000 		.word	.L29-.L31
 649 0084 00000000 		.word	.L35-.L31
 650 0088 00000000 		.word	.L34-.L31
 651 008c 00000000 		.word	.L33-.L31
 652 0090 00000000 		.word	.L32-.L31
 653 0094 00000000 		.word	.L29-.L31
 654 0098 00000000 		.word	.L29-.L31
 655 009c 00000000 		.word	.L29-.L31
 656 00a0 00000000 		.word	.L29-.L31
 657 00a4 00000000 		.word	.L29-.L31
 658 00a8 00000000 		.word	.L29-.L31
 659 00ac 00000000 		.word	.L29-.L31
GAS LISTING /tmp/ccUmrSFW.s 			page 21


 660 00b0 00000000 		.word	.L29-.L31
 661 00b4 00000000 		.word	.L29-.L31
 662 00b8 00000000 		.word	.L29-.L31
 663 00bc 00000000 		.word	.L29-.L31
 664 00c0 00000000 		.word	.L29-.L31
 665 00c4 00000000 		.word	.L30-.L31
 666              		.text
 667              	.LVL38:
 668              	.L24:
 669              	.LBE70:
 670              	.LBE69:
  96:src/Riscv.cpp ****     {
 671              		.loc 1 96 5 is_stmt 0
 672 02cc 1307F0FF 		li	a4,-1
 673 02d0 1317F703 		slli	a4,a4,63
 674 02d4 13079700 		addi	a4,a4,9
 675 02d8 6398E708 		bne	a5,a4,.L22
 676              	.LBB95:
 120:src/Riscv.cpp ****         {
 677              		.loc 1 120 9 is_stmt 1
 121:src/Riscv.cpp ****             //Riscv::printString("Hardware interrupt...\n");
 678              		.loc 1 121 9
 123:src/Riscv.cpp ****             break;
 679              		.loc 1 123 13
 123:src/Riscv.cpp ****             break;
 680              		.loc 1 123 28 is_stmt 0
 681 02dc 97000000 		call	console_handler@plt
 681      E7800000 
 682              	.LVL39:
 124:src/Riscv.cpp ****         }
 683              		.loc 1 124 13 is_stmt 1
 684 02e4 6F004008 		j	.L22
 685              	.LVL40:
 686              	.L23:
  98:src/Riscv.cpp ****         {
 687              		.loc 1 98 9
  99:src/Riscv.cpp ****             uint64 volatile sepc = Riscv::r_sepc();
 688              		.loc 1 99 9
 689              	.LBB79:
 100:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 690              		.loc 1 100 13
 691              	.LBB80:
 692              	.LBB81:
 100:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 693              		.loc 2 100 5
 101:src/../h/Riscv.hpp ****     return sepc;
 694              		.loc 2 101 5
 101:src/../h/Riscv.hpp ****     return sepc;
 695              		.loc 2 101 51 is_stmt 0
 696              	#APP
 697              	# 101 "src/../h/Riscv.hpp" 1
 698              		csrr a5, sepc
 699              	# 0 "" 2
 700              	.LVL41:
 701              	#NO_APP
 702 02ec 2334F4FC 		sd	a5,-56(s0)
 102:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/ccUmrSFW.s 			page 22


 703              		.loc 2 102 5 is_stmt 1
 102:src/../h/Riscv.hpp **** }
 704              		.loc 2 102 12 is_stmt 0
 705 02f0 833784FC 		ld	a5,-56(s0)
 706              	.LBE81:
 707              	.LBE80:
 100:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 708              		.loc 1 100 50
 709 02f4 233CF4F8 		sd	a5,-104(s0)
 101:src/Riscv.cpp ****             mc_sip(Riscv::SIP_SSIP);
 710              		.loc 1 101 13 is_stmt 1
 711              	.LBB82:
 712              	.LBB83:
 156:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 713              		.loc 2 156 5
 157:src/../h/Riscv.hpp ****     return sstatus;
 714              		.loc 2 157 5
 157:src/../h/Riscv.hpp ****     return sstatus;
 715              		.loc 2 157 57 is_stmt 0
 716              	#APP
 717              	# 157 "src/../h/Riscv.hpp" 1
 718              		csrr a5, sstatus
 719              	# 0 "" 2
 720              	#NO_APP
 721 02fc 2330F4FC 		sd	a5,-64(s0)
 722              		.loc 2 158 5 is_stmt 1
 723              		.loc 2 158 12 is_stmt 0
 724 0300 833704FC 		ld	a5,-64(s0)
 725              	.LBE83:
 726              	.LBE82:
 101:src/Riscv.cpp ****             mc_sip(Riscv::SIP_SSIP);
 727              		.loc 1 101 56
 728 0304 2330F4FA 		sd	a5,-96(s0)
 102:src/Riscv.cpp ****             //Riscv::printString("timerInterrupt\n");
 729              		.loc 1 102 13 is_stmt 1
 730              	.LVL42:
 731              	.LBB84:
 732              	.LBB85:
 134:src/../h/Riscv.hpp **** }
 733              		.loc 2 134 5
 134:src/../h/Riscv.hpp **** }
 734              		.loc 2 134 50 is_stmt 0
 735 0308 93072000 		li	a5,2
 736              	#APP
 737              	# 134 "src/../h/Riscv.hpp" 1
 738              		csrc sip, a5
 739              	# 0 "" 2
 740              	.LVL43:
 741              	#NO_APP
 742              	.LBE85:
 743              	.LBE84:
 104:src/Riscv.cpp ****             total++;
 744              		.loc 1 104 13 is_stmt 1
 105:src/Riscv.cpp **** 
 745              		.loc 1 105 13
 105:src/Riscv.cpp **** 
 746              		.loc 1 105 18 is_stmt 0
GAS LISTING /tmp/ccUmrSFW.s 			page 23


 747 0310 17070000 		lla	a4,.LANCHOR1
 747      13070700 
 748 0318 83370700 		ld	a5,0(a4)
 749 031c 93871700 		addi	a5,a5,1
 750 0320 2330F700 		sd	a5,0(a4)
 107:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
 751              		.loc 1 107 13 is_stmt 1
 107:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
 752              		.loc 1 107 34 is_stmt 0
 753 0324 97040000 		la	s1,_ZN3PCB16timeSliceCounterE
 753      83B40400 
 754 032c 83B70400 		ld	a5,0(s1)
 755 0330 93871700 		addi	a5,a5,1
 756 0334 23B0F400 		sd	a5,0(s1)
 108:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
 757              		.loc 1 108 13 is_stmt 1
 108:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
 758              		.loc 1 108 40 is_stmt 0
 759 0338 97000000 		call	_ZN12SleepPCBList13tryToWakePCBsEv@plt
 759      E7800000 
 760              	.LVL44:
 109:src/Riscv.cpp ****             {
 761              		.loc 1 109 13 is_stmt 1
 109:src/Riscv.cpp ****             {
 762              		.loc 1 109 68 is_stmt 0
 763 0340 97070000 		la	a5,_ZN3PCB7runningE
 763      83B70700 
 764 0348 83B70700 		ld	a5,0(a5)
 765              	.LVL45:
 766              	.LBB86:
 767              	.LBB87:
 768              		.file 3 "src/../h/PCB.hpp"
   1:src/../h/PCB.hpp **** //
   2:src/../h/PCB.hpp **** // Created by os on 4/27/22.
   3:src/../h/PCB.hpp **** //
   4:src/../h/PCB.hpp **** 
   5:src/../h/PCB.hpp **** #ifndef PROJECT_BASE_V1_0_PCB_HPP
   6:src/../h/PCB.hpp **** #define PROJECT_BASE_V1_0_PCB_HPP
   7:src/../h/PCB.hpp **** 
   8:src/../h/PCB.hpp **** #include "../lib/hw.h"
   9:src/../h/PCB.hpp **** #include "Scheduler.hpp"
  10:src/../h/PCB.hpp **** #include "Riscv.hpp"
  11:src/../h/PCB.hpp **** 
  12:src/../h/PCB.hpp **** class PCB
  13:src/../h/PCB.hpp **** {
  14:src/../h/PCB.hpp **** public:
  15:src/../h/PCB.hpp ****     static uint64 savedRegA4;
  16:src/../h/PCB.hpp **** 
  17:src/../h/PCB.hpp ****     using Body = void (*)(void*);
  18:src/../h/PCB.hpp **** 
  19:src/../h/PCB.hpp ****     PCB(Body body,  void* args, void* stack_space, uint64 timeSlice);
  20:src/../h/PCB.hpp ****     ~PCB();
  21:src/../h/PCB.hpp **** 
  22:src/../h/PCB.hpp ****     void start();
  23:src/../h/PCB.hpp ****     static void dispatch();
  24:src/../h/PCB.hpp ****     static void sleep(time_t);
  25:src/../h/PCB.hpp **** 
GAS LISTING /tmp/ccUmrSFW.s 			page 24


  26:src/../h/PCB.hpp ****     static PCB* running;
  27:src/../h/PCB.hpp **** 
  28:src/../h/PCB.hpp ****     static uint64 timeSliceCounter;
  29:src/../h/PCB.hpp ****     uint64 getTimeSlice() { return timeSlice;}
 769              		.loc 3 29 29 is_stmt 1
 770              		.loc 3 29 36 is_stmt 0
 771 034c 83B70701 		ld	a5,16(a5)
 772              	.LVL46:
 773              	.LBE87:
 774              	.LBE86:
 109:src/Riscv.cpp ****             {
 775              		.loc 1 109 39
 776 0350 03B70400 		ld	a4,0(s1)
 109:src/Riscv.cpp ****             {
 777              		.loc 1 109 13
 778 0354 6374F702 		bgeu	a4,a5,.L43
 779              	.L28:
 115:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 780              		.loc 1 115 13 is_stmt 1
 115:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 781              		.loc 1 115 29 is_stmt 0
 782 0358 833704FA 		ld	a5,-96(s0)
 783              	.LVL47:
 784              	.LBB88:
 785              	.LBB89:
 159:src/../h/Riscv.hpp **** }
 160:src/../h/Riscv.hpp **** 
 161:src/../h/Riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus) {
 162:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sstatus, %0" : :"r"(sstatus));
 786              		.loc 2 162 5 is_stmt 1
 787              		.loc 2 162 57 is_stmt 0
 788              	#APP
 789              	# 162 "src/../h/Riscv.hpp" 1
 163              	}
 790              		csrw sstatus, a5
 791              	# 0 "" 2
 792              	.LVL48:
 793              	#NO_APP
 794              	.LBE89:
 795              	.LBE88:
 116:src/Riscv.cpp **** 
 796              		.loc 1 116 13 is_stmt 1
 116:src/Riscv.cpp **** 
 797              		.loc 1 116 26 is_stmt 0
 798 0360 833784F9 		ld	a5,-104(s0)
 799              	.LVL49:
 800              	.LBB90:
 801              	.LBB91:
 106:src/../h/Riscv.hpp **** }
 802              		.loc 2 106 5 is_stmt 1
 106:src/../h/Riscv.hpp **** }
 803              		.loc 2 106 51 is_stmt 0
 804              	#APP
 805              	# 106 "src/../h/Riscv.hpp" 1
 806              		csrw sepc, a5
 807              	# 0 "" 2
 808              	.LVL50:
GAS LISTING /tmp/ccUmrSFW.s 			page 25


 809              	#NO_APP
 810              	.L22:
 811              	.LBE91:
 812              	.LBE90:
 813              	.LBE79:
 814              	.LBE95:
 815              	.LBE68:
 192:src/Riscv.cpp **** 
 816              		.loc 1 192 1
 817 0368 83308106 		ld	ra,104(sp)
 818              		.cfi_remember_state
 819              		.cfi_restore 1
 820 036c 03340106 		ld	s0,96(sp)
 821              		.cfi_restore 8
 822              		.cfi_def_cfa 2, 112
 823 0370 83348105 		ld	s1,88(sp)
 824              		.cfi_restore 9
 825 0374 13010107 		addi	sp,sp,112
 826              		.cfi_def_cfa_offset 0
 827 0378 67800000 		jr	ra
 828              	.L43:
 829              		.cfi_restore_state
 830              	.LBB98:
 831              	.LBB96:
 832              	.LBB92:
 111:src/Riscv.cpp ****                 PCB::dispatch();
 833              		.loc 1 111 17 is_stmt 1
 111:src/Riscv.cpp ****                 PCB::dispatch();
 834              		.loc 1 111 39 is_stmt 0
 835 037c 23B00400 		sd	zero,0(s1)
 112:src/Riscv.cpp ****             }
 836              		.loc 1 112 17 is_stmt 1
 112:src/Riscv.cpp ****             }
 837              		.loc 1 112 30 is_stmt 0
 838 0380 97000000 		call	_ZN3PCB8dispatchEv@plt
 838      E7800000 
 839              	.LVL51:
 840 0388 6FF01FFD 		j	.L28
 841              	.L40:
 842              	.LBE92:
 843              	.LBB93:
 148:src/Riscv.cpp ****                     MemoryAllocator::memAllocHandler();
 844              		.loc 1 148 17 is_stmt 1
 149:src/Riscv.cpp ****                     break;
 845              		.loc 1 149 21
 149:src/Riscv.cpp ****                     break;
 846              		.loc 1 149 53 is_stmt 0
 847 038c 97000000 		call	_ZN15MemoryAllocator15memAllocHandlerEv@plt
 847      E7800000 
 848              	.LVL52:
 150:src/Riscv.cpp ****                 case MemoryAllocator::MEM_FREE:
 849              		.loc 1 150 21 is_stmt 1
 850              	.L29:
 186:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 851              		.loc 1 186 13
 186:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 852              		.loc 1 186 29 is_stmt 0
GAS LISTING /tmp/ccUmrSFW.s 			page 26


 853 0394 833704FB 		ld	a5,-80(s0)
 854              	.LVL53:
 855              	.LBB75:
 856              	.LBB76:
 162:src/../h/Riscv.hpp **** }
 857              		.loc 2 162 5 is_stmt 1
 162:src/../h/Riscv.hpp **** }
 858              		.loc 2 162 57 is_stmt 0
 859              	#APP
 860              	# 162 "src/../h/Riscv.hpp" 1
 861              		csrw sstatus, a5
 862              	# 0 "" 2
 863              	.LVL54:
 864              	#NO_APP
 865              	.LBE76:
 866              	.LBE75:
 187:src/Riscv.cpp **** 
 867              		.loc 1 187 13 is_stmt 1
 187:src/Riscv.cpp **** 
 868              		.loc 1 187 26 is_stmt 0
 869 039c 833784FA 		ld	a5,-88(s0)
 870              	.LVL55:
 871              	.LBB77:
 872              	.LBB78:
 106:src/../h/Riscv.hpp **** }
 873              		.loc 2 106 5 is_stmt 1
 106:src/../h/Riscv.hpp **** }
 874              		.loc 2 106 51 is_stmt 0
 875              	#APP
 876              	# 106 "src/../h/Riscv.hpp" 1
 877              		csrw sepc, a5
 878              	# 0 "" 2
 879              	.LVL56:
 880              	#NO_APP
 881              	.LBE78:
 882              	.LBE77:
 883              	.LBE93:
 884              	.LBE96:
 885              	.LBE98:
 192:src/Riscv.cpp **** 
 886              		.loc 1 192 1
 887 03a4 6FF05FFC 		j	.L22
 888              	.L39:
 889              	.LBB99:
 890              	.LBB97:
 891              	.LBB94:
 151:src/Riscv.cpp ****                     MemoryAllocator::memFreeHandler();
 892              		.loc 1 151 17 is_stmt 1
 152:src/Riscv.cpp ****                     break;
 893              		.loc 1 152 21
 152:src/Riscv.cpp ****                     break;
 894              		.loc 1 152 52 is_stmt 0
 895 03a8 97000000 		call	_ZN15MemoryAllocator14memFreeHandlerEv@plt
 895      E7800000 
 896              	.LVL57:
 153:src/Riscv.cpp ****                 case PCB::THREAD_CREATE:
 897              		.loc 1 153 21 is_stmt 1
GAS LISTING /tmp/ccUmrSFW.s 			page 27


 898 03b0 6FF05FFE 		j	.L29
 899              	.L38:
 154:src/Riscv.cpp ****                     PCB::threadCreateHandler();
 900              		.loc 1 154 17
 155:src/Riscv.cpp ****                     break;
 901              		.loc 1 155 21
 155:src/Riscv.cpp ****                     break;
 902              		.loc 1 155 45 is_stmt 0
 903 03b4 97000000 		call	_ZN3PCB19threadCreateHandlerEv@plt
 903      E7800000 
 904              	.LVL58:
 156:src/Riscv.cpp ****                 case PCB::THREAD_DISPATCH:
 905              		.loc 1 156 21 is_stmt 1
 906 03bc 6FF09FFD 		j	.L29
 907              	.L36:
 157:src/Riscv.cpp ****                     PCB::threadDispatchHandler();
 908              		.loc 1 157 17
 158:src/Riscv.cpp ****                     break;
 909              		.loc 1 158 21
 158:src/Riscv.cpp ****                     break;
 910              		.loc 1 158 47 is_stmt 0
 911 03c0 97000000 		call	_ZN3PCB21threadDispatchHandlerEv@plt
 911      E7800000 
 912              	.LVL59:
 159:src/Riscv.cpp ****                 case PCB::THREAD_EXIT:
 913              		.loc 1 159 21 is_stmt 1
 914 03c8 6FF0DFFC 		j	.L29
 915              	.L37:
 160:src/Riscv.cpp ****                     PCB::threadExitHandler();
 916              		.loc 1 160 17
 161:src/Riscv.cpp ****                     break;
 917              		.loc 1 161 21
 161:src/Riscv.cpp ****                     break;
 918              		.loc 1 161 43 is_stmt 0
 919 03cc 97000000 		call	_ZN3PCB17threadExitHandlerEv@plt
 919      E7800000 
 920              	.LVL60:
 162:src/Riscv.cpp ****                 case PCB::TIME_SLEEP:
 921              		.loc 1 162 21 is_stmt 1
 922 03d4 6FF01FFC 		j	.L29
 923              	.L30:
 163:src/Riscv.cpp ****                     PCB::threadSleepHandler();
 924              		.loc 1 163 17
 164:src/Riscv.cpp ****                     break;
 925              		.loc 1 164 21
 164:src/Riscv.cpp ****                     break;
 926              		.loc 1 164 44 is_stmt 0
 927 03d8 97000000 		call	_ZN3PCB18threadSleepHandlerEv@plt
 927      E7800000 
 928              	.LVL61:
 165:src/Riscv.cpp ****                 case KSemaphore::SEM_OPEN:
 929              		.loc 1 165 21 is_stmt 1
 930 03e0 6FF05FFB 		j	.L29
 931              	.L35:
 166:src/Riscv.cpp ****                     KSemaphore::semOpenHandler();
 932              		.loc 1 166 17
 167:src/Riscv.cpp ****                     break;
GAS LISTING /tmp/ccUmrSFW.s 			page 28


 933              		.loc 1 167 21
 167:src/Riscv.cpp ****                     break;
 934              		.loc 1 167 47 is_stmt 0
 935 03e4 97000000 		call	_ZN10KSemaphore14semOpenHandlerEv@plt
 935      E7800000 
 936              	.LVL62:
 168:src/Riscv.cpp ****                 case KSemaphore::SEM_WAIT:
 937              		.loc 1 168 21 is_stmt 1
 938 03ec 6FF09FFA 		j	.L29
 939              	.L33:
 169:src/Riscv.cpp ****                     KSemaphore::semWaitHandler();
 940              		.loc 1 169 17
 170:src/Riscv.cpp ****                     break;
 941              		.loc 1 170 21
 170:src/Riscv.cpp ****                     break;
 942              		.loc 1 170 47 is_stmt 0
 943 03f0 97000000 		call	_ZN10KSemaphore14semWaitHandlerEv@plt
 943      E7800000 
 944              	.LVL63:
 171:src/Riscv.cpp ****                 case KSemaphore::SEM_SIGNAL:
 945              		.loc 1 171 21 is_stmt 1
 946 03f8 6FF0DFF9 		j	.L29
 947              	.L32:
 172:src/Riscv.cpp ****                     KSemaphore::semSignalHandler();
 948              		.loc 1 172 17
 173:src/Riscv.cpp ****                     break;
 949              		.loc 1 173 21
 173:src/Riscv.cpp ****                     break;
 950              		.loc 1 173 49 is_stmt 0
 951 03fc 97000000 		call	_ZN10KSemaphore16semSignalHandlerEv@plt
 951      E7800000 
 952              	.LVL64:
 174:src/Riscv.cpp ****                 case KSemaphore::SEM_CLOSE:
 953              		.loc 1 174 21 is_stmt 1
 954 0404 6FF01FF9 		j	.L29
 955              	.L34:
 175:src/Riscv.cpp ****                     KSemaphore::semCloseHandler();
 956              		.loc 1 175 17
 176:src/Riscv.cpp ****                     break;
 957              		.loc 1 176 21
 176:src/Riscv.cpp ****                     break;
 958              		.loc 1 176 48 is_stmt 0
 959 0408 97000000 		call	_ZN10KSemaphore15semCloseHandlerEv@plt
 959      E7800000 
 960              	.LVL65:
 177:src/Riscv.cpp ****                 case KConsole::CONSOLE_GETC:
 961              		.loc 1 177 21 is_stmt 1
 962 0410 6FF05FF8 		j	.L29
 963              	.LBE94:
 964              	.LBE97:
 965              	.LBE99:
 966              		.cfi_endproc
 967              	.LFE48:
 969              		.section	.rodata.str1.8,"aMS",@progbits,1
 970              		.align	3
 971              	.LC0:
 972 0000 456E642E 		.string	"End..."
GAS LISTING /tmp/ccUmrSFW.s 			page 29


 972      2E2E00
 973              		.text
 974              		.align	2
 975              		.globl	_ZN5Riscv10kernelMainEv
 977              	_ZN5Riscv10kernelMainEv:
 978              	.LFB49:
 195:src/Riscv.cpp ****     initSystem();
 979              		.loc 1 195 1
 980              		.cfi_startproc
 981              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 982              		.cfi_lsda 0x1b,.LLSDA49
 983 0414 130101FE 		addi	sp,sp,-32
 984              		.cfi_def_cfa_offset 32
 985 0418 233C1100 		sd	ra,24(sp)
 986 041c 23388100 		sd	s0,16(sp)
 987 0420 23349100 		sd	s1,8(sp)
 988 0424 23302101 		sd	s2,0(sp)
 989              		.cfi_offset 1, -8
 990              		.cfi_offset 8, -16
 991              		.cfi_offset 9, -24
 992              		.cfi_offset 18, -32
 993 0428 13040102 		addi	s0,sp,32
 994              		.cfi_def_cfa 8, 0
 196:src/Riscv.cpp **** 
 995              		.loc 1 196 5
 996              	.LEHB0:
 196:src/Riscv.cpp **** 
 997              		.loc 1 196 15 is_stmt 0
 998 042c 97000000 		call	_ZN5Riscv10initSystemEv
 998      E7800000 
 999              	.LVL66:
 200:src/Riscv.cpp ****     while(userPCB->getState() != PCB::FINISHED)
 1000              		.loc 1 200 5 is_stmt 1
 200:src/Riscv.cpp ****     while(userPCB->getState() != PCB::FINISHED)
 1001              		.loc 1 200 63 is_stmt 0
 1002 0434 37150000 		li	a0,4096
 1003 0438 97000000 		call	_Z7kmallocm@plt
 1003      E7800000 
 1004              	.LVL67:
 1005 0440 13090500 		mv	s2,a0
 200:src/Riscv.cpp ****     while(userPCB->getState() != PCB::FINISHED)
 1006              		.loc 1 200 103
 1007 0444 13050005 		li	a0,80
 1008 0448 97000000 		call	_ZN3PCBnwEm@plt
 1008      E7800000 
 1009              	.LVL68:
 1010              	.LEHE0:
 1011 0450 93040500 		mv	s1,a0
 1012 0454 13072000 		li	a4,2
 1013 0458 93060900 		mv	a3,s2
 1014 045c 13060000 		li	a2,0
 1015 0460 97050000 		lla	a1,_ZN5Riscv15userMainWrapperEPv
 1015      93850500 
 1016              	.LEHB1:
 1017 0468 97000000 		call	_ZN3PCBC1EPFvPvES0_S0_m@plt
 1017      E7800000 
 1018              	.LVL69:
GAS LISTING /tmp/ccUmrSFW.s 			page 30


 1019              	.LEHE1:
 1020              	.L46:
 201:src/Riscv.cpp ****     {
 1021              		.loc 1 201 5 is_stmt 1
 201:src/Riscv.cpp ****     {
 1022              		.loc 1 201 31
 1023              	.LBB100:
 1024              	.LBB101:
  30:src/../h/PCB.hpp **** 
  31:src/../h/PCB.hpp ****     void* operator new(size_t size);
  32:src/../h/PCB.hpp ****     void operator delete(void *p);
  33:src/../h/PCB.hpp **** 
  34:src/../h/PCB.hpp ****     enum State{READY, RUNNING, SUSPENDED, FINISHED, EXITING, SLEEPING};
  35:src/../h/PCB.hpp ****     State getState() {return state;}
 1025              		.loc 3 35 23
 1026              		.loc 3 35 30 is_stmt 0
 1027 0470 03A78403 		lw	a4,56(s1)
 1028              	.LVL70:
 1029              	.LBE101:
 1030              	.LBE100:
 201:src/Riscv.cpp ****     {
 1031              		.loc 1 201 31
 1032 0474 93073000 		li	a5,3
 1033 0478 6308F700 		beq	a4,a5,.L45
 203:src/Riscv.cpp ****     }
 1034              		.loc 1 203 9 is_stmt 1
 1035              	.LEHB2:
 203:src/Riscv.cpp ****     }
 1036              		.loc 1 203 24 is_stmt 0
 1037 047c 97000000 		call	thread_dispatch@plt
 1037      E7800000 
 1038              	.LVL71:
 201:src/Riscv.cpp ****     {
 1039              		.loc 1 201 5
 1040 0484 6FF0DFFE 		j	.L46
 1041              	.L45:
 210:src/Riscv.cpp **** 
 1042              		.loc 1 210 5 is_stmt 1
 210:src/Riscv.cpp **** 
 1043              		.loc 1 210 14 is_stmt 0
 1044 0488 97000000 		call	_ZN5Riscv9endSystemEv
 1044      E7800000 
 1045              	.LVL72:
 212:src/Riscv.cpp **** }
 1046              		.loc 1 212 5 is_stmt 1
 212:src/Riscv.cpp **** }
 1047              		.loc 1 212 23 is_stmt 0
 1048 0490 17050000 		lla	a0,.LC0
 1048      13050500 
 1049 0498 97000000 		call	_ZN5Riscv11printStringEPKc
 1049      E7800000 
 1050              	.LVL73:
 1051              	.LEHE2:
 213:src/Riscv.cpp **** 
 1052              		.loc 1 213 1
 1053 04a0 83308101 		ld	ra,24(sp)
 1054              		.cfi_remember_state
GAS LISTING /tmp/ccUmrSFW.s 			page 31


 1055              		.cfi_restore 1
 1056 04a4 03340101 		ld	s0,16(sp)
 1057              		.cfi_restore 8
 1058              		.cfi_def_cfa 2, 32
 1059 04a8 83348100 		ld	s1,8(sp)
 1060              		.cfi_restore 9
 1061 04ac 03390100 		ld	s2,0(sp)
 1062              		.cfi_restore 18
 1063 04b0 13010102 		addi	sp,sp,32
 1064              		.cfi_def_cfa_offset 0
 1065 04b4 67800000 		jr	ra
 1066              	.L48:
 1067              		.cfi_restore_state
 1068 04b8 13090500 		mv	s2,a0
 200:src/Riscv.cpp ****     while(userPCB->getState() != PCB::FINISHED)
 1069              		.loc 1 200 103
 1070 04bc 13850400 		mv	a0,s1
 1071 04c0 97000000 		call	_ZN3PCBdlEPv@plt
 1071      E7800000 
 1072              	.LVL74:
 1073 04c8 13050900 		mv	a0,s2
 1074              	.LEHB3:
 1075 04cc 97000000 		call	_Unwind_Resume@plt
 1075      E7800000 
 1076              	.LVL75:
 1077              	.LEHE3:
 1078              		.cfi_endproc
 1079              	.LFE49:
 1080              		.globl	__gxx_personality_v0
 1081              		.section	.gcc_except_table,"a",@progbits
 1082              	.LLSDA49:
 1083 0000 FF       		.byte	0xff
 1084 0001 FF       		.byte	0xff
 1085 0002 03       		.byte	0x3
 1086 0003 34       		.byte	0x34
 1087 0004 00000000 		.4byte	.LEHB0-.LFB49
 1088 0008 00000000 		.4byte	.LEHE0-.LEHB0
 1089 000c 00000000 		.4byte	0
 1090 0010 00       		.byte	0
 1091 0011 00000000 		.4byte	.LEHB1-.LFB49
 1092 0015 00000000 		.4byte	.LEHE1-.LEHB1
 1093 0019 00000000 		.4byte	.L48-.LFB49
 1094 001d 00       		.byte	0
 1095 001e 00000000 		.4byte	.LEHB2-.LFB49
 1096 0022 00000000 		.4byte	.LEHE2-.LEHB2
 1097 0026 00000000 		.4byte	0
 1098 002a 00       		.byte	0
 1099 002b 00000000 		.4byte	.LEHB3-.LFB49
 1100 002f 00000000 		.4byte	.LEHE3-.LEHB3
 1101 0033 00000000 		.4byte	0
 1102 0037 00       		.byte	0
 1103              		.text
 1105              		.bss
 1106              		.align	3
 1107              		.set	.LANCHOR1,. + 0
 1110              	_ZZN5Riscv20handleSupervisorTrapEvE5total:
 1111 0000 00000000 		.zero	8
GAS LISTING /tmp/ccUmrSFW.s 			page 32


 1111      00000000 
 1112              		.section	.rodata
 1113              		.align	3
 1114              		.set	.LANCHOR0,. + 0
 1117              	_ZZN5Riscv12printIntegerEmE6digits:
 1118 00c8 30313233 		.string	"0123456789"
 1118      34353637 
 1118      383900
 1119              		.text
 1120              	.Letext0:
 1121              		.file 4 "src/../h/../lib/hw.h"
 1122              		.file 5 "src/../h/MemoryAllocator.hpp"
 1123              		.file 6 "src/../h/KSemaphore.hpp"
 1124              		.file 7 "src/../h/SleepPCBList.hpp"
 1125              		.file 8 "src/../h/KConsole.hpp"
 1126              		.file 9 "src/../test/userMain.hpp"
 1127              		.file 10 "src/../h/syscall_c.h"
 1128              		.file 11 "src/../lib/console.h"
 5601              		.align	3
 5604              	DW.ref.__gxx_personality_v0:
 5605 0000 00000000 		.dword	__gxx_personality_v0
 5605      00000000 
 5606              		.ident	"GCC: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0"
 5607              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/ccUmrSFW.s 			page 33


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Riscv.cpp
     /tmp/ccUmrSFW.s:9      .text:0000000000000000 _ZN5Riscv15userMainWrapperEPv
     /tmp/ccUmrSFW.s:13     .text:0000000000000000 .L0 
     /tmp/ccUmrSFW.s:14     .text:0000000000000000 .L0 
     /tmp/ccUmrSFW.s:15     .text:0000000000000004 .L0 
     /tmp/ccUmrSFW.s:18     .text:000000000000000c .L0 
     /tmp/ccUmrSFW.s:19     .text:000000000000000c .L0 
     /tmp/ccUmrSFW.s:21     .text:0000000000000010 .L0 
     /tmp/ccUmrSFW.s:23     .text:0000000000000010 .L0 
     /tmp/ccUmrSFW.s:24     .text:0000000000000010 .L0 
     /tmp/ccUmrSFW.s:27     .text:0000000000000018 .L0 
     /tmp/ccUmrSFW.s:28     .text:000000000000001c .L0 
     /tmp/ccUmrSFW.s:30     .text:0000000000000020 .L0 
     /tmp/ccUmrSFW.s:31     .text:0000000000000020 .L0 
     /tmp/ccUmrSFW.s:33     .text:0000000000000024 .L0 
     /tmp/ccUmrSFW.s:35     .text:0000000000000028 .L0 
     /tmp/ccUmrSFW.s:41     .text:0000000000000028 _ZN5Riscv10initSystemEv
     /tmp/ccUmrSFW.s:44     .text:0000000000000028 .L0 
     /tmp/ccUmrSFW.s:45     .text:0000000000000028 .L0 
     /tmp/ccUmrSFW.s:46     .text:000000000000002c .L0 
     /tmp/ccUmrSFW.s:49     .text:0000000000000034 .L0 
     /tmp/ccUmrSFW.s:50     .text:0000000000000034 .L0 
     /tmp/ccUmrSFW.s:52     .text:0000000000000038 .L0 
     /tmp/ccUmrSFW.s:54     .text:0000000000000038 .L0 
     /tmp/ccUmrSFW.s:55     .text:0000000000000038 .L0 
     /tmp/ccUmrSFW.s:61     .text:0000000000000040 .L0 
  src/../h/Riscv.hpp:116    .text:0000000000000040 .L0 
     /tmp/ccUmrSFW.s:71     .text:0000000000000044 .L0 
     /tmp/ccUmrSFW.s:72     .text:0000000000000044 .L0 
     /tmp/ccUmrSFW.s:75     .text:000000000000004c .L0 
     /tmp/ccUmrSFW.s:76     .text:000000000000004c .L0 
     /tmp/ccUmrSFW.s:79     .text:0000000000000054 .L0 
     /tmp/ccUmrSFW.s:80     .text:0000000000000058 .L0 
     /tmp/ccUmrSFW.s:82     .text:000000000000005c .L0 
     /tmp/ccUmrSFW.s:83     .text:000000000000005c .L0 
     /tmp/ccUmrSFW.s:85     .text:0000000000000060 .L0 
     /tmp/ccUmrSFW.s:87     .text:0000000000000064 .L0 
     /tmp/ccUmrSFW.s:93     .text:0000000000000064 _ZN5Riscv16enableInterruptsEv
     /tmp/ccUmrSFW.s:96     .text:0000000000000064 .L0 
     /tmp/ccUmrSFW.s:97     .text:0000000000000064 .L0 
     /tmp/ccUmrSFW.s:98     .text:0000000000000068 .L0 
     /tmp/ccUmrSFW.s:100    .text:000000000000006c .L0 
     /tmp/ccUmrSFW.s:102    .text:0000000000000070 .L0 
     /tmp/ccUmrSFW.s:107    .text:0000000000000070 .L0 
     /tmp/ccUmrSFW.s:108    .text:0000000000000070 .L0 
     /tmp/ccUmrSFW.s:109    .text:0000000000000070 .L0 
     /tmp/ccUmrSFW.s:119    .text:0000000000000078 .L0 
     /tmp/ccUmrSFW.s:120    .text:000000000000007c .L0 
     /tmp/ccUmrSFW.s:121    .text:000000000000007c .L0 
     /tmp/ccUmrSFW.s:123    .text:0000000000000080 .L0 
     /tmp/ccUmrSFW.s:125    .text:0000000000000084 .L0 
     /tmp/ccUmrSFW.s:131    .text:0000000000000084 _ZN5Riscv17disableInterruptsEv
     /tmp/ccUmrSFW.s:134    .text:0000000000000084 .L0 
     /tmp/ccUmrSFW.s:135    .text:0000000000000084 .L0 
     /tmp/ccUmrSFW.s:136    .text:0000000000000088 .L0 
     /tmp/ccUmrSFW.s:138    .text:000000000000008c .L0 
GAS LISTING /tmp/ccUmrSFW.s 			page 34


     /tmp/ccUmrSFW.s:140    .text:0000000000000090 .L0 
     /tmp/ccUmrSFW.s:145    .text:0000000000000090 .L0 
     /tmp/ccUmrSFW.s:146    .text:0000000000000090 .L0 
     /tmp/ccUmrSFW.s:147    .text:0000000000000090 .L0 
     /tmp/ccUmrSFW.s:157    .text:0000000000000098 .L0 
     /tmp/ccUmrSFW.s:158    .text:000000000000009c .L0 
     /tmp/ccUmrSFW.s:159    .text:000000000000009c .L0 
     /tmp/ccUmrSFW.s:161    .text:00000000000000a0 .L0 
     /tmp/ccUmrSFW.s:163    .text:00000000000000a4 .L0 
     /tmp/ccUmrSFW.s:169    .text:00000000000000a4 _ZN5Riscv9endSystemEv
     /tmp/ccUmrSFW.s:172    .text:00000000000000a4 .L0 
     /tmp/ccUmrSFW.s:173    .text:00000000000000a4 .L0 
     /tmp/ccUmrSFW.s:174    .text:00000000000000a8 .L0 
     /tmp/ccUmrSFW.s:177    .text:00000000000000b0 .L0 
     /tmp/ccUmrSFW.s:178    .text:00000000000000b0 .L0 
     /tmp/ccUmrSFW.s:180    .text:00000000000000b4 .L0 
     /tmp/ccUmrSFW.s:182    .text:00000000000000b4 .L0 
     /tmp/ccUmrSFW.s:183    .text:00000000000000b4 .L0 
     /tmp/ccUmrSFW.s:186    .text:00000000000000bc .L0 
     /tmp/ccUmrSFW.s:187    .text:00000000000000c0 .L0 
     /tmp/ccUmrSFW.s:189    .text:00000000000000c4 .L0 
     /tmp/ccUmrSFW.s:190    .text:00000000000000c4 .L0 
     /tmp/ccUmrSFW.s:192    .text:00000000000000c8 .L0 
     /tmp/ccUmrSFW.s:194    .text:00000000000000cc .L0 
     /tmp/ccUmrSFW.s:200    .text:00000000000000cc _ZN5Riscv10popSppSpieEv
     /tmp/ccUmrSFW.s:203    .text:00000000000000cc .L0 
     /tmp/ccUmrSFW.s:204    .text:00000000000000cc .L0 
     /tmp/ccUmrSFW.s:205    .text:00000000000000d0 .L0 
     /tmp/ccUmrSFW.s:207    .text:00000000000000d4 .L0 
     /tmp/ccUmrSFW.s:209    .text:00000000000000d8 .L0 
     /tmp/ccUmrSFW.s:211    .text:00000000000000d8 .L0 
       src/Riscv.cpp:40     .text:00000000000000d8 .L0 
     /tmp/ccUmrSFW.s:217    .text:00000000000000dc .L0 
       src/Riscv.cpp:41     .text:00000000000000dc .L0 
     /tmp/ccUmrSFW.s:223    .text:00000000000000e0 .L0 
     /tmp/ccUmrSFW.s:224    .text:00000000000000e4 .L0 
     /tmp/ccUmrSFW.s:225    .text:00000000000000e4 .L0 
     /tmp/ccUmrSFW.s:227    .text:00000000000000e8 .L0 
     /tmp/ccUmrSFW.s:229    .text:00000000000000ec .L0 
     /tmp/ccUmrSFW.s:235    .text:00000000000000ec _ZN5Riscv11printStringEPKc
     /tmp/ccUmrSFW.s:238    .text:00000000000000ec .L0 
     /tmp/ccUmrSFW.s:240    .text:00000000000000ec .L0 
     /tmp/ccUmrSFW.s:241    .text:00000000000000f0 .L0 
     /tmp/ccUmrSFW.s:246    .text:0000000000000100 .L0 
     /tmp/ccUmrSFW.s:247    .text:0000000000000100 .L0 
     /tmp/ccUmrSFW.s:248    .text:0000000000000100 .L0 
     /tmp/ccUmrSFW.s:249    .text:0000000000000100 .L0 
     /tmp/ccUmrSFW.s:251    .text:0000000000000104 .L0 
     /tmp/ccUmrSFW.s:256    .text:0000000000000108 .L0 
     /tmp/ccUmrSFW.s:257    .text:0000000000000108 .L0 
     /tmp/ccUmrSFW.s:258    .text:0000000000000108 .L0 
  src/../h/Riscv.hpp:157    .text:0000000000000108 .L0 
     /tmp/ccUmrSFW.s:266    .text:0000000000000110 .L0 
     /tmp/ccUmrSFW.s:267    .text:0000000000000110 .L0 
     /tmp/ccUmrSFW.s:274    .text:0000000000000114 .L0 
     /tmp/ccUmrSFW.s:275    .text:0000000000000114 .L0 
     /tmp/ccUmrSFW.s:276    .text:0000000000000114 .L0 
GAS LISTING /tmp/ccUmrSFW.s 			page 35


     /tmp/ccUmrSFW.s:287    .text:000000000000011c .L0 
     /tmp/ccUmrSFW.s:288    .text:000000000000011c .L0 
     /tmp/ccUmrSFW.s:289    .text:000000000000011c .L0 
     /tmp/ccUmrSFW.s:291    .text:0000000000000120 .L0 
     /tmp/ccUmrSFW.s:293    .text:0000000000000124 .L0 
     /tmp/ccUmrSFW.s:294    .text:0000000000000124 .L0 
     /tmp/ccUmrSFW.s:297    .text:000000000000012c .L0 
     /tmp/ccUmrSFW.s:298    .text:000000000000012c .L0 
     /tmp/ccUmrSFW.s:301    .text:0000000000000130 .L0 
     /tmp/ccUmrSFW.s:304    .text:0000000000000134 .L0 
     /tmp/ccUmrSFW.s:305    .text:0000000000000134 .L0 
     /tmp/ccUmrSFW.s:308    .text:0000000000000138 .L0 
     /tmp/ccUmrSFW.s:314    .text:0000000000000140 .L0 
  src/../h/Riscv.hpp:148    .text:0000000000000140 .L0 
     /tmp/ccUmrSFW.s:324    .text:0000000000000144 .L0 
     /tmp/ccUmrSFW.s:325    .text:0000000000000148 .L0 
     /tmp/ccUmrSFW.s:327    .text:000000000000014c .L0 
     /tmp/ccUmrSFW.s:328    .text:000000000000014c .L0 
     /tmp/ccUmrSFW.s:330    .text:0000000000000150 .L0 
     /tmp/ccUmrSFW.s:333    .text:0000000000000154 .L0 
     /tmp/ccUmrSFW.s:335    .text:0000000000000158 .L0 
     /tmp/ccUmrSFW.s:337    .text:000000000000015c .L0 
     /tmp/ccUmrSFW.s:343    .text:000000000000015c _ZN5Riscv12printIntegerEm
     /tmp/ccUmrSFW.s:346    .text:000000000000015c .L0 
     /tmp/ccUmrSFW.s:348    .text:000000000000015c .L0 
     /tmp/ccUmrSFW.s:349    .text:0000000000000160 .L0 
     /tmp/ccUmrSFW.s:354    .text:0000000000000170 .L0 
     /tmp/ccUmrSFW.s:355    .text:0000000000000170 .L0 
     /tmp/ccUmrSFW.s:356    .text:0000000000000170 .L0 
     /tmp/ccUmrSFW.s:357    .text:0000000000000170 .L0 
     /tmp/ccUmrSFW.s:359    .text:0000000000000174 .L0 
     /tmp/ccUmrSFW.s:363    .text:0000000000000174 .L0 
     /tmp/ccUmrSFW.s:364    .text:0000000000000174 .L0 
     /tmp/ccUmrSFW.s:365    .text:0000000000000174 .L0 
  src/../h/Riscv.hpp:157    .text:0000000000000174 .L0 
     /tmp/ccUmrSFW.s:373    .text:000000000000017c .L0 
     /tmp/ccUmrSFW.s:374    .text:000000000000017c .L0 
     /tmp/ccUmrSFW.s:381    .text:0000000000000180 .L0 
     /tmp/ccUmrSFW.s:382    .text:0000000000000180 .L0 
     /tmp/ccUmrSFW.s:383    .text:0000000000000180 .L0 
     /tmp/ccUmrSFW.s:393    .text:0000000000000188 .L0 
     /tmp/ccUmrSFW.s:394    .text:0000000000000188 .L0 
     /tmp/ccUmrSFW.s:395    .text:0000000000000188 .L0 
     /tmp/ccUmrSFW.s:396    .text:0000000000000188 .L0 
     /tmp/ccUmrSFW.s:397    .text:0000000000000188 .L0 
     /tmp/ccUmrSFW.s:398    .text:0000000000000188 .L0 
     /tmp/ccUmrSFW.s:399    .text:0000000000000188 .L0 
     /tmp/ccUmrSFW.s:400    .text:0000000000000188 .L0 
     /tmp/ccUmrSFW.s:403    .text:000000000000018c .L0 
     /tmp/ccUmrSFW.s:404    .text:000000000000018c .L0 
     /tmp/ccUmrSFW.s:408    .text:0000000000000190 .L0 
     /tmp/ccUmrSFW.s:409    .text:0000000000000190 .L0 
     /tmp/ccUmrSFW.s:410    .text:0000000000000190 .L0 
     /tmp/ccUmrSFW.s:414    .text:0000000000000198 .L0 
     /tmp/ccUmrSFW.s:420    .text:00000000000001b0 .L0 
     /tmp/ccUmrSFW.s:426    .text:00000000000001c0 .L0 
     /tmp/ccUmrSFW.s:428    .text:00000000000001c4 .L0 
GAS LISTING /tmp/ccUmrSFW.s 			page 36


     /tmp/ccUmrSFW.s:431    .text:00000000000001c8 .L0 
     /tmp/ccUmrSFW.s:436    .text:00000000000001d0 .L0 
     /tmp/ccUmrSFW.s:437    .text:00000000000001d0 .L0 
     /tmp/ccUmrSFW.s:441    .text:00000000000001d8 .L0 
     /tmp/ccUmrSFW.s:442    .text:00000000000001d8 .L0 
     /tmp/ccUmrSFW.s:450    .text:00000000000001f0 .L0 
     /tmp/ccUmrSFW.s:451    .text:00000000000001f0 .L0 
     /tmp/ccUmrSFW.s:455    .text:00000000000001fc .L0 
     /tmp/ccUmrSFW.s:456    .text:00000000000001fc .L0 
     /tmp/ccUmrSFW.s:459    .text:0000000000000200 .L0 
     /tmp/ccUmrSFW.s:465    .text:0000000000000208 .L0 
  src/../h/Riscv.hpp:148    .text:0000000000000208 .L0 
     /tmp/ccUmrSFW.s:475    .text:000000000000020c .L0 
     /tmp/ccUmrSFW.s:476    .text:0000000000000210 .L0 
     /tmp/ccUmrSFW.s:478    .text:0000000000000214 .L0 
     /tmp/ccUmrSFW.s:479    .text:0000000000000214 .L0 
     /tmp/ccUmrSFW.s:481    .text:0000000000000218 .L0 
     /tmp/ccUmrSFW.s:483    .text:000000000000021c .L0 
     /tmp/ccUmrSFW.s:485    .text:0000000000000220 .L0 
     /tmp/ccUmrSFW.s:487    .text:0000000000000224 .L0 
     /tmp/ccUmrSFW.s:493    .text:0000000000000224 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccUmrSFW.s:496    .text:0000000000000224 .L0 
     /tmp/ccUmrSFW.s:497    .text:0000000000000224 .L0 
     /tmp/ccUmrSFW.s:498    .text:0000000000000228 .L0 
     /tmp/ccUmrSFW.s:502    .text:0000000000000234 .L0 
     /tmp/ccUmrSFW.s:503    .text:0000000000000234 .L0 
     /tmp/ccUmrSFW.s:504    .text:0000000000000234 .L0 
     /tmp/ccUmrSFW.s:506    .text:0000000000000238 .L0 
     /tmp/ccUmrSFW.s:508    .text:0000000000000238 .L0 
       src/Riscv.cpp:92     .text:0000000000000238 .L0 
     /tmp/ccUmrSFW.s:519    .text:0000000000000248 .L0 
     /tmp/ccUmrSFW.s:520    .text:0000000000000248 .L0 
     /tmp/ccUmrSFW.s:521    .text:0000000000000248 .L0 
  src/../h/Riscv.hpp:91     .text:0000000000000248 .L0 
     /tmp/ccUmrSFW.s:529    .text:0000000000000250 .L0 
     /tmp/ccUmrSFW.s:530    .text:0000000000000250 .L0 
     /tmp/ccUmrSFW.s:536    .text:0000000000000254 .L0 
     /tmp/ccUmrSFW.s:550    .text:0000000000000280 .L0 
     /tmp/ccUmrSFW.s:551    .text:0000000000000280 .L0 
     /tmp/ccUmrSFW.s:553    .text:0000000000000280 .L0 
     /tmp/ccUmrSFW.s:554    .text:0000000000000280 .L0 
     /tmp/ccUmrSFW.s:555    .text:0000000000000280 .L0 
       src/Riscv.cpp:141    .text:0000000000000280 .L0 
     /tmp/ccUmrSFW.s:565    .text:0000000000000284 .L0 
     /tmp/ccUmrSFW.s:566    .text:0000000000000284 .L0 
     /tmp/ccUmrSFW.s:567    .text:0000000000000284 .L0 
  src/../h/Riscv.hpp:101    .text:0000000000000284 .L0 
     /tmp/ccUmrSFW.s:575    .text:000000000000028c .L0 
     /tmp/ccUmrSFW.s:576    .text:000000000000028c .L0 
     /tmp/ccUmrSFW.s:580    .text:0000000000000290 .L0 
     /tmp/ccUmrSFW.s:582    .text:0000000000000294 .L0 
     /tmp/ccUmrSFW.s:586    .text:0000000000000298 .L0 
     /tmp/ccUmrSFW.s:587    .text:0000000000000298 .L0 
     /tmp/ccUmrSFW.s:588    .text:0000000000000298 .L0 
  src/../h/Riscv.hpp:157    .text:0000000000000298 .L0 
     /tmp/ccUmrSFW.s:596    .text:00000000000002a0 .L0 
     /tmp/ccUmrSFW.s:597    .text:00000000000002a0 .L0 
GAS LISTING /tmp/ccUmrSFW.s 			page 37


     /tmp/ccUmrSFW.s:601    .text:00000000000002a4 .L0 
     /tmp/ccUmrSFW.s:603    .text:00000000000002a8 .L0 
     /tmp/ccUmrSFW.s:672    .text:00000000000002cc .L0 
     /tmp/ccUmrSFW.s:678    .text:00000000000002dc .L0 
     /tmp/ccUmrSFW.s:679    .text:00000000000002dc .L0 
     /tmp/ccUmrSFW.s:680    .text:00000000000002dc .L0 
     /tmp/ccUmrSFW.s:681    .text:00000000000002dc .L0 
     /tmp/ccUmrSFW.s:684    .text:00000000000002e4 .L0 
     /tmp/ccUmrSFW.s:688    .text:00000000000002e8 .L0 
     /tmp/ccUmrSFW.s:690    .text:00000000000002e8 .L0 
     /tmp/ccUmrSFW.s:693    .text:00000000000002e8 .L0 
     /tmp/ccUmrSFW.s:694    .text:00000000000002e8 .L0 
     /tmp/ccUmrSFW.s:695    .text:00000000000002e8 .L0 
  src/../h/Riscv.hpp:101    .text:00000000000002e8 .L0 
     /tmp/ccUmrSFW.s:704    .text:00000000000002f0 .L0 
     /tmp/ccUmrSFW.s:705    .text:00000000000002f0 .L0 
     /tmp/ccUmrSFW.s:709    .text:00000000000002f4 .L0 
     /tmp/ccUmrSFW.s:713    .text:00000000000002f8 .L0 
     /tmp/ccUmrSFW.s:714    .text:00000000000002f8 .L0 
     /tmp/ccUmrSFW.s:715    .text:00000000000002f8 .L0 
  src/../h/Riscv.hpp:157    .text:00000000000002f8 .L0 
     /tmp/ccUmrSFW.s:723    .text:0000000000000300 .L0 
     /tmp/ccUmrSFW.s:724    .text:0000000000000300 .L0 
     /tmp/ccUmrSFW.s:728    .text:0000000000000304 .L0 
     /tmp/ccUmrSFW.s:733    .text:0000000000000308 .L0 
     /tmp/ccUmrSFW.s:734    .text:0000000000000308 .L0 
     /tmp/ccUmrSFW.s:735    .text:0000000000000308 .L0 
     /tmp/ccUmrSFW.s:745    .text:0000000000000310 .L0 
     /tmp/ccUmrSFW.s:746    .text:0000000000000310 .L0 
     /tmp/ccUmrSFW.s:747    .text:0000000000000310 .L0 
     /tmp/ccUmrSFW.s:752    .text:0000000000000324 .L0 
     /tmp/ccUmrSFW.s:753    .text:0000000000000324 .L0 
     /tmp/ccUmrSFW.s:758    .text:0000000000000338 .L0 
     /tmp/ccUmrSFW.s:759    .text:0000000000000338 .L0 
     /tmp/ccUmrSFW.s:762    .text:0000000000000340 .L0 
     /tmp/ccUmrSFW.s:763    .text:0000000000000340 .L0 
     /tmp/ccUmrSFW.s:770    .text:000000000000034c .L0 
     /tmp/ccUmrSFW.s:771    .text:000000000000034c .L0 
     /tmp/ccUmrSFW.s:776    .text:0000000000000350 .L0 
     /tmp/ccUmrSFW.s:778    .text:0000000000000354 .L0 
     /tmp/ccUmrSFW.s:781    .text:0000000000000358 .L0 
     /tmp/ccUmrSFW.s:782    .text:0000000000000358 .L0 
     /tmp/ccUmrSFW.s:787    .text:000000000000035c .L0 
  src/../h/Riscv.hpp:162    .text:000000000000035c .L0 
     /tmp/ccUmrSFW.s:797    .text:0000000000000360 .L0 
     /tmp/ccUmrSFW.s:798    .text:0000000000000360 .L0 
     /tmp/ccUmrSFW.s:803    .text:0000000000000364 .L0 
  src/../h/Riscv.hpp:106    .text:0000000000000364 .L0 
     /tmp/ccUmrSFW.s:817    .text:0000000000000368 .L0 
     /tmp/ccUmrSFW.s:818    .text:000000000000036c .L0 
     /tmp/ccUmrSFW.s:819    .text:000000000000036c .L0 
     /tmp/ccUmrSFW.s:821    .text:0000000000000370 .L0 
     /tmp/ccUmrSFW.s:822    .text:0000000000000370 .L0 
     /tmp/ccUmrSFW.s:824    .text:0000000000000374 .L0 
     /tmp/ccUmrSFW.s:826    .text:0000000000000378 .L0 
     /tmp/ccUmrSFW.s:829    .text:000000000000037c .L0 
     /tmp/ccUmrSFW.s:834    .text:000000000000037c .L0 
GAS LISTING /tmp/ccUmrSFW.s 			page 38


     /tmp/ccUmrSFW.s:835    .text:000000000000037c .L0 
     /tmp/ccUmrSFW.s:837    .text:0000000000000380 .L0 
     /tmp/ccUmrSFW.s:838    .text:0000000000000380 .L0 
     /tmp/ccUmrSFW.s:845    .text:000000000000038c .L0 
     /tmp/ccUmrSFW.s:846    .text:000000000000038c .L0 
     /tmp/ccUmrSFW.s:847    .text:000000000000038c .L0 
     /tmp/ccUmrSFW.s:851    .text:0000000000000394 .L0 
     /tmp/ccUmrSFW.s:852    .text:0000000000000394 .L0 
     /tmp/ccUmrSFW.s:853    .text:0000000000000394 .L0 
     /tmp/ccUmrSFW.s:858    .text:0000000000000398 .L0 
  src/../h/Riscv.hpp:162    .text:0000000000000398 .L0 
     /tmp/ccUmrSFW.s:868    .text:000000000000039c .L0 
     /tmp/ccUmrSFW.s:869    .text:000000000000039c .L0 
     /tmp/ccUmrSFW.s:874    .text:00000000000003a0 .L0 
  src/../h/Riscv.hpp:106    .text:00000000000003a0 .L0 
     /tmp/ccUmrSFW.s:887    .text:00000000000003a4 .L0 
     /tmp/ccUmrSFW.s:893    .text:00000000000003a8 .L0 
     /tmp/ccUmrSFW.s:894    .text:00000000000003a8 .L0 
     /tmp/ccUmrSFW.s:895    .text:00000000000003a8 .L0 
     /tmp/ccUmrSFW.s:898    .text:00000000000003b0 .L0 
     /tmp/ccUmrSFW.s:901    .text:00000000000003b4 .L0 
     /tmp/ccUmrSFW.s:902    .text:00000000000003b4 .L0 
     /tmp/ccUmrSFW.s:903    .text:00000000000003b4 .L0 
     /tmp/ccUmrSFW.s:906    .text:00000000000003bc .L0 
     /tmp/ccUmrSFW.s:909    .text:00000000000003c0 .L0 
     /tmp/ccUmrSFW.s:910    .text:00000000000003c0 .L0 
     /tmp/ccUmrSFW.s:911    .text:00000000000003c0 .L0 
     /tmp/ccUmrSFW.s:914    .text:00000000000003c8 .L0 
     /tmp/ccUmrSFW.s:917    .text:00000000000003cc .L0 
     /tmp/ccUmrSFW.s:918    .text:00000000000003cc .L0 
     /tmp/ccUmrSFW.s:919    .text:00000000000003cc .L0 
     /tmp/ccUmrSFW.s:922    .text:00000000000003d4 .L0 
     /tmp/ccUmrSFW.s:925    .text:00000000000003d8 .L0 
     /tmp/ccUmrSFW.s:926    .text:00000000000003d8 .L0 
     /tmp/ccUmrSFW.s:927    .text:00000000000003d8 .L0 
     /tmp/ccUmrSFW.s:930    .text:00000000000003e0 .L0 
     /tmp/ccUmrSFW.s:933    .text:00000000000003e4 .L0 
     /tmp/ccUmrSFW.s:934    .text:00000000000003e4 .L0 
     /tmp/ccUmrSFW.s:935    .text:00000000000003e4 .L0 
     /tmp/ccUmrSFW.s:938    .text:00000000000003ec .L0 
     /tmp/ccUmrSFW.s:941    .text:00000000000003f0 .L0 
     /tmp/ccUmrSFW.s:942    .text:00000000000003f0 .L0 
     /tmp/ccUmrSFW.s:943    .text:00000000000003f0 .L0 
     /tmp/ccUmrSFW.s:946    .text:00000000000003f8 .L0 
     /tmp/ccUmrSFW.s:949    .text:00000000000003fc .L0 
     /tmp/ccUmrSFW.s:950    .text:00000000000003fc .L0 
     /tmp/ccUmrSFW.s:951    .text:00000000000003fc .L0 
     /tmp/ccUmrSFW.s:954    .text:0000000000000404 .L0 
     /tmp/ccUmrSFW.s:957    .text:0000000000000408 .L0 
     /tmp/ccUmrSFW.s:958    .text:0000000000000408 .L0 
     /tmp/ccUmrSFW.s:959    .text:0000000000000408 .L0 
     /tmp/ccUmrSFW.s:962    .text:0000000000000410 .L0 
     /tmp/ccUmrSFW.s:966    .text:0000000000000414 .L0 
     /tmp/ccUmrSFW.s:977    .text:0000000000000414 _ZN5Riscv10kernelMainEv
     /tmp/ccUmrSFW.s:980    .text:0000000000000414 .L0 
     /tmp/ccUmrSFW.s:5604   .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/ccUmrSFW.s:983    .text:0000000000000414 .L0 
GAS LISTING /tmp/ccUmrSFW.s 			page 39


     /tmp/ccUmrSFW.s:984    .text:0000000000000418 .L0 
     /tmp/ccUmrSFW.s:989    .text:0000000000000428 .L0 
     /tmp/ccUmrSFW.s:990    .text:0000000000000428 .L0 
     /tmp/ccUmrSFW.s:991    .text:0000000000000428 .L0 
     /tmp/ccUmrSFW.s:992    .text:0000000000000428 .L0 
     /tmp/ccUmrSFW.s:994    .text:000000000000042c .L0 
     /tmp/ccUmrSFW.s:997    .text:000000000000042c .L0 
     /tmp/ccUmrSFW.s:998    .text:000000000000042c .L0 
     /tmp/ccUmrSFW.s:1001   .text:0000000000000434 .L0 
     /tmp/ccUmrSFW.s:1002   .text:0000000000000434 .L0 
     /tmp/ccUmrSFW.s:1007   .text:0000000000000444 .L0 
     /tmp/ccUmrSFW.s:1022   .text:0000000000000470 .L0 
     /tmp/ccUmrSFW.s:1025   .text:0000000000000470 .L0 
     /tmp/ccUmrSFW.s:1026   .text:0000000000000470 .L0 
     /tmp/ccUmrSFW.s:1027   .text:0000000000000470 .L0 
     /tmp/ccUmrSFW.s:1032   .text:0000000000000474 .L0 
     /tmp/ccUmrSFW.s:1036   .text:000000000000047c .L0 
     /tmp/ccUmrSFW.s:1037   .text:000000000000047c .L0 
     /tmp/ccUmrSFW.s:1040   .text:0000000000000484 .L0 
     /tmp/ccUmrSFW.s:1043   .text:0000000000000488 .L0 
     /tmp/ccUmrSFW.s:1044   .text:0000000000000488 .L0 
     /tmp/ccUmrSFW.s:1047   .text:0000000000000490 .L0 
     /tmp/ccUmrSFW.s:1048   .text:0000000000000490 .L0 
     /tmp/ccUmrSFW.s:1053   .text:00000000000004a0 .L0 
     /tmp/ccUmrSFW.s:1054   .text:00000000000004a4 .L0 
     /tmp/ccUmrSFW.s:1055   .text:00000000000004a4 .L0 
     /tmp/ccUmrSFW.s:1057   .text:00000000000004a8 .L0 
     /tmp/ccUmrSFW.s:1058   .text:00000000000004a8 .L0 
     /tmp/ccUmrSFW.s:1060   .text:00000000000004ac .L0 
     /tmp/ccUmrSFW.s:1062   .text:00000000000004b0 .L0 
     /tmp/ccUmrSFW.s:1064   .text:00000000000004b4 .L0 
     /tmp/ccUmrSFW.s:1067   .text:00000000000004b8 .L0 
     /tmp/ccUmrSFW.s:1070   .text:00000000000004bc .L0 
     /tmp/ccUmrSFW.s:1078   .text:00000000000004d4 .L0 
     /tmp/ccUmrSFW.s:1107   .bss:0000000000000000 .LANCHOR1
     /tmp/ccUmrSFW.s:1110   .bss:0000000000000000 _ZZN5Riscv20handleSupervisorTrapEvE5total
     /tmp/ccUmrSFW.s:1114   .rodata:00000000000000c8 .LANCHOR0
     /tmp/ccUmrSFW.s:1117   .rodata:00000000000000c8 _ZZN5Riscv12printIntegerEmE6digits
     /tmp/ccUmrSFW.s:1129   .text:00000000000004d4 .L0 
     /tmp/ccUmrSFW.s:55     .text:0000000000000038 .L0 
     /tmp/ccUmrSFW.s:416    .text:00000000000001a0 .L0 
     /tmp/ccUmrSFW.s:514    .text:000000000000023c .L0 
     /tmp/ccUmrSFW.s:615    .rodata:0000000000000000 .L31
     /tmp/ccUmrSFW.s:607    .text:00000000000002b4 .L0 
     /tmp/ccUmrSFW.s:747    .text:0000000000000310 .L0 
     /tmp/ccUmrSFW.s:753    .text:0000000000000324 .L0 
     /tmp/ccUmrSFW.s:763    .text:0000000000000340 .L0 
     /tmp/ccUmrSFW.s:1015   .text:0000000000000460 .L0 
     /tmp/ccUmrSFW.s:971    .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccUmrSFW.s:1048   .text:0000000000000490 .L0 
     /tmp/ccUmrSFW.s:302    .text:0000000000000134 .L14
     /tmp/ccUmrSFW.s:283    .text:000000000000011c .L15
     /tmp/ccUmrSFW.s:406    .text:0000000000000190 .L18
     /tmp/ccUmrSFW.s:448    .text:00000000000001f0 .L19
     /tmp/ccUmrSFW.s:434    .text:00000000000001d0 .L20
     /tmp/ccUmrSFW.s:686    .text:00000000000002e8 .L23
     /tmp/ccUmrSFW.s:668    .text:00000000000002cc .L24
GAS LISTING /tmp/ccUmrSFW.s 			page 40


     /tmp/ccUmrSFW.s:810    .text:0000000000000368 .L22
     /tmp/ccUmrSFW.s:850    .text:0000000000000394 .L29
     /tmp/ccUmrSFW.s:828    .text:000000000000037c .L43
     /tmp/ccUmrSFW.s:779    .text:0000000000000358 .L28
     /tmp/ccUmrSFW.s:1041   .text:0000000000000488 .L45
     /tmp/ccUmrSFW.s:1020   .text:0000000000000470 .L46
     /tmp/ccUmrSFW.s:841    .text:000000000000038c .L40
     /tmp/ccUmrSFW.s:888    .text:00000000000003a8 .L39
     /tmp/ccUmrSFW.s:899    .text:00000000000003b4 .L38
     /tmp/ccUmrSFW.s:915    .text:00000000000003cc .L37
     /tmp/ccUmrSFW.s:907    .text:00000000000003c0 .L36
     /tmp/ccUmrSFW.s:931    .text:00000000000003e4 .L35
     /tmp/ccUmrSFW.s:955    .text:0000000000000408 .L34
     /tmp/ccUmrSFW.s:939    .text:00000000000003f0 .L33
     /tmp/ccUmrSFW.s:947    .text:00000000000003fc .L32
     /tmp/ccUmrSFW.s:923    .text:00000000000003d8 .L30
     /tmp/ccUmrSFW.s:996    .text:000000000000042c .LEHB0
     /tmp/ccUmrSFW.s:978    .text:0000000000000414 .LFB49
     /tmp/ccUmrSFW.s:1010   .text:0000000000000450 .LEHE0
     /tmp/ccUmrSFW.s:1016   .text:0000000000000468 .LEHB1
     /tmp/ccUmrSFW.s:1019   .text:0000000000000470 .LEHE1
     /tmp/ccUmrSFW.s:1066   .text:00000000000004b8 .L48
     /tmp/ccUmrSFW.s:1035   .text:000000000000047c .LEHB2
     /tmp/ccUmrSFW.s:1051   .text:00000000000004a0 .LEHE2
     /tmp/ccUmrSFW.s:1074   .text:00000000000004cc .LEHB3
     /tmp/ccUmrSFW.s:1077   .text:00000000000004d4 .LEHE3
     /tmp/ccUmrSFW.s:3613   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccUmrSFW.s:5088   .debug_str:000000000000026b .LASF277
     /tmp/ccUmrSFW.s:5118   .debug_str:0000000000000401 .LASF278
     /tmp/ccUmrSFW.s:5494   .debug_str:0000000000001047 .LASF279
     /tmp/ccUmrSFW.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccUmrSFW.s:1120   .text:00000000000004d4 .Letext0
     /tmp/ccUmrSFW.s:5026   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccUmrSFW.s:5222   .debug_str:000000000000077d .LASF0
     /tmp/ccUmrSFW.s:5388   .debug_str:0000000000000d29 .LASF3
     /tmp/ccUmrSFW.s:5258   .debug_str:00000000000008ad .LASF1
     /tmp/ccUmrSFW.s:5400   .debug_str:0000000000000d84 .LASF2
     /tmp/ccUmrSFW.s:5418   .debug_str:0000000000000e1b .LASF4
     /tmp/ccUmrSFW.s:5240   .debug_str:000000000000080a .LASF5
     /tmp/ccUmrSFW.s:5052   .debug_str:00000000000000f1 .LASF6
     /tmp/ccUmrSFW.s:5366   .debug_str:0000000000000c77 .LASF7
     /tmp/ccUmrSFW.s:5354   .debug_str:0000000000000c21 .LASF8
     /tmp/ccUmrSFW.s:5248   .debug_str:0000000000000874 .LASF9
     /tmp/ccUmrSFW.s:5188   .debug_str:0000000000000646 .LASF10
     /tmp/ccUmrSFW.s:5200   .debug_str:00000000000006b1 .LASF11
     /tmp/ccUmrSFW.s:5104   .debug_str:00000000000003b2 .LASF12
     /tmp/ccUmrSFW.s:5176   .debug_str:0000000000000602 .LASF13
     /tmp/ccUmrSFW.s:5120   .debug_str:000000000000040f .LASF14
     /tmp/ccUmrSFW.s:5102   .debug_str:00000000000003a2 .LASF15
     /tmp/ccUmrSFW.s:5460   .debug_str:0000000000000f60 .LASF16
     /tmp/ccUmrSFW.s:5158   .debug_str:000000000000053d .LASF17
     /tmp/ccUmrSFW.s:5448   .debug_str:0000000000000ede .LASF18
     /tmp/ccUmrSFW.s:5536   .debug_str:000000000000118b .LASF95
     /tmp/ccUmrSFW.s:5382   .debug_str:0000000000000cff .LASF22
     /tmp/ccUmrSFW.s:5268   .debug_str:00000000000008f0 .LASF19
     /tmp/ccUmrSFW.s:5164   .debug_str:000000000000057e .LASF20
     /tmp/ccUmrSFW.s:5556   .debug_str:0000000000001239 .LASF21
GAS LISTING /tmp/ccUmrSFW.s 			page 41


     /tmp/ccUmrSFW.s:5522   .debug_str:000000000000110d .LASF23
     /tmp/ccUmrSFW.s:5170   .debug_str:00000000000005be .LASF24
     /tmp/ccUmrSFW.s:5482   .debug_str:0000000000000fe4 .LASF25
     /tmp/ccUmrSFW.s:5136   .debug_str:000000000000049b .LASF26
     /tmp/ccUmrSFW.s:5216   .debug_str:0000000000000754 .LASF27
     /tmp/ccUmrSFW.s:5452   .debug_str:0000000000000f03 .LASF29
     /tmp/ccUmrSFW.s:5312   .debug_str:0000000000000a81 .LASF28
     /tmp/ccUmrSFW.s:5294   .debug_str:00000000000009cc .LASF30
     /tmp/ccUmrSFW.s:5154   .debug_str:0000000000000520 .LASF31
     /tmp/ccUmrSFW.s:5040   .debug_str:000000000000005b .LASF32
     /tmp/ccUmrSFW.s:5296   .debug_str:00000000000009e4 .LASF37
     /tmp/ccUmrSFW.s:5528   .debug_str:0000000000001137 .LASF39
     /tmp/ccUmrSFW.s:5100   .debug_str:0000000000000391 .LASF33
     /tmp/ccUmrSFW.s:5276   .debug_str:0000000000000933 .LASF34
     /tmp/ccUmrSFW.s:5234   .debug_str:00000000000007e3 .LASF35
     /tmp/ccUmrSFW.s:5126   .debug_str:0000000000000455 .LASF36
     /tmp/ccUmrSFW.s:5564   .debug_str:000000000000126d .LASF38
     /tmp/ccUmrSFW.s:5066   .debug_str:0000000000000190 .LASF40
     /tmp/ccUmrSFW.s:5362   .debug_str:0000000000000c5a .LASF41
     /tmp/ccUmrSFW.s:5070   .debug_str:00000000000001b0 .LASF42
     /tmp/ccUmrSFW.s:5428   .debug_str:0000000000000e4c .LASF43
     /tmp/ccUmrSFW.s:5162   .debug_str:0000000000000563 .LASF44
     /tmp/ccUmrSFW.s:5228   .debug_str:00000000000007bc .LASF45
     /tmp/ccUmrSFW.s:5548   .debug_str:00000000000011f1 .LASF46
     /tmp/ccUmrSFW.s:5518   .debug_str:00000000000010ff .LASF49
     /tmp/ccUmrSFW.s:5506   .debug_str:00000000000010a5 .LASF51
     /tmp/ccUmrSFW.s:5396   .debug_str:0000000000000d70 .LASF47
     /tmp/ccUmrSFW.s:5334   .debug_str:0000000000000b4b .LASF48
     /tmp/ccUmrSFW.s:5372   .debug_str:0000000000000c91 .LASF50
     /tmp/ccUmrSFW.s:5378   .debug_str:0000000000000cd8 .LASF52
     /tmp/ccUmrSFW.s:5326   .debug_str:0000000000000aec .LASF53
     /tmp/ccUmrSFW.s:5250   .debug_str:0000000000000887 .LASF54
     /tmp/ccUmrSFW.s:5550   .debug_str:000000000000120b .LASF55
     /tmp/ccUmrSFW.s:5488   .debug_str:0000000000001006 .LASF56
     /tmp/ccUmrSFW.s:5320   .debug_str:0000000000000abc .LASF57
     /tmp/ccUmrSFW.s:5332   .debug_str:0000000000000b37 .LASF58
     /tmp/ccUmrSFW.s:5306   .debug_str:0000000000000a42 .LASF59
     /tmp/ccUmrSFW.s:5380   .debug_str:0000000000000ceb .LASF60
     /tmp/ccUmrSFW.s:5592   .debug_str:0000000000001334 .LASF61
     /tmp/ccUmrSFW.s:5232   .debug_str:00000000000007cf .LASF62
     /tmp/ccUmrSFW.s:5456   .debug_str:0000000000000f37 .LASF63
     /tmp/ccUmrSFW.s:5422   .debug_str:0000000000000e2a .LASF64
     /tmp/ccUmrSFW.s:5424   .debug_str:0000000000000e3d .LASF65
     /tmp/ccUmrSFW.s:5110   .debug_str:00000000000003cf .LASF66
     /tmp/ccUmrSFW.s:5148   .debug_str:00000000000004e0 .LASF67
     /tmp/ccUmrSFW.s:5058   .debug_str:0000000000000124 .LASF68
     /tmp/ccUmrSFW.s:5230   .debug_str:00000000000007c9 .LASF69
     /tmp/ccUmrSFW.s:5140   .debug_str:00000000000004ba .LASF70
     /tmp/ccUmrSFW.s:5054   .debug_str:00000000000000f8 .LASF71
     /tmp/ccUmrSFW.s:5406   .debug_str:0000000000000daa .LASF72
     /tmp/ccUmrSFW.s:5398   .debug_str:0000000000000d79 .LASF73
     /tmp/ccUmrSFW.s:5582   .debug_str:00000000000012e0 .LASF74
     /tmp/ccUmrSFW.s:5538   .debug_str:0000000000001191 .LASF75
     /tmp/ccUmrSFW.s:5562   .debug_str:0000000000001257 .LASF76
     /tmp/ccUmrSFW.s:5530   .debug_str:0000000000001155 .LASF77
     /tmp/ccUmrSFW.s:5298   .debug_str:00000000000009f4 .LASF78
     /tmp/ccUmrSFW.s:5210   .debug_str:000000000000072e .LASF79
GAS LISTING /tmp/ccUmrSFW.s 			page 42


     /tmp/ccUmrSFW.s:5218   .debug_str:000000000000075f .LASF80
     /tmp/ccUmrSFW.s:5510   .debug_str:00000000000010c6 .LASF81
     /tmp/ccUmrSFW.s:5198   .debug_str:0000000000000695 .LASF82
     /tmp/ccUmrSFW.s:5358   .debug_str:0000000000000c3c .LASF83
     /tmp/ccUmrSFW.s:5246   .debug_str:0000000000000852 .LASF84
     /tmp/ccUmrSFW.s:5392   .debug_str:0000000000000d50 .LASF85
     /tmp/ccUmrSFW.s:5046   .debug_str:00000000000000a7 .LASF86
     /tmp/ccUmrSFW.s:5080   .debug_str:0000000000000232 .LASF87
     /tmp/ccUmrSFW.s:5508   .debug_str:00000000000010ba .LASF88
     /tmp/ccUmrSFW.s:5082   .debug_str:0000000000000241 .LASF89
     /tmp/ccUmrSFW.s:5310   .debug_str:0000000000000a6f .LASF90
     /tmp/ccUmrSFW.s:5202   .debug_str:00000000000006bf .LASF91
     /tmp/ccUmrSFW.s:5150   .debug_str:00000000000004e6 .LASF92
     /tmp/ccUmrSFW.s:5098   .debug_str:000000000000037d .LASF93
     /tmp/ccUmrSFW.s:5474   .debug_str:0000000000000fbf .LASF94
     /tmp/ccUmrSFW.s:5346   .debug_str:0000000000000bbb .LASF96
     /tmp/ccUmrSFW.s:5440   .debug_str:0000000000000ea2 .LASF130
     /tmp/ccUmrSFW.s:5256   .debug_str:00000000000008a8 .LASF97
     /tmp/ccUmrSFW.s:5106   .debug_str:00000000000003c1 .LASF98
     /tmp/ccUmrSFW.s:5184   .debug_str:0000000000000630 .LASF99
     /tmp/ccUmrSFW.s:5260   .debug_str:00000000000008c0 .LASF100
     /tmp/ccUmrSFW.s:5266   .debug_str:00000000000008dd .LASF101
     /tmp/ccUmrSFW.s:5182   .debug_str:0000000000000627 .LASF102
     /tmp/ccUmrSFW.s:5594   .debug_str:000000000000133c .LASF103
     /tmp/ccUmrSFW.s:5302   .debug_str:0000000000000a17 .LASF104
     /tmp/ccUmrSFW.s:5056   .debug_str:0000000000000103 .LASF106
     /tmp/ccUmrSFW.s:5468   .debug_str:0000000000000f96 .LASF105
     /tmp/ccUmrSFW.s:5304   .debug_str:0000000000000a21 .LASF107
     /tmp/ccUmrSFW.s:5526   .debug_str:000000000000112c .LASF108
     /tmp/ccUmrSFW.s:5492   .debug_str:0000000000001024 .LASF109
     /tmp/ccUmrSFW.s:5462   .debug_str:0000000000000f6c .LASF110
     /tmp/ccUmrSFW.s:5048   .debug_str:00000000000000af .LASF111
     /tmp/ccUmrSFW.s:5542   .debug_str:00000000000011a0 .LASF112
     /tmp/ccUmrSFW.s:5044   .debug_str:0000000000000079 .LASF113
     /tmp/ccUmrSFW.s:5472   .debug_str:0000000000000faa .LASF114
     /tmp/ccUmrSFW.s:5208   .debug_str:00000000000006ff .LASF115
     /tmp/ccUmrSFW.s:5034   .debug_str:000000000000002b .LASF116
     /tmp/ccUmrSFW.s:5336   .debug_str:0000000000000b60 .LASF117
     /tmp/ccUmrSFW.s:5160   .debug_str:0000000000000553 .LASF118
     /tmp/ccUmrSFW.s:5546   .debug_str:00000000000011c9 .LASF119
     /tmp/ccUmrSFW.s:5450   .debug_str:0000000000000ef4 .LASF120
     /tmp/ccUmrSFW.s:5152   .debug_str:00000000000004f9 .LASF121
     /tmp/ccUmrSFW.s:5476   .debug_str:0000000000000fc4 .LASF122
     /tmp/ccUmrSFW.s:5096   .debug_str:0000000000000377 .LASF123
     /tmp/ccUmrSFW.s:5438   .debug_str:0000000000000e9a .LASF124
     /tmp/ccUmrSFW.s:5112   .debug_str:00000000000003e2 .LASF125
     /tmp/ccUmrSFW.s:5084   .debug_str:0000000000000254 .LASF126
     /tmp/ccUmrSFW.s:5356   .debug_str:0000000000000c34 .LASF127
     /tmp/ccUmrSFW.s:5254   .debug_str:000000000000089f .LASF128
     /tmp/ccUmrSFW.s:5420   .debug_str:0000000000000e22 .LASF185
     /tmp/ccUmrSFW.s:5212   .debug_str:0000000000000739 .LASF129
     /tmp/ccUmrSFW.s:5498   .debug_str:000000000000107c .LASF140
     /tmp/ccUmrSFW.s:5316   .debug_str:0000000000000a9b .LASF280
     /tmp/ccUmrSFW.s:5340   .debug_str:0000000000000b9a .LASF131
     /tmp/ccUmrSFW.s:5540   .debug_str:000000000000119b .LASF132
     /tmp/ccUmrSFW.s:5580   .debug_str:00000000000012d4 .LASF133
     /tmp/ccUmrSFW.s:5574   .debug_str:00000000000012ab .LASF134
GAS LISTING /tmp/ccUmrSFW.s 			page 43


     /tmp/ccUmrSFW.s:5486   .debug_str:0000000000000ff6 .LASF135
     /tmp/ccUmrSFW.s:5142   .debug_str:00000000000004cc .LASF136
     /tmp/ccUmrSFW.s:5064   .debug_str:000000000000017d .LASF137
     /tmp/ccUmrSFW.s:5264   .debug_str:00000000000008d7 .LASF138
     /tmp/ccUmrSFW.s:5342   .debug_str:0000000000000b9f .LASF139
     /tmp/ccUmrSFW.s:5480   .debug_str:0000000000000fdc .LASF141
     /tmp/ccUmrSFW.s:5430   .debug_str:0000000000000e5a .LASF142
     /tmp/ccUmrSFW.s:5292   .debug_str:00000000000009bf .LASF147
     /tmp/ccUmrSFW.s:5278   .debug_str:0000000000000951 .LASF149
     /tmp/ccUmrSFW.s:5586   .debug_str:0000000000001308 .LASF143
     /tmp/ccUmrSFW.s:5180   .debug_str:000000000000061b .LASF144
     /tmp/ccUmrSFW.s:5224   .debug_str:000000000000078a .LASF145
     /tmp/ccUmrSFW.s:5236   .debug_str:00000000000007f5 .LASF146
     /tmp/ccUmrSFW.s:5432   .debug_str:0000000000000e6b .LASF148
     /tmp/ccUmrSFW.s:5138   .debug_str:00000000000004a7 .LASF150
     /tmp/ccUmrSFW.s:5412   .debug_str:0000000000000de1 .LASF151
     /tmp/ccUmrSFW.s:5454   .debug_str:0000000000000f1b .LASF152
     /tmp/ccUmrSFW.s:5314   .debug_str:0000000000000a8c .LASF153
     /tmp/ccUmrSFW.s:5036   .debug_str:000000000000003c .LASF154
     /tmp/ccUmrSFW.s:5560   .debug_str:0000000000001248 .LASF155
     /tmp/ccUmrSFW.s:5350   .debug_str:0000000000000bf3 .LASF156
     /tmp/ccUmrSFW.s:5446   .debug_str:0000000000000ed0 .LASF157
     /tmp/ccUmrSFW.s:5370   .debug_str:0000000000000c85 .LASF158
     /tmp/ccUmrSFW.s:5030   .debug_str:000000000000000f .LASF159
     /tmp/ccUmrSFW.s:5566   .debug_str:0000000000001279 .LASF160
     /tmp/ccUmrSFW.s:5242   .debug_str:000000000000081c .LASF161
     /tmp/ccUmrSFW.s:5444   .debug_str:0000000000000ec5 .LASF162
     /tmp/ccUmrSFW.s:5578   .debug_str:00000000000012be .LASF163
     /tmp/ccUmrSFW.s:5470   .debug_str:0000000000000f9f .LASF164
     /tmp/ccUmrSFW.s:5130   .debug_str:0000000000000479 .LASF165
     /tmp/ccUmrSFW.s:5426   .debug_str:0000000000000e44 .LASF166
     /tmp/ccUmrSFW.s:5352   .debug_str:0000000000000c0d .LASF167
     /tmp/ccUmrSFW.s:5324   .debug_str:0000000000000acd .LASF168
     /tmp/ccUmrSFW.s:5124   .debug_str:0000000000000443 .LASF169
     /tmp/ccUmrSFW.s:5376   .debug_str:0000000000000cbb .LASF170
     /tmp/ccUmrSFW.s:5596   .debug_str:0000000000001346 .LASF171
     /tmp/ccUmrSFW.s:5328   .debug_str:0000000000000af3 .LASF172
     /tmp/ccUmrSFW.s:5410   .debug_str:0000000000000dce .LASF173
     /tmp/ccUmrSFW.s:5434   .debug_str:0000000000000e74 .LASF174
     /tmp/ccUmrSFW.s:5490   .debug_str:000000000000101a .LASF175
     /tmp/ccUmrSFW.s:5344   .debug_str:0000000000000baf .LASF176
     /tmp/ccUmrSFW.s:5572   .debug_str:000000000000129d .LASF177
     /tmp/ccUmrSFW.s:5076   .debug_str:00000000000001f7 .LASF179
     /tmp/ccUmrSFW.s:5074   .debug_str:00000000000001e2 .LASF178
     /tmp/ccUmrSFW.s:5094   .debug_str:000000000000034b .LASF180
     /tmp/ccUmrSFW.s:5588   .debug_str:0000000000001315 .LASF281
     /tmp/ccUmrSFW.s:5092   .debug_str:000000000000033a .LASF282
     /tmp/ccUmrSFW.s:5038   .debug_str:0000000000000056 .LASF181
     /tmp/ccUmrSFW.s:5520   .debug_str:0000000000001108 .LASF182
     /tmp/ccUmrSFW.s:5282   .debug_str:0000000000000983 .LASF183
     /tmp/ccUmrSFW.s:5146   .debug_str:00000000000004da .LASF184
     /tmp/ccUmrSFW.s:5504   .debug_str:000000000000109d .LASF186
     /tmp/ccUmrSFW.s:5288   .debug_str:00000000000009a6 .LASF187
     /tmp/ccUmrSFW.s:5386   .debug_str:0000000000000d1e .LASF188
     /tmp/ccUmrSFW.s:5196   .debug_str:0000000000000681 .LASF189
     /tmp/ccUmrSFW.s:5404   .debug_str:0000000000000d9e .LASF190
     /tmp/ccUmrSFW.s:5384   .debug_str:0000000000000d0a .LASF191
GAS LISTING /tmp/ccUmrSFW.s 			page 44


     /tmp/ccUmrSFW.s:5144   .debug_str:00000000000004d5 .LASF192
     /tmp/ccUmrSFW.s:5442   .debug_str:0000000000000eae .LASF193
     /tmp/ccUmrSFW.s:5464   .debug_str:0000000000000f87 .LASF194
     /tmp/ccUmrSFW.s:5394   .debug_str:0000000000000d57 .LASF195
     /tmp/ccUmrSFW.s:5032   .debug_str:000000000000001f .LASF196
     /tmp/ccUmrSFW.s:5408   .debug_str:0000000000000dc2 .LASF197
     /tmp/ccUmrSFW.s:5290   .debug_str:00000000000009ab .LASF198
     /tmp/ccUmrSFW.s:5214   .debug_str:000000000000073f .LASF199
     /tmp/ccUmrSFW.s:5108   .debug_str:00000000000003c6 .LASF200
     /tmp/ccUmrSFW.s:5114   .debug_str:00000000000003ec .LASF201
     /tmp/ccUmrSFW.s:5318   .debug_str:0000000000000ab3 .LASF202
     /tmp/ccUmrSFW.s:5416   .debug_str:0000000000000e10 .LASF203
     /tmp/ccUmrSFW.s:5028   .debug_str:0000000000000000 .LASF204
     /tmp/ccUmrSFW.s:5206   .debug_str:00000000000006dd .LASF205
     /tmp/ccUmrSFW.s:5502   .debug_str:000000000000108e .LASF206
     /tmp/ccUmrSFW.s:5458   .debug_str:0000000000000f3e .LASF207
     /tmp/ccUmrSFW.s:5284   .debug_str:000000000000098b .LASF208
     /tmp/ccUmrSFW.s:5122   .debug_str:000000000000041f .LASF209
     /tmp/ccUmrSFW.s:5338   .debug_str:0000000000000b8a .LASF210
     /tmp/ccUmrSFW.s:5374   .debug_str:0000000000000c98 .LASF211
     /tmp/ccUmrSFW.s:5262   .debug_str:00000000000008ce .LASF212
     /tmp/ccUmrSFW.s:5220   .debug_str:0000000000000777 .LASF213
     /tmp/ccUmrSFW.s:5590   .debug_str:000000000000131c .LASF214
     /tmp/ccUmrSFW.s:5042   .debug_str:0000000000000071 .LASF215
     /tmp/ccUmrSFW.s:5280   .debug_str:0000000000000969 .LASF216
     /tmp/ccUmrSFW.s:5584   .debug_str:00000000000012f8 .LASF217
     /tmp/ccUmrSFW.s:5330   .debug_str:0000000000000b14 .LASF218
     /tmp/ccUmrSFW.s:5544   .debug_str:00000000000011b6 .LASF219
     /tmp/ccUmrSFW.s:5414   .debug_str:0000000000000dea .LASF220
     /tmp/ccUmrSFW.s:5576   .debug_str:00000000000012b1 .LASF221
     /tmp/ccUmrSFW.s:5062   .debug_str:0000000000000159 .LASF222
     /tmp/ccUmrSFW.s:5554   .debug_str:000000000000122c .LASF223
     /tmp/ccUmrSFW.s:5364   .debug_str:0000000000000c67 .LASF224
     /tmp/ccUmrSFW.s:5496   .debug_str:000000000000106a .LASF225
     /tmp/ccUmrSFW.s:5172   .debug_str:00000000000005ca .LASF226
     /tmp/ccUmrSFW.s:5086   .debug_str:000000000000025d .LASF227
     /tmp/ccUmrSFW.s:5060   .debug_str:0000000000000136 .LASF228
     /tmp/ccUmrSFW.s:5322   .debug_str:0000000000000ac4 .LASF229
     /tmp/ccUmrSFW.s:5128   .debug_str:0000000000000474 .LASF230
     /tmp/ccUmrSFW.s:5252   .debug_str:000000000000089a .LASF231
     /tmp/ccUmrSFW.s:5178   .debug_str:0000000000000611 .LASF232
     /tmp/ccUmrSFW.s:5568   .debug_str:0000000000001284 .LASF233
     /tmp/ccUmrSFW.s:5116   .debug_str:00000000000003f6 .LASF234
     /tmp/ccUmrSFW.s:5204   .debug_str:00000000000006d2 .LASF235
     /tmp/ccUmrSFW.s:5190   .debug_str:0000000000000656 .LASF236
     /tmp/ccUmrSFW.s:5166   .debug_str:0000000000000587 .LASF237
     /tmp/ccUmrSFW.s:5466   .debug_str:0000000000000f8e .LASF238
     /tmp/ccUmrSFW.s:5308   .debug_str:0000000000000a4a .LASF239
     /tmp/ccUmrSFW.s:5238   .debug_str:0000000000000802 .LASF240
     /tmp/ccUmrSFW.s:5532   .debug_str:000000000000115f .LASF241
     /tmp/ccUmrSFW.s:5514   .debug_str:00000000000010e7 .LASF242
     /tmp/ccUmrSFW.s:5226   .debug_str:000000000000079a .LASF243
     /tmp/ccUmrSFW.s:5512   .debug_str:00000000000010d5 .LASF244
     /tmp/ccUmrSFW.s:5390   .debug_str:0000000000000d2e .LASF245
     /tmp/ccUmrSFW.s:5078   .debug_str:000000000000021f .LASF246
     /tmp/ccUmrSFW.s:5090   .debug_str:0000000000000317 .LASF247
     /tmp/ccUmrSFW.s:5156   .debug_str:000000000000052a .LASF248
GAS LISTING /tmp/ccUmrSFW.s 			page 45


     /tmp/ccUmrSFW.s:5168   .debug_str:000000000000059b .LASF249
     /tmp/ccUmrSFW.s:5270   .debug_str:00000000000008f9 .LASF250
     /tmp/ccUmrSFW.s:5552   .debug_str:0000000000001213 .LASF251
     /tmp/ccUmrSFW.s:5244   .debug_str:0000000000000829 .LASF252
     /tmp/ccUmrSFW.s:5272   .debug_str:0000000000000914 .LASF253
     /tmp/ccUmrSFW.s:5348   .debug_str:0000000000000bcb .LASF254
     /tmp/ccUmrSFW.s:5174   .debug_str:00000000000005f1 .LASF255
     /tmp/ccUmrSFW.s:5478   .debug_str:0000000000000fca .LASF256
     /tmp/ccUmrSFW.s:5186   .debug_str:0000000000000639 .LASF257
     /tmp/ccUmrSFW.s:5050   .debug_str:00000000000000e4 .LASF258
     /tmp/ccUmrSFW.s:10     .text:0000000000000000 .LFB50
     /tmp/ccUmrSFW.s:36     .text:0000000000000028 .LFE50
     /tmp/ccUmrSFW.s:25     .text:0000000000000018 .LVL0
     /tmp/ccUmrSFW.s:1079   .text:00000000000004d4 .LFE49
     /tmp/ccUmrSFW.s:5194   .debug_str:0000000000000679 .LASF267
     /tmp/ccUmrSFW.s:1023   .text:0000000000000470 .LBB100
     /tmp/ccUmrSFW.s:1030   .text:0000000000000474 .LBE100
     /tmp/ccUmrSFW.s:4790   .debug_loc:0000000000000000 .LLST20
     /tmp/ccUmrSFW.s:999    .text:0000000000000434 .LVL66
     /tmp/ccUmrSFW.s:1004   .text:0000000000000440 .LVL67
     /tmp/ccUmrSFW.s:1009   .text:0000000000000450 .LVL68
     /tmp/ccUmrSFW.s:1018   .text:0000000000000470 .LVL69
     /tmp/ccUmrSFW.s:1038   .text:0000000000000484 .LVL71
     /tmp/ccUmrSFW.s:1045   .text:0000000000000490 .LVL72
     /tmp/ccUmrSFW.s:1050   .text:00000000000004a0 .LVL73
     /tmp/ccUmrSFW.s:1072   .text:00000000000004c8 .LVL74
     /tmp/ccUmrSFW.s:1076   .text:00000000000004d4 .LVL75
     /tmp/ccUmrSFW.s:494    .text:0000000000000224 .LFB48
     /tmp/ccUmrSFW.s:967    .text:0000000000000414 .LFE48
     /tmp/ccUmrSFW.s:5368   .debug_str:0000000000000c7e .LASF259
     /tmp/ccUmrSFW.s:4797   .debug_loc:0000000000000023 .LLST12
     /tmp/ccUmrSFW.s:5010   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccUmrSFW.s:5484   .debug_str:0000000000000ff1 .LASF260
     /tmp/ccUmrSFW.s:5436   .debug_str:0000000000000e92 .LASF261
     /tmp/ccUmrSFW.s:5516   .debug_str:00000000000010f9 .LASF262
     /tmp/ccUmrSFW.s:691    .text:00000000000002e8 .LBB80
     /tmp/ccUmrSFW.s:707    .text:00000000000002f4 .LBE80
     /tmp/ccUmrSFW.s:711    .text:00000000000002f8 .LBB82
     /tmp/ccUmrSFW.s:726    .text:0000000000000304 .LBE82
     /tmp/ccUmrSFW.s:731    .text:0000000000000308 .LBB84
     /tmp/ccUmrSFW.s:743    .text:0000000000000310 .LBE84
     /tmp/ccUmrSFW.s:4818   .debug_loc:0000000000000081 .LLST16
     /tmp/ccUmrSFW.s:766    .text:000000000000034c .LBB86
     /tmp/ccUmrSFW.s:774    .text:0000000000000350 .LBE86
     /tmp/ccUmrSFW.s:4826   .debug_loc:00000000000000a5 .LLST17
     /tmp/ccUmrSFW.s:784    .text:000000000000035c .LBB88
     /tmp/ccUmrSFW.s:795    .text:0000000000000360 .LBE88
     /tmp/ccUmrSFW.s:4833   .debug_loc:00000000000000c8 .LLST18
     /tmp/ccUmrSFW.s:800    .text:0000000000000364 .LBB90
     /tmp/ccUmrSFW.s:812    .text:0000000000000368 .LBE90
     /tmp/ccUmrSFW.s:4840   .debug_loc:00000000000000eb .LLST19
     /tmp/ccUmrSFW.s:760    .text:0000000000000340 .LVL44
     /tmp/ccUmrSFW.s:839    .text:0000000000000388 .LVL51
     /tmp/ccUmrSFW.s:5286   .debug_str:000000000000099c .LASF263
     /tmp/ccUmrSFW.s:4847   .debug_loc:000000000000010e .LLST13
     /tmp/ccUmrSFW.s:563    .text:0000000000000284 .LBB71
     /tmp/ccUmrSFW.s:578    .text:0000000000000290 .LBE71
GAS LISTING /tmp/ccUmrSFW.s 			page 46


     /tmp/ccUmrSFW.s:584    .text:0000000000000298 .LBB73
     /tmp/ccUmrSFW.s:599    .text:00000000000002a4 .LBE73
     /tmp/ccUmrSFW.s:855    .text:0000000000000398 .LBB75
     /tmp/ccUmrSFW.s:866    .text:000000000000039c .LBE75
     /tmp/ccUmrSFW.s:4854   .debug_loc:0000000000000131 .LLST14
     /tmp/ccUmrSFW.s:871    .text:00000000000003a0 .LBB77
     /tmp/ccUmrSFW.s:882    .text:00000000000003a4 .LBE77
     /tmp/ccUmrSFW.s:4861   .debug_loc:0000000000000154 .LLST15
     /tmp/ccUmrSFW.s:848    .text:0000000000000394 .LVL52
     /tmp/ccUmrSFW.s:896    .text:00000000000003b0 .LVL57
     /tmp/ccUmrSFW.s:904    .text:00000000000003bc .LVL58
     /tmp/ccUmrSFW.s:912    .text:00000000000003c8 .LVL59
     /tmp/ccUmrSFW.s:920    .text:00000000000003d4 .LVL60
     /tmp/ccUmrSFW.s:928    .text:00000000000003e0 .LVL61
     /tmp/ccUmrSFW.s:936    .text:00000000000003ec .LVL62
     /tmp/ccUmrSFW.s:944    .text:00000000000003f8 .LVL63
     /tmp/ccUmrSFW.s:952    .text:0000000000000404 .LVL64
     /tmp/ccUmrSFW.s:960    .text:0000000000000410 .LVL65
     /tmp/ccUmrSFW.s:517    .text:0000000000000248 .LBB66
     /tmp/ccUmrSFW.s:533    .text:0000000000000254 .LBE66
     /tmp/ccUmrSFW.s:682    .text:00000000000002e4 .LVL39
     /tmp/ccUmrSFW.s:344    .text:000000000000015c .LFB47
     /tmp/ccUmrSFW.s:488    .text:0000000000000224 .LFE47
     /tmp/ccUmrSFW.s:4868   .debug_loc:0000000000000177 .LLST6
     /tmp/ccUmrSFW.s:4882   .debug_loc:00000000000001b0 .LLST7
     /tmp/ccUmrSFW.s:5500   .debug_str:0000000000001087 .LASF264
     /tmp/ccUmrSFW.s:4889   .debug_loc:00000000000001d3 .LLST8
     /tmp/ccUmrSFW.s:4911   .debug_loc:0000000000000232 .LLST9
     /tmp/ccUmrSFW.s:361    .text:0000000000000174 .LBB60
     /tmp/ccUmrSFW.s:377    .text:0000000000000180 .LBE60
     /tmp/ccUmrSFW.s:379    .text:0000000000000180 .LBB62
     /tmp/ccUmrSFW.s:391    .text:0000000000000188 .LBE62
     /tmp/ccUmrSFW.s:4933   .debug_loc:0000000000000273 .LLST10
     /tmp/ccUmrSFW.s:462    .text:0000000000000208 .LBB64
     /tmp/ccUmrSFW.s:473    .text:000000000000020c .LBE64
     /tmp/ccUmrSFW.s:4941   .debug_loc:0000000000000297 .LLST11
     /tmp/ccUmrSFW.s:446    .text:00000000000001ec .LVL29
     /tmp/ccUmrSFW.s:453    .text:00000000000001fc .LVL30
     /tmp/ccUmrSFW.s:236    .text:00000000000000ec .LFB46
     /tmp/ccUmrSFW.s:338    .text:000000000000015c .LFE46
     /tmp/ccUmrSFW.s:5274   .debug_str:000000000000092c .LASF265
     /tmp/ccUmrSFW.s:4948   .debug_loc:00000000000002ba .LLST2
     /tmp/ccUmrSFW.s:4959   .debug_loc:00000000000002f0 .LLST3
     /tmp/ccUmrSFW.s:254    .text:0000000000000108 .LBB54
     /tmp/ccUmrSFW.s:270    .text:0000000000000114 .LBE54
     /tmp/ccUmrSFW.s:272    .text:0000000000000114 .LBB56
     /tmp/ccUmrSFW.s:285    .text:000000000000011c .LBE56
     /tmp/ccUmrSFW.s:4966   .debug_loc:0000000000000313 .LLST4
     /tmp/ccUmrSFW.s:311    .text:0000000000000140 .LBB58
     /tmp/ccUmrSFW.s:322    .text:0000000000000144 .LBE58
     /tmp/ccUmrSFW.s:4974   .debug_loc:0000000000000337 .LLST5
     /tmp/ccUmrSFW.s:295    .text:000000000000012c .LVL13
     /tmp/ccUmrSFW.s:201    .text:00000000000000cc .LFB45
     /tmp/ccUmrSFW.s:230    .text:00000000000000ec .LFE45
     /tmp/ccUmrSFW.s:132    .text:0000000000000084 .LFB44
     /tmp/ccUmrSFW.s:164    .text:00000000000000a4 .LFE44
     /tmp/ccUmrSFW.s:143    .text:0000000000000090 .LBB52
GAS LISTING /tmp/ccUmrSFW.s 			page 47


     /tmp/ccUmrSFW.s:155    .text:0000000000000098 .LBE52
     /tmp/ccUmrSFW.s:4981   .debug_loc:000000000000035a .LLST1
     /tmp/ccUmrSFW.s:94     .text:0000000000000064 .LFB43
     /tmp/ccUmrSFW.s:126    .text:0000000000000084 .LFE43
     /tmp/ccUmrSFW.s:105    .text:0000000000000070 .LBB50
     /tmp/ccUmrSFW.s:117    .text:0000000000000078 .LBE50
     /tmp/ccUmrSFW.s:4989   .debug_loc:000000000000037e .LLST0
     /tmp/ccUmrSFW.s:170    .text:00000000000000a4 .LFB42
     /tmp/ccUmrSFW.s:195    .text:00000000000000cc .LFE42
     /tmp/ccUmrSFW.s:184    .text:00000000000000bc .LVL9
     /tmp/ccUmrSFW.s:42     .text:0000000000000028 .LFB41
     /tmp/ccUmrSFW.s:88     .text:0000000000000064 .LFE41
     /tmp/ccUmrSFW.s:57     .text:0000000000000040 .LBB48
     /tmp/ccUmrSFW.s:69     .text:0000000000000044 .LBE48
     /tmp/ccUmrSFW.s:73     .text:000000000000004c .LVL3
     /tmp/ccUmrSFW.s:77     .text:0000000000000054 .LVL4
     /tmp/ccUmrSFW.s:5134   .debug_str:0000000000000496 .LASF266
     /tmp/ccUmrSFW.s:5068   .debug_str:00000000000001ab .LASF268
     /tmp/ccUmrSFW.s:5558   .debug_str:0000000000001242 .LASF269
     /tmp/ccUmrSFW.s:5300   .debug_str:0000000000000a0a .LASF270
     /tmp/ccUmrSFW.s:5360   .debug_str:0000000000000c51 .LASF272
     /tmp/ccUmrSFW.s:5402   .debug_str:0000000000000d92 .LASF271
     /tmp/ccUmrSFW.s:5534   .debug_str:0000000000001183 .LASF273
     /tmp/ccUmrSFW.s:5524   .debug_str:000000000000111c .LASF274
     /tmp/ccUmrSFW.s:5570   .debug_str:000000000000128e .LASF283
     /tmp/ccUmrSFW.s:5072   .debug_str:00000000000001ca .LASF284
     /tmp/ccUmrSFW.s:5192   .debug_str:0000000000000669 .LASF275
     /tmp/ccUmrSFW.s:5132   .debug_str:000000000000048f .LASF276
     /tmp/ccUmrSFW.s:1028   .text:0000000000000474 .LVL70
     /tmp/ccUmrSFW.s:531    .text:0000000000000254 .LVL34
     /tmp/ccUmrSFW.s:545    .text:0000000000000278 .LVL35
     /tmp/ccUmrSFW.s:560    .text:0000000000000284 .LVL36
     /tmp/ccUmrSFW.s:667    .text:00000000000002cc .LVL38
     /tmp/ccUmrSFW.s:685    .text:00000000000002e8 .LVL40
     /tmp/ccUmrSFW.s:700    .text:00000000000002ec .LVL41
     /tmp/ccUmrSFW.s:730    .text:0000000000000308 .LVL42
     /tmp/ccUmrSFW.s:740    .text:0000000000000310 .LVL43
     /tmp/ccUmrSFW.s:765    .text:000000000000034c .LVL45
     /tmp/ccUmrSFW.s:772    .text:0000000000000350 .LVL46
     /tmp/ccUmrSFW.s:783    .text:000000000000035c .LVL47
     /tmp/ccUmrSFW.s:792    .text:0000000000000360 .LVL48
     /tmp/ccUmrSFW.s:799    .text:0000000000000364 .LVL49
     /tmp/ccUmrSFW.s:808    .text:0000000000000368 .LVL50
     /tmp/ccUmrSFW.s:606    .text:00000000000002b4 .LVL37
     /tmp/ccUmrSFW.s:854    .text:0000000000000398 .LVL53
     /tmp/ccUmrSFW.s:863    .text:000000000000039c .LVL54
     /tmp/ccUmrSFW.s:870    .text:00000000000003a0 .LVL55
     /tmp/ccUmrSFW.s:879    .text:00000000000003a4 .LVL56
     /tmp/ccUmrSFW.s:347    .text:000000000000015c .LVL19
     /tmp/ccUmrSFW.s:401    .text:000000000000018c .LVL22
     /tmp/ccUmrSFW.s:375    .text:0000000000000180 .LVL20
     /tmp/ccUmrSFW.s:457    .text:0000000000000200 .LVL31
     /tmp/ccUmrSFW.s:405    .text:0000000000000190 .LVL23
     /tmp/ccUmrSFW.s:412    .text:0000000000000198 .LVL24
     /tmp/ccUmrSFW.s:423    .text:00000000000001bc .LVL25
     /tmp/ccUmrSFW.s:433    .text:00000000000001d0 .LVL27
     /tmp/ccUmrSFW.s:438    .text:00000000000001d4 .LVL28
GAS LISTING /tmp/ccUmrSFW.s 			page 48


     /tmp/ccUmrSFW.s:429    .text:00000000000001c8 .LVL26
     /tmp/ccUmrSFW.s:388    .text:0000000000000188 .LVL21
     /tmp/ccUmrSFW.s:461    .text:0000000000000208 .LVL32
     /tmp/ccUmrSFW.s:470    .text:000000000000020c .LVL33
     /tmp/ccUmrSFW.s:239    .text:00000000000000ec .LVL10
     /tmp/ccUmrSFW.s:281    .text:000000000000011c .LVL12
     /tmp/ccUmrSFW.s:331    .text:0000000000000150 .LVL18
     /tmp/ccUmrSFW.s:268    .text:0000000000000114 .LVL11
     /tmp/ccUmrSFW.s:306    .text:0000000000000138 .LVL15
     /tmp/ccUmrSFW.s:310    .text:0000000000000140 .LVL16
     /tmp/ccUmrSFW.s:319    .text:0000000000000144 .LVL17
     /tmp/ccUmrSFW.s:142    .text:0000000000000090 .LVL7
     /tmp/ccUmrSFW.s:152    .text:0000000000000098 .LVL8
     /tmp/ccUmrSFW.s:104    .text:0000000000000070 .LVL5
     /tmp/ccUmrSFW.s:114    .text:0000000000000078 .LVL6
     /tmp/ccUmrSFW.s:1130   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccUmrSFW.s:552    .text:0000000000000280 .LBB70
     /tmp/ccUmrSFW.s:669    .text:00000000000002cc .LBE70
     /tmp/ccUmrSFW.s:843    .text:000000000000038c .LBB93
     /tmp/ccUmrSFW.s:883    .text:00000000000003a4 .LBE93
     /tmp/ccUmrSFW.s:891    .text:00000000000003a8 .LBB94
     /tmp/ccUmrSFW.s:963    .text:0000000000000414 .LBE94
     /tmp/ccUmrSFW.s:689    .text:00000000000002e8 .LBB79
     /tmp/ccUmrSFW.s:813    .text:0000000000000368 .LBE79
     /tmp/ccUmrSFW.s:832    .text:000000000000037c .LBB92
     /tmp/ccUmrSFW.s:842    .text:000000000000038c .LBE92
     /tmp/ccUmrSFW.s:1082   .gcc_except_table:0000000000000000 .LLSDA49

UNDEFINED SYMBOLS
_Z8userMainv
_ZN5Riscv14supervisorTrapEv
_ZN3PCB10initializeEv
_ZN8KConsole10initializeEv
__putc
_ZN3PCB10savedRegA4E
console_handler
_ZN3PCB16timeSliceCounterE
_ZN12SleepPCBList13tryToWakePCBsEv
_ZN3PCB7runningE
_ZN3PCB8dispatchEv
_ZN15MemoryAllocator15memAllocHandlerEv
_ZN15MemoryAllocator14memFreeHandlerEv
_ZN3PCB19threadCreateHandlerEv
_ZN3PCB21threadDispatchHandlerEv
_ZN3PCB17threadExitHandlerEv
_ZN3PCB18threadSleepHandlerEv
_ZN10KSemaphore14semOpenHandlerEv
_ZN10KSemaphore14semWaitHandlerEv
_ZN10KSemaphore16semSignalHandlerEv
_ZN10KSemaphore15semCloseHandlerEv
_Z7kmallocm
_ZN3PCBnwEm
_ZN3PCBC1EPFvPvES0_S0_m
thread_dispatch
_ZN3PCBdlEPv
_Unwind_Resume
__gxx_personality_v0
GAS LISTING /tmp/ccUmrSFW.s 			page 49


