GAS LISTING /tmp/ccT0un0C.s 			page 1


   1              		.file	"Riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv15userMainWrapperEPv
   9              	_ZN5Riscv15userMainWrapperEPv:
  10              	.LFB34:
  11              		.file 1 "src/Riscv.cpp"
   1:src/Riscv.cpp **** //
   2:src/Riscv.cpp **** // Created by os on 4/27/22.
   3:src/Riscv.cpp **** //
   4:src/Riscv.cpp **** 
   5:src/Riscv.cpp **** #include "../h/Riscv.hpp"
   6:src/Riscv.cpp **** #include "../h/MemoryAllocator.hpp"
   7:src/Riscv.cpp **** #include "../h/PCB.hpp"
   8:src/Riscv.cpp **** #include "../h/syscall_cpp.hpp"
   9:src/Riscv.cpp **** #include "../h/SleepPCBList.hpp"
  10:src/Riscv.cpp **** #include "../h/KConsole.hpp"
  11:src/Riscv.cpp **** #include "../h/Tests.hpp"
  12:src/Riscv.cpp **** #include "../test/userMain.hpp"
  13:src/Riscv.cpp **** 
  14:src/Riscv.cpp **** uint64 Riscv::totalTime = 0;
  15:src/Riscv.cpp **** bool Riscv::finishSystem = false;
  16:src/Riscv.cpp **** bool Riscv::kernelMainCalled = false;
  17:src/Riscv.cpp **** 
  18:src/Riscv.cpp **** void Riscv::initSystem()
  19:src/Riscv.cpp **** {
  20:src/Riscv.cpp ****     w_stvec((uint64)&Riscv::supervisorTrap);
  21:src/Riscv.cpp ****     PCB::initialize();
  22:src/Riscv.cpp ****     KConsole::initialize();
  23:src/Riscv.cpp **** }
  24:src/Riscv.cpp **** 
  25:src/Riscv.cpp **** void Riscv::endSystem()
  26:src/Riscv.cpp **** {
  27:src/Riscv.cpp ****     //todo
  28:src/Riscv.cpp ****     Riscv::disableInterrupts();
  29:src/Riscv.cpp **** }
  30:src/Riscv.cpp **** 
  31:src/Riscv.cpp **** void Riscv::enableInterrupts() {
  32:src/Riscv.cpp ****     ms_sstatus(Riscv::SSTATUS_SIE);
  33:src/Riscv.cpp **** }
  34:src/Riscv.cpp **** 
  35:src/Riscv.cpp **** void Riscv::disableInterrupts()
  36:src/Riscv.cpp **** {
  37:src/Riscv.cpp ****     mc_sstatus(Riscv::SSTATUS_SIE);
  38:src/Riscv.cpp **** }
  39:src/Riscv.cpp **** 
  40:src/Riscv.cpp **** void Riscv::popSppSpie()
  41:src/Riscv.cpp **** {
  42:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
  43:src/Riscv.cpp ****     __asm__ volatile ("sret");
  44:src/Riscv.cpp **** }
  45:src/Riscv.cpp **** 
  46:src/Riscv.cpp **** void Riscv::handleSupervisorTrap()
  47:src/Riscv.cpp **** {
GAS LISTING /tmp/ccT0un0C.s 			page 2


  48:src/Riscv.cpp ****     __asm__ volatile("mv %0, a4" : "=r"(PCB::savedRegA4));
  49:src/Riscv.cpp ****     __asm__ volatile("csrr %0, sscratch":"=r"(PCB::running->sscratch));
  50:src/Riscv.cpp **** 
  51:src/Riscv.cpp ****     uint64 scause = Riscv::r_scause();
  52:src/Riscv.cpp **** 
  53:src/Riscv.cpp ****     switch(scause)
  54:src/Riscv.cpp ****     {
  55:src/Riscv.cpp ****         case timerInterrupt:
  56:src/Riscv.cpp ****         {
  57:src/Riscv.cpp ****             uint64 volatile sepc = Riscv::r_sepc();
  58:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
  59:src/Riscv.cpp ****             mc_sip(Riscv::SIP_SSIP);
  60:src/Riscv.cpp ****             //trapPrintString("timerInterrupt\n");
  61:src/Riscv.cpp ****             //static uint64 total = 0;
  62:src/Riscv.cpp ****             totalTime++;
  63:src/Riscv.cpp ****             //trapPrintInt(totalTime);
  64:src/Riscv.cpp **** 
  65:src/Riscv.cpp ****             PCB::timeSliceCounter++;
  66:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
  67:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
  68:src/Riscv.cpp ****             {
  69:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
  70:src/Riscv.cpp ****                 PCB::dispatch();
  71:src/Riscv.cpp ****             }
  72:src/Riscv.cpp **** 
  73:src/Riscv.cpp ****             Riscv::w_sstatus(sstatus);
  74:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
  75:src/Riscv.cpp ****             changePrivMode();
  76:src/Riscv.cpp ****             break;
  77:src/Riscv.cpp ****         }
  78:src/Riscv.cpp ****         case hwInterrupt:
  79:src/Riscv.cpp ****         {
  80:src/Riscv.cpp ****             uint64 x = CONSOLE_STATUS;
  81:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0"::"r"(x));
  82:src/Riscv.cpp ****             __asm__ volatile("lb a1, 0(a0)");
  83:src/Riscv.cpp ****             uint64 operation;
  84:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" :  "=r"(operation));
  85:src/Riscv.cpp ****             if(operation & KConsole::STATUS_READ_MASK)
  86:src/Riscv.cpp ****             {
  87:src/Riscv.cpp ****                 x = CONSOLE_TX_DATA;
  88:src/Riscv.cpp ****                 __asm__ volatile("mv a0, %0"::"r"(x));
  89:src/Riscv.cpp ****                 __asm__ volatile("lb a1,0(a0)");
  90:src/Riscv.cpp ****                 char c;
  91:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" :  "=r"(c));
  92:src/Riscv.cpp ****                 if(KConsole::pendingGetc > 0)
  93:src/Riscv.cpp ****                 {
  94:src/Riscv.cpp ****                     KConsole::pendingGetc--;
  95:src/Riscv.cpp ****                     KConsole::putCharacterInput(c);
  96:src/Riscv.cpp ****                     //KConsole::putCharacterOutput(c);
  97:src/Riscv.cpp ****                 }
  98:src/Riscv.cpp ****             }
  99:src/Riscv.cpp **** 
 100:src/Riscv.cpp ****             plic_complete(plic_claim());
 101:src/Riscv.cpp **** 
 102:src/Riscv.cpp ****             break;
 103:src/Riscv.cpp ****         }
 104:src/Riscv.cpp ****         case operationInterrupt: // todo
GAS LISTING /tmp/ccT0un0C.s 			page 3


 105:src/Riscv.cpp ****         {
 106:src/Riscv.cpp ****             //trapPrintString("operation interrupt\n");
 107:src/Riscv.cpp ****             PCB::threadExitHandler();
 108:src/Riscv.cpp ****             break;
 109:src/Riscv.cpp ****         }
 110:src/Riscv.cpp ****         case addrReadInterrupt: // todo
 111:src/Riscv.cpp ****         {
 112:src/Riscv.cpp ****             //trapPrintString("read interrupt\n");
 113:src/Riscv.cpp ****             PCB::threadExitHandler();
 114:src/Riscv.cpp ****             break;
 115:src/Riscv.cpp ****         }
 116:src/Riscv.cpp ****         case addrWriteInterrupt: // todo
 117:src/Riscv.cpp ****         {
 118:src/Riscv.cpp ****             //trapPrintString("write interrupt\n");
 119:src/Riscv.cpp ****             PCB::threadExitHandler();
 120:src/Riscv.cpp ****             break;
 121:src/Riscv.cpp ****         }
 122:src/Riscv.cpp ****         case ecallSystemInterupt:
 123:src/Riscv.cpp ****         case ecallUserInterrupt:
 124:src/Riscv.cpp ****         {
 125:src/Riscv.cpp ****             uint64 operation;
 126:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
 127:src/Riscv.cpp **** 
 128:src/Riscv.cpp ****             uint64 volatile sepc = Riscv::r_sepc() + 4;
 129:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 130:src/Riscv.cpp **** 
 131:src/Riscv.cpp ****             switch(operation)
 132:src/Riscv.cpp ****             {
 133:src/Riscv.cpp ****                 case MemoryAllocator::MEM_ALLOC:
 134:src/Riscv.cpp ****                     MemoryAllocator::memAllocHandler();
 135:src/Riscv.cpp ****                     break;
 136:src/Riscv.cpp ****                 case MemoryAllocator::MEM_FREE:
 137:src/Riscv.cpp ****                     MemoryAllocator::memFreeHandler();
 138:src/Riscv.cpp ****                     break;
 139:src/Riscv.cpp ****                 case PCB::THREAD_MAKE_PCB:
 140:src/Riscv.cpp ****                     PCB::threadMakePCBHandler();
 141:src/Riscv.cpp ****                     break;
 142:src/Riscv.cpp ****                 case PCB::THREAD_CREATE:
 143:src/Riscv.cpp ****                     PCB::threadCreateHandler();
 144:src/Riscv.cpp ****                     break;
 145:src/Riscv.cpp ****                 case PCB::THREAD_START:
 146:src/Riscv.cpp ****                     PCB::threadStartHandler();
 147:src/Riscv.cpp ****                     break;
 148:src/Riscv.cpp ****                 case PCB::THREAD_DISPATCH:
 149:src/Riscv.cpp ****                     PCB::threadDispatchHandler();
 150:src/Riscv.cpp ****                     break;
 151:src/Riscv.cpp ****                 case PCB::THREAD_EXIT:
 152:src/Riscv.cpp ****                     PCB::threadExitHandler();
 153:src/Riscv.cpp ****                     break;
 154:src/Riscv.cpp ****                 case PCB::TIME_SLEEP:
 155:src/Riscv.cpp ****                     PCB::threadSleepHandler();
 156:src/Riscv.cpp ****                     break;
 157:src/Riscv.cpp ****                 case KSemaphore::SEM_OPEN:
 158:src/Riscv.cpp ****                     KSemaphore::semOpenHandler();
 159:src/Riscv.cpp ****                     break;
 160:src/Riscv.cpp ****                 case KSemaphore::SEM_WAIT:
 161:src/Riscv.cpp ****                     KSemaphore::semWaitHandler();
GAS LISTING /tmp/ccT0un0C.s 			page 4


 162:src/Riscv.cpp ****                     break;
 163:src/Riscv.cpp ****                 case KSemaphore::SEM_SIGNAL:
 164:src/Riscv.cpp ****                     KSemaphore::semSignalHandler();
 165:src/Riscv.cpp ****                     break;
 166:src/Riscv.cpp ****                 case KSemaphore::SEM_CLOSE:
 167:src/Riscv.cpp ****                     KSemaphore::semCloseHandler();
 168:src/Riscv.cpp ****                     break;
 169:src/Riscv.cpp ****                 case KConsole::CONSOLE_GETC:
 170:src/Riscv.cpp ****                     KConsole::getcHandler();
 171:src/Riscv.cpp ****                     break;
 172:src/Riscv.cpp ****                 case KConsole::CONSOLE_PUTC:
 173:src/Riscv.cpp ****                     KConsole::putcHandler();
 174:src/Riscv.cpp ****                     break;
 175:src/Riscv.cpp ****                 case KConsole::CONSOLE_GET_CHAR:
 176:src/Riscv.cpp ****                     KConsole::getCharHandler();
 177:src/Riscv.cpp ****                     break;
 178:src/Riscv.cpp ****             }
 179:src/Riscv.cpp **** 
 180:src/Riscv.cpp ****             Riscv::w_sstatus(sstatus);
 181:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 182:src/Riscv.cpp ****             changePrivMode();
 183:src/Riscv.cpp ****             break;
 184:src/Riscv.cpp ****         }
 185:src/Riscv.cpp ****     }
 186:src/Riscv.cpp **** }
 187:src/Riscv.cpp **** 
 188:src/Riscv.cpp **** void Riscv::kernelMain()
 189:src/Riscv.cpp **** {
 190:src/Riscv.cpp ****     if(kernelMainCalled) return;
 191:src/Riscv.cpp ****     kernelMainCalled = true;
 192:src/Riscv.cpp **** 
 193:src/Riscv.cpp ****     initSystem();
 194:src/Riscv.cpp **** 
 195:src/Riscv.cpp ****     PCB* userPCB = new PCB(&Riscv::userMainWrapper, 0, MemoryAllocator::kmalloc(DEFAULT_STACK_SIZE)
 196:src/Riscv.cpp ****     //PCB* userPCB = new PCB(&Riscv::myTestsWrapper, 0, kmalloc(DEFAULT_STACK_SIZE), DEFAULT_TIME_S
 197:src/Riscv.cpp ****     userPCB->start();
 198:src/Riscv.cpp **** 
 199:src/Riscv.cpp ****     enableInterrupts();
 200:src/Riscv.cpp **** 
 201:src/Riscv.cpp ****     while(!userPCB->isFinished())
 202:src/Riscv.cpp ****     {
 203:src/Riscv.cpp ****         thread_dispatch();
 204:src/Riscv.cpp ****     }
 205:src/Riscv.cpp **** 
 206:src/Riscv.cpp ****     //printString("End...\n");
 207:src/Riscv.cpp ****     finishSystem = true;
 208:src/Riscv.cpp ****     while(!PCB::consolePCB->isFinished())
 209:src/Riscv.cpp ****     {
 210:src/Riscv.cpp ****         thread_dispatch();
 211:src/Riscv.cpp ****     }
 212:src/Riscv.cpp ****     disableInterrupts();
 213:src/Riscv.cpp ****     endSystem();
 214:src/Riscv.cpp **** }
 215:src/Riscv.cpp **** 
 216:src/Riscv.cpp **** void Riscv::userMainWrapper(void* )
 217:src/Riscv.cpp **** {
  12              		.loc 1 217 1
GAS LISTING /tmp/ccT0un0C.s 			page 5


  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23341100 		sd	ra,8(sp)
  17 0008 23308100 		sd	s0,0(sp)
  18              		.cfi_offset 1, -8
  19              		.cfi_offset 8, -16
  20 000c 13040101 		addi	s0,sp,16
  21              		.cfi_def_cfa 8, 0
 218:src/Riscv.cpp ****     userMain();
  22              		.loc 1 218 5
  23              		.loc 1 218 13 is_stmt 0
  24 0010 97000000 		call	_Z8userMainv@plt
  24      E7800000 
  25              	.LVL0:
 219:src/Riscv.cpp **** }
  26              		.loc 1 219 1
  27 0018 83308100 		ld	ra,8(sp)
  28              		.cfi_restore 1
  29 001c 03340100 		ld	s0,0(sp)
  30              		.cfi_restore 8
  31              		.cfi_def_cfa 2, 16
  32 0020 13010101 		addi	sp,sp,16
  33              		.cfi_def_cfa_offset 0
  34 0024 67800000 		jr	ra
  35              		.cfi_endproc
  36              	.LFE34:
  38              		.align	2
  39              		.globl	_ZN5Riscv10initSystemEv
  41              	_ZN5Riscv10initSystemEv:
  42              	.LFB27:
  19:src/Riscv.cpp ****     w_stvec((uint64)&Riscv::supervisorTrap);
  43              		.loc 1 19 1 is_stmt 1
  44              		.cfi_startproc
  45 0028 130101FF 		addi	sp,sp,-16
  46              		.cfi_def_cfa_offset 16
  47 002c 23341100 		sd	ra,8(sp)
  48 0030 23308100 		sd	s0,0(sp)
  49              		.cfi_offset 1, -8
  50              		.cfi_offset 8, -16
  51 0034 13040101 		addi	s0,sp,16
  52              		.cfi_def_cfa 8, 0
  20:src/Riscv.cpp ****     PCB::initialize();
  53              		.loc 1 20 5
  20:src/Riscv.cpp ****     PCB::initialize();
  54              		.loc 1 20 12 is_stmt 0
  55 0038 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
  55      83B70700 
  56              	.LVL1:
  57              	.LBB41:
  58              	.LBB42:
  59              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 4/27/22.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_0_RISCV_HPP
GAS LISTING /tmp/ccT0un0C.s 			page 6


   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_0_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** #include "../test/printing.hpp"
  10:src/../h/Riscv.hpp **** 
  11:src/../h/Riscv.hpp **** class Riscv
  12:src/../h/Riscv.hpp **** {
  13:src/../h/Riscv.hpp **** public:
  14:src/../h/Riscv.hpp ****     static void kernelMain();
  15:src/../h/Riscv.hpp **** private:
  16:src/../h/Riscv.hpp ****     static bool kernelMainCalled;
  17:src/../h/Riscv.hpp ****     static void changePrivMode();
  18:src/../h/Riscv.hpp **** 
  19:src/../h/Riscv.hpp ****     static void initSystem();
  20:src/../h/Riscv.hpp ****     static void endSystem();
  21:src/../h/Riscv.hpp **** 
  22:src/../h/Riscv.hpp ****     static void userMainWrapper(void* p);
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp ****     static void enableInterrupts();
  25:src/../h/Riscv.hpp **** 
  26:src/../h/Riscv.hpp ****     static void disableTimerInterrupts();
  27:src/../h/Riscv.hpp **** 
  28:src/../h/Riscv.hpp ****     static void disableInterrupts();
  29:src/../h/Riscv.hpp **** 
  30:src/../h/Riscv.hpp ****     static void idleRiscv(void* arg);
  31:src/../h/Riscv.hpp **** 
  32:src/../h/Riscv.hpp ****     static void pushRegisters();
  33:src/../h/Riscv.hpp ****     static void popRegisters();
  34:src/../h/Riscv.hpp **** 
  35:src/../h/Riscv.hpp ****     static uint64 r_scause();
  36:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  37:src/../h/Riscv.hpp **** 
  38:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  39:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
  40:src/../h/Riscv.hpp **** 
  41:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  42:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  43:src/../h/Riscv.hpp **** 
  44:src/../h/Riscv.hpp ****     static uint64 r_stval();
  45:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  46:src/../h/Riscv.hpp **** 
  47:src/../h/Riscv.hpp ****     static bool finishSystem;
  48:src/../h/Riscv.hpp **** 
  49:src/../h/Riscv.hpp ****     enum BitMaskSip
  50:src/../h/Riscv.hpp ****     {
  51:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  52:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  53:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9),
  54:src/../h/Riscv.hpp ****     };
  55:src/../h/Riscv.hpp **** 
  56:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  57:src/../h/Riscv.hpp **** 
  58:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  59:src/../h/Riscv.hpp **** 
  60:src/../h/Riscv.hpp ****     static uint64 r_sip();
  61:src/../h/Riscv.hpp **** 
  62:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
GAS LISTING /tmp/ccT0un0C.s 			page 7


  63:src/../h/Riscv.hpp **** 
  64:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  65:src/../h/Riscv.hpp ****     {
  66:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  67:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  68:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  69:src/../h/Riscv.hpp ****     };
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp ****     static void w_a0_sscratch();
  72:src/../h/Riscv.hpp **** 
  73:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  74:src/../h/Riscv.hpp **** 
  75:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  76:src/../h/Riscv.hpp **** 
  77:src/../h/Riscv.hpp ****     static void mc_sie(uint64 mask);
  78:src/../h/Riscv.hpp **** 
  79:src/../h/Riscv.hpp ****     static void ms_sie(uint64 mask);
  80:src/../h/Riscv.hpp **** 
  81:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  82:src/../h/Riscv.hpp **** 
  83:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  84:src/../h/Riscv.hpp **** 
  85:src/../h/Riscv.hpp ****     static uint64 r_sie();
  86:src/../h/Riscv.hpp ****     static void w_sie(uint64 sie);
  87:src/../h/Riscv.hpp ****     static void popSppSpie();
  88:src/../h/Riscv.hpp **** 
  89:src/../h/Riscv.hpp ****     static void supervisorTrap();
  90:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  91:src/../h/Riscv.hpp **** 
  92:src/../h/Riscv.hpp ****     static void myTestsWrapper(void* );
  93:src/../h/Riscv.hpp **** 
  94:src/../h/Riscv.hpp ****     static const uint64 bntOne = 1UL << 63;;
  95:src/../h/Riscv.hpp ****     static const uint64 bntZero = 0UL;
  96:src/../h/Riscv.hpp ****     static const uint64 timerInterrupt = bntOne + 1UL;
  97:src/../h/Riscv.hpp ****     static const uint64 hwInterrupt = bntOne + 9UL;
  98:src/../h/Riscv.hpp ****     static const uint64 operationInterrupt = bntZero + 2UL;
  99:src/../h/Riscv.hpp ****     static const uint64 addrReadInterrupt = bntZero + 5UL;
 100:src/../h/Riscv.hpp ****     static const uint64 addrWriteInterrupt = bntZero + 7UL;
 101:src/../h/Riscv.hpp ****     static const uint64 ecallUserInterrupt = bntZero + 8UL;
 102:src/../h/Riscv.hpp ****     static const uint64 ecallSystemInterupt = bntZero + 9UL;
 103:src/../h/Riscv.hpp **** 
 104:src/../h/Riscv.hpp ****     static uint64 totalTime;
 105:src/../h/Riscv.hpp **** 
 106:src/../h/Riscv.hpp ****     friend class PCB;
 107:src/../h/Riscv.hpp ****     friend class Scheduler;
 108:src/../h/Riscv.hpp ****     friend class SleepPCBList;
 109:src/../h/Riscv.hpp ****     friend class KSemaphore;
 110:src/../h/Riscv.hpp ****     friend class KConsole;
 111:src/../h/Riscv.hpp ****     friend class MemoryAllocator;
 112:src/../h/Riscv.hpp **** };
 113:src/../h/Riscv.hpp **** 
 114:src/../h/Riscv.hpp **** inline void Riscv::mc_sie(uint64 mask)
 115:src/../h/Riscv.hpp **** {
 116:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sie, %0" : :"r"(mask));
 117:src/../h/Riscv.hpp **** }
 118:src/../h/Riscv.hpp **** 
 119:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause() {
GAS LISTING /tmp/ccT0un0C.s 			page 8


 120:src/../h/Riscv.hpp ****     uint64 volatile scause;
 121:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
 122:src/../h/Riscv.hpp ****     return scause;
 123:src/../h/Riscv.hpp **** }
 124:src/../h/Riscv.hpp **** 
 125:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
 126:src/../h/Riscv.hpp ****     __asm__ volatile("csrw scause, %0" : :"r"(scause));
 127:src/../h/Riscv.hpp **** }
 128:src/../h/Riscv.hpp **** 
 129:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc() {
 130:src/../h/Riscv.hpp ****     uint64 volatile sepc;
 131:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 132:src/../h/Riscv.hpp ****     return sepc;
 133:src/../h/Riscv.hpp **** }
 134:src/../h/Riscv.hpp **** 
 135:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
 136:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sepc, %0" : :"r"(sepc));
 137:src/../h/Riscv.hpp **** }
 138:src/../h/Riscv.hpp **** 
 139:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec() {
 140:src/../h/Riscv.hpp ****     uint64 volatile stvec;
 141:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, stvec" : "=r"(stvec));
 142:src/../h/Riscv.hpp ****     return stvec;
 143:src/../h/Riscv.hpp **** }
 144:src/../h/Riscv.hpp **** 
 145:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 146:src/../h/Riscv.hpp ****     __asm__ volatile("csrw stvec, %0" : :"r"(stvec));
  60              		.loc 2 146 5 is_stmt 1
  61              		.loc 2 146 53 is_stmt 0
  62              	#APP
  63              	# 146 "src/../h/Riscv.hpp" 1
 147              	}
  64              		csrw stvec, a5
  65              	# 0 "" 2
  66              	.LVL2:
  67              	#NO_APP
  68              	.LBE42:
  69              	.LBE41:
  21:src/Riscv.cpp ****     KConsole::initialize();
  70              		.loc 1 21 5 is_stmt 1
  21:src/Riscv.cpp ****     KConsole::initialize();
  71              		.loc 1 21 20 is_stmt 0
  72 0044 97000000 		call	_ZN3PCB10initializeEv@plt
  72      E7800000 
  73              	.LVL3:
  22:src/Riscv.cpp **** }
  74              		.loc 1 22 5 is_stmt 1
  22:src/Riscv.cpp **** }
  75              		.loc 1 22 25 is_stmt 0
  76 004c 97000000 		call	_ZN8KConsole10initializeEv@plt
  76      E7800000 
  77              	.LVL4:
  23:src/Riscv.cpp **** 
  78              		.loc 1 23 1
  79 0054 83308100 		ld	ra,8(sp)
  80              		.cfi_restore 1
  81 0058 03340100 		ld	s0,0(sp)
GAS LISTING /tmp/ccT0un0C.s 			page 9


  82              		.cfi_restore 8
  83              		.cfi_def_cfa 2, 16
  84 005c 13010101 		addi	sp,sp,16
  85              		.cfi_def_cfa_offset 0
  86 0060 67800000 		jr	ra
  87              		.cfi_endproc
  88              	.LFE27:
  90              		.align	2
  91              		.globl	_ZN5Riscv16enableInterruptsEv
  93              	_ZN5Riscv16enableInterruptsEv:
  94              	.LFB29:
  31:src/Riscv.cpp ****     ms_sstatus(Riscv::SSTATUS_SIE);
  95              		.loc 1 31 32 is_stmt 1
  96              		.cfi_startproc
  97 0064 130101FF 		addi	sp,sp,-16
  98              		.cfi_def_cfa_offset 16
  99 0068 23348100 		sd	s0,8(sp)
 100              		.cfi_offset 8, -8
 101 006c 13040101 		addi	s0,sp,16
 102              		.cfi_def_cfa 8, 0
  32:src/Riscv.cpp **** }
 103              		.loc 1 32 5
 104              	.LVL5:
 105              	.LBB43:
 106              	.LBB44:
 148:src/../h/Riscv.hpp **** 
 149:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stval() {
 150:src/../h/Riscv.hpp ****     uint64 volatile stval;
 151:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, stval" : "=r"(stval));
 152:src/../h/Riscv.hpp ****     return stval;
 153:src/../h/Riscv.hpp **** }
 154:src/../h/Riscv.hpp **** 
 155:src/../h/Riscv.hpp **** inline void Riscv::w_sie(uint64 sie)
 156:src/../h/Riscv.hpp **** {
 157:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sie, %0" : :"r"(sie));
 158:src/../h/Riscv.hpp **** }
 159:src/../h/Riscv.hpp **** 
 160:src/../h/Riscv.hpp **** inline void Riscv::w_stval(uint64 stval) {
 161:src/../h/Riscv.hpp ****     __asm__ volatile("csrw stval, %0" : :"r"(stval));
 162:src/../h/Riscv.hpp **** }
 163:src/../h/Riscv.hpp **** 
 164:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 165:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sip, %0" : :"r"(mask));
 166:src/../h/Riscv.hpp **** }
 167:src/../h/Riscv.hpp **** 
 168:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 169:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sip, %0" : :"r"(mask));
 170:src/../h/Riscv.hpp **** }
 171:src/../h/Riscv.hpp **** 
 172:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sie()
 173:src/../h/Riscv.hpp **** {
 174:src/../h/Riscv.hpp ****     uint64 volatile sie;
 175:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sip" : "=r"(sie));
 176:src/../h/Riscv.hpp ****     return sie;
 177:src/../h/Riscv.hpp **** }
 178:src/../h/Riscv.hpp **** 
 179:src/../h/Riscv.hpp **** inline void Riscv::ms_sie(uint64 mask)
GAS LISTING /tmp/ccT0un0C.s 			page 10


 180:src/../h/Riscv.hpp **** {
 181:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sie, %0" : :"r"(mask));
 182:src/../h/Riscv.hpp **** }
 183:src/../h/Riscv.hpp **** 
 184:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip() {
 185:src/../h/Riscv.hpp ****     uint64 volatile sip;
 186:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sip" : "=r"(sip));
 187:src/../h/Riscv.hpp ****     return sip;
 188:src/../h/Riscv.hpp **** }
 189:src/../h/Riscv.hpp **** 
 190:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 191:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sip, %0" : :"r"(sip));
 192:src/../h/Riscv.hpp **** }
 193:src/../h/Riscv.hpp **** 
 194:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 195:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sstatus, %0" : :"r"(mask));
 107              		.loc 2 195 5
 108              		.loc 2 195 54 is_stmt 0
 109 0070 93072000 		li	a5,2
 110              	#APP
 111              	# 195 "src/../h/Riscv.hpp" 1
 196              	}
 112              		csrs sstatus, a5
 113              	# 0 "" 2
 114              	.LVL6:
 115              	#NO_APP
 116              	.LBE44:
 117              	.LBE43:
  33:src/Riscv.cpp **** 
 118              		.loc 1 33 1
 119 0078 03348100 		ld	s0,8(sp)
 120              		.cfi_restore 8
 121              		.cfi_def_cfa 2, 16
 122 007c 13010101 		addi	sp,sp,16
 123              		.cfi_def_cfa_offset 0
 124 0080 67800000 		jr	ra
 125              		.cfi_endproc
 126              	.LFE29:
 128              		.align	2
 129              		.globl	_ZN5Riscv17disableInterruptsEv
 131              	_ZN5Riscv17disableInterruptsEv:
 132              	.LFB30:
  36:src/Riscv.cpp ****     mc_sstatus(Riscv::SSTATUS_SIE);
 133              		.loc 1 36 1 is_stmt 1
 134              		.cfi_startproc
 135 0084 130101FF 		addi	sp,sp,-16
 136              		.cfi_def_cfa_offset 16
 137 0088 23348100 		sd	s0,8(sp)
 138              		.cfi_offset 8, -8
 139 008c 13040101 		addi	s0,sp,16
 140              		.cfi_def_cfa 8, 0
  37:src/Riscv.cpp **** }
 141              		.loc 1 37 5
 142              	.LVL7:
 143              	.LBB45:
 144              	.LBB46:
 197:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/ccT0un0C.s 			page 11


 198:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 199:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sstatus, %0" : :"r"(mask));
 145              		.loc 2 199 5
 146              		.loc 2 199 54 is_stmt 0
 147 0090 93072000 		li	a5,2
 148              	#APP
 149              	# 199 "src/../h/Riscv.hpp" 1
 200              	}
 150              		csrc sstatus, a5
 151              	# 0 "" 2
 152              	.LVL8:
 153              	#NO_APP
 154              	.LBE46:
 155              	.LBE45:
  38:src/Riscv.cpp **** 
 156              		.loc 1 38 1
 157 0098 03348100 		ld	s0,8(sp)
 158              		.cfi_restore 8
 159              		.cfi_def_cfa 2, 16
 160 009c 13010101 		addi	sp,sp,16
 161              		.cfi_def_cfa_offset 0
 162 00a0 67800000 		jr	ra
 163              		.cfi_endproc
 164              	.LFE30:
 166              		.align	2
 167              		.globl	_ZN5Riscv9endSystemEv
 169              	_ZN5Riscv9endSystemEv:
 170              	.LFB28:
  26:src/Riscv.cpp ****     //todo
 171              		.loc 1 26 1 is_stmt 1
 172              		.cfi_startproc
 173 00a4 130101FF 		addi	sp,sp,-16
 174              		.cfi_def_cfa_offset 16
 175 00a8 23341100 		sd	ra,8(sp)
 176 00ac 23308100 		sd	s0,0(sp)
 177              		.cfi_offset 1, -8
 178              		.cfi_offset 8, -16
 179 00b0 13040101 		addi	s0,sp,16
 180              		.cfi_def_cfa 8, 0
  28:src/Riscv.cpp **** }
 181              		.loc 1 28 5
  28:src/Riscv.cpp **** }
 182              		.loc 1 28 29 is_stmt 0
 183 00b4 97000000 		call	_ZN5Riscv17disableInterruptsEv
 183      E7800000 
 184              	.LVL9:
  29:src/Riscv.cpp **** 
 185              		.loc 1 29 1
 186 00bc 83308100 		ld	ra,8(sp)
 187              		.cfi_restore 1
 188 00c0 03340100 		ld	s0,0(sp)
 189              		.cfi_restore 8
 190              		.cfi_def_cfa 2, 16
 191 00c4 13010101 		addi	sp,sp,16
 192              		.cfi_def_cfa_offset 0
 193 00c8 67800000 		jr	ra
 194              		.cfi_endproc
GAS LISTING /tmp/ccT0un0C.s 			page 12


 195              	.LFE28:
 197              		.align	2
 198              		.globl	_ZN5Riscv10popSppSpieEv
 200              	_ZN5Riscv10popSppSpieEv:
 201              	.LFB31:
  41:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
 202              		.loc 1 41 1 is_stmt 1
 203              		.cfi_startproc
 204 00cc 130101FF 		addi	sp,sp,-16
 205              		.cfi_def_cfa_offset 16
 206 00d0 23348100 		sd	s0,8(sp)
 207              		.cfi_offset 8, -8
 208 00d4 13040101 		addi	s0,sp,16
 209              		.cfi_def_cfa 8, 0
  42:src/Riscv.cpp ****     __asm__ volatile ("sret");
 210              		.loc 1 42 5
  42:src/Riscv.cpp ****     __asm__ volatile ("sret");
 211              		.loc 1 42 39 is_stmt 0
 212              	#APP
 213              	# 42 "src/Riscv.cpp" 1
  43:src/Riscv.cpp **** }
 214              		csrw sepc, ra
 215              	# 0 "" 2
 216              		.loc 1 43 5 is_stmt 1
  43:src/Riscv.cpp **** }
 217              		.loc 1 43 30 is_stmt 0
 218              	# 43 "src/Riscv.cpp" 1
  44:src/Riscv.cpp **** 
 219              		sret
 220              	# 0 "" 2
 221              		.loc 1 44 1
 222              	#NO_APP
 223 00e0 03348100 		ld	s0,8(sp)
 224              		.cfi_restore 8
 225              		.cfi_def_cfa 2, 16
 226 00e4 13010101 		addi	sp,sp,16
 227              		.cfi_def_cfa_offset 0
 228 00e8 67800000 		jr	ra
 229              		.cfi_endproc
 230              	.LFE31:
 232              		.align	2
 233              		.globl	_ZN5Riscv10kernelMainEv
 235              	_ZN5Riscv10kernelMainEv:
 236              	.LFB33:
 189:src/Riscv.cpp ****     if(kernelMainCalled) return;
 237              		.loc 1 189 1 is_stmt 1
 238              		.cfi_startproc
 239              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 240              		.cfi_lsda 0x1b,.LLSDA33
 190:src/Riscv.cpp ****     kernelMainCalled = true;
 241              		.loc 1 190 5
 242 00ec 97070000 		lbu	a5,.LANCHOR0
 242      83C70700 
 243 00f4 63840700 		beqz	a5,.L25
 244 00f8 67800000 		ret
 245              	.L25:
 189:src/Riscv.cpp ****     if(kernelMainCalled) return;
GAS LISTING /tmp/ccT0un0C.s 			page 13


 246              		.loc 1 189 1 is_stmt 0
 247 00fc 130101FE 		addi	sp,sp,-32
 248              		.cfi_def_cfa_offset 32
 249 0100 233C1100 		sd	ra,24(sp)
 250 0104 23388100 		sd	s0,16(sp)
 251 0108 23349100 		sd	s1,8(sp)
 252 010c 23302101 		sd	s2,0(sp)
 253              		.cfi_offset 1, -8
 254              		.cfi_offset 8, -16
 255              		.cfi_offset 9, -24
 256              		.cfi_offset 18, -32
 257 0110 13040102 		addi	s0,sp,32
 258              		.cfi_def_cfa 8, 0
 191:src/Riscv.cpp **** 
 259              		.loc 1 191 5 is_stmt 1
 191:src/Riscv.cpp **** 
 260              		.loc 1 191 22 is_stmt 0
 261 0114 93071000 		li	a5,1
 262 0118 17070000 		sb	a5,.LANCHOR0,a4
 262      2300F700 
 193:src/Riscv.cpp **** 
 263              		.loc 1 193 5 is_stmt 1
 264              	.LEHB0:
 193:src/Riscv.cpp **** 
 265              		.loc 1 193 15 is_stmt 0
 266 0120 97000000 		call	_ZN5Riscv10initSystemEv
 266      E7800000 
 267              	.LVL10:
 195:src/Riscv.cpp ****     //PCB* userPCB = new PCB(&Riscv::myTestsWrapper, 0, kmalloc(DEFAULT_STACK_SIZE), DEFAULT_TIME_S
 268              		.loc 1 195 5 is_stmt 1
 195:src/Riscv.cpp ****     //PCB* userPCB = new PCB(&Riscv::myTestsWrapper, 0, kmalloc(DEFAULT_STACK_SIZE), DEFAULT_TIME_S
 269              		.loc 1 195 80 is_stmt 0
 270 0128 37150000 		li	a0,4096
 271 012c 97000000 		call	_ZN15MemoryAllocator7kmallocEm@plt
 271      E7800000 
 272              	.LVL11:
 273 0134 13090500 		mv	s2,a0
 195:src/Riscv.cpp ****     //PCB* userPCB = new PCB(&Riscv::myTestsWrapper, 0, kmalloc(DEFAULT_STACK_SIZE), DEFAULT_TIME_S
 274              		.loc 1 195 120
 275 0138 13058005 		li	a0,88
 276 013c 97000000 		call	_ZN3PCBnwEm@plt
 276      E7800000 
 277              	.LVL12:
 278              	.LEHE0:
 279 0144 93040500 		mv	s1,a0
 280 0148 13072000 		li	a4,2
 281 014c 93060900 		mv	a3,s2
 282 0150 13060000 		li	a2,0
 283 0154 97050000 		lla	a1,_ZN5Riscv15userMainWrapperEPv
 283      93850500 
 284              	.LEHB1:
 285 015c 97000000 		call	_ZN3PCBC1EPFvPvES0_S0_m@plt
 285      E7800000 
 286              	.LVL13:
 287              	.LEHE1:
 197:src/Riscv.cpp **** 
 288              		.loc 1 197 5 is_stmt 1 discriminator 2
GAS LISTING /tmp/ccT0un0C.s 			page 14


 197:src/Riscv.cpp **** 
 289              		.loc 1 197 19 is_stmt 0 discriminator 2
 290 0164 13850400 		mv	a0,s1
 291              	.LEHB2:
 292 0168 97000000 		call	_ZN3PCB5startEv@plt
 292      E7800000 
 293              	.LVL14:
 199:src/Riscv.cpp **** 
 294              		.loc 1 199 5 is_stmt 1 discriminator 2
 199:src/Riscv.cpp **** 
 295              		.loc 1 199 21 is_stmt 0 discriminator 2
 296 0170 97000000 		call	_ZN5Riscv16enableInterruptsEv
 296      E7800000 
 297              	.LVL15:
 298              	.L16:
 201:src/Riscv.cpp ****     {
 299              		.loc 1 201 5 is_stmt 1
 201:src/Riscv.cpp ****     {
 300              		.loc 1 201 11
 201:src/Riscv.cpp ****     {
 301              		.loc 1 201 31 is_stmt 0
 302 0178 13850400 		mv	a0,s1
 303 017c 97000000 		call	_ZN3PCB10isFinishedEv@plt
 303      E7800000 
 304              	.LVL16:
 201:src/Riscv.cpp ****     {
 305              		.loc 1 201 11
 306 0184 63180500 		bnez	a0,.L15
 203:src/Riscv.cpp ****     }
 307              		.loc 1 203 9 is_stmt 1
 203:src/Riscv.cpp ****     }
 308              		.loc 1 203 24 is_stmt 0
 309 0188 97000000 		call	thread_dispatch@plt
 309      E7800000 
 310              	.LVL17:
 201:src/Riscv.cpp ****     {
 311              		.loc 1 201 5
 312 0190 6FF09FFE 		j	.L16
 313              	.L15:
 207:src/Riscv.cpp ****     while(!PCB::consolePCB->isFinished())
 314              		.loc 1 207 5 is_stmt 1
 207:src/Riscv.cpp ****     while(!PCB::consolePCB->isFinished())
 315              		.loc 1 207 18 is_stmt 0
 316 0194 93071000 		li	a5,1
 317 0198 17070000 		sb	a5,.LANCHOR0+1,a4
 317      2300F700 
 318 01a0 6F00C000 		j	.L18
 319              	.L26:
 210:src/Riscv.cpp ****     }
 320              		.loc 1 210 9 is_stmt 1
 210:src/Riscv.cpp ****     }
 321              		.loc 1 210 24 is_stmt 0
 322 01a4 97000000 		call	thread_dispatch@plt
 322      E7800000 
 323              	.LVL18:
 324              	.L18:
 208:src/Riscv.cpp ****     {
GAS LISTING /tmp/ccT0un0C.s 			page 15


 325              		.loc 1 208 5 is_stmt 1
 208:src/Riscv.cpp ****     {
 326              		.loc 1 208 11
 208:src/Riscv.cpp ****     {
 327              		.loc 1 208 39 is_stmt 0
 328 01ac 97070000 		la	a5,_ZN3PCB10consolePCBE
 328      83B70700 
 329 01b4 03B50700 		ld	a0,0(a5)
 330 01b8 97000000 		call	_ZN3PCB10isFinishedEv@plt
 330      E7800000 
 331              	.LVL19:
 332              	.LEHE2:
 208:src/Riscv.cpp ****     {
 333              		.loc 1 208 11
 334 01c0 E30205FE 		beqz	a0,.L26
 212:src/Riscv.cpp ****     endSystem();
 335              		.loc 1 212 5 is_stmt 1
 212:src/Riscv.cpp ****     endSystem();
 336              		.loc 1 212 22 is_stmt 0
 337 01c4 97000000 		call	_ZN5Riscv17disableInterruptsEv
 337      E7800000 
 338              	.LVL20:
 213:src/Riscv.cpp **** }
 339              		.loc 1 213 5 is_stmt 1
 213:src/Riscv.cpp **** }
 340              		.loc 1 213 14 is_stmt 0
 341 01cc 97000000 		call	_ZN5Riscv9endSystemEv
 341      E7800000 
 342              	.LVL21:
 214:src/Riscv.cpp **** 
 343              		.loc 1 214 1
 344 01d4 83308101 		ld	ra,24(sp)
 345              		.cfi_remember_state
 346              		.cfi_restore 1
 347 01d8 03340101 		ld	s0,16(sp)
 348              		.cfi_restore 8
 349              		.cfi_def_cfa 2, 32
 350 01dc 83348100 		ld	s1,8(sp)
 351              		.cfi_restore 9
 352              	.LVL22:
 353 01e0 03390100 		ld	s2,0(sp)
 354              		.cfi_restore 18
 355 01e4 13010102 		addi	sp,sp,32
 356              		.cfi_def_cfa_offset 0
 357 01e8 67800000 		jr	ra
 358              	.L20:
 359              		.cfi_restore_state
 360 01ec 13090500 		mv	s2,a0
 195:src/Riscv.cpp ****     //PCB* userPCB = new PCB(&Riscv::myTestsWrapper, 0, kmalloc(DEFAULT_STACK_SIZE), DEFAULT_TIME_S
 361              		.loc 1 195 120
 362 01f0 13850400 		mv	a0,s1
 363 01f4 97000000 		call	_ZN3PCBdlEPv@plt
 363      E7800000 
 364              	.LVL23:
 365 01fc 13050900 		mv	a0,s2
 366              	.LEHB3:
 367 0200 97000000 		call	_Unwind_Resume@plt
GAS LISTING /tmp/ccT0un0C.s 			page 16


 367      E7800000 
 368              	.LVL24:
 369              	.LEHE3:
 370              		.cfi_endproc
 371              	.LFE33:
 372              		.globl	__gxx_personality_v0
 373              		.section	.gcc_except_table,"a",@progbits
 374              	.LLSDA33:
 375 0000 FF       		.byte	0xff
 376 0001 FF       		.byte	0xff
 377 0002 03       		.byte	0x3
 378 0003 34       		.byte	0x34
 379 0004 00000000 		.4byte	.LEHB0-.LFB33
 380 0008 00000000 		.4byte	.LEHE0-.LEHB0
 381 000c 00000000 		.4byte	0
 382 0010 00       		.byte	0
 383 0011 00000000 		.4byte	.LEHB1-.LFB33
 384 0015 00000000 		.4byte	.LEHE1-.LEHB1
 385 0019 00000000 		.4byte	.L20-.LFB33
 386 001d 00       		.byte	0
 387 001e 00000000 		.4byte	.LEHB2-.LFB33
 388 0022 00000000 		.4byte	.LEHE2-.LEHB2
 389 0026 00000000 		.4byte	0
 390 002a 00       		.byte	0
 391 002b 00000000 		.4byte	.LEHB3-.LFB33
 392 002f 00000000 		.4byte	.LEHE3-.LEHB3
 393 0033 00000000 		.4byte	0
 394 0037 00       		.byte	0
 395              		.text
 397              		.align	2
 398              		.globl	_ZN5Riscv14myTestsWrapperEPv
 400              	_ZN5Riscv14myTestsWrapperEPv:
 401              	.LFB35:
 220:src/Riscv.cpp **** 
 221:src/Riscv.cpp **** void Riscv::myTestsWrapper(void* p)
 222:src/Riscv.cpp **** {
 402              		.loc 1 222 1 is_stmt 1
 403              		.cfi_startproc
 404              	.LVL25:
 405 0208 130101FF 		addi	sp,sp,-16
 406              		.cfi_def_cfa_offset 16
 407 020c 23341100 		sd	ra,8(sp)
 408 0210 23308100 		sd	s0,0(sp)
 409              		.cfi_offset 1, -8
 410              		.cfi_offset 8, -16
 411 0214 13040101 		addi	s0,sp,16
 412              		.cfi_def_cfa 8, 0
 223:src/Riscv.cpp ****     myTests();
 413              		.loc 1 223 5
 414              		.loc 1 223 12 is_stmt 0
 415 0218 97000000 		call	_Z7myTestsv@plt
 415      E7800000 
 416              	.LVL26:
 224:src/Riscv.cpp **** }
 417              		.loc 1 224 1
 418 0220 83308100 		ld	ra,8(sp)
 419              		.cfi_restore 1
GAS LISTING /tmp/ccT0un0C.s 			page 17


 420 0224 03340100 		ld	s0,0(sp)
 421              		.cfi_restore 8
 422              		.cfi_def_cfa 2, 16
 423 0228 13010101 		addi	sp,sp,16
 424              		.cfi_def_cfa_offset 0
 425 022c 67800000 		jr	ra
 426              		.cfi_endproc
 427              	.LFE35:
 429              		.align	2
 430              		.globl	_ZN5Riscv22disableTimerInterruptsEv
 432              	_ZN5Riscv22disableTimerInterruptsEv:
 433              	.LFB36:
 225:src/Riscv.cpp **** 
 226:src/Riscv.cpp **** void Riscv::disableTimerInterrupts()
 227:src/Riscv.cpp **** {
 434              		.loc 1 227 1 is_stmt 1
 435              		.cfi_startproc
 436 0230 130101FF 		addi	sp,sp,-16
 437              		.cfi_def_cfa_offset 16
 438 0234 23348100 		sd	s0,8(sp)
 439              		.cfi_offset 8, -8
 440 0238 13040101 		addi	s0,sp,16
 441              		.cfi_def_cfa 8, 0
 228:src/Riscv.cpp ****     uint64 x = 0x2;
 442              		.loc 1 228 5
 443              	.LVL27:
 229:src/Riscv.cpp ****     __asm__ volatile("csrc sie, %0"::"r"(x));
 444              		.loc 1 229 5
 445              		.loc 1 229 45 is_stmt 0
 446 023c 93072000 		li	a5,2
 447              	#APP
 448              	# 229 "src/Riscv.cpp" 1
 230              	}
 449              		csrc sie, a5
 450              	# 0 "" 2
 451              		.loc 1 230 1
 452              	#NO_APP
 453 0244 03348100 		ld	s0,8(sp)
 454              		.cfi_restore 8
 455              		.cfi_def_cfa 2, 16
 456 0248 13010101 		addi	sp,sp,16
 457              		.cfi_def_cfa_offset 0
 458 024c 67800000 		jr	ra
 459              		.cfi_endproc
 460              	.LFE36:
 462              		.align	2
 463              		.globl	_ZN5Riscv9idleRiscvEPv
 465              	_ZN5Riscv9idleRiscvEPv:
 466              	.LFB37:
 231:src/Riscv.cpp **** 
 232:src/Riscv.cpp **** void Riscv::idleRiscv(void* p)
 233:src/Riscv.cpp **** {
 467              		.loc 1 233 1 is_stmt 1
 468              		.cfi_startproc
 469              	.LVL28:
 470 0250 130101FF 		addi	sp,sp,-16
 471              		.cfi_def_cfa_offset 16
GAS LISTING /tmp/ccT0un0C.s 			page 18


 472 0254 23348100 		sd	s0,8(sp)
 473              		.cfi_offset 8, -8
 474 0258 13040101 		addi	s0,sp,16
 475              		.cfi_def_cfa 8, 0
 476              	.L32:
 234:src/Riscv.cpp ****     while(true)
 477              		.loc 1 234 5 discriminator 1
 478              		.loc 1 234 5 discriminator 1
 479 025c 6F000000 		j	.L32
 480              		.cfi_endproc
 481              	.LFE37:
 483              		.align	2
 484              		.globl	_ZN5Riscv13w_a0_sscratchEv
 486              	_ZN5Riscv13w_a0_sscratchEv:
 487              	.LFB38:
 235:src/Riscv.cpp ****     {
 236:src/Riscv.cpp **** 
 237:src/Riscv.cpp ****     }
 238:src/Riscv.cpp **** }
 239:src/Riscv.cpp **** 
 240:src/Riscv.cpp **** void Riscv::w_a0_sscratch()
 241:src/Riscv.cpp **** {
 488              		.loc 1 241 1
 489              		.cfi_startproc
 490 0260 130101FF 		addi	sp,sp,-16
 491              		.cfi_def_cfa_offset 16
 492 0264 23348100 		sd	s0,8(sp)
 493              		.cfi_offset 8, -8
 494 0268 13040101 		addi	s0,sp,16
 495              		.cfi_def_cfa 8, 0
 242:src/Riscv.cpp ****     uint64 a1Temp;
 496              		.loc 1 242 5
 243:src/Riscv.cpp ****     __asm__ volatile("mv %0, a1":"=r"(a1Temp));
 497              		.loc 1 243 5
 498              		.loc 1 243 47 is_stmt 0
 499              	#APP
 500              	# 243 "src/Riscv.cpp" 1
 244              	    __asm__ volatile("mv a1, %0"::"r"(PCB::running->sscratch));
 501              		mv a5, a1
 502              	# 0 "" 2
 503              	.LVL29:
 504              		.loc 1 244 5 is_stmt 1
 505              		.loc 1 244 53 is_stmt 0
 506              	#NO_APP
 507 0270 17070000 		la	a4,_ZN3PCB7runningE
 507      03370700 
 508 0278 03370700 		ld	a4,0(a4)
 509 027c 03370701 		ld	a4,16(a4)
 510              		.loc 1 244 63
 511              	#APP
 512              	# 244 "src/Riscv.cpp" 1
 245              	    __asm__ volatile("sd a0, 80(a1)");
 513              		mv a1, a4
 514              	# 0 "" 2
 515              		.loc 1 245 5 is_stmt 1
 516              		.loc 1 245 38 is_stmt 0
 517              	# 245 "src/Riscv.cpp" 1
GAS LISTING /tmp/ccT0un0C.s 			page 19


 246              	    __asm__ volatile("mv a1,%0"::"r"(a1Temp));
 518              		sd a0, 80(a1)
 519              	# 0 "" 2
 520              		.loc 1 246 5 is_stmt 1
 521              		.loc 1 246 46 is_stmt 0
 522              	# 246 "src/Riscv.cpp" 1
 247              	}
 523              		mv a1,a5
 524              	# 0 "" 2
 525              		.loc 1 247 1
 526              	#NO_APP
 527 028c 03348100 		ld	s0,8(sp)
 528              		.cfi_restore 8
 529              		.cfi_def_cfa 2, 16
 530 0290 13010101 		addi	sp,sp,16
 531              		.cfi_def_cfa_offset 0
 532 0294 67800000 		jr	ra
 533              		.cfi_endproc
 534              	.LFE38:
 536              		.align	2
 537              		.globl	_ZN5Riscv14changePrivModeEv
 539              	_ZN5Riscv14changePrivModeEv:
 540              	.LFB39:
 248:src/Riscv.cpp **** 
 249:src/Riscv.cpp **** void Riscv::changePrivMode()
 250:src/Riscv.cpp **** {
 541              		.loc 1 250 1 is_stmt 1
 542              		.cfi_startproc
 543 0298 130101FF 		addi	sp,sp,-16
 544              		.cfi_def_cfa_offset 16
 545 029c 23348100 		sd	s0,8(sp)
 546              		.cfi_offset 8, -8
 547 02a0 13040101 		addi	s0,sp,16
 548              		.cfi_def_cfa 8, 0
 251:src/Riscv.cpp ****     if(PCB::running->systemThread)
 549              		.loc 1 251 5
 550              		.loc 1 251 22 is_stmt 0
 551 02a4 97070000 		la	a5,_ZN3PCB7runningE
 551      83B70700 
 552 02ac 83B70700 		ld	a5,0(a5)
 553 02b0 83C70700 		lbu	a5,0(a5)
 554              		.loc 1 251 5
 555 02b4 638C0700 		beqz	a5,.L37
 252:src/Riscv.cpp ****         Riscv::ms_sstatus(Riscv::SSTATUS_SPP);
 556              		.loc 1 252 9 is_stmt 1
 557              	.LVL30:
 558              	.LBB47:
 559              	.LBB48:
 195:src/../h/Riscv.hpp **** }
 560              		.loc 2 195 5
 195:src/../h/Riscv.hpp **** }
 561              		.loc 2 195 54 is_stmt 0
 562 02b8 93070010 		li	a5,256
 563              	#APP
 564              	# 195 "src/../h/Riscv.hpp" 1
 565              		csrs sstatus, a5
 566              	# 0 "" 2
GAS LISTING /tmp/ccT0un0C.s 			page 20


 567              	.LVL31:
 568              	#NO_APP
 569              	.L36:
 570              	.LBE48:
 571              	.LBE47:
 253:src/Riscv.cpp ****     else
 254:src/Riscv.cpp ****         Riscv::mc_sstatus(Riscv::SSTATUS_SPP);
 255:src/Riscv.cpp **** }
 572              		.loc 1 255 1
 573 02c0 03348100 		ld	s0,8(sp)
 574              		.cfi_remember_state
 575              		.cfi_restore 8
 576              		.cfi_def_cfa 2, 16
 577 02c4 13010101 		addi	sp,sp,16
 578              		.cfi_def_cfa_offset 0
 579 02c8 67800000 		jr	ra
 580              	.L37:
 581              		.cfi_restore_state
 254:src/Riscv.cpp **** }
 582              		.loc 1 254 9 is_stmt 1
 583              	.LVL32:
 584              	.LBB49:
 585              	.LBB50:
 199:src/../h/Riscv.hpp **** }
 586              		.loc 2 199 5
 199:src/../h/Riscv.hpp **** }
 587              		.loc 2 199 54 is_stmt 0
 588 02cc 93070010 		li	a5,256
 589              	#APP
 590              	# 199 "src/../h/Riscv.hpp" 1
 591              		csrc sstatus, a5
 592              	# 0 "" 2
 593              	.LVL33:
 594              	#NO_APP
 595              	.LBE50:
 596              	.LBE49:
 597              		.loc 1 255 1
 598 02d4 6FF0DFFE 		j	.L36
 599              		.cfi_endproc
 600              	.LFE39:
 602              		.align	2
 603              		.globl	_ZN5Riscv20handleSupervisorTrapEv
 605              	_ZN5Riscv20handleSupervisorTrapEv:
 606              	.LFB32:
  47:src/Riscv.cpp ****     __asm__ volatile("mv %0, a4" : "=r"(PCB::savedRegA4));
 607              		.loc 1 47 1 is_stmt 1
 608              		.cfi_startproc
 609 02d8 130101F9 		addi	sp,sp,-112
 610              		.cfi_def_cfa_offset 112
 611 02dc 23341106 		sd	ra,104(sp)
 612 02e0 23308106 		sd	s0,96(sp)
 613 02e4 233C9104 		sd	s1,88(sp)
 614              		.cfi_offset 1, -8
 615              		.cfi_offset 8, -16
 616              		.cfi_offset 9, -24
 617 02e8 13040107 		addi	s0,sp,112
 618              		.cfi_def_cfa 8, 0
GAS LISTING /tmp/ccT0un0C.s 			page 21


  48:src/Riscv.cpp ****     __asm__ volatile("csrr %0, sscratch":"=r"(PCB::running->sscratch));
 619              		.loc 1 48 5
  48:src/Riscv.cpp ****     __asm__ volatile("csrr %0, sscratch":"=r"(PCB::running->sscratch));
 620              		.loc 1 48 58 is_stmt 0
 621              	#APP
 622              	# 48 "src/Riscv.cpp" 1
 623              		mv a4, a4
 624              	# 0 "" 2
 625              	#NO_APP
 626 02f0 97070000 		la	a5,_ZN3PCB10savedRegA4E
 626      83B70700 
 627 02f8 23B0E700 		sd	a4,0(a5)
  49:src/Riscv.cpp **** 
 628              		.loc 1 49 5 is_stmt 1
  49:src/Riscv.cpp **** 
 629              		.loc 1 49 61 is_stmt 0
 630 02fc 97070000 		la	a5,_ZN3PCB7runningE
 630      83B70700 
 631 0304 83B70700 		ld	a5,0(a5)
  49:src/Riscv.cpp **** 
 632              		.loc 1 49 71
 633              	#APP
 634              	# 49 "src/Riscv.cpp" 1
 635              		csrr a4, sscratch
 636              	# 0 "" 2
 637              	#NO_APP
 638 030c 23B8E700 		sd	a4,16(a5)
  51:src/Riscv.cpp **** 
 639              		.loc 1 51 5 is_stmt 1
 640              	.LBB51:
 641              	.LBB52:
 120:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
 642              		.loc 2 120 5
 121:src/../h/Riscv.hpp ****     return scause;
 643              		.loc 2 121 5
 121:src/../h/Riscv.hpp ****     return scause;
 644              		.loc 2 121 55 is_stmt 0
 645              	#APP
 646              	# 121 "src/../h/Riscv.hpp" 1
 647              		csrr a5, scause
 648              	# 0 "" 2
 649              	#NO_APP
 650 0314 233CF4FA 		sd	a5,-72(s0)
 122:src/../h/Riscv.hpp **** }
 651              		.loc 2 122 5 is_stmt 1
 122:src/../h/Riscv.hpp **** }
 652              		.loc 2 122 12 is_stmt 0
 653 0318 833784FB 		ld	a5,-72(s0)
 654              	.LVL34:
 655              	.LBE52:
 656              	.LBE51:
  53:src/Riscv.cpp ****     {
 657              		.loc 1 53 5 is_stmt 1
 658              	.LBB53:
 659 031c 13079000 		li	a4,9
 660 0320 636EF702 		bgtu	a5,a4,.L41
 661 0324 13078000 		li	a4,8
GAS LISTING /tmp/ccT0un0C.s 			page 22


 662 0328 63F4E718 		bgeu	a5,a4,.L42
 663 032c 13075000 		li	a4,5
 664 0330 638AE716 		beq	a5,a4,.L43
 665 0334 13077000 		li	a4,7
 666 0338 6398E700 		bne	a5,a4,.L69
 667              	.LBB54:
 116:src/Riscv.cpp ****         {
 668              		.loc 1 116 9
 117:src/Riscv.cpp ****             //trapPrintString("write interrupt\n");
 669              		.loc 1 117 9
 119:src/Riscv.cpp ****             break;
 670              		.loc 1 119 13
 119:src/Riscv.cpp ****             break;
 671              		.loc 1 119 35 is_stmt 0
 672 033c 97000000 		call	_ZN3PCB17threadExitHandlerEv@plt
 672      E7800000 
 673              	.LVL35:
 120:src/Riscv.cpp ****         }
 674              		.loc 1 120 13 is_stmt 1
 675 0344 6F000012 		j	.L40
 676              	.LVL36:
 677              	.L69:
 678              	.LBE54:
  53:src/Riscv.cpp ****     {
 679              		.loc 1 53 5 is_stmt 0
 680 0348 13072000 		li	a4,2
 681 034c 639CE710 		bne	a5,a4,.L40
 682              	.LBB85:
 104:src/Riscv.cpp ****         {
 683              		.loc 1 104 9 is_stmt 1
 105:src/Riscv.cpp ****             //trapPrintString("operation interrupt\n");
 684              		.loc 1 105 9
 107:src/Riscv.cpp ****             break;
 685              		.loc 1 107 13
 107:src/Riscv.cpp ****             break;
 686              		.loc 1 107 35 is_stmt 0
 687 0350 97000000 		call	_ZN3PCB17threadExitHandlerEv@plt
 687      E7800000 
 688              	.LVL37:
 108:src/Riscv.cpp ****         }
 689              		.loc 1 108 13 is_stmt 1
 690 0358 6F00C010 		j	.L40
 691              	.LVL38:
 692              	.L41:
 693              	.LBE85:
  53:src/Riscv.cpp ****     {
 694              		.loc 1 53 5 is_stmt 0
 695 035c 1307F0FF 		li	a4,-1
 696 0360 1317F703 		slli	a4,a4,63
 697 0364 13071700 		addi	a4,a4,1
 698 0368 638AE706 		beq	a5,a4,.L47
 699 036c 1307F0FF 		li	a4,-1
 700 0370 1317F703 		slli	a4,a4,63
 701 0374 13079700 		addi	a4,a4,9
 702 0378 6396E70E 		bne	a5,a4,.L40
 703              	.LBB86:
  78:src/Riscv.cpp ****         {
GAS LISTING /tmp/ccT0un0C.s 			page 23


 704              		.loc 1 78 9 is_stmt 1
  79:src/Riscv.cpp ****             uint64 x = CONSOLE_STATUS;
 705              		.loc 1 79 9
 706              	.LBB55:
  80:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0"::"r"(x));
 707              		.loc 1 80 13
  80:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0"::"r"(x));
 708              		.loc 1 80 20 is_stmt 0
 709 037c 97070000 		la	a5,CONSOLE_STATUS
 709      83B70700 
 710              	.LVL39:
 711 0384 83B70700 		ld	a5,0(a5)
 712              	.LVL40:
  81:src/Riscv.cpp ****             __asm__ volatile("lb a1, 0(a0)");
 713              		.loc 1 81 13 is_stmt 1
  81:src/Riscv.cpp ****             __asm__ volatile("lb a1, 0(a0)");
 714              		.loc 1 81 50 is_stmt 0
 715              	#APP
 716              	# 81 "src/Riscv.cpp" 1
  82:src/Riscv.cpp ****             uint64 operation;
 717              		mv a0, a5
 718              	# 0 "" 2
 719              		.loc 1 82 13 is_stmt 1
  82:src/Riscv.cpp ****             uint64 operation;
 720              		.loc 1 82 45 is_stmt 0
 721              	# 82 "src/Riscv.cpp" 1
  83:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" :  "=r"(operation));
 722              		lb a1, 0(a0)
 723              	# 0 "" 2
 724              		.loc 1 83 13 is_stmt 1
  84:src/Riscv.cpp ****             if(operation & KConsole::STATUS_READ_MASK)
 725              		.loc 1 84 13
  84:src/Riscv.cpp ****             if(operation & KConsole::STATUS_READ_MASK)
 726              		.loc 1 84 61 is_stmt 0
 727              	# 84 "src/Riscv.cpp" 1
 728              		mv a5, a1
 729              	# 0 "" 2
 730              	.LVL41:
  85:src/Riscv.cpp ****             {
 731              		.loc 1 85 13 is_stmt 1
 732              	#NO_APP
 733              	.LBB56:
  85:src/Riscv.cpp ****             {
 734              		.loc 1 85 26 is_stmt 0
 735 0394 93F71700 		andi	a5,a5,1
 736              	.LVL42:
  85:src/Riscv.cpp ****             {
 737              		.loc 1 85 13
 738 0398 63880702 		beqz	a5,.L50
 739              	.LBB57:
  87:src/Riscv.cpp ****                 __asm__ volatile("mv a0, %0"::"r"(x));
 740              		.loc 1 87 17 is_stmt 1
  87:src/Riscv.cpp ****                 __asm__ volatile("mv a0, %0"::"r"(x));
 741              		.loc 1 87 19 is_stmt 0
 742 039c 97070000 		la	a5,CONSOLE_TX_DATA
 742      83B70700 
 743 03a4 83B70700 		ld	a5,0(a5)
GAS LISTING /tmp/ccT0un0C.s 			page 24


 744              	.LVL43:
  88:src/Riscv.cpp ****                 __asm__ volatile("lb a1,0(a0)");
 745              		.loc 1 88 17 is_stmt 1
  88:src/Riscv.cpp ****                 __asm__ volatile("lb a1,0(a0)");
 746              		.loc 1 88 54 is_stmt 0
 747              	#APP
 748              	# 88 "src/Riscv.cpp" 1
  89:src/Riscv.cpp ****                 char c;
 749              		mv a0, a5
 750              	# 0 "" 2
 751              		.loc 1 89 17 is_stmt 1
  89:src/Riscv.cpp ****                 char c;
 752              		.loc 1 89 48 is_stmt 0
 753              	# 89 "src/Riscv.cpp" 1
  90:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" :  "=r"(c));
 754              		lb a1,0(a0)
 755              	# 0 "" 2
 756              		.loc 1 90 17 is_stmt 1
  91:src/Riscv.cpp ****                 if(KConsole::pendingGetc > 0)
 757              		.loc 1 91 17
  91:src/Riscv.cpp ****                 if(KConsole::pendingGetc > 0)
 758              		.loc 1 91 57 is_stmt 0
 759              	# 91 "src/Riscv.cpp" 1
 760              		mv a0, a1
 761              	# 0 "" 2
 762              	#NO_APP
 763 03b4 1375F50F 		andi	a0,a0,0xff
 764              	.LVL44:
  92:src/Riscv.cpp ****                 {
 765              		.loc 1 92 17 is_stmt 1
  92:src/Riscv.cpp ****                 {
 766              		.loc 1 92 42 is_stmt 0
 767 03b8 97070000 		la	a5,_ZN8KConsole11pendingGetcE
 767      83B70700 
 768              	.LVL45:
 769 03c0 83B70700 		ld	a5,0(a5)
  92:src/Riscv.cpp ****                 {
 770              		.loc 1 92 17
 771 03c4 6392070C 		bnez	a5,.L70
 772              	.LVL46:
 773              	.L50:
 774              	.LBE57:
 775              	.LBE56:
 100:src/Riscv.cpp **** 
 776              		.loc 1 100 13 is_stmt 1
 100:src/Riscv.cpp **** 
 777              		.loc 1 100 26 is_stmt 0
 778 03c8 97000000 		call	plic_claim@plt
 778      E7800000 
 779              	.LVL47:
 780 03d0 97000000 		call	plic_complete@plt
 780      E7800000 
 781              	.LVL48:
 102:src/Riscv.cpp ****         }
 782              		.loc 1 102 13 is_stmt 1
 783 03d8 6F00C008 		j	.L40
 784              	.LVL49:
GAS LISTING /tmp/ccT0un0C.s 			page 25


 785              	.L47:
 786              	.LBE55:
  55:src/Riscv.cpp ****         {
 787              		.loc 1 55 9
  56:src/Riscv.cpp ****             uint64 volatile sepc = Riscv::r_sepc();
 788              		.loc 1 56 9
 789              	.LBB60:
  57:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 790              		.loc 1 57 13
 791              	.LBB61:
 792              	.LBB62:
 130:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 793              		.loc 2 130 5
 131:src/../h/Riscv.hpp ****     return sepc;
 794              		.loc 2 131 5
 131:src/../h/Riscv.hpp ****     return sepc;
 795              		.loc 2 131 51 is_stmt 0
 796              	#APP
 797              	# 131 "src/../h/Riscv.hpp" 1
 798              		csrr a5, sepc
 799              	# 0 "" 2
 800              	.LVL50:
 801              	#NO_APP
 802 03e0 2334F4FC 		sd	a5,-56(s0)
 132:src/../h/Riscv.hpp **** }
 803              		.loc 2 132 5 is_stmt 1
 132:src/../h/Riscv.hpp **** }
 804              		.loc 2 132 12 is_stmt 0
 805 03e4 833784FC 		ld	a5,-56(s0)
 806              	.LBE62:
 807              	.LBE61:
  57:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 808              		.loc 1 57 50
 809 03e8 233CF4F8 		sd	a5,-104(s0)
  58:src/Riscv.cpp ****             mc_sip(Riscv::SIP_SSIP);
 810              		.loc 1 58 13 is_stmt 1
 811              	.LBB63:
 812              	.LBB64:
 201:src/../h/Riscv.hpp **** 
 202:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sstatus() {
 203:src/../h/Riscv.hpp ****     uint64 volatile sstatus;
 813              		.loc 2 203 5
 204:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 814              		.loc 2 204 5
 815              		.loc 2 204 57 is_stmt 0
 816              	#APP
 817              	# 204 "src/../h/Riscv.hpp" 1
 205              	    return sstatus;
 818              		csrr a5, sstatus
 819              	# 0 "" 2
 820              	#NO_APP
 821 03f0 2330F4FC 		sd	a5,-64(s0)
 822              		.loc 2 205 5 is_stmt 1
 823              		.loc 2 205 12 is_stmt 0
 824 03f4 833704FC 		ld	a5,-64(s0)
 825              	.LBE64:
 826              	.LBE63:
GAS LISTING /tmp/ccT0un0C.s 			page 26


  58:src/Riscv.cpp ****             mc_sip(Riscv::SIP_SSIP);
 827              		.loc 1 58 56
 828 03f8 2330F4FA 		sd	a5,-96(s0)
  59:src/Riscv.cpp ****             //trapPrintString("timerInterrupt\n");
 829              		.loc 1 59 13 is_stmt 1
 830              	.LVL51:
 831              	.LBB65:
 832              	.LBB66:
 169:src/../h/Riscv.hpp **** }
 833              		.loc 2 169 5
 169:src/../h/Riscv.hpp **** }
 834              		.loc 2 169 50 is_stmt 0
 835 03fc 93072000 		li	a5,2
 836              	#APP
 837              	# 169 "src/../h/Riscv.hpp" 1
 838              		csrc sip, a5
 839              	# 0 "" 2
 840              	.LVL52:
 841              	#NO_APP
 842              	.LBE66:
 843              	.LBE65:
  62:src/Riscv.cpp ****             //trapPrintInt(totalTime);
 844              		.loc 1 62 13 is_stmt 1
  62:src/Riscv.cpp ****             //trapPrintInt(totalTime);
 845              		.loc 1 62 22 is_stmt 0
 846 0404 17070000 		lla	a4,.LANCHOR0
 846      13070700 
 847 040c 83378700 		ld	a5,8(a4)
 848 0410 93871700 		addi	a5,a5,1
 849 0414 2334F700 		sd	a5,8(a4)
  65:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
 850              		.loc 1 65 13 is_stmt 1
  65:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
 851              		.loc 1 65 34 is_stmt 0
 852 0418 97040000 		la	s1,_ZN3PCB16timeSliceCounterE
 852      83B40400 
 853 0420 83B70400 		ld	a5,0(s1)
 854 0424 93871700 		addi	a5,a5,1
 855 0428 23B0F400 		sd	a5,0(s1)
  66:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
 856              		.loc 1 66 13 is_stmt 1
  66:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
 857              		.loc 1 66 40 is_stmt 0
 858 042c 97000000 		call	_ZN12SleepPCBList13tryToWakePCBsEv@plt
 858      E7800000 
 859              	.LVL53:
  67:src/Riscv.cpp ****             {
 860              		.loc 1 67 13 is_stmt 1
  67:src/Riscv.cpp ****             {
 861              		.loc 1 67 68 is_stmt 0
 862 0434 97070000 		la	a5,_ZN3PCB7runningE
 862      83B70700 
 863 043c 83B70700 		ld	a5,0(a5)
 864              	.LVL54:
 865              	.LBB67:
 866              	.LBB68:
 867              		.file 3 "src/../h/PCB.hpp"
GAS LISTING /tmp/ccT0un0C.s 			page 27


   1:src/../h/PCB.hpp **** //
   2:src/../h/PCB.hpp **** // Created by os on 4/27/22.
   3:src/../h/PCB.hpp **** //
   4:src/../h/PCB.hpp **** 
   5:src/../h/PCB.hpp **** #ifndef PROJECT_BASE_V1_0_PCB_HPP
   6:src/../h/PCB.hpp **** #define PROJECT_BASE_V1_0_PCB_HPP
   7:src/../h/PCB.hpp **** 
   8:src/../h/PCB.hpp **** #include "../lib/hw.h"
   9:src/../h/PCB.hpp **** #include "Scheduler.hpp"
  10:src/../h/PCB.hpp **** #include "Riscv.hpp"
  11:src/../h/PCB.hpp **** 
  12:src/../h/PCB.hpp **** class PCB
  13:src/../h/PCB.hpp **** {
  14:src/../h/PCB.hpp **** private:
  15:src/../h/PCB.hpp ****     static uint64 savedRegA4;
  16:src/../h/PCB.hpp **** 
  17:src/../h/PCB.hpp ****     using Body = void (*)(void*);
  18:src/../h/PCB.hpp **** 
  19:src/../h/PCB.hpp ****     PCB(Body body,  void* args, void* stack_space, uint64 timeSlice);
  20:src/../h/PCB.hpp ****     ~PCB();
  21:src/../h/PCB.hpp **** 
  22:src/../h/PCB.hpp ****     void start();
  23:src/../h/PCB.hpp ****     static void dispatch();
  24:src/../h/PCB.hpp ****     static void sleep(time_t);
  25:src/../h/PCB.hpp **** 
  26:src/../h/PCB.hpp ****     static PCB* running;
  27:src/../h/PCB.hpp **** 
  28:src/../h/PCB.hpp ****     static uint64 timeSliceCounter;
  29:src/../h/PCB.hpp ****     uint64 getTimeSlice() { return timeSlice;}
 868              		.loc 3 29 29 is_stmt 1
 869              		.loc 3 29 36 is_stmt 0
 870 0440 83B78701 		ld	a5,24(a5)
 871              	.LVL55:
 872              	.LBE68:
 873              	.LBE67:
  67:src/Riscv.cpp ****             {
 874              		.loc 1 67 39
 875 0444 03B70400 		ld	a4,0(s1)
  67:src/Riscv.cpp ****             {
 876              		.loc 1 67 13
 877 0448 6378F702 		bgeu	a4,a5,.L71
 878              	.L49:
  73:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 879              		.loc 1 73 13 is_stmt 1
  73:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 880              		.loc 1 73 29 is_stmt 0
 881 044c 833704FA 		ld	a5,-96(s0)
 882              	.LVL56:
 883              	.LBB69:
 884              	.LBB70:
 206:src/../h/Riscv.hpp **** }
 207:src/../h/Riscv.hpp **** 
 208:src/../h/Riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus) {
 209:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sstatus, %0" : :"r"(sstatus));
 885              		.loc 2 209 5 is_stmt 1
 886              		.loc 2 209 57 is_stmt 0
 887              	#APP
GAS LISTING /tmp/ccT0un0C.s 			page 28


 888              	# 209 "src/../h/Riscv.hpp" 1
 210              	}
 889              		csrw sstatus, a5
 890              	# 0 "" 2
 891              	.LVL57:
 892              	#NO_APP
 893              	.LBE70:
 894              	.LBE69:
  74:src/Riscv.cpp ****             changePrivMode();
 895              		.loc 1 74 13 is_stmt 1
  74:src/Riscv.cpp ****             changePrivMode();
 896              		.loc 1 74 26 is_stmt 0
 897 0454 833784F9 		ld	a5,-104(s0)
 898              	.LVL58:
 899              	.LBB71:
 900              	.LBB72:
 136:src/../h/Riscv.hpp **** }
 901              		.loc 2 136 5 is_stmt 1
 136:src/../h/Riscv.hpp **** }
 902              		.loc 2 136 51 is_stmt 0
 903              	#APP
 904              	# 136 "src/../h/Riscv.hpp" 1
 905              		csrw sepc, a5
 906              	# 0 "" 2
 907              	.LVL59:
 908              	#NO_APP
 909              	.LBE72:
 910              	.LBE71:
  75:src/Riscv.cpp ****             break;
 911              		.loc 1 75 13 is_stmt 1
  75:src/Riscv.cpp ****             break;
 912              		.loc 1 75 27 is_stmt 0
 913 045c 97000000 		call	_ZN5Riscv14changePrivModeEv
 913      E7800000 
 914              	.LVL60:
  76:src/Riscv.cpp ****         }
 915              		.loc 1 76 13 is_stmt 1
 916              	.L40:
 917              	.LBE60:
 918              	.LBE86:
 919              	.LBE53:
 186:src/Riscv.cpp **** 
 920              		.loc 1 186 1 is_stmt 0
 921 0464 83308106 		ld	ra,104(sp)
 922              		.cfi_remember_state
 923              		.cfi_restore 1
 924 0468 03340106 		ld	s0,96(sp)
 925              		.cfi_restore 8
 926              		.cfi_def_cfa 2, 112
 927 046c 83348105 		ld	s1,88(sp)
 928              		.cfi_restore 9
 929 0470 13010107 		addi	sp,sp,112
 930              		.cfi_def_cfa_offset 0
 931 0474 67800000 		jr	ra
 932              	.L71:
 933              		.cfi_restore_state
 934              	.LBB89:
GAS LISTING /tmp/ccT0un0C.s 			page 29


 935              	.LBB87:
 936              	.LBB73:
  69:src/Riscv.cpp ****                 PCB::dispatch();
 937              		.loc 1 69 17 is_stmt 1
  69:src/Riscv.cpp ****                 PCB::dispatch();
 938              		.loc 1 69 39 is_stmt 0
 939 0478 23B00400 		sd	zero,0(s1)
  70:src/Riscv.cpp ****             }
 940              		.loc 1 70 17 is_stmt 1
  70:src/Riscv.cpp ****             }
 941              		.loc 1 70 30 is_stmt 0
 942 047c 97000000 		call	_ZN3PCB8dispatchEv@plt
 942      E7800000 
 943              	.LVL61:
 944 0484 6FF09FFC 		j	.L49
 945              	.LVL62:
 946              	.L70:
 947              	.LBE73:
 948              	.LBB74:
 949              	.LBB59:
 950              	.LBB58:
  94:src/Riscv.cpp ****                     KConsole::putCharacterInput(c);
 951              		.loc 1 94 21 is_stmt 1
  94:src/Riscv.cpp ****                     KConsole::putCharacterInput(c);
 952              		.loc 1 94 42 is_stmt 0
 953 0488 9387F7FF 		addi	a5,a5,-1
 954 048c 17070000 		la	a4,_ZN8KConsole11pendingGetcE
 954      03370700 
 955 0494 2330F700 		sd	a5,0(a4)
  95:src/Riscv.cpp ****                     //KConsole::putCharacterOutput(c);
 956              		.loc 1 95 21 is_stmt 1
  95:src/Riscv.cpp ****                     //KConsole::putCharacterOutput(c);
 957              		.loc 1 95 48 is_stmt 0
 958 0498 97000000 		call	_ZN8KConsole17putCharacterInputEc@plt
 958      E7800000 
 959              	.LVL63:
 960 04a0 6FF09FF2 		j	.L50
 961              	.LVL64:
 962              	.L43:
 963              	.LBE58:
 964              	.LBE59:
 965              	.LBE74:
 110:src/Riscv.cpp ****         {
 966              		.loc 1 110 9 is_stmt 1
 111:src/Riscv.cpp ****             //trapPrintString("read interrupt\n");
 967              		.loc 1 111 9
 113:src/Riscv.cpp ****             break;
 968              		.loc 1 113 13
 113:src/Riscv.cpp ****             break;
 969              		.loc 1 113 35 is_stmt 0
 970 04a4 97000000 		call	_ZN3PCB17threadExitHandlerEv@plt
 970      E7800000 
 971              	.LVL65:
 114:src/Riscv.cpp ****         }
 972              		.loc 1 114 13 is_stmt 1
 973 04ac 6FF09FFB 		j	.L40
 974              	.LVL66:
GAS LISTING /tmp/ccT0un0C.s 			page 30


 975              	.L42:
 122:src/Riscv.cpp ****         case ecallUserInterrupt:
 976              		.loc 1 122 9
 123:src/Riscv.cpp ****         {
 977              		.loc 1 123 9
 124:src/Riscv.cpp ****             uint64 operation;
 978              		.loc 1 124 9
 979              	.LBB75:
 125:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
 980              		.loc 1 125 13
 126:src/Riscv.cpp **** 
 981              		.loc 1 126 13
 126:src/Riscv.cpp **** 
 982              		.loc 1 126 61 is_stmt 0
 983              	#APP
 984              	# 126 "src/Riscv.cpp" 1
 985              		mv a5, a0
 986              	# 0 "" 2
 987              	.LVL67:
 128:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 988              		.loc 1 128 13 is_stmt 1
 989              	#NO_APP
 990              	.LBB76:
 991              	.LBB77:
 130:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 992              		.loc 2 130 5
 131:src/../h/Riscv.hpp ****     return sepc;
 993              		.loc 2 131 5
 131:src/../h/Riscv.hpp ****     return sepc;
 994              		.loc 2 131 51 is_stmt 0
 995              	#APP
 996              	# 131 "src/../h/Riscv.hpp" 1
 997              		csrr a4, sepc
 998              	# 0 "" 2
 999              	#NO_APP
 1000 04b8 233CE4FC 		sd	a4,-40(s0)
 132:src/../h/Riscv.hpp **** }
 1001              		.loc 2 132 5 is_stmt 1
 132:src/../h/Riscv.hpp **** }
 1002              		.loc 2 132 12 is_stmt 0
 1003 04bc 033784FD 		ld	a4,-40(s0)
 1004              	.LBE77:
 1005              	.LBE76:
 128:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 1006              		.loc 1 128 52
 1007 04c0 13074700 		addi	a4,a4,4
 128:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 1008              		.loc 1 128 54
 1009 04c4 2334E4FA 		sd	a4,-88(s0)
 129:src/Riscv.cpp **** 
 1010              		.loc 1 129 13 is_stmt 1
 1011              	.LBB78:
 1012              	.LBB79:
 203:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 1013              		.loc 2 203 5
 204:src/../h/Riscv.hpp ****     return sstatus;
 1014              		.loc 2 204 5
GAS LISTING /tmp/ccT0un0C.s 			page 31


 204:src/../h/Riscv.hpp ****     return sstatus;
 1015              		.loc 2 204 57 is_stmt 0
 1016              	#APP
 1017              	# 204 "src/../h/Riscv.hpp" 1
 1018              		csrr a4, sstatus
 1019              	# 0 "" 2
 1020              	#NO_APP
 1021 04cc 2338E4FC 		sd	a4,-48(s0)
 205:src/../h/Riscv.hpp **** }
 1022              		.loc 2 205 5 is_stmt 1
 205:src/../h/Riscv.hpp **** }
 1023              		.loc 2 205 12 is_stmt 0
 1024 04d0 033704FD 		ld	a4,-48(s0)
 1025              	.LBE79:
 1026              	.LBE78:
 129:src/Riscv.cpp **** 
 1027              		.loc 1 129 56
 1028 04d4 2338E4FA 		sd	a4,-80(s0)
 131:src/Riscv.cpp ****             {
 1029              		.loc 1 131 13 is_stmt 1
 1030 04d8 13073004 		li	a4,67
 1031 04dc 6364F702 		bgtu	a5,a4,.L51
 1032 04e0 93972700 		slli	a5,a5,2
 1033              	.LVL68:
 1034 04e4 17070000 		lla	a4,.L53
 1034      13070700 
 1035 04ec B387E700 		add	a5,a5,a4
 1036 04f0 83A70700 		lw	a5,0(a5)
 1037 04f4 B387E700 		add	a5,a5,a4
 1038 04f8 67800700 		jr	a5
 1039              		.section	.rodata
 1040              		.align	2
 1041              		.align	2
 1042              	.L53:
 1043 0000 00000000 		.word	.L51-.L53
 1044 0004 00000000 		.word	.L67-.L53
 1045 0008 00000000 		.word	.L66-.L53
 1046 000c 00000000 		.word	.L51-.L53
 1047 0010 00000000 		.word	.L51-.L53
 1048 0014 00000000 		.word	.L51-.L53
 1049 0018 00000000 		.word	.L51-.L53
 1050 001c 00000000 		.word	.L51-.L53
 1051 0020 00000000 		.word	.L51-.L53
 1052 0024 00000000 		.word	.L51-.L53
 1053 0028 00000000 		.word	.L51-.L53
 1054 002c 00000000 		.word	.L51-.L53
 1055 0030 00000000 		.word	.L51-.L53
 1056 0034 00000000 		.word	.L51-.L53
 1057 0038 00000000 		.word	.L51-.L53
 1058 003c 00000000 		.word	.L51-.L53
 1059 0040 00000000 		.word	.L51-.L53
 1060 0044 00000000 		.word	.L65-.L53
 1061 0048 00000000 		.word	.L64-.L53
 1062 004c 00000000 		.word	.L63-.L53
 1063 0050 00000000 		.word	.L62-.L53
 1064 0054 00000000 		.word	.L61-.L53
 1065 0058 00000000 		.word	.L51-.L53
GAS LISTING /tmp/ccT0un0C.s 			page 32


 1066 005c 00000000 		.word	.L51-.L53
 1067 0060 00000000 		.word	.L51-.L53
 1068 0064 00000000 		.word	.L51-.L53
 1069 0068 00000000 		.word	.L51-.L53
 1070 006c 00000000 		.word	.L51-.L53
 1071 0070 00000000 		.word	.L51-.L53
 1072 0074 00000000 		.word	.L51-.L53
 1073 0078 00000000 		.word	.L51-.L53
 1074 007c 00000000 		.word	.L51-.L53
 1075 0080 00000000 		.word	.L51-.L53
 1076 0084 00000000 		.word	.L60-.L53
 1077 0088 00000000 		.word	.L59-.L53
 1078 008c 00000000 		.word	.L58-.L53
 1079 0090 00000000 		.word	.L57-.L53
 1080 0094 00000000 		.word	.L51-.L53
 1081 0098 00000000 		.word	.L51-.L53
 1082 009c 00000000 		.word	.L51-.L53
 1083 00a0 00000000 		.word	.L51-.L53
 1084 00a4 00000000 		.word	.L51-.L53
 1085 00a8 00000000 		.word	.L51-.L53
 1086 00ac 00000000 		.word	.L51-.L53
 1087 00b0 00000000 		.word	.L51-.L53
 1088 00b4 00000000 		.word	.L51-.L53
 1089 00b8 00000000 		.word	.L51-.L53
 1090 00bc 00000000 		.word	.L51-.L53
 1091 00c0 00000000 		.word	.L51-.L53
 1092 00c4 00000000 		.word	.L56-.L53
 1093 00c8 00000000 		.word	.L51-.L53
 1094 00cc 00000000 		.word	.L51-.L53
 1095 00d0 00000000 		.word	.L51-.L53
 1096 00d4 00000000 		.word	.L51-.L53
 1097 00d8 00000000 		.word	.L51-.L53
 1098 00dc 00000000 		.word	.L51-.L53
 1099 00e0 00000000 		.word	.L51-.L53
 1100 00e4 00000000 		.word	.L51-.L53
 1101 00e8 00000000 		.word	.L51-.L53
 1102 00ec 00000000 		.word	.L51-.L53
 1103 00f0 00000000 		.word	.L51-.L53
 1104 00f4 00000000 		.word	.L51-.L53
 1105 00f8 00000000 		.word	.L51-.L53
 1106 00fc 00000000 		.word	.L51-.L53
 1107 0100 00000000 		.word	.L51-.L53
 1108 0104 00000000 		.word	.L55-.L53
 1109 0108 00000000 		.word	.L54-.L53
 1110 010c 00000000 		.word	.L52-.L53
 1111              		.text
 1112              	.L67:
 133:src/Riscv.cpp ****                     MemoryAllocator::memAllocHandler();
 1113              		.loc 1 133 17
 134:src/Riscv.cpp ****                     break;
 1114              		.loc 1 134 21
 134:src/Riscv.cpp ****                     break;
 1115              		.loc 1 134 53 is_stmt 0
 1116 04fc 97000000 		call	_ZN15MemoryAllocator15memAllocHandlerEv@plt
 1116      E7800000 
 1117              	.LVL69:
 135:src/Riscv.cpp ****                 case MemoryAllocator::MEM_FREE:
GAS LISTING /tmp/ccT0un0C.s 			page 33


 1118              		.loc 1 135 21 is_stmt 1
 1119              	.L51:
 180:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 1120              		.loc 1 180 13
 180:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 1121              		.loc 1 180 29 is_stmt 0
 1122 0504 833704FB 		ld	a5,-80(s0)
 1123              	.LVL70:
 1124              	.LBB80:
 1125              	.LBB81:
 209:src/../h/Riscv.hpp **** }
 1126              		.loc 2 209 5 is_stmt 1
 209:src/../h/Riscv.hpp **** }
 1127              		.loc 2 209 57 is_stmt 0
 1128              	#APP
 1129              	# 209 "src/../h/Riscv.hpp" 1
 1130              		csrw sstatus, a5
 1131              	# 0 "" 2
 1132              	.LVL71:
 1133              	#NO_APP
 1134              	.LBE81:
 1135              	.LBE80:
 181:src/Riscv.cpp ****             changePrivMode();
 1136              		.loc 1 181 13 is_stmt 1
 181:src/Riscv.cpp ****             changePrivMode();
 1137              		.loc 1 181 26 is_stmt 0
 1138 050c 833784FA 		ld	a5,-88(s0)
 1139              	.LVL72:
 1140              	.LBB82:
 1141              	.LBB83:
 136:src/../h/Riscv.hpp **** }
 1142              		.loc 2 136 5 is_stmt 1
 136:src/../h/Riscv.hpp **** }
 1143              		.loc 2 136 51 is_stmt 0
 1144              	#APP
 1145              	# 136 "src/../h/Riscv.hpp" 1
 1146              		csrw sepc, a5
 1147              	# 0 "" 2
 1148              	.LVL73:
 1149              	#NO_APP
 1150              	.LBE83:
 1151              	.LBE82:
 182:src/Riscv.cpp ****             break;
 1152              		.loc 1 182 13 is_stmt 1
 182:src/Riscv.cpp ****             break;
 1153              		.loc 1 182 27 is_stmt 0
 1154 0514 97000000 		call	_ZN5Riscv14changePrivModeEv
 1154      E7800000 
 1155              	.LVL74:
 183:src/Riscv.cpp ****         }
 1156              		.loc 1 183 13 is_stmt 1
 1157              	.LBE75:
 1158              	.LBE87:
 1159              	.LBE89:
 186:src/Riscv.cpp **** 
 1160              		.loc 1 186 1 is_stmt 0
 1161 051c 6FF09FF4 		j	.L40
GAS LISTING /tmp/ccT0un0C.s 			page 34


 1162              	.L66:
 1163              	.LBB90:
 1164              	.LBB88:
 1165              	.LBB84:
 136:src/Riscv.cpp ****                     MemoryAllocator::memFreeHandler();
 1166              		.loc 1 136 17 is_stmt 1
 137:src/Riscv.cpp ****                     break;
 1167              		.loc 1 137 21
 137:src/Riscv.cpp ****                     break;
 1168              		.loc 1 137 52 is_stmt 0
 1169 0520 97000000 		call	_ZN15MemoryAllocator14memFreeHandlerEv@plt
 1169      E7800000 
 1170              	.LVL75:
 138:src/Riscv.cpp ****                 case PCB::THREAD_MAKE_PCB:
 1171              		.loc 1 138 21 is_stmt 1
 1172 0528 6FF0DFFD 		j	.L51
 1173              	.L62:
 139:src/Riscv.cpp ****                     PCB::threadMakePCBHandler();
 1174              		.loc 1 139 17
 140:src/Riscv.cpp ****                     break;
 1175              		.loc 1 140 21
 140:src/Riscv.cpp ****                     break;
 1176              		.loc 1 140 46 is_stmt 0
 1177 052c 97000000 		call	_ZN3PCB20threadMakePCBHandlerEv@plt
 1177      E7800000 
 1178              	.LVL76:
 141:src/Riscv.cpp ****                 case PCB::THREAD_CREATE:
 1179              		.loc 1 141 21 is_stmt 1
 1180 0534 6FF01FFD 		j	.L51
 1181              	.L65:
 142:src/Riscv.cpp ****                     PCB::threadCreateHandler();
 1182              		.loc 1 142 17
 143:src/Riscv.cpp ****                     break;
 1183              		.loc 1 143 21
 143:src/Riscv.cpp ****                     break;
 1184              		.loc 1 143 45 is_stmt 0
 1185 0538 97000000 		call	_ZN3PCB19threadCreateHandlerEv@plt
 1185      E7800000 
 1186              	.LVL77:
 144:src/Riscv.cpp ****                 case PCB::THREAD_START:
 1187              		.loc 1 144 21 is_stmt 1
 1188 0540 6FF05FFC 		j	.L51
 1189              	.L61:
 145:src/Riscv.cpp ****                     PCB::threadStartHandler();
 1190              		.loc 1 145 17
 146:src/Riscv.cpp ****                     break;
 1191              		.loc 1 146 21
 146:src/Riscv.cpp ****                     break;
 1192              		.loc 1 146 44 is_stmt 0
 1193 0544 97000000 		call	_ZN3PCB18threadStartHandlerEv@plt
 1193      E7800000 
 1194              	.LVL78:
 147:src/Riscv.cpp ****                 case PCB::THREAD_DISPATCH:
 1195              		.loc 1 147 21 is_stmt 1
 1196 054c 6FF09FFB 		j	.L51
 1197              	.L63:
 148:src/Riscv.cpp ****                     PCB::threadDispatchHandler();
GAS LISTING /tmp/ccT0un0C.s 			page 35


 1198              		.loc 1 148 17
 149:src/Riscv.cpp ****                     break;
 1199              		.loc 1 149 21
 149:src/Riscv.cpp ****                     break;
 1200              		.loc 1 149 47 is_stmt 0
 1201 0550 97000000 		call	_ZN3PCB21threadDispatchHandlerEv@plt
 1201      E7800000 
 1202              	.LVL79:
 150:src/Riscv.cpp ****                 case PCB::THREAD_EXIT:
 1203              		.loc 1 150 21 is_stmt 1
 1204 0558 6FF0DFFA 		j	.L51
 1205              	.L64:
 151:src/Riscv.cpp ****                     PCB::threadExitHandler();
 1206              		.loc 1 151 17
 152:src/Riscv.cpp ****                     break;
 1207              		.loc 1 152 21
 152:src/Riscv.cpp ****                     break;
 1208              		.loc 1 152 43 is_stmt 0
 1209 055c 97000000 		call	_ZN3PCB17threadExitHandlerEv@plt
 1209      E7800000 
 1210              	.LVL80:
 153:src/Riscv.cpp ****                 case PCB::TIME_SLEEP:
 1211              		.loc 1 153 21 is_stmt 1
 1212 0564 6FF01FFA 		j	.L51
 1213              	.L56:
 154:src/Riscv.cpp ****                     PCB::threadSleepHandler();
 1214              		.loc 1 154 17
 155:src/Riscv.cpp ****                     break;
 1215              		.loc 1 155 21
 155:src/Riscv.cpp ****                     break;
 1216              		.loc 1 155 44 is_stmt 0
 1217 0568 97000000 		call	_ZN3PCB18threadSleepHandlerEv@plt
 1217      E7800000 
 1218              	.LVL81:
 156:src/Riscv.cpp ****                 case KSemaphore::SEM_OPEN:
 1219              		.loc 1 156 21 is_stmt 1
 1220 0570 6FF05FF9 		j	.L51
 1221              	.L60:
 157:src/Riscv.cpp ****                     KSemaphore::semOpenHandler();
 1222              		.loc 1 157 17
 158:src/Riscv.cpp ****                     break;
 1223              		.loc 1 158 21
 158:src/Riscv.cpp ****                     break;
 1224              		.loc 1 158 47 is_stmt 0
 1225 0574 97000000 		call	_ZN10KSemaphore14semOpenHandlerEv@plt
 1225      E7800000 
 1226              	.LVL82:
 159:src/Riscv.cpp ****                 case KSemaphore::SEM_WAIT:
 1227              		.loc 1 159 21 is_stmt 1
 1228 057c 6FF09FF8 		j	.L51
 1229              	.L58:
 160:src/Riscv.cpp ****                     KSemaphore::semWaitHandler();
 1230              		.loc 1 160 17
 161:src/Riscv.cpp ****                     break;
 1231              		.loc 1 161 21
 161:src/Riscv.cpp ****                     break;
 1232              		.loc 1 161 47 is_stmt 0
GAS LISTING /tmp/ccT0un0C.s 			page 36


 1233 0580 97000000 		call	_ZN10KSemaphore14semWaitHandlerEv@plt
 1233      E7800000 
 1234              	.LVL83:
 162:src/Riscv.cpp ****                 case KSemaphore::SEM_SIGNAL:
 1235              		.loc 1 162 21 is_stmt 1
 1236 0588 6FF0DFF7 		j	.L51
 1237              	.L57:
 163:src/Riscv.cpp ****                     KSemaphore::semSignalHandler();
 1238              		.loc 1 163 17
 164:src/Riscv.cpp ****                     break;
 1239              		.loc 1 164 21
 164:src/Riscv.cpp ****                     break;
 1240              		.loc 1 164 49 is_stmt 0
 1241 058c 97000000 		call	_ZN10KSemaphore16semSignalHandlerEv@plt
 1241      E7800000 
 1242              	.LVL84:
 165:src/Riscv.cpp ****                 case KSemaphore::SEM_CLOSE:
 1243              		.loc 1 165 21 is_stmt 1
 1244 0594 6FF01FF7 		j	.L51
 1245              	.L59:
 166:src/Riscv.cpp ****                     KSemaphore::semCloseHandler();
 1246              		.loc 1 166 17
 167:src/Riscv.cpp ****                     break;
 1247              		.loc 1 167 21
 167:src/Riscv.cpp ****                     break;
 1248              		.loc 1 167 48 is_stmt 0
 1249 0598 97000000 		call	_ZN10KSemaphore15semCloseHandlerEv@plt
 1249      E7800000 
 1250              	.LVL85:
 168:src/Riscv.cpp ****                 case KConsole::CONSOLE_GETC:
 1251              		.loc 1 168 21 is_stmt 1
 1252 05a0 6FF05FF6 		j	.L51
 1253              	.L55:
 169:src/Riscv.cpp ****                     KConsole::getcHandler();
 1254              		.loc 1 169 17
 170:src/Riscv.cpp ****                     break;
 1255              		.loc 1 170 21
 170:src/Riscv.cpp ****                     break;
 1256              		.loc 1 170 42 is_stmt 0
 1257 05a4 97000000 		call	_ZN8KConsole11getcHandlerEv@plt
 1257      E7800000 
 1258              	.LVL86:
 171:src/Riscv.cpp ****                 case KConsole::CONSOLE_PUTC:
 1259              		.loc 1 171 21 is_stmt 1
 1260 05ac 6FF09FF5 		j	.L51
 1261              	.L54:
 172:src/Riscv.cpp ****                     KConsole::putcHandler();
 1262              		.loc 1 172 17
 173:src/Riscv.cpp ****                     break;
 1263              		.loc 1 173 21
 173:src/Riscv.cpp ****                     break;
 1264              		.loc 1 173 42 is_stmt 0
 1265 05b0 97000000 		call	_ZN8KConsole11putcHandlerEv@plt
 1265      E7800000 
 1266              	.LVL87:
 174:src/Riscv.cpp ****                 case KConsole::CONSOLE_GET_CHAR:
 1267              		.loc 1 174 21 is_stmt 1
GAS LISTING /tmp/ccT0un0C.s 			page 37


 1268 05b8 6FF0DFF4 		j	.L51
 1269              	.L52:
 175:src/Riscv.cpp ****                     KConsole::getCharHandler();
 1270              		.loc 1 175 17
 176:src/Riscv.cpp ****                     break;
 1271              		.loc 1 176 21
 176:src/Riscv.cpp ****                     break;
 1272              		.loc 1 176 45 is_stmt 0
 1273 05bc 97000000 		call	_ZN8KConsole14getCharHandlerEv@plt
 1273      E7800000 
 1274              	.LVL88:
 177:src/Riscv.cpp ****             }
 1275              		.loc 1 177 21 is_stmt 1
 1276 05c4 6FF01FF4 		j	.L51
 1277              	.LBE84:
 1278              	.LBE88:
 1279              	.LBE90:
 1280              		.cfi_endproc
 1281              	.LFE32:
 1283              		.globl	_ZN5Riscv16kernelMainCalledE
 1284              		.globl	_ZN5Riscv12finishSystemE
 1285              		.globl	_ZN5Riscv9totalTimeE
 1286              		.bss
 1287              		.align	3
 1288              		.set	.LANCHOR0,. + 0
 1291              	_ZN5Riscv16kernelMainCalledE:
 1292 0000 00       		.zero	1
 1295              	_ZN5Riscv12finishSystemE:
 1296 0001 00       		.zero	1
 1297 0002 00000000 		.zero	6
 1297      0000
 1300              	_ZN5Riscv9totalTimeE:
 1301 0008 00000000 		.zero	8
 1301      00000000 
 1302              		.text
 1303              	.Letext0:
 1304              		.file 4 "src/../h/../lib/hw.h"
 1305              		.file 5 "src/../h/MemoryAllocator.hpp"
 1306              		.file 6 "src/../h/KSemaphore.hpp"
 1307              		.file 7 "src/../h/SleepPCBList.hpp"
 1308              		.file 8 "src/../h/KConsole.hpp"
 1309              		.file 9 "src/../h/Tests.hpp"
 1310              		.file 10 "src/../test/userMain.hpp"
 1311              		.file 11 "src/../h/../test/../h/syscall_c.h"
 5731              		.align	3
 5734              	DW.ref.__gxx_personality_v0:
 5735 0000 00000000 		.dword	__gxx_personality_v0
 5735      00000000 
 5736              		.ident	"GCC: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0"
 5737              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/ccT0un0C.s 			page 38


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Riscv.cpp
     /tmp/ccT0un0C.s:9      .text:0000000000000000 _ZN5Riscv15userMainWrapperEPv
     /tmp/ccT0un0C.s:13     .text:0000000000000000 .L0 
     /tmp/ccT0un0C.s:14     .text:0000000000000000 .L0 
     /tmp/ccT0un0C.s:15     .text:0000000000000004 .L0 
     /tmp/ccT0un0C.s:18     .text:000000000000000c .L0 
     /tmp/ccT0un0C.s:19     .text:000000000000000c .L0 
     /tmp/ccT0un0C.s:21     .text:0000000000000010 .L0 
     /tmp/ccT0un0C.s:23     .text:0000000000000010 .L0 
     /tmp/ccT0un0C.s:24     .text:0000000000000010 .L0 
     /tmp/ccT0un0C.s:27     .text:0000000000000018 .L0 
     /tmp/ccT0un0C.s:28     .text:000000000000001c .L0 
     /tmp/ccT0un0C.s:30     .text:0000000000000020 .L0 
     /tmp/ccT0un0C.s:31     .text:0000000000000020 .L0 
     /tmp/ccT0un0C.s:33     .text:0000000000000024 .L0 
     /tmp/ccT0un0C.s:35     .text:0000000000000028 .L0 
     /tmp/ccT0un0C.s:41     .text:0000000000000028 _ZN5Riscv10initSystemEv
     /tmp/ccT0un0C.s:44     .text:0000000000000028 .L0 
     /tmp/ccT0un0C.s:45     .text:0000000000000028 .L0 
     /tmp/ccT0un0C.s:46     .text:000000000000002c .L0 
     /tmp/ccT0un0C.s:49     .text:0000000000000034 .L0 
     /tmp/ccT0un0C.s:50     .text:0000000000000034 .L0 
     /tmp/ccT0un0C.s:52     .text:0000000000000038 .L0 
     /tmp/ccT0un0C.s:54     .text:0000000000000038 .L0 
     /tmp/ccT0un0C.s:55     .text:0000000000000038 .L0 
     /tmp/ccT0un0C.s:61     .text:0000000000000040 .L0 
  src/../h/Riscv.hpp:146    .text:0000000000000040 .L0 
     /tmp/ccT0un0C.s:71     .text:0000000000000044 .L0 
     /tmp/ccT0un0C.s:72     .text:0000000000000044 .L0 
     /tmp/ccT0un0C.s:75     .text:000000000000004c .L0 
     /tmp/ccT0un0C.s:76     .text:000000000000004c .L0 
     /tmp/ccT0un0C.s:79     .text:0000000000000054 .L0 
     /tmp/ccT0un0C.s:80     .text:0000000000000058 .L0 
     /tmp/ccT0un0C.s:82     .text:000000000000005c .L0 
     /tmp/ccT0un0C.s:83     .text:000000000000005c .L0 
     /tmp/ccT0un0C.s:85     .text:0000000000000060 .L0 
     /tmp/ccT0un0C.s:87     .text:0000000000000064 .L0 
     /tmp/ccT0un0C.s:93     .text:0000000000000064 _ZN5Riscv16enableInterruptsEv
     /tmp/ccT0un0C.s:96     .text:0000000000000064 .L0 
     /tmp/ccT0un0C.s:97     .text:0000000000000064 .L0 
     /tmp/ccT0un0C.s:98     .text:0000000000000068 .L0 
     /tmp/ccT0un0C.s:100    .text:000000000000006c .L0 
     /tmp/ccT0un0C.s:102    .text:0000000000000070 .L0 
     /tmp/ccT0un0C.s:107    .text:0000000000000070 .L0 
     /tmp/ccT0un0C.s:108    .text:0000000000000070 .L0 
     /tmp/ccT0un0C.s:109    .text:0000000000000070 .L0 
     /tmp/ccT0un0C.s:119    .text:0000000000000078 .L0 
     /tmp/ccT0un0C.s:120    .text:000000000000007c .L0 
     /tmp/ccT0un0C.s:121    .text:000000000000007c .L0 
     /tmp/ccT0un0C.s:123    .text:0000000000000080 .L0 
     /tmp/ccT0un0C.s:125    .text:0000000000000084 .L0 
     /tmp/ccT0un0C.s:131    .text:0000000000000084 _ZN5Riscv17disableInterruptsEv
     /tmp/ccT0un0C.s:134    .text:0000000000000084 .L0 
     /tmp/ccT0un0C.s:135    .text:0000000000000084 .L0 
     /tmp/ccT0un0C.s:136    .text:0000000000000088 .L0 
     /tmp/ccT0un0C.s:138    .text:000000000000008c .L0 
GAS LISTING /tmp/ccT0un0C.s 			page 39


     /tmp/ccT0un0C.s:140    .text:0000000000000090 .L0 
     /tmp/ccT0un0C.s:145    .text:0000000000000090 .L0 
     /tmp/ccT0un0C.s:146    .text:0000000000000090 .L0 
     /tmp/ccT0un0C.s:147    .text:0000000000000090 .L0 
     /tmp/ccT0un0C.s:157    .text:0000000000000098 .L0 
     /tmp/ccT0un0C.s:158    .text:000000000000009c .L0 
     /tmp/ccT0un0C.s:159    .text:000000000000009c .L0 
     /tmp/ccT0un0C.s:161    .text:00000000000000a0 .L0 
     /tmp/ccT0un0C.s:163    .text:00000000000000a4 .L0 
     /tmp/ccT0un0C.s:169    .text:00000000000000a4 _ZN5Riscv9endSystemEv
     /tmp/ccT0un0C.s:172    .text:00000000000000a4 .L0 
     /tmp/ccT0un0C.s:173    .text:00000000000000a4 .L0 
     /tmp/ccT0un0C.s:174    .text:00000000000000a8 .L0 
     /tmp/ccT0un0C.s:177    .text:00000000000000b0 .L0 
     /tmp/ccT0un0C.s:178    .text:00000000000000b0 .L0 
     /tmp/ccT0un0C.s:180    .text:00000000000000b4 .L0 
     /tmp/ccT0un0C.s:182    .text:00000000000000b4 .L0 
     /tmp/ccT0un0C.s:183    .text:00000000000000b4 .L0 
     /tmp/ccT0un0C.s:186    .text:00000000000000bc .L0 
     /tmp/ccT0un0C.s:187    .text:00000000000000c0 .L0 
     /tmp/ccT0un0C.s:189    .text:00000000000000c4 .L0 
     /tmp/ccT0un0C.s:190    .text:00000000000000c4 .L0 
     /tmp/ccT0un0C.s:192    .text:00000000000000c8 .L0 
     /tmp/ccT0un0C.s:194    .text:00000000000000cc .L0 
     /tmp/ccT0un0C.s:200    .text:00000000000000cc _ZN5Riscv10popSppSpieEv
     /tmp/ccT0un0C.s:203    .text:00000000000000cc .L0 
     /tmp/ccT0un0C.s:204    .text:00000000000000cc .L0 
     /tmp/ccT0un0C.s:205    .text:00000000000000d0 .L0 
     /tmp/ccT0un0C.s:207    .text:00000000000000d4 .L0 
     /tmp/ccT0un0C.s:209    .text:00000000000000d8 .L0 
     /tmp/ccT0un0C.s:211    .text:00000000000000d8 .L0 
       src/Riscv.cpp:42     .text:00000000000000d8 .L0 
     /tmp/ccT0un0C.s:217    .text:00000000000000dc .L0 
       src/Riscv.cpp:43     .text:00000000000000dc .L0 
     /tmp/ccT0un0C.s:223    .text:00000000000000e0 .L0 
     /tmp/ccT0un0C.s:224    .text:00000000000000e4 .L0 
     /tmp/ccT0un0C.s:225    .text:00000000000000e4 .L0 
     /tmp/ccT0un0C.s:227    .text:00000000000000e8 .L0 
     /tmp/ccT0un0C.s:229    .text:00000000000000ec .L0 
     /tmp/ccT0un0C.s:235    .text:00000000000000ec _ZN5Riscv10kernelMainEv
     /tmp/ccT0un0C.s:238    .text:00000000000000ec .L0 
     /tmp/ccT0un0C.s:5734   .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/ccT0un0C.s:241    .text:00000000000000ec .L0 
     /tmp/ccT0un0C.s:242    .text:00000000000000ec .L0 
     /tmp/ccT0un0C.s:247    .text:00000000000000fc .L0 
     /tmp/ccT0un0C.s:248    .text:0000000000000100 .L0 
     /tmp/ccT0un0C.s:253    .text:0000000000000110 .L0 
     /tmp/ccT0un0C.s:254    .text:0000000000000110 .L0 
     /tmp/ccT0un0C.s:255    .text:0000000000000110 .L0 
     /tmp/ccT0un0C.s:256    .text:0000000000000110 .L0 
     /tmp/ccT0un0C.s:258    .text:0000000000000114 .L0 
     /tmp/ccT0un0C.s:260    .text:0000000000000114 .L0 
     /tmp/ccT0un0C.s:261    .text:0000000000000114 .L0 
     /tmp/ccT0un0C.s:265    .text:0000000000000120 .L0 
     /tmp/ccT0un0C.s:266    .text:0000000000000120 .L0 
     /tmp/ccT0un0C.s:269    .text:0000000000000128 .L0 
     /tmp/ccT0un0C.s:270    .text:0000000000000128 .L0 
GAS LISTING /tmp/ccT0un0C.s 			page 40


     /tmp/ccT0un0C.s:275    .text:0000000000000138 .L0 
     /tmp/ccT0un0C.s:289    .text:0000000000000164 .L0 
     /tmp/ccT0un0C.s:290    .text:0000000000000164 .L0 
     /tmp/ccT0un0C.s:295    .text:0000000000000170 .L0 
     /tmp/ccT0un0C.s:296    .text:0000000000000170 .L0 
     /tmp/ccT0un0C.s:300    .text:0000000000000178 .L0 
     /tmp/ccT0un0C.s:301    .text:0000000000000178 .L0 
     /tmp/ccT0un0C.s:302    .text:0000000000000178 .L0 
     /tmp/ccT0un0C.s:306    .text:0000000000000184 .L0 
     /tmp/ccT0un0C.s:308    .text:0000000000000188 .L0 
     /tmp/ccT0un0C.s:309    .text:0000000000000188 .L0 
     /tmp/ccT0un0C.s:312    .text:0000000000000190 .L0 
     /tmp/ccT0un0C.s:315    .text:0000000000000194 .L0 
     /tmp/ccT0un0C.s:316    .text:0000000000000194 .L0 
     /tmp/ccT0un0C.s:321    .text:00000000000001a4 .L0 
     /tmp/ccT0un0C.s:322    .text:00000000000001a4 .L0 
     /tmp/ccT0un0C.s:326    .text:00000000000001ac .L0 
     /tmp/ccT0un0C.s:327    .text:00000000000001ac .L0 
     /tmp/ccT0un0C.s:328    .text:00000000000001ac .L0 
     /tmp/ccT0un0C.s:334    .text:00000000000001c0 .L0 
     /tmp/ccT0un0C.s:336    .text:00000000000001c4 .L0 
     /tmp/ccT0un0C.s:337    .text:00000000000001c4 .L0 
     /tmp/ccT0un0C.s:340    .text:00000000000001cc .L0 
     /tmp/ccT0un0C.s:341    .text:00000000000001cc .L0 
     /tmp/ccT0un0C.s:344    .text:00000000000001d4 .L0 
     /tmp/ccT0un0C.s:345    .text:00000000000001d8 .L0 
     /tmp/ccT0un0C.s:346    .text:00000000000001d8 .L0 
     /tmp/ccT0un0C.s:348    .text:00000000000001dc .L0 
     /tmp/ccT0un0C.s:349    .text:00000000000001dc .L0 
     /tmp/ccT0un0C.s:351    .text:00000000000001e0 .L0 
     /tmp/ccT0un0C.s:354    .text:00000000000001e4 .L0 
     /tmp/ccT0un0C.s:356    .text:00000000000001e8 .L0 
     /tmp/ccT0un0C.s:359    .text:00000000000001ec .L0 
     /tmp/ccT0un0C.s:362    .text:00000000000001f0 .L0 
     /tmp/ccT0un0C.s:370    .text:0000000000000208 .L0 
     /tmp/ccT0un0C.s:400    .text:0000000000000208 _ZN5Riscv14myTestsWrapperEPv
     /tmp/ccT0un0C.s:403    .text:0000000000000208 .L0 
     /tmp/ccT0un0C.s:405    .text:0000000000000208 .L0 
     /tmp/ccT0un0C.s:406    .text:000000000000020c .L0 
     /tmp/ccT0un0C.s:409    .text:0000000000000214 .L0 
     /tmp/ccT0un0C.s:410    .text:0000000000000214 .L0 
     /tmp/ccT0un0C.s:412    .text:0000000000000218 .L0 
     /tmp/ccT0un0C.s:414    .text:0000000000000218 .L0 
     /tmp/ccT0un0C.s:415    .text:0000000000000218 .L0 
     /tmp/ccT0un0C.s:418    .text:0000000000000220 .L0 
     /tmp/ccT0un0C.s:419    .text:0000000000000224 .L0 
     /tmp/ccT0un0C.s:421    .text:0000000000000228 .L0 
     /tmp/ccT0un0C.s:422    .text:0000000000000228 .L0 
     /tmp/ccT0un0C.s:424    .text:000000000000022c .L0 
     /tmp/ccT0un0C.s:426    .text:0000000000000230 .L0 
     /tmp/ccT0un0C.s:432    .text:0000000000000230 _ZN5Riscv22disableTimerInterruptsEv
     /tmp/ccT0un0C.s:435    .text:0000000000000230 .L0 
     /tmp/ccT0un0C.s:436    .text:0000000000000230 .L0 
     /tmp/ccT0un0C.s:437    .text:0000000000000234 .L0 
     /tmp/ccT0un0C.s:439    .text:0000000000000238 .L0 
     /tmp/ccT0un0C.s:441    .text:000000000000023c .L0 
     /tmp/ccT0un0C.s:444    .text:000000000000023c .L0 
GAS LISTING /tmp/ccT0un0C.s 			page 41


     /tmp/ccT0un0C.s:445    .text:000000000000023c .L0 
     /tmp/ccT0un0C.s:446    .text:000000000000023c .L0 
     /tmp/ccT0un0C.s:453    .text:0000000000000244 .L0 
     /tmp/ccT0un0C.s:454    .text:0000000000000248 .L0 
     /tmp/ccT0un0C.s:455    .text:0000000000000248 .L0 
     /tmp/ccT0un0C.s:457    .text:000000000000024c .L0 
     /tmp/ccT0un0C.s:459    .text:0000000000000250 .L0 
     /tmp/ccT0un0C.s:465    .text:0000000000000250 _ZN5Riscv9idleRiscvEPv
     /tmp/ccT0un0C.s:468    .text:0000000000000250 .L0 
     /tmp/ccT0un0C.s:470    .text:0000000000000250 .L0 
     /tmp/ccT0un0C.s:471    .text:0000000000000254 .L0 
     /tmp/ccT0un0C.s:473    .text:0000000000000258 .L0 
     /tmp/ccT0un0C.s:475    .text:000000000000025c .L0 
     /tmp/ccT0un0C.s:478    .text:000000000000025c .L0 
     /tmp/ccT0un0C.s:479    .text:000000000000025c .L0 
     /tmp/ccT0un0C.s:480    .text:0000000000000260 .L0 
     /tmp/ccT0un0C.s:486    .text:0000000000000260 _ZN5Riscv13w_a0_sscratchEv
     /tmp/ccT0un0C.s:489    .text:0000000000000260 .L0 
     /tmp/ccT0un0C.s:490    .text:0000000000000260 .L0 
     /tmp/ccT0un0C.s:491    .text:0000000000000264 .L0 
     /tmp/ccT0un0C.s:493    .text:0000000000000268 .L0 
     /tmp/ccT0un0C.s:495    .text:000000000000026c .L0 
     /tmp/ccT0un0C.s:497    .text:000000000000026c .L0 
     /tmp/ccT0un0C.s:498    .text:000000000000026c .L0 
       src/Riscv.cpp:243    .text:000000000000026c .L0 
     /tmp/ccT0un0C.s:505    .text:0000000000000270 .L0 
     /tmp/ccT0un0C.s:507    .text:0000000000000270 .L0 
       src/Riscv.cpp:244    .text:0000000000000280 .L0 
     /tmp/ccT0un0C.s:516    .text:0000000000000284 .L0 
       src/Riscv.cpp:245    .text:0000000000000284 .L0 
     /tmp/ccT0un0C.s:521    .text:0000000000000288 .L0 
       src/Riscv.cpp:246    .text:0000000000000288 .L0 
     /tmp/ccT0un0C.s:527    .text:000000000000028c .L0 
     /tmp/ccT0un0C.s:528    .text:0000000000000290 .L0 
     /tmp/ccT0un0C.s:529    .text:0000000000000290 .L0 
     /tmp/ccT0un0C.s:531    .text:0000000000000294 .L0 
     /tmp/ccT0un0C.s:533    .text:0000000000000298 .L0 
     /tmp/ccT0un0C.s:539    .text:0000000000000298 _ZN5Riscv14changePrivModeEv
     /tmp/ccT0un0C.s:542    .text:0000000000000298 .L0 
     /tmp/ccT0un0C.s:543    .text:0000000000000298 .L0 
     /tmp/ccT0un0C.s:544    .text:000000000000029c .L0 
     /tmp/ccT0un0C.s:546    .text:00000000000002a0 .L0 
     /tmp/ccT0un0C.s:548    .text:00000000000002a4 .L0 
     /tmp/ccT0un0C.s:550    .text:00000000000002a4 .L0 
     /tmp/ccT0un0C.s:551    .text:00000000000002a4 .L0 
     /tmp/ccT0un0C.s:555    .text:00000000000002b4 .L0 
     /tmp/ccT0un0C.s:560    .text:00000000000002b8 .L0 
     /tmp/ccT0un0C.s:561    .text:00000000000002b8 .L0 
     /tmp/ccT0un0C.s:562    .text:00000000000002b8 .L0 
     /tmp/ccT0un0C.s:573    .text:00000000000002c0 .L0 
     /tmp/ccT0un0C.s:574    .text:00000000000002c4 .L0 
     /tmp/ccT0un0C.s:575    .text:00000000000002c4 .L0 
     /tmp/ccT0un0C.s:576    .text:00000000000002c4 .L0 
     /tmp/ccT0un0C.s:578    .text:00000000000002c8 .L0 
     /tmp/ccT0un0C.s:581    .text:00000000000002cc .L0 
     /tmp/ccT0un0C.s:586    .text:00000000000002cc .L0 
     /tmp/ccT0un0C.s:587    .text:00000000000002cc .L0 
GAS LISTING /tmp/ccT0un0C.s 			page 42


     /tmp/ccT0un0C.s:588    .text:00000000000002cc .L0 
     /tmp/ccT0un0C.s:598    .text:00000000000002d4 .L0 
     /tmp/ccT0un0C.s:599    .text:00000000000002d8 .L0 
     /tmp/ccT0un0C.s:605    .text:00000000000002d8 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccT0un0C.s:608    .text:00000000000002d8 .L0 
     /tmp/ccT0un0C.s:609    .text:00000000000002d8 .L0 
     /tmp/ccT0un0C.s:610    .text:00000000000002dc .L0 
     /tmp/ccT0un0C.s:614    .text:00000000000002e8 .L0 
     /tmp/ccT0un0C.s:615    .text:00000000000002e8 .L0 
     /tmp/ccT0un0C.s:616    .text:00000000000002e8 .L0 
     /tmp/ccT0un0C.s:618    .text:00000000000002ec .L0 
     /tmp/ccT0un0C.s:620    .text:00000000000002ec .L0 
       src/Riscv.cpp:48     .text:00000000000002ec .L0 
     /tmp/ccT0un0C.s:629    .text:00000000000002fc .L0 
     /tmp/ccT0un0C.s:630    .text:00000000000002fc .L0 
       src/Riscv.cpp:49     .text:0000000000000308 .L0 
     /tmp/ccT0un0C.s:642    .text:0000000000000310 .L0 
     /tmp/ccT0un0C.s:643    .text:0000000000000310 .L0 
     /tmp/ccT0un0C.s:644    .text:0000000000000310 .L0 
  src/../h/Riscv.hpp:121    .text:0000000000000310 .L0 
     /tmp/ccT0un0C.s:652    .text:0000000000000318 .L0 
     /tmp/ccT0un0C.s:653    .text:0000000000000318 .L0 
     /tmp/ccT0un0C.s:659    .text:000000000000031c .L0 
     /tmp/ccT0un0C.s:669    .text:000000000000033c .L0 
     /tmp/ccT0un0C.s:670    .text:000000000000033c .L0 
     /tmp/ccT0un0C.s:671    .text:000000000000033c .L0 
     /tmp/ccT0un0C.s:672    .text:000000000000033c .L0 
     /tmp/ccT0un0C.s:675    .text:0000000000000344 .L0 
     /tmp/ccT0un0C.s:680    .text:0000000000000348 .L0 
     /tmp/ccT0un0C.s:684    .text:0000000000000350 .L0 
     /tmp/ccT0un0C.s:685    .text:0000000000000350 .L0 
     /tmp/ccT0un0C.s:686    .text:0000000000000350 .L0 
     /tmp/ccT0un0C.s:687    .text:0000000000000350 .L0 
     /tmp/ccT0un0C.s:690    .text:0000000000000358 .L0 
     /tmp/ccT0un0C.s:695    .text:000000000000035c .L0 
     /tmp/ccT0un0C.s:705    .text:000000000000037c .L0 
     /tmp/ccT0un0C.s:707    .text:000000000000037c .L0 
     /tmp/ccT0un0C.s:708    .text:000000000000037c .L0 
     /tmp/ccT0un0C.s:709    .text:000000000000037c .L0 
     /tmp/ccT0un0C.s:714    .text:0000000000000388 .L0 
       src/Riscv.cpp:81     .text:0000000000000388 .L0 
     /tmp/ccT0un0C.s:720    .text:000000000000038c .L0 
       src/Riscv.cpp:82     .text:000000000000038c .L0 
     /tmp/ccT0un0C.s:725    .text:0000000000000390 .L0 
     /tmp/ccT0un0C.s:726    .text:0000000000000390 .L0 
       src/Riscv.cpp:84     .text:0000000000000390 .L0 
     /tmp/ccT0un0C.s:734    .text:0000000000000394 .L0 
     /tmp/ccT0un0C.s:735    .text:0000000000000394 .L0 
     /tmp/ccT0un0C.s:738    .text:0000000000000398 .L0 
     /tmp/ccT0un0C.s:741    .text:000000000000039c .L0 
     /tmp/ccT0un0C.s:742    .text:000000000000039c .L0 
     /tmp/ccT0un0C.s:746    .text:00000000000003a8 .L0 
       src/Riscv.cpp:88     .text:00000000000003a8 .L0 
     /tmp/ccT0un0C.s:752    .text:00000000000003ac .L0 
       src/Riscv.cpp:89     .text:00000000000003ac .L0 
     /tmp/ccT0un0C.s:757    .text:00000000000003b0 .L0 
     /tmp/ccT0un0C.s:758    .text:00000000000003b0 .L0 
GAS LISTING /tmp/ccT0un0C.s 			page 43


       src/Riscv.cpp:91     .text:00000000000003b0 .L0 
     /tmp/ccT0un0C.s:766    .text:00000000000003b8 .L0 
     /tmp/ccT0un0C.s:767    .text:00000000000003b8 .L0 
     /tmp/ccT0un0C.s:771    .text:00000000000003c4 .L0 
     /tmp/ccT0un0C.s:777    .text:00000000000003c8 .L0 
     /tmp/ccT0un0C.s:778    .text:00000000000003c8 .L0 
     /tmp/ccT0un0C.s:783    .text:00000000000003d8 .L0 
     /tmp/ccT0un0C.s:788    .text:00000000000003dc .L0 
     /tmp/ccT0un0C.s:790    .text:00000000000003dc .L0 
     /tmp/ccT0un0C.s:793    .text:00000000000003dc .L0 
     /tmp/ccT0un0C.s:794    .text:00000000000003dc .L0 
     /tmp/ccT0un0C.s:795    .text:00000000000003dc .L0 
  src/../h/Riscv.hpp:131    .text:00000000000003dc .L0 
     /tmp/ccT0un0C.s:804    .text:00000000000003e4 .L0 
     /tmp/ccT0un0C.s:805    .text:00000000000003e4 .L0 
     /tmp/ccT0un0C.s:809    .text:00000000000003e8 .L0 
     /tmp/ccT0un0C.s:813    .text:00000000000003ec .L0 
     /tmp/ccT0un0C.s:814    .text:00000000000003ec .L0 
     /tmp/ccT0un0C.s:815    .text:00000000000003ec .L0 
  src/../h/Riscv.hpp:204    .text:00000000000003ec .L0 
     /tmp/ccT0un0C.s:823    .text:00000000000003f4 .L0 
     /tmp/ccT0un0C.s:824    .text:00000000000003f4 .L0 
     /tmp/ccT0un0C.s:828    .text:00000000000003f8 .L0 
     /tmp/ccT0un0C.s:833    .text:00000000000003fc .L0 
     /tmp/ccT0un0C.s:834    .text:00000000000003fc .L0 
     /tmp/ccT0un0C.s:835    .text:00000000000003fc .L0 
     /tmp/ccT0un0C.s:845    .text:0000000000000404 .L0 
     /tmp/ccT0un0C.s:846    .text:0000000000000404 .L0 
     /tmp/ccT0un0C.s:851    .text:0000000000000418 .L0 
     /tmp/ccT0un0C.s:852    .text:0000000000000418 .L0 
     /tmp/ccT0un0C.s:857    .text:000000000000042c .L0 
     /tmp/ccT0un0C.s:858    .text:000000000000042c .L0 
     /tmp/ccT0un0C.s:861    .text:0000000000000434 .L0 
     /tmp/ccT0un0C.s:862    .text:0000000000000434 .L0 
     /tmp/ccT0un0C.s:869    .text:0000000000000440 .L0 
     /tmp/ccT0un0C.s:870    .text:0000000000000440 .L0 
     /tmp/ccT0un0C.s:875    .text:0000000000000444 .L0 
     /tmp/ccT0un0C.s:877    .text:0000000000000448 .L0 
     /tmp/ccT0un0C.s:880    .text:000000000000044c .L0 
     /tmp/ccT0un0C.s:881    .text:000000000000044c .L0 
     /tmp/ccT0un0C.s:886    .text:0000000000000450 .L0 
  src/../h/Riscv.hpp:209    .text:0000000000000450 .L0 
     /tmp/ccT0un0C.s:896    .text:0000000000000454 .L0 
     /tmp/ccT0un0C.s:897    .text:0000000000000454 .L0 
     /tmp/ccT0un0C.s:902    .text:0000000000000458 .L0 
  src/../h/Riscv.hpp:136    .text:0000000000000458 .L0 
     /tmp/ccT0un0C.s:912    .text:000000000000045c .L0 
     /tmp/ccT0un0C.s:913    .text:000000000000045c .L0 
     /tmp/ccT0un0C.s:920    .text:0000000000000464 .L0 
     /tmp/ccT0un0C.s:921    .text:0000000000000464 .L0 
     /tmp/ccT0un0C.s:922    .text:0000000000000468 .L0 
     /tmp/ccT0un0C.s:923    .text:0000000000000468 .L0 
     /tmp/ccT0un0C.s:925    .text:000000000000046c .L0 
     /tmp/ccT0un0C.s:926    .text:000000000000046c .L0 
     /tmp/ccT0un0C.s:928    .text:0000000000000470 .L0 
     /tmp/ccT0un0C.s:930    .text:0000000000000474 .L0 
     /tmp/ccT0un0C.s:933    .text:0000000000000478 .L0 
GAS LISTING /tmp/ccT0un0C.s 			page 44


     /tmp/ccT0un0C.s:938    .text:0000000000000478 .L0 
     /tmp/ccT0un0C.s:939    .text:0000000000000478 .L0 
     /tmp/ccT0un0C.s:941    .text:000000000000047c .L0 
     /tmp/ccT0un0C.s:942    .text:000000000000047c .L0 
     /tmp/ccT0un0C.s:952    .text:0000000000000488 .L0 
     /tmp/ccT0un0C.s:953    .text:0000000000000488 .L0 
     /tmp/ccT0un0C.s:957    .text:0000000000000498 .L0 
     /tmp/ccT0un0C.s:958    .text:0000000000000498 .L0 
     /tmp/ccT0un0C.s:967    .text:00000000000004a4 .L0 
     /tmp/ccT0un0C.s:968    .text:00000000000004a4 .L0 
     /tmp/ccT0un0C.s:969    .text:00000000000004a4 .L0 
     /tmp/ccT0un0C.s:970    .text:00000000000004a4 .L0 
     /tmp/ccT0un0C.s:973    .text:00000000000004ac .L0 
     /tmp/ccT0un0C.s:977    .text:00000000000004b0 .L0 
     /tmp/ccT0un0C.s:978    .text:00000000000004b0 .L0 
     /tmp/ccT0un0C.s:980    .text:00000000000004b0 .L0 
     /tmp/ccT0un0C.s:981    .text:00000000000004b0 .L0 
     /tmp/ccT0un0C.s:982    .text:00000000000004b0 .L0 
       src/Riscv.cpp:126    .text:00000000000004b0 .L0 
     /tmp/ccT0un0C.s:992    .text:00000000000004b4 .L0 
     /tmp/ccT0un0C.s:993    .text:00000000000004b4 .L0 
     /tmp/ccT0un0C.s:994    .text:00000000000004b4 .L0 
  src/../h/Riscv.hpp:131    .text:00000000000004b4 .L0 
     /tmp/ccT0un0C.s:1002   .text:00000000000004bc .L0 
     /tmp/ccT0un0C.s:1003   .text:00000000000004bc .L0 
     /tmp/ccT0un0C.s:1007   .text:00000000000004c0 .L0 
     /tmp/ccT0un0C.s:1009   .text:00000000000004c4 .L0 
     /tmp/ccT0un0C.s:1013   .text:00000000000004c8 .L0 
     /tmp/ccT0un0C.s:1014   .text:00000000000004c8 .L0 
     /tmp/ccT0un0C.s:1015   .text:00000000000004c8 .L0 
  src/../h/Riscv.hpp:204    .text:00000000000004c8 .L0 
     /tmp/ccT0un0C.s:1023   .text:00000000000004d0 .L0 
     /tmp/ccT0un0C.s:1024   .text:00000000000004d0 .L0 
     /tmp/ccT0un0C.s:1028   .text:00000000000004d4 .L0 
     /tmp/ccT0un0C.s:1030   .text:00000000000004d8 .L0 
     /tmp/ccT0un0C.s:1114   .text:00000000000004fc .L0 
     /tmp/ccT0un0C.s:1115   .text:00000000000004fc .L0 
     /tmp/ccT0un0C.s:1116   .text:00000000000004fc .L0 
     /tmp/ccT0un0C.s:1120   .text:0000000000000504 .L0 
     /tmp/ccT0un0C.s:1121   .text:0000000000000504 .L0 
     /tmp/ccT0un0C.s:1122   .text:0000000000000504 .L0 
     /tmp/ccT0un0C.s:1127   .text:0000000000000508 .L0 
  src/../h/Riscv.hpp:209    .text:0000000000000508 .L0 
     /tmp/ccT0un0C.s:1137   .text:000000000000050c .L0 
     /tmp/ccT0un0C.s:1138   .text:000000000000050c .L0 
     /tmp/ccT0un0C.s:1143   .text:0000000000000510 .L0 
  src/../h/Riscv.hpp:136    .text:0000000000000510 .L0 
     /tmp/ccT0un0C.s:1153   .text:0000000000000514 .L0 
     /tmp/ccT0un0C.s:1154   .text:0000000000000514 .L0 
     /tmp/ccT0un0C.s:1160   .text:000000000000051c .L0 
     /tmp/ccT0un0C.s:1161   .text:000000000000051c .L0 
     /tmp/ccT0un0C.s:1167   .text:0000000000000520 .L0 
     /tmp/ccT0un0C.s:1168   .text:0000000000000520 .L0 
     /tmp/ccT0un0C.s:1169   .text:0000000000000520 .L0 
     /tmp/ccT0un0C.s:1172   .text:0000000000000528 .L0 
     /tmp/ccT0un0C.s:1175   .text:000000000000052c .L0 
     /tmp/ccT0un0C.s:1176   .text:000000000000052c .L0 
GAS LISTING /tmp/ccT0un0C.s 			page 45


     /tmp/ccT0un0C.s:1177   .text:000000000000052c .L0 
     /tmp/ccT0un0C.s:1180   .text:0000000000000534 .L0 
     /tmp/ccT0un0C.s:1183   .text:0000000000000538 .L0 
     /tmp/ccT0un0C.s:1184   .text:0000000000000538 .L0 
     /tmp/ccT0un0C.s:1185   .text:0000000000000538 .L0 
     /tmp/ccT0un0C.s:1188   .text:0000000000000540 .L0 
     /tmp/ccT0un0C.s:1191   .text:0000000000000544 .L0 
     /tmp/ccT0un0C.s:1192   .text:0000000000000544 .L0 
     /tmp/ccT0un0C.s:1193   .text:0000000000000544 .L0 
     /tmp/ccT0un0C.s:1196   .text:000000000000054c .L0 
     /tmp/ccT0un0C.s:1199   .text:0000000000000550 .L0 
     /tmp/ccT0un0C.s:1200   .text:0000000000000550 .L0 
     /tmp/ccT0un0C.s:1201   .text:0000000000000550 .L0 
     /tmp/ccT0un0C.s:1204   .text:0000000000000558 .L0 
     /tmp/ccT0un0C.s:1207   .text:000000000000055c .L0 
     /tmp/ccT0un0C.s:1208   .text:000000000000055c .L0 
     /tmp/ccT0un0C.s:1209   .text:000000000000055c .L0 
     /tmp/ccT0un0C.s:1212   .text:0000000000000564 .L0 
     /tmp/ccT0un0C.s:1215   .text:0000000000000568 .L0 
     /tmp/ccT0un0C.s:1216   .text:0000000000000568 .L0 
     /tmp/ccT0un0C.s:1217   .text:0000000000000568 .L0 
     /tmp/ccT0un0C.s:1220   .text:0000000000000570 .L0 
     /tmp/ccT0un0C.s:1223   .text:0000000000000574 .L0 
     /tmp/ccT0un0C.s:1224   .text:0000000000000574 .L0 
     /tmp/ccT0un0C.s:1225   .text:0000000000000574 .L0 
     /tmp/ccT0un0C.s:1228   .text:000000000000057c .L0 
     /tmp/ccT0un0C.s:1231   .text:0000000000000580 .L0 
     /tmp/ccT0un0C.s:1232   .text:0000000000000580 .L0 
     /tmp/ccT0un0C.s:1233   .text:0000000000000580 .L0 
     /tmp/ccT0un0C.s:1236   .text:0000000000000588 .L0 
     /tmp/ccT0un0C.s:1239   .text:000000000000058c .L0 
     /tmp/ccT0un0C.s:1240   .text:000000000000058c .L0 
     /tmp/ccT0un0C.s:1241   .text:000000000000058c .L0 
     /tmp/ccT0un0C.s:1244   .text:0000000000000594 .L0 
     /tmp/ccT0un0C.s:1247   .text:0000000000000598 .L0 
     /tmp/ccT0un0C.s:1248   .text:0000000000000598 .L0 
     /tmp/ccT0un0C.s:1249   .text:0000000000000598 .L0 
     /tmp/ccT0un0C.s:1252   .text:00000000000005a0 .L0 
     /tmp/ccT0un0C.s:1255   .text:00000000000005a4 .L0 
     /tmp/ccT0un0C.s:1256   .text:00000000000005a4 .L0 
     /tmp/ccT0un0C.s:1257   .text:00000000000005a4 .L0 
     /tmp/ccT0un0C.s:1260   .text:00000000000005ac .L0 
     /tmp/ccT0un0C.s:1263   .text:00000000000005b0 .L0 
     /tmp/ccT0un0C.s:1264   .text:00000000000005b0 .L0 
     /tmp/ccT0un0C.s:1265   .text:00000000000005b0 .L0 
     /tmp/ccT0un0C.s:1268   .text:00000000000005b8 .L0 
     /tmp/ccT0un0C.s:1271   .text:00000000000005bc .L0 
     /tmp/ccT0un0C.s:1272   .text:00000000000005bc .L0 
     /tmp/ccT0un0C.s:1273   .text:00000000000005bc .L0 
     /tmp/ccT0un0C.s:1276   .text:00000000000005c4 .L0 
     /tmp/ccT0un0C.s:1280   .text:00000000000005c8 .L0 
     /tmp/ccT0un0C.s:1291   .bss:0000000000000000 _ZN5Riscv16kernelMainCalledE
     /tmp/ccT0un0C.s:1295   .bss:0000000000000001 _ZN5Riscv12finishSystemE
     /tmp/ccT0un0C.s:1300   .bss:0000000000000008 _ZN5Riscv9totalTimeE
     /tmp/ccT0un0C.s:1288   .bss:0000000000000000 .LANCHOR0
     /tmp/ccT0un0C.s:1312   .text:00000000000005c8 .L0 
     /tmp/ccT0un0C.s:55     .text:0000000000000038 .L0 
GAS LISTING /tmp/ccT0un0C.s 			page 46


     /tmp/ccT0un0C.s:242    .text:00000000000000ec .L0 
     /tmp/ccT0un0C.s:262    .text:0000000000000118 .L0 
     /tmp/ccT0un0C.s:283    .text:0000000000000154 .L0 
     /tmp/ccT0un0C.s:317    .text:0000000000000198 .L0 
     /tmp/ccT0un0C.s:328    .text:00000000000001ac .L0 
     /tmp/ccT0un0C.s:507    .text:0000000000000270 .L0 
     /tmp/ccT0un0C.s:551    .text:00000000000002a4 .L0 
     /tmp/ccT0un0C.s:626    .text:00000000000002f0 .L0 
     /tmp/ccT0un0C.s:630    .text:00000000000002fc .L0 
     /tmp/ccT0un0C.s:709    .text:000000000000037c .L0 
     /tmp/ccT0un0C.s:742    .text:000000000000039c .L0 
     /tmp/ccT0un0C.s:767    .text:00000000000003b8 .L0 
     /tmp/ccT0un0C.s:846    .text:0000000000000404 .L0 
     /tmp/ccT0un0C.s:852    .text:0000000000000418 .L0 
     /tmp/ccT0un0C.s:862    .text:0000000000000434 .L0 
     /tmp/ccT0un0C.s:954    .text:000000000000048c .L0 
     /tmp/ccT0un0C.s:1042   .rodata:0000000000000000 .L53
     /tmp/ccT0un0C.s:1034   .text:00000000000004e4 .L0 
     /tmp/ccT0un0C.s:245    .text:00000000000000fc .L25
     /tmp/ccT0un0C.s:313    .text:0000000000000194 .L15
     /tmp/ccT0un0C.s:298    .text:0000000000000178 .L16
     /tmp/ccT0un0C.s:324    .text:00000000000001ac .L18
     /tmp/ccT0un0C.s:319    .text:00000000000001a4 .L26
     /tmp/ccT0un0C.s:476    .text:000000000000025c .L32
     /tmp/ccT0un0C.s:580    .text:00000000000002cc .L37
     /tmp/ccT0un0C.s:569    .text:00000000000002c0 .L36
     /tmp/ccT0un0C.s:692    .text:000000000000035c .L41
     /tmp/ccT0un0C.s:975    .text:00000000000004b0 .L42
     /tmp/ccT0un0C.s:962    .text:00000000000004a4 .L43
     /tmp/ccT0un0C.s:677    .text:0000000000000348 .L69
     /tmp/ccT0un0C.s:916    .text:0000000000000464 .L40
     /tmp/ccT0un0C.s:785    .text:00000000000003dc .L47
     /tmp/ccT0un0C.s:773    .text:00000000000003c8 .L50
     /tmp/ccT0un0C.s:946    .text:0000000000000488 .L70
     /tmp/ccT0un0C.s:932    .text:0000000000000478 .L71
     /tmp/ccT0un0C.s:878    .text:000000000000044c .L49
     /tmp/ccT0un0C.s:1119   .text:0000000000000504 .L51
     /tmp/ccT0un0C.s:264    .text:0000000000000120 .LEHB0
     /tmp/ccT0un0C.s:236    .text:00000000000000ec .LFB33
     /tmp/ccT0un0C.s:278    .text:0000000000000144 .LEHE0
     /tmp/ccT0un0C.s:284    .text:000000000000015c .LEHB1
     /tmp/ccT0un0C.s:287    .text:0000000000000164 .LEHE1
     /tmp/ccT0un0C.s:358    .text:00000000000001ec .L20
     /tmp/ccT0un0C.s:291    .text:0000000000000168 .LEHB2
     /tmp/ccT0un0C.s:332    .text:00000000000001c0 .LEHE2
     /tmp/ccT0un0C.s:366    .text:0000000000000200 .LEHB3
     /tmp/ccT0un0C.s:369    .text:0000000000000208 .LEHE3
     /tmp/ccT0un0C.s:1112   .text:00000000000004fc .L67
     /tmp/ccT0un0C.s:1162   .text:0000000000000520 .L66
     /tmp/ccT0un0C.s:1181   .text:0000000000000538 .L65
     /tmp/ccT0un0C.s:1205   .text:000000000000055c .L64
     /tmp/ccT0un0C.s:1197   .text:0000000000000550 .L63
     /tmp/ccT0un0C.s:1173   .text:000000000000052c .L62
     /tmp/ccT0un0C.s:1189   .text:0000000000000544 .L61
     /tmp/ccT0un0C.s:1221   .text:0000000000000574 .L60
     /tmp/ccT0un0C.s:1245   .text:0000000000000598 .L59
     /tmp/ccT0un0C.s:1229   .text:0000000000000580 .L58
GAS LISTING /tmp/ccT0un0C.s 			page 47


     /tmp/ccT0un0C.s:1237   .text:000000000000058c .L57
     /tmp/ccT0un0C.s:1213   .text:0000000000000568 .L56
     /tmp/ccT0un0C.s:1253   .text:00000000000005a4 .L55
     /tmp/ccT0un0C.s:1261   .text:00000000000005b0 .L54
     /tmp/ccT0un0C.s:1269   .text:00000000000005bc .L52
     /tmp/ccT0un0C.s:3837   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccT0un0C.s:5486   .debug_str:0000000000000e0f .LASF316
     /tmp/ccT0un0C.s:5110   .debug_str:00000000000000ef .LASF317
     /tmp/ccT0un0C.s:5112   .debug_str:00000000000000fd .LASF318
     /tmp/ccT0un0C.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccT0un0C.s:1303   .text:00000000000005c8 .Letext0
     /tmp/ccT0un0C.s:5074   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccT0un0C.s:5120   .debug_str:000000000000015e .LASF0
     /tmp/ccT0un0C.s:5674   .debug_str:000000000000149f .LASF1
     /tmp/ccT0un0C.s:5606   .debug_str:0000000000001247 .LASF2
     /tmp/ccT0un0C.s:5562   .debug_str:00000000000010f7 .LASF4
     /tmp/ccT0un0C.s:5576   .debug_str:0000000000001161 .LASF3
     /tmp/ccT0un0C.s:5274   .debug_str:0000000000000739 .LASF5
     /tmp/ccT0un0C.s:5366   .debug_str:0000000000000a3a .LASF6
     /tmp/ccT0un0C.s:5342   .debug_str:0000000000000961 .LASF7
     /tmp/ccT0un0C.s:5498   .debug_str:0000000000000f0a .LASF8
     /tmp/ccT0un0C.s:5148   .debug_str:0000000000000242 .LASF9
     /tmp/ccT0un0C.s:5658   .debug_str:000000000000141a .LASF10
     /tmp/ccT0un0C.s:5280   .debug_str:0000000000000762 .LASF11
     /tmp/ccT0un0C.s:5204   .debug_str:0000000000000478 .LASF12
     /tmp/ccT0un0C.s:5368   .debug_str:0000000000000a41 .LASF13
     /tmp/ccT0un0C.s:5286   .debug_str:0000000000000787 .LASF14
     /tmp/ccT0un0C.s:5548   .debug_str:00000000000010a6 .LASF15
     /tmp/ccT0un0C.s:5290   .debug_str:00000000000007c1 .LASF16
     /tmp/ccT0un0C.s:5254   .debug_str:0000000000000683 .LASF17
     /tmp/ccT0un0C.s:5186   .debug_str:00000000000003ad .LASF111
     /tmp/ccT0un0C.s:5300   .debug_str:000000000000081e .LASF21
     /tmp/ccT0un0C.s:5270   .debug_str:0000000000000723 .LASF18
     /tmp/ccT0un0C.s:5524   .debug_str:000000000000100f .LASF19
     /tmp/ccT0un0C.s:5558   .debug_str:00000000000010e4 .LASF20
     /tmp/ccT0un0C.s:5348   .debug_str:000000000000098e .LASF22
     /tmp/ccT0un0C.s:5652   .debug_str:00000000000013c2 .LASF23
     /tmp/ccT0un0C.s:5478   .debug_str:0000000000000de5 .LASF24
     /tmp/ccT0un0C.s:5304   .debug_str:0000000000000843 .LASF25
     /tmp/ccT0un0C.s:5540   .debug_str:000000000000106c .LASF46
     /tmp/ccT0un0C.s:5116   .debug_str:000000000000013e .LASF48
     /tmp/ccT0un0C.s:5604   .debug_str:0000000000001236 .LASF64
     /tmp/ccT0un0C.s:5398   .debug_str:0000000000000b3c .LASF26
     /tmp/ccT0un0C.s:5628   .debug_str:00000000000012f1 .LASF28
     /tmp/ccT0un0C.s:5494   .debug_str:0000000000000efa .LASF27
     /tmp/ccT0un0C.s:5626   .debug_str:00000000000012d9 .LASF29
     /tmp/ccT0un0C.s:5632   .debug_str:0000000000001322 .LASF30
     /tmp/ccT0un0C.s:5276   .debug_str:0000000000000740 .LASF31
     /tmp/ccT0un0C.s:5232   .debug_str:00000000000005c2 .LASF38
     /tmp/ccT0un0C.s:5382   .debug_str:0000000000000aa1 .LASF40
     /tmp/ccT0un0C.s:5726   .debug_str:0000000000001675 .LASF32
     /tmp/ccT0un0C.s:5512   .debug_str:0000000000000f89 .LASF33
     /tmp/ccT0un0C.s:5130   .debug_str:00000000000001aa .LASF34
     /tmp/ccT0un0C.s:5656   .debug_str:00000000000013f6 .LASF35
     /tmp/ccT0un0C.s:5334   .debug_str:0000000000000936 .LASF36
     /tmp/ccT0un0C.s:5380   .debug_str:0000000000000a82 .LASF37
     /tmp/ccT0un0C.s:5104   .debug_str:00000000000000c6 .LASF39
GAS LISTING /tmp/ccT0un0C.s 			page 48


     /tmp/ccT0un0C.s:5550   .debug_str:00000000000010b2 .LASF41
     /tmp/ccT0un0C.s:5188   .debug_str:00000000000003b3 .LASF42
     /tmp/ccT0un0C.s:5392   .debug_str:0000000000000b04 .LASF43
     /tmp/ccT0un0C.s:5360   .debug_str:00000000000009fe .LASF44
     /tmp/ccT0un0C.s:5624   .debug_str:00000000000012bf .LASF45
     /tmp/ccT0un0C.s:5698   .debug_str:0000000000001588 .LASF47
     /tmp/ccT0un0C.s:5650   .debug_str:00000000000013ad .LASF49
     /tmp/ccT0un0C.s:5536   .debug_str:000000000000105d .LASF50
     /tmp/ccT0un0C.s:5142   .debug_str:000000000000020d .LASF51
     /tmp/ccT0un0C.s:5226   .debug_str:0000000000000576 .LASF52
     /tmp/ccT0un0C.s:5298   .debug_str:000000000000080b .LASF53
     /tmp/ccT0un0C.s:5268   .debug_str:000000000000071c .LASF54
     /tmp/ccT0un0C.s:5138   .debug_str:00000000000001ef .LASF55
     /tmp/ccT0un0C.s:5678   .debug_str:00000000000014d0 .LASF56
     /tmp/ccT0un0C.s:5546   .debug_str:0000000000001092 .LASF57
     /tmp/ccT0un0C.s:5542   .debug_str:0000000000001077 .LASF58
     /tmp/ccT0un0C.s:5182   .debug_str:000000000000038f .LASF59
     /tmp/ccT0un0C.s:5488   .debug_str:0000000000000ebb .LASF60
     /tmp/ccT0un0C.s:5078   .debug_str:000000000000000f .LASF61
     /tmp/ccT0un0C.s:5376   .debug_str:0000000000000a71 .LASF62
     /tmp/ccT0un0C.s:5350   .debug_str:000000000000099d .LASF63
     /tmp/ccT0un0C.s:5634   .debug_str:000000000000132c .LASF65
     /tmp/ccT0un0C.s:5622   .debug_str:00000000000012b8 .LASF66
     /tmp/ccT0un0C.s:5440   .debug_str:0000000000000cd7 .LASF67
     /tmp/ccT0un0C.s:5344   .debug_str:0000000000000974 .LASF68
     /tmp/ccT0un0C.s:5602   .debug_str:0000000000001223 .LASF69
     /tmp/ccT0un0C.s:5408   .debug_str:0000000000000bd1 .LASF70
     /tmp/ccT0un0C.s:5690   .debug_str:0000000000001543 .LASF71
     /tmp/ccT0un0C.s:5578   .debug_str:0000000000001173 .LASF72
     /tmp/ccT0un0C.s:5476   .debug_str:0000000000000dd3 .LASF73
     /tmp/ccT0un0C.s:5716   .debug_str:000000000000161e .LASF74
     /tmp/ccT0un0C.s:5682   .debug_str:00000000000014ec .LASF75
     /tmp/ccT0un0C.s:5518   .debug_str:0000000000000fd1 .LASF76
     /tmp/ccT0un0C.s:5200   .debug_str:000000000000043d .LASF77
     /tmp/ccT0un0C.s:5140   .debug_str:0000000000000202 .LASF78
     /tmp/ccT0un0C.s:5714   .debug_str:0000000000001606 .LASF79
     /tmp/ccT0un0C.s:5338   .debug_str:000000000000094d .LASF80
     /tmp/ccT0un0C.s:5222   .debug_str:0000000000000549 .LASF81
     /tmp/ccT0un0C.s:5608   .debug_str:0000000000001255 .LASF82
     /tmp/ccT0un0C.s:5314   .debug_str:000000000000089d .LASF83
     /tmp/ccT0un0C.s:5284   .debug_str:000000000000077d .LASF84
     /tmp/ccT0un0C.s:5242   .debug_str:0000000000000617 .LASF85
     /tmp/ccT0un0C.s:5560   .debug_str:00000000000010ed .LASF86
     /tmp/ccT0un0C.s:5356   .debug_str:00000000000009d9 .LASF87
     /tmp/ccT0un0C.s:5322   .debug_str:00000000000008ee .LASF88
     /tmp/ccT0un0C.s:5434   .debug_str:0000000000000ca3 .LASF89
     /tmp/ccT0un0C.s:5570   .debug_str:0000000000001145 .LASF90
     /tmp/ccT0un0C.s:5252   .debug_str:0000000000000671 .LASF91
     /tmp/ccT0un0C.s:5502   .debug_str:0000000000000f3f .LASF92
     /tmp/ccT0un0C.s:5644   .debug_str:0000000000001363 .LASF93
     /tmp/ccT0un0C.s:5528   .debug_str:0000000000001023 .LASF94
     /tmp/ccT0un0C.s:5206   .debug_str:0000000000000487 .LASF95
     /tmp/ccT0un0C.s:5124   .debug_str:0000000000000170 .LASF96
     /tmp/ccT0un0C.s:5500   .debug_str:0000000000000f1d .LASF97
     /tmp/ccT0un0C.s:5706   .debug_str:00000000000015d1 .LASF98
     /tmp/ccT0un0C.s:5126   .debug_str:0000000000000185 .LASF99
     /tmp/ccT0un0C.s:5092   .debug_str:0000000000000063 .LASF100
GAS LISTING /tmp/ccT0un0C.s 			page 49


     /tmp/ccT0un0C.s:5600   .debug_str:000000000000121b .LASF101
     /tmp/ccT0un0C.s:5448   .debug_str:0000000000000d09 .LASF102
     /tmp/ccT0un0C.s:5484   .debug_str:0000000000000e03 .LASF103
     /tmp/ccT0un0C.s:5346   .debug_str:000000000000097b .LASF104
     /tmp/ccT0un0C.s:5668   .debug_str:0000000000001472 .LASF105
     /tmp/ccT0un0C.s:5094   .debug_str:000000000000006a .LASF106
     /tmp/ccT0un0C.s:5220   .debug_str:0000000000000536 .LASF107
     /tmp/ccT0un0C.s:5168   .debug_str:000000000000030b .LASF108
     /tmp/ccT0un0C.s:5574   .debug_str:0000000000001157 .LASF109
     /tmp/ccT0un0C.s:5396   .debug_str:0000000000000b37 .LASF110
     /tmp/ccT0un0C.s:5702   .debug_str:00000000000015a1 .LASF112
     /tmp/ccT0un0C.s:5258   .debug_str:00000000000006a9 .LASF115
     /tmp/ccT0un0C.s:5420   .debug_str:0000000000000c20 .LASF113
     /tmp/ccT0un0C.s:5122   .debug_str:000000000000016b .LASF114
     /tmp/ccT0un0C.s:5444   .debug_str:0000000000000cfb .LASF116
     /tmp/ccT0un0C.s:5458   .debug_str:0000000000000d4a .LASF117
     /tmp/ccT0un0C.s:5432   .debug_str:0000000000000c90 .LASF118
     /tmp/ccT0un0C.s:5688   .debug_str:000000000000153a .LASF119
     /tmp/ccT0un0C.s:5250   .debug_str:0000000000000667 .LASF120
     /tmp/ccT0un0C.s:5080   .debug_str:0000000000000023 .LASF121
     /tmp/ccT0un0C.s:5464   .debug_str:0000000000000d70 .LASF123
     /tmp/ccT0un0C.s:5084   .debug_str:0000000000000038 .LASF122
     /tmp/ccT0un0C.s:5154   .debug_str:0000000000000277 .LASF124
     /tmp/ccT0un0C.s:5362   .debug_str:0000000000000a0b .LASF125
     /tmp/ccT0un0C.s:5266   .debug_str:00000000000006f9 .LASF126
     /tmp/ccT0un0C.s:5590   .debug_str:00000000000011c8 .LASF127
     /tmp/ccT0un0C.s:5228   .debug_str:000000000000057d .LASF128
     /tmp/ccT0un0C.s:5564   .debug_str:00000000000010fe .LASF129
     /tmp/ccT0un0C.s:5196   .debug_str:0000000000000400 .LASF130
     /tmp/ccT0un0C.s:5210   .debug_str:00000000000004c6 .LASF131
     /tmp/ccT0un0C.s:5490   .debug_str:0000000000000ec3 .LASF132
     /tmp/ccT0un0C.s:5580   .debug_str:0000000000001179 .LASF133
     /tmp/ccT0un0C.s:5288   .debug_str:0000000000000797 .LASF134
     /tmp/ccT0un0C.s:5700   .debug_str:0000000000001591 .LASF135
     /tmp/ccT0un0C.s:5724   .debug_str:000000000000164d .LASF136
     /tmp/ccT0un0C.s:5076   .debug_str:0000000000000000 .LASF137
     /tmp/ccT0un0C.s:5430   .debug_str:0000000000000c69 .LASF138
     /tmp/ccT0un0C.s:5616   .debug_str:0000000000001293 .LASF139
     /tmp/ccT0un0C.s:5262   .debug_str:00000000000006c9 .LASF140
     /tmp/ccT0un0C.s:5384   .debug_str:0000000000000abf .LASF141
     /tmp/ccT0un0C.s:5522   .debug_str:0000000000000ff1 .LASF142
     /tmp/ccT0un0C.s:5152   .debug_str:0000000000000271 .LASF143
     /tmp/ccT0un0C.s:5390   .debug_str:0000000000000afe .LASF144
     /tmp/ccT0un0C.s:5452   .debug_str:0000000000000d20 .LASF145
     /tmp/ccT0un0C.s:5582   .debug_str:000000000000118a .LASF146
     /tmp/ccT0un0C.s:5332   .debug_str:000000000000092d .LASF147
     /tmp/ccT0un0C.s:5316   .debug_str:00000000000008b0 .LASF148
     /tmp/ccT0un0C.s:5720   .debug_str:0000000000001638 .LASF149
     /tmp/ccT0un0C.s:5492   .debug_str:0000000000000ef2 .LASF150
     /tmp/ccT0un0C.s:5248   .debug_str:0000000000000661 .LASF151
     /tmp/ccT0un0C.s:5662   .debug_str:000000000000142d .LASF152
     /tmp/ccT0un0C.s:5394   .debug_str:0000000000000b1f .LASF319
     /tmp/ccT0un0C.s:5660   .debug_str:0000000000001428 .LASF153
     /tmp/ccT0un0C.s:5292   .debug_str:00000000000007d7 .LASF154
     /tmp/ccT0un0C.s:5282   .debug_str:0000000000000771 .LASF155
     /tmp/ccT0un0C.s:5552   .debug_str:00000000000010c9 .LASF156
     /tmp/ccT0un0C.s:5352   .debug_str:00000000000009b1 .LASF157
GAS LISTING /tmp/ccT0un0C.s 			page 50


     /tmp/ccT0un0C.s:5374   .debug_str:0000000000000a68 .LASF158
     /tmp/ccT0un0C.s:5328   .debug_str:000000000000090f .LASF159
     /tmp/ccT0un0C.s:5636   .debug_str:0000000000001339 .LASF160
     /tmp/ccT0un0C.s:5172   .debug_str:0000000000000328 .LASF161
     /tmp/ccT0un0C.s:5694   .debug_str:0000000000001563 .LASF162
     /tmp/ccT0un0C.s:5618   .debug_str:000000000000129b .LASF163
     /tmp/ccT0un0C.s:5174   .debug_str:0000000000000338 .LASF168
     /tmp/ccT0un0C.s:5354   .debug_str:00000000000009c1 .LASF170
     /tmp/ccT0un0C.s:5460   .debug_str:0000000000000d58 .LASF164
     /tmp/ccT0un0C.s:5146   .debug_str:0000000000000236 .LASF165
     /tmp/ccT0un0C.s:5454   .debug_str:0000000000000d28 .LASF166
     /tmp/ccT0un0C.s:5510   .debug_str:0000000000000f7c .LASF167
     /tmp/ccT0un0C.s:5470   .debug_str:0000000000000dba .LASF169
     /tmp/ccT0un0C.s:5162   .debug_str:00000000000002dc .LASF171
     /tmp/ccT0un0C.s:5532   .debug_str:0000000000001042 .LASF172
     /tmp/ccT0un0C.s:5098   .debug_str:0000000000000095 .LASF173
     /tmp/ccT0un0C.s:5372   .debug_str:0000000000000a59 .LASF174
     /tmp/ccT0un0C.s:5312   .debug_str:0000000000000883 .LASF175
     /tmp/ccT0un0C.s:5516   .debug_str:0000000000000fc2 .LASF176
     /tmp/ccT0un0C.s:5404   .debug_str:0000000000000b94 .LASF177
     /tmp/ccT0un0C.s:5614   .debug_str:0000000000001285 .LASF178
     /tmp/ccT0un0C.s:5620   .debug_str:00000000000012ac .LASF179
     /tmp/ccT0un0C.s:5530   .debug_str:0000000000001032 .LASF180
     /tmp/ccT0un0C.s:5230   .debug_str:00000000000005b2 .LASF181
     /tmp/ccT0un0C.s:5272   .debug_str:000000000000072c .LASF182
     /tmp/ccT0un0C.s:5082   .debug_str:000000000000002d .LASF183
     /tmp/ccT0un0C.s:5340   .debug_str:0000000000000954 .LASF184
     /tmp/ccT0un0C.s:5526   .debug_str:0000000000001018 .LASF185
     /tmp/ccT0un0C.s:5638   .debug_str:000000000000133f .LASF186
     /tmp/ccT0un0C.s:5330   .debug_str:0000000000000922 .LASF187
     /tmp/ccT0un0C.s:5132   .debug_str:00000000000001c1 .LASF188
     /tmp/ccT0un0C.s:5642   .debug_str:000000000000135b .LASF189
     /tmp/ccT0un0C.s:5428   .debug_str:0000000000000c55 .LASF190
     /tmp/ccT0un0C.s:5150   .debug_str:0000000000000252 .LASF191
     /tmp/ccT0un0C.s:5534   .debug_str:000000000000104b .LASF192
     /tmp/ccT0un0C.s:5696   .debug_str:000000000000156b .LASF193
     /tmp/ccT0un0C.s:5424   .debug_str:0000000000000c32 .LASF194
     /tmp/ccT0un0C.s:5686   .debug_str:0000000000001519 .LASF195
     /tmp/ccT0un0C.s:5212   .debug_str:00000000000004db .LASF196
     /tmp/ccT0un0C.s:5676   .debug_str:00000000000014b2 .LASF197
     /tmp/ccT0un0C.s:5544   .debug_str:000000000000107f .LASF198
     /tmp/ccT0un0C.s:5114   .debug_str:0000000000000120 .LASF199
     /tmp/ccT0un0C.s:5630   .debug_str:000000000000130d .LASF200
     /tmp/ccT0un0C.s:5704   .debug_str:00000000000015b1 .LASF201
     /tmp/ccT0un0C.s:5170   .debug_str:000000000000031f .LASF202
     /tmp/ccT0un0C.s:5472   .debug_str:0000000000000dc3 .LASF203
     /tmp/ccT0un0C.s:5184   .debug_str:00000000000003a3 .LASF204
     /tmp/ccT0un0C.s:5592   .debug_str:00000000000011e3 .LASF205
     /tmp/ccT0un0C.s:5646   .debug_str:000000000000137b .LASF206
     /tmp/ccT0un0C.s:5654   .debug_str:00000000000013ce .LASF207
     /tmp/ccT0un0C.s:5310   .debug_str:000000000000086e .LASF208
     /tmp/ccT0un0C.s:5156   .debug_str:0000000000000298 .LASF209
     /tmp/ccT0un0C.s:5412   .debug_str:0000000000000be0 .LASF210
     /tmp/ccT0un0C.s:5710   .debug_str:00000000000015e7 .LASF211
     /tmp/ccT0un0C.s:5588   .debug_str:00000000000011c3 .LASF212
     /tmp/ccT0un0C.s:5482   .debug_str:0000000000000dfe .LASF213
     /tmp/ccT0un0C.s:5128   .debug_str:00000000000001a2 .LASF214
GAS LISTING /tmp/ccT0un0C.s 			page 51


     /tmp/ccT0un0C.s:5640   .debug_str:0000000000001355 .LASF215
     /tmp/ccT0un0C.s:5450   .debug_str:0000000000000d18 .LASF216
     /tmp/ccT0un0C.s:5462   .debug_str:0000000000000d65 .LASF217
     /tmp/ccT0un0C.s:5240   .debug_str:0000000000000603 .LASF218
     /tmp/ccT0un0C.s:5306   .debug_str:000000000000084f .LASF219
     /tmp/ccT0un0C.s:5144   .debug_str:0000000000000222 .LASF220
     /tmp/ccT0un0C.s:5446   .debug_str:0000000000000d04 .LASF221
     /tmp/ccT0un0C.s:5386   .debug_str:0000000000000ac5 .LASF222
     /tmp/ccT0un0C.s:5106   .debug_str:00000000000000d0 .LASF223
     /tmp/ccT0un0C.s:5238   .debug_str:00000000000005ea .LASF224
     /tmp/ccT0un0C.s:5480   .debug_str:0000000000000df2 .LASF225
     /tmp/ccT0un0C.s:5596   .debug_str:0000000000001207 .LASF226
     /tmp/ccT0un0C.s:5680   .debug_str:00000000000014d8 .LASF227
     /tmp/ccT0un0C.s:5504   .debug_str:0000000000000f4a .LASF228
     /tmp/ccT0un0C.s:5378   .debug_str:0000000000000a79 .LASF229
     /tmp/ccT0un0C.s:5554   .debug_str:00000000000010cf .LASF230
     /tmp/ccT0un0C.s:5414   .debug_str:0000000000000be7 .LASF231
     /tmp/ccT0un0C.s:5556   .debug_str:00000000000010d9 .LASF232
     /tmp/ccT0un0C.s:5134   .debug_str:00000000000001d7 .LASF233
     /tmp/ccT0un0C.s:5244   .debug_str:000000000000062d .LASF234
     /tmp/ccT0un0C.s:5358   .debug_str:00000000000009ef .LASF235
     /tmp/ccT0un0C.s:5466   .debug_str:0000000000000d91 .LASF236
     /tmp/ccT0un0C.s:5442   .debug_str:0000000000000cea .LASF237
     /tmp/ccT0un0C.s:5364   .debug_str:0000000000000a16 .LASF238
     /tmp/ccT0un0C.s:5672   .debug_str:000000000000148f .LASF239
     /tmp/ccT0un0C.s:5406   .debug_str:0000000000000bae .LASF240
     /tmp/ccT0un0C.s:5166   .debug_str:0000000000000302 .LASF241
     /tmp/ccT0un0C.s:5538   .debug_str:0000000000001066 .LASF242
     /tmp/ccT0un0C.s:5108   .debug_str:00000000000000d7 .LASF243
     /tmp/ccT0un0C.s:5118   .debug_str:0000000000000156 .LASF244
     /tmp/ccT0un0C.s:5224   .debug_str:000000000000055c .LASF245
     /tmp/ccT0un0C.s:5506   .debug_str:0000000000000f5f .LASF246
     /tmp/ccT0un0C.s:5202   .debug_str:0000000000000455 .LASF247
     /tmp/ccT0un0C.s:5320   .debug_str:00000000000008db .LASF248
     /tmp/ccT0un0C.s:5402   .debug_str:0000000000000b6e .LASF249
     /tmp/ccT0un0C.s:5584   .debug_str:0000000000001194 .LASF250
     /tmp/ccT0un0C.s:5648   .debug_str:0000000000001389 .LASF251
     /tmp/ccT0un0C.s:5336   .debug_str:0000000000000948 .LASF252
     /tmp/ccT0un0C.s:5426   .debug_str:0000000000000c48 .LASF253
     /tmp/ccT0un0C.s:5160   .debug_str:00000000000002cc .LASF254
     /tmp/ccT0un0C.s:5684   .debug_str:0000000000001507 .LASF255
     /tmp/ccT0un0C.s:5566   .debug_str:0000000000001114 .LASF256
     /tmp/ccT0un0C.s:5692   .debug_str:0000000000001555 .LASF257
     /tmp/ccT0un0C.s:5318   .debug_str:00000000000008b8 .LASF258
     /tmp/ccT0un0C.s:5410   .debug_str:0000000000000bd7 .LASF259
     /tmp/ccT0un0C.s:5308   .debug_str:000000000000085b .LASF260
     /tmp/ccT0un0C.s:5260   .debug_str:00000000000006b5 .LASF261
     /tmp/ccT0un0C.s:5100   .debug_str:00000000000000b1 .LASF262
     /tmp/ccT0un0C.s:5190   .debug_str:00000000000003c1 .LASF263
     /tmp/ccT0un0C.s:5568   .debug_str:000000000000113b .LASF264
     /tmp/ccT0un0C.s:5102   .debug_str:00000000000000bb .LASF265
     /tmp/ccT0un0C.s:5086   .debug_str:0000000000000041 .LASF266
     /tmp/ccT0un0C.s:5236   .debug_str:00000000000005de .LASF267
     /tmp/ccT0un0C.s:5612   .debug_str:0000000000001278 .LASF268
     /tmp/ccT0un0C.s:5234   .debug_str:00000000000005d2 .LASF269
     /tmp/ccT0un0C.s:5572   .debug_str:000000000000114b .LASF270
     /tmp/ccT0un0C.s:5192   .debug_str:00000000000003cc .LASF271
GAS LISTING /tmp/ccT0un0C.s 			page 52


     /tmp/ccT0un0C.s:5388   .debug_str:0000000000000adc .LASF272
     /tmp/ccT0un0C.s:5324   .debug_str:00000000000008f4 .LASF273
     /tmp/ccT0un0C.s:5586   .debug_str:00000000000011a1 .LASF274
     /tmp/ccT0un0C.s:5246   .debug_str:000000000000064f .LASF275
     /tmp/ccT0un0C.s:5194   .debug_str:00000000000003de .LASF276
     /tmp/ccT0un0C.s:5296   .debug_str:00000000000007f8 .LASF277
     /tmp/ccT0un0C.s:5208   .debug_str:00000000000004a3 .LASF278
     /tmp/ccT0un0C.s:5164   .debug_str:00000000000002ef .LASF279
     /tmp/ccT0un0C.s:5400   .debug_str:0000000000000b4b .LASF280
     /tmp/ccT0un0C.s:5514   .debug_str:0000000000000fa7 .LASF281
     /tmp/ccT0un0C.s:5198   .debug_str:000000000000042e .LASF282
     /tmp/ccT0un0C.s:5416   .debug_str:0000000000000bf0 .LASF283
     /tmp/ccT0un0C.s:5180   .debug_str:0000000000000376 .LASF284
     /tmp/ccT0un0C.s:5666   .debug_str:0000000000001448 .LASF285
     /tmp/ccT0un0C.s:5594   .debug_str:00000000000011ef .LASF286
     /tmp/ccT0un0C.s:5216   .debug_str:00000000000004f4 .LASF287
     /tmp/ccT0un0C.s:5264   .debug_str:00000000000006e8 .LASF288
     /tmp/ccT0un0C.s:5456   .debug_str:0000000000000d38 .LASF289
     /tmp/ccT0un0C.s:5088   .debug_str:000000000000004c .LASF290
     /tmp/ccT0un0C.s:5422   .debug_str:0000000000000c25 .LASF291
     /tmp/ccT0un0C.s:5418   .debug_str:0000000000000c0f .LASF292
     /tmp/ccT0un0C.s:5718   .debug_str:000000000000162c .LASF293
     /tmp/ccT0un0C.s:5610   .debug_str:000000000000125c .LASF294
     /tmp/ccT0un0C.s:5722   .debug_str:0000000000001641 .LASF295
     /tmp/ccT0un0C.s:5294   .debug_str:00000000000007dc .LASF296
     /tmp/ccT0un0C.s:5664   .debug_str:0000000000001438 .LASF297
     /tmp/ccT0un0C.s:5176   .debug_str:0000000000000345 .LASF298
     /tmp/ccT0un0C.s:5136   .debug_str:00000000000001e6 .LASF320
     /tmp/ccT0un0C.s:5302   .debug_str:0000000000000829 .LASF321
     /tmp/ccT0un0C.s:5520   .debug_str:0000000000000fdc .LASF299
     /tmp/ccT0un0C.s:5218   .debug_str:000000000000051d .LASF300
     /tmp/ccT0un0C.s:5436   .debug_str:0000000000000cb5 .LASF322
     /tmp/ccT0un0C.s:540    .text:0000000000000298 .LFB39
     /tmp/ccT0un0C.s:600    .text:00000000000002d8 .LFE39
     /tmp/ccT0un0C.s:558    .text:00000000000002b8 .LBB47
     /tmp/ccT0un0C.s:571    .text:00000000000002c0 .LBE47
     /tmp/ccT0un0C.s:4874   .debug_loc:0000000000000000 .LLST4
     /tmp/ccT0un0C.s:584    .text:00000000000002cc .LBB49
     /tmp/ccT0un0C.s:596    .text:00000000000002d4 .LBE49
     /tmp/ccT0un0C.s:4883   .debug_loc:0000000000000026 .LLST5
     /tmp/ccT0un0C.s:487    .text:0000000000000260 .LFB38
     /tmp/ccT0un0C.s:534    .text:0000000000000298 .LFE38
     /tmp/ccT0un0C.s:5708   .debug_str:00000000000015e0 .LASF301
     /tmp/ccT0un0C.s:466    .text:0000000000000250 .LFB37
     /tmp/ccT0un0C.s:481    .text:0000000000000260 .LFE37
     /tmp/ccT0un0C.s:433    .text:0000000000000230 .LFB36
     /tmp/ccT0un0C.s:460    .text:0000000000000250 .LFE36
     /tmp/ccT0un0C.s:401    .text:0000000000000208 .LFB35
     /tmp/ccT0un0C.s:427    .text:0000000000000230 .LFE35
     /tmp/ccT0un0C.s:4892   .debug_loc:000000000000004c .LLST3
     /tmp/ccT0un0C.s:416    .text:0000000000000220 .LVL26
     /tmp/ccT0un0C.s:10     .text:0000000000000000 .LFB34
     /tmp/ccT0un0C.s:36     .text:0000000000000028 .LFE34
     /tmp/ccT0un0C.s:25     .text:0000000000000018 .LVL0
     /tmp/ccT0un0C.s:371    .text:0000000000000208 .LFE33
     /tmp/ccT0un0C.s:5158   .debug_str:00000000000002c4 .LASF302
     /tmp/ccT0un0C.s:4906   .debug_loc:0000000000000085 .LLST2
GAS LISTING /tmp/ccT0un0C.s 			page 53


     /tmp/ccT0un0C.s:267    .text:0000000000000128 .LVL10
     /tmp/ccT0un0C.s:272    .text:0000000000000134 .LVL11
     /tmp/ccT0un0C.s:277    .text:0000000000000144 .LVL12
     /tmp/ccT0un0C.s:286    .text:0000000000000164 .LVL13
     /tmp/ccT0un0C.s:293    .text:0000000000000170 .LVL14
     /tmp/ccT0un0C.s:297    .text:0000000000000178 .LVL15
     /tmp/ccT0un0C.s:304    .text:0000000000000184 .LVL16
     /tmp/ccT0un0C.s:310    .text:0000000000000190 .LVL17
     /tmp/ccT0un0C.s:323    .text:00000000000001ac .LVL18
     /tmp/ccT0un0C.s:331    .text:00000000000001c0 .LVL19
     /tmp/ccT0un0C.s:338    .text:00000000000001cc .LVL20
     /tmp/ccT0un0C.s:342    .text:00000000000001d4 .LVL21
     /tmp/ccT0un0C.s:364    .text:00000000000001fc .LVL23
     /tmp/ccT0un0C.s:368    .text:0000000000000208 .LVL24
     /tmp/ccT0un0C.s:606    .text:00000000000002d8 .LFB32
     /tmp/ccT0un0C.s:1281   .text:00000000000005c8 .LFE32
     /tmp/ccT0un0C.s:5468   .debug_str:0000000000000db3 .LASF303
     /tmp/ccT0un0C.s:4913   .debug_loc:00000000000000a8 .LLST6
     /tmp/ccT0un0C.s:5048   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccT0un0C.s:5496   .debug_str:0000000000000f05 .LASF304
     /tmp/ccT0un0C.s:5370   .debug_str:0000000000000a51 .LASF305
     /tmp/ccT0un0C.s:791    .text:00000000000003dc .LBB61
     /tmp/ccT0un0C.s:807    .text:00000000000003e8 .LBE61
     /tmp/ccT0un0C.s:811    .text:00000000000003ec .LBB63
     /tmp/ccT0un0C.s:826    .text:00000000000003f8 .LBE63
     /tmp/ccT0un0C.s:831    .text:00000000000003fc .LBB65
     /tmp/ccT0un0C.s:843    .text:0000000000000404 .LBE65
     /tmp/ccT0un0C.s:4940   .debug_loc:000000000000012a .LLST10
     /tmp/ccT0un0C.s:865    .text:0000000000000440 .LBB67
     /tmp/ccT0un0C.s:873    .text:0000000000000444 .LBE67
     /tmp/ccT0un0C.s:4948   .debug_loc:000000000000014e .LLST11
     /tmp/ccT0un0C.s:883    .text:0000000000000450 .LBB69
     /tmp/ccT0un0C.s:894    .text:0000000000000454 .LBE69
     /tmp/ccT0un0C.s:4955   .debug_loc:0000000000000171 .LLST12
     /tmp/ccT0un0C.s:899    .text:0000000000000458 .LBB71
     /tmp/ccT0un0C.s:910    .text:000000000000045c .LBE71
     /tmp/ccT0un0C.s:4962   .debug_loc:0000000000000194 .LLST13
     /tmp/ccT0un0C.s:859    .text:0000000000000434 .LVL53
     /tmp/ccT0un0C.s:914    .text:0000000000000464 .LVL60
     /tmp/ccT0un0C.s:943    .text:0000000000000484 .LVL61
     /tmp/ccT0un0C.s:4969   .debug_loc:00000000000001b7 .LLST7
     /tmp/ccT0un0C.s:5090   .debug_str:0000000000000059 .LASF306
     /tmp/ccT0un0C.s:4980   .debug_loc:00000000000001ed .LLST8
     /tmp/ccT0un0C.s:4987   .debug_loc:0000000000000210 .LLST9
     /tmp/ccT0un0C.s:959    .text:00000000000004a0 .LVL63
     /tmp/ccT0un0C.s:779    .text:00000000000003d0 .LVL47
     /tmp/ccT0un0C.s:781    .text:00000000000003d8 .LVL48
     /tmp/ccT0un0C.s:4998   .debug_loc:0000000000000246 .LLST14
     /tmp/ccT0un0C.s:990    .text:00000000000004b4 .LBB76
     /tmp/ccT0un0C.s:1005   .text:00000000000004c0 .LBE76
     /tmp/ccT0un0C.s:1011   .text:00000000000004c8 .LBB78
     /tmp/ccT0un0C.s:1026   .text:00000000000004d4 .LBE78
     /tmp/ccT0un0C.s:1124   .text:0000000000000508 .LBB80
     /tmp/ccT0un0C.s:1135   .text:000000000000050c .LBE80
     /tmp/ccT0un0C.s:5005   .debug_loc:0000000000000269 .LLST15
     /tmp/ccT0un0C.s:1140   .text:0000000000000510 .LBB82
     /tmp/ccT0un0C.s:1151   .text:0000000000000514 .LBE82
GAS LISTING /tmp/ccT0un0C.s 			page 54


     /tmp/ccT0un0C.s:5012   .debug_loc:000000000000028c .LLST16
     /tmp/ccT0un0C.s:1117   .text:0000000000000504 .LVL69
     /tmp/ccT0un0C.s:1155   .text:000000000000051c .LVL74
     /tmp/ccT0un0C.s:1170   .text:0000000000000528 .LVL75
     /tmp/ccT0un0C.s:1178   .text:0000000000000534 .LVL76
     /tmp/ccT0un0C.s:1186   .text:0000000000000540 .LVL77
     /tmp/ccT0un0C.s:1194   .text:000000000000054c .LVL78
     /tmp/ccT0un0C.s:1202   .text:0000000000000558 .LVL79
     /tmp/ccT0un0C.s:1210   .text:0000000000000564 .LVL80
     /tmp/ccT0un0C.s:1218   .text:0000000000000570 .LVL81
     /tmp/ccT0un0C.s:1226   .text:000000000000057c .LVL82
     /tmp/ccT0un0C.s:1234   .text:0000000000000588 .LVL83
     /tmp/ccT0un0C.s:1242   .text:0000000000000594 .LVL84
     /tmp/ccT0un0C.s:1250   .text:00000000000005a0 .LVL85
     /tmp/ccT0un0C.s:1258   .text:00000000000005ac .LVL86
     /tmp/ccT0un0C.s:1266   .text:00000000000005b8 .LVL87
     /tmp/ccT0un0C.s:1274   .text:00000000000005c4 .LVL88
     /tmp/ccT0un0C.s:640    .text:0000000000000310 .LBB51
     /tmp/ccT0un0C.s:656    .text:000000000000031c .LBE51
     /tmp/ccT0un0C.s:673    .text:0000000000000344 .LVL35
     /tmp/ccT0un0C.s:688    .text:0000000000000358 .LVL37
     /tmp/ccT0un0C.s:971    .text:00000000000004ac .LVL65
     /tmp/ccT0un0C.s:201    .text:00000000000000cc .LFB31
     /tmp/ccT0un0C.s:230    .text:00000000000000ec .LFE31
     /tmp/ccT0un0C.s:132    .text:0000000000000084 .LFB30
     /tmp/ccT0un0C.s:164    .text:00000000000000a4 .LFE30
     /tmp/ccT0un0C.s:143    .text:0000000000000090 .LBB45
     /tmp/ccT0un0C.s:155    .text:0000000000000098 .LBE45
     /tmp/ccT0un0C.s:5019   .debug_loc:00000000000002af .LLST1
     /tmp/ccT0un0C.s:94     .text:0000000000000064 .LFB29
     /tmp/ccT0un0C.s:126    .text:0000000000000084 .LFE29
     /tmp/ccT0un0C.s:105    .text:0000000000000070 .LBB43
     /tmp/ccT0un0C.s:117    .text:0000000000000078 .LBE43
     /tmp/ccT0un0C.s:5027   .debug_loc:00000000000002d3 .LLST0
     /tmp/ccT0un0C.s:170    .text:00000000000000a4 .LFB28
     /tmp/ccT0un0C.s:195    .text:00000000000000cc .LFE28
     /tmp/ccT0un0C.s:184    .text:00000000000000bc .LVL9
     /tmp/ccT0un0C.s:42     .text:0000000000000028 .LFB27
     /tmp/ccT0un0C.s:88     .text:0000000000000064 .LFE27
     /tmp/ccT0un0C.s:57     .text:0000000000000040 .LBB41
     /tmp/ccT0un0C.s:69     .text:0000000000000044 .LBE41
     /tmp/ccT0un0C.s:73     .text:000000000000004c .LVL3
     /tmp/ccT0un0C.s:77     .text:0000000000000054 .LVL4
     /tmp/ccT0un0C.s:5474   .debug_str:0000000000000dce .LASF323
     /tmp/ccT0un0C.s:5438   .debug_str:0000000000000cd2 .LASF307
     /tmp/ccT0un0C.s:5214   .debug_str:00000000000004ee .LASF308
     /tmp/ccT0un0C.s:5278   .debug_str:0000000000000756 .LASF309
     /tmp/ccT0un0C.s:5598   .debug_str:0000000000001213 .LASF311
     /tmp/ccT0un0C.s:5508   .debug_str:0000000000000f6f .LASF310
     /tmp/ccT0un0C.s:5326   .debug_str:0000000000000906 .LASF312
     /tmp/ccT0un0C.s:5256   .debug_str:0000000000000699 .LASF313
     /tmp/ccT0un0C.s:5178   .debug_str:0000000000000367 .LASF324
     /tmp/ccT0un0C.s:5096   .debug_str:000000000000007d .LASF325
     /tmp/ccT0un0C.s:5670   .debug_str:0000000000001484 .LASF314
     /tmp/ccT0un0C.s:5712   .debug_str:00000000000015f8 .LASF315
     /tmp/ccT0un0C.s:557    .text:00000000000002b8 .LVL30
     /tmp/ccT0un0C.s:567    .text:00000000000002c0 .LVL31
GAS LISTING /tmp/ccT0un0C.s 			page 55


     /tmp/ccT0un0C.s:583    .text:00000000000002cc .LVL32
     /tmp/ccT0un0C.s:593    .text:00000000000002d4 .LVL33
     /tmp/ccT0un0C.s:404    .text:0000000000000208 .LVL25
     /tmp/ccT0un0C.s:352    .text:00000000000001e0 .LVL22
     /tmp/ccT0un0C.s:654    .text:000000000000031c .LVL34
     /tmp/ccT0un0C.s:676    .text:0000000000000348 .LVL36
     /tmp/ccT0un0C.s:691    .text:000000000000035c .LVL38
     /tmp/ccT0un0C.s:710    .text:0000000000000384 .LVL39
     /tmp/ccT0un0C.s:784    .text:00000000000003dc .LVL49
     /tmp/ccT0un0C.s:800    .text:00000000000003e0 .LVL50
     /tmp/ccT0un0C.s:961    .text:00000000000004a4 .LVL64
     /tmp/ccT0un0C.s:974    .text:00000000000004b0 .LVL66
     /tmp/ccT0un0C.s:987    .text:00000000000004b4 .LVL67
     /tmp/ccT0un0C.s:830    .text:00000000000003fc .LVL51
     /tmp/ccT0un0C.s:840    .text:0000000000000404 .LVL52
     /tmp/ccT0un0C.s:864    .text:0000000000000440 .LVL54
     /tmp/ccT0un0C.s:871    .text:0000000000000444 .LVL55
     /tmp/ccT0un0C.s:882    .text:0000000000000450 .LVL56
     /tmp/ccT0un0C.s:891    .text:0000000000000454 .LVL57
     /tmp/ccT0un0C.s:898    .text:0000000000000458 .LVL58
     /tmp/ccT0un0C.s:907    .text:000000000000045c .LVL59
     /tmp/ccT0un0C.s:712    .text:0000000000000388 .LVL40
     /tmp/ccT0un0C.s:730    .text:0000000000000394 .LVL41
     /tmp/ccT0un0C.s:744    .text:00000000000003a8 .LVL43
     /tmp/ccT0un0C.s:768    .text:00000000000003c0 .LVL45
     /tmp/ccT0un0C.s:736    .text:0000000000000398 .LVL42
     /tmp/ccT0un0C.s:764    .text:00000000000003b8 .LVL44
     /tmp/ccT0un0C.s:772    .text:00000000000003c8 .LVL46
     /tmp/ccT0un0C.s:945    .text:0000000000000488 .LVL62
     /tmp/ccT0un0C.s:1033   .text:00000000000004e4 .LVL68
     /tmp/ccT0un0C.s:1123   .text:0000000000000508 .LVL70
     /tmp/ccT0un0C.s:1132   .text:000000000000050c .LVL71
     /tmp/ccT0un0C.s:1139   .text:0000000000000510 .LVL72
     /tmp/ccT0un0C.s:1148   .text:0000000000000514 .LVL73
     /tmp/ccT0un0C.s:142    .text:0000000000000090 .LVL7
     /tmp/ccT0un0C.s:152    .text:0000000000000098 .LVL8
     /tmp/ccT0un0C.s:104    .text:0000000000000070 .LVL5
     /tmp/ccT0un0C.s:114    .text:0000000000000078 .LVL6
     /tmp/ccT0un0C.s:1313   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccT0un0C.s:706    .text:000000000000037c .LBB55
     /tmp/ccT0un0C.s:786    .text:00000000000003dc .LBE55
     /tmp/ccT0un0C.s:948    .text:0000000000000488 .LBB74
     /tmp/ccT0un0C.s:965    .text:00000000000004a4 .LBE74
     /tmp/ccT0un0C.s:739    .text:000000000000039c .LBB57
     /tmp/ccT0un0C.s:774    .text:00000000000003c8 .LBE57
     /tmp/ccT0un0C.s:950    .text:0000000000000488 .LBB58
     /tmp/ccT0un0C.s:963    .text:00000000000004a4 .LBE58
     /tmp/ccT0un0C.s:789    .text:00000000000003dc .LBB60
     /tmp/ccT0un0C.s:917    .text:0000000000000464 .LBE60
     /tmp/ccT0un0C.s:936    .text:0000000000000478 .LBB73
     /tmp/ccT0un0C.s:947    .text:0000000000000488 .LBE73
     /tmp/ccT0un0C.s:979    .text:00000000000004b0 .LBB75
     /tmp/ccT0un0C.s:1157   .text:000000000000051c .LBE75
     /tmp/ccT0un0C.s:1165   .text:0000000000000520 .LBB84
     /tmp/ccT0un0C.s:1277   .text:00000000000005c8 .LBE84
     /tmp/ccT0un0C.s:374    .gcc_except_table:0000000000000000 .LLSDA33

GAS LISTING /tmp/ccT0un0C.s 			page 56


UNDEFINED SYMBOLS
_Z8userMainv
_ZN5Riscv14supervisorTrapEv
_ZN3PCB10initializeEv
_ZN8KConsole10initializeEv
_ZN15MemoryAllocator7kmallocEm
_ZN3PCBnwEm
_ZN3PCBC1EPFvPvES0_S0_m
_ZN3PCB5startEv
_ZN3PCB10isFinishedEv
thread_dispatch
_ZN3PCB10consolePCBE
_ZN3PCBdlEPv
_Unwind_Resume
__gxx_personality_v0
_Z7myTestsv
_ZN3PCB7runningE
_ZN3PCB10savedRegA4E
_ZN3PCB17threadExitHandlerEv
CONSOLE_STATUS
CONSOLE_TX_DATA
_ZN8KConsole11pendingGetcE
plic_claim
plic_complete
_ZN3PCB16timeSliceCounterE
_ZN12SleepPCBList13tryToWakePCBsEv
_ZN3PCB8dispatchEv
_ZN8KConsole17putCharacterInputEc
_ZN15MemoryAllocator15memAllocHandlerEv
_ZN15MemoryAllocator14memFreeHandlerEv
_ZN3PCB20threadMakePCBHandlerEv
_ZN3PCB19threadCreateHandlerEv
_ZN3PCB18threadStartHandlerEv
_ZN3PCB21threadDispatchHandlerEv
_ZN3PCB18threadSleepHandlerEv
_ZN10KSemaphore14semOpenHandlerEv
_ZN10KSemaphore14semWaitHandlerEv
_ZN10KSemaphore16semSignalHandlerEv
_ZN10KSemaphore15semCloseHandlerEv
_ZN8KConsole11getcHandlerEv
_ZN8KConsole11putcHandlerEv
_ZN8KConsole14getCharHandlerEv
