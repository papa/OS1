GAS LISTING /tmp/ccCg0dHp.s 			page 1


   1              		.file	"Riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv15userMainWrapperEPv
   9              	_ZN5Riscv15userMainWrapperEPv:
  10              	.LFB34:
  11              		.file 1 "src/Riscv.cpp"
   1:src/Riscv.cpp **** //
   2:src/Riscv.cpp **** // Created by os on 4/27/22.
   3:src/Riscv.cpp **** //
   4:src/Riscv.cpp **** 
   5:src/Riscv.cpp **** #include "../h/Riscv.hpp"
   6:src/Riscv.cpp **** #include "../h/MemoryAllocator.hpp"
   7:src/Riscv.cpp **** #include "../h/PCB.hpp"
   8:src/Riscv.cpp **** #include "../h/syscall_cpp.hpp"
   9:src/Riscv.cpp **** #include "../h/SleepPCBList.hpp"
  10:src/Riscv.cpp **** #include "../h/KConsole.hpp"
  11:src/Riscv.cpp **** #include "../h/Tests.hpp"
  12:src/Riscv.cpp **** #include "../test/userMain.hpp"
  13:src/Riscv.cpp **** 
  14:src/Riscv.cpp **** uint64 Riscv::totalTime = 0;
  15:src/Riscv.cpp **** bool Riscv::finishSystem = false;
  16:src/Riscv.cpp **** 
  17:src/Riscv.cpp **** void Riscv::initSystem()
  18:src/Riscv.cpp **** {
  19:src/Riscv.cpp ****     w_stvec((uint64)&Riscv::supervisorTrap);
  20:src/Riscv.cpp ****     PCB::initialize();
  21:src/Riscv.cpp ****     KConsole::initialize();
  22:src/Riscv.cpp **** }
  23:src/Riscv.cpp **** 
  24:src/Riscv.cpp **** void Riscv::endSystem()
  25:src/Riscv.cpp **** {
  26:src/Riscv.cpp ****     //todo
  27:src/Riscv.cpp ****     Riscv::disableInterrupts();
  28:src/Riscv.cpp **** }
  29:src/Riscv.cpp **** 
  30:src/Riscv.cpp **** void Riscv::enableInterrupts() {
  31:src/Riscv.cpp ****     ms_sstatus(Riscv::SSTATUS_SIE);
  32:src/Riscv.cpp **** }
  33:src/Riscv.cpp **** 
  34:src/Riscv.cpp **** void Riscv::disableInterrupts()
  35:src/Riscv.cpp **** {
  36:src/Riscv.cpp ****     mc_sstatus(Riscv::SSTATUS_SIE);
  37:src/Riscv.cpp **** }
  38:src/Riscv.cpp **** 
  39:src/Riscv.cpp **** void Riscv::popSppSpie()
  40:src/Riscv.cpp **** {
  41:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
  42:src/Riscv.cpp ****     __asm__ volatile ("sret");
  43:src/Riscv.cpp **** }
  44:src/Riscv.cpp **** 
  45:src/Riscv.cpp **** void Riscv::handleSupervisorTrap()
  46:src/Riscv.cpp **** {
  47:src/Riscv.cpp ****     __asm__ volatile("mv %0, a4" : "=r"(PCB::savedRegA4));
GAS LISTING /tmp/ccCg0dHp.s 			page 2


  48:src/Riscv.cpp ****     __asm__ volatile("csrr %0, sscratch":"=r"(PCB::running->sscratch));
  49:src/Riscv.cpp **** 
  50:src/Riscv.cpp ****     uint64 scause = Riscv::r_scause();
  51:src/Riscv.cpp **** 
  52:src/Riscv.cpp ****     switch(scause)
  53:src/Riscv.cpp ****     {
  54:src/Riscv.cpp ****         case timerInterrupt:
  55:src/Riscv.cpp ****         {
  56:src/Riscv.cpp ****             uint64 volatile sepc = Riscv::r_sepc();
  57:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
  58:src/Riscv.cpp ****             mc_sip(Riscv::SIP_SSIP);
  59:src/Riscv.cpp ****             //trapPrintString("timerInterrupt\n");
  60:src/Riscv.cpp ****             //static uint64 total = 0;
  61:src/Riscv.cpp ****             totalTime++;
  62:src/Riscv.cpp ****             //trapPrintInt(totalTime);
  63:src/Riscv.cpp **** 
  64:src/Riscv.cpp ****             PCB::timeSliceCounter++;
  65:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
  66:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
  67:src/Riscv.cpp ****             {
  68:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
  69:src/Riscv.cpp ****                 PCB::dispatch();
  70:src/Riscv.cpp ****             }
  71:src/Riscv.cpp **** 
  72:src/Riscv.cpp ****             Riscv::w_sstatus(sstatus);
  73:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
  74:src/Riscv.cpp ****             changePrivMode();
  75:src/Riscv.cpp ****             break;
  76:src/Riscv.cpp ****         }
  77:src/Riscv.cpp ****         case hwInterrupt:
  78:src/Riscv.cpp ****         {
  79:src/Riscv.cpp ****             uint64 x = CONSOLE_STATUS;
  80:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0"::"r"(x));
  81:src/Riscv.cpp ****             __asm__ volatile("lb a1, 0(a0)");
  82:src/Riscv.cpp ****             uint64 operation;
  83:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" :  "=r"(operation));
  84:src/Riscv.cpp ****             if(operation & KConsole::STATUS_READ_MASK)
  85:src/Riscv.cpp ****             {
  86:src/Riscv.cpp ****                 x = CONSOLE_TX_DATA;
  87:src/Riscv.cpp ****                 __asm__ volatile("mv a0, %0"::"r"(x));
  88:src/Riscv.cpp ****                 __asm__ volatile("lb a1,0(a0)");
  89:src/Riscv.cpp ****                 char c;
  90:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" :  "=r"(c));
  91:src/Riscv.cpp ****                 if(KConsole::pendingGetc > 0)
  92:src/Riscv.cpp ****                 {
  93:src/Riscv.cpp ****                     KConsole::pendingGetc--;
  94:src/Riscv.cpp ****                     KConsole::putCharacterInput(c);
  95:src/Riscv.cpp ****                     //KConsole::putCharacterOutput(c);
  96:src/Riscv.cpp ****                 }
  97:src/Riscv.cpp ****             }
  98:src/Riscv.cpp **** 
  99:src/Riscv.cpp ****             plic_complete(plic_claim());
 100:src/Riscv.cpp **** 
 101:src/Riscv.cpp ****             break;
 102:src/Riscv.cpp ****         }
 103:src/Riscv.cpp ****         case operationInterrupt: // todo
 104:src/Riscv.cpp ****         {
GAS LISTING /tmp/ccCg0dHp.s 			page 3


 105:src/Riscv.cpp ****             //trapPrintString("operation interrupt\n");
 106:src/Riscv.cpp ****             PCB::threadExitHandler();
 107:src/Riscv.cpp ****             break;
 108:src/Riscv.cpp ****         }
 109:src/Riscv.cpp ****         case addrReadInterrupt: // todo
 110:src/Riscv.cpp ****         {
 111:src/Riscv.cpp ****             //trapPrintString("read interrupt\n");
 112:src/Riscv.cpp ****             PCB::threadExitHandler();
 113:src/Riscv.cpp ****             break;
 114:src/Riscv.cpp ****         }
 115:src/Riscv.cpp ****         case addrWriteInterrupt: // todo
 116:src/Riscv.cpp ****         {
 117:src/Riscv.cpp ****             //trapPrintString("write interrupt\n");
 118:src/Riscv.cpp ****             PCB::threadExitHandler();
 119:src/Riscv.cpp ****             break;
 120:src/Riscv.cpp ****         }
 121:src/Riscv.cpp ****         case ecallSystemInterupt:
 122:src/Riscv.cpp ****         case ecallUserInterrupt:
 123:src/Riscv.cpp ****         {
 124:src/Riscv.cpp ****             uint64 operation;
 125:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
 126:src/Riscv.cpp **** 
 127:src/Riscv.cpp ****             uint64 volatile sepc = Riscv::r_sepc() + 4;
 128:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 129:src/Riscv.cpp **** 
 130:src/Riscv.cpp ****             switch(operation)
 131:src/Riscv.cpp ****             {
 132:src/Riscv.cpp ****                 case MemoryAllocator::MEM_ALLOC:
 133:src/Riscv.cpp ****                     MemoryAllocator::memAllocHandler();
 134:src/Riscv.cpp ****                     break;
 135:src/Riscv.cpp ****                 case MemoryAllocator::MEM_FREE:
 136:src/Riscv.cpp ****                     MemoryAllocator::memFreeHandler();
 137:src/Riscv.cpp ****                     break;
 138:src/Riscv.cpp ****                 case PCB::THREAD_MAKE_PCB:
 139:src/Riscv.cpp ****                     PCB::threadMakePCBHandler();
 140:src/Riscv.cpp ****                     break;
 141:src/Riscv.cpp ****                 case PCB::THREAD_CREATE:
 142:src/Riscv.cpp ****                     PCB::threadCreateHandler();
 143:src/Riscv.cpp ****                     break;
 144:src/Riscv.cpp ****                 case PCB::THREAD_START:
 145:src/Riscv.cpp ****                     PCB::threadStartHandler();
 146:src/Riscv.cpp ****                     break;
 147:src/Riscv.cpp ****                 case PCB::THREAD_DISPATCH:
 148:src/Riscv.cpp ****                     PCB::threadDispatchHandler();
 149:src/Riscv.cpp ****                     break;
 150:src/Riscv.cpp ****                 case PCB::THREAD_EXIT:
 151:src/Riscv.cpp ****                     PCB::threadExitHandler();
 152:src/Riscv.cpp ****                     break;
 153:src/Riscv.cpp ****                 case PCB::TIME_SLEEP:
 154:src/Riscv.cpp ****                     PCB::threadSleepHandler();
 155:src/Riscv.cpp ****                     break;
 156:src/Riscv.cpp ****                 case KSemaphore::SEM_OPEN:
 157:src/Riscv.cpp ****                     KSemaphore::semOpenHandler();
 158:src/Riscv.cpp ****                     break;
 159:src/Riscv.cpp ****                 case KSemaphore::SEM_WAIT:
 160:src/Riscv.cpp ****                     KSemaphore::semWaitHandler();
 161:src/Riscv.cpp ****                     break;
GAS LISTING /tmp/ccCg0dHp.s 			page 4


 162:src/Riscv.cpp ****                 case KSemaphore::SEM_SIGNAL:
 163:src/Riscv.cpp ****                     KSemaphore::semSignalHandler();
 164:src/Riscv.cpp ****                     break;
 165:src/Riscv.cpp ****                 case KSemaphore::SEM_CLOSE:
 166:src/Riscv.cpp ****                     KSemaphore::semCloseHandler();
 167:src/Riscv.cpp ****                     break;
 168:src/Riscv.cpp ****                 case KConsole::CONSOLE_GETC:
 169:src/Riscv.cpp ****                     KConsole::getcHandler();
 170:src/Riscv.cpp ****                     break;
 171:src/Riscv.cpp ****                 case KConsole::CONSOLE_PUTC:
 172:src/Riscv.cpp ****                     KConsole::putcHandler();
 173:src/Riscv.cpp ****                     break;
 174:src/Riscv.cpp ****                 case KConsole::CONSOLE_GET_CHAR:
 175:src/Riscv.cpp ****                     KConsole::getCharHandler();
 176:src/Riscv.cpp ****                     break;
 177:src/Riscv.cpp ****             }
 178:src/Riscv.cpp **** 
 179:src/Riscv.cpp ****             Riscv::w_sstatus(sstatus);
 180:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 181:src/Riscv.cpp ****             changePrivMode();
 182:src/Riscv.cpp ****             break;
 183:src/Riscv.cpp ****         }
 184:src/Riscv.cpp ****     }
 185:src/Riscv.cpp **** }
 186:src/Riscv.cpp **** 
 187:src/Riscv.cpp **** void Riscv::kernelMain()
 188:src/Riscv.cpp **** {
 189:src/Riscv.cpp ****     initSystem();
 190:src/Riscv.cpp **** 
 191:src/Riscv.cpp ****     PCB* userPCB = new PCB(&Riscv::userMainWrapper, 0, kmalloc(DEFAULT_STACK_SIZE), DEFAULT_TIME_SL
 192:src/Riscv.cpp ****     //PCB* userPCB = new PCB(&Riscv::myTestsWrapper, 0, kmalloc(DEFAULT_STACK_SIZE), DEFAULT_TIME_S
 193:src/Riscv.cpp ****     userPCB->start();
 194:src/Riscv.cpp **** 
 195:src/Riscv.cpp ****     enableInterrupts();
 196:src/Riscv.cpp **** 
 197:src/Riscv.cpp ****     while(!userPCB->isFinished())
 198:src/Riscv.cpp ****     {
 199:src/Riscv.cpp ****         thread_dispatch();
 200:src/Riscv.cpp ****     }
 201:src/Riscv.cpp **** 
 202:src/Riscv.cpp ****     finishSystem = true;
 203:src/Riscv.cpp ****     ::printString("End...\n");
 204:src/Riscv.cpp ****     while(!PCB::consolePCB->isFinished())
 205:src/Riscv.cpp ****     {
 206:src/Riscv.cpp ****         thread_dispatch();
 207:src/Riscv.cpp ****     }
 208:src/Riscv.cpp ****     disableInterrupts();
 209:src/Riscv.cpp ****     endSystem();
 210:src/Riscv.cpp **** }
 211:src/Riscv.cpp **** 
 212:src/Riscv.cpp **** void Riscv::userMainWrapper(void* )
 213:src/Riscv.cpp **** {
  12              		.loc 1 213 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23341100 		sd	ra,8(sp)
GAS LISTING /tmp/ccCg0dHp.s 			page 5


  17 0008 23308100 		sd	s0,0(sp)
  18              		.cfi_offset 1, -8
  19              		.cfi_offset 8, -16
  20 000c 13040101 		addi	s0,sp,16
  21              		.cfi_def_cfa 8, 0
 214:src/Riscv.cpp ****     userMain();
  22              		.loc 1 214 5
  23              		.loc 1 214 13 is_stmt 0
  24 0010 97000000 		call	_Z8userMainv@plt
  24      E7800000 
  25              	.LVL0:
 215:src/Riscv.cpp **** }
  26              		.loc 1 215 1
  27 0018 83308100 		ld	ra,8(sp)
  28              		.cfi_restore 1
  29 001c 03340100 		ld	s0,0(sp)
  30              		.cfi_restore 8
  31              		.cfi_def_cfa 2, 16
  32 0020 13010101 		addi	sp,sp,16
  33              		.cfi_def_cfa_offset 0
  34 0024 67800000 		jr	ra
  35              		.cfi_endproc
  36              	.LFE34:
  38              		.align	2
  39              		.globl	_ZN5Riscv10initSystemEv
  41              	_ZN5Riscv10initSystemEv:
  42              	.LFB27:
  18:src/Riscv.cpp ****     w_stvec((uint64)&Riscv::supervisorTrap);
  43              		.loc 1 18 1 is_stmt 1
  44              		.cfi_startproc
  45 0028 130101FF 		addi	sp,sp,-16
  46              		.cfi_def_cfa_offset 16
  47 002c 23341100 		sd	ra,8(sp)
  48 0030 23308100 		sd	s0,0(sp)
  49              		.cfi_offset 1, -8
  50              		.cfi_offset 8, -16
  51 0034 13040101 		addi	s0,sp,16
  52              		.cfi_def_cfa 8, 0
  19:src/Riscv.cpp ****     PCB::initialize();
  53              		.loc 1 19 5
  19:src/Riscv.cpp ****     PCB::initialize();
  54              		.loc 1 19 12 is_stmt 0
  55 0038 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
  55      83B70700 
  56              	.LVL1:
  57              	.LBB41:
  58              	.LBB42:
  59              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 4/27/22.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_0_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_0_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** #include "../test/printing.hpp"
GAS LISTING /tmp/ccCg0dHp.s 			page 6


  10:src/../h/Riscv.hpp **** 
  11:src/../h/Riscv.hpp **** class Riscv
  12:src/../h/Riscv.hpp **** {
  13:src/../h/Riscv.hpp **** public:
  14:src/../h/Riscv.hpp ****     static void kernelMain();
  15:src/../h/Riscv.hpp **** 
  16:src/../h/Riscv.hpp ****     static void changePrivMode();
  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp ****     static void initSystem();
  19:src/../h/Riscv.hpp ****     static void endSystem();
  20:src/../h/Riscv.hpp **** 
  21:src/../h/Riscv.hpp ****     static void userMainWrapper(void* p);
  22:src/../h/Riscv.hpp **** 
  23:src/../h/Riscv.hpp ****     static void enableInterrupts();
  24:src/../h/Riscv.hpp **** 
  25:src/../h/Riscv.hpp ****     static void disableTimerInterrupts();
  26:src/../h/Riscv.hpp **** 
  27:src/../h/Riscv.hpp ****     static void disableInterrupts();
  28:src/../h/Riscv.hpp **** 
  29:src/../h/Riscv.hpp ****     static void idleRiscv(void* arg);
  30:src/../h/Riscv.hpp **** 
  31:src/../h/Riscv.hpp ****     static void pushRegisters();
  32:src/../h/Riscv.hpp ****     static void popRegisters();
  33:src/../h/Riscv.hpp **** 
  34:src/../h/Riscv.hpp ****     static uint64 r_scause();
  35:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  36:src/../h/Riscv.hpp **** 
  37:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  38:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
  39:src/../h/Riscv.hpp **** 
  40:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  41:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  42:src/../h/Riscv.hpp **** 
  43:src/../h/Riscv.hpp ****     static uint64 r_stval();
  44:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  45:src/../h/Riscv.hpp **** 
  46:src/../h/Riscv.hpp ****     static bool finishSystem;
  47:src/../h/Riscv.hpp **** 
  48:src/../h/Riscv.hpp ****     enum BitMaskSip
  49:src/../h/Riscv.hpp ****     {
  50:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  51:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  52:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9),
  53:src/../h/Riscv.hpp ****     };
  54:src/../h/Riscv.hpp **** 
  55:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  56:src/../h/Riscv.hpp **** 
  57:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  58:src/../h/Riscv.hpp **** 
  59:src/../h/Riscv.hpp ****     static uint64 r_sip();
  60:src/../h/Riscv.hpp **** 
  61:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  62:src/../h/Riscv.hpp **** 
  63:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  64:src/../h/Riscv.hpp ****     {
  65:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  66:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
GAS LISTING /tmp/ccCg0dHp.s 			page 7


  67:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  68:src/../h/Riscv.hpp ****     };
  69:src/../h/Riscv.hpp **** 
  70:src/../h/Riscv.hpp ****     static void w_a0_sscratch();
  71:src/../h/Riscv.hpp **** 
  72:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  73:src/../h/Riscv.hpp **** 
  74:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  75:src/../h/Riscv.hpp **** 
  76:src/../h/Riscv.hpp ****     static void mc_sie(uint64 mask);
  77:src/../h/Riscv.hpp **** 
  78:src/../h/Riscv.hpp ****     static void ms_sie(uint64 mask);
  79:src/../h/Riscv.hpp **** 
  80:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  81:src/../h/Riscv.hpp **** 
  82:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  83:src/../h/Riscv.hpp **** 
  84:src/../h/Riscv.hpp ****     static uint64 r_sie();
  85:src/../h/Riscv.hpp ****     static void w_sie(uint64 sie);
  86:src/../h/Riscv.hpp ****     static void popSppSpie();
  87:src/../h/Riscv.hpp **** 
  88:src/../h/Riscv.hpp ****     static void supervisorTrap();
  89:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  90:src/../h/Riscv.hpp **** 
  91:src/../h/Riscv.hpp ****     static void myTestsWrapper(void* );
  92:src/../h/Riscv.hpp **** 
  93:src/../h/Riscv.hpp ****     static const uint64 bntOne = 1UL << 63;;
  94:src/../h/Riscv.hpp ****     static const uint64 bntZero = 0UL;
  95:src/../h/Riscv.hpp ****     static const uint64 timerInterrupt = bntOne + 1UL;
  96:src/../h/Riscv.hpp ****     static const uint64 hwInterrupt = bntOne + 9UL;
  97:src/../h/Riscv.hpp ****     static const uint64 operationInterrupt = bntZero + 2UL;
  98:src/../h/Riscv.hpp ****     static const uint64 addrReadInterrupt = bntZero + 5UL;
  99:src/../h/Riscv.hpp ****     static const uint64 addrWriteInterrupt = bntZero + 7UL;
 100:src/../h/Riscv.hpp ****     static const uint64 ecallUserInterrupt = bntZero + 8UL;
 101:src/../h/Riscv.hpp ****     static const uint64 ecallSystemInterupt = bntZero + 9UL;
 102:src/../h/Riscv.hpp **** 
 103:src/../h/Riscv.hpp ****     static uint64 totalTime;
 104:src/../h/Riscv.hpp **** };
 105:src/../h/Riscv.hpp **** 
 106:src/../h/Riscv.hpp **** inline void Riscv::mc_sie(uint64 mask)
 107:src/../h/Riscv.hpp **** {
 108:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sie, %0" : :"r"(mask));
 109:src/../h/Riscv.hpp **** }
 110:src/../h/Riscv.hpp **** 
 111:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause() {
 112:src/../h/Riscv.hpp ****     uint64 volatile scause;
 113:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
 114:src/../h/Riscv.hpp ****     return scause;
 115:src/../h/Riscv.hpp **** }
 116:src/../h/Riscv.hpp **** 
 117:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
 118:src/../h/Riscv.hpp ****     __asm__ volatile("csrw scause, %0" : :"r"(scause));
 119:src/../h/Riscv.hpp **** }
 120:src/../h/Riscv.hpp **** 
 121:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc() {
 122:src/../h/Riscv.hpp ****     uint64 volatile sepc;
 123:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
GAS LISTING /tmp/ccCg0dHp.s 			page 8


 124:src/../h/Riscv.hpp ****     return sepc;
 125:src/../h/Riscv.hpp **** }
 126:src/../h/Riscv.hpp **** 
 127:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
 128:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sepc, %0" : :"r"(sepc));
 129:src/../h/Riscv.hpp **** }
 130:src/../h/Riscv.hpp **** 
 131:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec() {
 132:src/../h/Riscv.hpp ****     uint64 volatile stvec;
 133:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, stvec" : "=r"(stvec));
 134:src/../h/Riscv.hpp ****     return stvec;
 135:src/../h/Riscv.hpp **** }
 136:src/../h/Riscv.hpp **** 
 137:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 138:src/../h/Riscv.hpp ****     __asm__ volatile("csrw stvec, %0" : :"r"(stvec));
  60              		.loc 2 138 5 is_stmt 1
  61              		.loc 2 138 53 is_stmt 0
  62              	#APP
  63              	# 138 "src/../h/Riscv.hpp" 1
 139              	}
  64              		csrw stvec, a5
  65              	# 0 "" 2
  66              	.LVL2:
  67              	#NO_APP
  68              	.LBE42:
  69              	.LBE41:
  20:src/Riscv.cpp ****     KConsole::initialize();
  70              		.loc 1 20 5 is_stmt 1
  20:src/Riscv.cpp ****     KConsole::initialize();
  71              		.loc 1 20 20 is_stmt 0
  72 0044 97000000 		call	_ZN3PCB10initializeEv@plt
  72      E7800000 
  73              	.LVL3:
  21:src/Riscv.cpp **** }
  74              		.loc 1 21 5 is_stmt 1
  21:src/Riscv.cpp **** }
  75              		.loc 1 21 25 is_stmt 0
  76 004c 97000000 		call	_ZN8KConsole10initializeEv@plt
  76      E7800000 
  77              	.LVL4:
  22:src/Riscv.cpp **** 
  78              		.loc 1 22 1
  79 0054 83308100 		ld	ra,8(sp)
  80              		.cfi_restore 1
  81 0058 03340100 		ld	s0,0(sp)
  82              		.cfi_restore 8
  83              		.cfi_def_cfa 2, 16
  84 005c 13010101 		addi	sp,sp,16
  85              		.cfi_def_cfa_offset 0
  86 0060 67800000 		jr	ra
  87              		.cfi_endproc
  88              	.LFE27:
  90              		.align	2
  91              		.globl	_ZN5Riscv16enableInterruptsEv
  93              	_ZN5Riscv16enableInterruptsEv:
  94              	.LFB29:
  30:src/Riscv.cpp ****     ms_sstatus(Riscv::SSTATUS_SIE);
GAS LISTING /tmp/ccCg0dHp.s 			page 9


  95              		.loc 1 30 32 is_stmt 1
  96              		.cfi_startproc
  97 0064 130101FF 		addi	sp,sp,-16
  98              		.cfi_def_cfa_offset 16
  99 0068 23348100 		sd	s0,8(sp)
 100              		.cfi_offset 8, -8
 101 006c 13040101 		addi	s0,sp,16
 102              		.cfi_def_cfa 8, 0
  31:src/Riscv.cpp **** }
 103              		.loc 1 31 5
 104              	.LVL5:
 105              	.LBB43:
 106              	.LBB44:
 140:src/../h/Riscv.hpp **** 
 141:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stval() {
 142:src/../h/Riscv.hpp ****     uint64 volatile stval;
 143:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, stval" : "=r"(stval));
 144:src/../h/Riscv.hpp ****     return stval;
 145:src/../h/Riscv.hpp **** }
 146:src/../h/Riscv.hpp **** 
 147:src/../h/Riscv.hpp **** inline void Riscv::w_sie(uint64 sie)
 148:src/../h/Riscv.hpp **** {
 149:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sie, %0" : :"r"(sie));
 150:src/../h/Riscv.hpp **** }
 151:src/../h/Riscv.hpp **** 
 152:src/../h/Riscv.hpp **** inline void Riscv::w_stval(uint64 stval) {
 153:src/../h/Riscv.hpp ****     __asm__ volatile("csrw stval, %0" : :"r"(stval));
 154:src/../h/Riscv.hpp **** }
 155:src/../h/Riscv.hpp **** 
 156:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 157:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sip, %0" : :"r"(mask));
 158:src/../h/Riscv.hpp **** }
 159:src/../h/Riscv.hpp **** 
 160:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 161:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sip, %0" : :"r"(mask));
 162:src/../h/Riscv.hpp **** }
 163:src/../h/Riscv.hpp **** 
 164:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sie()
 165:src/../h/Riscv.hpp **** {
 166:src/../h/Riscv.hpp ****     uint64 volatile sie;
 167:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sip" : "=r"(sie));
 168:src/../h/Riscv.hpp ****     return sie;
 169:src/../h/Riscv.hpp **** }
 170:src/../h/Riscv.hpp **** 
 171:src/../h/Riscv.hpp **** inline void Riscv::ms_sie(uint64 mask)
 172:src/../h/Riscv.hpp **** {
 173:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sie, %0" : :"r"(mask));
 174:src/../h/Riscv.hpp **** }
 175:src/../h/Riscv.hpp **** 
 176:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip() {
 177:src/../h/Riscv.hpp ****     uint64 volatile sip;
 178:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sip" : "=r"(sip));
 179:src/../h/Riscv.hpp ****     return sip;
 180:src/../h/Riscv.hpp **** }
 181:src/../h/Riscv.hpp **** 
 182:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 183:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sip, %0" : :"r"(sip));
GAS LISTING /tmp/ccCg0dHp.s 			page 10


 184:src/../h/Riscv.hpp **** }
 185:src/../h/Riscv.hpp **** 
 186:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 187:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sstatus, %0" : :"r"(mask));
 107              		.loc 2 187 5
 108              		.loc 2 187 54 is_stmt 0
 109 0070 93072000 		li	a5,2
 110              	#APP
 111              	# 187 "src/../h/Riscv.hpp" 1
 188              	}
 112              		csrs sstatus, a5
 113              	# 0 "" 2
 114              	.LVL6:
 115              	#NO_APP
 116              	.LBE44:
 117              	.LBE43:
  32:src/Riscv.cpp **** 
 118              		.loc 1 32 1
 119 0078 03348100 		ld	s0,8(sp)
 120              		.cfi_restore 8
 121              		.cfi_def_cfa 2, 16
 122 007c 13010101 		addi	sp,sp,16
 123              		.cfi_def_cfa_offset 0
 124 0080 67800000 		jr	ra
 125              		.cfi_endproc
 126              	.LFE29:
 128              		.align	2
 129              		.globl	_ZN5Riscv17disableInterruptsEv
 131              	_ZN5Riscv17disableInterruptsEv:
 132              	.LFB30:
  35:src/Riscv.cpp ****     mc_sstatus(Riscv::SSTATUS_SIE);
 133              		.loc 1 35 1 is_stmt 1
 134              		.cfi_startproc
 135 0084 130101FF 		addi	sp,sp,-16
 136              		.cfi_def_cfa_offset 16
 137 0088 23348100 		sd	s0,8(sp)
 138              		.cfi_offset 8, -8
 139 008c 13040101 		addi	s0,sp,16
 140              		.cfi_def_cfa 8, 0
  36:src/Riscv.cpp **** }
 141              		.loc 1 36 5
 142              	.LVL7:
 143              	.LBB45:
 144              	.LBB46:
 189:src/../h/Riscv.hpp **** 
 190:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 191:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sstatus, %0" : :"r"(mask));
 145              		.loc 2 191 5
 146              		.loc 2 191 54 is_stmt 0
 147 0090 93072000 		li	a5,2
 148              	#APP
 149              	# 191 "src/../h/Riscv.hpp" 1
 192              	}
 150              		csrc sstatus, a5
 151              	# 0 "" 2
 152              	.LVL8:
 153              	#NO_APP
GAS LISTING /tmp/ccCg0dHp.s 			page 11


 154              	.LBE46:
 155              	.LBE45:
  37:src/Riscv.cpp **** 
 156              		.loc 1 37 1
 157 0098 03348100 		ld	s0,8(sp)
 158              		.cfi_restore 8
 159              		.cfi_def_cfa 2, 16
 160 009c 13010101 		addi	sp,sp,16
 161              		.cfi_def_cfa_offset 0
 162 00a0 67800000 		jr	ra
 163              		.cfi_endproc
 164              	.LFE30:
 166              		.align	2
 167              		.globl	_ZN5Riscv9endSystemEv
 169              	_ZN5Riscv9endSystemEv:
 170              	.LFB28:
  25:src/Riscv.cpp ****     //todo
 171              		.loc 1 25 1 is_stmt 1
 172              		.cfi_startproc
 173 00a4 130101FF 		addi	sp,sp,-16
 174              		.cfi_def_cfa_offset 16
 175 00a8 23341100 		sd	ra,8(sp)
 176 00ac 23308100 		sd	s0,0(sp)
 177              		.cfi_offset 1, -8
 178              		.cfi_offset 8, -16
 179 00b0 13040101 		addi	s0,sp,16
 180              		.cfi_def_cfa 8, 0
  27:src/Riscv.cpp **** }
 181              		.loc 1 27 5
  27:src/Riscv.cpp **** }
 182              		.loc 1 27 29 is_stmt 0
 183 00b4 97000000 		call	_ZN5Riscv17disableInterruptsEv
 183      E7800000 
 184              	.LVL9:
  28:src/Riscv.cpp **** 
 185              		.loc 1 28 1
 186 00bc 83308100 		ld	ra,8(sp)
 187              		.cfi_restore 1
 188 00c0 03340100 		ld	s0,0(sp)
 189              		.cfi_restore 8
 190              		.cfi_def_cfa 2, 16
 191 00c4 13010101 		addi	sp,sp,16
 192              		.cfi_def_cfa_offset 0
 193 00c8 67800000 		jr	ra
 194              		.cfi_endproc
 195              	.LFE28:
 197              		.align	2
 198              		.globl	_ZN5Riscv10popSppSpieEv
 200              	_ZN5Riscv10popSppSpieEv:
 201              	.LFB31:
  40:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
 202              		.loc 1 40 1 is_stmt 1
 203              		.cfi_startproc
 204 00cc 130101FF 		addi	sp,sp,-16
 205              		.cfi_def_cfa_offset 16
 206 00d0 23348100 		sd	s0,8(sp)
 207              		.cfi_offset 8, -8
GAS LISTING /tmp/ccCg0dHp.s 			page 12


 208 00d4 13040101 		addi	s0,sp,16
 209              		.cfi_def_cfa 8, 0
  41:src/Riscv.cpp ****     __asm__ volatile ("sret");
 210              		.loc 1 41 5
  41:src/Riscv.cpp ****     __asm__ volatile ("sret");
 211              		.loc 1 41 39 is_stmt 0
 212              	#APP
 213              	# 41 "src/Riscv.cpp" 1
  42:src/Riscv.cpp **** }
 214              		csrw sepc, ra
 215              	# 0 "" 2
 216              		.loc 1 42 5 is_stmt 1
  42:src/Riscv.cpp **** }
 217              		.loc 1 42 30 is_stmt 0
 218              	# 42 "src/Riscv.cpp" 1
  43:src/Riscv.cpp **** 
 219              		sret
 220              	# 0 "" 2
 221              		.loc 1 43 1
 222              	#NO_APP
 223 00e0 03348100 		ld	s0,8(sp)
 224              		.cfi_restore 8
 225              		.cfi_def_cfa 2, 16
 226 00e4 13010101 		addi	sp,sp,16
 227              		.cfi_def_cfa_offset 0
 228 00e8 67800000 		jr	ra
 229              		.cfi_endproc
 230              	.LFE31:
 232              		.section	.rodata.str1.8,"aMS",@progbits,1
 233              		.align	3
 234              	.LC0:
 235 0000 456E642E 		.string	"End...\n"
 235      2E2E0A00 
 236              		.text
 237              		.align	2
 238              		.globl	_ZN5Riscv10kernelMainEv
 240              	_ZN5Riscv10kernelMainEv:
 241              	.LFB33:
 188:src/Riscv.cpp ****     initSystem();
 242              		.loc 1 188 1 is_stmt 1
 243              		.cfi_startproc
 244              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 245              		.cfi_lsda 0x1b,.LLSDA33
 246 00ec 130101FE 		addi	sp,sp,-32
 247              		.cfi_def_cfa_offset 32
 248 00f0 233C1100 		sd	ra,24(sp)
 249 00f4 23388100 		sd	s0,16(sp)
 250 00f8 23349100 		sd	s1,8(sp)
 251 00fc 23302101 		sd	s2,0(sp)
 252              		.cfi_offset 1, -8
 253              		.cfi_offset 8, -16
 254              		.cfi_offset 9, -24
 255              		.cfi_offset 18, -32
 256 0100 13040102 		addi	s0,sp,32
 257              		.cfi_def_cfa 8, 0
 189:src/Riscv.cpp **** 
 258              		.loc 1 189 5
GAS LISTING /tmp/ccCg0dHp.s 			page 13


 259              	.LEHB0:
 189:src/Riscv.cpp **** 
 260              		.loc 1 189 15 is_stmt 0
 261 0104 97000000 		call	_ZN5Riscv10initSystemEv
 261      E7800000 
 262              	.LVL10:
 191:src/Riscv.cpp ****     //PCB* userPCB = new PCB(&Riscv::myTestsWrapper, 0, kmalloc(DEFAULT_STACK_SIZE), DEFAULT_TIME_S
 263              		.loc 1 191 5 is_stmt 1
 191:src/Riscv.cpp ****     //PCB* userPCB = new PCB(&Riscv::myTestsWrapper, 0, kmalloc(DEFAULT_STACK_SIZE), DEFAULT_TIME_S
 264              		.loc 1 191 63 is_stmt 0
 265 010c 37150000 		li	a0,4096
 266 0110 97000000 		call	_Z7kmallocm@plt
 266      E7800000 
 267              	.LVL11:
 268 0118 13090500 		mv	s2,a0
 191:src/Riscv.cpp ****     //PCB* userPCB = new PCB(&Riscv::myTestsWrapper, 0, kmalloc(DEFAULT_STACK_SIZE), DEFAULT_TIME_S
 269              		.loc 1 191 103
 270 011c 13058005 		li	a0,88
 271 0120 97000000 		call	_ZN3PCBnwEm@plt
 271      E7800000 
 272              	.LVL12:
 273              	.LEHE0:
 274 0128 93040500 		mv	s1,a0
 275 012c 13072000 		li	a4,2
 276 0130 93060900 		mv	a3,s2
 277 0134 13060000 		li	a2,0
 278 0138 97050000 		lla	a1,_ZN5Riscv15userMainWrapperEPv
 278      93850500 
 279              	.LEHB1:
 280 0140 97000000 		call	_ZN3PCBC1EPFvPvES0_S0_m@plt
 280      E7800000 
 281              	.LVL13:
 282              	.LEHE1:
 193:src/Riscv.cpp **** 
 283              		.loc 1 193 5 is_stmt 1 discriminator 2
 193:src/Riscv.cpp **** 
 284              		.loc 1 193 19 is_stmt 0 discriminator 2
 285 0148 13850400 		mv	a0,s1
 286              	.LEHB2:
 287 014c 97000000 		call	_ZN3PCB5startEv@plt
 287      E7800000 
 288              	.LVL14:
 195:src/Riscv.cpp **** 
 289              		.loc 1 195 5 is_stmt 1 discriminator 2
 195:src/Riscv.cpp **** 
 290              		.loc 1 195 21 is_stmt 0 discriminator 2
 291 0154 97000000 		call	_ZN5Riscv16enableInterruptsEv
 291      E7800000 
 292              	.LVL15:
 293              	.L15:
 197:src/Riscv.cpp ****     {
 294              		.loc 1 197 5 is_stmt 1
 197:src/Riscv.cpp ****     {
 295              		.loc 1 197 11
 197:src/Riscv.cpp ****     {
 296              		.loc 1 197 31 is_stmt 0
 297 015c 13850400 		mv	a0,s1
GAS LISTING /tmp/ccCg0dHp.s 			page 14


 298 0160 97000000 		call	_ZN3PCB10isFinishedEv@plt
 298      E7800000 
 299              	.LVL16:
 197:src/Riscv.cpp ****     {
 300              		.loc 1 197 11
 301 0168 63180500 		bnez	a0,.L14
 199:src/Riscv.cpp ****     }
 302              		.loc 1 199 9 is_stmt 1
 199:src/Riscv.cpp ****     }
 303              		.loc 1 199 24 is_stmt 0
 304 016c 97000000 		call	thread_dispatch@plt
 304      E7800000 
 305              	.LVL17:
 197:src/Riscv.cpp ****     {
 306              		.loc 1 197 5
 307 0174 6FF09FFE 		j	.L15
 308              	.L14:
 202:src/Riscv.cpp ****     ::printString("End...\n");
 309              		.loc 1 202 5 is_stmt 1
 202:src/Riscv.cpp ****     ::printString("End...\n");
 310              		.loc 1 202 18 is_stmt 0
 311 0178 93071000 		li	a5,1
 312 017c 17070000 		sb	a5,.LANCHOR0,a4
 312      2300F700 
 203:src/Riscv.cpp ****     while(!PCB::consolePCB->isFinished())
 313              		.loc 1 203 5 is_stmt 1
 203:src/Riscv.cpp ****     while(!PCB::consolePCB->isFinished())
 314              		.loc 1 203 18 is_stmt 0
 315 0184 17050000 		lla	a0,.LC0
 315      13050500 
 316 018c 97000000 		call	_Z11printStringPKc@plt
 316      E7800000 
 317              	.LVL18:
 318              	.L17:
 204:src/Riscv.cpp ****     {
 319              		.loc 1 204 5 is_stmt 1
 204:src/Riscv.cpp ****     {
 320              		.loc 1 204 11
 204:src/Riscv.cpp ****     {
 321              		.loc 1 204 39 is_stmt 0
 322 0194 97070000 		la	a5,_ZN3PCB10consolePCBE
 322      83B70700 
 323 019c 03B50700 		ld	a0,0(a5)
 324 01a0 97000000 		call	_ZN3PCB10isFinishedEv@plt
 324      E7800000 
 325              	.LVL19:
 204:src/Riscv.cpp ****     {
 326              		.loc 1 204 11
 327 01a8 63180500 		bnez	a0,.L16
 206:src/Riscv.cpp ****     }
 328              		.loc 1 206 9 is_stmt 1
 206:src/Riscv.cpp ****     }
 329              		.loc 1 206 24 is_stmt 0
 330 01ac 97000000 		call	thread_dispatch@plt
 330      E7800000 
 331              	.LVL20:
 332              	.LEHE2:
GAS LISTING /tmp/ccCg0dHp.s 			page 15


 204:src/Riscv.cpp ****     {
 333              		.loc 1 204 5
 334 01b4 6FF01FFE 		j	.L17
 335              	.L16:
 208:src/Riscv.cpp ****     endSystem();
 336              		.loc 1 208 5 is_stmt 1
 208:src/Riscv.cpp ****     endSystem();
 337              		.loc 1 208 22 is_stmt 0
 338 01b8 97000000 		call	_ZN5Riscv17disableInterruptsEv
 338      E7800000 
 339              	.LVL21:
 209:src/Riscv.cpp **** }
 340              		.loc 1 209 5 is_stmt 1
 209:src/Riscv.cpp **** }
 341              		.loc 1 209 14 is_stmt 0
 342 01c0 97000000 		call	_ZN5Riscv9endSystemEv
 342      E7800000 
 343              	.LVL22:
 210:src/Riscv.cpp **** 
 344              		.loc 1 210 1
 345 01c8 83308101 		ld	ra,24(sp)
 346              		.cfi_remember_state
 347              		.cfi_restore 1
 348 01cc 03340101 		ld	s0,16(sp)
 349              		.cfi_restore 8
 350              		.cfi_def_cfa 2, 32
 351 01d0 83348100 		ld	s1,8(sp)
 352              		.cfi_restore 9
 353              	.LVL23:
 354 01d4 03390100 		ld	s2,0(sp)
 355              		.cfi_restore 18
 356 01d8 13010102 		addi	sp,sp,32
 357              		.cfi_def_cfa_offset 0
 358 01dc 67800000 		jr	ra
 359              	.L19:
 360              		.cfi_restore_state
 361 01e0 13090500 		mv	s2,a0
 191:src/Riscv.cpp ****     //PCB* userPCB = new PCB(&Riscv::myTestsWrapper, 0, kmalloc(DEFAULT_STACK_SIZE), DEFAULT_TIME_S
 362              		.loc 1 191 103
 363 01e4 13850400 		mv	a0,s1
 364 01e8 97000000 		call	_ZN3PCBdlEPv@plt
 364      E7800000 
 365              	.LVL24:
 366 01f0 13050900 		mv	a0,s2
 367              	.LEHB3:
 368 01f4 97000000 		call	_Unwind_Resume@plt
 368      E7800000 
 369              	.LVL25:
 370              	.LEHE3:
 371              		.cfi_endproc
 372              	.LFE33:
 373              		.globl	__gxx_personality_v0
 374              		.section	.gcc_except_table,"a",@progbits
 375              	.LLSDA33:
 376 0000 FF       		.byte	0xff
 377 0001 FF       		.byte	0xff
 378 0002 03       		.byte	0x3
GAS LISTING /tmp/ccCg0dHp.s 			page 16


 379 0003 34       		.byte	0x34
 380 0004 00000000 		.4byte	.LEHB0-.LFB33
 381 0008 00000000 		.4byte	.LEHE0-.LEHB0
 382 000c 00000000 		.4byte	0
 383 0010 00       		.byte	0
 384 0011 00000000 		.4byte	.LEHB1-.LFB33
 385 0015 00000000 		.4byte	.LEHE1-.LEHB1
 386 0019 00000000 		.4byte	.L19-.LFB33
 387 001d 00       		.byte	0
 388 001e 00000000 		.4byte	.LEHB2-.LFB33
 389 0022 00000000 		.4byte	.LEHE2-.LEHB2
 390 0026 00000000 		.4byte	0
 391 002a 00       		.byte	0
 392 002b 00000000 		.4byte	.LEHB3-.LFB33
 393 002f 00000000 		.4byte	.LEHE3-.LEHB3
 394 0033 00000000 		.4byte	0
 395 0037 00       		.byte	0
 396              		.text
 398              		.align	2
 399              		.globl	_ZN5Riscv14myTestsWrapperEPv
 401              	_ZN5Riscv14myTestsWrapperEPv:
 402              	.LFB35:
 216:src/Riscv.cpp **** 
 217:src/Riscv.cpp **** void Riscv::myTestsWrapper(void* p)
 218:src/Riscv.cpp **** {
 403              		.loc 1 218 1 is_stmt 1
 404              		.cfi_startproc
 405              	.LVL26:
 406 01fc 130101FF 		addi	sp,sp,-16
 407              		.cfi_def_cfa_offset 16
 408 0200 23341100 		sd	ra,8(sp)
 409 0204 23308100 		sd	s0,0(sp)
 410              		.cfi_offset 1, -8
 411              		.cfi_offset 8, -16
 412 0208 13040101 		addi	s0,sp,16
 413              		.cfi_def_cfa 8, 0
 219:src/Riscv.cpp ****     myTests();
 414              		.loc 1 219 5
 415              		.loc 1 219 12 is_stmt 0
 416 020c 97000000 		call	_Z7myTestsv@plt
 416      E7800000 
 417              	.LVL27:
 220:src/Riscv.cpp **** }
 418              		.loc 1 220 1
 419 0214 83308100 		ld	ra,8(sp)
 420              		.cfi_restore 1
 421 0218 03340100 		ld	s0,0(sp)
 422              		.cfi_restore 8
 423              		.cfi_def_cfa 2, 16
 424 021c 13010101 		addi	sp,sp,16
 425              		.cfi_def_cfa_offset 0
 426 0220 67800000 		jr	ra
 427              		.cfi_endproc
 428              	.LFE35:
 430              		.align	2
 431              		.globl	_ZN5Riscv22disableTimerInterruptsEv
 433              	_ZN5Riscv22disableTimerInterruptsEv:
GAS LISTING /tmp/ccCg0dHp.s 			page 17


 434              	.LFB36:
 221:src/Riscv.cpp **** 
 222:src/Riscv.cpp **** void Riscv::disableTimerInterrupts()
 223:src/Riscv.cpp **** {
 435              		.loc 1 223 1 is_stmt 1
 436              		.cfi_startproc
 437 0224 130101FF 		addi	sp,sp,-16
 438              		.cfi_def_cfa_offset 16
 439 0228 23348100 		sd	s0,8(sp)
 440              		.cfi_offset 8, -8
 441 022c 13040101 		addi	s0,sp,16
 442              		.cfi_def_cfa 8, 0
 224:src/Riscv.cpp ****     uint64 x = 0x2;
 443              		.loc 1 224 5
 444              	.LVL28:
 225:src/Riscv.cpp ****     __asm__ volatile("csrc sie, %0"::"r"(x));
 445              		.loc 1 225 5
 446              		.loc 1 225 45 is_stmt 0
 447 0230 93072000 		li	a5,2
 448              	#APP
 449              	# 225 "src/Riscv.cpp" 1
 226              	}
 450              		csrc sie, a5
 451              	# 0 "" 2
 452              		.loc 1 226 1
 453              	#NO_APP
 454 0238 03348100 		ld	s0,8(sp)
 455              		.cfi_restore 8
 456              		.cfi_def_cfa 2, 16
 457 023c 13010101 		addi	sp,sp,16
 458              		.cfi_def_cfa_offset 0
 459 0240 67800000 		jr	ra
 460              		.cfi_endproc
 461              	.LFE36:
 463              		.align	2
 464              		.globl	_ZN5Riscv9idleRiscvEPv
 466              	_ZN5Riscv9idleRiscvEPv:
 467              	.LFB37:
 227:src/Riscv.cpp **** 
 228:src/Riscv.cpp **** void Riscv::idleRiscv(void* p)
 229:src/Riscv.cpp **** {
 468              		.loc 1 229 1 is_stmt 1
 469              		.cfi_startproc
 470              	.LVL29:
 471 0244 130101FF 		addi	sp,sp,-16
 472              		.cfi_def_cfa_offset 16
 473 0248 23348100 		sd	s0,8(sp)
 474              		.cfi_offset 8, -8
 475 024c 13040101 		addi	s0,sp,16
 476              		.cfi_def_cfa 8, 0
 477              	.L27:
 230:src/Riscv.cpp ****     while(true)
 478              		.loc 1 230 5 discriminator 1
 479              		.loc 1 230 5 discriminator 1
 480 0250 6F000000 		j	.L27
 481              		.cfi_endproc
 482              	.LFE37:
GAS LISTING /tmp/ccCg0dHp.s 			page 18


 484              		.align	2
 485              		.globl	_ZN5Riscv13w_a0_sscratchEv
 487              	_ZN5Riscv13w_a0_sscratchEv:
 488              	.LFB38:
 231:src/Riscv.cpp ****     {
 232:src/Riscv.cpp **** 
 233:src/Riscv.cpp ****     }
 234:src/Riscv.cpp **** }
 235:src/Riscv.cpp **** 
 236:src/Riscv.cpp **** void Riscv::w_a0_sscratch()
 237:src/Riscv.cpp **** {
 489              		.loc 1 237 1
 490              		.cfi_startproc
 491 0254 130101FF 		addi	sp,sp,-16
 492              		.cfi_def_cfa_offset 16
 493 0258 23348100 		sd	s0,8(sp)
 494              		.cfi_offset 8, -8
 495 025c 13040101 		addi	s0,sp,16
 496              		.cfi_def_cfa 8, 0
 238:src/Riscv.cpp ****     uint64 a1Temp;
 497              		.loc 1 238 5
 239:src/Riscv.cpp ****     __asm__ volatile("mv %0, a1":"=r"(a1Temp));
 498              		.loc 1 239 5
 499              		.loc 1 239 47 is_stmt 0
 500              	#APP
 501              	# 239 "src/Riscv.cpp" 1
 240              	    __asm__ volatile("mv a1, %0"::"r"(PCB::running->sscratch));
 502              		mv a5, a1
 503              	# 0 "" 2
 504              	.LVL30:
 505              		.loc 1 240 5 is_stmt 1
 506              		.loc 1 240 53 is_stmt 0
 507              	#NO_APP
 508 0264 17070000 		la	a4,_ZN3PCB7runningE
 508      03370700 
 509 026c 03370700 		ld	a4,0(a4)
 510 0270 03370701 		ld	a4,16(a4)
 511              		.loc 1 240 63
 512              	#APP
 513              	# 240 "src/Riscv.cpp" 1
 241              	    __asm__ volatile("sd a0, 80(a1)");
 514              		mv a1, a4
 515              	# 0 "" 2
 516              		.loc 1 241 5 is_stmt 1
 517              		.loc 1 241 38 is_stmt 0
 518              	# 241 "src/Riscv.cpp" 1
 242              	    __asm__ volatile("mv a1,%0"::"r"(a1Temp));
 519              		sd a0, 80(a1)
 520              	# 0 "" 2
 521              		.loc 1 242 5 is_stmt 1
 522              		.loc 1 242 46 is_stmt 0
 523              	# 242 "src/Riscv.cpp" 1
 243              	}
 524              		mv a1,a5
 525              	# 0 "" 2
 526              		.loc 1 243 1
 527              	#NO_APP
GAS LISTING /tmp/ccCg0dHp.s 			page 19


 528 0280 03348100 		ld	s0,8(sp)
 529              		.cfi_restore 8
 530              		.cfi_def_cfa 2, 16
 531 0284 13010101 		addi	sp,sp,16
 532              		.cfi_def_cfa_offset 0
 533 0288 67800000 		jr	ra
 534              		.cfi_endproc
 535              	.LFE38:
 537              		.align	2
 538              		.globl	_ZN5Riscv14changePrivModeEv
 540              	_ZN5Riscv14changePrivModeEv:
 541              	.LFB39:
 244:src/Riscv.cpp **** 
 245:src/Riscv.cpp **** void Riscv::changePrivMode()
 246:src/Riscv.cpp **** {
 542              		.loc 1 246 1 is_stmt 1
 543              		.cfi_startproc
 544 028c 130101FF 		addi	sp,sp,-16
 545              		.cfi_def_cfa_offset 16
 546 0290 23348100 		sd	s0,8(sp)
 547              		.cfi_offset 8, -8
 548 0294 13040101 		addi	s0,sp,16
 549              		.cfi_def_cfa 8, 0
 247:src/Riscv.cpp ****     if(PCB::running->systemThread)
 550              		.loc 1 247 5
 551              		.loc 1 247 22 is_stmt 0
 552 0298 97070000 		la	a5,_ZN3PCB7runningE
 552      83B70700 
 553 02a0 83B70700 		ld	a5,0(a5)
 554 02a4 83C70700 		lbu	a5,0(a5)
 555              		.loc 1 247 5
 556 02a8 638C0700 		beqz	a5,.L32
 248:src/Riscv.cpp ****         Riscv::ms_sstatus(Riscv::SSTATUS_SPP);
 557              		.loc 1 248 9 is_stmt 1
 558              	.LVL31:
 559              	.LBB47:
 560              	.LBB48:
 187:src/../h/Riscv.hpp **** }
 561              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 562              		.loc 2 187 54 is_stmt 0
 563 02ac 93070010 		li	a5,256
 564              	#APP
 565              	# 187 "src/../h/Riscv.hpp" 1
 566              		csrs sstatus, a5
 567              	# 0 "" 2
 568              	.LVL32:
 569              	#NO_APP
 570              	.L31:
 571              	.LBE48:
 572              	.LBE47:
 249:src/Riscv.cpp ****     else
 250:src/Riscv.cpp ****         Riscv::mc_sstatus(Riscv::SSTATUS_SPP);
 251:src/Riscv.cpp **** }
 573              		.loc 1 251 1
 574 02b4 03348100 		ld	s0,8(sp)
 575              		.cfi_remember_state
GAS LISTING /tmp/ccCg0dHp.s 			page 20


 576              		.cfi_restore 8
 577              		.cfi_def_cfa 2, 16
 578 02b8 13010101 		addi	sp,sp,16
 579              		.cfi_def_cfa_offset 0
 580 02bc 67800000 		jr	ra
 581              	.L32:
 582              		.cfi_restore_state
 250:src/Riscv.cpp **** }
 583              		.loc 1 250 9 is_stmt 1
 584              	.LVL33:
 585              	.LBB49:
 586              	.LBB50:
 191:src/../h/Riscv.hpp **** }
 587              		.loc 2 191 5
 191:src/../h/Riscv.hpp **** }
 588              		.loc 2 191 54 is_stmt 0
 589 02c0 93070010 		li	a5,256
 590              	#APP
 591              	# 191 "src/../h/Riscv.hpp" 1
 592              		csrc sstatus, a5
 593              	# 0 "" 2
 594              	.LVL34:
 595              	#NO_APP
 596              	.LBE50:
 597              	.LBE49:
 598              		.loc 1 251 1
 599 02c8 6FF0DFFE 		j	.L31
 600              		.cfi_endproc
 601              	.LFE39:
 603              		.align	2
 604              		.globl	_ZN5Riscv20handleSupervisorTrapEv
 606              	_ZN5Riscv20handleSupervisorTrapEv:
 607              	.LFB32:
  46:src/Riscv.cpp ****     __asm__ volatile("mv %0, a4" : "=r"(PCB::savedRegA4));
 608              		.loc 1 46 1 is_stmt 1
 609              		.cfi_startproc
 610 02cc 130101F9 		addi	sp,sp,-112
 611              		.cfi_def_cfa_offset 112
 612 02d0 23341106 		sd	ra,104(sp)
 613 02d4 23308106 		sd	s0,96(sp)
 614 02d8 233C9104 		sd	s1,88(sp)
 615              		.cfi_offset 1, -8
 616              		.cfi_offset 8, -16
 617              		.cfi_offset 9, -24
 618 02dc 13040107 		addi	s0,sp,112
 619              		.cfi_def_cfa 8, 0
  47:src/Riscv.cpp ****     __asm__ volatile("csrr %0, sscratch":"=r"(PCB::running->sscratch));
 620              		.loc 1 47 5
  47:src/Riscv.cpp ****     __asm__ volatile("csrr %0, sscratch":"=r"(PCB::running->sscratch));
 621              		.loc 1 47 58 is_stmt 0
 622              	#APP
 623              	# 47 "src/Riscv.cpp" 1
 624              		mv a4, a4
 625              	# 0 "" 2
 626              	#NO_APP
 627 02e4 97070000 		la	a5,_ZN3PCB10savedRegA4E
 627      83B70700 
GAS LISTING /tmp/ccCg0dHp.s 			page 21


 628 02ec 23B0E700 		sd	a4,0(a5)
  48:src/Riscv.cpp **** 
 629              		.loc 1 48 5 is_stmt 1
  48:src/Riscv.cpp **** 
 630              		.loc 1 48 61 is_stmt 0
 631 02f0 97070000 		la	a5,_ZN3PCB7runningE
 631      83B70700 
 632 02f8 83B70700 		ld	a5,0(a5)
  48:src/Riscv.cpp **** 
 633              		.loc 1 48 71
 634              	#APP
 635              	# 48 "src/Riscv.cpp" 1
 636              		csrr a4, sscratch
 637              	# 0 "" 2
 638              	#NO_APP
 639 0300 23B8E700 		sd	a4,16(a5)
  50:src/Riscv.cpp **** 
 640              		.loc 1 50 5 is_stmt 1
 641              	.LBB51:
 642              	.LBB52:
 112:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
 643              		.loc 2 112 5
 113:src/../h/Riscv.hpp ****     return scause;
 644              		.loc 2 113 5
 113:src/../h/Riscv.hpp ****     return scause;
 645              		.loc 2 113 55 is_stmt 0
 646              	#APP
 647              	# 113 "src/../h/Riscv.hpp" 1
 648              		csrr a5, scause
 649              	# 0 "" 2
 650              	#NO_APP
 651 0308 233CF4FA 		sd	a5,-72(s0)
 114:src/../h/Riscv.hpp **** }
 652              		.loc 2 114 5 is_stmt 1
 114:src/../h/Riscv.hpp **** }
 653              		.loc 2 114 12 is_stmt 0
 654 030c 833784FB 		ld	a5,-72(s0)
 655              	.LVL35:
 656              	.LBE52:
 657              	.LBE51:
  52:src/Riscv.cpp ****     {
 658              		.loc 1 52 5 is_stmt 1
 659              	.LBB53:
 660 0310 13079000 		li	a4,9
 661 0314 636EF702 		bgtu	a5,a4,.L36
 662 0318 13078000 		li	a4,8
 663 031c 63F4E718 		bgeu	a5,a4,.L37
 664 0320 13075000 		li	a4,5
 665 0324 638AE716 		beq	a5,a4,.L38
 666 0328 13077000 		li	a4,7
 667 032c 6398E700 		bne	a5,a4,.L64
 668              	.LBB54:
 115:src/Riscv.cpp ****         {
 669              		.loc 1 115 9
 116:src/Riscv.cpp ****             //trapPrintString("write interrupt\n");
 670              		.loc 1 116 9
 118:src/Riscv.cpp ****             break;
GAS LISTING /tmp/ccCg0dHp.s 			page 22


 671              		.loc 1 118 13
 118:src/Riscv.cpp ****             break;
 672              		.loc 1 118 35 is_stmt 0
 673 0330 97000000 		call	_ZN3PCB17threadExitHandlerEv@plt
 673      E7800000 
 674              	.LVL36:
 119:src/Riscv.cpp ****         }
 675              		.loc 1 119 13 is_stmt 1
 676 0338 6F000012 		j	.L35
 677              	.LVL37:
 678              	.L64:
 679              	.LBE54:
  52:src/Riscv.cpp ****     {
 680              		.loc 1 52 5 is_stmt 0
 681 033c 13072000 		li	a4,2
 682 0340 639CE710 		bne	a5,a4,.L35
 683              	.LBB85:
 103:src/Riscv.cpp ****         {
 684              		.loc 1 103 9 is_stmt 1
 104:src/Riscv.cpp ****             //trapPrintString("operation interrupt\n");
 685              		.loc 1 104 9
 106:src/Riscv.cpp ****             break;
 686              		.loc 1 106 13
 106:src/Riscv.cpp ****             break;
 687              		.loc 1 106 35 is_stmt 0
 688 0344 97000000 		call	_ZN3PCB17threadExitHandlerEv@plt
 688      E7800000 
 689              	.LVL38:
 107:src/Riscv.cpp ****         }
 690              		.loc 1 107 13 is_stmt 1
 691 034c 6F00C010 		j	.L35
 692              	.LVL39:
 693              	.L36:
 694              	.LBE85:
  52:src/Riscv.cpp ****     {
 695              		.loc 1 52 5 is_stmt 0
 696 0350 1307F0FF 		li	a4,-1
 697 0354 1317F703 		slli	a4,a4,63
 698 0358 13071700 		addi	a4,a4,1
 699 035c 638AE706 		beq	a5,a4,.L42
 700 0360 1307F0FF 		li	a4,-1
 701 0364 1317F703 		slli	a4,a4,63
 702 0368 13079700 		addi	a4,a4,9
 703 036c 6396E70E 		bne	a5,a4,.L35
 704              	.LBB86:
  77:src/Riscv.cpp ****         {
 705              		.loc 1 77 9 is_stmt 1
  78:src/Riscv.cpp ****             uint64 x = CONSOLE_STATUS;
 706              		.loc 1 78 9
 707              	.LBB55:
  79:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0"::"r"(x));
 708              		.loc 1 79 13
  79:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0"::"r"(x));
 709              		.loc 1 79 20 is_stmt 0
 710 0370 97070000 		la	a5,CONSOLE_STATUS
 710      83B70700 
 711              	.LVL40:
GAS LISTING /tmp/ccCg0dHp.s 			page 23


 712 0378 83B70700 		ld	a5,0(a5)
 713              	.LVL41:
  80:src/Riscv.cpp ****             __asm__ volatile("lb a1, 0(a0)");
 714              		.loc 1 80 13 is_stmt 1
  80:src/Riscv.cpp ****             __asm__ volatile("lb a1, 0(a0)");
 715              		.loc 1 80 50 is_stmt 0
 716              	#APP
 717              	# 80 "src/Riscv.cpp" 1
  81:src/Riscv.cpp ****             uint64 operation;
 718              		mv a0, a5
 719              	# 0 "" 2
 720              		.loc 1 81 13 is_stmt 1
  81:src/Riscv.cpp ****             uint64 operation;
 721              		.loc 1 81 45 is_stmt 0
 722              	# 81 "src/Riscv.cpp" 1
  82:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" :  "=r"(operation));
 723              		lb a1, 0(a0)
 724              	# 0 "" 2
 725              		.loc 1 82 13 is_stmt 1
  83:src/Riscv.cpp ****             if(operation & KConsole::STATUS_READ_MASK)
 726              		.loc 1 83 13
  83:src/Riscv.cpp ****             if(operation & KConsole::STATUS_READ_MASK)
 727              		.loc 1 83 61 is_stmt 0
 728              	# 83 "src/Riscv.cpp" 1
 729              		mv a5, a1
 730              	# 0 "" 2
 731              	.LVL42:
  84:src/Riscv.cpp ****             {
 732              		.loc 1 84 13 is_stmt 1
 733              	#NO_APP
 734              	.LBB56:
  84:src/Riscv.cpp ****             {
 735              		.loc 1 84 26 is_stmt 0
 736 0388 93F71700 		andi	a5,a5,1
 737              	.LVL43:
  84:src/Riscv.cpp ****             {
 738              		.loc 1 84 13
 739 038c 63880702 		beqz	a5,.L45
 740              	.LBB57:
  86:src/Riscv.cpp ****                 __asm__ volatile("mv a0, %0"::"r"(x));
 741              		.loc 1 86 17 is_stmt 1
  86:src/Riscv.cpp ****                 __asm__ volatile("mv a0, %0"::"r"(x));
 742              		.loc 1 86 19 is_stmt 0
 743 0390 97070000 		la	a5,CONSOLE_TX_DATA
 743      83B70700 
 744 0398 83B70700 		ld	a5,0(a5)
 745              	.LVL44:
  87:src/Riscv.cpp ****                 __asm__ volatile("lb a1,0(a0)");
 746              		.loc 1 87 17 is_stmt 1
  87:src/Riscv.cpp ****                 __asm__ volatile("lb a1,0(a0)");
 747              		.loc 1 87 54 is_stmt 0
 748              	#APP
 749              	# 87 "src/Riscv.cpp" 1
  88:src/Riscv.cpp ****                 char c;
 750              		mv a0, a5
 751              	# 0 "" 2
 752              		.loc 1 88 17 is_stmt 1
GAS LISTING /tmp/ccCg0dHp.s 			page 24


  88:src/Riscv.cpp ****                 char c;
 753              		.loc 1 88 48 is_stmt 0
 754              	# 88 "src/Riscv.cpp" 1
  89:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" :  "=r"(c));
 755              		lb a1,0(a0)
 756              	# 0 "" 2
 757              		.loc 1 89 17 is_stmt 1
  90:src/Riscv.cpp ****                 if(KConsole::pendingGetc > 0)
 758              		.loc 1 90 17
  90:src/Riscv.cpp ****                 if(KConsole::pendingGetc > 0)
 759              		.loc 1 90 57 is_stmt 0
 760              	# 90 "src/Riscv.cpp" 1
 761              		mv a0, a1
 762              	# 0 "" 2
 763              	#NO_APP
 764 03a8 1375F50F 		andi	a0,a0,0xff
 765              	.LVL45:
  91:src/Riscv.cpp ****                 {
 766              		.loc 1 91 17 is_stmt 1
  91:src/Riscv.cpp ****                 {
 767              		.loc 1 91 42 is_stmt 0
 768 03ac 97070000 		la	a5,_ZN8KConsole11pendingGetcE
 768      83B70700 
 769              	.LVL46:
 770 03b4 83B70700 		ld	a5,0(a5)
  91:src/Riscv.cpp ****                 {
 771              		.loc 1 91 17
 772 03b8 6392070C 		bnez	a5,.L65
 773              	.LVL47:
 774              	.L45:
 775              	.LBE57:
 776              	.LBE56:
  99:src/Riscv.cpp **** 
 777              		.loc 1 99 13 is_stmt 1
  99:src/Riscv.cpp **** 
 778              		.loc 1 99 26 is_stmt 0
 779 03bc 97000000 		call	plic_claim@plt
 779      E7800000 
 780              	.LVL48:
 781 03c4 97000000 		call	plic_complete@plt
 781      E7800000 
 782              	.LVL49:
 101:src/Riscv.cpp ****         }
 783              		.loc 1 101 13 is_stmt 1
 784 03cc 6F00C008 		j	.L35
 785              	.LVL50:
 786              	.L42:
 787              	.LBE55:
  54:src/Riscv.cpp ****         {
 788              		.loc 1 54 9
  55:src/Riscv.cpp ****             uint64 volatile sepc = Riscv::r_sepc();
 789              		.loc 1 55 9
 790              	.LBB60:
  56:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 791              		.loc 1 56 13
 792              	.LBB61:
 793              	.LBB62:
GAS LISTING /tmp/ccCg0dHp.s 			page 25


 122:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 794              		.loc 2 122 5
 123:src/../h/Riscv.hpp ****     return sepc;
 795              		.loc 2 123 5
 123:src/../h/Riscv.hpp ****     return sepc;
 796              		.loc 2 123 51 is_stmt 0
 797              	#APP
 798              	# 123 "src/../h/Riscv.hpp" 1
 799              		csrr a5, sepc
 800              	# 0 "" 2
 801              	.LVL51:
 802              	#NO_APP
 803 03d4 2334F4FC 		sd	a5,-56(s0)
 124:src/../h/Riscv.hpp **** }
 804              		.loc 2 124 5 is_stmt 1
 124:src/../h/Riscv.hpp **** }
 805              		.loc 2 124 12 is_stmt 0
 806 03d8 833784FC 		ld	a5,-56(s0)
 807              	.LBE62:
 808              	.LBE61:
  56:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 809              		.loc 1 56 50
 810 03dc 233CF4F8 		sd	a5,-104(s0)
  57:src/Riscv.cpp ****             mc_sip(Riscv::SIP_SSIP);
 811              		.loc 1 57 13 is_stmt 1
 812              	.LBB63:
 813              	.LBB64:
 193:src/../h/Riscv.hpp **** 
 194:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sstatus() {
 195:src/../h/Riscv.hpp ****     uint64 volatile sstatus;
 814              		.loc 2 195 5
 196:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 815              		.loc 2 196 5
 816              		.loc 2 196 57 is_stmt 0
 817              	#APP
 818              	# 196 "src/../h/Riscv.hpp" 1
 197              	    return sstatus;
 819              		csrr a5, sstatus
 820              	# 0 "" 2
 821              	#NO_APP
 822 03e4 2330F4FC 		sd	a5,-64(s0)
 823              		.loc 2 197 5 is_stmt 1
 824              		.loc 2 197 12 is_stmt 0
 825 03e8 833704FC 		ld	a5,-64(s0)
 826              	.LBE64:
 827              	.LBE63:
  57:src/Riscv.cpp ****             mc_sip(Riscv::SIP_SSIP);
 828              		.loc 1 57 56
 829 03ec 2330F4FA 		sd	a5,-96(s0)
  58:src/Riscv.cpp ****             //trapPrintString("timerInterrupt\n");
 830              		.loc 1 58 13 is_stmt 1
 831              	.LVL52:
 832              	.LBB65:
 833              	.LBB66:
 161:src/../h/Riscv.hpp **** }
 834              		.loc 2 161 5
 161:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/ccCg0dHp.s 			page 26


 835              		.loc 2 161 50 is_stmt 0
 836 03f0 93072000 		li	a5,2
 837              	#APP
 838              	# 161 "src/../h/Riscv.hpp" 1
 839              		csrc sip, a5
 840              	# 0 "" 2
 841              	.LVL53:
 842              	#NO_APP
 843              	.LBE66:
 844              	.LBE65:
  61:src/Riscv.cpp ****             //trapPrintInt(totalTime);
 845              		.loc 1 61 13 is_stmt 1
  61:src/Riscv.cpp ****             //trapPrintInt(totalTime);
 846              		.loc 1 61 22 is_stmt 0
 847 03f8 17070000 		lla	a4,.LANCHOR0
 847      13070700 
 848 0400 83378700 		ld	a5,8(a4)
 849 0404 93871700 		addi	a5,a5,1
 850 0408 2334F700 		sd	a5,8(a4)
  64:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
 851              		.loc 1 64 13 is_stmt 1
  64:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
 852              		.loc 1 64 34 is_stmt 0
 853 040c 97040000 		la	s1,_ZN3PCB16timeSliceCounterE
 853      83B40400 
 854 0414 83B70400 		ld	a5,0(s1)
 855 0418 93871700 		addi	a5,a5,1
 856 041c 23B0F400 		sd	a5,0(s1)
  65:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
 857              		.loc 1 65 13 is_stmt 1
  65:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
 858              		.loc 1 65 40 is_stmt 0
 859 0420 97000000 		call	_ZN12SleepPCBList13tryToWakePCBsEv@plt
 859      E7800000 
 860              	.LVL54:
  66:src/Riscv.cpp ****             {
 861              		.loc 1 66 13 is_stmt 1
  66:src/Riscv.cpp ****             {
 862              		.loc 1 66 68 is_stmt 0
 863 0428 97070000 		la	a5,_ZN3PCB7runningE
 863      83B70700 
 864 0430 83B70700 		ld	a5,0(a5)
 865              	.LVL55:
 866              	.LBB67:
 867              	.LBB68:
 868              		.file 3 "src/../h/PCB.hpp"
   1:src/../h/PCB.hpp **** //
   2:src/../h/PCB.hpp **** // Created by os on 4/27/22.
   3:src/../h/PCB.hpp **** //
   4:src/../h/PCB.hpp **** 
   5:src/../h/PCB.hpp **** #ifndef PROJECT_BASE_V1_0_PCB_HPP
   6:src/../h/PCB.hpp **** #define PROJECT_BASE_V1_0_PCB_HPP
   7:src/../h/PCB.hpp **** 
   8:src/../h/PCB.hpp **** #include "../lib/hw.h"
   9:src/../h/PCB.hpp **** #include "Scheduler.hpp"
  10:src/../h/PCB.hpp **** #include "Riscv.hpp"
  11:src/../h/PCB.hpp **** 
GAS LISTING /tmp/ccCg0dHp.s 			page 27


  12:src/../h/PCB.hpp **** class PCB
  13:src/../h/PCB.hpp **** {
  14:src/../h/PCB.hpp **** public:
  15:src/../h/PCB.hpp ****     static uint64 savedRegA4;
  16:src/../h/PCB.hpp **** 
  17:src/../h/PCB.hpp ****     using Body = void (*)(void*);
  18:src/../h/PCB.hpp **** 
  19:src/../h/PCB.hpp ****     PCB(Body body,  void* args, void* stack_space, uint64 timeSlice);
  20:src/../h/PCB.hpp ****     ~PCB();
  21:src/../h/PCB.hpp **** 
  22:src/../h/PCB.hpp ****     void start();
  23:src/../h/PCB.hpp ****     static void dispatch();
  24:src/../h/PCB.hpp ****     static void sleep(time_t);
  25:src/../h/PCB.hpp **** 
  26:src/../h/PCB.hpp ****     static PCB* running;
  27:src/../h/PCB.hpp **** 
  28:src/../h/PCB.hpp ****     static uint64 timeSliceCounter;
  29:src/../h/PCB.hpp ****     uint64 getTimeSlice() { return timeSlice;}
 869              		.loc 3 29 29 is_stmt 1
 870              		.loc 3 29 36 is_stmt 0
 871 0434 83B78701 		ld	a5,24(a5)
 872              	.LVL56:
 873              	.LBE68:
 874              	.LBE67:
  66:src/Riscv.cpp ****             {
 875              		.loc 1 66 39
 876 0438 03B70400 		ld	a4,0(s1)
  66:src/Riscv.cpp ****             {
 877              		.loc 1 66 13
 878 043c 6378F702 		bgeu	a4,a5,.L66
 879              	.L44:
  72:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 880              		.loc 1 72 13 is_stmt 1
  72:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 881              		.loc 1 72 29 is_stmt 0
 882 0440 833704FA 		ld	a5,-96(s0)
 883              	.LVL57:
 884              	.LBB69:
 885              	.LBB70:
 198:src/../h/Riscv.hpp **** }
 199:src/../h/Riscv.hpp **** 
 200:src/../h/Riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus) {
 201:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sstatus, %0" : :"r"(sstatus));
 886              		.loc 2 201 5 is_stmt 1
 887              		.loc 2 201 57 is_stmt 0
 888              	#APP
 889              	# 201 "src/../h/Riscv.hpp" 1
 202              	}
 890              		csrw sstatus, a5
 891              	# 0 "" 2
 892              	.LVL58:
 893              	#NO_APP
 894              	.LBE70:
 895              	.LBE69:
  73:src/Riscv.cpp ****             changePrivMode();
 896              		.loc 1 73 13 is_stmt 1
  73:src/Riscv.cpp ****             changePrivMode();
GAS LISTING /tmp/ccCg0dHp.s 			page 28


 897              		.loc 1 73 26 is_stmt 0
 898 0448 833784F9 		ld	a5,-104(s0)
 899              	.LVL59:
 900              	.LBB71:
 901              	.LBB72:
 128:src/../h/Riscv.hpp **** }
 902              		.loc 2 128 5 is_stmt 1
 128:src/../h/Riscv.hpp **** }
 903              		.loc 2 128 51 is_stmt 0
 904              	#APP
 905              	# 128 "src/../h/Riscv.hpp" 1
 906              		csrw sepc, a5
 907              	# 0 "" 2
 908              	.LVL60:
 909              	#NO_APP
 910              	.LBE72:
 911              	.LBE71:
  74:src/Riscv.cpp ****             break;
 912              		.loc 1 74 13 is_stmt 1
  74:src/Riscv.cpp ****             break;
 913              		.loc 1 74 27 is_stmt 0
 914 0450 97000000 		call	_ZN5Riscv14changePrivModeEv
 914      E7800000 
 915              	.LVL61:
  75:src/Riscv.cpp ****         }
 916              		.loc 1 75 13 is_stmt 1
 917              	.L35:
 918              	.LBE60:
 919              	.LBE86:
 920              	.LBE53:
 185:src/Riscv.cpp **** 
 921              		.loc 1 185 1 is_stmt 0
 922 0458 83308106 		ld	ra,104(sp)
 923              		.cfi_remember_state
 924              		.cfi_restore 1
 925 045c 03340106 		ld	s0,96(sp)
 926              		.cfi_restore 8
 927              		.cfi_def_cfa 2, 112
 928 0460 83348105 		ld	s1,88(sp)
 929              		.cfi_restore 9
 930 0464 13010107 		addi	sp,sp,112
 931              		.cfi_def_cfa_offset 0
 932 0468 67800000 		jr	ra
 933              	.L66:
 934              		.cfi_restore_state
 935              	.LBB89:
 936              	.LBB87:
 937              	.LBB73:
  68:src/Riscv.cpp ****                 PCB::dispatch();
 938              		.loc 1 68 17 is_stmt 1
  68:src/Riscv.cpp ****                 PCB::dispatch();
 939              		.loc 1 68 39 is_stmt 0
 940 046c 23B00400 		sd	zero,0(s1)
  69:src/Riscv.cpp ****             }
 941              		.loc 1 69 17 is_stmt 1
  69:src/Riscv.cpp ****             }
 942              		.loc 1 69 30 is_stmt 0
GAS LISTING /tmp/ccCg0dHp.s 			page 29


 943 0470 97000000 		call	_ZN3PCB8dispatchEv@plt
 943      E7800000 
 944              	.LVL62:
 945 0478 6FF09FFC 		j	.L44
 946              	.LVL63:
 947              	.L65:
 948              	.LBE73:
 949              	.LBB74:
 950              	.LBB59:
 951              	.LBB58:
  93:src/Riscv.cpp ****                     KConsole::putCharacterInput(c);
 952              		.loc 1 93 21 is_stmt 1
  93:src/Riscv.cpp ****                     KConsole::putCharacterInput(c);
 953              		.loc 1 93 42 is_stmt 0
 954 047c 9387F7FF 		addi	a5,a5,-1
 955 0480 17070000 		la	a4,_ZN8KConsole11pendingGetcE
 955      03370700 
 956 0488 2330F700 		sd	a5,0(a4)
  94:src/Riscv.cpp ****                     //KConsole::putCharacterOutput(c);
 957              		.loc 1 94 21 is_stmt 1
  94:src/Riscv.cpp ****                     //KConsole::putCharacterOutput(c);
 958              		.loc 1 94 48 is_stmt 0
 959 048c 97000000 		call	_ZN8KConsole17putCharacterInputEc@plt
 959      E7800000 
 960              	.LVL64:
 961 0494 6FF09FF2 		j	.L45
 962              	.LVL65:
 963              	.L38:
 964              	.LBE58:
 965              	.LBE59:
 966              	.LBE74:
 109:src/Riscv.cpp ****         {
 967              		.loc 1 109 9 is_stmt 1
 110:src/Riscv.cpp ****             //trapPrintString("read interrupt\n");
 968              		.loc 1 110 9
 112:src/Riscv.cpp ****             break;
 969              		.loc 1 112 13
 112:src/Riscv.cpp ****             break;
 970              		.loc 1 112 35 is_stmt 0
 971 0498 97000000 		call	_ZN3PCB17threadExitHandlerEv@plt
 971      E7800000 
 972              	.LVL66:
 113:src/Riscv.cpp ****         }
 973              		.loc 1 113 13 is_stmt 1
 974 04a0 6FF09FFB 		j	.L35
 975              	.LVL67:
 976              	.L37:
 121:src/Riscv.cpp ****         case ecallUserInterrupt:
 977              		.loc 1 121 9
 122:src/Riscv.cpp ****         {
 978              		.loc 1 122 9
 123:src/Riscv.cpp ****             uint64 operation;
 979              		.loc 1 123 9
 980              	.LBB75:
 124:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
 981              		.loc 1 124 13
 125:src/Riscv.cpp **** 
GAS LISTING /tmp/ccCg0dHp.s 			page 30


 982              		.loc 1 125 13
 125:src/Riscv.cpp **** 
 983              		.loc 1 125 61 is_stmt 0
 984              	#APP
 985              	# 125 "src/Riscv.cpp" 1
 986              		mv a5, a0
 987              	# 0 "" 2
 988              	.LVL68:
 127:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 989              		.loc 1 127 13 is_stmt 1
 990              	#NO_APP
 991              	.LBB76:
 992              	.LBB77:
 122:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 993              		.loc 2 122 5
 123:src/../h/Riscv.hpp ****     return sepc;
 994              		.loc 2 123 5
 123:src/../h/Riscv.hpp ****     return sepc;
 995              		.loc 2 123 51 is_stmt 0
 996              	#APP
 997              	# 123 "src/../h/Riscv.hpp" 1
 998              		csrr a4, sepc
 999              	# 0 "" 2
 1000              	#NO_APP
 1001 04ac 233CE4FC 		sd	a4,-40(s0)
 124:src/../h/Riscv.hpp **** }
 1002              		.loc 2 124 5 is_stmt 1
 124:src/../h/Riscv.hpp **** }
 1003              		.loc 2 124 12 is_stmt 0
 1004 04b0 033784FD 		ld	a4,-40(s0)
 1005              	.LBE77:
 1006              	.LBE76:
 127:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 1007              		.loc 1 127 52
 1008 04b4 13074700 		addi	a4,a4,4
 127:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 1009              		.loc 1 127 54
 1010 04b8 2334E4FA 		sd	a4,-88(s0)
 128:src/Riscv.cpp **** 
 1011              		.loc 1 128 13 is_stmt 1
 1012              	.LBB78:
 1013              	.LBB79:
 195:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 1014              		.loc 2 195 5
 196:src/../h/Riscv.hpp ****     return sstatus;
 1015              		.loc 2 196 5
 196:src/../h/Riscv.hpp ****     return sstatus;
 1016              		.loc 2 196 57 is_stmt 0
 1017              	#APP
 1018              	# 196 "src/../h/Riscv.hpp" 1
 1019              		csrr a4, sstatus
 1020              	# 0 "" 2
 1021              	#NO_APP
 1022 04c0 2338E4FC 		sd	a4,-48(s0)
 197:src/../h/Riscv.hpp **** }
 1023              		.loc 2 197 5 is_stmt 1
 197:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/ccCg0dHp.s 			page 31


 1024              		.loc 2 197 12 is_stmt 0
 1025 04c4 033704FD 		ld	a4,-48(s0)
 1026              	.LBE79:
 1027              	.LBE78:
 128:src/Riscv.cpp **** 
 1028              		.loc 1 128 56
 1029 04c8 2338E4FA 		sd	a4,-80(s0)
 130:src/Riscv.cpp ****             {
 1030              		.loc 1 130 13 is_stmt 1
 1031 04cc 13073004 		li	a4,67
 1032 04d0 6364F702 		bgtu	a5,a4,.L46
 1033 04d4 93972700 		slli	a5,a5,2
 1034              	.LVL69:
 1035 04d8 17070000 		lla	a4,.L48
 1035      13070700 
 1036 04e0 B387E700 		add	a5,a5,a4
 1037 04e4 83A70700 		lw	a5,0(a5)
 1038 04e8 B387E700 		add	a5,a5,a4
 1039 04ec 67800700 		jr	a5
 1040              		.section	.rodata
 1041              		.align	2
 1042              		.align	2
 1043              	.L48:
 1044 0000 00000000 		.word	.L46-.L48
 1045 0004 00000000 		.word	.L62-.L48
 1046 0008 00000000 		.word	.L61-.L48
 1047 000c 00000000 		.word	.L46-.L48
 1048 0010 00000000 		.word	.L46-.L48
 1049 0014 00000000 		.word	.L46-.L48
 1050 0018 00000000 		.word	.L46-.L48
 1051 001c 00000000 		.word	.L46-.L48
 1052 0020 00000000 		.word	.L46-.L48
 1053 0024 00000000 		.word	.L46-.L48
 1054 0028 00000000 		.word	.L46-.L48
 1055 002c 00000000 		.word	.L46-.L48
 1056 0030 00000000 		.word	.L46-.L48
 1057 0034 00000000 		.word	.L46-.L48
 1058 0038 00000000 		.word	.L46-.L48
 1059 003c 00000000 		.word	.L46-.L48
 1060 0040 00000000 		.word	.L46-.L48
 1061 0044 00000000 		.word	.L60-.L48
 1062 0048 00000000 		.word	.L59-.L48
 1063 004c 00000000 		.word	.L58-.L48
 1064 0050 00000000 		.word	.L57-.L48
 1065 0054 00000000 		.word	.L56-.L48
 1066 0058 00000000 		.word	.L46-.L48
 1067 005c 00000000 		.word	.L46-.L48
 1068 0060 00000000 		.word	.L46-.L48
 1069 0064 00000000 		.word	.L46-.L48
 1070 0068 00000000 		.word	.L46-.L48
 1071 006c 00000000 		.word	.L46-.L48
 1072 0070 00000000 		.word	.L46-.L48
 1073 0074 00000000 		.word	.L46-.L48
 1074 0078 00000000 		.word	.L46-.L48
 1075 007c 00000000 		.word	.L46-.L48
 1076 0080 00000000 		.word	.L46-.L48
 1077 0084 00000000 		.word	.L55-.L48
GAS LISTING /tmp/ccCg0dHp.s 			page 32


 1078 0088 00000000 		.word	.L54-.L48
 1079 008c 00000000 		.word	.L53-.L48
 1080 0090 00000000 		.word	.L52-.L48
 1081 0094 00000000 		.word	.L46-.L48
 1082 0098 00000000 		.word	.L46-.L48
 1083 009c 00000000 		.word	.L46-.L48
 1084 00a0 00000000 		.word	.L46-.L48
 1085 00a4 00000000 		.word	.L46-.L48
 1086 00a8 00000000 		.word	.L46-.L48
 1087 00ac 00000000 		.word	.L46-.L48
 1088 00b0 00000000 		.word	.L46-.L48
 1089 00b4 00000000 		.word	.L46-.L48
 1090 00b8 00000000 		.word	.L46-.L48
 1091 00bc 00000000 		.word	.L46-.L48
 1092 00c0 00000000 		.word	.L46-.L48
 1093 00c4 00000000 		.word	.L51-.L48
 1094 00c8 00000000 		.word	.L46-.L48
 1095 00cc 00000000 		.word	.L46-.L48
 1096 00d0 00000000 		.word	.L46-.L48
 1097 00d4 00000000 		.word	.L46-.L48
 1098 00d8 00000000 		.word	.L46-.L48
 1099 00dc 00000000 		.word	.L46-.L48
 1100 00e0 00000000 		.word	.L46-.L48
 1101 00e4 00000000 		.word	.L46-.L48
 1102 00e8 00000000 		.word	.L46-.L48
 1103 00ec 00000000 		.word	.L46-.L48
 1104 00f0 00000000 		.word	.L46-.L48
 1105 00f4 00000000 		.word	.L46-.L48
 1106 00f8 00000000 		.word	.L46-.L48
 1107 00fc 00000000 		.word	.L46-.L48
 1108 0100 00000000 		.word	.L46-.L48
 1109 0104 00000000 		.word	.L50-.L48
 1110 0108 00000000 		.word	.L49-.L48
 1111 010c 00000000 		.word	.L47-.L48
 1112              		.text
 1113              	.L62:
 132:src/Riscv.cpp ****                     MemoryAllocator::memAllocHandler();
 1114              		.loc 1 132 17
 133:src/Riscv.cpp ****                     break;
 1115              		.loc 1 133 21
 133:src/Riscv.cpp ****                     break;
 1116              		.loc 1 133 53 is_stmt 0
 1117 04f0 97000000 		call	_ZN15MemoryAllocator15memAllocHandlerEv@plt
 1117      E7800000 
 1118              	.LVL70:
 134:src/Riscv.cpp ****                 case MemoryAllocator::MEM_FREE:
 1119              		.loc 1 134 21 is_stmt 1
 1120              	.L46:
 179:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 1121              		.loc 1 179 13
 179:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 1122              		.loc 1 179 29 is_stmt 0
 1123 04f8 833704FB 		ld	a5,-80(s0)
 1124              	.LVL71:
 1125              	.LBB80:
 1126              	.LBB81:
 201:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/ccCg0dHp.s 			page 33


 1127              		.loc 2 201 5 is_stmt 1
 201:src/../h/Riscv.hpp **** }
 1128              		.loc 2 201 57 is_stmt 0
 1129              	#APP
 1130              	# 201 "src/../h/Riscv.hpp" 1
 1131              		csrw sstatus, a5
 1132              	# 0 "" 2
 1133              	.LVL72:
 1134              	#NO_APP
 1135              	.LBE81:
 1136              	.LBE80:
 180:src/Riscv.cpp ****             changePrivMode();
 1137              		.loc 1 180 13 is_stmt 1
 180:src/Riscv.cpp ****             changePrivMode();
 1138              		.loc 1 180 26 is_stmt 0
 1139 0500 833784FA 		ld	a5,-88(s0)
 1140              	.LVL73:
 1141              	.LBB82:
 1142              	.LBB83:
 128:src/../h/Riscv.hpp **** }
 1143              		.loc 2 128 5 is_stmt 1
 128:src/../h/Riscv.hpp **** }
 1144              		.loc 2 128 51 is_stmt 0
 1145              	#APP
 1146              	# 128 "src/../h/Riscv.hpp" 1
 1147              		csrw sepc, a5
 1148              	# 0 "" 2
 1149              	.LVL74:
 1150              	#NO_APP
 1151              	.LBE83:
 1152              	.LBE82:
 181:src/Riscv.cpp ****             break;
 1153              		.loc 1 181 13 is_stmt 1
 181:src/Riscv.cpp ****             break;
 1154              		.loc 1 181 27 is_stmt 0
 1155 0508 97000000 		call	_ZN5Riscv14changePrivModeEv
 1155      E7800000 
 1156              	.LVL75:
 182:src/Riscv.cpp ****         }
 1157              		.loc 1 182 13 is_stmt 1
 1158              	.LBE75:
 1159              	.LBE87:
 1160              	.LBE89:
 185:src/Riscv.cpp **** 
 1161              		.loc 1 185 1 is_stmt 0
 1162 0510 6FF09FF4 		j	.L35
 1163              	.L61:
 1164              	.LBB90:
 1165              	.LBB88:
 1166              	.LBB84:
 135:src/Riscv.cpp ****                     MemoryAllocator::memFreeHandler();
 1167              		.loc 1 135 17 is_stmt 1
 136:src/Riscv.cpp ****                     break;
 1168              		.loc 1 136 21
 136:src/Riscv.cpp ****                     break;
 1169              		.loc 1 136 52 is_stmt 0
 1170 0514 97000000 		call	_ZN15MemoryAllocator14memFreeHandlerEv@plt
GAS LISTING /tmp/ccCg0dHp.s 			page 34


 1170      E7800000 
 1171              	.LVL76:
 137:src/Riscv.cpp ****                 case PCB::THREAD_MAKE_PCB:
 1172              		.loc 1 137 21 is_stmt 1
 1173 051c 6FF0DFFD 		j	.L46
 1174              	.L57:
 138:src/Riscv.cpp ****                     PCB::threadMakePCBHandler();
 1175              		.loc 1 138 17
 139:src/Riscv.cpp ****                     break;
 1176              		.loc 1 139 21
 139:src/Riscv.cpp ****                     break;
 1177              		.loc 1 139 46 is_stmt 0
 1178 0520 97000000 		call	_ZN3PCB20threadMakePCBHandlerEv@plt
 1178      E7800000 
 1179              	.LVL77:
 140:src/Riscv.cpp ****                 case PCB::THREAD_CREATE:
 1180              		.loc 1 140 21 is_stmt 1
 1181 0528 6FF01FFD 		j	.L46
 1182              	.L60:
 141:src/Riscv.cpp ****                     PCB::threadCreateHandler();
 1183              		.loc 1 141 17
 142:src/Riscv.cpp ****                     break;
 1184              		.loc 1 142 21
 142:src/Riscv.cpp ****                     break;
 1185              		.loc 1 142 45 is_stmt 0
 1186 052c 97000000 		call	_ZN3PCB19threadCreateHandlerEv@plt
 1186      E7800000 
 1187              	.LVL78:
 143:src/Riscv.cpp ****                 case PCB::THREAD_START:
 1188              		.loc 1 143 21 is_stmt 1
 1189 0534 6FF05FFC 		j	.L46
 1190              	.L56:
 144:src/Riscv.cpp ****                     PCB::threadStartHandler();
 1191              		.loc 1 144 17
 145:src/Riscv.cpp ****                     break;
 1192              		.loc 1 145 21
 145:src/Riscv.cpp ****                     break;
 1193              		.loc 1 145 44 is_stmt 0
 1194 0538 97000000 		call	_ZN3PCB18threadStartHandlerEv@plt
 1194      E7800000 
 1195              	.LVL79:
 146:src/Riscv.cpp ****                 case PCB::THREAD_DISPATCH:
 1196              		.loc 1 146 21 is_stmt 1
 1197 0540 6FF09FFB 		j	.L46
 1198              	.L58:
 147:src/Riscv.cpp ****                     PCB::threadDispatchHandler();
 1199              		.loc 1 147 17
 148:src/Riscv.cpp ****                     break;
 1200              		.loc 1 148 21
 148:src/Riscv.cpp ****                     break;
 1201              		.loc 1 148 47 is_stmt 0
 1202 0544 97000000 		call	_ZN3PCB21threadDispatchHandlerEv@plt
 1202      E7800000 
 1203              	.LVL80:
 149:src/Riscv.cpp ****                 case PCB::THREAD_EXIT:
 1204              		.loc 1 149 21 is_stmt 1
 1205 054c 6FF0DFFA 		j	.L46
GAS LISTING /tmp/ccCg0dHp.s 			page 35


 1206              	.L59:
 150:src/Riscv.cpp ****                     PCB::threadExitHandler();
 1207              		.loc 1 150 17
 151:src/Riscv.cpp ****                     break;
 1208              		.loc 1 151 21
 151:src/Riscv.cpp ****                     break;
 1209              		.loc 1 151 43 is_stmt 0
 1210 0550 97000000 		call	_ZN3PCB17threadExitHandlerEv@plt
 1210      E7800000 
 1211              	.LVL81:
 152:src/Riscv.cpp ****                 case PCB::TIME_SLEEP:
 1212              		.loc 1 152 21 is_stmt 1
 1213 0558 6FF01FFA 		j	.L46
 1214              	.L51:
 153:src/Riscv.cpp ****                     PCB::threadSleepHandler();
 1215              		.loc 1 153 17
 154:src/Riscv.cpp ****                     break;
 1216              		.loc 1 154 21
 154:src/Riscv.cpp ****                     break;
 1217              		.loc 1 154 44 is_stmt 0
 1218 055c 97000000 		call	_ZN3PCB18threadSleepHandlerEv@plt
 1218      E7800000 
 1219              	.LVL82:
 155:src/Riscv.cpp ****                 case KSemaphore::SEM_OPEN:
 1220              		.loc 1 155 21 is_stmt 1
 1221 0564 6FF05FF9 		j	.L46
 1222              	.L55:
 156:src/Riscv.cpp ****                     KSemaphore::semOpenHandler();
 1223              		.loc 1 156 17
 157:src/Riscv.cpp ****                     break;
 1224              		.loc 1 157 21
 157:src/Riscv.cpp ****                     break;
 1225              		.loc 1 157 47 is_stmt 0
 1226 0568 97000000 		call	_ZN10KSemaphore14semOpenHandlerEv@plt
 1226      E7800000 
 1227              	.LVL83:
 158:src/Riscv.cpp ****                 case KSemaphore::SEM_WAIT:
 1228              		.loc 1 158 21 is_stmt 1
 1229 0570 6FF09FF8 		j	.L46
 1230              	.L53:
 159:src/Riscv.cpp ****                     KSemaphore::semWaitHandler();
 1231              		.loc 1 159 17
 160:src/Riscv.cpp ****                     break;
 1232              		.loc 1 160 21
 160:src/Riscv.cpp ****                     break;
 1233              		.loc 1 160 47 is_stmt 0
 1234 0574 97000000 		call	_ZN10KSemaphore14semWaitHandlerEv@plt
 1234      E7800000 
 1235              	.LVL84:
 161:src/Riscv.cpp ****                 case KSemaphore::SEM_SIGNAL:
 1236              		.loc 1 161 21 is_stmt 1
 1237 057c 6FF0DFF7 		j	.L46
 1238              	.L52:
 162:src/Riscv.cpp ****                     KSemaphore::semSignalHandler();
 1239              		.loc 1 162 17
 163:src/Riscv.cpp ****                     break;
 1240              		.loc 1 163 21
GAS LISTING /tmp/ccCg0dHp.s 			page 36


 163:src/Riscv.cpp ****                     break;
 1241              		.loc 1 163 49 is_stmt 0
 1242 0580 97000000 		call	_ZN10KSemaphore16semSignalHandlerEv@plt
 1242      E7800000 
 1243              	.LVL85:
 164:src/Riscv.cpp ****                 case KSemaphore::SEM_CLOSE:
 1244              		.loc 1 164 21 is_stmt 1
 1245 0588 6FF01FF7 		j	.L46
 1246              	.L54:
 165:src/Riscv.cpp ****                     KSemaphore::semCloseHandler();
 1247              		.loc 1 165 17
 166:src/Riscv.cpp ****                     break;
 1248              		.loc 1 166 21
 166:src/Riscv.cpp ****                     break;
 1249              		.loc 1 166 48 is_stmt 0
 1250 058c 97000000 		call	_ZN10KSemaphore15semCloseHandlerEv@plt
 1250      E7800000 
 1251              	.LVL86:
 167:src/Riscv.cpp ****                 case KConsole::CONSOLE_GETC:
 1252              		.loc 1 167 21 is_stmt 1
 1253 0594 6FF05FF6 		j	.L46
 1254              	.L50:
 168:src/Riscv.cpp ****                     KConsole::getcHandler();
 1255              		.loc 1 168 17
 169:src/Riscv.cpp ****                     break;
 1256              		.loc 1 169 21
 169:src/Riscv.cpp ****                     break;
 1257              		.loc 1 169 42 is_stmt 0
 1258 0598 97000000 		call	_ZN8KConsole11getcHandlerEv@plt
 1258      E7800000 
 1259              	.LVL87:
 170:src/Riscv.cpp ****                 case KConsole::CONSOLE_PUTC:
 1260              		.loc 1 170 21 is_stmt 1
 1261 05a0 6FF09FF5 		j	.L46
 1262              	.L49:
 171:src/Riscv.cpp ****                     KConsole::putcHandler();
 1263              		.loc 1 171 17
 172:src/Riscv.cpp ****                     break;
 1264              		.loc 1 172 21
 172:src/Riscv.cpp ****                     break;
 1265              		.loc 1 172 42 is_stmt 0
 1266 05a4 97000000 		call	_ZN8KConsole11putcHandlerEv@plt
 1266      E7800000 
 1267              	.LVL88:
 173:src/Riscv.cpp ****                 case KConsole::CONSOLE_GET_CHAR:
 1268              		.loc 1 173 21 is_stmt 1
 1269 05ac 6FF0DFF4 		j	.L46
 1270              	.L47:
 174:src/Riscv.cpp ****                     KConsole::getCharHandler();
 1271              		.loc 1 174 17
 175:src/Riscv.cpp ****                     break;
 1272              		.loc 1 175 21
 175:src/Riscv.cpp ****                     break;
 1273              		.loc 1 175 45 is_stmt 0
 1274 05b0 97000000 		call	_ZN8KConsole14getCharHandlerEv@plt
 1274      E7800000 
 1275              	.LVL89:
GAS LISTING /tmp/ccCg0dHp.s 			page 37


 176:src/Riscv.cpp ****             }
 1276              		.loc 1 176 21 is_stmt 1
 1277 05b8 6FF01FF4 		j	.L46
 1278              	.LBE84:
 1279              	.LBE88:
 1280              	.LBE90:
 1281              		.cfi_endproc
 1282              	.LFE32:
 1284              		.globl	_ZN5Riscv12finishSystemE
 1285              		.globl	_ZN5Riscv9totalTimeE
 1286              		.bss
 1287              		.align	3
 1288              		.set	.LANCHOR0,. + 0
 1291              	_ZN5Riscv12finishSystemE:
 1292 0000 00       		.zero	1
 1293 0001 00000000 		.zero	7
 1293      000000
 1296              	_ZN5Riscv9totalTimeE:
 1297 0008 00000000 		.zero	8
 1297      00000000 
 1298              		.text
 1299              	.Letext0:
 1300              		.file 4 "src/../h/../lib/hw.h"
 1301              		.file 5 "src/../h/MemoryAllocator.hpp"
 1302              		.file 6 "src/../h/KSemaphore.hpp"
 1303              		.file 7 "src/../h/SleepPCBList.hpp"
 1304              		.file 8 "src/../h/KConsole.hpp"
 1305              		.file 9 "src/../h/Tests.hpp"
 1306              		.file 10 "src/../test/userMain.hpp"
 1307              		.file 11 "src/../h/../test/../h/syscall_c.h"
 1308              		.file 12 "src/../h/../test/printing.hpp"
 5916              		.align	3
 5919              	DW.ref.__gxx_personality_v0:
 5920 0000 00000000 		.dword	__gxx_personality_v0
 5920      00000000 
 5921              		.ident	"GCC: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0"
 5922              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/ccCg0dHp.s 			page 38


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Riscv.cpp
     /tmp/ccCg0dHp.s:9      .text:0000000000000000 _ZN5Riscv15userMainWrapperEPv
     /tmp/ccCg0dHp.s:13     .text:0000000000000000 .L0 
     /tmp/ccCg0dHp.s:14     .text:0000000000000000 .L0 
     /tmp/ccCg0dHp.s:15     .text:0000000000000004 .L0 
     /tmp/ccCg0dHp.s:18     .text:000000000000000c .L0 
     /tmp/ccCg0dHp.s:19     .text:000000000000000c .L0 
     /tmp/ccCg0dHp.s:21     .text:0000000000000010 .L0 
     /tmp/ccCg0dHp.s:23     .text:0000000000000010 .L0 
     /tmp/ccCg0dHp.s:24     .text:0000000000000010 .L0 
     /tmp/ccCg0dHp.s:27     .text:0000000000000018 .L0 
     /tmp/ccCg0dHp.s:28     .text:000000000000001c .L0 
     /tmp/ccCg0dHp.s:30     .text:0000000000000020 .L0 
     /tmp/ccCg0dHp.s:31     .text:0000000000000020 .L0 
     /tmp/ccCg0dHp.s:33     .text:0000000000000024 .L0 
     /tmp/ccCg0dHp.s:35     .text:0000000000000028 .L0 
     /tmp/ccCg0dHp.s:41     .text:0000000000000028 _ZN5Riscv10initSystemEv
     /tmp/ccCg0dHp.s:44     .text:0000000000000028 .L0 
     /tmp/ccCg0dHp.s:45     .text:0000000000000028 .L0 
     /tmp/ccCg0dHp.s:46     .text:000000000000002c .L0 
     /tmp/ccCg0dHp.s:49     .text:0000000000000034 .L0 
     /tmp/ccCg0dHp.s:50     .text:0000000000000034 .L0 
     /tmp/ccCg0dHp.s:52     .text:0000000000000038 .L0 
     /tmp/ccCg0dHp.s:54     .text:0000000000000038 .L0 
     /tmp/ccCg0dHp.s:55     .text:0000000000000038 .L0 
     /tmp/ccCg0dHp.s:61     .text:0000000000000040 .L0 
  src/../h/Riscv.hpp:138    .text:0000000000000040 .L0 
     /tmp/ccCg0dHp.s:71     .text:0000000000000044 .L0 
     /tmp/ccCg0dHp.s:72     .text:0000000000000044 .L0 
     /tmp/ccCg0dHp.s:75     .text:000000000000004c .L0 
     /tmp/ccCg0dHp.s:76     .text:000000000000004c .L0 
     /tmp/ccCg0dHp.s:79     .text:0000000000000054 .L0 
     /tmp/ccCg0dHp.s:80     .text:0000000000000058 .L0 
     /tmp/ccCg0dHp.s:82     .text:000000000000005c .L0 
     /tmp/ccCg0dHp.s:83     .text:000000000000005c .L0 
     /tmp/ccCg0dHp.s:85     .text:0000000000000060 .L0 
     /tmp/ccCg0dHp.s:87     .text:0000000000000064 .L0 
     /tmp/ccCg0dHp.s:93     .text:0000000000000064 _ZN5Riscv16enableInterruptsEv
     /tmp/ccCg0dHp.s:96     .text:0000000000000064 .L0 
     /tmp/ccCg0dHp.s:97     .text:0000000000000064 .L0 
     /tmp/ccCg0dHp.s:98     .text:0000000000000068 .L0 
     /tmp/ccCg0dHp.s:100    .text:000000000000006c .L0 
     /tmp/ccCg0dHp.s:102    .text:0000000000000070 .L0 
     /tmp/ccCg0dHp.s:107    .text:0000000000000070 .L0 
     /tmp/ccCg0dHp.s:108    .text:0000000000000070 .L0 
     /tmp/ccCg0dHp.s:109    .text:0000000000000070 .L0 
     /tmp/ccCg0dHp.s:119    .text:0000000000000078 .L0 
     /tmp/ccCg0dHp.s:120    .text:000000000000007c .L0 
     /tmp/ccCg0dHp.s:121    .text:000000000000007c .L0 
     /tmp/ccCg0dHp.s:123    .text:0000000000000080 .L0 
     /tmp/ccCg0dHp.s:125    .text:0000000000000084 .L0 
     /tmp/ccCg0dHp.s:131    .text:0000000000000084 _ZN5Riscv17disableInterruptsEv
     /tmp/ccCg0dHp.s:134    .text:0000000000000084 .L0 
     /tmp/ccCg0dHp.s:135    .text:0000000000000084 .L0 
     /tmp/ccCg0dHp.s:136    .text:0000000000000088 .L0 
     /tmp/ccCg0dHp.s:138    .text:000000000000008c .L0 
GAS LISTING /tmp/ccCg0dHp.s 			page 39


     /tmp/ccCg0dHp.s:140    .text:0000000000000090 .L0 
     /tmp/ccCg0dHp.s:145    .text:0000000000000090 .L0 
     /tmp/ccCg0dHp.s:146    .text:0000000000000090 .L0 
     /tmp/ccCg0dHp.s:147    .text:0000000000000090 .L0 
     /tmp/ccCg0dHp.s:157    .text:0000000000000098 .L0 
     /tmp/ccCg0dHp.s:158    .text:000000000000009c .L0 
     /tmp/ccCg0dHp.s:159    .text:000000000000009c .L0 
     /tmp/ccCg0dHp.s:161    .text:00000000000000a0 .L0 
     /tmp/ccCg0dHp.s:163    .text:00000000000000a4 .L0 
     /tmp/ccCg0dHp.s:169    .text:00000000000000a4 _ZN5Riscv9endSystemEv
     /tmp/ccCg0dHp.s:172    .text:00000000000000a4 .L0 
     /tmp/ccCg0dHp.s:173    .text:00000000000000a4 .L0 
     /tmp/ccCg0dHp.s:174    .text:00000000000000a8 .L0 
     /tmp/ccCg0dHp.s:177    .text:00000000000000b0 .L0 
     /tmp/ccCg0dHp.s:178    .text:00000000000000b0 .L0 
     /tmp/ccCg0dHp.s:180    .text:00000000000000b4 .L0 
     /tmp/ccCg0dHp.s:182    .text:00000000000000b4 .L0 
     /tmp/ccCg0dHp.s:183    .text:00000000000000b4 .L0 
     /tmp/ccCg0dHp.s:186    .text:00000000000000bc .L0 
     /tmp/ccCg0dHp.s:187    .text:00000000000000c0 .L0 
     /tmp/ccCg0dHp.s:189    .text:00000000000000c4 .L0 
     /tmp/ccCg0dHp.s:190    .text:00000000000000c4 .L0 
     /tmp/ccCg0dHp.s:192    .text:00000000000000c8 .L0 
     /tmp/ccCg0dHp.s:194    .text:00000000000000cc .L0 
     /tmp/ccCg0dHp.s:200    .text:00000000000000cc _ZN5Riscv10popSppSpieEv
     /tmp/ccCg0dHp.s:203    .text:00000000000000cc .L0 
     /tmp/ccCg0dHp.s:204    .text:00000000000000cc .L0 
     /tmp/ccCg0dHp.s:205    .text:00000000000000d0 .L0 
     /tmp/ccCg0dHp.s:207    .text:00000000000000d4 .L0 
     /tmp/ccCg0dHp.s:209    .text:00000000000000d8 .L0 
     /tmp/ccCg0dHp.s:211    .text:00000000000000d8 .L0 
       src/Riscv.cpp:41     .text:00000000000000d8 .L0 
     /tmp/ccCg0dHp.s:217    .text:00000000000000dc .L0 
       src/Riscv.cpp:42     .text:00000000000000dc .L0 
     /tmp/ccCg0dHp.s:223    .text:00000000000000e0 .L0 
     /tmp/ccCg0dHp.s:224    .text:00000000000000e4 .L0 
     /tmp/ccCg0dHp.s:225    .text:00000000000000e4 .L0 
     /tmp/ccCg0dHp.s:227    .text:00000000000000e8 .L0 
     /tmp/ccCg0dHp.s:229    .text:00000000000000ec .L0 
     /tmp/ccCg0dHp.s:240    .text:00000000000000ec _ZN5Riscv10kernelMainEv
     /tmp/ccCg0dHp.s:243    .text:00000000000000ec .L0 
     /tmp/ccCg0dHp.s:5919   .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/ccCg0dHp.s:246    .text:00000000000000ec .L0 
     /tmp/ccCg0dHp.s:247    .text:00000000000000f0 .L0 
     /tmp/ccCg0dHp.s:252    .text:0000000000000100 .L0 
     /tmp/ccCg0dHp.s:253    .text:0000000000000100 .L0 
     /tmp/ccCg0dHp.s:254    .text:0000000000000100 .L0 
     /tmp/ccCg0dHp.s:255    .text:0000000000000100 .L0 
     /tmp/ccCg0dHp.s:257    .text:0000000000000104 .L0 
     /tmp/ccCg0dHp.s:260    .text:0000000000000104 .L0 
     /tmp/ccCg0dHp.s:261    .text:0000000000000104 .L0 
     /tmp/ccCg0dHp.s:264    .text:000000000000010c .L0 
     /tmp/ccCg0dHp.s:265    .text:000000000000010c .L0 
     /tmp/ccCg0dHp.s:270    .text:000000000000011c .L0 
     /tmp/ccCg0dHp.s:284    .text:0000000000000148 .L0 
     /tmp/ccCg0dHp.s:285    .text:0000000000000148 .L0 
     /tmp/ccCg0dHp.s:290    .text:0000000000000154 .L0 
GAS LISTING /tmp/ccCg0dHp.s 			page 40


     /tmp/ccCg0dHp.s:291    .text:0000000000000154 .L0 
     /tmp/ccCg0dHp.s:295    .text:000000000000015c .L0 
     /tmp/ccCg0dHp.s:296    .text:000000000000015c .L0 
     /tmp/ccCg0dHp.s:297    .text:000000000000015c .L0 
     /tmp/ccCg0dHp.s:301    .text:0000000000000168 .L0 
     /tmp/ccCg0dHp.s:303    .text:000000000000016c .L0 
     /tmp/ccCg0dHp.s:304    .text:000000000000016c .L0 
     /tmp/ccCg0dHp.s:307    .text:0000000000000174 .L0 
     /tmp/ccCg0dHp.s:310    .text:0000000000000178 .L0 
     /tmp/ccCg0dHp.s:311    .text:0000000000000178 .L0 
     /tmp/ccCg0dHp.s:314    .text:0000000000000184 .L0 
     /tmp/ccCg0dHp.s:315    .text:0000000000000184 .L0 
     /tmp/ccCg0dHp.s:320    .text:0000000000000194 .L0 
     /tmp/ccCg0dHp.s:321    .text:0000000000000194 .L0 
     /tmp/ccCg0dHp.s:322    .text:0000000000000194 .L0 
     /tmp/ccCg0dHp.s:327    .text:00000000000001a8 .L0 
     /tmp/ccCg0dHp.s:329    .text:00000000000001ac .L0 
     /tmp/ccCg0dHp.s:330    .text:00000000000001ac .L0 
     /tmp/ccCg0dHp.s:334    .text:00000000000001b4 .L0 
     /tmp/ccCg0dHp.s:337    .text:00000000000001b8 .L0 
     /tmp/ccCg0dHp.s:338    .text:00000000000001b8 .L0 
     /tmp/ccCg0dHp.s:341    .text:00000000000001c0 .L0 
     /tmp/ccCg0dHp.s:342    .text:00000000000001c0 .L0 
     /tmp/ccCg0dHp.s:345    .text:00000000000001c8 .L0 
     /tmp/ccCg0dHp.s:346    .text:00000000000001cc .L0 
     /tmp/ccCg0dHp.s:347    .text:00000000000001cc .L0 
     /tmp/ccCg0dHp.s:349    .text:00000000000001d0 .L0 
     /tmp/ccCg0dHp.s:350    .text:00000000000001d0 .L0 
     /tmp/ccCg0dHp.s:352    .text:00000000000001d4 .L0 
     /tmp/ccCg0dHp.s:355    .text:00000000000001d8 .L0 
     /tmp/ccCg0dHp.s:357    .text:00000000000001dc .L0 
     /tmp/ccCg0dHp.s:360    .text:00000000000001e0 .L0 
     /tmp/ccCg0dHp.s:363    .text:00000000000001e4 .L0 
     /tmp/ccCg0dHp.s:371    .text:00000000000001fc .L0 
     /tmp/ccCg0dHp.s:401    .text:00000000000001fc _ZN5Riscv14myTestsWrapperEPv
     /tmp/ccCg0dHp.s:404    .text:00000000000001fc .L0 
     /tmp/ccCg0dHp.s:406    .text:00000000000001fc .L0 
     /tmp/ccCg0dHp.s:407    .text:0000000000000200 .L0 
     /tmp/ccCg0dHp.s:410    .text:0000000000000208 .L0 
     /tmp/ccCg0dHp.s:411    .text:0000000000000208 .L0 
     /tmp/ccCg0dHp.s:413    .text:000000000000020c .L0 
     /tmp/ccCg0dHp.s:415    .text:000000000000020c .L0 
     /tmp/ccCg0dHp.s:416    .text:000000000000020c .L0 
     /tmp/ccCg0dHp.s:419    .text:0000000000000214 .L0 
     /tmp/ccCg0dHp.s:420    .text:0000000000000218 .L0 
     /tmp/ccCg0dHp.s:422    .text:000000000000021c .L0 
     /tmp/ccCg0dHp.s:423    .text:000000000000021c .L0 
     /tmp/ccCg0dHp.s:425    .text:0000000000000220 .L0 
     /tmp/ccCg0dHp.s:427    .text:0000000000000224 .L0 
     /tmp/ccCg0dHp.s:433    .text:0000000000000224 _ZN5Riscv22disableTimerInterruptsEv
     /tmp/ccCg0dHp.s:436    .text:0000000000000224 .L0 
     /tmp/ccCg0dHp.s:437    .text:0000000000000224 .L0 
     /tmp/ccCg0dHp.s:438    .text:0000000000000228 .L0 
     /tmp/ccCg0dHp.s:440    .text:000000000000022c .L0 
     /tmp/ccCg0dHp.s:442    .text:0000000000000230 .L0 
     /tmp/ccCg0dHp.s:445    .text:0000000000000230 .L0 
     /tmp/ccCg0dHp.s:446    .text:0000000000000230 .L0 
GAS LISTING /tmp/ccCg0dHp.s 			page 41


     /tmp/ccCg0dHp.s:447    .text:0000000000000230 .L0 
     /tmp/ccCg0dHp.s:454    .text:0000000000000238 .L0 
     /tmp/ccCg0dHp.s:455    .text:000000000000023c .L0 
     /tmp/ccCg0dHp.s:456    .text:000000000000023c .L0 
     /tmp/ccCg0dHp.s:458    .text:0000000000000240 .L0 
     /tmp/ccCg0dHp.s:460    .text:0000000000000244 .L0 
     /tmp/ccCg0dHp.s:466    .text:0000000000000244 _ZN5Riscv9idleRiscvEPv
     /tmp/ccCg0dHp.s:469    .text:0000000000000244 .L0 
     /tmp/ccCg0dHp.s:471    .text:0000000000000244 .L0 
     /tmp/ccCg0dHp.s:472    .text:0000000000000248 .L0 
     /tmp/ccCg0dHp.s:474    .text:000000000000024c .L0 
     /tmp/ccCg0dHp.s:476    .text:0000000000000250 .L0 
     /tmp/ccCg0dHp.s:479    .text:0000000000000250 .L0 
     /tmp/ccCg0dHp.s:480    .text:0000000000000250 .L0 
     /tmp/ccCg0dHp.s:481    .text:0000000000000254 .L0 
     /tmp/ccCg0dHp.s:487    .text:0000000000000254 _ZN5Riscv13w_a0_sscratchEv
     /tmp/ccCg0dHp.s:490    .text:0000000000000254 .L0 
     /tmp/ccCg0dHp.s:491    .text:0000000000000254 .L0 
     /tmp/ccCg0dHp.s:492    .text:0000000000000258 .L0 
     /tmp/ccCg0dHp.s:494    .text:000000000000025c .L0 
     /tmp/ccCg0dHp.s:496    .text:0000000000000260 .L0 
     /tmp/ccCg0dHp.s:498    .text:0000000000000260 .L0 
     /tmp/ccCg0dHp.s:499    .text:0000000000000260 .L0 
       src/Riscv.cpp:239    .text:0000000000000260 .L0 
     /tmp/ccCg0dHp.s:506    .text:0000000000000264 .L0 
     /tmp/ccCg0dHp.s:508    .text:0000000000000264 .L0 
       src/Riscv.cpp:240    .text:0000000000000274 .L0 
     /tmp/ccCg0dHp.s:517    .text:0000000000000278 .L0 
       src/Riscv.cpp:241    .text:0000000000000278 .L0 
     /tmp/ccCg0dHp.s:522    .text:000000000000027c .L0 
       src/Riscv.cpp:242    .text:000000000000027c .L0 
     /tmp/ccCg0dHp.s:528    .text:0000000000000280 .L0 
     /tmp/ccCg0dHp.s:529    .text:0000000000000284 .L0 
     /tmp/ccCg0dHp.s:530    .text:0000000000000284 .L0 
     /tmp/ccCg0dHp.s:532    .text:0000000000000288 .L0 
     /tmp/ccCg0dHp.s:534    .text:000000000000028c .L0 
     /tmp/ccCg0dHp.s:540    .text:000000000000028c _ZN5Riscv14changePrivModeEv
     /tmp/ccCg0dHp.s:543    .text:000000000000028c .L0 
     /tmp/ccCg0dHp.s:544    .text:000000000000028c .L0 
     /tmp/ccCg0dHp.s:545    .text:0000000000000290 .L0 
     /tmp/ccCg0dHp.s:547    .text:0000000000000294 .L0 
     /tmp/ccCg0dHp.s:549    .text:0000000000000298 .L0 
     /tmp/ccCg0dHp.s:551    .text:0000000000000298 .L0 
     /tmp/ccCg0dHp.s:552    .text:0000000000000298 .L0 
     /tmp/ccCg0dHp.s:556    .text:00000000000002a8 .L0 
     /tmp/ccCg0dHp.s:561    .text:00000000000002ac .L0 
     /tmp/ccCg0dHp.s:562    .text:00000000000002ac .L0 
     /tmp/ccCg0dHp.s:563    .text:00000000000002ac .L0 
     /tmp/ccCg0dHp.s:574    .text:00000000000002b4 .L0 
     /tmp/ccCg0dHp.s:575    .text:00000000000002b8 .L0 
     /tmp/ccCg0dHp.s:576    .text:00000000000002b8 .L0 
     /tmp/ccCg0dHp.s:577    .text:00000000000002b8 .L0 
     /tmp/ccCg0dHp.s:579    .text:00000000000002bc .L0 
     /tmp/ccCg0dHp.s:582    .text:00000000000002c0 .L0 
     /tmp/ccCg0dHp.s:587    .text:00000000000002c0 .L0 
     /tmp/ccCg0dHp.s:588    .text:00000000000002c0 .L0 
     /tmp/ccCg0dHp.s:589    .text:00000000000002c0 .L0 
GAS LISTING /tmp/ccCg0dHp.s 			page 42


     /tmp/ccCg0dHp.s:599    .text:00000000000002c8 .L0 
     /tmp/ccCg0dHp.s:600    .text:00000000000002cc .L0 
     /tmp/ccCg0dHp.s:606    .text:00000000000002cc _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccCg0dHp.s:609    .text:00000000000002cc .L0 
     /tmp/ccCg0dHp.s:610    .text:00000000000002cc .L0 
     /tmp/ccCg0dHp.s:611    .text:00000000000002d0 .L0 
     /tmp/ccCg0dHp.s:615    .text:00000000000002dc .L0 
     /tmp/ccCg0dHp.s:616    .text:00000000000002dc .L0 
     /tmp/ccCg0dHp.s:617    .text:00000000000002dc .L0 
     /tmp/ccCg0dHp.s:619    .text:00000000000002e0 .L0 
     /tmp/ccCg0dHp.s:621    .text:00000000000002e0 .L0 
       src/Riscv.cpp:47     .text:00000000000002e0 .L0 
     /tmp/ccCg0dHp.s:630    .text:00000000000002f0 .L0 
     /tmp/ccCg0dHp.s:631    .text:00000000000002f0 .L0 
       src/Riscv.cpp:48     .text:00000000000002fc .L0 
     /tmp/ccCg0dHp.s:643    .text:0000000000000304 .L0 
     /tmp/ccCg0dHp.s:644    .text:0000000000000304 .L0 
     /tmp/ccCg0dHp.s:645    .text:0000000000000304 .L0 
  src/../h/Riscv.hpp:113    .text:0000000000000304 .L0 
     /tmp/ccCg0dHp.s:653    .text:000000000000030c .L0 
     /tmp/ccCg0dHp.s:654    .text:000000000000030c .L0 
     /tmp/ccCg0dHp.s:660    .text:0000000000000310 .L0 
     /tmp/ccCg0dHp.s:670    .text:0000000000000330 .L0 
     /tmp/ccCg0dHp.s:671    .text:0000000000000330 .L0 
     /tmp/ccCg0dHp.s:672    .text:0000000000000330 .L0 
     /tmp/ccCg0dHp.s:673    .text:0000000000000330 .L0 
     /tmp/ccCg0dHp.s:676    .text:0000000000000338 .L0 
     /tmp/ccCg0dHp.s:681    .text:000000000000033c .L0 
     /tmp/ccCg0dHp.s:685    .text:0000000000000344 .L0 
     /tmp/ccCg0dHp.s:686    .text:0000000000000344 .L0 
     /tmp/ccCg0dHp.s:687    .text:0000000000000344 .L0 
     /tmp/ccCg0dHp.s:688    .text:0000000000000344 .L0 
     /tmp/ccCg0dHp.s:691    .text:000000000000034c .L0 
     /tmp/ccCg0dHp.s:696    .text:0000000000000350 .L0 
     /tmp/ccCg0dHp.s:706    .text:0000000000000370 .L0 
     /tmp/ccCg0dHp.s:708    .text:0000000000000370 .L0 
     /tmp/ccCg0dHp.s:709    .text:0000000000000370 .L0 
     /tmp/ccCg0dHp.s:710    .text:0000000000000370 .L0 
     /tmp/ccCg0dHp.s:715    .text:000000000000037c .L0 
       src/Riscv.cpp:80     .text:000000000000037c .L0 
     /tmp/ccCg0dHp.s:721    .text:0000000000000380 .L0 
       src/Riscv.cpp:81     .text:0000000000000380 .L0 
     /tmp/ccCg0dHp.s:726    .text:0000000000000384 .L0 
     /tmp/ccCg0dHp.s:727    .text:0000000000000384 .L0 
       src/Riscv.cpp:83     .text:0000000000000384 .L0 
     /tmp/ccCg0dHp.s:735    .text:0000000000000388 .L0 
     /tmp/ccCg0dHp.s:736    .text:0000000000000388 .L0 
     /tmp/ccCg0dHp.s:739    .text:000000000000038c .L0 
     /tmp/ccCg0dHp.s:742    .text:0000000000000390 .L0 
     /tmp/ccCg0dHp.s:743    .text:0000000000000390 .L0 
     /tmp/ccCg0dHp.s:747    .text:000000000000039c .L0 
       src/Riscv.cpp:87     .text:000000000000039c .L0 
     /tmp/ccCg0dHp.s:753    .text:00000000000003a0 .L0 
       src/Riscv.cpp:88     .text:00000000000003a0 .L0 
     /tmp/ccCg0dHp.s:758    .text:00000000000003a4 .L0 
     /tmp/ccCg0dHp.s:759    .text:00000000000003a4 .L0 
       src/Riscv.cpp:90     .text:00000000000003a4 .L0 
GAS LISTING /tmp/ccCg0dHp.s 			page 43


     /tmp/ccCg0dHp.s:767    .text:00000000000003ac .L0 
     /tmp/ccCg0dHp.s:768    .text:00000000000003ac .L0 
     /tmp/ccCg0dHp.s:772    .text:00000000000003b8 .L0 
     /tmp/ccCg0dHp.s:778    .text:00000000000003bc .L0 
     /tmp/ccCg0dHp.s:779    .text:00000000000003bc .L0 
     /tmp/ccCg0dHp.s:784    .text:00000000000003cc .L0 
     /tmp/ccCg0dHp.s:789    .text:00000000000003d0 .L0 
     /tmp/ccCg0dHp.s:791    .text:00000000000003d0 .L0 
     /tmp/ccCg0dHp.s:794    .text:00000000000003d0 .L0 
     /tmp/ccCg0dHp.s:795    .text:00000000000003d0 .L0 
     /tmp/ccCg0dHp.s:796    .text:00000000000003d0 .L0 
  src/../h/Riscv.hpp:123    .text:00000000000003d0 .L0 
     /tmp/ccCg0dHp.s:805    .text:00000000000003d8 .L0 
     /tmp/ccCg0dHp.s:806    .text:00000000000003d8 .L0 
     /tmp/ccCg0dHp.s:810    .text:00000000000003dc .L0 
     /tmp/ccCg0dHp.s:814    .text:00000000000003e0 .L0 
     /tmp/ccCg0dHp.s:815    .text:00000000000003e0 .L0 
     /tmp/ccCg0dHp.s:816    .text:00000000000003e0 .L0 
  src/../h/Riscv.hpp:196    .text:00000000000003e0 .L0 
     /tmp/ccCg0dHp.s:824    .text:00000000000003e8 .L0 
     /tmp/ccCg0dHp.s:825    .text:00000000000003e8 .L0 
     /tmp/ccCg0dHp.s:829    .text:00000000000003ec .L0 
     /tmp/ccCg0dHp.s:834    .text:00000000000003f0 .L0 
     /tmp/ccCg0dHp.s:835    .text:00000000000003f0 .L0 
     /tmp/ccCg0dHp.s:836    .text:00000000000003f0 .L0 
     /tmp/ccCg0dHp.s:846    .text:00000000000003f8 .L0 
     /tmp/ccCg0dHp.s:847    .text:00000000000003f8 .L0 
     /tmp/ccCg0dHp.s:852    .text:000000000000040c .L0 
     /tmp/ccCg0dHp.s:853    .text:000000000000040c .L0 
     /tmp/ccCg0dHp.s:858    .text:0000000000000420 .L0 
     /tmp/ccCg0dHp.s:859    .text:0000000000000420 .L0 
     /tmp/ccCg0dHp.s:862    .text:0000000000000428 .L0 
     /tmp/ccCg0dHp.s:863    .text:0000000000000428 .L0 
     /tmp/ccCg0dHp.s:870    .text:0000000000000434 .L0 
     /tmp/ccCg0dHp.s:871    .text:0000000000000434 .L0 
     /tmp/ccCg0dHp.s:876    .text:0000000000000438 .L0 
     /tmp/ccCg0dHp.s:878    .text:000000000000043c .L0 
     /tmp/ccCg0dHp.s:881    .text:0000000000000440 .L0 
     /tmp/ccCg0dHp.s:882    .text:0000000000000440 .L0 
     /tmp/ccCg0dHp.s:887    .text:0000000000000444 .L0 
  src/../h/Riscv.hpp:201    .text:0000000000000444 .L0 
     /tmp/ccCg0dHp.s:897    .text:0000000000000448 .L0 
     /tmp/ccCg0dHp.s:898    .text:0000000000000448 .L0 
     /tmp/ccCg0dHp.s:903    .text:000000000000044c .L0 
  src/../h/Riscv.hpp:128    .text:000000000000044c .L0 
     /tmp/ccCg0dHp.s:913    .text:0000000000000450 .L0 
     /tmp/ccCg0dHp.s:914    .text:0000000000000450 .L0 
     /tmp/ccCg0dHp.s:921    .text:0000000000000458 .L0 
     /tmp/ccCg0dHp.s:922    .text:0000000000000458 .L0 
     /tmp/ccCg0dHp.s:923    .text:000000000000045c .L0 
     /tmp/ccCg0dHp.s:924    .text:000000000000045c .L0 
     /tmp/ccCg0dHp.s:926    .text:0000000000000460 .L0 
     /tmp/ccCg0dHp.s:927    .text:0000000000000460 .L0 
     /tmp/ccCg0dHp.s:929    .text:0000000000000464 .L0 
     /tmp/ccCg0dHp.s:931    .text:0000000000000468 .L0 
     /tmp/ccCg0dHp.s:934    .text:000000000000046c .L0 
     /tmp/ccCg0dHp.s:939    .text:000000000000046c .L0 
GAS LISTING /tmp/ccCg0dHp.s 			page 44


     /tmp/ccCg0dHp.s:940    .text:000000000000046c .L0 
     /tmp/ccCg0dHp.s:942    .text:0000000000000470 .L0 
     /tmp/ccCg0dHp.s:943    .text:0000000000000470 .L0 
     /tmp/ccCg0dHp.s:953    .text:000000000000047c .L0 
     /tmp/ccCg0dHp.s:954    .text:000000000000047c .L0 
     /tmp/ccCg0dHp.s:958    .text:000000000000048c .L0 
     /tmp/ccCg0dHp.s:959    .text:000000000000048c .L0 
     /tmp/ccCg0dHp.s:968    .text:0000000000000498 .L0 
     /tmp/ccCg0dHp.s:969    .text:0000000000000498 .L0 
     /tmp/ccCg0dHp.s:970    .text:0000000000000498 .L0 
     /tmp/ccCg0dHp.s:971    .text:0000000000000498 .L0 
     /tmp/ccCg0dHp.s:974    .text:00000000000004a0 .L0 
     /tmp/ccCg0dHp.s:978    .text:00000000000004a4 .L0 
     /tmp/ccCg0dHp.s:979    .text:00000000000004a4 .L0 
     /tmp/ccCg0dHp.s:981    .text:00000000000004a4 .L0 
     /tmp/ccCg0dHp.s:982    .text:00000000000004a4 .L0 
     /tmp/ccCg0dHp.s:983    .text:00000000000004a4 .L0 
       src/Riscv.cpp:125    .text:00000000000004a4 .L0 
     /tmp/ccCg0dHp.s:993    .text:00000000000004a8 .L0 
     /tmp/ccCg0dHp.s:994    .text:00000000000004a8 .L0 
     /tmp/ccCg0dHp.s:995    .text:00000000000004a8 .L0 
  src/../h/Riscv.hpp:123    .text:00000000000004a8 .L0 
     /tmp/ccCg0dHp.s:1003   .text:00000000000004b0 .L0 
     /tmp/ccCg0dHp.s:1004   .text:00000000000004b0 .L0 
     /tmp/ccCg0dHp.s:1008   .text:00000000000004b4 .L0 
     /tmp/ccCg0dHp.s:1010   .text:00000000000004b8 .L0 
     /tmp/ccCg0dHp.s:1014   .text:00000000000004bc .L0 
     /tmp/ccCg0dHp.s:1015   .text:00000000000004bc .L0 
     /tmp/ccCg0dHp.s:1016   .text:00000000000004bc .L0 
  src/../h/Riscv.hpp:196    .text:00000000000004bc .L0 
     /tmp/ccCg0dHp.s:1024   .text:00000000000004c4 .L0 
     /tmp/ccCg0dHp.s:1025   .text:00000000000004c4 .L0 
     /tmp/ccCg0dHp.s:1029   .text:00000000000004c8 .L0 
     /tmp/ccCg0dHp.s:1031   .text:00000000000004cc .L0 
     /tmp/ccCg0dHp.s:1115   .text:00000000000004f0 .L0 
     /tmp/ccCg0dHp.s:1116   .text:00000000000004f0 .L0 
     /tmp/ccCg0dHp.s:1117   .text:00000000000004f0 .L0 
     /tmp/ccCg0dHp.s:1121   .text:00000000000004f8 .L0 
     /tmp/ccCg0dHp.s:1122   .text:00000000000004f8 .L0 
     /tmp/ccCg0dHp.s:1123   .text:00000000000004f8 .L0 
     /tmp/ccCg0dHp.s:1128   .text:00000000000004fc .L0 
  src/../h/Riscv.hpp:201    .text:00000000000004fc .L0 
     /tmp/ccCg0dHp.s:1138   .text:0000000000000500 .L0 
     /tmp/ccCg0dHp.s:1139   .text:0000000000000500 .L0 
     /tmp/ccCg0dHp.s:1144   .text:0000000000000504 .L0 
  src/../h/Riscv.hpp:128    .text:0000000000000504 .L0 
     /tmp/ccCg0dHp.s:1154   .text:0000000000000508 .L0 
     /tmp/ccCg0dHp.s:1155   .text:0000000000000508 .L0 
     /tmp/ccCg0dHp.s:1161   .text:0000000000000510 .L0 
     /tmp/ccCg0dHp.s:1162   .text:0000000000000510 .L0 
     /tmp/ccCg0dHp.s:1168   .text:0000000000000514 .L0 
     /tmp/ccCg0dHp.s:1169   .text:0000000000000514 .L0 
     /tmp/ccCg0dHp.s:1170   .text:0000000000000514 .L0 
     /tmp/ccCg0dHp.s:1173   .text:000000000000051c .L0 
     /tmp/ccCg0dHp.s:1176   .text:0000000000000520 .L0 
     /tmp/ccCg0dHp.s:1177   .text:0000000000000520 .L0 
     /tmp/ccCg0dHp.s:1178   .text:0000000000000520 .L0 
GAS LISTING /tmp/ccCg0dHp.s 			page 45


     /tmp/ccCg0dHp.s:1181   .text:0000000000000528 .L0 
     /tmp/ccCg0dHp.s:1184   .text:000000000000052c .L0 
     /tmp/ccCg0dHp.s:1185   .text:000000000000052c .L0 
     /tmp/ccCg0dHp.s:1186   .text:000000000000052c .L0 
     /tmp/ccCg0dHp.s:1189   .text:0000000000000534 .L0 
     /tmp/ccCg0dHp.s:1192   .text:0000000000000538 .L0 
     /tmp/ccCg0dHp.s:1193   .text:0000000000000538 .L0 
     /tmp/ccCg0dHp.s:1194   .text:0000000000000538 .L0 
     /tmp/ccCg0dHp.s:1197   .text:0000000000000540 .L0 
     /tmp/ccCg0dHp.s:1200   .text:0000000000000544 .L0 
     /tmp/ccCg0dHp.s:1201   .text:0000000000000544 .L0 
     /tmp/ccCg0dHp.s:1202   .text:0000000000000544 .L0 
     /tmp/ccCg0dHp.s:1205   .text:000000000000054c .L0 
     /tmp/ccCg0dHp.s:1208   .text:0000000000000550 .L0 
     /tmp/ccCg0dHp.s:1209   .text:0000000000000550 .L0 
     /tmp/ccCg0dHp.s:1210   .text:0000000000000550 .L0 
     /tmp/ccCg0dHp.s:1213   .text:0000000000000558 .L0 
     /tmp/ccCg0dHp.s:1216   .text:000000000000055c .L0 
     /tmp/ccCg0dHp.s:1217   .text:000000000000055c .L0 
     /tmp/ccCg0dHp.s:1218   .text:000000000000055c .L0 
     /tmp/ccCg0dHp.s:1221   .text:0000000000000564 .L0 
     /tmp/ccCg0dHp.s:1224   .text:0000000000000568 .L0 
     /tmp/ccCg0dHp.s:1225   .text:0000000000000568 .L0 
     /tmp/ccCg0dHp.s:1226   .text:0000000000000568 .L0 
     /tmp/ccCg0dHp.s:1229   .text:0000000000000570 .L0 
     /tmp/ccCg0dHp.s:1232   .text:0000000000000574 .L0 
     /tmp/ccCg0dHp.s:1233   .text:0000000000000574 .L0 
     /tmp/ccCg0dHp.s:1234   .text:0000000000000574 .L0 
     /tmp/ccCg0dHp.s:1237   .text:000000000000057c .L0 
     /tmp/ccCg0dHp.s:1240   .text:0000000000000580 .L0 
     /tmp/ccCg0dHp.s:1241   .text:0000000000000580 .L0 
     /tmp/ccCg0dHp.s:1242   .text:0000000000000580 .L0 
     /tmp/ccCg0dHp.s:1245   .text:0000000000000588 .L0 
     /tmp/ccCg0dHp.s:1248   .text:000000000000058c .L0 
     /tmp/ccCg0dHp.s:1249   .text:000000000000058c .L0 
     /tmp/ccCg0dHp.s:1250   .text:000000000000058c .L0 
     /tmp/ccCg0dHp.s:1253   .text:0000000000000594 .L0 
     /tmp/ccCg0dHp.s:1256   .text:0000000000000598 .L0 
     /tmp/ccCg0dHp.s:1257   .text:0000000000000598 .L0 
     /tmp/ccCg0dHp.s:1258   .text:0000000000000598 .L0 
     /tmp/ccCg0dHp.s:1261   .text:00000000000005a0 .L0 
     /tmp/ccCg0dHp.s:1264   .text:00000000000005a4 .L0 
     /tmp/ccCg0dHp.s:1265   .text:00000000000005a4 .L0 
     /tmp/ccCg0dHp.s:1266   .text:00000000000005a4 .L0 
     /tmp/ccCg0dHp.s:1269   .text:00000000000005ac .L0 
     /tmp/ccCg0dHp.s:1272   .text:00000000000005b0 .L0 
     /tmp/ccCg0dHp.s:1273   .text:00000000000005b0 .L0 
     /tmp/ccCg0dHp.s:1274   .text:00000000000005b0 .L0 
     /tmp/ccCg0dHp.s:1277   .text:00000000000005b8 .L0 
     /tmp/ccCg0dHp.s:1281   .text:00000000000005bc .L0 
     /tmp/ccCg0dHp.s:1291   .bss:0000000000000000 _ZN5Riscv12finishSystemE
     /tmp/ccCg0dHp.s:1296   .bss:0000000000000008 _ZN5Riscv9totalTimeE
     /tmp/ccCg0dHp.s:1288   .bss:0000000000000000 .LANCHOR0
     /tmp/ccCg0dHp.s:1309   .text:00000000000005bc .L0 
     /tmp/ccCg0dHp.s:55     .text:0000000000000038 .L0 
     /tmp/ccCg0dHp.s:278    .text:0000000000000138 .L0 
     /tmp/ccCg0dHp.s:312    .text:000000000000017c .L0 
GAS LISTING /tmp/ccCg0dHp.s 			page 46


     /tmp/ccCg0dHp.s:234    .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccCg0dHp.s:315    .text:0000000000000184 .L0 
     /tmp/ccCg0dHp.s:322    .text:0000000000000194 .L0 
     /tmp/ccCg0dHp.s:508    .text:0000000000000264 .L0 
     /tmp/ccCg0dHp.s:552    .text:0000000000000298 .L0 
     /tmp/ccCg0dHp.s:627    .text:00000000000002e4 .L0 
     /tmp/ccCg0dHp.s:631    .text:00000000000002f0 .L0 
     /tmp/ccCg0dHp.s:710    .text:0000000000000370 .L0 
     /tmp/ccCg0dHp.s:743    .text:0000000000000390 .L0 
     /tmp/ccCg0dHp.s:768    .text:00000000000003ac .L0 
     /tmp/ccCg0dHp.s:847    .text:00000000000003f8 .L0 
     /tmp/ccCg0dHp.s:853    .text:000000000000040c .L0 
     /tmp/ccCg0dHp.s:863    .text:0000000000000428 .L0 
     /tmp/ccCg0dHp.s:955    .text:0000000000000480 .L0 
     /tmp/ccCg0dHp.s:1043   .rodata:0000000000000000 .L48
     /tmp/ccCg0dHp.s:1035   .text:00000000000004d8 .L0 
     /tmp/ccCg0dHp.s:308    .text:0000000000000178 .L14
     /tmp/ccCg0dHp.s:293    .text:000000000000015c .L15
     /tmp/ccCg0dHp.s:335    .text:00000000000001b8 .L16
     /tmp/ccCg0dHp.s:318    .text:0000000000000194 .L17
     /tmp/ccCg0dHp.s:477    .text:0000000000000250 .L27
     /tmp/ccCg0dHp.s:581    .text:00000000000002c0 .L32
     /tmp/ccCg0dHp.s:570    .text:00000000000002b4 .L31
     /tmp/ccCg0dHp.s:693    .text:0000000000000350 .L36
     /tmp/ccCg0dHp.s:976    .text:00000000000004a4 .L37
     /tmp/ccCg0dHp.s:963    .text:0000000000000498 .L38
     /tmp/ccCg0dHp.s:678    .text:000000000000033c .L64
     /tmp/ccCg0dHp.s:917    .text:0000000000000458 .L35
     /tmp/ccCg0dHp.s:786    .text:00000000000003d0 .L42
     /tmp/ccCg0dHp.s:774    .text:00000000000003bc .L45
     /tmp/ccCg0dHp.s:947    .text:000000000000047c .L65
     /tmp/ccCg0dHp.s:933    .text:000000000000046c .L66
     /tmp/ccCg0dHp.s:879    .text:0000000000000440 .L44
     /tmp/ccCg0dHp.s:1120   .text:00000000000004f8 .L46
     /tmp/ccCg0dHp.s:259    .text:0000000000000104 .LEHB0
     /tmp/ccCg0dHp.s:241    .text:00000000000000ec .LFB33
     /tmp/ccCg0dHp.s:273    .text:0000000000000128 .LEHE0
     /tmp/ccCg0dHp.s:279    .text:0000000000000140 .LEHB1
     /tmp/ccCg0dHp.s:282    .text:0000000000000148 .LEHE1
     /tmp/ccCg0dHp.s:359    .text:00000000000001e0 .L19
     /tmp/ccCg0dHp.s:286    .text:000000000000014c .LEHB2
     /tmp/ccCg0dHp.s:332    .text:00000000000001b4 .LEHE2
     /tmp/ccCg0dHp.s:367    .text:00000000000001f4 .LEHB3
     /tmp/ccCg0dHp.s:370    .text:00000000000001fc .LEHE3
     /tmp/ccCg0dHp.s:1113   .text:00000000000004f0 .L62
     /tmp/ccCg0dHp.s:1163   .text:0000000000000514 .L61
     /tmp/ccCg0dHp.s:1182   .text:000000000000052c .L60
     /tmp/ccCg0dHp.s:1206   .text:0000000000000550 .L59
     /tmp/ccCg0dHp.s:1198   .text:0000000000000544 .L58
     /tmp/ccCg0dHp.s:1174   .text:0000000000000520 .L57
     /tmp/ccCg0dHp.s:1190   .text:0000000000000538 .L56
     /tmp/ccCg0dHp.s:1222   .text:0000000000000568 .L55
     /tmp/ccCg0dHp.s:1246   .text:000000000000058c .L54
     /tmp/ccCg0dHp.s:1230   .text:0000000000000574 .L53
     /tmp/ccCg0dHp.s:1238   .text:0000000000000580 .L52
     /tmp/ccCg0dHp.s:1214   .text:000000000000055c .L51
     /tmp/ccCg0dHp.s:1254   .text:0000000000000598 .L50
GAS LISTING /tmp/ccCg0dHp.s 			page 47


     /tmp/ccCg0dHp.s:1262   .text:00000000000005a4 .L49
     /tmp/ccCg0dHp.s:1270   .text:00000000000005b0 .L47
     /tmp/ccCg0dHp.s:3926   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccCg0dHp.s:5343   .debug_str:00000000000002b2 .LASF311
     /tmp/ccCg0dHp.s:5377   .debug_str:000000000000047d .LASF312
     /tmp/ccCg0dHp.s:5795   .debug_str:0000000000001235 .LASF313
     /tmp/ccCg0dHp.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccCg0dHp.s:1299   .text:00000000000005bc .Letext0
     /tmp/ccCg0dHp.s:5271   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccCg0dHp.s:5491   .debug_str:000000000000086e .LASF0
     /tmp/ccCg0dHp.s:5527   .debug_str:0000000000000997 .LASF1
     /tmp/ccCg0dHp.s:5681   .debug_str:0000000000000eb9 .LASF2
     /tmp/ccCg0dHp.s:5699   .debug_str:0000000000000f4f .LASF4
     /tmp/ccCg0dHp.s:5511   .debug_str:0000000000000916 .LASF3
     /tmp/ccCg0dHp.s:5297   .debug_str:00000000000000eb .LASF5
     /tmp/ccCg0dHp.s:5639   .debug_str:0000000000000da3 .LASF6
     /tmp/ccCg0dHp.s:5629   .debug_str:0000000000000d5a .LASF7
     /tmp/ccCg0dHp.s:5519   .debug_str:0000000000000963 .LASF8
     /tmp/ccCg0dHp.s:5453   .debug_str:0000000000000712 .LASF9
     /tmp/ccCg0dHp.s:5465   .debug_str:0000000000000784 .LASF10
     /tmp/ccCg0dHp.s:5363   .debug_str:000000000000041a .LASF11
     /tmp/ccCg0dHp.s:5441   .debug_str:00000000000006d0 .LASF12
     /tmp/ccCg0dHp.s:5379   .debug_str:000000000000048b .LASF13
     /tmp/ccCg0dHp.s:5361   .debug_str:000000000000040a .LASF14
     /tmp/ccCg0dHp.s:5753   .debug_str:000000000000111c .LASF15
     /tmp/ccCg0dHp.s:5419   .debug_str:00000000000005dd .LASF16
     /tmp/ccCg0dHp.s:5737   .debug_str:0000000000001067 .LASF17
     /tmp/ccCg0dHp.s:5841   .debug_str:0000000000001395 .LASF110
     /tmp/ccCg0dHp.s:5661   .debug_str:0000000000000e3e .LASF21
     /tmp/ccCg0dHp.s:5537   .debug_str:00000000000009da .LASF18
     /tmp/ccCg0dHp.s:5429   .debug_str:000000000000064c .LASF19
     /tmp/ccCg0dHp.s:5861   .debug_str:0000000000001443 .LASF20
     /tmp/ccCg0dHp.s:5829   .debug_str:0000000000001334 .LASF22
     /tmp/ccCg0dHp.s:5435   .debug_str:000000000000068c .LASF23
     /tmp/ccCg0dHp.s:5783   .debug_str:00000000000011d2 .LASF24
     /tmp/ccCg0dHp.s:5393   .debug_str:0000000000000513 .LASF25
     /tmp/ccCg0dHp.s:5485   .debug_str:0000000000000845 .LASF26
     /tmp/ccCg0dHp.s:5741   .debug_str:000000000000108c .LASF28
     /tmp/ccCg0dHp.s:5871   .debug_str:0000000000001494 .LASF27
     /tmp/ccCg0dHp.s:5717   .debug_str:0000000000000fd0 .LASF29
     /tmp/ccCg0dHp.s:5585   .debug_str:0000000000000bc8 .LASF30
     /tmp/ccCg0dHp.s:5565   .debug_str:0000000000000af8 .LASF31
     /tmp/ccCg0dHp.s:5415   .debug_str:00000000000005c0 .LASF32
     /tmp/ccCg0dHp.s:5285   .debug_str:000000000000005b .LASF33
     /tmp/ccCg0dHp.s:5567   .debug_str:0000000000000b10 .LASF40
     /tmp/ccCg0dHp.s:5837   .debug_str:000000000000136d .LASF42
     /tmp/ccCg0dHp.s:5357   .debug_str:00000000000003e6 .LASF34
     /tmp/ccCg0dHp.s:5543   .debug_str:0000000000000a17 .LASF35
     /tmp/ccCg0dHp.s:5409   .debug_str:000000000000056f .LASF36
     /tmp/ccCg0dHp.s:5369   .debug_str:0000000000000437 .LASF37
     /tmp/ccCg0dHp.s:5503   .debug_str:00000000000008d4 .LASF38
     /tmp/ccCg0dHp.s:5385   .debug_str:00000000000004d1 .LASF39
     /tmp/ccCg0dHp.s:5333   .debug_str:000000000000026f .LASF41
     /tmp/ccCg0dHp.s:5455   .debug_str:0000000000000722 .LASF43
     /tmp/ccCg0dHp.s:5709   .debug_str:0000000000000f80 .LASF44
     /tmp/ccCg0dHp.s:5427   .debug_str:0000000000000631 .LASF45
     /tmp/ccCg0dHp.s:5497   .debug_str:00000000000008ad .LASF46
GAS LISTING /tmp/ccCg0dHp.s 			page 48


     /tmp/ccCg0dHp.s:5853   .debug_str:00000000000013fb .LASF47
     /tmp/ccCg0dHp.s:5819   .debug_str:00000000000012fc .LASF50
     /tmp/ccCg0dHp.s:5807   .debug_str:00000000000012a1 .LASF52
     /tmp/ccCg0dHp.s:5677   .debug_str:0000000000000ea5 .LASF48
     /tmp/ccCg0dHp.s:5609   .debug_str:0000000000000ca2 .LASF49
     /tmp/ccCg0dHp.s:5647   .debug_str:0000000000000dcc .LASF51
     /tmp/ccCg0dHp.s:5655   .debug_str:0000000000000e0c .LASF53
     /tmp/ccCg0dHp.s:5599   .debug_str:0000000000000c33 .LASF54
     /tmp/ccCg0dHp.s:5521   .debug_str:0000000000000976 .LASF55
     /tmp/ccCg0dHp.s:5855   .debug_str:0000000000001415 .LASF56
     /tmp/ccCg0dHp.s:5789   .debug_str:00000000000011f4 .LASF57
     /tmp/ccCg0dHp.s:5593   .debug_str:0000000000000c03 .LASF58
     /tmp/ccCg0dHp.s:5607   .debug_str:0000000000000c8e .LASF59
     /tmp/ccCg0dHp.s:5579   .debug_str:0000000000000b8c .LASF60
     /tmp/ccCg0dHp.s:5659   .debug_str:0000000000000e2a .LASF61
     /tmp/ccCg0dHp.s:5905   .debug_str:00000000000015a5 .LASF62
     /tmp/ccCg0dHp.s:5501   .debug_str:00000000000008c0 .LASF63
     /tmp/ccCg0dHp.s:5879   .debug_str:00000000000014c7 .LASF107
     /tmp/ccCg0dHp.s:5749   .debug_str:00000000000010f3 .LASF64
     /tmp/ccCg0dHp.s:5703   .debug_str:0000000000000f5e .LASF65
     /tmp/ccCg0dHp.s:5705   .debug_str:0000000000000f71 .LASF66
     /tmp/ccCg0dHp.s:5413   .debug_str:00000000000005ad .LASF67
     /tmp/ccCg0dHp.s:5407   .debug_str:0000000000000569 .LASF68
     /tmp/ccCg0dHp.s:5305   .debug_str:000000000000012b .LASF69
     /tmp/ccCg0dHp.s:5499   .debug_str:00000000000008ba .LASF70
     /tmp/ccCg0dHp.s:5397   .debug_str:0000000000000532 .LASF71
     /tmp/ccCg0dHp.s:5349   .debug_str:0000000000000392 .LASF72
     /tmp/ccCg0dHp.s:5711   .debug_str:0000000000000f8e .LASF73
     /tmp/ccCg0dHp.s:5299   .debug_str:00000000000000f2 .LASF74
     /tmp/ccCg0dHp.s:5687   .debug_str:0000000000000ed6 .LASF75
     /tmp/ccCg0dHp.s:5679   .debug_str:0000000000000eae .LASF76
     /tmp/ccCg0dHp.s:5893   .debug_str:0000000000001540 .LASF77
     /tmp/ccCg0dHp.s:5685   .debug_str:0000000000000ecf .LASF78
     /tmp/ccCg0dHp.s:5359   .debug_str:00000000000003f7 .LASF79
     /tmp/ccCg0dHp.s:5733   .debug_str:0000000000001052 .LASF80
     /tmp/ccCg0dHp.s:5693   .debug_str:0000000000000f0d .LASF81
     /tmp/ccCg0dHp.s:5843   .debug_str:000000000000139b .LASF82
     /tmp/ccCg0dHp.s:5867   .debug_str:0000000000001461 .LASF83
     /tmp/ccCg0dHp.s:5839   .debug_str:000000000000138b .LASF84
     /tmp/ccCg0dHp.s:5569   .debug_str:0000000000000b20 .LASF85
     /tmp/ccCg0dHp.s:5667   .debug_str:0000000000000e68 .LASF86
     /tmp/ccCg0dHp.s:5475   .debug_str:0000000000000807 .LASF87
     /tmp/ccCg0dHp.s:5483   .debug_str:000000000000083f .LASF88
     /tmp/ccCg0dHp.s:5387   .debug_str:00000000000004f0 .LASF89
     /tmp/ccCg0dHp.s:5479   .debug_str:000000000000081f .LASF90
     /tmp/ccCg0dHp.s:5487   .debug_str:0000000000000850 .LASF91
     /tmp/ccCg0dHp.s:5813   .debug_str:00000000000012c9 .LASF92
     /tmp/ccCg0dHp.s:5463   .debug_str:0000000000000768 .LASF93
     /tmp/ccCg0dHp.s:5633   .debug_str:0000000000000d75 .LASF94
     /tmp/ccCg0dHp.s:5517   .debug_str:0000000000000941 .LASF95
     /tmp/ccCg0dHp.s:5329   .debug_str:000000000000024d .LASF96
     /tmp/ccCg0dHp.s:5559   .debug_str:0000000000000aba .LASF97
     /tmp/ccCg0dHp.s:5669   .debug_str:0000000000000e6e .LASF98
     /tmp/ccCg0dHp.s:5291   .debug_str:00000000000000a7 .LASF99
     /tmp/ccCg0dHp.s:5335   .debug_str:0000000000000279 .LASF100
     /tmp/ccCg0dHp.s:5811   .debug_str:00000000000012bd .LASF101
     /tmp/ccCg0dHp.s:5337   .debug_str:0000000000000288 .LASF102
GAS LISTING /tmp/ccCg0dHp.s 			page 49


     /tmp/ccCg0dHp.s:5583   .debug_str:0000000000000bb6 .LASF103
     /tmp/ccCg0dHp.s:5467   .debug_str:0000000000000792 .LASF104
     /tmp/ccCg0dHp.s:5509   .debug_str:0000000000000903 .LASF105
     /tmp/ccCg0dHp.s:5355   .debug_str:00000000000003d2 .LASF106
     /tmp/ccCg0dHp.s:5777   .debug_str:00000000000011ae .LASF108
     /tmp/ccCg0dHp.s:5557   .debug_str:0000000000000ab5 .LASF109
     /tmp/ccCg0dHp.s:5623   .debug_str:0000000000000d1c .LASF111
     /tmp/ccCg0dHp.s:5723   .debug_str:0000000000000ffc .LASF146
     /tmp/ccCg0dHp.s:5525   .debug_str:0000000000000992 .LASF112
     /tmp/ccCg0dHp.s:5365   .debug_str:0000000000000429 .LASF113
     /tmp/ccCg0dHp.s:5449   .debug_str:00000000000006fc .LASF114
     /tmp/ccCg0dHp.s:5529   .debug_str:00000000000009aa .LASF115
     /tmp/ccCg0dHp.s:5535   .debug_str:00000000000009c7 .LASF116
     /tmp/ccCg0dHp.s:5447   .debug_str:00000000000006f3 .LASF117
     /tmp/ccCg0dHp.s:5909   .debug_str:00000000000015cb .LASF118
     /tmp/ccCg0dHp.s:5573   .debug_str:0000000000000b55 .LASF119
     /tmp/ccCg0dHp.s:5301   .debug_str:00000000000000fd .LASF121
     /tmp/ccCg0dHp.s:5759   .debug_str:000000000000114a .LASF120
     /tmp/ccCg0dHp.s:5575   .debug_str:0000000000000b5f .LASF122
     /tmp/ccCg0dHp.s:5833   .debug_str:0000000000001353 .LASF123
     /tmp/ccCg0dHp.s:5793   .debug_str:0000000000001212 .LASF124
     /tmp/ccCg0dHp.s:5755   .debug_str:0000000000001128 .LASF125
     /tmp/ccCg0dHp.s:5293   .debug_str:00000000000000af .LASF126
     /tmp/ccCg0dHp.s:5847   .debug_str:00000000000013aa .LASF127
     /tmp/ccCg0dHp.s:5289   .debug_str:0000000000000079 .LASF128
     /tmp/ccCg0dHp.s:5767   .debug_str:000000000000116e .LASF129
     /tmp/ccCg0dHp.s:5473   .debug_str:00000000000007d8 .LASF130
     /tmp/ccCg0dHp.s:5279   .debug_str:000000000000002b .LASF131
     /tmp/ccCg0dHp.s:5611   .debug_str:0000000000000cb7 .LASF132
     /tmp/ccCg0dHp.s:5421   .debug_str:00000000000005f3 .LASF133
     /tmp/ccCg0dHp.s:5851   .debug_str:00000000000013d3 .LASF134
     /tmp/ccCg0dHp.s:5739   .debug_str:000000000000107d .LASF135
     /tmp/ccCg0dHp.s:5411   .debug_str:0000000000000586 .LASF136
     /tmp/ccCg0dHp.s:5773   .debug_str:0000000000001199 .LASF137
     /tmp/ccCg0dHp.s:5353   .debug_str:00000000000003cc .LASF138
     /tmp/ccCg0dHp.s:5721   .debug_str:0000000000000ff4 .LASF139
     /tmp/ccCg0dHp.s:5371   .debug_str:000000000000045b .LASF140
     /tmp/ccCg0dHp.s:5339   .debug_str:000000000000029b .LASF141
     /tmp/ccCg0dHp.s:5631   .debug_str:0000000000000d6d .LASF142
     /tmp/ccCg0dHp.s:5523   .debug_str:0000000000000989 .LASF143
     /tmp/ccCg0dHp.s:5701   .debug_str:0000000000000f56 .LASF208
     /tmp/ccCg0dHp.s:5477   .debug_str:0000000000000819 .LASF144
     /tmp/ccCg0dHp.s:5801   .debug_str:000000000000127f .LASF145
     /tmp/ccCg0dHp.s:5589   .debug_str:0000000000000be2 .LASF314
     /tmp/ccCg0dHp.s:5615   .debug_str:0000000000000cf1 .LASF147
     /tmp/ccCg0dHp.s:5845   .debug_str:00000000000013a5 .LASF148
     /tmp/ccCg0dHp.s:5889   .debug_str:000000000000150b .LASF149
     /tmp/ccCg0dHp.s:5883   .debug_str:00000000000014e2 .LASF150
     /tmp/ccCg0dHp.s:5787   .debug_str:00000000000011e4 .LASF151
     /tmp/ccCg0dHp.s:5401   .debug_str:0000000000000555 .LASF152
     /tmp/ccCg0dHp.s:5311   .debug_str:0000000000000184 .LASF153
     /tmp/ccCg0dHp.s:5533   .debug_str:00000000000009c1 .LASF154
     /tmp/ccCg0dHp.s:5619   .debug_str:0000000000000d00 .LASF155
     /tmp/ccCg0dHp.s:5781   .debug_str:00000000000011ca .LASF156
     /tmp/ccCg0dHp.s:5399   .debug_str:0000000000000544 .LASF157
     /tmp/ccCg0dHp.s:5563   .debug_str:0000000000000aeb .LASF162
     /tmp/ccCg0dHp.s:5545   .debug_str:0000000000000a35 .LASF164
GAS LISTING /tmp/ccCg0dHp.s 			page 50


     /tmp/ccCg0dHp.s:5897   .debug_str:000000000000156d .LASF158
     /tmp/ccCg0dHp.s:5445   .debug_str:00000000000006e7 .LASF159
     /tmp/ccCg0dHp.s:5493   .debug_str:000000000000087b .LASF160
     /tmp/ccCg0dHp.s:5505   .debug_str:00000000000008e6 .LASF161
     /tmp/ccCg0dHp.s:5713   .debug_str:0000000000000fa9 .LASF163
     /tmp/ccCg0dHp.s:5395   .debug_str:000000000000051f .LASF165
     /tmp/ccCg0dHp.s:5651   .debug_str:0000000000000df6 .LASF166
     /tmp/ccCg0dHp.s:5745   .debug_str:00000000000010c4 .LASF167
     /tmp/ccCg0dHp.s:5587   .debug_str:0000000000000bd3 .LASF168
     /tmp/ccCg0dHp.s:5281   .debug_str:000000000000003c .LASF169
     /tmp/ccCg0dHp.s:5865   .debug_str:0000000000001452 .LASF170
     /tmp/ccCg0dHp.s:5625   .debug_str:0000000000000d2c .LASF171
     /tmp/ccCg0dHp.s:5735   .debug_str:0000000000001059 .LASF172
     /tmp/ccCg0dHp.s:5645   .debug_str:0000000000000dc0 .LASF173
     /tmp/ccCg0dHp.s:5275   .debug_str:000000000000000f .LASF174
     /tmp/ccCg0dHp.s:5605   .debug_str:0000000000000c7e .LASF175
     /tmp/ccCg0dHp.s:5673   .debug_str:0000000000000e7f .LASF176
     /tmp/ccCg0dHp.s:5873   .debug_str:00000000000014a3 .LASF177
     /tmp/ccCg0dHp.s:5513   .debug_str:0000000000000928 .LASF178
     /tmp/ccCg0dHp.s:5727   .debug_str:000000000000101f .LASF179
     /tmp/ccCg0dHp.s:5887   .debug_str:00000000000014f5 .LASF180
     /tmp/ccCg0dHp.s:5761   .debug_str:0000000000001153 .LASF181
     /tmp/ccCg0dHp.s:5729   .debug_str:000000000000102a .LASF182
     /tmp/ccCg0dHp.s:5707   .debug_str:0000000000000f78 .LASF183
     /tmp/ccCg0dHp.s:5627   .debug_str:0000000000000d46 .LASF184
     /tmp/ccCg0dHp.s:5597   .debug_str:0000000000000c14 .LASF185
     /tmp/ccCg0dHp.s:5383   .debug_str:00000000000004bf .LASF186
     /tmp/ccCg0dHp.s:5869   .debug_str:0000000000001477 .LASF187
     /tmp/ccCg0dHp.s:5911   .debug_str:00000000000015d5 .LASF188
     /tmp/ccCg0dHp.s:5601   .debug_str:0000000000000c3a .LASF189
     /tmp/ccCg0dHp.s:5691   .debug_str:0000000000000efa .LASF190
     /tmp/ccCg0dHp.s:5715   .debug_str:0000000000000fb2 .LASF191
     /tmp/ccCg0dHp.s:5825   .debug_str:0000000000001316 .LASF192
     /tmp/ccCg0dHp.s:5907   .debug_str:00000000000015ad .LASF193
     /tmp/ccCg0dHp.s:5895   .debug_str:0000000000001558 .LASF194
     /tmp/ccCg0dHp.s:5743   .debug_str:00000000000010a4 .LASF195
     /tmp/ccCg0dHp.s:5697   .debug_str:0000000000000f46 .LASF196
     /tmp/ccCg0dHp.s:5657   .debug_str:0000000000000e1f .LASF197
     /tmp/ccCg0dHp.s:5791   .debug_str:0000000000001208 .LASF198
     /tmp/ccCg0dHp.s:5621   .debug_str:0000000000000d10 .LASF199
     /tmp/ccCg0dHp.s:5881   .debug_str:00000000000014d4 .LASF200
     /tmp/ccCg0dHp.s:5323   .debug_str:00000000000001f8 .LASF202
     /tmp/ccCg0dHp.s:5327   .debug_str:0000000000000238 .LASF201
     /tmp/ccCg0dHp.s:5351   .debug_str:00000000000003a0 .LASF203
     /tmp/ccCg0dHp.s:5901   .debug_str:0000000000001586 .LASF315
     /tmp/ccCg0dHp.s:5347   .debug_str:0000000000000381 .LASF316
     /tmp/ccCg0dHp.s:5283   .debug_str:0000000000000056 .LASF204
     /tmp/ccCg0dHp.s:5821   .debug_str:0000000000001305 .LASF205
     /tmp/ccCg0dHp.s:5551   .debug_str:0000000000000a72 .LASF206
     /tmp/ccCg0dHp.s:5405   .debug_str:0000000000000563 .LASF207
     /tmp/ccCg0dHp.s:5805   .debug_str:0000000000001299 .LASF209
     /tmp/ccCg0dHp.s:5665   .debug_str:0000000000000e5d .LASF210
     /tmp/ccCg0dHp.s:5461   .debug_str:0000000000000754 .LASF211
     /tmp/ccCg0dHp.s:5319   .debug_str:00000000000001e7 .LASF212
     /tmp/ccCg0dHp.s:5663   .debug_str:0000000000000e49 .LASF213
     /tmp/ccCg0dHp.s:5403   .debug_str:000000000000055e .LASF214
     /tmp/ccCg0dHp.s:5725   .debug_str:0000000000001008 .LASF215
GAS LISTING /tmp/ccCg0dHp.s 			page 51


     /tmp/ccCg0dHp.s:5757   .debug_str:0000000000001143 .LASF216
     /tmp/ccCg0dHp.s:5675   .debug_str:0000000000000e8c .LASF217
     /tmp/ccCg0dHp.s:5277   .debug_str:000000000000001f .LASF218
     /tmp/ccCg0dHp.s:5689   .debug_str:0000000000000eee .LASF219
     /tmp/ccCg0dHp.s:5561   .debug_str:0000000000000ad7 .LASF220
     /tmp/ccCg0dHp.s:5481   .debug_str:000000000000082a .LASF221
     /tmp/ccCg0dHp.s:5367   .debug_str:000000000000042e .LASF222
     /tmp/ccCg0dHp.s:5375   .debug_str:0000000000000473 .LASF223
     /tmp/ccCg0dHp.s:5591   .debug_str:0000000000000bfa .LASF224
     /tmp/ccCg0dHp.s:5769   .debug_str:0000000000001183 .LASF225
     /tmp/ccCg0dHp.s:5273   .debug_str:0000000000000000 .LASF226
     /tmp/ccCg0dHp.s:5471   .debug_str:00000000000007b6 .LASF227
     /tmp/ccCg0dHp.s:5803   .debug_str:000000000000128a .LASF228
     /tmp/ccCg0dHp.s:5751   .debug_str:00000000000010fa .LASF229
     /tmp/ccCg0dHp.s:5553   .debug_str:0000000000000a7a .LASF230
     /tmp/ccCg0dHp.s:5381   .debug_str:000000000000049b .LASF231
     /tmp/ccCg0dHp.s:5613   .debug_str:0000000000000ce1 .LASF232
     /tmp/ccCg0dHp.s:5649   .debug_str:0000000000000dd3 .LASF233
     /tmp/ccCg0dHp.s:5531   .debug_str:00000000000009b8 .LASF234
     /tmp/ccCg0dHp.s:5489   .debug_str:0000000000000868 .LASF235
     /tmp/ccCg0dHp.s:5903   .debug_str:000000000000158d .LASF236
     /tmp/ccCg0dHp.s:5287   .debug_str:0000000000000071 .LASF237
     /tmp/ccCg0dHp.s:5549   .debug_str:0000000000000a58 .LASF238
     /tmp/ccCg0dHp.s:5507   .debug_str:00000000000008f3 .LASF239
     /tmp/ccCg0dHp.s:5603   .debug_str:0000000000000c5b .LASF240
     /tmp/ccCg0dHp.s:5849   .debug_str:00000000000013c0 .LASF241
     /tmp/ccCg0dHp.s:5695   .debug_str:0000000000000f20 .LASF242
     /tmp/ccCg0dHp.s:5885   .debug_str:00000000000014e8 .LASF243
     /tmp/ccCg0dHp.s:5309   .debug_str:0000000000000160 .LASF244
     /tmp/ccCg0dHp.s:5765   .debug_str:0000000000001169 .LASF245
     /tmp/ccCg0dHp.s:5859   .debug_str:0000000000001436 .LASF246
     /tmp/ccCg0dHp.s:5637   .debug_str:0000000000000d93 .LASF247
     /tmp/ccCg0dHp.s:5799   .debug_str:000000000000126d .LASF248
     /tmp/ccCg0dHp.s:5437   .debug_str:0000000000000698 .LASF249
     /tmp/ccCg0dHp.s:5341   .debug_str:00000000000002a4 .LASF250
     /tmp/ccCg0dHp.s:5307   .debug_str:000000000000013d .LASF251
     /tmp/ccCg0dHp.s:5595   .debug_str:0000000000000c0b .LASF252
     /tmp/ccCg0dHp.s:5457   .debug_str:0000000000000739 .LASF253
     /tmp/ccCg0dHp.s:5431   .debug_str:0000000000000655 .LASF254
     /tmp/ccCg0dHp.s:5617   .debug_str:0000000000000cf6 .LASF255
     /tmp/ccCg0dHp.s:5763   .debug_str:000000000000115e .LASF256
     /tmp/ccCg0dHp.s:5643   .debug_str:0000000000000db6 .LASF257
     /tmp/ccCg0dHp.s:5827   .debug_str:0000000000001329 .LASF258
     /tmp/ccCg0dHp.s:5771   .debug_str:000000000000118e .LASF259
     /tmp/ccCg0dHp.s:5823   .debug_str:000000000000130a .LASF260
     /tmp/ccCg0dHp.s:5303   .debug_str:000000000000011e .LASF261
     /tmp/ccCg0dHp.s:5577   .debug_str:0000000000000b80 .LASF262
     /tmp/ccCg0dHp.s:5641   .debug_str:0000000000000daa .LASF263
     /tmp/ccCg0dHp.s:5731   .debug_str:0000000000001040 .LASF264
     /tmp/ccCg0dHp.s:5425   .debug_str:000000000000060f .LASF265
     /tmp/ccCg0dHp.s:5817   .debug_str:00000000000012ea .LASF266
     /tmp/ccCg0dHp.s:5495   .debug_str:000000000000088b .LASF267
     /tmp/ccCg0dHp.s:5815   .debug_str:00000000000012d8 .LASF268
     /tmp/ccCg0dHp.s:5581   .debug_str:0000000000000b94 .LASF269
     /tmp/ccCg0dHp.s:5331   .debug_str:000000000000025c .LASF270
     /tmp/ccCg0dHp.s:5345   .debug_str:000000000000035e .LASF271
     /tmp/ccCg0dHp.s:5417   .debug_str:00000000000005ca .LASF272
GAS LISTING /tmp/ccCg0dHp.s 			page 52


     /tmp/ccCg0dHp.s:5433   .debug_str:0000000000000669 .LASF273
     /tmp/ccCg0dHp.s:5313   .debug_str:0000000000000197 .LASF274
     /tmp/ccCg0dHp.s:5835   .debug_str:000000000000135e .LASF275
     /tmp/ccCg0dHp.s:5571   .debug_str:0000000000000b36 .LASF276
     /tmp/ccCg0dHp.s:5857   .debug_str:000000000000141d .LASF277
     /tmp/ccCg0dHp.s:5555   .debug_str:0000000000000a8b .LASF278
     /tmp/ccCg0dHp.s:5539   .debug_str:00000000000009e3 .LASF279
     /tmp/ccCg0dHp.s:5891   .debug_str:0000000000001517 .LASF280
     /tmp/ccCg0dHp.s:5439   .debug_str:00000000000006bf .LASF281
     /tmp/ccCg0dHp.s:5779   .debug_str:00000000000011b8 .LASF282
     /tmp/ccCg0dHp.s:5451   .debug_str:0000000000000705 .LASF283
     /tmp/ccCg0dHp.s:5875   .debug_str:00000000000014ae .LASF284
     /tmp/ccCg0dHp.s:5469   .debug_str:00000000000007a5 .LASF285
     /tmp/ccCg0dHp.s:5515   .debug_str:0000000000000935 .LASF286
     /tmp/ccCg0dHp.s:5541   .debug_str:00000000000009fb .LASF287
     /tmp/ccCg0dHp.s:5899   .debug_str:000000000000157a .LASF288
     /tmp/ccCg0dHp.s:5317   .debug_str:00000000000001cb .LASF289
     /tmp/ccCg0dHp.s:5797   .debug_str:0000000000001258 .LASF290
     /tmp/ccCg0dHp.s:5315   .debug_str:00000000000001b2 .LASF291
     /tmp/ccCg0dHp.s:541    .text:000000000000028c .LFB39
     /tmp/ccCg0dHp.s:601    .text:00000000000002cc .LFE39
     /tmp/ccCg0dHp.s:559    .text:00000000000002ac .LBB47
     /tmp/ccCg0dHp.s:572    .text:00000000000002b4 .LBE47
     /tmp/ccCg0dHp.s:5071   .debug_loc:0000000000000000 .LLST4
     /tmp/ccCg0dHp.s:585    .text:00000000000002c0 .LBB49
     /tmp/ccCg0dHp.s:597    .text:00000000000002c8 .LBE49
     /tmp/ccCg0dHp.s:5080   .debug_loc:0000000000000026 .LLST5
     /tmp/ccCg0dHp.s:488    .text:0000000000000254 .LFB38
     /tmp/ccCg0dHp.s:535    .text:000000000000028c .LFE38
     /tmp/ccCg0dHp.s:5809   .debug_str:00000000000012b6 .LASF292
     /tmp/ccCg0dHp.s:467    .text:0000000000000244 .LFB37
     /tmp/ccCg0dHp.s:482    .text:0000000000000254 .LFE37
     /tmp/ccCg0dHp.s:434    .text:0000000000000224 .LFB36
     /tmp/ccCg0dHp.s:461    .text:0000000000000244 .LFE36
     /tmp/ccCg0dHp.s:402    .text:00000000000001fc .LFB35
     /tmp/ccCg0dHp.s:428    .text:0000000000000224 .LFE35
     /tmp/ccCg0dHp.s:5089   .debug_loc:000000000000004c .LLST3
     /tmp/ccCg0dHp.s:417    .text:0000000000000214 .LVL27
     /tmp/ccCg0dHp.s:10     .text:0000000000000000 .LFB34
     /tmp/ccCg0dHp.s:36     .text:0000000000000028 .LFE34
     /tmp/ccCg0dHp.s:25     .text:0000000000000018 .LVL0
     /tmp/ccCg0dHp.s:372    .text:00000000000001fc .LFE33
     /tmp/ccCg0dHp.s:5459   .debug_str:000000000000074c .LASF293
     /tmp/ccCg0dHp.s:5103   .debug_loc:0000000000000085 .LLST2
     /tmp/ccCg0dHp.s:262    .text:000000000000010c .LVL10
     /tmp/ccCg0dHp.s:267    .text:0000000000000118 .LVL11
     /tmp/ccCg0dHp.s:272    .text:0000000000000128 .LVL12
     /tmp/ccCg0dHp.s:281    .text:0000000000000148 .LVL13
     /tmp/ccCg0dHp.s:288    .text:0000000000000154 .LVL14
     /tmp/ccCg0dHp.s:292    .text:000000000000015c .LVL15
     /tmp/ccCg0dHp.s:299    .text:0000000000000168 .LVL16
     /tmp/ccCg0dHp.s:305    .text:0000000000000174 .LVL17
     /tmp/ccCg0dHp.s:317    .text:0000000000000194 .LVL18
     /tmp/ccCg0dHp.s:325    .text:00000000000001a8 .LVL19
     /tmp/ccCg0dHp.s:331    .text:00000000000001b4 .LVL20
     /tmp/ccCg0dHp.s:339    .text:00000000000001c0 .LVL21
     /tmp/ccCg0dHp.s:343    .text:00000000000001c8 .LVL22
GAS LISTING /tmp/ccCg0dHp.s 			page 53


     /tmp/ccCg0dHp.s:365    .text:00000000000001f0 .LVL24
     /tmp/ccCg0dHp.s:369    .text:00000000000001fc .LVL25
     /tmp/ccCg0dHp.s:607    .text:00000000000002cc .LFB32
     /tmp/ccCg0dHp.s:1282   .text:00000000000005bc .LFE32
     /tmp/ccCg0dHp.s:5295   .debug_str:00000000000000e4 .LASF294
     /tmp/ccCg0dHp.s:5110   .debug_loc:00000000000000a8 .LLST6
     /tmp/ccCg0dHp.s:5245   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccCg0dHp.s:5785   .debug_str:00000000000011df .LASF295
     /tmp/ccCg0dHp.s:5719   .debug_str:0000000000000fec .LASF296
     /tmp/ccCg0dHp.s:792    .text:00000000000003d0 .LBB61
     /tmp/ccCg0dHp.s:808    .text:00000000000003dc .LBE61
     /tmp/ccCg0dHp.s:812    .text:00000000000003e0 .LBB63
     /tmp/ccCg0dHp.s:827    .text:00000000000003ec .LBE63
     /tmp/ccCg0dHp.s:832    .text:00000000000003f0 .LBB65
     /tmp/ccCg0dHp.s:844    .text:00000000000003f8 .LBE65
     /tmp/ccCg0dHp.s:5137   .debug_loc:000000000000012a .LLST10
     /tmp/ccCg0dHp.s:866    .text:0000000000000434 .LBB67
     /tmp/ccCg0dHp.s:874    .text:0000000000000438 .LBE67
     /tmp/ccCg0dHp.s:5145   .debug_loc:000000000000014e .LLST11
     /tmp/ccCg0dHp.s:884    .text:0000000000000444 .LBB69
     /tmp/ccCg0dHp.s:895    .text:0000000000000448 .LBE69
     /tmp/ccCg0dHp.s:5152   .debug_loc:0000000000000171 .LLST12
     /tmp/ccCg0dHp.s:900    .text:000000000000044c .LBB71
     /tmp/ccCg0dHp.s:911    .text:0000000000000450 .LBE71
     /tmp/ccCg0dHp.s:5159   .debug_loc:0000000000000194 .LLST13
     /tmp/ccCg0dHp.s:860    .text:0000000000000428 .LVL54
     /tmp/ccCg0dHp.s:915    .text:0000000000000458 .LVL61
     /tmp/ccCg0dHp.s:944    .text:0000000000000478 .LVL62
     /tmp/ccCg0dHp.s:5166   .debug_loc:00000000000001b7 .LLST7
     /tmp/ccCg0dHp.s:5671   .debug_str:0000000000000e75 .LASF297
     /tmp/ccCg0dHp.s:5177   .debug_loc:00000000000001ed .LLST8
     /tmp/ccCg0dHp.s:5184   .debug_loc:0000000000000210 .LLST9
     /tmp/ccCg0dHp.s:960    .text:0000000000000494 .LVL64
     /tmp/ccCg0dHp.s:780    .text:00000000000003c4 .LVL48
     /tmp/ccCg0dHp.s:782    .text:00000000000003cc .LVL49
     /tmp/ccCg0dHp.s:5195   .debug_loc:0000000000000246 .LLST14
     /tmp/ccCg0dHp.s:991    .text:00000000000004a8 .LBB76
     /tmp/ccCg0dHp.s:1006   .text:00000000000004b4 .LBE76
     /tmp/ccCg0dHp.s:1012   .text:00000000000004bc .LBB78
     /tmp/ccCg0dHp.s:1027   .text:00000000000004c8 .LBE78
     /tmp/ccCg0dHp.s:1125   .text:00000000000004fc .LBB80
     /tmp/ccCg0dHp.s:1136   .text:0000000000000500 .LBE80
     /tmp/ccCg0dHp.s:5202   .debug_loc:0000000000000269 .LLST15
     /tmp/ccCg0dHp.s:1141   .text:0000000000000504 .LBB82
     /tmp/ccCg0dHp.s:1152   .text:0000000000000508 .LBE82
     /tmp/ccCg0dHp.s:5209   .debug_loc:000000000000028c .LLST16
     /tmp/ccCg0dHp.s:1118   .text:00000000000004f8 .LVL70
     /tmp/ccCg0dHp.s:1156   .text:0000000000000510 .LVL75
     /tmp/ccCg0dHp.s:1171   .text:000000000000051c .LVL76
     /tmp/ccCg0dHp.s:1179   .text:0000000000000528 .LVL77
     /tmp/ccCg0dHp.s:1187   .text:0000000000000534 .LVL78
     /tmp/ccCg0dHp.s:1195   .text:0000000000000540 .LVL79
     /tmp/ccCg0dHp.s:1203   .text:000000000000054c .LVL80
     /tmp/ccCg0dHp.s:1211   .text:0000000000000558 .LVL81
     /tmp/ccCg0dHp.s:1219   .text:0000000000000564 .LVL82
     /tmp/ccCg0dHp.s:1227   .text:0000000000000570 .LVL83
     /tmp/ccCg0dHp.s:1235   .text:000000000000057c .LVL84
GAS LISTING /tmp/ccCg0dHp.s 			page 54


     /tmp/ccCg0dHp.s:1243   .text:0000000000000588 .LVL85
     /tmp/ccCg0dHp.s:1251   .text:0000000000000594 .LVL86
     /tmp/ccCg0dHp.s:1259   .text:00000000000005a0 .LVL87
     /tmp/ccCg0dHp.s:1267   .text:00000000000005ac .LVL88
     /tmp/ccCg0dHp.s:1275   .text:00000000000005b8 .LVL89
     /tmp/ccCg0dHp.s:641    .text:0000000000000304 .LBB51
     /tmp/ccCg0dHp.s:657    .text:0000000000000310 .LBE51
     /tmp/ccCg0dHp.s:674    .text:0000000000000338 .LVL36
     /tmp/ccCg0dHp.s:689    .text:000000000000034c .LVL38
     /tmp/ccCg0dHp.s:972    .text:00000000000004a0 .LVL66
     /tmp/ccCg0dHp.s:201    .text:00000000000000cc .LFB31
     /tmp/ccCg0dHp.s:230    .text:00000000000000ec .LFE31
     /tmp/ccCg0dHp.s:132    .text:0000000000000084 .LFB30
     /tmp/ccCg0dHp.s:164    .text:00000000000000a4 .LFE30
     /tmp/ccCg0dHp.s:143    .text:0000000000000090 .LBB45
     /tmp/ccCg0dHp.s:155    .text:0000000000000098 .LBE45
     /tmp/ccCg0dHp.s:5216   .debug_loc:00000000000002af .LLST1
     /tmp/ccCg0dHp.s:94     .text:0000000000000064 .LFB29
     /tmp/ccCg0dHp.s:126    .text:0000000000000084 .LFE29
     /tmp/ccCg0dHp.s:105    .text:0000000000000070 .LBB43
     /tmp/ccCg0dHp.s:117    .text:0000000000000078 .LBE43
     /tmp/ccCg0dHp.s:5224   .debug_loc:00000000000002d3 .LLST0
     /tmp/ccCg0dHp.s:170    .text:00000000000000a4 .LFB28
     /tmp/ccCg0dHp.s:195    .text:00000000000000cc .LFE28
     /tmp/ccCg0dHp.s:184    .text:00000000000000bc .LVL9
     /tmp/ccCg0dHp.s:42     .text:0000000000000028 .LFB27
     /tmp/ccCg0dHp.s:88     .text:0000000000000064 .LFE27
     /tmp/ccCg0dHp.s:57     .text:0000000000000040 .LBB41
     /tmp/ccCg0dHp.s:69     .text:0000000000000044 .LBE41
     /tmp/ccCg0dHp.s:73     .text:000000000000004c .LVL3
     /tmp/ccCg0dHp.s:77     .text:0000000000000054 .LVL4
     /tmp/ccCg0dHp.s:5391   .debug_str:000000000000050e .LASF317
     /tmp/ccCg0dHp.s:5321   .debug_str:00000000000001f3 .LASF298
     /tmp/ccCg0dHp.s:5863   .debug_str:000000000000144c .LASF299
     /tmp/ccCg0dHp.s:5423   .debug_str:0000000000000603 .LASF300
     /tmp/ccCg0dHp.s:5683   .debug_str:0000000000000ec7 .LASF302
     /tmp/ccCg0dHp.s:5653   .debug_str:0000000000000dff .LASF301
     /tmp/ccCg0dHp.s:5635   .debug_str:0000000000000d8a .LASF303
     /tmp/ccCg0dHp.s:5389   .debug_str:0000000000000502 .LASF304
     /tmp/ccCg0dHp.s:5443   .debug_str:00000000000006df .LASF305
     /tmp/ccCg0dHp.s:5831   .debug_str:0000000000001343 .LASF306
     /tmp/ccCg0dHp.s:5747   .debug_str:00000000000010e0 .LASF307
     /tmp/ccCg0dHp.s:5877   .debug_str:00000000000014bb .LASF308
     /tmp/ccCg0dHp.s:5775   .debug_str:000000000000119f .LASF318
     /tmp/ccCg0dHp.s:5325   .debug_str:0000000000000220 .LASF319
     /tmp/ccCg0dHp.s:5547   .debug_str:0000000000000a4d .LASF309
     /tmp/ccCg0dHp.s:5373   .debug_str:0000000000000465 .LASF310
     /tmp/ccCg0dHp.s:558    .text:00000000000002ac .LVL31
     /tmp/ccCg0dHp.s:568    .text:00000000000002b4 .LVL32
     /tmp/ccCg0dHp.s:584    .text:00000000000002c0 .LVL33
     /tmp/ccCg0dHp.s:594    .text:00000000000002c8 .LVL34
     /tmp/ccCg0dHp.s:405    .text:00000000000001fc .LVL26
     /tmp/ccCg0dHp.s:353    .text:00000000000001d4 .LVL23
     /tmp/ccCg0dHp.s:655    .text:0000000000000310 .LVL35
     /tmp/ccCg0dHp.s:677    .text:000000000000033c .LVL37
     /tmp/ccCg0dHp.s:692    .text:0000000000000350 .LVL39
     /tmp/ccCg0dHp.s:711    .text:0000000000000378 .LVL40
GAS LISTING /tmp/ccCg0dHp.s 			page 55


     /tmp/ccCg0dHp.s:785    .text:00000000000003d0 .LVL50
     /tmp/ccCg0dHp.s:801    .text:00000000000003d4 .LVL51
     /tmp/ccCg0dHp.s:962    .text:0000000000000498 .LVL65
     /tmp/ccCg0dHp.s:975    .text:00000000000004a4 .LVL67
     /tmp/ccCg0dHp.s:988    .text:00000000000004a8 .LVL68
     /tmp/ccCg0dHp.s:831    .text:00000000000003f0 .LVL52
     /tmp/ccCg0dHp.s:841    .text:00000000000003f8 .LVL53
     /tmp/ccCg0dHp.s:865    .text:0000000000000434 .LVL55
     /tmp/ccCg0dHp.s:872    .text:0000000000000438 .LVL56
     /tmp/ccCg0dHp.s:883    .text:0000000000000444 .LVL57
     /tmp/ccCg0dHp.s:892    .text:0000000000000448 .LVL58
     /tmp/ccCg0dHp.s:899    .text:000000000000044c .LVL59
     /tmp/ccCg0dHp.s:908    .text:0000000000000450 .LVL60
     /tmp/ccCg0dHp.s:713    .text:000000000000037c .LVL41
     /tmp/ccCg0dHp.s:731    .text:0000000000000388 .LVL42
     /tmp/ccCg0dHp.s:745    .text:000000000000039c .LVL44
     /tmp/ccCg0dHp.s:769    .text:00000000000003b4 .LVL46
     /tmp/ccCg0dHp.s:737    .text:000000000000038c .LVL43
     /tmp/ccCg0dHp.s:765    .text:00000000000003ac .LVL45
     /tmp/ccCg0dHp.s:773    .text:00000000000003bc .LVL47
     /tmp/ccCg0dHp.s:946    .text:000000000000047c .LVL63
     /tmp/ccCg0dHp.s:1034   .text:00000000000004d8 .LVL69
     /tmp/ccCg0dHp.s:1124   .text:00000000000004fc .LVL71
     /tmp/ccCg0dHp.s:1133   .text:0000000000000500 .LVL72
     /tmp/ccCg0dHp.s:1140   .text:0000000000000504 .LVL73
     /tmp/ccCg0dHp.s:1149   .text:0000000000000508 .LVL74
     /tmp/ccCg0dHp.s:142    .text:0000000000000090 .LVL7
     /tmp/ccCg0dHp.s:152    .text:0000000000000098 .LVL8
     /tmp/ccCg0dHp.s:104    .text:0000000000000070 .LVL5
     /tmp/ccCg0dHp.s:114    .text:0000000000000078 .LVL6
     /tmp/ccCg0dHp.s:1310   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccCg0dHp.s:707    .text:0000000000000370 .LBB55
     /tmp/ccCg0dHp.s:787    .text:00000000000003d0 .LBE55
     /tmp/ccCg0dHp.s:949    .text:000000000000047c .LBB74
     /tmp/ccCg0dHp.s:966    .text:0000000000000498 .LBE74
     /tmp/ccCg0dHp.s:740    .text:0000000000000390 .LBB57
     /tmp/ccCg0dHp.s:775    .text:00000000000003bc .LBE57
     /tmp/ccCg0dHp.s:951    .text:000000000000047c .LBB58
     /tmp/ccCg0dHp.s:964    .text:0000000000000498 .LBE58
     /tmp/ccCg0dHp.s:790    .text:00000000000003d0 .LBB60
     /tmp/ccCg0dHp.s:918    .text:0000000000000458 .LBE60
     /tmp/ccCg0dHp.s:937    .text:000000000000046c .LBB73
     /tmp/ccCg0dHp.s:948    .text:000000000000047c .LBE73
     /tmp/ccCg0dHp.s:980    .text:00000000000004a4 .LBB75
     /tmp/ccCg0dHp.s:1158   .text:0000000000000510 .LBE75
     /tmp/ccCg0dHp.s:1166   .text:0000000000000514 .LBB84
     /tmp/ccCg0dHp.s:1278   .text:00000000000005bc .LBE84
     /tmp/ccCg0dHp.s:375    .gcc_except_table:0000000000000000 .LLSDA33

UNDEFINED SYMBOLS
_Z8userMainv
_ZN5Riscv14supervisorTrapEv
_ZN3PCB10initializeEv
_ZN8KConsole10initializeEv
_Z7kmallocm
_ZN3PCBnwEm
_ZN3PCBC1EPFvPvES0_S0_m
GAS LISTING /tmp/ccCg0dHp.s 			page 56


_ZN3PCB5startEv
_ZN3PCB10isFinishedEv
thread_dispatch
_Z11printStringPKc
_ZN3PCB10consolePCBE
_ZN3PCBdlEPv
_Unwind_Resume
__gxx_personality_v0
_Z7myTestsv
_ZN3PCB7runningE
_ZN3PCB10savedRegA4E
_ZN3PCB17threadExitHandlerEv
CONSOLE_STATUS
CONSOLE_TX_DATA
_ZN8KConsole11pendingGetcE
plic_claim
plic_complete
_ZN3PCB16timeSliceCounterE
_ZN12SleepPCBList13tryToWakePCBsEv
_ZN3PCB8dispatchEv
_ZN8KConsole17putCharacterInputEc
_ZN15MemoryAllocator15memAllocHandlerEv
_ZN15MemoryAllocator14memFreeHandlerEv
_ZN3PCB20threadMakePCBHandlerEv
_ZN3PCB19threadCreateHandlerEv
_ZN3PCB18threadStartHandlerEv
_ZN3PCB21threadDispatchHandlerEv
_ZN3PCB18threadSleepHandlerEv
_ZN10KSemaphore14semOpenHandlerEv
_ZN10KSemaphore14semWaitHandlerEv
_ZN10KSemaphore16semSignalHandlerEv
_ZN10KSemaphore15semCloseHandlerEv
_ZN8KConsole11getcHandlerEv
_ZN8KConsole11putcHandlerEv
_ZN8KConsole14getCharHandlerEv
