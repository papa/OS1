GAS LISTING /tmp/ccroTLCb.s 			page 1


   1              		.file	"Riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv15userMainWrapperEPv
   9              	_ZN5Riscv15userMainWrapperEPv:
  10              	.LFB50:
  11              		.file 1 "src/Riscv.cpp"
   1:src/Riscv.cpp **** //
   2:src/Riscv.cpp **** // Created by os on 4/27/22.
   3:src/Riscv.cpp **** //
   4:src/Riscv.cpp **** 
   5:src/Riscv.cpp **** #include "../h/Riscv.hpp"
   6:src/Riscv.cpp **** #include "../h/MemoryAllocator.hpp"
   7:src/Riscv.cpp **** #include "../h/PCB.hpp"
   8:src/Riscv.cpp **** #include "../lib/console.h"
   9:src/Riscv.cpp **** #include "../h/syscall_cpp.hpp"
  10:src/Riscv.cpp **** #include "../h/SleepPCBList.hpp"
  11:src/Riscv.cpp **** #include "../h/KConsole.hpp"
  12:src/Riscv.cpp **** #include "../h/Tests.hpp"
  13:src/Riscv.cpp **** #include "../test/userMain.hpp"
  14:src/Riscv.cpp **** 
  15:src/Riscv.cpp **** void Riscv::initSystem()
  16:src/Riscv.cpp **** {
  17:src/Riscv.cpp ****     w_stvec((uint64)&Riscv::supervisorTrap);
  18:src/Riscv.cpp ****     PCB::initialize();
  19:src/Riscv.cpp ****     KConsole::initialize();
  20:src/Riscv.cpp **** }
  21:src/Riscv.cpp **** 
  22:src/Riscv.cpp **** void Riscv::endSystem()
  23:src/Riscv.cpp **** {
  24:src/Riscv.cpp ****     //todo
  25:src/Riscv.cpp ****     Riscv::disableInterrupts();
  26:src/Riscv.cpp **** }
  27:src/Riscv.cpp **** 
  28:src/Riscv.cpp **** 
  29:src/Riscv.cpp **** void Riscv::enableInterrupts() {
  30:src/Riscv.cpp ****     ms_sstatus(Riscv::SSTATUS_SIE);
  31:src/Riscv.cpp **** }
  32:src/Riscv.cpp **** 
  33:src/Riscv.cpp **** void Riscv::disableInterrupts()
  34:src/Riscv.cpp **** {
  35:src/Riscv.cpp ****     mc_sstatus(Riscv::SSTATUS_SIE);
  36:src/Riscv.cpp **** }
  37:src/Riscv.cpp **** 
  38:src/Riscv.cpp **** void Riscv::popSppSpie()
  39:src/Riscv.cpp **** {
  40:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
  41:src/Riscv.cpp ****     __asm__ volatile ("sret");
  42:src/Riscv.cpp **** }
  43:src/Riscv.cpp **** 
  44:src/Riscv.cpp **** void Riscv::printString(const char *string)
  45:src/Riscv.cpp **** {
  46:src/Riscv.cpp ****     uint64 sstatus = r_sstatus();
  47:src/Riscv.cpp ****     mc_sstatus(SSTATUS_SIE);
GAS LISTING /tmp/ccroTLCb.s 			page 2


  48:src/Riscv.cpp ****     while (*string != '\0')
  49:src/Riscv.cpp ****     {
  50:src/Riscv.cpp ****         __putc(*string);
  51:src/Riscv.cpp ****         string++;
  52:src/Riscv.cpp ****     }
  53:src/Riscv.cpp ****     ms_sstatus(sstatus & SSTATUS_SIE ? SSTATUS_SIE : 0);
  54:src/Riscv.cpp **** }
  55:src/Riscv.cpp **** 
  56:src/Riscv.cpp **** void Riscv::printInteger(uint64 num)
  57:src/Riscv.cpp **** {
  58:src/Riscv.cpp ****     uint64 sstatus = r_sstatus();
  59:src/Riscv.cpp ****     mc_sstatus(SSTATUS_SIE);
  60:src/Riscv.cpp ****     static char digits[] = "0123456789";
  61:src/Riscv.cpp ****     char buf[16];
  62:src/Riscv.cpp ****     int i, neg;
  63:src/Riscv.cpp ****     uint x;
  64:src/Riscv.cpp **** 
  65:src/Riscv.cpp ****     neg = 0;
  66:src/Riscv.cpp ****     if(num < 0)
  67:src/Riscv.cpp ****     {
  68:src/Riscv.cpp ****         neg = 1;
  69:src/Riscv.cpp ****         x = -num;
  70:src/Riscv.cpp ****     }
  71:src/Riscv.cpp ****     else
  72:src/Riscv.cpp ****         x = num;
  73:src/Riscv.cpp **** 
  74:src/Riscv.cpp ****     i = 0;
  75:src/Riscv.cpp ****     do
  76:src/Riscv.cpp ****     {
  77:src/Riscv.cpp ****         buf[i++] = digits[x%10];
  78:src/Riscv.cpp ****     }while((x/=10) != 0);
  79:src/Riscv.cpp ****     if(neg)
  80:src/Riscv.cpp ****         buf[i++] = '-';
  81:src/Riscv.cpp **** 
  82:src/Riscv.cpp ****     while(--i >= 0)
  83:src/Riscv.cpp ****         __putc(buf[i]);
  84:src/Riscv.cpp **** 
  85:src/Riscv.cpp ****     __putc('\n');
  86:src/Riscv.cpp **** 
  87:src/Riscv.cpp ****     ms_sstatus(sstatus & SSTATUS_SIE ? SSTATUS_SIE : 0);
  88:src/Riscv.cpp **** }
  89:src/Riscv.cpp **** 
  90:src/Riscv.cpp **** void Riscv::handleSupervisorTrap()
  91:src/Riscv.cpp **** {
  92:src/Riscv.cpp ****     __asm__ volatile("mv %0, a4" : "=r"(PCB::savedRegA4));
  93:src/Riscv.cpp **** 
  94:src/Riscv.cpp ****     uint64 scause = Riscv::r_scause();
  95:src/Riscv.cpp **** 
  96:src/Riscv.cpp ****     switch(scause)
  97:src/Riscv.cpp ****     {
  98:src/Riscv.cpp ****         case timerInterrupt:
  99:src/Riscv.cpp ****         {
 100:src/Riscv.cpp ****             uint64 volatile sepc = Riscv::r_sepc();
 101:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 102:src/Riscv.cpp ****             mc_sip(Riscv::SIP_SSIP);
 103:src/Riscv.cpp ****             //Riscv::printString("timerInterrupt\n");
 104:src/Riscv.cpp ****             static uint64 total = 0;
GAS LISTING /tmp/ccroTLCb.s 			page 3


 105:src/Riscv.cpp ****             total++;
 106:src/Riscv.cpp **** 
 107:src/Riscv.cpp ****             PCB::timeSliceCounter++;
 108:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
 109:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
 110:src/Riscv.cpp ****             {
 111:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 112:src/Riscv.cpp ****                 PCB::dispatch();
 113:src/Riscv.cpp ****             }
 114:src/Riscv.cpp **** 
 115:src/Riscv.cpp ****             Riscv::w_sstatus(sstatus);
 116:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 117:src/Riscv.cpp **** 
 118:src/Riscv.cpp ****             break;
 119:src/Riscv.cpp ****         }
 120:src/Riscv.cpp ****         case hwInterrupt: // todo
 121:src/Riscv.cpp ****         {
 122:src/Riscv.cpp ****             //Riscv::printString("Hardware interrupt...\n");
 123:src/Riscv.cpp ****             console_handler();
 124:src/Riscv.cpp ****             break;
 125:src/Riscv.cpp ****         }
 126:src/Riscv.cpp ****         case operationInterrupt: // todo
 127:src/Riscv.cpp ****         {
 128:src/Riscv.cpp ****             break;
 129:src/Riscv.cpp ****         }
 130:src/Riscv.cpp ****         case addrReadInterrupt: // todo
 131:src/Riscv.cpp ****         {
 132:src/Riscv.cpp ****             break;
 133:src/Riscv.cpp ****         }
 134:src/Riscv.cpp ****         case addrWriteInterrupt: // todo
 135:src/Riscv.cpp ****         {
 136:src/Riscv.cpp ****             break;
 137:src/Riscv.cpp ****         }
 138:src/Riscv.cpp ****         case ecallSystemInterupt:
 139:src/Riscv.cpp ****         case ecallUserInterrupt: {
 140:src/Riscv.cpp ****             uint64 operation;
 141:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
 142:src/Riscv.cpp **** 
 143:src/Riscv.cpp ****             uint64 volatile sepc = Riscv::r_sepc() + 4;
 144:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 145:src/Riscv.cpp **** 
 146:src/Riscv.cpp ****             if (operation == MemoryAllocator::MEM_ALLOC)
 147:src/Riscv.cpp ****                 MemoryAllocator::memAllocHandler();
 148:src/Riscv.cpp ****             else if (operation == MemoryAllocator::MEM_FREE)
 149:src/Riscv.cpp ****                 MemoryAllocator::memFreeHandler();
 150:src/Riscv.cpp ****             else if (operation == PCB::THREAD_CREATE)
 151:src/Riscv.cpp ****                 PCB::threadCreateHandler();
 152:src/Riscv.cpp ****             else if (operation == PCB::THREAD_DISPATCH)
 153:src/Riscv.cpp ****                 PCB::threadDispatchHandler();
 154:src/Riscv.cpp ****             else if (operation == PCB::THREAD_EXIT)
 155:src/Riscv.cpp ****                 PCB::threadExitHandler();
 156:src/Riscv.cpp ****             else if (operation == PCB::TIME_SLEEP)
 157:src/Riscv.cpp ****                 PCB::threadSleepHandler();
 158:src/Riscv.cpp ****             else if (operation == KSemaphore::SEM_OPEN)
 159:src/Riscv.cpp ****                 KSemaphore::semOpenHandler();
 160:src/Riscv.cpp ****             else if (operation == KSemaphore::SEM_WAIT)
 161:src/Riscv.cpp ****                 KSemaphore::semWaitHandler();
GAS LISTING /tmp/ccroTLCb.s 			page 4


 162:src/Riscv.cpp ****             else if (operation == KSemaphore::SEM_SIGNAL)
 163:src/Riscv.cpp ****                 KSemaphore::semSignalHandler();
 164:src/Riscv.cpp ****             else if (operation == KSemaphore::SEM_CLOSE)
 165:src/Riscv.cpp ****                 KSemaphore::semCloseHandler();
 166:src/Riscv.cpp ****             else if (operation == KConsole::CONSOLE_GETC) {
 167:src/Riscv.cpp ****                 //todo
 168:src/Riscv.cpp ****             } else if (operation == KConsole::CONSOLE_PUTC) {
 169:src/Riscv.cpp ****                 //todo
 170:src/Riscv.cpp ****             }
 171:src/Riscv.cpp **** 
 172:src/Riscv.cpp ****             Riscv::w_sstatus(sstatus);
 173:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 174:src/Riscv.cpp **** 
 175:src/Riscv.cpp ****             break;
 176:src/Riscv.cpp ****         }
 177:src/Riscv.cpp ****     }
 178:src/Riscv.cpp **** }
 179:src/Riscv.cpp **** 
 180:src/Riscv.cpp **** void Riscv::kernelMain()
 181:src/Riscv.cpp **** {
 182:src/Riscv.cpp ****     initSystem();
 183:src/Riscv.cpp **** 
 184:src/Riscv.cpp ****     //enableInterrupts();
 185:src/Riscv.cpp **** 
 186:src/Riscv.cpp ****     PCB* userPCB = new PCB(&Riscv::userMainWrapper, 0, kmalloc(DEFAULT_STACK_SIZE), DEFAULT_TIME_SL
 187:src/Riscv.cpp ****     while(userPCB->getState() != PCB::FINISHED)
 188:src/Riscv.cpp ****     {
 189:src/Riscv.cpp ****         thread_dispatch();
 190:src/Riscv.cpp ****     }
 191:src/Riscv.cpp **** 
 192:src/Riscv.cpp ****     //myTests();
 193:src/Riscv.cpp **** 
 194:src/Riscv.cpp ****     //disableInterrupts();
 195:src/Riscv.cpp **** 
 196:src/Riscv.cpp ****     endSystem();
 197:src/Riscv.cpp **** 
 198:src/Riscv.cpp ****     Riscv::printString("End...");
 199:src/Riscv.cpp **** }
 200:src/Riscv.cpp **** 
 201:src/Riscv.cpp **** void Riscv::userMainWrapper(void* ) {
  12              		.loc 1 201 37
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23341100 		sd	ra,8(sp)
  17 0008 23308100 		sd	s0,0(sp)
  18              		.cfi_offset 1, -8
  19              		.cfi_offset 8, -16
  20 000c 13040101 		addi	s0,sp,16
  21              		.cfi_def_cfa 8, 0
 202:src/Riscv.cpp ****     userMain();
  22              		.loc 1 202 5
  23              		.loc 1 202 13 is_stmt 0
  24 0010 97000000 		call	_Z8userMainv@plt
  24      E7800000 
  25              	.LVL0:
 203:src/Riscv.cpp **** }
GAS LISTING /tmp/ccroTLCb.s 			page 5


  26              		.loc 1 203 1
  27 0018 83308100 		ld	ra,8(sp)
  28              		.cfi_restore 1
  29 001c 03340100 		ld	s0,0(sp)
  30              		.cfi_restore 8
  31              		.cfi_def_cfa 2, 16
  32 0020 13010101 		addi	sp,sp,16
  33              		.cfi_def_cfa_offset 0
  34 0024 67800000 		jr	ra
  35              		.cfi_endproc
  36              	.LFE50:
  38              		.align	2
  39              		.globl	_ZN5Riscv10initSystemEv
  41              	_ZN5Riscv10initSystemEv:
  42              	.LFB41:
  16:src/Riscv.cpp ****     w_stvec((uint64)&Riscv::supervisorTrap);
  43              		.loc 1 16 1 is_stmt 1
  44              		.cfi_startproc
  45 0028 130101FF 		addi	sp,sp,-16
  46              		.cfi_def_cfa_offset 16
  47 002c 23341100 		sd	ra,8(sp)
  48 0030 23308100 		sd	s0,0(sp)
  49              		.cfi_offset 1, -8
  50              		.cfi_offset 8, -16
  51 0034 13040101 		addi	s0,sp,16
  52              		.cfi_def_cfa 8, 0
  17:src/Riscv.cpp ****     PCB::initialize();
  53              		.loc 1 17 5
  17:src/Riscv.cpp ****     PCB::initialize();
  54              		.loc 1 17 12 is_stmt 0
  55 0038 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
  55      83B70700 
  56              	.LVL1:
  57              	.LBB48:
  58              	.LBB49:
  59              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 4/27/22.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_0_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_0_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** class Riscv
  11:src/../h/Riscv.hpp **** {
  12:src/../h/Riscv.hpp **** public:
  13:src/../h/Riscv.hpp ****     static void kernelMain();
  14:src/../h/Riscv.hpp **** 
  15:src/../h/Riscv.hpp ****     static void initSystem();
  16:src/../h/Riscv.hpp ****     static void endSystem();
  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp ****     static void userMainWrapper(void* p);
  19:src/../h/Riscv.hpp **** 
  20:src/../h/Riscv.hpp ****     static void enableInterrupts();
  21:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/ccroTLCb.s 			page 6


  22:src/../h/Riscv.hpp ****     static void disableInterrupts();
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp ****     static void printString(char const *string);
  25:src/../h/Riscv.hpp **** 
  26:src/../h/Riscv.hpp ****     static void printInteger(uint64 num);
  27:src/../h/Riscv.hpp **** 
  28:src/../h/Riscv.hpp ****     static void pushRegisters();
  29:src/../h/Riscv.hpp ****     static void popRegisters();
  30:src/../h/Riscv.hpp **** 
  31:src/../h/Riscv.hpp ****     static uint64 r_scause();
  32:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  33:src/../h/Riscv.hpp **** 
  34:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  35:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
  36:src/../h/Riscv.hpp **** 
  37:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  38:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  39:src/../h/Riscv.hpp **** 
  40:src/../h/Riscv.hpp ****     static uint64 r_stval();
  41:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  42:src/../h/Riscv.hpp **** 
  43:src/../h/Riscv.hpp ****     enum BitMaskSip
  44:src/../h/Riscv.hpp ****     {
  45:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  46:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  47:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9),
  48:src/../h/Riscv.hpp ****     };
  49:src/../h/Riscv.hpp **** 
  50:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  51:src/../h/Riscv.hpp **** 
  52:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  53:src/../h/Riscv.hpp **** 
  54:src/../h/Riscv.hpp ****     static uint64 r_sip();
  55:src/../h/Riscv.hpp **** 
  56:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  57:src/../h/Riscv.hpp **** 
  58:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  59:src/../h/Riscv.hpp ****     {
  60:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  61:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  62:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  63:src/../h/Riscv.hpp ****     };
  64:src/../h/Riscv.hpp **** 
  65:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  66:src/../h/Riscv.hpp **** 
  67:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  68:src/../h/Riscv.hpp **** 
  69:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  72:src/../h/Riscv.hpp **** 
  73:src/../h/Riscv.hpp ****     static void popSppSpie();
  74:src/../h/Riscv.hpp **** 
  75:src/../h/Riscv.hpp ****     static void supervisorTrap();
  76:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  77:src/../h/Riscv.hpp **** 
  78:src/../h/Riscv.hpp ****     static const uint64 bntOne = 1UL << 63;;
GAS LISTING /tmp/ccroTLCb.s 			page 7


  79:src/../h/Riscv.hpp ****     static const uint64 bntZero = 0UL;
  80:src/../h/Riscv.hpp ****     static const uint64 timerInterrupt = bntOne + 1UL;
  81:src/../h/Riscv.hpp ****     static const uint64 hwInterrupt = bntOne + 9UL;
  82:src/../h/Riscv.hpp ****     static const uint64 operationInterrupt = bntZero + 2UL;
  83:src/../h/Riscv.hpp ****     static const uint64 addrReadInterrupt = bntZero + 5UL;
  84:src/../h/Riscv.hpp ****     static const uint64 addrWriteInterrupt = bntZero + 7UL;
  85:src/../h/Riscv.hpp ****     static const uint64 ecallUserInterrupt = bntZero + 8UL;
  86:src/../h/Riscv.hpp ****     static const uint64 ecallSystemInterupt = bntZero + 9UL;
  87:src/../h/Riscv.hpp **** };
  88:src/../h/Riscv.hpp **** 
  89:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause() {
  90:src/../h/Riscv.hpp ****     uint64 volatile scause;
  91:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
  92:src/../h/Riscv.hpp ****     return scause;
  93:src/../h/Riscv.hpp **** }
  94:src/../h/Riscv.hpp **** 
  95:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
  96:src/../h/Riscv.hpp ****     __asm__ volatile("csrw scause, %0" : :"r"(scause));
  97:src/../h/Riscv.hpp **** }
  98:src/../h/Riscv.hpp **** 
  99:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc() {
 100:src/../h/Riscv.hpp ****     uint64 volatile sepc;
 101:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 102:src/../h/Riscv.hpp ****     return sepc;
 103:src/../h/Riscv.hpp **** }
 104:src/../h/Riscv.hpp **** 
 105:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
 106:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sepc, %0" : :"r"(sepc));
 107:src/../h/Riscv.hpp **** }
 108:src/../h/Riscv.hpp **** 
 109:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec() {
 110:src/../h/Riscv.hpp ****     uint64 volatile stvec;
 111:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, stvec" : "=r"(stvec));
 112:src/../h/Riscv.hpp ****     return stvec;
 113:src/../h/Riscv.hpp **** }
 114:src/../h/Riscv.hpp **** 
 115:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 116:src/../h/Riscv.hpp ****     __asm__ volatile("csrw stvec, %0" : :"r"(stvec));
  60              		.loc 2 116 5 is_stmt 1
  61              		.loc 2 116 53 is_stmt 0
  62              	#APP
  63              	# 116 "src/../h/Riscv.hpp" 1
 117              	}
  64              		csrw stvec, a5
  65              	# 0 "" 2
  66              	.LVL2:
  67              	#NO_APP
  68              	.LBE49:
  69              	.LBE48:
  18:src/Riscv.cpp ****     KConsole::initialize();
  70              		.loc 1 18 5 is_stmt 1
  18:src/Riscv.cpp ****     KConsole::initialize();
  71              		.loc 1 18 20 is_stmt 0
  72 0044 97000000 		call	_ZN3PCB10initializeEv@plt
  72      E7800000 
  73              	.LVL3:
  19:src/Riscv.cpp **** }
GAS LISTING /tmp/ccroTLCb.s 			page 8


  74              		.loc 1 19 5 is_stmt 1
  19:src/Riscv.cpp **** }
  75              		.loc 1 19 25 is_stmt 0
  76 004c 97000000 		call	_ZN8KConsole10initializeEv@plt
  76      E7800000 
  77              	.LVL4:
  20:src/Riscv.cpp **** 
  78              		.loc 1 20 1
  79 0054 83308100 		ld	ra,8(sp)
  80              		.cfi_restore 1
  81 0058 03340100 		ld	s0,0(sp)
  82              		.cfi_restore 8
  83              		.cfi_def_cfa 2, 16
  84 005c 13010101 		addi	sp,sp,16
  85              		.cfi_def_cfa_offset 0
  86 0060 67800000 		jr	ra
  87              		.cfi_endproc
  88              	.LFE41:
  90              		.align	2
  91              		.globl	_ZN5Riscv16enableInterruptsEv
  93              	_ZN5Riscv16enableInterruptsEv:
  94              	.LFB43:
  29:src/Riscv.cpp ****     ms_sstatus(Riscv::SSTATUS_SIE);
  95              		.loc 1 29 32 is_stmt 1
  96              		.cfi_startproc
  97 0064 130101FF 		addi	sp,sp,-16
  98              		.cfi_def_cfa_offset 16
  99 0068 23348100 		sd	s0,8(sp)
 100              		.cfi_offset 8, -8
 101 006c 13040101 		addi	s0,sp,16
 102              		.cfi_def_cfa 8, 0
  30:src/Riscv.cpp **** }
 103              		.loc 1 30 5
 104              	.LVL5:
 105              	.LBB50:
 106              	.LBB51:
 118:src/../h/Riscv.hpp **** 
 119:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stval() {
 120:src/../h/Riscv.hpp ****     uint64 volatile stval;
 121:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, stval" : "=r"(stval));
 122:src/../h/Riscv.hpp ****     return stval;
 123:src/../h/Riscv.hpp **** }
 124:src/../h/Riscv.hpp **** 
 125:src/../h/Riscv.hpp **** inline void Riscv::w_stval(uint64 stval) {
 126:src/../h/Riscv.hpp ****     __asm__ volatile("csrw stval, %0" : :"r"(stval));
 127:src/../h/Riscv.hpp **** }
 128:src/../h/Riscv.hpp **** 
 129:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 130:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sip, %0" : :"r"(mask));
 131:src/../h/Riscv.hpp **** }
 132:src/../h/Riscv.hpp **** 
 133:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 134:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sip, %0" : :"r"(mask));
 135:src/../h/Riscv.hpp **** }
 136:src/../h/Riscv.hpp **** 
 137:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip() {
 138:src/../h/Riscv.hpp ****     uint64 volatile sip;
GAS LISTING /tmp/ccroTLCb.s 			page 9


 139:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sip" : "=r"(sip));
 140:src/../h/Riscv.hpp ****     return sip;
 141:src/../h/Riscv.hpp **** }
 142:src/../h/Riscv.hpp **** 
 143:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 144:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sip, %0" : :"r"(sip));
 145:src/../h/Riscv.hpp **** }
 146:src/../h/Riscv.hpp **** 
 147:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 148:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sstatus, %0" : :"r"(mask));
 107              		.loc 2 148 5
 108              		.loc 2 148 54 is_stmt 0
 109 0070 93072000 		li	a5,2
 110              	#APP
 111              	# 148 "src/../h/Riscv.hpp" 1
 149              	}
 112              		csrs sstatus, a5
 113              	# 0 "" 2
 114              	.LVL6:
 115              	#NO_APP
 116              	.LBE51:
 117              	.LBE50:
  31:src/Riscv.cpp **** 
 118              		.loc 1 31 1
 119 0078 03348100 		ld	s0,8(sp)
 120              		.cfi_restore 8
 121              		.cfi_def_cfa 2, 16
 122 007c 13010101 		addi	sp,sp,16
 123              		.cfi_def_cfa_offset 0
 124 0080 67800000 		jr	ra
 125              		.cfi_endproc
 126              	.LFE43:
 128              		.align	2
 129              		.globl	_ZN5Riscv17disableInterruptsEv
 131              	_ZN5Riscv17disableInterruptsEv:
 132              	.LFB44:
  34:src/Riscv.cpp ****     mc_sstatus(Riscv::SSTATUS_SIE);
 133              		.loc 1 34 1 is_stmt 1
 134              		.cfi_startproc
 135 0084 130101FF 		addi	sp,sp,-16
 136              		.cfi_def_cfa_offset 16
 137 0088 23348100 		sd	s0,8(sp)
 138              		.cfi_offset 8, -8
 139 008c 13040101 		addi	s0,sp,16
 140              		.cfi_def_cfa 8, 0
  35:src/Riscv.cpp **** }
 141              		.loc 1 35 5
 142              	.LVL7:
 143              	.LBB52:
 144              	.LBB53:
 150:src/../h/Riscv.hpp **** 
 151:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 152:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sstatus, %0" : :"r"(mask));
 145              		.loc 2 152 5
 146              		.loc 2 152 54 is_stmt 0
 147 0090 93072000 		li	a5,2
 148              	#APP
GAS LISTING /tmp/ccroTLCb.s 			page 10


 149              	# 152 "src/../h/Riscv.hpp" 1
 153              	}
 150              		csrc sstatus, a5
 151              	# 0 "" 2
 152              	.LVL8:
 153              	#NO_APP
 154              	.LBE53:
 155              	.LBE52:
  36:src/Riscv.cpp **** 
 156              		.loc 1 36 1
 157 0098 03348100 		ld	s0,8(sp)
 158              		.cfi_restore 8
 159              		.cfi_def_cfa 2, 16
 160 009c 13010101 		addi	sp,sp,16
 161              		.cfi_def_cfa_offset 0
 162 00a0 67800000 		jr	ra
 163              		.cfi_endproc
 164              	.LFE44:
 166              		.align	2
 167              		.globl	_ZN5Riscv9endSystemEv
 169              	_ZN5Riscv9endSystemEv:
 170              	.LFB42:
  23:src/Riscv.cpp ****     //todo
 171              		.loc 1 23 1 is_stmt 1
 172              		.cfi_startproc
 173 00a4 130101FF 		addi	sp,sp,-16
 174              		.cfi_def_cfa_offset 16
 175 00a8 23341100 		sd	ra,8(sp)
 176 00ac 23308100 		sd	s0,0(sp)
 177              		.cfi_offset 1, -8
 178              		.cfi_offset 8, -16
 179 00b0 13040101 		addi	s0,sp,16
 180              		.cfi_def_cfa 8, 0
  25:src/Riscv.cpp **** }
 181              		.loc 1 25 5
  25:src/Riscv.cpp **** }
 182              		.loc 1 25 29 is_stmt 0
 183 00b4 97000000 		call	_ZN5Riscv17disableInterruptsEv
 183      E7800000 
 184              	.LVL9:
  26:src/Riscv.cpp **** 
 185              		.loc 1 26 1
 186 00bc 83308100 		ld	ra,8(sp)
 187              		.cfi_restore 1
 188 00c0 03340100 		ld	s0,0(sp)
 189              		.cfi_restore 8
 190              		.cfi_def_cfa 2, 16
 191 00c4 13010101 		addi	sp,sp,16
 192              		.cfi_def_cfa_offset 0
 193 00c8 67800000 		jr	ra
 194              		.cfi_endproc
 195              	.LFE42:
 197              		.align	2
 198              		.globl	_ZN5Riscv10popSppSpieEv
 200              	_ZN5Riscv10popSppSpieEv:
 201              	.LFB45:
  39:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
GAS LISTING /tmp/ccroTLCb.s 			page 11


 202              		.loc 1 39 1 is_stmt 1
 203              		.cfi_startproc
 204 00cc 130101FF 		addi	sp,sp,-16
 205              		.cfi_def_cfa_offset 16
 206 00d0 23348100 		sd	s0,8(sp)
 207              		.cfi_offset 8, -8
 208 00d4 13040101 		addi	s0,sp,16
 209              		.cfi_def_cfa 8, 0
  40:src/Riscv.cpp ****     __asm__ volatile ("sret");
 210              		.loc 1 40 5
  40:src/Riscv.cpp ****     __asm__ volatile ("sret");
 211              		.loc 1 40 39 is_stmt 0
 212              	#APP
 213              	# 40 "src/Riscv.cpp" 1
  41:src/Riscv.cpp **** }
 214              		csrw sepc, ra
 215              	# 0 "" 2
 216              		.loc 1 41 5 is_stmt 1
  41:src/Riscv.cpp **** }
 217              		.loc 1 41 30 is_stmt 0
 218              	# 41 "src/Riscv.cpp" 1
  42:src/Riscv.cpp **** 
 219              		sret
 220              	# 0 "" 2
 221              		.loc 1 42 1
 222              	#NO_APP
 223 00e0 03348100 		ld	s0,8(sp)
 224              		.cfi_restore 8
 225              		.cfi_def_cfa 2, 16
 226 00e4 13010101 		addi	sp,sp,16
 227              		.cfi_def_cfa_offset 0
 228 00e8 67800000 		jr	ra
 229              		.cfi_endproc
 230              	.LFE45:
 232              		.align	2
 233              		.globl	_ZN5Riscv11printStringEPKc
 235              	_ZN5Riscv11printStringEPKc:
 236              	.LFB46:
  45:src/Riscv.cpp ****     uint64 sstatus = r_sstatus();
 237              		.loc 1 45 1 is_stmt 1
 238              		.cfi_startproc
 239              	.LVL10:
 240 00ec 130101FD 		addi	sp,sp,-48
 241              		.cfi_def_cfa_offset 48
 242 00f0 23341102 		sd	ra,40(sp)
 243 00f4 23308102 		sd	s0,32(sp)
 244 00f8 233C9100 		sd	s1,24(sp)
 245 00fc 23382101 		sd	s2,16(sp)
 246              		.cfi_offset 1, -8
 247              		.cfi_offset 8, -16
 248              		.cfi_offset 9, -24
 249              		.cfi_offset 18, -32
 250 0100 13040103 		addi	s0,sp,48
 251              		.cfi_def_cfa 8, 0
 252 0104 93040500 		mv	s1,a0
  46:src/Riscv.cpp ****     mc_sstatus(SSTATUS_SIE);
 253              		.loc 1 46 5
GAS LISTING /tmp/ccroTLCb.s 			page 12


 254              	.LBB54:
 255              	.LBB55:
 154:src/../h/Riscv.hpp **** 
 155:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sstatus() {
 156:src/../h/Riscv.hpp ****     uint64 volatile sstatus;
 256              		.loc 2 156 5
 157:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 257              		.loc 2 157 5
 258              		.loc 2 157 57 is_stmt 0
 259              	#APP
 260              	# 157 "src/../h/Riscv.hpp" 1
 158              	    return sstatus;
 261              		csrr a5, sstatus
 262              	# 0 "" 2
 263              	#NO_APP
 264 010c 233CF4FC 		sd	a5,-40(s0)
 265              		.loc 2 158 5 is_stmt 1
 266              		.loc 2 158 12 is_stmt 0
 267 0110 033984FD 		ld	s2,-40(s0)
 268              	.LVL11:
 269              	.LBE55:
 270              	.LBE54:
  47:src/Riscv.cpp ****     while (*string != '\0')
 271              		.loc 1 47 5 is_stmt 1
 272              	.LBB56:
 273              	.LBB57:
 152:src/../h/Riscv.hpp **** }
 274              		.loc 2 152 5
 152:src/../h/Riscv.hpp **** }
 275              		.loc 2 152 54 is_stmt 0
 276 0114 93072000 		li	a5,2
 277              	#APP
 278              	# 152 "src/../h/Riscv.hpp" 1
 279              		csrc sstatus, a5
 280              	# 0 "" 2
 281              	.LVL12:
 282              	#NO_APP
 283              	.L15:
 284              	.LBE57:
 285              	.LBE56:
  48:src/Riscv.cpp ****     {
 286              		.loc 1 48 5 is_stmt 1
  48:src/Riscv.cpp ****     {
 287              		.loc 1 48 20
  48:src/Riscv.cpp ****     {
 288              		.loc 1 48 12 is_stmt 0
 289 011c 03C50400 		lbu	a0,0(s1)
  48:src/Riscv.cpp ****     {
 290              		.loc 1 48 20
 291 0120 630A0500 		beqz	a0,.L14
  50:src/Riscv.cpp ****         string++;
 292              		.loc 1 50 9 is_stmt 1
  50:src/Riscv.cpp ****         string++;
 293              		.loc 1 50 15 is_stmt 0
 294 0124 97000000 		call	__putc@plt
 294      E7800000 
 295              	.LVL13:
GAS LISTING /tmp/ccroTLCb.s 			page 13


  51:src/Riscv.cpp ****     }
 296              		.loc 1 51 9 is_stmt 1
  51:src/Riscv.cpp ****     }
 297              		.loc 1 51 15 is_stmt 0
 298 012c 93841400 		addi	s1,s1,1
 299              	.LVL14:
  48:src/Riscv.cpp ****     {
 300              		.loc 1 48 5
 301 0130 6FF0DFFE 		j	.L15
 302              	.L14:
  53:src/Riscv.cpp **** }
 303              		.loc 1 53 5 is_stmt 1
  53:src/Riscv.cpp **** }
 304              		.loc 1 53 38 is_stmt 0
 305 0134 1B090900 		sext.w	s2,s2
 306              	.LVL15:
  53:src/Riscv.cpp **** }
 307              		.loc 1 53 15
 308 0138 13792900 		andi	s2,s2,2
 309 013c 1B090900 		sext.w	s2,s2
 310              	.LVL16:
 311              	.LBB58:
 312              	.LBB59:
 148:src/../h/Riscv.hpp **** }
 313              		.loc 2 148 5 is_stmt 1
 148:src/../h/Riscv.hpp **** }
 314              		.loc 2 148 54 is_stmt 0
 315              	#APP
 316              	# 148 "src/../h/Riscv.hpp" 1
 317              		csrs sstatus, s2
 318              	# 0 "" 2
 319              	.LVL17:
 320              	#NO_APP
 321              	.LBE59:
 322              	.LBE58:
  54:src/Riscv.cpp **** 
 323              		.loc 1 54 1
 324 0144 83308102 		ld	ra,40(sp)
 325              		.cfi_restore 1
 326 0148 03340102 		ld	s0,32(sp)
 327              		.cfi_restore 8
 328              		.cfi_def_cfa 2, 48
 329 014c 83348101 		ld	s1,24(sp)
 330              		.cfi_restore 9
 331              	.LVL18:
 332 0150 03390101 		ld	s2,16(sp)
 333              		.cfi_restore 18
 334 0154 13010103 		addi	sp,sp,48
 335              		.cfi_def_cfa_offset 0
 336 0158 67800000 		jr	ra
 337              		.cfi_endproc
 338              	.LFE46:
 340              		.align	2
 341              		.globl	_ZN5Riscv12printIntegerEm
 343              	_ZN5Riscv12printIntegerEm:
 344              	.LFB47:
  57:src/Riscv.cpp ****     uint64 sstatus = r_sstatus();
GAS LISTING /tmp/ccroTLCb.s 			page 14


 345              		.loc 1 57 1 is_stmt 1
 346              		.cfi_startproc
 347              	.LVL19:
 348 015c 130101FC 		addi	sp,sp,-64
 349              		.cfi_def_cfa_offset 64
 350 0160 233C1102 		sd	ra,56(sp)
 351 0164 23388102 		sd	s0,48(sp)
 352 0168 23349102 		sd	s1,40(sp)
 353 016c 23302103 		sd	s2,32(sp)
 354              		.cfi_offset 1, -8
 355              		.cfi_offset 8, -16
 356              		.cfi_offset 9, -24
 357              		.cfi_offset 18, -32
 358 0170 13040104 		addi	s0,sp,64
 359              		.cfi_def_cfa 8, 0
  58:src/Riscv.cpp ****     mc_sstatus(SSTATUS_SIE);
 360              		.loc 1 58 5
 361              	.LBB60:
 362              	.LBB61:
 156:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 363              		.loc 2 156 5
 157:src/../h/Riscv.hpp ****     return sstatus;
 364              		.loc 2 157 5
 157:src/../h/Riscv.hpp ****     return sstatus;
 365              		.loc 2 157 57 is_stmt 0
 366              	#APP
 367              	# 157 "src/../h/Riscv.hpp" 1
 368              		csrr a5, sstatus
 369              	# 0 "" 2
 370              	#NO_APP
 371 0178 2334F4FC 		sd	a5,-56(s0)
 372              		.loc 2 158 5 is_stmt 1
 373              		.loc 2 158 12 is_stmt 0
 374 017c 033984FC 		ld	s2,-56(s0)
 375              	.LVL20:
 376              	.LBE61:
 377              	.LBE60:
  59:src/Riscv.cpp ****     static char digits[] = "0123456789";
 378              		.loc 1 59 5 is_stmt 1
 379              	.LBB62:
 380              	.LBB63:
 152:src/../h/Riscv.hpp **** }
 381              		.loc 2 152 5
 152:src/../h/Riscv.hpp **** }
 382              		.loc 2 152 54 is_stmt 0
 383 0180 93072000 		li	a5,2
 384              	#APP
 385              	# 152 "src/../h/Riscv.hpp" 1
 386              		csrc sstatus, a5
 387              	# 0 "" 2
 388              	.LVL21:
 389              	#NO_APP
 390              	.LBE63:
 391              	.LBE62:
  60:src/Riscv.cpp ****     char buf[16];
 392              		.loc 1 60 5 is_stmt 1
  61:src/Riscv.cpp ****     int i, neg;
GAS LISTING /tmp/ccroTLCb.s 			page 15


 393              		.loc 1 61 5
  62:src/Riscv.cpp ****     uint x;
 394              		.loc 1 62 5
  63:src/Riscv.cpp **** 
 395              		.loc 1 63 5
  65:src/Riscv.cpp ****     if(num < 0)
 396              		.loc 1 65 5
  66:src/Riscv.cpp ****     {
 397              		.loc 1 66 5
  72:src/Riscv.cpp **** 
 398              		.loc 1 72 9
  72:src/Riscv.cpp **** 
 399              		.loc 1 72 11 is_stmt 0
 400 0188 1B050500 		sext.w	a0,a0
 401              	.LVL22:
  74:src/Riscv.cpp ****     do
 402              		.loc 1 74 5 is_stmt 1
  74:src/Riscv.cpp ****     do
 403              		.loc 1 74 7 is_stmt 0
 404 018c 93040000 		li	s1,0
 405              	.LVL23:
 406              	.L18:
  75:src/Riscv.cpp ****     {
 407              		.loc 1 75 5 is_stmt 1
  77:src/Riscv.cpp ****     }while((x/=10) != 0);
 408              		.loc 1 77 9
  77:src/Riscv.cpp ****     }while((x/=10) != 0);
 409              		.loc 1 77 28 is_stmt 0
 410 0190 1306A000 		li	a2,10
 411 0194 3B77C502 		remuw	a4,a0,a2
 412              	.LVL24:
  77:src/Riscv.cpp ****     }while((x/=10) != 0);
 413              		.loc 1 77 31
 414 0198 93160702 		slli	a3,a4,32
 415 019c 93D60602 		srli	a3,a3,32
 416 01a0 17070000 		lla	a4,.LANCHOR0
 416      13070700 
 417 01a8 3307D700 		add	a4,a4,a3
 418 01ac 03470700 		lbu	a4,0(a4)
  77:src/Riscv.cpp ****     }while((x/=10) != 0);
 419              		.loc 1 77 18
 420 01b0 930604FE 		addi	a3,s0,-32
 421 01b4 B3879600 		add	a5,a3,s1
 422 01b8 9B841400 		addiw	s1,s1,1
 423              	.LVL25:
 424 01bc 2388E7FE 		sb	a4,-16(a5)
  78:src/Riscv.cpp ****     if(neg)
 425              		.loc 1 78 20 is_stmt 1
 426 01c0 1B070500 		sext.w	a4,a0
  78:src/Riscv.cpp ****     if(neg)
 427              		.loc 1 78 14 is_stmt 0
 428 01c4 3B55C502 		divuw	a0,a0,a2
 429              	.LVL26:
  78:src/Riscv.cpp ****     if(neg)
 430              		.loc 1 78 20
 431 01c8 93079000 		li	a5,9
 432 01cc E3E2E7FC 		bgtu	a4,a5,.L18
GAS LISTING /tmp/ccroTLCb.s 			page 16


 433              	.LVL27:
 434              	.L20:
  82:src/Riscv.cpp ****         __putc(buf[i]);
 435              		.loc 1 82 5 is_stmt 1
  82:src/Riscv.cpp ****         __putc(buf[i]);
 436              		.loc 1 82 15
 437 01d0 9B84F4FF 		addiw	s1,s1,-1
 438              	.LVL28:
 439 01d4 63CE0400 		bltz	s1,.L19
  83:src/Riscv.cpp **** 
 440              		.loc 1 83 9
  83:src/Riscv.cpp **** 
 441              		.loc 1 83 15 is_stmt 0
 442 01d8 930704FE 		addi	a5,s0,-32
 443 01dc B3879700 		add	a5,a5,s1
 444 01e0 03C507FF 		lbu	a0,-16(a5)
 445 01e4 97000000 		call	__putc@plt
 445      E7800000 
 446              	.LVL29:
 447 01ec 6FF05FFE 		j	.L20
 448              	.L19:
  85:src/Riscv.cpp **** 
 449              		.loc 1 85 5 is_stmt 1
  85:src/Riscv.cpp **** 
 450              		.loc 1 85 11 is_stmt 0
 451 01f0 1305A000 		li	a0,10
 452 01f4 97000000 		call	__putc@plt
 452      E7800000 
 453              	.LVL30:
  87:src/Riscv.cpp **** }
 454              		.loc 1 87 5 is_stmt 1
  87:src/Riscv.cpp **** }
 455              		.loc 1 87 38 is_stmt 0
 456 01fc 1B090900 		sext.w	s2,s2
 457              	.LVL31:
  87:src/Riscv.cpp **** }
 458              		.loc 1 87 15
 459 0200 13792900 		andi	s2,s2,2
 460 0204 1B090900 		sext.w	s2,s2
 461              	.LVL32:
 462              	.LBB64:
 463              	.LBB65:
 148:src/../h/Riscv.hpp **** }
 464              		.loc 2 148 5 is_stmt 1
 148:src/../h/Riscv.hpp **** }
 465              		.loc 2 148 54 is_stmt 0
 466              	#APP
 467              	# 148 "src/../h/Riscv.hpp" 1
 468              		csrs sstatus, s2
 469              	# 0 "" 2
 470              	.LVL33:
 471              	#NO_APP
 472              	.LBE65:
 473              	.LBE64:
  88:src/Riscv.cpp **** 
 474              		.loc 1 88 1
 475 020c 83308103 		ld	ra,56(sp)
GAS LISTING /tmp/ccroTLCb.s 			page 17


 476              		.cfi_restore 1
 477 0210 03340103 		ld	s0,48(sp)
 478              		.cfi_restore 8
 479              		.cfi_def_cfa 2, 64
 480 0214 83348102 		ld	s1,40(sp)
 481              		.cfi_restore 9
 482 0218 03390102 		ld	s2,32(sp)
 483              		.cfi_restore 18
 484 021c 13010104 		addi	sp,sp,64
 485              		.cfi_def_cfa_offset 0
 486 0220 67800000 		jr	ra
 487              		.cfi_endproc
 488              	.LFE47:
 490              		.align	2
 491              		.globl	_ZN5Riscv20handleSupervisorTrapEv
 493              	_ZN5Riscv20handleSupervisorTrapEv:
 494              	.LFB48:
  91:src/Riscv.cpp ****     __asm__ volatile("mv %0, a4" : "=r"(PCB::savedRegA4));
 495              		.loc 1 91 1 is_stmt 1
 496              		.cfi_startproc
 497 0224 130101F9 		addi	sp,sp,-112
 498              		.cfi_def_cfa_offset 112
 499 0228 23341106 		sd	ra,104(sp)
 500 022c 23308106 		sd	s0,96(sp)
 501 0230 233C9104 		sd	s1,88(sp)
 502              		.cfi_offset 1, -8
 503              		.cfi_offset 8, -16
 504              		.cfi_offset 9, -24
 505 0234 13040107 		addi	s0,sp,112
 506              		.cfi_def_cfa 8, 0
  92:src/Riscv.cpp **** 
 507              		.loc 1 92 5
  92:src/Riscv.cpp **** 
 508              		.loc 1 92 58 is_stmt 0
 509              	#APP
 510              	# 92 "src/Riscv.cpp" 1
 511              		mv a4, a4
 512              	# 0 "" 2
 513              	#NO_APP
 514 023c 97070000 		la	a5,_ZN3PCB10savedRegA4E
 514      83B70700 
 515 0244 23B0E700 		sd	a4,0(a5)
  94:src/Riscv.cpp **** 
 516              		.loc 1 94 5 is_stmt 1
 517              	.LBB66:
 518              	.LBB67:
  90:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
 519              		.loc 2 90 5
  91:src/../h/Riscv.hpp ****     return scause;
 520              		.loc 2 91 5
  91:src/../h/Riscv.hpp ****     return scause;
 521              		.loc 2 91 55 is_stmt 0
 522              	#APP
 523              	# 91 "src/../h/Riscv.hpp" 1
 524              		csrr a5, scause
 525              	# 0 "" 2
 526              	#NO_APP
GAS LISTING /tmp/ccroTLCb.s 			page 18


 527 024c 233CF4FA 		sd	a5,-72(s0)
  92:src/../h/Riscv.hpp **** }
 528              		.loc 2 92 5 is_stmt 1
  92:src/../h/Riscv.hpp **** }
 529              		.loc 2 92 12 is_stmt 0
 530 0250 833784FB 		ld	a5,-72(s0)
 531              	.LVL34:
 532              	.LBE67:
 533              	.LBE66:
  96:src/Riscv.cpp ****     {
 534              		.loc 1 96 5 is_stmt 1
 535              	.LBB68:
 536 0254 1307F0FF 		li	a4,-1
 537 0258 1317F703 		slli	a4,a4,63
 538 025c 13071700 		addi	a4,a4,1
 539 0260 6380E70C 		beq	a5,a4,.L23
 540 0264 1307F0FF 		li	a4,-1
 541 0268 1317F703 		slli	a4,a4,63
 542 026c 13071700 		addi	a4,a4,1
 543 0270 636AF708 		bgtu	a5,a4,.L24
 544 0274 938787FF 		addi	a5,a5,-8
 545              	.LVL35:
 546 0278 13071000 		li	a4,1
 547 027c 6362F712 		bgtu	a5,a4,.L22
 548              	.LBB69:
 138:src/Riscv.cpp ****         case ecallUserInterrupt: {
 549              		.loc 1 138 9
 139:src/Riscv.cpp ****             uint64 operation;
 550              		.loc 1 139 9
 139:src/Riscv.cpp ****             uint64 operation;
 551              		.loc 1 139 34
 552              	.LBB70:
 140:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
 553              		.loc 1 140 13
 141:src/Riscv.cpp **** 
 554              		.loc 1 141 13
 141:src/Riscv.cpp **** 
 555              		.loc 1 141 61 is_stmt 0
 556              	#APP
 557              	# 141 "src/Riscv.cpp" 1
 558              		mv a5, a0
 559              	# 0 "" 2
 560              	.LVL36:
 143:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 561              		.loc 1 143 13 is_stmt 1
 562              	#NO_APP
 563              	.LBB71:
 564              	.LBB72:
 100:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 565              		.loc 2 100 5
 101:src/../h/Riscv.hpp ****     return sepc;
 566              		.loc 2 101 5
 101:src/../h/Riscv.hpp ****     return sepc;
 567              		.loc 2 101 51 is_stmt 0
 568              	#APP
 569              	# 101 "src/../h/Riscv.hpp" 1
 570              		csrr a4, sepc
GAS LISTING /tmp/ccroTLCb.s 			page 19


 571              	# 0 "" 2
 572              	#NO_APP
 573 0288 233CE4FC 		sd	a4,-40(s0)
 102:src/../h/Riscv.hpp **** }
 574              		.loc 2 102 5 is_stmt 1
 102:src/../h/Riscv.hpp **** }
 575              		.loc 2 102 12 is_stmt 0
 576 028c 033784FD 		ld	a4,-40(s0)
 577              	.LBE72:
 578              	.LBE71:
 143:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 579              		.loc 1 143 52
 580 0290 13074700 		addi	a4,a4,4
 143:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 581              		.loc 1 143 54
 582 0294 2334E4FA 		sd	a4,-88(s0)
 144:src/Riscv.cpp **** 
 583              		.loc 1 144 13 is_stmt 1
 584              	.LBB73:
 585              	.LBB74:
 156:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 586              		.loc 2 156 5
 157:src/../h/Riscv.hpp ****     return sstatus;
 587              		.loc 2 157 5
 157:src/../h/Riscv.hpp ****     return sstatus;
 588              		.loc 2 157 57 is_stmt 0
 589              	#APP
 590              	# 157 "src/../h/Riscv.hpp" 1
 591              		csrr a4, sstatus
 592              	# 0 "" 2
 593              	#NO_APP
 594 029c 2338E4FC 		sd	a4,-48(s0)
 595              		.loc 2 158 5 is_stmt 1
 596              		.loc 2 158 12 is_stmt 0
 597 02a0 033704FD 		ld	a4,-48(s0)
 598              	.LBE74:
 599              	.LBE73:
 144:src/Riscv.cpp **** 
 600              		.loc 1 144 56
 601 02a4 2338E4FA 		sd	a4,-80(s0)
 146:src/Riscv.cpp ****                 MemoryAllocator::memAllocHandler();
 602              		.loc 1 146 13 is_stmt 1
 603 02a8 13071000 		li	a4,1
 604 02ac 638CE710 		beq	a5,a4,.L41
 148:src/Riscv.cpp ****                 MemoryAllocator::memFreeHandler();
 605              		.loc 1 148 18
 606 02b0 13072000 		li	a4,2
 607 02b4 6386E712 		beq	a5,a4,.L42
 150:src/Riscv.cpp ****                 PCB::threadCreateHandler();
 608              		.loc 1 150 18
 609 02b8 13071001 		li	a4,17
 610 02bc 6388E712 		beq	a5,a4,.L43
 152:src/Riscv.cpp ****                 PCB::threadDispatchHandler();
 611              		.loc 1 152 18
 612 02c0 13073001 		li	a4,19
 613 02c4 638AE712 		beq	a5,a4,.L44
 154:src/Riscv.cpp ****                 PCB::threadExitHandler();
GAS LISTING /tmp/ccroTLCb.s 			page 20


 614              		.loc 1 154 18
 615 02c8 13072001 		li	a4,18
 616 02cc 638CE712 		beq	a5,a4,.L45
 156:src/Riscv.cpp ****                 PCB::threadSleepHandler();
 617              		.loc 1 156 18
 618 02d0 13071003 		li	a4,49
 619 02d4 638EE712 		beq	a5,a4,.L46
 158:src/Riscv.cpp ****                 KSemaphore::semOpenHandler();
 620              		.loc 1 158 18
 621 02d8 13071002 		li	a4,33
 622 02dc 6380E714 		beq	a5,a4,.L47
 160:src/Riscv.cpp ****                 KSemaphore::semWaitHandler();
 623              		.loc 1 160 18
 624 02e0 13073002 		li	a4,35
 625 02e4 6382E714 		beq	a5,a4,.L48
 162:src/Riscv.cpp ****                 KSemaphore::semSignalHandler();
 626              		.loc 1 162 18
 627 02e8 13074002 		li	a4,36
 628 02ec 6384E714 		beq	a5,a4,.L49
 164:src/Riscv.cpp ****                 KSemaphore::semCloseHandler();
 629              		.loc 1 164 18
 630 02f0 13072002 		li	a4,34
 631 02f4 639CE70C 		bne	a5,a4,.L30
 165:src/Riscv.cpp ****             else if (operation == KConsole::CONSOLE_GETC) {
 632              		.loc 1 165 17
 165:src/Riscv.cpp ****             else if (operation == KConsole::CONSOLE_GETC) {
 633              		.loc 1 165 44 is_stmt 0
 634 02f8 97000000 		call	_ZN10KSemaphore15semCloseHandlerEv@plt
 634      E7800000 
 635              	.LVL37:
 636 0300 6F00C00C 		j	.L30
 637              	.LVL38:
 638              	.L24:
 639              	.LBE70:
 640              	.LBE69:
  96:src/Riscv.cpp ****     {
 641              		.loc 1 96 5
 642 0304 1307F0FF 		li	a4,-1
 643 0308 1317F703 		slli	a4,a4,63
 644 030c 13079700 		addi	a4,a4,9
 645 0310 6398E708 		bne	a5,a4,.L22
 646              	.LBB95:
 120:src/Riscv.cpp ****         {
 647              		.loc 1 120 9 is_stmt 1
 121:src/Riscv.cpp ****             //Riscv::printString("Hardware interrupt...\n");
 648              		.loc 1 121 9
 123:src/Riscv.cpp ****             break;
 649              		.loc 1 123 13
 123:src/Riscv.cpp ****             break;
 650              		.loc 1 123 28 is_stmt 0
 651 0314 97000000 		call	console_handler@plt
 651      E7800000 
 652              	.LVL39:
 124:src/Riscv.cpp ****         }
 653              		.loc 1 124 13 is_stmt 1
 654 031c 6F004008 		j	.L22
 655              	.LVL40:
GAS LISTING /tmp/ccroTLCb.s 			page 21


 656              	.L23:
  98:src/Riscv.cpp ****         {
 657              		.loc 1 98 9
  99:src/Riscv.cpp ****             uint64 volatile sepc = Riscv::r_sepc();
 658              		.loc 1 99 9
 659              	.LBB79:
 100:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 660              		.loc 1 100 13
 661              	.LBB80:
 662              	.LBB81:
 100:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 663              		.loc 2 100 5
 101:src/../h/Riscv.hpp ****     return sepc;
 664              		.loc 2 101 5
 101:src/../h/Riscv.hpp ****     return sepc;
 665              		.loc 2 101 51 is_stmt 0
 666              	#APP
 667              	# 101 "src/../h/Riscv.hpp" 1
 668              		csrr a5, sepc
 669              	# 0 "" 2
 670              	.LVL41:
 671              	#NO_APP
 672 0324 2334F4FC 		sd	a5,-56(s0)
 102:src/../h/Riscv.hpp **** }
 673              		.loc 2 102 5 is_stmt 1
 102:src/../h/Riscv.hpp **** }
 674              		.loc 2 102 12 is_stmt 0
 675 0328 833784FC 		ld	a5,-56(s0)
 676              	.LBE81:
 677              	.LBE80:
 100:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 678              		.loc 1 100 50
 679 032c 233CF4F8 		sd	a5,-104(s0)
 101:src/Riscv.cpp ****             mc_sip(Riscv::SIP_SSIP);
 680              		.loc 1 101 13 is_stmt 1
 681              	.LBB82:
 682              	.LBB83:
 156:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 683              		.loc 2 156 5
 157:src/../h/Riscv.hpp ****     return sstatus;
 684              		.loc 2 157 5
 157:src/../h/Riscv.hpp ****     return sstatus;
 685              		.loc 2 157 57 is_stmt 0
 686              	#APP
 687              	# 157 "src/../h/Riscv.hpp" 1
 688              		csrr a5, sstatus
 689              	# 0 "" 2
 690              	#NO_APP
 691 0334 2330F4FC 		sd	a5,-64(s0)
 692              		.loc 2 158 5 is_stmt 1
 693              		.loc 2 158 12 is_stmt 0
 694 0338 833704FC 		ld	a5,-64(s0)
 695              	.LBE83:
 696              	.LBE82:
 101:src/Riscv.cpp ****             mc_sip(Riscv::SIP_SSIP);
 697              		.loc 1 101 56
 698 033c 2330F4FA 		sd	a5,-96(s0)
GAS LISTING /tmp/ccroTLCb.s 			page 22


 102:src/Riscv.cpp ****             //Riscv::printString("timerInterrupt\n");
 699              		.loc 1 102 13 is_stmt 1
 700              	.LVL42:
 701              	.LBB84:
 702              	.LBB85:
 134:src/../h/Riscv.hpp **** }
 703              		.loc 2 134 5
 134:src/../h/Riscv.hpp **** }
 704              		.loc 2 134 50 is_stmt 0
 705 0340 93072000 		li	a5,2
 706              	#APP
 707              	# 134 "src/../h/Riscv.hpp" 1
 708              		csrc sip, a5
 709              	# 0 "" 2
 710              	.LVL43:
 711              	#NO_APP
 712              	.LBE85:
 713              	.LBE84:
 104:src/Riscv.cpp ****             total++;
 714              		.loc 1 104 13 is_stmt 1
 105:src/Riscv.cpp **** 
 715              		.loc 1 105 13
 105:src/Riscv.cpp **** 
 716              		.loc 1 105 18 is_stmt 0
 717 0348 17070000 		lla	a4,.LANCHOR1
 717      13070700 
 718 0350 83370700 		ld	a5,0(a4)
 719 0354 93871700 		addi	a5,a5,1
 720 0358 2330F700 		sd	a5,0(a4)
 107:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
 721              		.loc 1 107 13 is_stmt 1
 107:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
 722              		.loc 1 107 34 is_stmt 0
 723 035c 97040000 		la	s1,_ZN3PCB16timeSliceCounterE
 723      83B40400 
 724 0364 83B70400 		ld	a5,0(s1)
 725 0368 93871700 		addi	a5,a5,1
 726 036c 23B0F400 		sd	a5,0(s1)
 108:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
 727              		.loc 1 108 13 is_stmt 1
 108:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
 728              		.loc 1 108 40 is_stmt 0
 729 0370 97000000 		call	_ZN12SleepPCBList13tryToWakePCBsEv@plt
 729      E7800000 
 730              	.LVL44:
 109:src/Riscv.cpp ****             {
 731              		.loc 1 109 13 is_stmt 1
 109:src/Riscv.cpp ****             {
 732              		.loc 1 109 68 is_stmt 0
 733 0378 97070000 		la	a5,_ZN3PCB7runningE
 733      83B70700 
 734 0380 83B70700 		ld	a5,0(a5)
 735              	.LVL45:
 736              	.LBB86:
 737              	.LBB87:
 738              		.file 3 "src/../h/PCB.hpp"
   1:src/../h/PCB.hpp **** //
GAS LISTING /tmp/ccroTLCb.s 			page 23


   2:src/../h/PCB.hpp **** // Created by os on 4/27/22.
   3:src/../h/PCB.hpp **** //
   4:src/../h/PCB.hpp **** 
   5:src/../h/PCB.hpp **** #ifndef PROJECT_BASE_V1_0_PCB_HPP
   6:src/../h/PCB.hpp **** #define PROJECT_BASE_V1_0_PCB_HPP
   7:src/../h/PCB.hpp **** 
   8:src/../h/PCB.hpp **** #include "../lib/hw.h"
   9:src/../h/PCB.hpp **** #include "Scheduler.hpp"
  10:src/../h/PCB.hpp **** #include "Riscv.hpp"
  11:src/../h/PCB.hpp **** 
  12:src/../h/PCB.hpp **** class PCB
  13:src/../h/PCB.hpp **** {
  14:src/../h/PCB.hpp **** public:
  15:src/../h/PCB.hpp ****     static uint64 savedRegA4;
  16:src/../h/PCB.hpp **** 
  17:src/../h/PCB.hpp ****     using Body = void (*)(void*);
  18:src/../h/PCB.hpp **** 
  19:src/../h/PCB.hpp ****     PCB(Body body,  void* args, void* stack_space, uint64 timeSlice);
  20:src/../h/PCB.hpp ****     ~PCB();
  21:src/../h/PCB.hpp **** 
  22:src/../h/PCB.hpp ****     void start();
  23:src/../h/PCB.hpp ****     static void dispatch();
  24:src/../h/PCB.hpp ****     static void sleep(time_t);
  25:src/../h/PCB.hpp **** 
  26:src/../h/PCB.hpp ****     static PCB* running;
  27:src/../h/PCB.hpp **** 
  28:src/../h/PCB.hpp ****     static uint64 timeSliceCounter;
  29:src/../h/PCB.hpp ****     uint64 getTimeSlice() { return timeSlice;}
 739              		.loc 3 29 29 is_stmt 1
 740              		.loc 3 29 36 is_stmt 0
 741 0384 83B70701 		ld	a5,16(a5)
 742              	.LVL46:
 743              	.LBE87:
 744              	.LBE86:
 109:src/Riscv.cpp ****             {
 745              		.loc 1 109 39
 746 0388 03B70400 		ld	a4,0(s1)
 109:src/Riscv.cpp ****             {
 747              		.loc 1 109 13
 748 038c 6374F702 		bgeu	a4,a5,.L50
 749              	.L28:
 115:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 750              		.loc 1 115 13 is_stmt 1
 115:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 751              		.loc 1 115 29 is_stmt 0
 752 0390 833704FA 		ld	a5,-96(s0)
 753              	.LVL47:
 754              	.LBB88:
 755              	.LBB89:
 159:src/../h/Riscv.hpp **** }
 160:src/../h/Riscv.hpp **** 
 161:src/../h/Riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus) {
 162:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sstatus, %0" : :"r"(sstatus));
 756              		.loc 2 162 5 is_stmt 1
 757              		.loc 2 162 57 is_stmt 0
 758              	#APP
 759              	# 162 "src/../h/Riscv.hpp" 1
GAS LISTING /tmp/ccroTLCb.s 			page 24


 163              	}
 760              		csrw sstatus, a5
 761              	# 0 "" 2
 762              	.LVL48:
 763              	#NO_APP
 764              	.LBE89:
 765              	.LBE88:
 116:src/Riscv.cpp **** 
 766              		.loc 1 116 13 is_stmt 1
 116:src/Riscv.cpp **** 
 767              		.loc 1 116 26 is_stmt 0
 768 0398 833784F9 		ld	a5,-104(s0)
 769              	.LVL49:
 770              	.LBB90:
 771              	.LBB91:
 106:src/../h/Riscv.hpp **** }
 772              		.loc 2 106 5 is_stmt 1
 106:src/../h/Riscv.hpp **** }
 773              		.loc 2 106 51 is_stmt 0
 774              	#APP
 775              	# 106 "src/../h/Riscv.hpp" 1
 776              		csrw sepc, a5
 777              	# 0 "" 2
 778              	.LVL50:
 779              	#NO_APP
 780              	.L22:
 781              	.LBE91:
 782              	.LBE90:
 783              	.LBE79:
 784              	.LBE95:
 785              	.LBE68:
 178:src/Riscv.cpp **** 
 786              		.loc 1 178 1
 787 03a0 83308106 		ld	ra,104(sp)
 788              		.cfi_remember_state
 789              		.cfi_restore 1
 790 03a4 03340106 		ld	s0,96(sp)
 791              		.cfi_restore 8
 792              		.cfi_def_cfa 2, 112
 793 03a8 83348105 		ld	s1,88(sp)
 794              		.cfi_restore 9
 795 03ac 13010107 		addi	sp,sp,112
 796              		.cfi_def_cfa_offset 0
 797 03b0 67800000 		jr	ra
 798              	.L50:
 799              		.cfi_restore_state
 800              	.LBB98:
 801              	.LBB96:
 802              	.LBB92:
 111:src/Riscv.cpp ****                 PCB::dispatch();
 803              		.loc 1 111 17 is_stmt 1
 111:src/Riscv.cpp ****                 PCB::dispatch();
 804              		.loc 1 111 39 is_stmt 0
 805 03b4 23B00400 		sd	zero,0(s1)
 112:src/Riscv.cpp ****             }
 806              		.loc 1 112 17 is_stmt 1
 112:src/Riscv.cpp ****             }
GAS LISTING /tmp/ccroTLCb.s 			page 25


 807              		.loc 1 112 30 is_stmt 0
 808 03b8 97000000 		call	_ZN3PCB8dispatchEv@plt
 808      E7800000 
 809              	.LVL51:
 810 03c0 6FF01FFD 		j	.L28
 811              	.LVL52:
 812              	.L41:
 813              	.LBE92:
 814              	.LBB93:
 147:src/Riscv.cpp ****             else if (operation == MemoryAllocator::MEM_FREE)
 815              		.loc 1 147 17 is_stmt 1
 147:src/Riscv.cpp ****             else if (operation == MemoryAllocator::MEM_FREE)
 816              		.loc 1 147 49 is_stmt 0
 817 03c4 97000000 		call	_ZN15MemoryAllocator15memAllocHandlerEv@plt
 817      E7800000 
 818              	.LVL53:
 819              	.L30:
 172:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 820              		.loc 1 172 13 is_stmt 1
 172:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 821              		.loc 1 172 29 is_stmt 0
 822 03cc 833704FB 		ld	a5,-80(s0)
 823              	.LVL54:
 824              	.LBB75:
 825              	.LBB76:
 162:src/../h/Riscv.hpp **** }
 826              		.loc 2 162 5 is_stmt 1
 162:src/../h/Riscv.hpp **** }
 827              		.loc 2 162 57 is_stmt 0
 828              	#APP
 829              	# 162 "src/../h/Riscv.hpp" 1
 830              		csrw sstatus, a5
 831              	# 0 "" 2
 832              	.LVL55:
 833              	#NO_APP
 834              	.LBE76:
 835              	.LBE75:
 173:src/Riscv.cpp **** 
 836              		.loc 1 173 13 is_stmt 1
 173:src/Riscv.cpp **** 
 837              		.loc 1 173 26 is_stmt 0
 838 03d4 833784FA 		ld	a5,-88(s0)
 839              	.LVL56:
 840              	.LBB77:
 841              	.LBB78:
 106:src/../h/Riscv.hpp **** }
 842              		.loc 2 106 5 is_stmt 1
 106:src/../h/Riscv.hpp **** }
 843              		.loc 2 106 51 is_stmt 0
 844              	#APP
 845              	# 106 "src/../h/Riscv.hpp" 1
 846              		csrw sepc, a5
 847              	# 0 "" 2
 848              	.LVL57:
 849              	#NO_APP
 850              	.LBE78:
 851              	.LBE77:
GAS LISTING /tmp/ccroTLCb.s 			page 26


 852              	.LBE93:
 853              	.LBE96:
 854              	.LBE98:
 178:src/Riscv.cpp **** 
 855              		.loc 1 178 1
 856 03dc 6FF05FFC 		j	.L22
 857              	.LVL58:
 858              	.L42:
 859              	.LBB99:
 860              	.LBB97:
 861              	.LBB94:
 149:src/Riscv.cpp ****             else if (operation == PCB::THREAD_CREATE)
 862              		.loc 1 149 17 is_stmt 1
 149:src/Riscv.cpp ****             else if (operation == PCB::THREAD_CREATE)
 863              		.loc 1 149 48 is_stmt 0
 864 03e0 97000000 		call	_ZN15MemoryAllocator14memFreeHandlerEv@plt
 864      E7800000 
 865              	.LVL59:
 866 03e8 6FF05FFE 		j	.L30
 867              	.LVL60:
 868              	.L43:
 151:src/Riscv.cpp ****             else if (operation == PCB::THREAD_DISPATCH)
 869              		.loc 1 151 17 is_stmt 1
 151:src/Riscv.cpp ****             else if (operation == PCB::THREAD_DISPATCH)
 870              		.loc 1 151 41 is_stmt 0
 871 03ec 97000000 		call	_ZN3PCB19threadCreateHandlerEv@plt
 871      E7800000 
 872              	.LVL61:
 873 03f4 6FF09FFD 		j	.L30
 874              	.LVL62:
 875              	.L44:
 153:src/Riscv.cpp ****             else if (operation == PCB::THREAD_EXIT)
 876              		.loc 1 153 17 is_stmt 1
 153:src/Riscv.cpp ****             else if (operation == PCB::THREAD_EXIT)
 877              		.loc 1 153 43 is_stmt 0
 878 03f8 97000000 		call	_ZN3PCB21threadDispatchHandlerEv@plt
 878      E7800000 
 879              	.LVL63:
 880 0400 6FF0DFFC 		j	.L30
 881              	.LVL64:
 882              	.L45:
 155:src/Riscv.cpp ****             else if (operation == PCB::TIME_SLEEP)
 883              		.loc 1 155 17 is_stmt 1
 155:src/Riscv.cpp ****             else if (operation == PCB::TIME_SLEEP)
 884              		.loc 1 155 39 is_stmt 0
 885 0404 97000000 		call	_ZN3PCB17threadExitHandlerEv@plt
 885      E7800000 
 886              	.LVL65:
 887 040c 6FF01FFC 		j	.L30
 888              	.LVL66:
 889              	.L46:
 157:src/Riscv.cpp ****             else if (operation == KSemaphore::SEM_OPEN)
 890              		.loc 1 157 17 is_stmt 1
 157:src/Riscv.cpp ****             else if (operation == KSemaphore::SEM_OPEN)
 891              		.loc 1 157 40 is_stmt 0
 892 0410 97000000 		call	_ZN3PCB18threadSleepHandlerEv@plt
 892      E7800000 
GAS LISTING /tmp/ccroTLCb.s 			page 27


 893              	.LVL67:
 894 0418 6FF05FFB 		j	.L30
 895              	.LVL68:
 896              	.L47:
 159:src/Riscv.cpp ****             else if (operation == KSemaphore::SEM_WAIT)
 897              		.loc 1 159 17 is_stmt 1
 159:src/Riscv.cpp ****             else if (operation == KSemaphore::SEM_WAIT)
 898              		.loc 1 159 43 is_stmt 0
 899 041c 97000000 		call	_ZN10KSemaphore14semOpenHandlerEv@plt
 899      E7800000 
 900              	.LVL69:
 901 0424 6FF09FFA 		j	.L30
 902              	.LVL70:
 903              	.L48:
 161:src/Riscv.cpp ****             else if (operation == KSemaphore::SEM_SIGNAL)
 904              		.loc 1 161 17 is_stmt 1
 161:src/Riscv.cpp ****             else if (operation == KSemaphore::SEM_SIGNAL)
 905              		.loc 1 161 43 is_stmt 0
 906 0428 97000000 		call	_ZN10KSemaphore14semWaitHandlerEv@plt
 906      E7800000 
 907              	.LVL71:
 908 0430 6FF0DFF9 		j	.L30
 909              	.LVL72:
 910              	.L49:
 163:src/Riscv.cpp ****             else if (operation == KSemaphore::SEM_CLOSE)
 911              		.loc 1 163 17 is_stmt 1
 163:src/Riscv.cpp ****             else if (operation == KSemaphore::SEM_CLOSE)
 912              		.loc 1 163 45 is_stmt 0
 913 0434 97000000 		call	_ZN10KSemaphore16semSignalHandlerEv@plt
 913      E7800000 
 914              	.LVL73:
 915 043c 6FF01FF9 		j	.L30
 916              	.LBE94:
 917              	.LBE97:
 918              	.LBE99:
 919              		.cfi_endproc
 920              	.LFE48:
 922              		.section	.rodata.str1.8,"aMS",@progbits,1
 923              		.align	3
 924              	.LC0:
 925 0000 456E642E 		.string	"End..."
 925      2E2E00
 926              		.text
 927              		.align	2
 928              		.globl	_ZN5Riscv10kernelMainEv
 930              	_ZN5Riscv10kernelMainEv:
 931              	.LFB49:
 181:src/Riscv.cpp ****     initSystem();
 932              		.loc 1 181 1 is_stmt 1
 933              		.cfi_startproc
 934              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 935              		.cfi_lsda 0x1b,.LLSDA49
 936 0440 130101FE 		addi	sp,sp,-32
 937              		.cfi_def_cfa_offset 32
 938 0444 233C1100 		sd	ra,24(sp)
 939 0448 23388100 		sd	s0,16(sp)
 940 044c 23349100 		sd	s1,8(sp)
GAS LISTING /tmp/ccroTLCb.s 			page 28


 941 0450 23302101 		sd	s2,0(sp)
 942              		.cfi_offset 1, -8
 943              		.cfi_offset 8, -16
 944              		.cfi_offset 9, -24
 945              		.cfi_offset 18, -32
 946 0454 13040102 		addi	s0,sp,32
 947              		.cfi_def_cfa 8, 0
 182:src/Riscv.cpp **** 
 948              		.loc 1 182 5
 949              	.LEHB0:
 182:src/Riscv.cpp **** 
 950              		.loc 1 182 15 is_stmt 0
 951 0458 97000000 		call	_ZN5Riscv10initSystemEv
 951      E7800000 
 952              	.LVL74:
 186:src/Riscv.cpp ****     while(userPCB->getState() != PCB::FINISHED)
 953              		.loc 1 186 5 is_stmt 1
 186:src/Riscv.cpp ****     while(userPCB->getState() != PCB::FINISHED)
 954              		.loc 1 186 63 is_stmt 0
 955 0460 37150000 		li	a0,4096
 956 0464 97000000 		call	_Z7kmallocm@plt
 956      E7800000 
 957              	.LVL75:
 958 046c 13090500 		mv	s2,a0
 186:src/Riscv.cpp ****     while(userPCB->getState() != PCB::FINISHED)
 959              		.loc 1 186 103
 960 0470 13050005 		li	a0,80
 961 0474 97000000 		call	_ZN3PCBnwEm@plt
 961      E7800000 
 962              	.LVL76:
 963              	.LEHE0:
 964 047c 93040500 		mv	s1,a0
 965 0480 13072000 		li	a4,2
 966 0484 93060900 		mv	a3,s2
 967 0488 13060000 		li	a2,0
 968 048c 97050000 		lla	a1,_ZN5Riscv15userMainWrapperEPv
 968      93850500 
 969              	.LEHB1:
 970 0494 97000000 		call	_ZN3PCBC1EPFvPvES0_S0_m@plt
 970      E7800000 
 971              	.LVL77:
 972              	.LEHE1:
 973              	.L53:
 187:src/Riscv.cpp ****     {
 974              		.loc 1 187 5 is_stmt 1
 187:src/Riscv.cpp ****     {
 975              		.loc 1 187 31
 976              	.LBB100:
 977              	.LBB101:
  30:src/../h/PCB.hpp **** 
  31:src/../h/PCB.hpp ****     void* operator new(size_t size);
  32:src/../h/PCB.hpp ****     void operator delete(void *p);
  33:src/../h/PCB.hpp **** 
  34:src/../h/PCB.hpp ****     enum State{READY, RUNNING, SUSPENDED, FINISHED, EXITING, SLEEPING};
  35:src/../h/PCB.hpp ****     State getState() {return state;}
 978              		.loc 3 35 23
 979              		.loc 3 35 30 is_stmt 0
GAS LISTING /tmp/ccroTLCb.s 			page 29


 980 049c 03A78403 		lw	a4,56(s1)
 981              	.LVL78:
 982              	.LBE101:
 983              	.LBE100:
 187:src/Riscv.cpp ****     {
 984              		.loc 1 187 31
 985 04a0 93073000 		li	a5,3
 986 04a4 6308F700 		beq	a4,a5,.L52
 189:src/Riscv.cpp ****     }
 987              		.loc 1 189 9 is_stmt 1
 988              	.LEHB2:
 189:src/Riscv.cpp ****     }
 989              		.loc 1 189 24 is_stmt 0
 990 04a8 97000000 		call	thread_dispatch@plt
 990      E7800000 
 991              	.LVL79:
 187:src/Riscv.cpp ****     {
 992              		.loc 1 187 5
 993 04b0 6FF0DFFE 		j	.L53
 994              	.L52:
 196:src/Riscv.cpp **** 
 995              		.loc 1 196 5 is_stmt 1
 196:src/Riscv.cpp **** 
 996              		.loc 1 196 14 is_stmt 0
 997 04b4 97000000 		call	_ZN5Riscv9endSystemEv
 997      E7800000 
 998              	.LVL80:
 198:src/Riscv.cpp **** }
 999              		.loc 1 198 5 is_stmt 1
 198:src/Riscv.cpp **** }
 1000              		.loc 1 198 23 is_stmt 0
 1001 04bc 17050000 		lla	a0,.LC0
 1001      13050500 
 1002 04c4 97000000 		call	_ZN5Riscv11printStringEPKc
 1002      E7800000 
 1003              	.LVL81:
 1004              	.LEHE2:
 199:src/Riscv.cpp **** 
 1005              		.loc 1 199 1
 1006 04cc 83308101 		ld	ra,24(sp)
 1007              		.cfi_remember_state
 1008              		.cfi_restore 1
 1009 04d0 03340101 		ld	s0,16(sp)
 1010              		.cfi_restore 8
 1011              		.cfi_def_cfa 2, 32
 1012 04d4 83348100 		ld	s1,8(sp)
 1013              		.cfi_restore 9
 1014 04d8 03390100 		ld	s2,0(sp)
 1015              		.cfi_restore 18
 1016 04dc 13010102 		addi	sp,sp,32
 1017              		.cfi_def_cfa_offset 0
 1018 04e0 67800000 		jr	ra
 1019              	.L55:
 1020              		.cfi_restore_state
 1021 04e4 13090500 		mv	s2,a0
 186:src/Riscv.cpp ****     while(userPCB->getState() != PCB::FINISHED)
 1022              		.loc 1 186 103
GAS LISTING /tmp/ccroTLCb.s 			page 30


 1023 04e8 13850400 		mv	a0,s1
 1024 04ec 97000000 		call	_ZN3PCBdlEPv@plt
 1024      E7800000 
 1025              	.LVL82:
 1026 04f4 13050900 		mv	a0,s2
 1027              	.LEHB3:
 1028 04f8 97000000 		call	_Unwind_Resume@plt
 1028      E7800000 
 1029              	.LVL83:
 1030              	.LEHE3:
 1031              		.cfi_endproc
 1032              	.LFE49:
 1033              		.globl	__gxx_personality_v0
 1034              		.section	.gcc_except_table,"a",@progbits
 1035              	.LLSDA49:
 1036 0000 FF       		.byte	0xff
 1037 0001 FF       		.byte	0xff
 1038 0002 03       		.byte	0x3
 1039 0003 34       		.byte	0x34
 1040 0004 00000000 		.4byte	.LEHB0-.LFB49
 1041 0008 00000000 		.4byte	.LEHE0-.LEHB0
 1042 000c 00000000 		.4byte	0
 1043 0010 00       		.byte	0
 1044 0011 00000000 		.4byte	.LEHB1-.LFB49
 1045 0015 00000000 		.4byte	.LEHE1-.LEHB1
 1046 0019 00000000 		.4byte	.L55-.LFB49
 1047 001d 00       		.byte	0
 1048 001e 00000000 		.4byte	.LEHB2-.LFB49
 1049 0022 00000000 		.4byte	.LEHE2-.LEHB2
 1050 0026 00000000 		.4byte	0
 1051 002a 00       		.byte	0
 1052 002b 00000000 		.4byte	.LEHB3-.LFB49
 1053 002f 00000000 		.4byte	.LEHE3-.LEHB3
 1054 0033 00000000 		.4byte	0
 1055 0037 00       		.byte	0
 1056              		.text
 1058              		.section	.rodata
 1059              		.align	3
 1060              		.set	.LANCHOR0,. + 0
 1063              	_ZZN5Riscv12printIntegerEmE6digits:
 1064 0000 30313233 		.string	"0123456789"
 1064      34353637 
 1064      383900
 1065              		.bss
 1066              		.align	3
 1067              		.set	.LANCHOR1,. + 0
 1070              	_ZZN5Riscv20handleSupervisorTrapEvE5total:
 1071 0000 00000000 		.zero	8
 1071      00000000 
 1072              		.text
 1073              	.Letext0:
 1074              		.file 4 "src/../h/../lib/hw.h"
 1075              		.file 5 "src/../h/MemoryAllocator.hpp"
 1076              		.file 6 "src/../h/KSemaphore.hpp"
 1077              		.file 7 "src/../h/SleepPCBList.hpp"
 1078              		.file 8 "src/../h/KConsole.hpp"
 1079              		.file 9 "src/../test/userMain.hpp"
GAS LISTING /tmp/ccroTLCb.s 			page 31


 1080              		.file 10 "src/../h/syscall_c.h"
 1081              		.file 11 "src/../lib/console.h"
 5590              		.align	3
 5593              	DW.ref.__gxx_personality_v0:
 5594 0000 00000000 		.dword	__gxx_personality_v0
 5594      00000000 
 5595              		.ident	"GCC: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0"
 5596              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/ccroTLCb.s 			page 32


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Riscv.cpp
     /tmp/ccroTLCb.s:9      .text:0000000000000000 _ZN5Riscv15userMainWrapperEPv
     /tmp/ccroTLCb.s:13     .text:0000000000000000 .L0 
     /tmp/ccroTLCb.s:14     .text:0000000000000000 .L0 
     /tmp/ccroTLCb.s:15     .text:0000000000000004 .L0 
     /tmp/ccroTLCb.s:18     .text:000000000000000c .L0 
     /tmp/ccroTLCb.s:19     .text:000000000000000c .L0 
     /tmp/ccroTLCb.s:21     .text:0000000000000010 .L0 
     /tmp/ccroTLCb.s:23     .text:0000000000000010 .L0 
     /tmp/ccroTLCb.s:24     .text:0000000000000010 .L0 
     /tmp/ccroTLCb.s:27     .text:0000000000000018 .L0 
     /tmp/ccroTLCb.s:28     .text:000000000000001c .L0 
     /tmp/ccroTLCb.s:30     .text:0000000000000020 .L0 
     /tmp/ccroTLCb.s:31     .text:0000000000000020 .L0 
     /tmp/ccroTLCb.s:33     .text:0000000000000024 .L0 
     /tmp/ccroTLCb.s:35     .text:0000000000000028 .L0 
     /tmp/ccroTLCb.s:41     .text:0000000000000028 _ZN5Riscv10initSystemEv
     /tmp/ccroTLCb.s:44     .text:0000000000000028 .L0 
     /tmp/ccroTLCb.s:45     .text:0000000000000028 .L0 
     /tmp/ccroTLCb.s:46     .text:000000000000002c .L0 
     /tmp/ccroTLCb.s:49     .text:0000000000000034 .L0 
     /tmp/ccroTLCb.s:50     .text:0000000000000034 .L0 
     /tmp/ccroTLCb.s:52     .text:0000000000000038 .L0 
     /tmp/ccroTLCb.s:54     .text:0000000000000038 .L0 
     /tmp/ccroTLCb.s:55     .text:0000000000000038 .L0 
     /tmp/ccroTLCb.s:61     .text:0000000000000040 .L0 
  src/../h/Riscv.hpp:116    .text:0000000000000040 .L0 
     /tmp/ccroTLCb.s:71     .text:0000000000000044 .L0 
     /tmp/ccroTLCb.s:72     .text:0000000000000044 .L0 
     /tmp/ccroTLCb.s:75     .text:000000000000004c .L0 
     /tmp/ccroTLCb.s:76     .text:000000000000004c .L0 
     /tmp/ccroTLCb.s:79     .text:0000000000000054 .L0 
     /tmp/ccroTLCb.s:80     .text:0000000000000058 .L0 
     /tmp/ccroTLCb.s:82     .text:000000000000005c .L0 
     /tmp/ccroTLCb.s:83     .text:000000000000005c .L0 
     /tmp/ccroTLCb.s:85     .text:0000000000000060 .L0 
     /tmp/ccroTLCb.s:87     .text:0000000000000064 .L0 
     /tmp/ccroTLCb.s:93     .text:0000000000000064 _ZN5Riscv16enableInterruptsEv
     /tmp/ccroTLCb.s:96     .text:0000000000000064 .L0 
     /tmp/ccroTLCb.s:97     .text:0000000000000064 .L0 
     /tmp/ccroTLCb.s:98     .text:0000000000000068 .L0 
     /tmp/ccroTLCb.s:100    .text:000000000000006c .L0 
     /tmp/ccroTLCb.s:102    .text:0000000000000070 .L0 
     /tmp/ccroTLCb.s:107    .text:0000000000000070 .L0 
     /tmp/ccroTLCb.s:108    .text:0000000000000070 .L0 
     /tmp/ccroTLCb.s:109    .text:0000000000000070 .L0 
     /tmp/ccroTLCb.s:119    .text:0000000000000078 .L0 
     /tmp/ccroTLCb.s:120    .text:000000000000007c .L0 
     /tmp/ccroTLCb.s:121    .text:000000000000007c .L0 
     /tmp/ccroTLCb.s:123    .text:0000000000000080 .L0 
     /tmp/ccroTLCb.s:125    .text:0000000000000084 .L0 
     /tmp/ccroTLCb.s:131    .text:0000000000000084 _ZN5Riscv17disableInterruptsEv
     /tmp/ccroTLCb.s:134    .text:0000000000000084 .L0 
     /tmp/ccroTLCb.s:135    .text:0000000000000084 .L0 
     /tmp/ccroTLCb.s:136    .text:0000000000000088 .L0 
     /tmp/ccroTLCb.s:138    .text:000000000000008c .L0 
GAS LISTING /tmp/ccroTLCb.s 			page 33


     /tmp/ccroTLCb.s:140    .text:0000000000000090 .L0 
     /tmp/ccroTLCb.s:145    .text:0000000000000090 .L0 
     /tmp/ccroTLCb.s:146    .text:0000000000000090 .L0 
     /tmp/ccroTLCb.s:147    .text:0000000000000090 .L0 
     /tmp/ccroTLCb.s:157    .text:0000000000000098 .L0 
     /tmp/ccroTLCb.s:158    .text:000000000000009c .L0 
     /tmp/ccroTLCb.s:159    .text:000000000000009c .L0 
     /tmp/ccroTLCb.s:161    .text:00000000000000a0 .L0 
     /tmp/ccroTLCb.s:163    .text:00000000000000a4 .L0 
     /tmp/ccroTLCb.s:169    .text:00000000000000a4 _ZN5Riscv9endSystemEv
     /tmp/ccroTLCb.s:172    .text:00000000000000a4 .L0 
     /tmp/ccroTLCb.s:173    .text:00000000000000a4 .L0 
     /tmp/ccroTLCb.s:174    .text:00000000000000a8 .L0 
     /tmp/ccroTLCb.s:177    .text:00000000000000b0 .L0 
     /tmp/ccroTLCb.s:178    .text:00000000000000b0 .L0 
     /tmp/ccroTLCb.s:180    .text:00000000000000b4 .L0 
     /tmp/ccroTLCb.s:182    .text:00000000000000b4 .L0 
     /tmp/ccroTLCb.s:183    .text:00000000000000b4 .L0 
     /tmp/ccroTLCb.s:186    .text:00000000000000bc .L0 
     /tmp/ccroTLCb.s:187    .text:00000000000000c0 .L0 
     /tmp/ccroTLCb.s:189    .text:00000000000000c4 .L0 
     /tmp/ccroTLCb.s:190    .text:00000000000000c4 .L0 
     /tmp/ccroTLCb.s:192    .text:00000000000000c8 .L0 
     /tmp/ccroTLCb.s:194    .text:00000000000000cc .L0 
     /tmp/ccroTLCb.s:200    .text:00000000000000cc _ZN5Riscv10popSppSpieEv
     /tmp/ccroTLCb.s:203    .text:00000000000000cc .L0 
     /tmp/ccroTLCb.s:204    .text:00000000000000cc .L0 
     /tmp/ccroTLCb.s:205    .text:00000000000000d0 .L0 
     /tmp/ccroTLCb.s:207    .text:00000000000000d4 .L0 
     /tmp/ccroTLCb.s:209    .text:00000000000000d8 .L0 
     /tmp/ccroTLCb.s:211    .text:00000000000000d8 .L0 
       src/Riscv.cpp:40     .text:00000000000000d8 .L0 
     /tmp/ccroTLCb.s:217    .text:00000000000000dc .L0 
       src/Riscv.cpp:41     .text:00000000000000dc .L0 
     /tmp/ccroTLCb.s:223    .text:00000000000000e0 .L0 
     /tmp/ccroTLCb.s:224    .text:00000000000000e4 .L0 
     /tmp/ccroTLCb.s:225    .text:00000000000000e4 .L0 
     /tmp/ccroTLCb.s:227    .text:00000000000000e8 .L0 
     /tmp/ccroTLCb.s:229    .text:00000000000000ec .L0 
     /tmp/ccroTLCb.s:235    .text:00000000000000ec _ZN5Riscv11printStringEPKc
     /tmp/ccroTLCb.s:238    .text:00000000000000ec .L0 
     /tmp/ccroTLCb.s:240    .text:00000000000000ec .L0 
     /tmp/ccroTLCb.s:241    .text:00000000000000f0 .L0 
     /tmp/ccroTLCb.s:246    .text:0000000000000100 .L0 
     /tmp/ccroTLCb.s:247    .text:0000000000000100 .L0 
     /tmp/ccroTLCb.s:248    .text:0000000000000100 .L0 
     /tmp/ccroTLCb.s:249    .text:0000000000000100 .L0 
     /tmp/ccroTLCb.s:251    .text:0000000000000104 .L0 
     /tmp/ccroTLCb.s:256    .text:0000000000000108 .L0 
     /tmp/ccroTLCb.s:257    .text:0000000000000108 .L0 
     /tmp/ccroTLCb.s:258    .text:0000000000000108 .L0 
  src/../h/Riscv.hpp:157    .text:0000000000000108 .L0 
     /tmp/ccroTLCb.s:266    .text:0000000000000110 .L0 
     /tmp/ccroTLCb.s:267    .text:0000000000000110 .L0 
     /tmp/ccroTLCb.s:274    .text:0000000000000114 .L0 
     /tmp/ccroTLCb.s:275    .text:0000000000000114 .L0 
     /tmp/ccroTLCb.s:276    .text:0000000000000114 .L0 
GAS LISTING /tmp/ccroTLCb.s 			page 34


     /tmp/ccroTLCb.s:287    .text:000000000000011c .L0 
     /tmp/ccroTLCb.s:288    .text:000000000000011c .L0 
     /tmp/ccroTLCb.s:289    .text:000000000000011c .L0 
     /tmp/ccroTLCb.s:291    .text:0000000000000120 .L0 
     /tmp/ccroTLCb.s:293    .text:0000000000000124 .L0 
     /tmp/ccroTLCb.s:294    .text:0000000000000124 .L0 
     /tmp/ccroTLCb.s:297    .text:000000000000012c .L0 
     /tmp/ccroTLCb.s:298    .text:000000000000012c .L0 
     /tmp/ccroTLCb.s:301    .text:0000000000000130 .L0 
     /tmp/ccroTLCb.s:304    .text:0000000000000134 .L0 
     /tmp/ccroTLCb.s:305    .text:0000000000000134 .L0 
     /tmp/ccroTLCb.s:308    .text:0000000000000138 .L0 
     /tmp/ccroTLCb.s:314    .text:0000000000000140 .L0 
  src/../h/Riscv.hpp:148    .text:0000000000000140 .L0 
     /tmp/ccroTLCb.s:324    .text:0000000000000144 .L0 
     /tmp/ccroTLCb.s:325    .text:0000000000000148 .L0 
     /tmp/ccroTLCb.s:327    .text:000000000000014c .L0 
     /tmp/ccroTLCb.s:328    .text:000000000000014c .L0 
     /tmp/ccroTLCb.s:330    .text:0000000000000150 .L0 
     /tmp/ccroTLCb.s:333    .text:0000000000000154 .L0 
     /tmp/ccroTLCb.s:335    .text:0000000000000158 .L0 
     /tmp/ccroTLCb.s:337    .text:000000000000015c .L0 
     /tmp/ccroTLCb.s:343    .text:000000000000015c _ZN5Riscv12printIntegerEm
     /tmp/ccroTLCb.s:346    .text:000000000000015c .L0 
     /tmp/ccroTLCb.s:348    .text:000000000000015c .L0 
     /tmp/ccroTLCb.s:349    .text:0000000000000160 .L0 
     /tmp/ccroTLCb.s:354    .text:0000000000000170 .L0 
     /tmp/ccroTLCb.s:355    .text:0000000000000170 .L0 
     /tmp/ccroTLCb.s:356    .text:0000000000000170 .L0 
     /tmp/ccroTLCb.s:357    .text:0000000000000170 .L0 
     /tmp/ccroTLCb.s:359    .text:0000000000000174 .L0 
     /tmp/ccroTLCb.s:363    .text:0000000000000174 .L0 
     /tmp/ccroTLCb.s:364    .text:0000000000000174 .L0 
     /tmp/ccroTLCb.s:365    .text:0000000000000174 .L0 
  src/../h/Riscv.hpp:157    .text:0000000000000174 .L0 
     /tmp/ccroTLCb.s:373    .text:000000000000017c .L0 
     /tmp/ccroTLCb.s:374    .text:000000000000017c .L0 
     /tmp/ccroTLCb.s:381    .text:0000000000000180 .L0 
     /tmp/ccroTLCb.s:382    .text:0000000000000180 .L0 
     /tmp/ccroTLCb.s:383    .text:0000000000000180 .L0 
     /tmp/ccroTLCb.s:393    .text:0000000000000188 .L0 
     /tmp/ccroTLCb.s:394    .text:0000000000000188 .L0 
     /tmp/ccroTLCb.s:395    .text:0000000000000188 .L0 
     /tmp/ccroTLCb.s:396    .text:0000000000000188 .L0 
     /tmp/ccroTLCb.s:397    .text:0000000000000188 .L0 
     /tmp/ccroTLCb.s:398    .text:0000000000000188 .L0 
     /tmp/ccroTLCb.s:399    .text:0000000000000188 .L0 
     /tmp/ccroTLCb.s:400    .text:0000000000000188 .L0 
     /tmp/ccroTLCb.s:403    .text:000000000000018c .L0 
     /tmp/ccroTLCb.s:404    .text:000000000000018c .L0 
     /tmp/ccroTLCb.s:408    .text:0000000000000190 .L0 
     /tmp/ccroTLCb.s:409    .text:0000000000000190 .L0 
     /tmp/ccroTLCb.s:410    .text:0000000000000190 .L0 
     /tmp/ccroTLCb.s:414    .text:0000000000000198 .L0 
     /tmp/ccroTLCb.s:420    .text:00000000000001b0 .L0 
     /tmp/ccroTLCb.s:426    .text:00000000000001c0 .L0 
     /tmp/ccroTLCb.s:428    .text:00000000000001c4 .L0 
GAS LISTING /tmp/ccroTLCb.s 			page 35


     /tmp/ccroTLCb.s:431    .text:00000000000001c8 .L0 
     /tmp/ccroTLCb.s:436    .text:00000000000001d0 .L0 
     /tmp/ccroTLCb.s:437    .text:00000000000001d0 .L0 
     /tmp/ccroTLCb.s:441    .text:00000000000001d8 .L0 
     /tmp/ccroTLCb.s:442    .text:00000000000001d8 .L0 
     /tmp/ccroTLCb.s:450    .text:00000000000001f0 .L0 
     /tmp/ccroTLCb.s:451    .text:00000000000001f0 .L0 
     /tmp/ccroTLCb.s:455    .text:00000000000001fc .L0 
     /tmp/ccroTLCb.s:456    .text:00000000000001fc .L0 
     /tmp/ccroTLCb.s:459    .text:0000000000000200 .L0 
     /tmp/ccroTLCb.s:465    .text:0000000000000208 .L0 
  src/../h/Riscv.hpp:148    .text:0000000000000208 .L0 
     /tmp/ccroTLCb.s:475    .text:000000000000020c .L0 
     /tmp/ccroTLCb.s:476    .text:0000000000000210 .L0 
     /tmp/ccroTLCb.s:478    .text:0000000000000214 .L0 
     /tmp/ccroTLCb.s:479    .text:0000000000000214 .L0 
     /tmp/ccroTLCb.s:481    .text:0000000000000218 .L0 
     /tmp/ccroTLCb.s:483    .text:000000000000021c .L0 
     /tmp/ccroTLCb.s:485    .text:0000000000000220 .L0 
     /tmp/ccroTLCb.s:487    .text:0000000000000224 .L0 
     /tmp/ccroTLCb.s:493    .text:0000000000000224 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccroTLCb.s:496    .text:0000000000000224 .L0 
     /tmp/ccroTLCb.s:497    .text:0000000000000224 .L0 
     /tmp/ccroTLCb.s:498    .text:0000000000000228 .L0 
     /tmp/ccroTLCb.s:502    .text:0000000000000234 .L0 
     /tmp/ccroTLCb.s:503    .text:0000000000000234 .L0 
     /tmp/ccroTLCb.s:504    .text:0000000000000234 .L0 
     /tmp/ccroTLCb.s:506    .text:0000000000000238 .L0 
     /tmp/ccroTLCb.s:508    .text:0000000000000238 .L0 
       src/Riscv.cpp:92     .text:0000000000000238 .L0 
     /tmp/ccroTLCb.s:519    .text:0000000000000248 .L0 
     /tmp/ccroTLCb.s:520    .text:0000000000000248 .L0 
     /tmp/ccroTLCb.s:521    .text:0000000000000248 .L0 
  src/../h/Riscv.hpp:91     .text:0000000000000248 .L0 
     /tmp/ccroTLCb.s:529    .text:0000000000000250 .L0 
     /tmp/ccroTLCb.s:530    .text:0000000000000250 .L0 
     /tmp/ccroTLCb.s:536    .text:0000000000000254 .L0 
     /tmp/ccroTLCb.s:550    .text:0000000000000280 .L0 
     /tmp/ccroTLCb.s:551    .text:0000000000000280 .L0 
     /tmp/ccroTLCb.s:553    .text:0000000000000280 .L0 
     /tmp/ccroTLCb.s:554    .text:0000000000000280 .L0 
     /tmp/ccroTLCb.s:555    .text:0000000000000280 .L0 
       src/Riscv.cpp:141    .text:0000000000000280 .L0 
     /tmp/ccroTLCb.s:565    .text:0000000000000284 .L0 
     /tmp/ccroTLCb.s:566    .text:0000000000000284 .L0 
     /tmp/ccroTLCb.s:567    .text:0000000000000284 .L0 
  src/../h/Riscv.hpp:101    .text:0000000000000284 .L0 
     /tmp/ccroTLCb.s:575    .text:000000000000028c .L0 
     /tmp/ccroTLCb.s:576    .text:000000000000028c .L0 
     /tmp/ccroTLCb.s:580    .text:0000000000000290 .L0 
     /tmp/ccroTLCb.s:582    .text:0000000000000294 .L0 
     /tmp/ccroTLCb.s:586    .text:0000000000000298 .L0 
     /tmp/ccroTLCb.s:587    .text:0000000000000298 .L0 
     /tmp/ccroTLCb.s:588    .text:0000000000000298 .L0 
  src/../h/Riscv.hpp:157    .text:0000000000000298 .L0 
     /tmp/ccroTLCb.s:596    .text:00000000000002a0 .L0 
     /tmp/ccroTLCb.s:597    .text:00000000000002a0 .L0 
GAS LISTING /tmp/ccroTLCb.s 			page 36


     /tmp/ccroTLCb.s:601    .text:00000000000002a4 .L0 
     /tmp/ccroTLCb.s:603    .text:00000000000002a8 .L0 
     /tmp/ccroTLCb.s:606    .text:00000000000002b0 .L0 
     /tmp/ccroTLCb.s:609    .text:00000000000002b8 .L0 
     /tmp/ccroTLCb.s:612    .text:00000000000002c0 .L0 
     /tmp/ccroTLCb.s:615    .text:00000000000002c8 .L0 
     /tmp/ccroTLCb.s:618    .text:00000000000002d0 .L0 
     /tmp/ccroTLCb.s:621    .text:00000000000002d8 .L0 
     /tmp/ccroTLCb.s:624    .text:00000000000002e0 .L0 
     /tmp/ccroTLCb.s:627    .text:00000000000002e8 .L0 
     /tmp/ccroTLCb.s:630    .text:00000000000002f0 .L0 
     /tmp/ccroTLCb.s:633    .text:00000000000002f8 .L0 
     /tmp/ccroTLCb.s:634    .text:00000000000002f8 .L0 
     /tmp/ccroTLCb.s:642    .text:0000000000000304 .L0 
     /tmp/ccroTLCb.s:648    .text:0000000000000314 .L0 
     /tmp/ccroTLCb.s:649    .text:0000000000000314 .L0 
     /tmp/ccroTLCb.s:650    .text:0000000000000314 .L0 
     /tmp/ccroTLCb.s:651    .text:0000000000000314 .L0 
     /tmp/ccroTLCb.s:654    .text:000000000000031c .L0 
     /tmp/ccroTLCb.s:658    .text:0000000000000320 .L0 
     /tmp/ccroTLCb.s:660    .text:0000000000000320 .L0 
     /tmp/ccroTLCb.s:663    .text:0000000000000320 .L0 
     /tmp/ccroTLCb.s:664    .text:0000000000000320 .L0 
     /tmp/ccroTLCb.s:665    .text:0000000000000320 .L0 
  src/../h/Riscv.hpp:101    .text:0000000000000320 .L0 
     /tmp/ccroTLCb.s:674    .text:0000000000000328 .L0 
     /tmp/ccroTLCb.s:675    .text:0000000000000328 .L0 
     /tmp/ccroTLCb.s:679    .text:000000000000032c .L0 
     /tmp/ccroTLCb.s:683    .text:0000000000000330 .L0 
     /tmp/ccroTLCb.s:684    .text:0000000000000330 .L0 
     /tmp/ccroTLCb.s:685    .text:0000000000000330 .L0 
  src/../h/Riscv.hpp:157    .text:0000000000000330 .L0 
     /tmp/ccroTLCb.s:693    .text:0000000000000338 .L0 
     /tmp/ccroTLCb.s:694    .text:0000000000000338 .L0 
     /tmp/ccroTLCb.s:698    .text:000000000000033c .L0 
     /tmp/ccroTLCb.s:703    .text:0000000000000340 .L0 
     /tmp/ccroTLCb.s:704    .text:0000000000000340 .L0 
     /tmp/ccroTLCb.s:705    .text:0000000000000340 .L0 
     /tmp/ccroTLCb.s:715    .text:0000000000000348 .L0 
     /tmp/ccroTLCb.s:716    .text:0000000000000348 .L0 
     /tmp/ccroTLCb.s:717    .text:0000000000000348 .L0 
     /tmp/ccroTLCb.s:722    .text:000000000000035c .L0 
     /tmp/ccroTLCb.s:723    .text:000000000000035c .L0 
     /tmp/ccroTLCb.s:728    .text:0000000000000370 .L0 
     /tmp/ccroTLCb.s:729    .text:0000000000000370 .L0 
     /tmp/ccroTLCb.s:732    .text:0000000000000378 .L0 
     /tmp/ccroTLCb.s:733    .text:0000000000000378 .L0 
     /tmp/ccroTLCb.s:740    .text:0000000000000384 .L0 
     /tmp/ccroTLCb.s:741    .text:0000000000000384 .L0 
     /tmp/ccroTLCb.s:746    .text:0000000000000388 .L0 
     /tmp/ccroTLCb.s:748    .text:000000000000038c .L0 
     /tmp/ccroTLCb.s:751    .text:0000000000000390 .L0 
     /tmp/ccroTLCb.s:752    .text:0000000000000390 .L0 
     /tmp/ccroTLCb.s:757    .text:0000000000000394 .L0 
  src/../h/Riscv.hpp:162    .text:0000000000000394 .L0 
     /tmp/ccroTLCb.s:767    .text:0000000000000398 .L0 
     /tmp/ccroTLCb.s:768    .text:0000000000000398 .L0 
GAS LISTING /tmp/ccroTLCb.s 			page 37


     /tmp/ccroTLCb.s:773    .text:000000000000039c .L0 
  src/../h/Riscv.hpp:106    .text:000000000000039c .L0 
     /tmp/ccroTLCb.s:787    .text:00000000000003a0 .L0 
     /tmp/ccroTLCb.s:788    .text:00000000000003a4 .L0 
     /tmp/ccroTLCb.s:789    .text:00000000000003a4 .L0 
     /tmp/ccroTLCb.s:791    .text:00000000000003a8 .L0 
     /tmp/ccroTLCb.s:792    .text:00000000000003a8 .L0 
     /tmp/ccroTLCb.s:794    .text:00000000000003ac .L0 
     /tmp/ccroTLCb.s:796    .text:00000000000003b0 .L0 
     /tmp/ccroTLCb.s:799    .text:00000000000003b4 .L0 
     /tmp/ccroTLCb.s:804    .text:00000000000003b4 .L0 
     /tmp/ccroTLCb.s:805    .text:00000000000003b4 .L0 
     /tmp/ccroTLCb.s:807    .text:00000000000003b8 .L0 
     /tmp/ccroTLCb.s:808    .text:00000000000003b8 .L0 
     /tmp/ccroTLCb.s:816    .text:00000000000003c4 .L0 
     /tmp/ccroTLCb.s:817    .text:00000000000003c4 .L0 
     /tmp/ccroTLCb.s:821    .text:00000000000003cc .L0 
     /tmp/ccroTLCb.s:822    .text:00000000000003cc .L0 
     /tmp/ccroTLCb.s:827    .text:00000000000003d0 .L0 
  src/../h/Riscv.hpp:162    .text:00000000000003d0 .L0 
     /tmp/ccroTLCb.s:837    .text:00000000000003d4 .L0 
     /tmp/ccroTLCb.s:838    .text:00000000000003d4 .L0 
     /tmp/ccroTLCb.s:843    .text:00000000000003d8 .L0 
  src/../h/Riscv.hpp:106    .text:00000000000003d8 .L0 
     /tmp/ccroTLCb.s:856    .text:00000000000003dc .L0 
     /tmp/ccroTLCb.s:863    .text:00000000000003e0 .L0 
     /tmp/ccroTLCb.s:864    .text:00000000000003e0 .L0 
     /tmp/ccroTLCb.s:870    .text:00000000000003ec .L0 
     /tmp/ccroTLCb.s:871    .text:00000000000003ec .L0 
     /tmp/ccroTLCb.s:877    .text:00000000000003f8 .L0 
     /tmp/ccroTLCb.s:878    .text:00000000000003f8 .L0 
     /tmp/ccroTLCb.s:884    .text:0000000000000404 .L0 
     /tmp/ccroTLCb.s:885    .text:0000000000000404 .L0 
     /tmp/ccroTLCb.s:891    .text:0000000000000410 .L0 
     /tmp/ccroTLCb.s:892    .text:0000000000000410 .L0 
     /tmp/ccroTLCb.s:898    .text:000000000000041c .L0 
     /tmp/ccroTLCb.s:899    .text:000000000000041c .L0 
     /tmp/ccroTLCb.s:905    .text:0000000000000428 .L0 
     /tmp/ccroTLCb.s:906    .text:0000000000000428 .L0 
     /tmp/ccroTLCb.s:912    .text:0000000000000434 .L0 
     /tmp/ccroTLCb.s:913    .text:0000000000000434 .L0 
     /tmp/ccroTLCb.s:919    .text:0000000000000440 .L0 
     /tmp/ccroTLCb.s:930    .text:0000000000000440 _ZN5Riscv10kernelMainEv
     /tmp/ccroTLCb.s:933    .text:0000000000000440 .L0 
     /tmp/ccroTLCb.s:5593   .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/ccroTLCb.s:936    .text:0000000000000440 .L0 
     /tmp/ccroTLCb.s:937    .text:0000000000000444 .L0 
     /tmp/ccroTLCb.s:942    .text:0000000000000454 .L0 
     /tmp/ccroTLCb.s:943    .text:0000000000000454 .L0 
     /tmp/ccroTLCb.s:944    .text:0000000000000454 .L0 
     /tmp/ccroTLCb.s:945    .text:0000000000000454 .L0 
     /tmp/ccroTLCb.s:947    .text:0000000000000458 .L0 
     /tmp/ccroTLCb.s:950    .text:0000000000000458 .L0 
     /tmp/ccroTLCb.s:951    .text:0000000000000458 .L0 
     /tmp/ccroTLCb.s:954    .text:0000000000000460 .L0 
     /tmp/ccroTLCb.s:955    .text:0000000000000460 .L0 
     /tmp/ccroTLCb.s:960    .text:0000000000000470 .L0 
GAS LISTING /tmp/ccroTLCb.s 			page 38


     /tmp/ccroTLCb.s:975    .text:000000000000049c .L0 
     /tmp/ccroTLCb.s:978    .text:000000000000049c .L0 
     /tmp/ccroTLCb.s:979    .text:000000000000049c .L0 
     /tmp/ccroTLCb.s:980    .text:000000000000049c .L0 
     /tmp/ccroTLCb.s:985    .text:00000000000004a0 .L0 
     /tmp/ccroTLCb.s:989    .text:00000000000004a8 .L0 
     /tmp/ccroTLCb.s:990    .text:00000000000004a8 .L0 
     /tmp/ccroTLCb.s:993    .text:00000000000004b0 .L0 
     /tmp/ccroTLCb.s:996    .text:00000000000004b4 .L0 
     /tmp/ccroTLCb.s:997    .text:00000000000004b4 .L0 
     /tmp/ccroTLCb.s:1000   .text:00000000000004bc .L0 
     /tmp/ccroTLCb.s:1001   .text:00000000000004bc .L0 
     /tmp/ccroTLCb.s:1006   .text:00000000000004cc .L0 
     /tmp/ccroTLCb.s:1007   .text:00000000000004d0 .L0 
     /tmp/ccroTLCb.s:1008   .text:00000000000004d0 .L0 
     /tmp/ccroTLCb.s:1010   .text:00000000000004d4 .L0 
     /tmp/ccroTLCb.s:1011   .text:00000000000004d4 .L0 
     /tmp/ccroTLCb.s:1013   .text:00000000000004d8 .L0 
     /tmp/ccroTLCb.s:1015   .text:00000000000004dc .L0 
     /tmp/ccroTLCb.s:1017   .text:00000000000004e0 .L0 
     /tmp/ccroTLCb.s:1020   .text:00000000000004e4 .L0 
     /tmp/ccroTLCb.s:1023   .text:00000000000004e8 .L0 
     /tmp/ccroTLCb.s:1031   .text:0000000000000500 .L0 
     /tmp/ccroTLCb.s:1060   .rodata:0000000000000000 .LANCHOR0
     /tmp/ccroTLCb.s:1063   .rodata:0000000000000000 _ZZN5Riscv12printIntegerEmE6digits
     /tmp/ccroTLCb.s:1067   .bss:0000000000000000 .LANCHOR1
     /tmp/ccroTLCb.s:1070   .bss:0000000000000000 _ZZN5Riscv20handleSupervisorTrapEvE5total
     /tmp/ccroTLCb.s:1082   .text:0000000000000500 .L0 
     /tmp/ccroTLCb.s:55     .text:0000000000000038 .L0 
     /tmp/ccroTLCb.s:416    .text:00000000000001a0 .L0 
     /tmp/ccroTLCb.s:514    .text:000000000000023c .L0 
     /tmp/ccroTLCb.s:717    .text:0000000000000348 .L0 
     /tmp/ccroTLCb.s:723    .text:000000000000035c .L0 
     /tmp/ccroTLCb.s:733    .text:0000000000000378 .L0 
     /tmp/ccroTLCb.s:968    .text:000000000000048c .L0 
     /tmp/ccroTLCb.s:924    .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccroTLCb.s:1001   .text:00000000000004bc .L0 
     /tmp/ccroTLCb.s:302    .text:0000000000000134 .L14
     /tmp/ccroTLCb.s:283    .text:000000000000011c .L15
     /tmp/ccroTLCb.s:406    .text:0000000000000190 .L18
     /tmp/ccroTLCb.s:448    .text:00000000000001f0 .L19
     /tmp/ccroTLCb.s:434    .text:00000000000001d0 .L20
     /tmp/ccroTLCb.s:656    .text:0000000000000320 .L23
     /tmp/ccroTLCb.s:638    .text:0000000000000304 .L24
     /tmp/ccroTLCb.s:780    .text:00000000000003a0 .L22
     /tmp/ccroTLCb.s:812    .text:00000000000003c4 .L41
     /tmp/ccroTLCb.s:858    .text:00000000000003e0 .L42
     /tmp/ccroTLCb.s:868    .text:00000000000003ec .L43
     /tmp/ccroTLCb.s:875    .text:00000000000003f8 .L44
     /tmp/ccroTLCb.s:882    .text:0000000000000404 .L45
     /tmp/ccroTLCb.s:889    .text:0000000000000410 .L46
     /tmp/ccroTLCb.s:896    .text:000000000000041c .L47
     /tmp/ccroTLCb.s:903    .text:0000000000000428 .L48
     /tmp/ccroTLCb.s:910    .text:0000000000000434 .L49
     /tmp/ccroTLCb.s:819    .text:00000000000003cc .L30
     /tmp/ccroTLCb.s:798    .text:00000000000003b4 .L50
     /tmp/ccroTLCb.s:749    .text:0000000000000390 .L28
GAS LISTING /tmp/ccroTLCb.s 			page 39


     /tmp/ccroTLCb.s:994    .text:00000000000004b4 .L52
     /tmp/ccroTLCb.s:973    .text:000000000000049c .L53
     /tmp/ccroTLCb.s:949    .text:0000000000000458 .LEHB0
     /tmp/ccroTLCb.s:931    .text:0000000000000440 .LFB49
     /tmp/ccroTLCb.s:963    .text:000000000000047c .LEHE0
     /tmp/ccroTLCb.s:969    .text:0000000000000494 .LEHB1
     /tmp/ccroTLCb.s:972    .text:000000000000049c .LEHE1
     /tmp/ccroTLCb.s:1019   .text:00000000000004e4 .L55
     /tmp/ccroTLCb.s:988    .text:00000000000004a8 .LEHB2
     /tmp/ccroTLCb.s:1004   .text:00000000000004cc .LEHE2
     /tmp/ccroTLCb.s:1027   .text:00000000000004f8 .LEHB3
     /tmp/ccroTLCb.s:1030   .text:0000000000000500 .LEHE3
     /tmp/ccroTLCb.s:3566   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccroTLCb.s:5077   .debug_str:000000000000026b .LASF277
     /tmp/ccroTLCb.s:5107   .debug_str:0000000000000401 .LASF278
     /tmp/ccroTLCb.s:5483   .debug_str:0000000000001047 .LASF279
     /tmp/ccroTLCb.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccroTLCb.s:1073   .text:0000000000000500 .Letext0
     /tmp/ccroTLCb.s:5015   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccroTLCb.s:5211   .debug_str:000000000000077d .LASF0
     /tmp/ccroTLCb.s:5377   .debug_str:0000000000000d29 .LASF3
     /tmp/ccroTLCb.s:5247   .debug_str:00000000000008ad .LASF1
     /tmp/ccroTLCb.s:5389   .debug_str:0000000000000d84 .LASF2
     /tmp/ccroTLCb.s:5407   .debug_str:0000000000000e1b .LASF4
     /tmp/ccroTLCb.s:5229   .debug_str:000000000000080a .LASF5
     /tmp/ccroTLCb.s:5041   .debug_str:00000000000000f1 .LASF6
     /tmp/ccroTLCb.s:5355   .debug_str:0000000000000c77 .LASF7
     /tmp/ccroTLCb.s:5343   .debug_str:0000000000000c21 .LASF8
     /tmp/ccroTLCb.s:5237   .debug_str:0000000000000874 .LASF9
     /tmp/ccroTLCb.s:5177   .debug_str:0000000000000646 .LASF10
     /tmp/ccroTLCb.s:5189   .debug_str:00000000000006b1 .LASF11
     /tmp/ccroTLCb.s:5093   .debug_str:00000000000003b2 .LASF12
     /tmp/ccroTLCb.s:5165   .debug_str:0000000000000602 .LASF13
     /tmp/ccroTLCb.s:5109   .debug_str:000000000000040f .LASF14
     /tmp/ccroTLCb.s:5091   .debug_str:00000000000003a2 .LASF15
     /tmp/ccroTLCb.s:5449   .debug_str:0000000000000f60 .LASF16
     /tmp/ccroTLCb.s:5147   .debug_str:000000000000053d .LASF17
     /tmp/ccroTLCb.s:5437   .debug_str:0000000000000ede .LASF18
     /tmp/ccroTLCb.s:5525   .debug_str:000000000000118b .LASF95
     /tmp/ccroTLCb.s:5371   .debug_str:0000000000000cff .LASF22
     /tmp/ccroTLCb.s:5257   .debug_str:00000000000008f0 .LASF19
     /tmp/ccroTLCb.s:5153   .debug_str:000000000000057e .LASF20
     /tmp/ccroTLCb.s:5545   .debug_str:0000000000001239 .LASF21
     /tmp/ccroTLCb.s:5511   .debug_str:000000000000110d .LASF23
     /tmp/ccroTLCb.s:5159   .debug_str:00000000000005be .LASF24
     /tmp/ccroTLCb.s:5471   .debug_str:0000000000000fe4 .LASF25
     /tmp/ccroTLCb.s:5125   .debug_str:000000000000049b .LASF26
     /tmp/ccroTLCb.s:5205   .debug_str:0000000000000754 .LASF27
     /tmp/ccroTLCb.s:5441   .debug_str:0000000000000f03 .LASF29
     /tmp/ccroTLCb.s:5301   .debug_str:0000000000000a81 .LASF28
     /tmp/ccroTLCb.s:5283   .debug_str:00000000000009cc .LASF30
     /tmp/ccroTLCb.s:5143   .debug_str:0000000000000520 .LASF31
     /tmp/ccroTLCb.s:5029   .debug_str:000000000000005b .LASF32
     /tmp/ccroTLCb.s:5285   .debug_str:00000000000009e4 .LASF37
     /tmp/ccroTLCb.s:5517   .debug_str:0000000000001137 .LASF39
     /tmp/ccroTLCb.s:5089   .debug_str:0000000000000391 .LASF33
     /tmp/ccroTLCb.s:5265   .debug_str:0000000000000933 .LASF34
GAS LISTING /tmp/ccroTLCb.s 			page 40


     /tmp/ccroTLCb.s:5223   .debug_str:00000000000007e3 .LASF35
     /tmp/ccroTLCb.s:5115   .debug_str:0000000000000455 .LASF36
     /tmp/ccroTLCb.s:5553   .debug_str:000000000000126d .LASF38
     /tmp/ccroTLCb.s:5055   .debug_str:0000000000000190 .LASF40
     /tmp/ccroTLCb.s:5351   .debug_str:0000000000000c5a .LASF41
     /tmp/ccroTLCb.s:5059   .debug_str:00000000000001b0 .LASF42
     /tmp/ccroTLCb.s:5417   .debug_str:0000000000000e4c .LASF43
     /tmp/ccroTLCb.s:5151   .debug_str:0000000000000563 .LASF44
     /tmp/ccroTLCb.s:5217   .debug_str:00000000000007bc .LASF45
     /tmp/ccroTLCb.s:5537   .debug_str:00000000000011f1 .LASF46
     /tmp/ccroTLCb.s:5507   .debug_str:00000000000010ff .LASF49
     /tmp/ccroTLCb.s:5495   .debug_str:00000000000010a5 .LASF51
     /tmp/ccroTLCb.s:5385   .debug_str:0000000000000d70 .LASF47
     /tmp/ccroTLCb.s:5323   .debug_str:0000000000000b4b .LASF48
     /tmp/ccroTLCb.s:5361   .debug_str:0000000000000c91 .LASF50
     /tmp/ccroTLCb.s:5367   .debug_str:0000000000000cd8 .LASF52
     /tmp/ccroTLCb.s:5315   .debug_str:0000000000000aec .LASF53
     /tmp/ccroTLCb.s:5239   .debug_str:0000000000000887 .LASF54
     /tmp/ccroTLCb.s:5539   .debug_str:000000000000120b .LASF55
     /tmp/ccroTLCb.s:5477   .debug_str:0000000000001006 .LASF56
     /tmp/ccroTLCb.s:5309   .debug_str:0000000000000abc .LASF57
     /tmp/ccroTLCb.s:5321   .debug_str:0000000000000b37 .LASF58
     /tmp/ccroTLCb.s:5295   .debug_str:0000000000000a42 .LASF59
     /tmp/ccroTLCb.s:5369   .debug_str:0000000000000ceb .LASF60
     /tmp/ccroTLCb.s:5581   .debug_str:0000000000001334 .LASF61
     /tmp/ccroTLCb.s:5221   .debug_str:00000000000007cf .LASF62
     /tmp/ccroTLCb.s:5445   .debug_str:0000000000000f37 .LASF63
     /tmp/ccroTLCb.s:5411   .debug_str:0000000000000e2a .LASF64
     /tmp/ccroTLCb.s:5413   .debug_str:0000000000000e3d .LASF65
     /tmp/ccroTLCb.s:5099   .debug_str:00000000000003cf .LASF66
     /tmp/ccroTLCb.s:5137   .debug_str:00000000000004e0 .LASF67
     /tmp/ccroTLCb.s:5047   .debug_str:0000000000000124 .LASF68
     /tmp/ccroTLCb.s:5219   .debug_str:00000000000007c9 .LASF69
     /tmp/ccroTLCb.s:5129   .debug_str:00000000000004ba .LASF70
     /tmp/ccroTLCb.s:5043   .debug_str:00000000000000f8 .LASF71
     /tmp/ccroTLCb.s:5395   .debug_str:0000000000000daa .LASF72
     /tmp/ccroTLCb.s:5387   .debug_str:0000000000000d79 .LASF73
     /tmp/ccroTLCb.s:5571   .debug_str:00000000000012e0 .LASF74
     /tmp/ccroTLCb.s:5527   .debug_str:0000000000001191 .LASF75
     /tmp/ccroTLCb.s:5551   .debug_str:0000000000001257 .LASF76
     /tmp/ccroTLCb.s:5519   .debug_str:0000000000001155 .LASF77
     /tmp/ccroTLCb.s:5287   .debug_str:00000000000009f4 .LASF78
     /tmp/ccroTLCb.s:5199   .debug_str:000000000000072e .LASF79
     /tmp/ccroTLCb.s:5207   .debug_str:000000000000075f .LASF80
     /tmp/ccroTLCb.s:5499   .debug_str:00000000000010c6 .LASF81
     /tmp/ccroTLCb.s:5187   .debug_str:0000000000000695 .LASF82
     /tmp/ccroTLCb.s:5347   .debug_str:0000000000000c3c .LASF83
     /tmp/ccroTLCb.s:5235   .debug_str:0000000000000852 .LASF84
     /tmp/ccroTLCb.s:5381   .debug_str:0000000000000d50 .LASF85
     /tmp/ccroTLCb.s:5035   .debug_str:00000000000000a7 .LASF86
     /tmp/ccroTLCb.s:5069   .debug_str:0000000000000232 .LASF87
     /tmp/ccroTLCb.s:5497   .debug_str:00000000000010ba .LASF88
     /tmp/ccroTLCb.s:5071   .debug_str:0000000000000241 .LASF89
     /tmp/ccroTLCb.s:5299   .debug_str:0000000000000a6f .LASF90
     /tmp/ccroTLCb.s:5191   .debug_str:00000000000006bf .LASF91
     /tmp/ccroTLCb.s:5139   .debug_str:00000000000004e6 .LASF92
     /tmp/ccroTLCb.s:5087   .debug_str:000000000000037d .LASF93
GAS LISTING /tmp/ccroTLCb.s 			page 41


     /tmp/ccroTLCb.s:5463   .debug_str:0000000000000fbf .LASF94
     /tmp/ccroTLCb.s:5335   .debug_str:0000000000000bbb .LASF96
     /tmp/ccroTLCb.s:5429   .debug_str:0000000000000ea2 .LASF130
     /tmp/ccroTLCb.s:5245   .debug_str:00000000000008a8 .LASF97
     /tmp/ccroTLCb.s:5095   .debug_str:00000000000003c1 .LASF98
     /tmp/ccroTLCb.s:5173   .debug_str:0000000000000630 .LASF99
     /tmp/ccroTLCb.s:5249   .debug_str:00000000000008c0 .LASF100
     /tmp/ccroTLCb.s:5255   .debug_str:00000000000008dd .LASF101
     /tmp/ccroTLCb.s:5171   .debug_str:0000000000000627 .LASF102
     /tmp/ccroTLCb.s:5583   .debug_str:000000000000133c .LASF103
     /tmp/ccroTLCb.s:5291   .debug_str:0000000000000a17 .LASF104
     /tmp/ccroTLCb.s:5045   .debug_str:0000000000000103 .LASF106
     /tmp/ccroTLCb.s:5457   .debug_str:0000000000000f96 .LASF105
     /tmp/ccroTLCb.s:5293   .debug_str:0000000000000a21 .LASF107
     /tmp/ccroTLCb.s:5515   .debug_str:000000000000112c .LASF108
     /tmp/ccroTLCb.s:5481   .debug_str:0000000000001024 .LASF109
     /tmp/ccroTLCb.s:5451   .debug_str:0000000000000f6c .LASF110
     /tmp/ccroTLCb.s:5037   .debug_str:00000000000000af .LASF111
     /tmp/ccroTLCb.s:5531   .debug_str:00000000000011a0 .LASF112
     /tmp/ccroTLCb.s:5033   .debug_str:0000000000000079 .LASF113
     /tmp/ccroTLCb.s:5461   .debug_str:0000000000000faa .LASF114
     /tmp/ccroTLCb.s:5197   .debug_str:00000000000006ff .LASF115
     /tmp/ccroTLCb.s:5023   .debug_str:000000000000002b .LASF116
     /tmp/ccroTLCb.s:5325   .debug_str:0000000000000b60 .LASF117
     /tmp/ccroTLCb.s:5149   .debug_str:0000000000000553 .LASF118
     /tmp/ccroTLCb.s:5535   .debug_str:00000000000011c9 .LASF119
     /tmp/ccroTLCb.s:5439   .debug_str:0000000000000ef4 .LASF120
     /tmp/ccroTLCb.s:5141   .debug_str:00000000000004f9 .LASF121
     /tmp/ccroTLCb.s:5465   .debug_str:0000000000000fc4 .LASF122
     /tmp/ccroTLCb.s:5085   .debug_str:0000000000000377 .LASF123
     /tmp/ccroTLCb.s:5427   .debug_str:0000000000000e9a .LASF124
     /tmp/ccroTLCb.s:5101   .debug_str:00000000000003e2 .LASF125
     /tmp/ccroTLCb.s:5073   .debug_str:0000000000000254 .LASF126
     /tmp/ccroTLCb.s:5345   .debug_str:0000000000000c34 .LASF127
     /tmp/ccroTLCb.s:5243   .debug_str:000000000000089f .LASF128
     /tmp/ccroTLCb.s:5409   .debug_str:0000000000000e22 .LASF185
     /tmp/ccroTLCb.s:5201   .debug_str:0000000000000739 .LASF129
     /tmp/ccroTLCb.s:5487   .debug_str:000000000000107c .LASF140
     /tmp/ccroTLCb.s:5305   .debug_str:0000000000000a9b .LASF280
     /tmp/ccroTLCb.s:5329   .debug_str:0000000000000b9a .LASF131
     /tmp/ccroTLCb.s:5529   .debug_str:000000000000119b .LASF132
     /tmp/ccroTLCb.s:5569   .debug_str:00000000000012d4 .LASF133
     /tmp/ccroTLCb.s:5563   .debug_str:00000000000012ab .LASF134
     /tmp/ccroTLCb.s:5475   .debug_str:0000000000000ff6 .LASF135
     /tmp/ccroTLCb.s:5131   .debug_str:00000000000004cc .LASF136
     /tmp/ccroTLCb.s:5053   .debug_str:000000000000017d .LASF137
     /tmp/ccroTLCb.s:5253   .debug_str:00000000000008d7 .LASF138
     /tmp/ccroTLCb.s:5331   .debug_str:0000000000000b9f .LASF139
     /tmp/ccroTLCb.s:5469   .debug_str:0000000000000fdc .LASF141
     /tmp/ccroTLCb.s:5419   .debug_str:0000000000000e5a .LASF142
     /tmp/ccroTLCb.s:5281   .debug_str:00000000000009bf .LASF147
     /tmp/ccroTLCb.s:5267   .debug_str:0000000000000951 .LASF149
     /tmp/ccroTLCb.s:5575   .debug_str:0000000000001308 .LASF143
     /tmp/ccroTLCb.s:5169   .debug_str:000000000000061b .LASF144
     /tmp/ccroTLCb.s:5213   .debug_str:000000000000078a .LASF145
     /tmp/ccroTLCb.s:5225   .debug_str:00000000000007f5 .LASF146
     /tmp/ccroTLCb.s:5421   .debug_str:0000000000000e6b .LASF148
GAS LISTING /tmp/ccroTLCb.s 			page 42


     /tmp/ccroTLCb.s:5127   .debug_str:00000000000004a7 .LASF150
     /tmp/ccroTLCb.s:5401   .debug_str:0000000000000de1 .LASF151
     /tmp/ccroTLCb.s:5443   .debug_str:0000000000000f1b .LASF152
     /tmp/ccroTLCb.s:5303   .debug_str:0000000000000a8c .LASF153
     /tmp/ccroTLCb.s:5025   .debug_str:000000000000003c .LASF154
     /tmp/ccroTLCb.s:5549   .debug_str:0000000000001248 .LASF155
     /tmp/ccroTLCb.s:5339   .debug_str:0000000000000bf3 .LASF156
     /tmp/ccroTLCb.s:5435   .debug_str:0000000000000ed0 .LASF157
     /tmp/ccroTLCb.s:5359   .debug_str:0000000000000c85 .LASF158
     /tmp/ccroTLCb.s:5019   .debug_str:000000000000000f .LASF159
     /tmp/ccroTLCb.s:5555   .debug_str:0000000000001279 .LASF160
     /tmp/ccroTLCb.s:5231   .debug_str:000000000000081c .LASF161
     /tmp/ccroTLCb.s:5433   .debug_str:0000000000000ec5 .LASF162
     /tmp/ccroTLCb.s:5567   .debug_str:00000000000012be .LASF163
     /tmp/ccroTLCb.s:5459   .debug_str:0000000000000f9f .LASF164
     /tmp/ccroTLCb.s:5119   .debug_str:0000000000000479 .LASF165
     /tmp/ccroTLCb.s:5415   .debug_str:0000000000000e44 .LASF166
     /tmp/ccroTLCb.s:5341   .debug_str:0000000000000c0d .LASF167
     /tmp/ccroTLCb.s:5313   .debug_str:0000000000000acd .LASF168
     /tmp/ccroTLCb.s:5113   .debug_str:0000000000000443 .LASF169
     /tmp/ccroTLCb.s:5365   .debug_str:0000000000000cbb .LASF170
     /tmp/ccroTLCb.s:5585   .debug_str:0000000000001346 .LASF171
     /tmp/ccroTLCb.s:5317   .debug_str:0000000000000af3 .LASF172
     /tmp/ccroTLCb.s:5399   .debug_str:0000000000000dce .LASF173
     /tmp/ccroTLCb.s:5423   .debug_str:0000000000000e74 .LASF174
     /tmp/ccroTLCb.s:5479   .debug_str:000000000000101a .LASF175
     /tmp/ccroTLCb.s:5333   .debug_str:0000000000000baf .LASF176
     /tmp/ccroTLCb.s:5561   .debug_str:000000000000129d .LASF177
     /tmp/ccroTLCb.s:5065   .debug_str:00000000000001f7 .LASF179
     /tmp/ccroTLCb.s:5063   .debug_str:00000000000001e2 .LASF178
     /tmp/ccroTLCb.s:5083   .debug_str:000000000000034b .LASF180
     /tmp/ccroTLCb.s:5577   .debug_str:0000000000001315 .LASF281
     /tmp/ccroTLCb.s:5081   .debug_str:000000000000033a .LASF282
     /tmp/ccroTLCb.s:5027   .debug_str:0000000000000056 .LASF181
     /tmp/ccroTLCb.s:5509   .debug_str:0000000000001108 .LASF182
     /tmp/ccroTLCb.s:5271   .debug_str:0000000000000983 .LASF183
     /tmp/ccroTLCb.s:5135   .debug_str:00000000000004da .LASF184
     /tmp/ccroTLCb.s:5493   .debug_str:000000000000109d .LASF186
     /tmp/ccroTLCb.s:5277   .debug_str:00000000000009a6 .LASF187
     /tmp/ccroTLCb.s:5375   .debug_str:0000000000000d1e .LASF188
     /tmp/ccroTLCb.s:5185   .debug_str:0000000000000681 .LASF189
     /tmp/ccroTLCb.s:5393   .debug_str:0000000000000d9e .LASF190
     /tmp/ccroTLCb.s:5373   .debug_str:0000000000000d0a .LASF191
     /tmp/ccroTLCb.s:5133   .debug_str:00000000000004d5 .LASF192
     /tmp/ccroTLCb.s:5431   .debug_str:0000000000000eae .LASF193
     /tmp/ccroTLCb.s:5453   .debug_str:0000000000000f87 .LASF194
     /tmp/ccroTLCb.s:5383   .debug_str:0000000000000d57 .LASF195
     /tmp/ccroTLCb.s:5021   .debug_str:000000000000001f .LASF196
     /tmp/ccroTLCb.s:5397   .debug_str:0000000000000dc2 .LASF197
     /tmp/ccroTLCb.s:5279   .debug_str:00000000000009ab .LASF198
     /tmp/ccroTLCb.s:5203   .debug_str:000000000000073f .LASF199
     /tmp/ccroTLCb.s:5097   .debug_str:00000000000003c6 .LASF200
     /tmp/ccroTLCb.s:5103   .debug_str:00000000000003ec .LASF201
     /tmp/ccroTLCb.s:5307   .debug_str:0000000000000ab3 .LASF202
     /tmp/ccroTLCb.s:5405   .debug_str:0000000000000e10 .LASF203
     /tmp/ccroTLCb.s:5017   .debug_str:0000000000000000 .LASF204
     /tmp/ccroTLCb.s:5195   .debug_str:00000000000006dd .LASF205
GAS LISTING /tmp/ccroTLCb.s 			page 43


     /tmp/ccroTLCb.s:5491   .debug_str:000000000000108e .LASF206
     /tmp/ccroTLCb.s:5447   .debug_str:0000000000000f3e .LASF207
     /tmp/ccroTLCb.s:5273   .debug_str:000000000000098b .LASF208
     /tmp/ccroTLCb.s:5111   .debug_str:000000000000041f .LASF209
     /tmp/ccroTLCb.s:5327   .debug_str:0000000000000b8a .LASF210
     /tmp/ccroTLCb.s:5363   .debug_str:0000000000000c98 .LASF211
     /tmp/ccroTLCb.s:5251   .debug_str:00000000000008ce .LASF212
     /tmp/ccroTLCb.s:5209   .debug_str:0000000000000777 .LASF213
     /tmp/ccroTLCb.s:5579   .debug_str:000000000000131c .LASF214
     /tmp/ccroTLCb.s:5031   .debug_str:0000000000000071 .LASF215
     /tmp/ccroTLCb.s:5269   .debug_str:0000000000000969 .LASF216
     /tmp/ccroTLCb.s:5573   .debug_str:00000000000012f8 .LASF217
     /tmp/ccroTLCb.s:5319   .debug_str:0000000000000b14 .LASF218
     /tmp/ccroTLCb.s:5533   .debug_str:00000000000011b6 .LASF219
     /tmp/ccroTLCb.s:5403   .debug_str:0000000000000dea .LASF220
     /tmp/ccroTLCb.s:5565   .debug_str:00000000000012b1 .LASF221
     /tmp/ccroTLCb.s:5051   .debug_str:0000000000000159 .LASF222
     /tmp/ccroTLCb.s:5543   .debug_str:000000000000122c .LASF223
     /tmp/ccroTLCb.s:5353   .debug_str:0000000000000c67 .LASF224
     /tmp/ccroTLCb.s:5485   .debug_str:000000000000106a .LASF225
     /tmp/ccroTLCb.s:5161   .debug_str:00000000000005ca .LASF226
     /tmp/ccroTLCb.s:5075   .debug_str:000000000000025d .LASF227
     /tmp/ccroTLCb.s:5049   .debug_str:0000000000000136 .LASF228
     /tmp/ccroTLCb.s:5311   .debug_str:0000000000000ac4 .LASF229
     /tmp/ccroTLCb.s:5117   .debug_str:0000000000000474 .LASF230
     /tmp/ccroTLCb.s:5241   .debug_str:000000000000089a .LASF231
     /tmp/ccroTLCb.s:5167   .debug_str:0000000000000611 .LASF232
     /tmp/ccroTLCb.s:5557   .debug_str:0000000000001284 .LASF233
     /tmp/ccroTLCb.s:5105   .debug_str:00000000000003f6 .LASF234
     /tmp/ccroTLCb.s:5193   .debug_str:00000000000006d2 .LASF235
     /tmp/ccroTLCb.s:5179   .debug_str:0000000000000656 .LASF236
     /tmp/ccroTLCb.s:5155   .debug_str:0000000000000587 .LASF237
     /tmp/ccroTLCb.s:5455   .debug_str:0000000000000f8e .LASF238
     /tmp/ccroTLCb.s:5297   .debug_str:0000000000000a4a .LASF239
     /tmp/ccroTLCb.s:5227   .debug_str:0000000000000802 .LASF240
     /tmp/ccroTLCb.s:5521   .debug_str:000000000000115f .LASF241
     /tmp/ccroTLCb.s:5503   .debug_str:00000000000010e7 .LASF242
     /tmp/ccroTLCb.s:5215   .debug_str:000000000000079a .LASF243
     /tmp/ccroTLCb.s:5501   .debug_str:00000000000010d5 .LASF244
     /tmp/ccroTLCb.s:5379   .debug_str:0000000000000d2e .LASF245
     /tmp/ccroTLCb.s:5067   .debug_str:000000000000021f .LASF246
     /tmp/ccroTLCb.s:5079   .debug_str:0000000000000317 .LASF247
     /tmp/ccroTLCb.s:5145   .debug_str:000000000000052a .LASF248
     /tmp/ccroTLCb.s:5157   .debug_str:000000000000059b .LASF249
     /tmp/ccroTLCb.s:5259   .debug_str:00000000000008f9 .LASF250
     /tmp/ccroTLCb.s:5541   .debug_str:0000000000001213 .LASF251
     /tmp/ccroTLCb.s:5233   .debug_str:0000000000000829 .LASF252
     /tmp/ccroTLCb.s:5261   .debug_str:0000000000000914 .LASF253
     /tmp/ccroTLCb.s:5337   .debug_str:0000000000000bcb .LASF254
     /tmp/ccroTLCb.s:5163   .debug_str:00000000000005f1 .LASF255
     /tmp/ccroTLCb.s:5467   .debug_str:0000000000000fca .LASF256
     /tmp/ccroTLCb.s:5175   .debug_str:0000000000000639 .LASF257
     /tmp/ccroTLCb.s:5039   .debug_str:00000000000000e4 .LASF258
     /tmp/ccroTLCb.s:10     .text:0000000000000000 .LFB50
     /tmp/ccroTLCb.s:36     .text:0000000000000028 .LFE50
     /tmp/ccroTLCb.s:25     .text:0000000000000018 .LVL0
     /tmp/ccroTLCb.s:1032   .text:0000000000000500 .LFE49
GAS LISTING /tmp/ccroTLCb.s 			page 44


     /tmp/ccroTLCb.s:5183   .debug_str:0000000000000679 .LASF267
     /tmp/ccroTLCb.s:976    .text:000000000000049c .LBB100
     /tmp/ccroTLCb.s:983    .text:00000000000004a0 .LBE100
     /tmp/ccroTLCb.s:4743   .debug_loc:0000000000000000 .LLST20
     /tmp/ccroTLCb.s:952    .text:0000000000000460 .LVL74
     /tmp/ccroTLCb.s:957    .text:000000000000046c .LVL75
     /tmp/ccroTLCb.s:962    .text:000000000000047c .LVL76
     /tmp/ccroTLCb.s:971    .text:000000000000049c .LVL77
     /tmp/ccroTLCb.s:991    .text:00000000000004b0 .LVL79
     /tmp/ccroTLCb.s:998    .text:00000000000004bc .LVL80
     /tmp/ccroTLCb.s:1003   .text:00000000000004cc .LVL81
     /tmp/ccroTLCb.s:1025   .text:00000000000004f4 .LVL82
     /tmp/ccroTLCb.s:1029   .text:0000000000000500 .LVL83
     /tmp/ccroTLCb.s:494    .text:0000000000000224 .LFB48
     /tmp/ccroTLCb.s:920    .text:0000000000000440 .LFE48
     /tmp/ccroTLCb.s:5357   .debug_str:0000000000000c7e .LASF259
     /tmp/ccroTLCb.s:4750   .debug_loc:0000000000000023 .LLST12
     /tmp/ccroTLCb.s:4999   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccroTLCb.s:5473   .debug_str:0000000000000ff1 .LASF260
     /tmp/ccroTLCb.s:5425   .debug_str:0000000000000e92 .LASF261
     /tmp/ccroTLCb.s:5505   .debug_str:00000000000010f9 .LASF262
     /tmp/ccroTLCb.s:661    .text:0000000000000320 .LBB80
     /tmp/ccroTLCb.s:677    .text:000000000000032c .LBE80
     /tmp/ccroTLCb.s:681    .text:0000000000000330 .LBB82
     /tmp/ccroTLCb.s:696    .text:000000000000033c .LBE82
     /tmp/ccroTLCb.s:701    .text:0000000000000340 .LBB84
     /tmp/ccroTLCb.s:713    .text:0000000000000348 .LBE84
     /tmp/ccroTLCb.s:4771   .debug_loc:0000000000000081 .LLST16
     /tmp/ccroTLCb.s:736    .text:0000000000000384 .LBB86
     /tmp/ccroTLCb.s:744    .text:0000000000000388 .LBE86
     /tmp/ccroTLCb.s:4779   .debug_loc:00000000000000a5 .LLST17
     /tmp/ccroTLCb.s:754    .text:0000000000000394 .LBB88
     /tmp/ccroTLCb.s:765    .text:0000000000000398 .LBE88
     /tmp/ccroTLCb.s:4786   .debug_loc:00000000000000c8 .LLST18
     /tmp/ccroTLCb.s:770    .text:000000000000039c .LBB90
     /tmp/ccroTLCb.s:782    .text:00000000000003a0 .LBE90
     /tmp/ccroTLCb.s:4793   .debug_loc:00000000000000eb .LLST19
     /tmp/ccroTLCb.s:730    .text:0000000000000378 .LVL44
     /tmp/ccroTLCb.s:809    .text:00000000000003c0 .LVL51
     /tmp/ccroTLCb.s:5275   .debug_str:000000000000099c .LASF263
     /tmp/ccroTLCb.s:4800   .debug_loc:000000000000010e .LLST13
     /tmp/ccroTLCb.s:563    .text:0000000000000284 .LBB71
     /tmp/ccroTLCb.s:578    .text:0000000000000290 .LBE71
     /tmp/ccroTLCb.s:584    .text:0000000000000298 .LBB73
     /tmp/ccroTLCb.s:599    .text:00000000000002a4 .LBE73
     /tmp/ccroTLCb.s:824    .text:00000000000003d0 .LBB75
     /tmp/ccroTLCb.s:835    .text:00000000000003d4 .LBE75
     /tmp/ccroTLCb.s:4843   .debug_loc:00000000000001dc .LLST14
     /tmp/ccroTLCb.s:840    .text:00000000000003d8 .LBB77
     /tmp/ccroTLCb.s:851    .text:00000000000003dc .LBE77
     /tmp/ccroTLCb.s:4850   .debug_loc:00000000000001ff .LLST15
     /tmp/ccroTLCb.s:635    .text:0000000000000300 .LVL37
     /tmp/ccroTLCb.s:818    .text:00000000000003cc .LVL53
     /tmp/ccroTLCb.s:865    .text:00000000000003e8 .LVL59
     /tmp/ccroTLCb.s:872    .text:00000000000003f4 .LVL61
     /tmp/ccroTLCb.s:879    .text:0000000000000400 .LVL63
     /tmp/ccroTLCb.s:886    .text:000000000000040c .LVL65
GAS LISTING /tmp/ccroTLCb.s 			page 45


     /tmp/ccroTLCb.s:893    .text:0000000000000418 .LVL67
     /tmp/ccroTLCb.s:900    .text:0000000000000424 .LVL69
     /tmp/ccroTLCb.s:907    .text:0000000000000430 .LVL71
     /tmp/ccroTLCb.s:914    .text:000000000000043c .LVL73
     /tmp/ccroTLCb.s:517    .text:0000000000000248 .LBB66
     /tmp/ccroTLCb.s:533    .text:0000000000000254 .LBE66
     /tmp/ccroTLCb.s:652    .text:000000000000031c .LVL39
     /tmp/ccroTLCb.s:344    .text:000000000000015c .LFB47
     /tmp/ccroTLCb.s:488    .text:0000000000000224 .LFE47
     /tmp/ccroTLCb.s:4857   .debug_loc:0000000000000222 .LLST6
     /tmp/ccroTLCb.s:4871   .debug_loc:000000000000025b .LLST7
     /tmp/ccroTLCb.s:5489   .debug_str:0000000000001087 .LASF264
     /tmp/ccroTLCb.s:4878   .debug_loc:000000000000027e .LLST8
     /tmp/ccroTLCb.s:4900   .debug_loc:00000000000002dd .LLST9
     /tmp/ccroTLCb.s:361    .text:0000000000000174 .LBB60
     /tmp/ccroTLCb.s:377    .text:0000000000000180 .LBE60
     /tmp/ccroTLCb.s:379    .text:0000000000000180 .LBB62
     /tmp/ccroTLCb.s:391    .text:0000000000000188 .LBE62
     /tmp/ccroTLCb.s:4922   .debug_loc:000000000000031e .LLST10
     /tmp/ccroTLCb.s:462    .text:0000000000000208 .LBB64
     /tmp/ccroTLCb.s:473    .text:000000000000020c .LBE64
     /tmp/ccroTLCb.s:4930   .debug_loc:0000000000000342 .LLST11
     /tmp/ccroTLCb.s:446    .text:00000000000001ec .LVL29
     /tmp/ccroTLCb.s:453    .text:00000000000001fc .LVL30
     /tmp/ccroTLCb.s:236    .text:00000000000000ec .LFB46
     /tmp/ccroTLCb.s:338    .text:000000000000015c .LFE46
     /tmp/ccroTLCb.s:5263   .debug_str:000000000000092c .LASF265
     /tmp/ccroTLCb.s:4937   .debug_loc:0000000000000365 .LLST2
     /tmp/ccroTLCb.s:4948   .debug_loc:000000000000039b .LLST3
     /tmp/ccroTLCb.s:254    .text:0000000000000108 .LBB54
     /tmp/ccroTLCb.s:270    .text:0000000000000114 .LBE54
     /tmp/ccroTLCb.s:272    .text:0000000000000114 .LBB56
     /tmp/ccroTLCb.s:285    .text:000000000000011c .LBE56
     /tmp/ccroTLCb.s:4955   .debug_loc:00000000000003be .LLST4
     /tmp/ccroTLCb.s:311    .text:0000000000000140 .LBB58
     /tmp/ccroTLCb.s:322    .text:0000000000000144 .LBE58
     /tmp/ccroTLCb.s:4963   .debug_loc:00000000000003e2 .LLST5
     /tmp/ccroTLCb.s:295    .text:000000000000012c .LVL13
     /tmp/ccroTLCb.s:201    .text:00000000000000cc .LFB45
     /tmp/ccroTLCb.s:230    .text:00000000000000ec .LFE45
     /tmp/ccroTLCb.s:132    .text:0000000000000084 .LFB44
     /tmp/ccroTLCb.s:164    .text:00000000000000a4 .LFE44
     /tmp/ccroTLCb.s:143    .text:0000000000000090 .LBB52
     /tmp/ccroTLCb.s:155    .text:0000000000000098 .LBE52
     /tmp/ccroTLCb.s:4970   .debug_loc:0000000000000405 .LLST1
     /tmp/ccroTLCb.s:94     .text:0000000000000064 .LFB43
     /tmp/ccroTLCb.s:126    .text:0000000000000084 .LFE43
     /tmp/ccroTLCb.s:105    .text:0000000000000070 .LBB50
     /tmp/ccroTLCb.s:117    .text:0000000000000078 .LBE50
     /tmp/ccroTLCb.s:4978   .debug_loc:0000000000000429 .LLST0
     /tmp/ccroTLCb.s:170    .text:00000000000000a4 .LFB42
     /tmp/ccroTLCb.s:195    .text:00000000000000cc .LFE42
     /tmp/ccroTLCb.s:184    .text:00000000000000bc .LVL9
     /tmp/ccroTLCb.s:42     .text:0000000000000028 .LFB41
     /tmp/ccroTLCb.s:88     .text:0000000000000064 .LFE41
     /tmp/ccroTLCb.s:57     .text:0000000000000040 .LBB48
     /tmp/ccroTLCb.s:69     .text:0000000000000044 .LBE48
GAS LISTING /tmp/ccroTLCb.s 			page 46


     /tmp/ccroTLCb.s:73     .text:000000000000004c .LVL3
     /tmp/ccroTLCb.s:77     .text:0000000000000054 .LVL4
     /tmp/ccroTLCb.s:5123   .debug_str:0000000000000496 .LASF266
     /tmp/ccroTLCb.s:5057   .debug_str:00000000000001ab .LASF268
     /tmp/ccroTLCb.s:5547   .debug_str:0000000000001242 .LASF269
     /tmp/ccroTLCb.s:5289   .debug_str:0000000000000a0a .LASF270
     /tmp/ccroTLCb.s:5349   .debug_str:0000000000000c51 .LASF272
     /tmp/ccroTLCb.s:5391   .debug_str:0000000000000d92 .LASF271
     /tmp/ccroTLCb.s:5523   .debug_str:0000000000001183 .LASF273
     /tmp/ccroTLCb.s:5513   .debug_str:000000000000111c .LASF274
     /tmp/ccroTLCb.s:5559   .debug_str:000000000000128e .LASF283
     /tmp/ccroTLCb.s:5061   .debug_str:00000000000001ca .LASF284
     /tmp/ccroTLCb.s:5181   .debug_str:0000000000000669 .LASF275
     /tmp/ccroTLCb.s:5121   .debug_str:000000000000048f .LASF276
     /tmp/ccroTLCb.s:981    .text:00000000000004a0 .LVL78
     /tmp/ccroTLCb.s:531    .text:0000000000000254 .LVL34
     /tmp/ccroTLCb.s:545    .text:0000000000000278 .LVL35
     /tmp/ccroTLCb.s:560    .text:0000000000000284 .LVL36
     /tmp/ccroTLCb.s:637    .text:0000000000000304 .LVL38
     /tmp/ccroTLCb.s:655    .text:0000000000000320 .LVL40
     /tmp/ccroTLCb.s:670    .text:0000000000000324 .LVL41
     /tmp/ccroTLCb.s:700    .text:0000000000000340 .LVL42
     /tmp/ccroTLCb.s:710    .text:0000000000000348 .LVL43
     /tmp/ccroTLCb.s:735    .text:0000000000000384 .LVL45
     /tmp/ccroTLCb.s:742    .text:0000000000000388 .LVL46
     /tmp/ccroTLCb.s:753    .text:0000000000000394 .LVL47
     /tmp/ccroTLCb.s:762    .text:0000000000000398 .LVL48
     /tmp/ccroTLCb.s:769    .text:000000000000039c .LVL49
     /tmp/ccroTLCb.s:778    .text:00000000000003a0 .LVL50
     /tmp/ccroTLCb.s:811    .text:00000000000003c4 .LVL52
     /tmp/ccroTLCb.s:857    .text:00000000000003e0 .LVL58
     /tmp/ccroTLCb.s:867    .text:00000000000003ec .LVL60
     /tmp/ccroTLCb.s:874    .text:00000000000003f8 .LVL62
     /tmp/ccroTLCb.s:881    .text:0000000000000404 .LVL64
     /tmp/ccroTLCb.s:888    .text:0000000000000410 .LVL66
     /tmp/ccroTLCb.s:895    .text:000000000000041c .LVL68
     /tmp/ccroTLCb.s:902    .text:0000000000000428 .LVL70
     /tmp/ccroTLCb.s:909    .text:0000000000000434 .LVL72
     /tmp/ccroTLCb.s:823    .text:00000000000003d0 .LVL54
     /tmp/ccroTLCb.s:832    .text:00000000000003d4 .LVL55
     /tmp/ccroTLCb.s:839    .text:00000000000003d8 .LVL56
     /tmp/ccroTLCb.s:848    .text:00000000000003dc .LVL57
     /tmp/ccroTLCb.s:347    .text:000000000000015c .LVL19
     /tmp/ccroTLCb.s:401    .text:000000000000018c .LVL22
     /tmp/ccroTLCb.s:375    .text:0000000000000180 .LVL20
     /tmp/ccroTLCb.s:457    .text:0000000000000200 .LVL31
     /tmp/ccroTLCb.s:405    .text:0000000000000190 .LVL23
     /tmp/ccroTLCb.s:412    .text:0000000000000198 .LVL24
     /tmp/ccroTLCb.s:423    .text:00000000000001bc .LVL25
     /tmp/ccroTLCb.s:433    .text:00000000000001d0 .LVL27
     /tmp/ccroTLCb.s:438    .text:00000000000001d4 .LVL28
     /tmp/ccroTLCb.s:429    .text:00000000000001c8 .LVL26
     /tmp/ccroTLCb.s:388    .text:0000000000000188 .LVL21
     /tmp/ccroTLCb.s:461    .text:0000000000000208 .LVL32
     /tmp/ccroTLCb.s:470    .text:000000000000020c .LVL33
     /tmp/ccroTLCb.s:239    .text:00000000000000ec .LVL10
     /tmp/ccroTLCb.s:281    .text:000000000000011c .LVL12
GAS LISTING /tmp/ccroTLCb.s 			page 47


     /tmp/ccroTLCb.s:331    .text:0000000000000150 .LVL18
     /tmp/ccroTLCb.s:268    .text:0000000000000114 .LVL11
     /tmp/ccroTLCb.s:306    .text:0000000000000138 .LVL15
     /tmp/ccroTLCb.s:310    .text:0000000000000140 .LVL16
     /tmp/ccroTLCb.s:319    .text:0000000000000144 .LVL17
     /tmp/ccroTLCb.s:142    .text:0000000000000090 .LVL7
     /tmp/ccroTLCb.s:152    .text:0000000000000098 .LVL8
     /tmp/ccroTLCb.s:104    .text:0000000000000070 .LVL5
     /tmp/ccroTLCb.s:114    .text:0000000000000078 .LVL6
     /tmp/ccroTLCb.s:1083   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccroTLCb.s:552    .text:0000000000000280 .LBB70
     /tmp/ccroTLCb.s:639    .text:0000000000000304 .LBE70
     /tmp/ccroTLCb.s:814    .text:00000000000003c4 .LBB93
     /tmp/ccroTLCb.s:852    .text:00000000000003dc .LBE93
     /tmp/ccroTLCb.s:861    .text:00000000000003e0 .LBB94
     /tmp/ccroTLCb.s:916    .text:0000000000000440 .LBE94
     /tmp/ccroTLCb.s:659    .text:0000000000000320 .LBB79
     /tmp/ccroTLCb.s:783    .text:00000000000003a0 .LBE79
     /tmp/ccroTLCb.s:802    .text:00000000000003b4 .LBB92
     /tmp/ccroTLCb.s:813    .text:00000000000003c4 .LBE92
     /tmp/ccroTLCb.s:1035   .gcc_except_table:0000000000000000 .LLSDA49

UNDEFINED SYMBOLS
_Z8userMainv
_ZN5Riscv14supervisorTrapEv
_ZN3PCB10initializeEv
_ZN8KConsole10initializeEv
__putc
_ZN3PCB10savedRegA4E
_ZN10KSemaphore15semCloseHandlerEv
console_handler
_ZN3PCB16timeSliceCounterE
_ZN12SleepPCBList13tryToWakePCBsEv
_ZN3PCB7runningE
_ZN3PCB8dispatchEv
_ZN15MemoryAllocator15memAllocHandlerEv
_ZN15MemoryAllocator14memFreeHandlerEv
_ZN3PCB19threadCreateHandlerEv
_ZN3PCB21threadDispatchHandlerEv
_ZN3PCB17threadExitHandlerEv
_ZN3PCB18threadSleepHandlerEv
_ZN10KSemaphore14semOpenHandlerEv
_ZN10KSemaphore14semWaitHandlerEv
_ZN10KSemaphore16semSignalHandlerEv
_Z7kmallocm
_ZN3PCBnwEm
_ZN3PCBC1EPFvPvES0_S0_m
thread_dispatch
_ZN3PCBdlEPv
_Unwind_Resume
__gxx_personality_v0
