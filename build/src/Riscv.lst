GAS LISTING /tmp/ccxxb8xC.s 			page 1


   1              		.file	"Riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10initSystemEv
   9              	_ZN5Riscv10initSystemEv:
  10              	.LFB21:
  11              		.file 1 "src/Riscv.cpp"
   1:src/Riscv.cpp **** //
   2:src/Riscv.cpp **** // Created by os on 4/27/22.
   3:src/Riscv.cpp **** //
   4:src/Riscv.cpp **** 
   5:src/Riscv.cpp **** #include "../h/Riscv.hpp"
   6:src/Riscv.cpp **** #include "../h/MemoryAllocator.hpp"
   7:src/Riscv.cpp **** #include "../h/PCB.hpp"
   8:src/Riscv.cpp **** #include "../lib/console.h"
   9:src/Riscv.cpp **** #include "../h/syscall_cpp.hpp"
  10:src/Riscv.cpp **** #include "../h/SleepPCBList.hpp"
  11:src/Riscv.cpp **** 
  12:src/Riscv.cpp **** //todo
  13:src/Riscv.cpp **** //sta sve treba da se odradi ovde
  14:src/Riscv.cpp **** void Riscv::initSystem() {
  12              		.loc 1 14 26
  13              		.cfi_startproc
  14              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
  15              		.cfi_lsda 0x1b,.LLSDA21
  16 0000 130101FE 		addi	sp,sp,-32
  17              		.cfi_def_cfa_offset 32
  18 0004 233C1100 		sd	ra,24(sp)
  19 0008 23388100 		sd	s0,16(sp)
  20 000c 23349100 		sd	s1,8(sp)
  21 0010 23302101 		sd	s2,0(sp)
  22              		.cfi_offset 1, -8
  23              		.cfi_offset 8, -16
  24              		.cfi_offset 9, -24
  25              		.cfi_offset 18, -32
  26 0014 13040102 		addi	s0,sp,32
  27              		.cfi_def_cfa 8, 0
  15:src/Riscv.cpp ****     w_stvec((uint64)&Riscv::supervisorTrap);
  28              		.loc 1 15 5
  29              		.loc 1 15 12 is_stmt 0
  30 0018 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
  30      83B70700 
  31              	.LVL0:
  32              	.LBB80:
  33              	.LBB81:
  34              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 4/27/22.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_0_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_0_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
GAS LISTING /tmp/ccxxb8xC.s 			page 2


   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** class Riscv
  11:src/../h/Riscv.hpp **** {
  12:src/../h/Riscv.hpp **** private:
  13:src/../h/Riscv.hpp **** 
  14:src/../h/Riscv.hpp **** public:
  15:src/../h/Riscv.hpp ****     static void initSystem();
  16:src/../h/Riscv.hpp ****     static void endSystem();
  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp ****     static void enableInterrupts();
  19:src/../h/Riscv.hpp **** 
  20:src/../h/Riscv.hpp ****     static void disableInterrupts();
  21:src/../h/Riscv.hpp **** 
  22:src/../h/Riscv.hpp ****     static void printString(char const *string);
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp ****     static void printInteger(uint64 num);
  25:src/../h/Riscv.hpp **** 
  26:src/../h/Riscv.hpp ****     static void pushRegisters();
  27:src/../h/Riscv.hpp ****     static void popRegisters();
  28:src/../h/Riscv.hpp **** 
  29:src/../h/Riscv.hpp ****     static uint64 r_scause();
  30:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  31:src/../h/Riscv.hpp **** 
  32:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  33:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
  34:src/../h/Riscv.hpp **** 
  35:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  36:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  37:src/../h/Riscv.hpp **** 
  38:src/../h/Riscv.hpp ****     static uint64 r_stval();
  39:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  40:src/../h/Riscv.hpp **** 
  41:src/../h/Riscv.hpp ****     enum BitMaskSip
  42:src/../h/Riscv.hpp ****     {
  43:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  44:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  45:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9),
  46:src/../h/Riscv.hpp ****     };
  47:src/../h/Riscv.hpp **** 
  48:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  49:src/../h/Riscv.hpp **** 
  50:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  51:src/../h/Riscv.hpp **** 
  52:src/../h/Riscv.hpp ****     static uint64 r_sip();
  53:src/../h/Riscv.hpp **** 
  54:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  55:src/../h/Riscv.hpp **** 
  56:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  57:src/../h/Riscv.hpp ****     {
  58:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  59:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  60:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  61:src/../h/Riscv.hpp ****     };
  62:src/../h/Riscv.hpp **** 
  63:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  64:src/../h/Riscv.hpp **** 
  65:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
GAS LISTING /tmp/ccxxb8xC.s 			page 3


  66:src/../h/Riscv.hpp **** 
  67:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  68:src/../h/Riscv.hpp **** 
  69:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp ****     static void popSppSpie();
  72:src/../h/Riscv.hpp **** 
  73:src/../h/Riscv.hpp ****     static void supervisorTrap();
  74:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  75:src/../h/Riscv.hpp **** 
  76:src/../h/Riscv.hpp ****     static const uint64 bntOne = 1UL << 63;;
  77:src/../h/Riscv.hpp ****     static const uint64 bntZero = 0UL;
  78:src/../h/Riscv.hpp ****     static const uint64 timerInterrupt = bntOne + 1UL;
  79:src/../h/Riscv.hpp ****     static const uint64 hwInterrupt = bntOne + 9UL;
  80:src/../h/Riscv.hpp ****     static const uint64 operationInterrupt = bntZero + 2UL;
  81:src/../h/Riscv.hpp ****     static const uint64 addrReadInterrupt = bntZero + 5UL;
  82:src/../h/Riscv.hpp ****     static const uint64 addrWriteInterrupt = bntZero + 7UL;
  83:src/../h/Riscv.hpp ****     static const uint64 ecallUserInterrupt = bntZero + 8UL;
  84:src/../h/Riscv.hpp ****     static const uint64 ecallSystemInterupt = bntZero + 9UL;
  85:src/../h/Riscv.hpp **** };
  86:src/../h/Riscv.hpp **** 
  87:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause() {
  88:src/../h/Riscv.hpp ****     uint64 volatile scause;
  89:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
  90:src/../h/Riscv.hpp ****     return scause;
  91:src/../h/Riscv.hpp **** }
  92:src/../h/Riscv.hpp **** 
  93:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
  94:src/../h/Riscv.hpp ****     __asm__ volatile("csrw scause, %0" : :"r"(scause));
  95:src/../h/Riscv.hpp **** }
  96:src/../h/Riscv.hpp **** 
  97:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc() {
  98:src/../h/Riscv.hpp ****     uint64 volatile sepc;
  99:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 100:src/../h/Riscv.hpp ****     return sepc;
 101:src/../h/Riscv.hpp **** }
 102:src/../h/Riscv.hpp **** 
 103:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
 104:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sepc, %0" : :"r"(sepc));
 105:src/../h/Riscv.hpp **** }
 106:src/../h/Riscv.hpp **** 
 107:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec() {
 108:src/../h/Riscv.hpp ****     uint64 volatile stvec;
 109:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, stvec" : "=r"(stvec));
 110:src/../h/Riscv.hpp ****     return stvec;
 111:src/../h/Riscv.hpp **** }
 112:src/../h/Riscv.hpp **** 
 113:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 114:src/../h/Riscv.hpp ****     __asm__ volatile("csrw stvec, %0" : :"r"(stvec));
  35              		.loc 2 114 5 is_stmt 1
  36              		.loc 2 114 53 is_stmt 0
  37              	#APP
  38              	# 114 "src/../h/Riscv.hpp" 1
 115              	}
  39              		csrw stvec, a5
  40              	# 0 "" 2
  41              	.LVL1:
GAS LISTING /tmp/ccxxb8xC.s 			page 4


  42              	#NO_APP
  43              	.LBE81:
  44              	.LBE80:
  16:src/Riscv.cpp ****     Thread* t = new Thread(0, 0);
  45              		.loc 1 16 5 is_stmt 1
  46              		.loc 1 16 32 is_stmt 0
  47 0024 13058001 		li	a0,24
  48              	.LEHB0:
  49 0028 97000000 		call	_Znwm@plt
  49      E7800000 
  50              	.LVL2:
  51              	.LEHE0:
  52 0030 93040500 		mv	s1,a0
  53 0034 13060000 		li	a2,0
  54 0038 93050000 		li	a1,0
  55              	.LEHB1:
  56 003c 97000000 		call	_ZN6ThreadC1EPFvPvES0_@plt
  56      E7800000 
  57              	.LVL3:
  58              	.LEHE1:
  17:src/Riscv.cpp ****     t->start();
  59              		.loc 1 17 5 is_stmt 1 discriminator 2
  60              		.loc 1 17 13 is_stmt 0 discriminator 2
  61 0044 13850400 		mv	a0,s1
  62              	.LEHB2:
  63 0048 97000000 		call	_ZN6Thread5startEv@plt
  63      E7800000 
  64              	.LVL4:
  18:src/Riscv.cpp ****     PCB::running = Scheduler::get();
  65              		.loc 1 18 5 is_stmt 1 discriminator 2
  66              		.loc 1 18 34 is_stmt 0 discriminator 2
  67 0050 97000000 		call	_ZN9Scheduler3getEv@plt
  67      E7800000 
  68              	.LVL5:
  69              	.LEHE2:
  70              		.loc 1 18 18 discriminator 2
  71 0058 97070000 		la	a5,_ZN3PCB7runningE
  71      83B70700 
  72 0060 23B0A700 		sd	a0,0(a5)
  19:src/Riscv.cpp ****     PCB::running->setState(PCB::RUNNING);
  73              		.loc 1 19 5 is_stmt 1 discriminator 2
  74              	.LVL6:
  75              	.LBB82:
  76              	.LBB83:
  77              		.file 3 "src/../h/PCB.hpp"
   1:src/../h/PCB.hpp **** //
   2:src/../h/PCB.hpp **** // Created by os on 4/27/22.
   3:src/../h/PCB.hpp **** //
   4:src/../h/PCB.hpp **** 
   5:src/../h/PCB.hpp **** #ifndef PROJECT_BASE_V1_0_PCB_HPP
   6:src/../h/PCB.hpp **** #define PROJECT_BASE_V1_0_PCB_HPP
   7:src/../h/PCB.hpp **** 
   8:src/../h/PCB.hpp **** #include "../lib/hw.h"
   9:src/../h/PCB.hpp **** #include "Scheduler.hpp"
  10:src/../h/PCB.hpp **** #include "Riscv.hpp"
  11:src/../h/PCB.hpp **** 
  12:src/../h/PCB.hpp **** class PCB
GAS LISTING /tmp/ccxxb8xC.s 			page 5


  13:src/../h/PCB.hpp **** {
  14:src/../h/PCB.hpp **** public:
  15:src/../h/PCB.hpp ****     using Body = void (*)(void*);
  16:src/../h/PCB.hpp **** 
  17:src/../h/PCB.hpp ****     PCB(Body body,  void* args, void* stack_space, uint64 timeSlice);
  18:src/../h/PCB.hpp ****     ~PCB();
  19:src/../h/PCB.hpp **** 
  20:src/../h/PCB.hpp ****     void start();
  21:src/../h/PCB.hpp ****     static void dispatch();
  22:src/../h/PCB.hpp ****     static void sleep(time_t);
  23:src/../h/PCB.hpp **** 
  24:src/../h/PCB.hpp ****     static PCB* running;
  25:src/../h/PCB.hpp ****     static PCB* exitingPCB;
  26:src/../h/PCB.hpp **** 
  27:src/../h/PCB.hpp ****     static uint64 timeSliceCounter;
  28:src/../h/PCB.hpp ****     uint64 getTimeSlice() { return timeSlice;}
  29:src/../h/PCB.hpp **** 
  30:src/../h/PCB.hpp ****     void* operator new(size_t size);
  31:src/../h/PCB.hpp ****     void operator delete(void *p);
  32:src/../h/PCB.hpp **** 
  33:src/../h/PCB.hpp ****     enum State{READY, RUNNING, SUSPENDED, FINISHED, EXITING, SLEEPING};
  34:src/../h/PCB.hpp ****     State getState() {return state;}
  35:src/../h/PCB.hpp ****     void setState(State s) {state = s;}
  78              		.loc 3 35 29 discriminator 2
  79              		.loc 3 35 35 is_stmt 0 discriminator 2
  80 0064 93071000 		li	a5,1
  81 0068 2328F502 		sw	a5,48(a0)
  82              	.LVL7:
  83              	.LBE83:
  84              	.LBE82:
  20:src/Riscv.cpp **** }
  85              		.loc 1 20 1 discriminator 2
  86 006c 83308101 		ld	ra,24(sp)
  87              		.cfi_remember_state
  88              		.cfi_restore 1
  89 0070 03340101 		ld	s0,16(sp)
  90              		.cfi_restore 8
  91              		.cfi_def_cfa 2, 32
  92 0074 83348100 		ld	s1,8(sp)
  93              		.cfi_restore 9
  94              	.LVL8:
  95 0078 03390100 		ld	s2,0(sp)
  96              		.cfi_restore 18
  97 007c 13010102 		addi	sp,sp,32
  98              		.cfi_def_cfa_offset 0
  99 0080 67800000 		jr	ra
 100              	.L3:
 101              		.cfi_restore_state
 102 0084 13090500 		mv	s2,a0
  16:src/Riscv.cpp ****     t->start();
 103              		.loc 1 16 32
 104 0088 13850400 		mv	a0,s1
 105 008c 97000000 		call	_ZdlPv@plt
 105      E7800000 
 106              	.LVL9:
 107 0094 13050900 		mv	a0,s2
 108              	.LEHB3:
GAS LISTING /tmp/ccxxb8xC.s 			page 6


 109 0098 97000000 		call	_Unwind_Resume@plt
 109      E7800000 
 110              	.LVL10:
 111              	.LEHE3:
 112              		.cfi_endproc
 113              	.LFE21:
 114              		.globl	__gxx_personality_v0
 115              		.section	.gcc_except_table,"a",@progbits
 116              	.LLSDA21:
 117 0000 FF       		.byte	0xff
 118 0001 FF       		.byte	0xff
 119 0002 03       		.byte	0x3
 120 0003 34       		.byte	0x34
 121 0004 00000000 		.4byte	.LEHB0-.LFB21
 122 0008 00000000 		.4byte	.LEHE0-.LEHB0
 123 000c 00000000 		.4byte	0
 124 0010 00       		.byte	0
 125 0011 00000000 		.4byte	.LEHB1-.LFB21
 126 0015 00000000 		.4byte	.LEHE1-.LEHB1
 127 0019 00000000 		.4byte	.L3-.LFB21
 128 001d 00       		.byte	0
 129 001e 00000000 		.4byte	.LEHB2-.LFB21
 130 0022 00000000 		.4byte	.LEHE2-.LEHB2
 131 0026 00000000 		.4byte	0
 132 002a 00       		.byte	0
 133 002b 00000000 		.4byte	.LEHB3-.LFB21
 134 002f 00000000 		.4byte	.LEHE3-.LEHB3
 135 0033 00000000 		.4byte	0
 136 0037 00       		.byte	0
 137              		.text
 139              		.align	2
 140              		.globl	_ZN5Riscv16enableInterruptsEv
 142              	_ZN5Riscv16enableInterruptsEv:
 143              	.LFB23:
  21:src/Riscv.cpp **** 
  22:src/Riscv.cpp **** void Riscv::endSystem() {
  23:src/Riscv.cpp ****     //todo
  24:src/Riscv.cpp ****     //da li treba jos nesto da se ocisti
  25:src/Riscv.cpp ****     Riscv::disableInterrupts();
  26:src/Riscv.cpp **** }
  27:src/Riscv.cpp **** 
  28:src/Riscv.cpp **** 
  29:src/Riscv.cpp **** void Riscv::enableInterrupts() {
 144              		.loc 1 29 32 is_stmt 1
 145              		.cfi_startproc
 146 00a0 130101FF 		addi	sp,sp,-16
 147              		.cfi_def_cfa_offset 16
 148 00a4 23348100 		sd	s0,8(sp)
 149              		.cfi_offset 8, -8
 150 00a8 13040101 		addi	s0,sp,16
 151              		.cfi_def_cfa 8, 0
  30:src/Riscv.cpp ****     ms_sstatus(Riscv::SSTATUS_SIE);
 152              		.loc 1 30 5
 153              	.LVL11:
 154              	.LBB84:
 155              	.LBB85:
 116:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/ccxxb8xC.s 			page 7


 117:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stval() {
 118:src/../h/Riscv.hpp ****     uint64 volatile stval;
 119:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, stval" : "=r"(stval));
 120:src/../h/Riscv.hpp ****     return stval;
 121:src/../h/Riscv.hpp **** }
 122:src/../h/Riscv.hpp **** 
 123:src/../h/Riscv.hpp **** inline void Riscv::w_stval(uint64 stval) {
 124:src/../h/Riscv.hpp ****     __asm__ volatile("csrw stval, %0" : :"r"(stval));
 125:src/../h/Riscv.hpp **** }
 126:src/../h/Riscv.hpp **** 
 127:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 128:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sip, %0" : :"r"(mask));
 129:src/../h/Riscv.hpp **** }
 130:src/../h/Riscv.hpp **** 
 131:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 132:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sip, %0" : :"r"(mask));
 133:src/../h/Riscv.hpp **** }
 134:src/../h/Riscv.hpp **** 
 135:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip() {
 136:src/../h/Riscv.hpp ****     uint64 volatile sip;
 137:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sip" : "=r"(sip));
 138:src/../h/Riscv.hpp ****     return sip;
 139:src/../h/Riscv.hpp **** }
 140:src/../h/Riscv.hpp **** 
 141:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 142:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sip, %0" : :"r"(sip));
 143:src/../h/Riscv.hpp **** }
 144:src/../h/Riscv.hpp **** 
 145:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 146:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sstatus, %0" : :"r"(mask));
 156              		.loc 2 146 5
 157              		.loc 2 146 54 is_stmt 0
 158 00ac 93072000 		li	a5,2
 159              	#APP
 160              	# 146 "src/../h/Riscv.hpp" 1
 147              	}
 161              		csrs sstatus, a5
 162              	# 0 "" 2
 163              	.LVL12:
 164              	#NO_APP
 165              	.LBE85:
 166              	.LBE84:
  31:src/Riscv.cpp **** }
 167              		.loc 1 31 1
 168 00b4 03348100 		ld	s0,8(sp)
 169              		.cfi_restore 8
 170              		.cfi_def_cfa 2, 16
 171 00b8 13010101 		addi	sp,sp,16
 172              		.cfi_def_cfa_offset 0
 173 00bc 67800000 		jr	ra
 174              		.cfi_endproc
 175              	.LFE23:
 177              		.align	2
 178              		.globl	_ZN5Riscv17disableInterruptsEv
 180              	_ZN5Riscv17disableInterruptsEv:
 181              	.LFB24:
  32:src/Riscv.cpp **** 
GAS LISTING /tmp/ccxxb8xC.s 			page 8


  33:src/Riscv.cpp **** void Riscv::disableInterrupts()
  34:src/Riscv.cpp **** {
 182              		.loc 1 34 1 is_stmt 1
 183              		.cfi_startproc
 184 00c0 130101FF 		addi	sp,sp,-16
 185              		.cfi_def_cfa_offset 16
 186 00c4 23348100 		sd	s0,8(sp)
 187              		.cfi_offset 8, -8
 188 00c8 13040101 		addi	s0,sp,16
 189              		.cfi_def_cfa 8, 0
  35:src/Riscv.cpp ****     mc_sstatus(Riscv::SSTATUS_SIE);
 190              		.loc 1 35 5
 191              	.LVL13:
 192              	.LBB86:
 193              	.LBB87:
 148:src/../h/Riscv.hpp **** 
 149:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 150:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sstatus, %0" : :"r"(mask));
 194              		.loc 2 150 5
 195              		.loc 2 150 54 is_stmt 0
 196 00cc 93072000 		li	a5,2
 197              	#APP
 198              	# 150 "src/../h/Riscv.hpp" 1
 151              	}
 199              		csrc sstatus, a5
 200              	# 0 "" 2
 201              	.LVL14:
 202              	#NO_APP
 203              	.LBE87:
 204              	.LBE86:
  36:src/Riscv.cpp **** }
 205              		.loc 1 36 1
 206 00d4 03348100 		ld	s0,8(sp)
 207              		.cfi_restore 8
 208              		.cfi_def_cfa 2, 16
 209 00d8 13010101 		addi	sp,sp,16
 210              		.cfi_def_cfa_offset 0
 211 00dc 67800000 		jr	ra
 212              		.cfi_endproc
 213              	.LFE24:
 215              		.align	2
 216              		.globl	_ZN5Riscv9endSystemEv
 218              	_ZN5Riscv9endSystemEv:
 219              	.LFB22:
  22:src/Riscv.cpp ****     //todo
 220              		.loc 1 22 25 is_stmt 1
 221              		.cfi_startproc
 222 00e0 130101FF 		addi	sp,sp,-16
 223              		.cfi_def_cfa_offset 16
 224 00e4 23341100 		sd	ra,8(sp)
 225 00e8 23308100 		sd	s0,0(sp)
 226              		.cfi_offset 1, -8
 227              		.cfi_offset 8, -16
 228 00ec 13040101 		addi	s0,sp,16
 229              		.cfi_def_cfa 8, 0
  25:src/Riscv.cpp **** }
 230              		.loc 1 25 5
GAS LISTING /tmp/ccxxb8xC.s 			page 9


  25:src/Riscv.cpp **** }
 231              		.loc 1 25 29 is_stmt 0
 232 00f0 97000000 		call	_ZN5Riscv17disableInterruptsEv
 232      E7800000 
 233              	.LVL15:
  26:src/Riscv.cpp **** 
 234              		.loc 1 26 1
 235 00f8 83308100 		ld	ra,8(sp)
 236              		.cfi_restore 1
 237 00fc 03340100 		ld	s0,0(sp)
 238              		.cfi_restore 8
 239              		.cfi_def_cfa 2, 16
 240 0100 13010101 		addi	sp,sp,16
 241              		.cfi_def_cfa_offset 0
 242 0104 67800000 		jr	ra
 243              		.cfi_endproc
 244              	.LFE22:
 246              		.align	2
 247              		.globl	_ZN5Riscv10popSppSpieEv
 249              	_ZN5Riscv10popSppSpieEv:
 250              	.LFB25:
  37:src/Riscv.cpp **** 
  38:src/Riscv.cpp **** void Riscv::popSppSpie() {
 251              		.loc 1 38 26 is_stmt 1
 252              		.cfi_startproc
 253 0108 130101FF 		addi	sp,sp,-16
 254              		.cfi_def_cfa_offset 16
 255 010c 23348100 		sd	s0,8(sp)
 256              		.cfi_offset 8, -8
 257 0110 13040101 		addi	s0,sp,16
 258              		.cfi_def_cfa 8, 0
  39:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
 259              		.loc 1 39 5
 260              		.loc 1 39 39 is_stmt 0
 261              	#APP
 262              	# 39 "src/Riscv.cpp" 1
  40              	    __asm__ volatile ("sret");
 263              		csrw sepc, ra
 264              	# 0 "" 2
 265              		.loc 1 40 5 is_stmt 1
 266              		.loc 1 40 30 is_stmt 0
 267              	# 40 "src/Riscv.cpp" 1
  41              	}
 268              		sret
 269              	# 0 "" 2
 270              		.loc 1 41 1
 271              	#NO_APP
 272 011c 03348100 		ld	s0,8(sp)
 273              		.cfi_restore 8
 274              		.cfi_def_cfa 2, 16
 275 0120 13010101 		addi	sp,sp,16
 276              		.cfi_def_cfa_offset 0
 277 0124 67800000 		jr	ra
 278              		.cfi_endproc
 279              	.LFE25:
 281              		.align	2
 282              		.globl	_ZN5Riscv11printStringEPKc
GAS LISTING /tmp/ccxxb8xC.s 			page 10


 284              	_ZN5Riscv11printStringEPKc:
 285              	.LFB26:
  42:src/Riscv.cpp **** 
  43:src/Riscv.cpp **** void Riscv::printString(const char *string)
  44:src/Riscv.cpp **** {
 286              		.loc 1 44 1 is_stmt 1
 287              		.cfi_startproc
 288              	.LVL16:
 289 0128 130101FD 		addi	sp,sp,-48
 290              		.cfi_def_cfa_offset 48
 291 012c 23341102 		sd	ra,40(sp)
 292 0130 23308102 		sd	s0,32(sp)
 293 0134 233C9100 		sd	s1,24(sp)
 294 0138 23382101 		sd	s2,16(sp)
 295              		.cfi_offset 1, -8
 296              		.cfi_offset 8, -16
 297              		.cfi_offset 9, -24
 298              		.cfi_offset 18, -32
 299 013c 13040103 		addi	s0,sp,48
 300              		.cfi_def_cfa 8, 0
 301 0140 93040500 		mv	s1,a0
  45:src/Riscv.cpp ****     uint64 sstatus = r_sstatus();
 302              		.loc 1 45 5
 303              	.LBB88:
 304              	.LBB89:
 152:src/../h/Riscv.hpp **** 
 153:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sstatus() {
 154:src/../h/Riscv.hpp ****     uint64 volatile sstatus;
 305              		.loc 2 154 5
 155:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 306              		.loc 2 155 5
 307              		.loc 2 155 57 is_stmt 0
 308              	#APP
 309              	# 155 "src/../h/Riscv.hpp" 1
 156              	    return sstatus;
 310              		csrr a5, sstatus
 311              	# 0 "" 2
 312              	#NO_APP
 313 0148 233CF4FC 		sd	a5,-40(s0)
 314              		.loc 2 156 5 is_stmt 1
 315              		.loc 2 156 12 is_stmt 0
 316 014c 033984FD 		ld	s2,-40(s0)
 317              	.LVL17:
 318              	.LBE89:
 319              	.LBE88:
  46:src/Riscv.cpp ****     mc_sstatus(SSTATUS_SIE);
 320              		.loc 1 46 5 is_stmt 1
 321              	.LBB90:
 322              	.LBB91:
 150:src/../h/Riscv.hpp **** }
 323              		.loc 2 150 5
 150:src/../h/Riscv.hpp **** }
 324              		.loc 2 150 54 is_stmt 0
 325 0150 93072000 		li	a5,2
 326              	#APP
 327              	# 150 "src/../h/Riscv.hpp" 1
 328              		csrc sstatus, a5
GAS LISTING /tmp/ccxxb8xC.s 			page 11


 329              	# 0 "" 2
 330              	.LVL18:
 331              	#NO_APP
 332              	.L16:
 333              	.LBE91:
 334              	.LBE90:
  47:src/Riscv.cpp ****     while (*string != '\0')
 335              		.loc 1 47 5 is_stmt 1
 336              		.loc 1 47 20
 337              		.loc 1 47 12 is_stmt 0
 338 0158 03C50400 		lbu	a0,0(s1)
 339              		.loc 1 47 20
 340 015c 630A0500 		beqz	a0,.L15
  48:src/Riscv.cpp ****     {
  49:src/Riscv.cpp ****         __putc(*string);
 341              		.loc 1 49 9 is_stmt 1
 342              		.loc 1 49 15 is_stmt 0
 343 0160 97000000 		call	__putc@plt
 343      E7800000 
 344              	.LVL19:
  50:src/Riscv.cpp ****         string++;
 345              		.loc 1 50 9 is_stmt 1
 346              		.loc 1 50 15 is_stmt 0
 347 0168 93841400 		addi	s1,s1,1
 348              	.LVL20:
  47:src/Riscv.cpp ****     while (*string != '\0')
 349              		.loc 1 47 5
 350 016c 6FF0DFFE 		j	.L16
 351              	.L15:
  51:src/Riscv.cpp ****     }
  52:src/Riscv.cpp ****     ms_sstatus(sstatus & SSTATUS_SIE ? SSTATUS_SIE : 0);
 352              		.loc 1 52 5 is_stmt 1
 353              		.loc 1 52 38 is_stmt 0
 354 0170 1B090900 		sext.w	s2,s2
 355              	.LVL21:
 356              		.loc 1 52 15
 357 0174 13792900 		andi	s2,s2,2
 358 0178 1B090900 		sext.w	s2,s2
 359              	.LVL22:
 360              	.LBB92:
 361              	.LBB93:
 146:src/../h/Riscv.hpp **** }
 362              		.loc 2 146 5 is_stmt 1
 146:src/../h/Riscv.hpp **** }
 363              		.loc 2 146 54 is_stmt 0
 364              	#APP
 365              	# 146 "src/../h/Riscv.hpp" 1
 366              		csrs sstatus, s2
 367              	# 0 "" 2
 368              	.LVL23:
 369              	#NO_APP
 370              	.LBE93:
 371              	.LBE92:
  53:src/Riscv.cpp **** }
 372              		.loc 1 53 1
 373 0180 83308102 		ld	ra,40(sp)
 374              		.cfi_restore 1
GAS LISTING /tmp/ccxxb8xC.s 			page 12


 375 0184 03340102 		ld	s0,32(sp)
 376              		.cfi_restore 8
 377              		.cfi_def_cfa 2, 48
 378 0188 83348101 		ld	s1,24(sp)
 379              		.cfi_restore 9
 380              	.LVL24:
 381 018c 03390101 		ld	s2,16(sp)
 382              		.cfi_restore 18
 383 0190 13010103 		addi	sp,sp,48
 384              		.cfi_def_cfa_offset 0
 385 0194 67800000 		jr	ra
 386              		.cfi_endproc
 387              	.LFE26:
 389              		.align	2
 390              		.globl	_ZN5Riscv12printIntegerEm
 392              	_ZN5Riscv12printIntegerEm:
 393              	.LFB27:
  54:src/Riscv.cpp **** 
  55:src/Riscv.cpp **** void Riscv::printInteger(uint64 num)
  56:src/Riscv.cpp **** {
 394              		.loc 1 56 1 is_stmt 1
 395              		.cfi_startproc
 396              	.LVL25:
 397 0198 130101FC 		addi	sp,sp,-64
 398              		.cfi_def_cfa_offset 64
 399 019c 233C1102 		sd	ra,56(sp)
 400 01a0 23388102 		sd	s0,48(sp)
 401 01a4 23349102 		sd	s1,40(sp)
 402 01a8 23302103 		sd	s2,32(sp)
 403              		.cfi_offset 1, -8
 404              		.cfi_offset 8, -16
 405              		.cfi_offset 9, -24
 406              		.cfi_offset 18, -32
 407 01ac 13040104 		addi	s0,sp,64
 408              		.cfi_def_cfa 8, 0
  57:src/Riscv.cpp ****     uint64 sstatus = r_sstatus();
 409              		.loc 1 57 5
 410              	.LBB94:
 411              	.LBB95:
 154:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 412              		.loc 2 154 5
 155:src/../h/Riscv.hpp ****     return sstatus;
 413              		.loc 2 155 5
 155:src/../h/Riscv.hpp ****     return sstatus;
 414              		.loc 2 155 57 is_stmt 0
 415              	#APP
 416              	# 155 "src/../h/Riscv.hpp" 1
 417              		csrr a5, sstatus
 418              	# 0 "" 2
 419              	#NO_APP
 420 01b4 2334F4FC 		sd	a5,-56(s0)
 421              		.loc 2 156 5 is_stmt 1
 422              		.loc 2 156 12 is_stmt 0
 423 01b8 033984FC 		ld	s2,-56(s0)
 424              	.LVL26:
 425              	.LBE95:
 426              	.LBE94:
GAS LISTING /tmp/ccxxb8xC.s 			page 13


  58:src/Riscv.cpp ****     mc_sstatus(SSTATUS_SIE);
 427              		.loc 1 58 5 is_stmt 1
 428              	.LBB96:
 429              	.LBB97:
 150:src/../h/Riscv.hpp **** }
 430              		.loc 2 150 5
 150:src/../h/Riscv.hpp **** }
 431              		.loc 2 150 54 is_stmt 0
 432 01bc 93072000 		li	a5,2
 433              	#APP
 434              	# 150 "src/../h/Riscv.hpp" 1
 435              		csrc sstatus, a5
 436              	# 0 "" 2
 437              	.LVL27:
 438              	#NO_APP
 439              	.LBE97:
 440              	.LBE96:
  59:src/Riscv.cpp ****     static char digits[] = "0123456789";
 441              		.loc 1 59 5 is_stmt 1
  60:src/Riscv.cpp ****     char buf[16];
 442              		.loc 1 60 5
  61:src/Riscv.cpp ****     int i, neg;
 443              		.loc 1 61 5
  62:src/Riscv.cpp ****     uint x;
 444              		.loc 1 62 5
  63:src/Riscv.cpp **** 
  64:src/Riscv.cpp ****     neg = 0;
 445              		.loc 1 64 5
  65:src/Riscv.cpp ****     if(num < 0)
 446              		.loc 1 65 5
  66:src/Riscv.cpp ****     {
  67:src/Riscv.cpp ****         neg = 1;
  68:src/Riscv.cpp ****         x = -num;
  69:src/Riscv.cpp ****     }
  70:src/Riscv.cpp ****     else
  71:src/Riscv.cpp ****         x = num;
 447              		.loc 1 71 9
 448              		.loc 1 71 11 is_stmt 0
 449 01c4 1B050500 		sext.w	a0,a0
 450              	.LVL28:
  72:src/Riscv.cpp **** 
  73:src/Riscv.cpp ****     i = 0;
 451              		.loc 1 73 5 is_stmt 1
 452              		.loc 1 73 7 is_stmt 0
 453 01c8 93040000 		li	s1,0
 454              	.LVL29:
 455              	.L19:
  74:src/Riscv.cpp ****     do
 456              		.loc 1 74 5 is_stmt 1
  75:src/Riscv.cpp ****     {
  76:src/Riscv.cpp ****         buf[i++] = digits[x%10];
 457              		.loc 1 76 9
 458              		.loc 1 76 28 is_stmt 0
 459 01cc 1306A000 		li	a2,10
 460 01d0 3B77C502 		remuw	a4,a0,a2
 461              	.LVL30:
 462              		.loc 1 76 31
GAS LISTING /tmp/ccxxb8xC.s 			page 14


 463 01d4 93160702 		slli	a3,a4,32
 464 01d8 93D60602 		srli	a3,a3,32
 465 01dc 17070000 		lla	a4,.LANCHOR0
 465      13070700 
 466 01e4 3307D700 		add	a4,a4,a3
 467 01e8 03470700 		lbu	a4,0(a4)
 468              		.loc 1 76 18
 469 01ec 930604FE 		addi	a3,s0,-32
 470 01f0 B3879600 		add	a5,a3,s1
 471 01f4 9B841400 		addiw	s1,s1,1
 472              	.LVL31:
 473 01f8 2388E7FE 		sb	a4,-16(a5)
  77:src/Riscv.cpp ****     }while((x/=10) != 0);
 474              		.loc 1 77 20 is_stmt 1
 475 01fc 1B070500 		sext.w	a4,a0
 476              		.loc 1 77 14 is_stmt 0
 477 0200 3B55C502 		divuw	a0,a0,a2
 478              	.LVL32:
 479              		.loc 1 77 20
 480 0204 93079000 		li	a5,9
 481 0208 E3E2E7FC 		bgtu	a4,a5,.L19
 482              	.LVL33:
 483              	.L21:
  78:src/Riscv.cpp ****     if(neg)
  79:src/Riscv.cpp ****         buf[i++] = '-';
  80:src/Riscv.cpp **** 
  81:src/Riscv.cpp ****     while(--i >= 0)
 484              		.loc 1 81 5 is_stmt 1
 485              		.loc 1 81 15
 486 020c 9B84F4FF 		addiw	s1,s1,-1
 487              	.LVL34:
 488 0210 63CE0400 		bltz	s1,.L20
  82:src/Riscv.cpp ****         __putc(buf[i]);
 489              		.loc 1 82 9
 490              		.loc 1 82 15 is_stmt 0
 491 0214 930704FE 		addi	a5,s0,-32
 492 0218 B3879700 		add	a5,a5,s1
 493 021c 03C507FF 		lbu	a0,-16(a5)
 494 0220 97000000 		call	__putc@plt
 494      E7800000 
 495              	.LVL35:
 496 0228 6FF05FFE 		j	.L21
 497              	.L20:
  83:src/Riscv.cpp **** 
  84:src/Riscv.cpp ****     __putc('\n');
 498              		.loc 1 84 5 is_stmt 1
 499              		.loc 1 84 11 is_stmt 0
 500 022c 1305A000 		li	a0,10
 501 0230 97000000 		call	__putc@plt
 501      E7800000 
 502              	.LVL36:
  85:src/Riscv.cpp **** 
  86:src/Riscv.cpp ****     ms_sstatus(sstatus & SSTATUS_SIE ? SSTATUS_SIE : 0);
 503              		.loc 1 86 5 is_stmt 1
 504              		.loc 1 86 38 is_stmt 0
 505 0238 1B090900 		sext.w	s2,s2
 506              	.LVL37:
GAS LISTING /tmp/ccxxb8xC.s 			page 15


 507              		.loc 1 86 15
 508 023c 13792900 		andi	s2,s2,2
 509 0240 1B090900 		sext.w	s2,s2
 510              	.LVL38:
 511              	.LBB98:
 512              	.LBB99:
 146:src/../h/Riscv.hpp **** }
 513              		.loc 2 146 5 is_stmt 1
 146:src/../h/Riscv.hpp **** }
 514              		.loc 2 146 54 is_stmt 0
 515              	#APP
 516              	# 146 "src/../h/Riscv.hpp" 1
 517              		csrs sstatus, s2
 518              	# 0 "" 2
 519              	.LVL39:
 520              	#NO_APP
 521              	.LBE99:
 522              	.LBE98:
  87:src/Riscv.cpp **** }
 523              		.loc 1 87 1
 524 0248 83308103 		ld	ra,56(sp)
 525              		.cfi_restore 1
 526 024c 03340103 		ld	s0,48(sp)
 527              		.cfi_restore 8
 528              		.cfi_def_cfa 2, 64
 529 0250 83348102 		ld	s1,40(sp)
 530              		.cfi_restore 9
 531 0254 03390102 		ld	s2,32(sp)
 532              		.cfi_restore 18
 533 0258 13010104 		addi	sp,sp,64
 534              		.cfi_def_cfa_offset 0
 535 025c 67800000 		jr	ra
 536              		.cfi_endproc
 537              	.LFE27:
 539              		.align	2
 540              		.globl	_ZN5Riscv20handleSupervisorTrapEv
 542              	_ZN5Riscv20handleSupervisorTrapEv:
 543              	.LFB28:
  88:src/Riscv.cpp **** 
  89:src/Riscv.cpp **** void Riscv::handleSupervisorTrap() {
 544              		.loc 1 89 36 is_stmt 1
 545              		.cfi_startproc
 546              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 547              		.cfi_lsda 0x1b,.LLSDA28
 548 0260 130101F8 		addi	sp,sp,-128
 549              		.cfi_def_cfa_offset 128
 550 0264 233C1106 		sd	ra,120(sp)
 551 0268 23388106 		sd	s0,112(sp)
 552 026c 23349106 		sd	s1,104(sp)
 553 0270 23302107 		sd	s2,96(sp)
 554 0274 233C3105 		sd	s3,88(sp)
 555 0278 23384105 		sd	s4,80(sp)
 556 027c 23345105 		sd	s5,72(sp)
 557 0280 23306105 		sd	s6,64(sp)
 558              		.cfi_offset 1, -8
 559              		.cfi_offset 8, -16
 560              		.cfi_offset 9, -24
GAS LISTING /tmp/ccxxb8xC.s 			page 16


 561              		.cfi_offset 18, -32
 562              		.cfi_offset 19, -40
 563              		.cfi_offset 20, -48
 564              		.cfi_offset 21, -56
 565              		.cfi_offset 22, -64
 566 0284 13040108 		addi	s0,sp,128
 567              		.cfi_def_cfa 8, 0
  90:src/Riscv.cpp **** 
  91:src/Riscv.cpp ****     uint64 a4;
 568              		.loc 1 91 5
  92:src/Riscv.cpp ****     __asm__ volatile("mv %0, a4" : "=r"(a4));
 569              		.loc 1 92 5
 570              		.loc 1 92 45 is_stmt 0
 571              	#APP
 572              	# 92 "src/Riscv.cpp" 1
  93              	
 573              		mv s2, a4
 574              	# 0 "" 2
 575              	.LVL40:
  94:src/Riscv.cpp ****     uint64 scause = Riscv::r_scause();
 576              		.loc 1 94 5 is_stmt 1
 577              	#NO_APP
 578              	.LBB100:
 579              	.LBB101:
  88:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
 580              		.loc 2 88 5
  89:src/../h/Riscv.hpp ****     return scause;
 581              		.loc 2 89 5
  89:src/../h/Riscv.hpp ****     return scause;
 582              		.loc 2 89 55 is_stmt 0
 583              	#APP
 584              	# 89 "src/../h/Riscv.hpp" 1
 585              		csrr a5, scause
 586              	# 0 "" 2
 587              	#NO_APP
 588 0290 2334F4F8 		sd	a5,-120(s0)
  90:src/../h/Riscv.hpp **** }
 589              		.loc 2 90 5 is_stmt 1
  90:src/../h/Riscv.hpp **** }
 590              		.loc 2 90 12 is_stmt 0
 591 0294 033784F8 		ld	a4,-120(s0)
 592              	.LVL41:
 593              	.LBE101:
 594              	.LBE100:
  95:src/Riscv.cpp **** 
  96:src/Riscv.cpp ****     switch(scause) {
 595              		.loc 1 96 5 is_stmt 1
 596              	.LBB102:
 597 0298 93079000 		li	a5,9
 598 029c 63FEE708 		bleu	a4,a5,.L47
 599 02a0 9307F0FF 		li	a5,-1
 600 02a4 9397F703 		slli	a5,a5,63
 601 02a8 93871700 		addi	a5,a5,1
 602 02ac 631AF708 		bne	a4,a5,.L26
 603              	.LBB103:
  97:src/Riscv.cpp **** 
  98:src/Riscv.cpp ****         case timerInterrupt:
GAS LISTING /tmp/ccxxb8xC.s 			page 17


 604              		.loc 1 98 9
  99:src/Riscv.cpp **** 
 100:src/Riscv.cpp ****             Riscv::mc_sip(Riscv::SIP_SSIP);
 605              		.loc 1 100 13
 606              	.LVL42:
 607              	.LBB104:
 608              	.LBB105:
 132:src/../h/Riscv.hpp **** }
 609              		.loc 2 132 5
 132:src/../h/Riscv.hpp **** }
 610              		.loc 2 132 50 is_stmt 0
 611 02b0 93072000 		li	a5,2
 612              	#APP
 613              	# 132 "src/../h/Riscv.hpp" 1
 614              		csrc sip, a5
 615              	# 0 "" 2
 616              	.LVL43:
 617              	#NO_APP
 618              	.LBE105:
 619              	.LBE104:
 101:src/Riscv.cpp ****             //Riscv::printString("timerInterrupt\n");
 102:src/Riscv.cpp ****             PCB::timeSliceCounter++;
 620              		.loc 1 102 13 is_stmt 1
 621              		.loc 1 102 34 is_stmt 0
 622 02b8 97040000 		la	s1,_ZN3PCB16timeSliceCounterE
 622      83B40400 
 623 02c0 83B70400 		ld	a5,0(s1)
 624 02c4 93871700 		addi	a5,a5,1
 625 02c8 23B0F400 		sd	a5,0(s1)
 103:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
 626              		.loc 1 103 13 is_stmt 1
 627              	.LEHB4:
 628              		.loc 1 103 40 is_stmt 0
 629 02cc 97000000 		call	_ZN12SleepPCBList13tryToWakePCBsEv@plt
 629      E7800000 
 630              	.LVL44:
 104:src/Riscv.cpp ****             static uint64 sumInterrupts = 0;
 631              		.loc 1 104 13 is_stmt 1
 105:src/Riscv.cpp ****             sumInterrupts++;
 632              		.loc 1 105 13
 633              		.loc 1 105 26 is_stmt 0
 634 02d4 17070000 		lla	a4,.LANCHOR1
 634      13070700 
 635 02dc 83370700 		ld	a5,0(a4)
 636 02e0 93871700 		addi	a5,a5,1
 637 02e4 2330F700 		sd	a5,0(a4)
 106:src/Riscv.cpp ****             //Riscv::printInteger(sumInterrupts);
 107:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
 638              		.loc 1 107 13 is_stmt 1
 639              	.LBB106:
 640              		.loc 1 107 68 is_stmt 0
 641 02e8 97070000 		la	a5,_ZN3PCB7runningE
 641      83B70700 
 642 02f0 83B70700 		ld	a5,0(a5)
 643              	.LVL45:
 644              	.LBB107:
 645              	.LBB108:
GAS LISTING /tmp/ccxxb8xC.s 			page 18


  28:src/../h/PCB.hpp **** 
 646              		.loc 3 28 29 is_stmt 1
  28:src/../h/PCB.hpp **** 
 647              		.loc 3 28 36 is_stmt 0
 648 02f4 83B78700 		ld	a5,8(a5)
 649              	.LVL46:
 650              	.LBE108:
 651              	.LBE107:
 652              		.loc 1 107 39
 653 02f8 03B70400 		ld	a4,0(s1)
 654              		.loc 1 107 13
 655 02fc 6362F704 		bltu	a4,a5,.L26
 656              	.LBB109:
 108:src/Riscv.cpp ****             {
 109:src/Riscv.cpp ****                 uint64 sepc = Riscv::r_sepc();
 657              		.loc 1 109 17 is_stmt 1
 658              	.LBB110:
 659              	.LBB111:
  98:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 660              		.loc 2 98 5
  99:src/../h/Riscv.hpp ****     return sepc;
 661              		.loc 2 99 5
  99:src/../h/Riscv.hpp ****     return sepc;
 662              		.loc 2 99 51 is_stmt 0
 663              	#APP
 664              	# 99 "src/../h/Riscv.hpp" 1
 665              		csrr a5, sepc
 666              	# 0 "" 2
 667              	#NO_APP
 668 0304 233CF4F8 		sd	a5,-104(s0)
 100:src/../h/Riscv.hpp **** }
 669              		.loc 2 100 5 is_stmt 1
 100:src/../h/Riscv.hpp **** }
 670              		.loc 2 100 12 is_stmt 0
 671 0308 833484F9 		ld	s1,-104(s0)
 672              	.LVL47:
 673              	.LBE111:
 674              	.LBE110:
 110:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 675              		.loc 1 110 17 is_stmt 1
 676              	.LBB112:
 677              	.LBB113:
 154:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 678              		.loc 2 154 5
 155:src/../h/Riscv.hpp ****     return sstatus;
 679              		.loc 2 155 5
 155:src/../h/Riscv.hpp ****     return sstatus;
 680              		.loc 2 155 57 is_stmt 0
 681              	#APP
 682              	# 155 "src/../h/Riscv.hpp" 1
 683              		csrr a5, sstatus
 684              	# 0 "" 2
 685              	#NO_APP
 686 0310 2338F4F8 		sd	a5,-112(s0)
 687              		.loc 2 156 5 is_stmt 1
 688              		.loc 2 156 12 is_stmt 0
 689 0314 033904F9 		ld	s2,-112(s0)
GAS LISTING /tmp/ccxxb8xC.s 			page 19


 690              	.LVL48:
 691              	.LBE113:
 692              	.LBE112:
 111:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 693              		.loc 1 111 17 is_stmt 1
 694              		.loc 1 111 39 is_stmt 0
 695 0318 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 695      83B70700 
 696 0320 23B00700 		sd	zero,0(a5)
 112:src/Riscv.cpp ****                 PCB::dispatch();
 697              		.loc 1 112 17 is_stmt 1
 698              		.loc 1 112 30 is_stmt 0
 699 0324 97000000 		call	_ZN3PCB8dispatchEv@plt
 699      E7800000 
 700              	.LVL49:
 113:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 701              		.loc 1 113 17 is_stmt 1
 702              	.LBB114:
 703              	.LBB115:
 157:src/../h/Riscv.hpp **** }
 158:src/../h/Riscv.hpp **** 
 159:src/../h/Riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus) {
 160:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sstatus, %0" : :"r"(sstatus));
 704              		.loc 2 160 5
 705              		.loc 2 160 57 is_stmt 0
 706              	#APP
 707              	# 160 "src/../h/Riscv.hpp" 1
 161              	}
 708              		csrw sstatus, s2
 709              	# 0 "" 2
 710              	.LVL50:
 711              	#NO_APP
 712              	.LBE115:
 713              	.LBE114:
 114:src/Riscv.cpp ****                 Riscv::w_sepc(sepc);
 714              		.loc 1 114 17 is_stmt 1
 715              	.LBB116:
 716              	.LBB117:
 104:src/../h/Riscv.hpp **** }
 717              		.loc 2 104 5
 104:src/../h/Riscv.hpp **** }
 718              		.loc 2 104 51 is_stmt 0
 719              	#APP
 720              	# 104 "src/../h/Riscv.hpp" 1
 105:src/../h/Riscv.hpp **** 
 721              		csrw sepc, s1
 722              	# 0 "" 2
 723              		.loc 2 105 1
 724              	#NO_APP
 725 0334 6F00C000 		j	.L26
 726              	.LVL51:
 727              	.L47:
 728              	.LBE117:
 729              	.LBE116:
 730              	.LBE109:
 731              	.LBE106:
 732              	.LBE103:
GAS LISTING /tmp/ccxxb8xC.s 			page 20


  96:src/Riscv.cpp **** 
 733              		.loc 1 96 5
 734 0338 93078000 		li	a5,8
 735 033c 637AF702 		bgeu	a4,a5,.L48
 736              	.LVL52:
 737              	.L26:
 738              	.LBE102:
 115:src/Riscv.cpp ****             }
 116:src/Riscv.cpp **** 
 117:src/Riscv.cpp ****             //Riscv::mc_sip(Riscv::SIP_SSIP);
 118:src/Riscv.cpp **** 
 119:src/Riscv.cpp ****             break;
 120:src/Riscv.cpp **** 
 121:src/Riscv.cpp ****         case hwInterrupt: // todo
 122:src/Riscv.cpp **** 
 123:src/Riscv.cpp ****             break;
 124:src/Riscv.cpp **** 
 125:src/Riscv.cpp ****         case operationInterrupt: // todo
 126:src/Riscv.cpp ****             break;
 127:src/Riscv.cpp **** 
 128:src/Riscv.cpp ****         case addrReadInterrupt: // todo
 129:src/Riscv.cpp ****             break;
 130:src/Riscv.cpp **** 
 131:src/Riscv.cpp ****         case addrWriteInterrupt: // todo
 132:src/Riscv.cpp ****             break;
 133:src/Riscv.cpp **** 
 134:src/Riscv.cpp ****         case ecallSystemInterupt:
 135:src/Riscv.cpp ****         case ecallUserInterrupt:
 136:src/Riscv.cpp **** 
 137:src/Riscv.cpp ****             uint64 operation;
 138:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
 139:src/Riscv.cpp **** 
 140:src/Riscv.cpp ****             uint64 sepc = Riscv::r_sepc();
 141:src/Riscv.cpp ****             sepc+=4;
 142:src/Riscv.cpp **** 
 143:src/Riscv.cpp ****             if(operation == MemoryAllocator::MEM_ALLOC)
 144:src/Riscv.cpp ****             {
 145:src/Riscv.cpp ****                 size_t size;
 146:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(size));
 147:src/Riscv.cpp ****                 size*=MEM_BLOCK_SIZE;
 148:src/Riscv.cpp ****                 void* allocatedAddr = kmalloc(size);
 149:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : : "r"((uint64)allocatedAddr));
 150:src/Riscv.cpp ****             }
 151:src/Riscv.cpp ****             else if(operation == MemoryAllocator::MEM_FREE)
 152:src/Riscv.cpp ****             {
 153:src/Riscv.cpp ****                 uint64 addr = 0;
 154:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(addr));
 155:src/Riscv.cpp ****                 uint64 retval = kfree((void*)addr);
 156:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 157:src/Riscv.cpp ****             }
 158:src/Riscv.cpp ****             else if(operation == PCB::THREAD_CREATE)
 159:src/Riscv.cpp ****             {
 160:src/Riscv.cpp ****                 //todo
 161:src/Riscv.cpp ****                 uint64 start_routine;
 162:src/Riscv.cpp ****                 uint64 args;
 163:src/Riscv.cpp ****                 PCB** threadHandle;
 164:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(threadHandle));
GAS LISTING /tmp/ccxxb8xC.s 			page 21


 165:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(start_routine));
 166:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a3" : "=r"(args));
 167:src/Riscv.cpp ****                 //uint64 stack_space;
 168:src/Riscv.cpp ****                 //__asm__ volatile("mv %0, a4" : "=r"(stack_space));
 169:src/Riscv.cpp **** 
 170:src/Riscv.cpp ****                 //todo
 171:src/Riscv.cpp ****                 //da li treba ovako ili tipa da se ne koristi new
 172:src/Riscv.cpp ****                 //nego direktno kmalloc - ali onda kako konstruktor
 173:src/Riscv.cpp ****                 //sta se desava ako preklopljeni new vrati 0
 174:src/Riscv.cpp ****                 PCB* newPCB = new PCB((void (*)(void*))start_routine, (void*)args, (void*)a4, 3UL);
 175:src/Riscv.cpp **** 
 176:src/Riscv.cpp ****                 (*threadHandle) = newPCB;
 177:src/Riscv.cpp **** 
 178:src/Riscv.cpp ****                 if(newPCB == 0)
 179:src/Riscv.cpp ****                     __asm__ volatile("li a0, 0xffffffffffffffff");
 180:src/Riscv.cpp ****                 else
 181:src/Riscv.cpp ****                     __asm__ volatile("li a0, 0");
 182:src/Riscv.cpp ****             }
 183:src/Riscv.cpp ****             else if(operation == PCB::THREAD_DISPATCH)
 184:src/Riscv.cpp ****             {
 185:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 186:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 187:src/Riscv.cpp ****                 PCB::dispatch();
 188:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 189:src/Riscv.cpp ****             }
 190:src/Riscv.cpp ****             else if(operation == PCB::THREAD_EXIT)
 191:src/Riscv.cpp ****             {
 192:src/Riscv.cpp ****                 if(PCB::running == 0)
 193:src/Riscv.cpp ****                 {
 194:src/Riscv.cpp ****                     __asm__ volatile("li a0, 0xffffffffffffffff");
 195:src/Riscv.cpp ****                     return;
 196:src/Riscv.cpp ****                 }
 197:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 198:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 199:src/Riscv.cpp ****                 PCB::exitingPCB = PCB::running;
 200:src/Riscv.cpp ****                 PCB::exitingPCB->setState(PCB::EXITING);
 201:src/Riscv.cpp ****                 //todo
 202:src/Riscv.cpp ****                 //da li se iz ovog dispatch-a neka nit vraca uopste
 203:src/Riscv.cpp ****                 PCB::dispatch();
 204:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 205:src/Riscv.cpp ****             }
 206:src/Riscv.cpp ****             else if(operation == PCB::TIME_SLEEP)
 207:src/Riscv.cpp ****             {
 208:src/Riscv.cpp ****                 uint64 time;
 209:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(time));
 210:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 211:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 212:src/Riscv.cpp ****                 PCB::running->setTimeToSleep(time);
 213:src/Riscv.cpp ****                 SleepPCBList::insertSleepingPCB();
 214:src/Riscv.cpp ****                 PCB::dispatch();
 215:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 216:src/Riscv.cpp ****                 //todo
 217:src/Riscv.cpp ****                 //kad treba vratiti kod greske
 218:src/Riscv.cpp ****                 __asm__ volatile("li a0, 0x0");
 219:src/Riscv.cpp ****             }
 220:src/Riscv.cpp ****             else if(operation == KSemaphore::SEM_OPEN)
 221:src/Riscv.cpp ****             {
GAS LISTING /tmp/ccxxb8xC.s 			page 22


 222:src/Riscv.cpp ****                 uint64 val;
 223:src/Riscv.cpp ****                 KSemaphore** semaphoreHandle;
 224:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(semaphoreHandle));
 225:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(val));
 226:src/Riscv.cpp **** 
 227:src/Riscv.cpp ****                 KSemaphore* newSem = new KSemaphore(val);
 228:src/Riscv.cpp **** 
 229:src/Riscv.cpp ****                 (*semaphoreHandle) = newSem;
 230:src/Riscv.cpp **** 
 231:src/Riscv.cpp ****                 if(newSem == 0)
 232:src/Riscv.cpp ****                         __asm__ volatile("li a0, 0xffffffffffffffff");
 233:src/Riscv.cpp ****                 else
 234:src/Riscv.cpp ****                         __asm__ volatile("li a0, 0");
 235:src/Riscv.cpp **** 
 236:src/Riscv.cpp ****             }
 237:src/Riscv.cpp ****             else if(operation == KSemaphore::SEM_WAIT)
 238:src/Riscv.cpp ****             {
 239:src/Riscv.cpp ****                 //todo
 240:src/Riscv.cpp ****                 //negativna povratna vrednost sta i kako
 241:src/Riscv.cpp ****                 KSemaphore* kSem;
 242:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(kSem));
 243:src/Riscv.cpp ****                 uint64 retval = kSem->wait();
 244:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 245:src/Riscv.cpp ****             }
 246:src/Riscv.cpp ****             else if(operation == KSemaphore::SEM_SIGNAL)
 247:src/Riscv.cpp ****             {
 248:src/Riscv.cpp ****                 //todo
 249:src/Riscv.cpp ****                 //negativna povratna vrednost sta i kako
 250:src/Riscv.cpp ****                 KSemaphore* kSem;
 251:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(kSem));
 252:src/Riscv.cpp ****                 uint64 retval = kSem->signal();
 253:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 254:src/Riscv.cpp ****             }
 255:src/Riscv.cpp ****             else if(operation == KSemaphore::SEM_CLOSE)
 256:src/Riscv.cpp ****             {
 257:src/Riscv.cpp ****                 //todo
 258:src/Riscv.cpp ****                 //negativna povratna vrednost sta i kako
 259:src/Riscv.cpp ****                 KSemaphore* kSem;
 260:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(kSem));
 261:src/Riscv.cpp **** 
 262:src/Riscv.cpp ****                 delete kSem;
 263:src/Riscv.cpp **** 
 264:src/Riscv.cpp ****                 __asm__ volatile("li a0, 0");
 265:src/Riscv.cpp ****             }
 266:src/Riscv.cpp **** 
 267:src/Riscv.cpp **** 
 268:src/Riscv.cpp **** 
 269:src/Riscv.cpp **** 
 270:src/Riscv.cpp **** 
 271:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 272:src/Riscv.cpp **** 
 273:src/Riscv.cpp ****             return;
 274:src/Riscv.cpp ****             //break;
 275:src/Riscv.cpp ****     }
 276:src/Riscv.cpp **** 
 277:src/Riscv.cpp ****     console_handler();
 739              		.loc 1 277 5 is_stmt 1
GAS LISTING /tmp/ccxxb8xC.s 			page 23


 740              		.loc 1 277 20 is_stmt 0
 741 0340 97000000 		call	console_handler@plt
 741      E7800000 
 742              	.LVL53:
 743              	.L23:
 278:src/Riscv.cpp **** }
 744              		.loc 1 278 1
 745 0348 83308107 		ld	ra,120(sp)
 746              		.cfi_remember_state
 747              		.cfi_restore 1
 748 034c 03340107 		ld	s0,112(sp)
 749              		.cfi_restore 8
 750              		.cfi_def_cfa 2, 128
 751 0350 83348106 		ld	s1,104(sp)
 752              		.cfi_restore 9
 753 0354 03390106 		ld	s2,96(sp)
 754              		.cfi_restore 18
 755 0358 83398105 		ld	s3,88(sp)
 756              		.cfi_restore 19
 757 035c 033A0105 		ld	s4,80(sp)
 758              		.cfi_restore 20
 759 0360 833A8104 		ld	s5,72(sp)
 760              		.cfi_restore 21
 761 0364 033B0104 		ld	s6,64(sp)
 762              		.cfi_restore 22
 763 0368 13010108 		addi	sp,sp,128
 764              		.cfi_def_cfa_offset 0
 765 036c 67800000 		jr	ra
 766              	.LVL54:
 767              	.L48:
 768              		.cfi_restore_state
 769              	.LBB228:
 770              	.LBB218:
 134:src/Riscv.cpp ****         case ecallUserInterrupt:
 771              		.loc 1 134 9 is_stmt 1
 135:src/Riscv.cpp **** 
 772              		.loc 1 135 9
 137:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
 773              		.loc 1 137 13
 138:src/Riscv.cpp **** 
 774              		.loc 1 138 13
 138:src/Riscv.cpp **** 
 775              		.loc 1 138 61 is_stmt 0
 776              	#APP
 777              	# 138 "src/Riscv.cpp" 1
 778              		mv a5, a0
 779              	# 0 "" 2
 780              	.LVL55:
 140:src/Riscv.cpp ****             sepc+=4;
 781              		.loc 1 140 13 is_stmt 1
 782              	#NO_APP
 783              	.LBB118:
 784              	.LBB119:
  98:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 785              		.loc 2 98 5
  99:src/../h/Riscv.hpp ****     return sepc;
 786              		.loc 2 99 5
GAS LISTING /tmp/ccxxb8xC.s 			page 24


  99:src/../h/Riscv.hpp ****     return sepc;
 787              		.loc 2 99 51 is_stmt 0
 788              	#APP
 789              	# 99 "src/../h/Riscv.hpp" 1
 790              		csrr a4, sepc
 791              	# 0 "" 2
 792              	.LVL56:
 793              	#NO_APP
 794 0378 2330E4FA 		sd	a4,-96(s0)
 100:src/../h/Riscv.hpp **** }
 795              		.loc 2 100 5 is_stmt 1
 100:src/../h/Riscv.hpp **** }
 796              		.loc 2 100 12 is_stmt 0
 797 037c 033704FA 		ld	a4,-96(s0)
 798              	.LVL57:
 799              	.LBE119:
 800              	.LBE118:
 141:src/Riscv.cpp **** 
 801              		.loc 1 141 13 is_stmt 1
 141:src/Riscv.cpp **** 
 802              		.loc 1 141 17 is_stmt 0
 803 0380 93044700 		addi	s1,a4,4
 804              	.LVL58:
 143:src/Riscv.cpp ****             {
 805              		.loc 1 143 13 is_stmt 1
 806              	.LBB120:
 807 0384 13071000 		li	a4,1
 808 0388 638AE706 		beq	a5,a4,.L49
 809              	.LBE120:
 810              	.LBE218:
 811              	.LBE228:
 151:src/Riscv.cpp ****             {
 812              		.loc 1 151 18
 813              	.LBB229:
 814              	.LBB219:
 815              	.LBB206:
 816              	.LBB121:
 817 038c 13072000 		li	a4,2
 818 0390 6384E708 		beq	a5,a4,.L50
 819              	.LBE121:
 820              	.LBE206:
 821              	.LBE219:
 822              	.LBE229:
 158:src/Riscv.cpp ****             {
 823              		.loc 1 158 18
 824              	.LBB230:
 825              	.LBB220:
 826              	.LBB207:
 827              	.LBB196:
 828              	.LBB122:
 829 0394 13071001 		li	a4,17
 830 0398 638AE708 		beq	a5,a4,.L51
 831              	.LBE122:
 832              	.LBE196:
 833              	.LBE207:
 834              	.LBE220:
 835              	.LBE230:
GAS LISTING /tmp/ccxxb8xC.s 			page 25


 183:src/Riscv.cpp ****             {
 836              		.loc 1 183 18
 837              	.LBB231:
 838              	.LBB221:
 839              	.LBB208:
 840              	.LBB197:
 841              	.LBB187:
 842              	.LBB123:
 843 039c 13073001 		li	a4,19
 844 03a0 638CE70C 		beq	a5,a4,.L52
 845              	.LBE123:
 846              	.LBE187:
 847              	.LBE197:
 848              	.LBE208:
 849              	.LBE221:
 850              	.LBE231:
 190:src/Riscv.cpp ****             {
 851              		.loc 1 190 18
 852              	.LBB232:
 853              	.LBB222:
 854              	.LBB209:
 855              	.LBB198:
 856              	.LBB188:
 857              	.LBB177:
 858              	.LBB124:
 859 03a4 13072001 		li	a4,18
 860 03a8 638CE70E 		beq	a5,a4,.L53
 861              	.LBE124:
 862              	.LBE177:
 863              	.LBE188:
 864              	.LBE198:
 865              	.LBE209:
 866              	.LBE222:
 867              	.LBE232:
 206:src/Riscv.cpp ****             {
 868              		.loc 1 206 18
 869              	.LBB233:
 870              	.LBB223:
 871              	.LBB210:
 872              	.LBB199:
 873              	.LBB189:
 874              	.LBB178:
 875              	.LBB165:
 876              	.LBB125:
 877 03ac 13071003 		li	a4,49
 878 03b0 6388E714 		beq	a5,a4,.L54
 879              	.LBE125:
 880              	.LBE165:
 881              	.LBE178:
 882              	.LBE189:
 883              	.LBE199:
 884              	.LBE210:
 885              	.LBE223:
 886              	.LBE233:
 220:src/Riscv.cpp ****             {
 887              		.loc 1 220 18
 888              	.LBB234:
GAS LISTING /tmp/ccxxb8xC.s 			page 26


 889              	.LBB224:
 890              	.LBB211:
 891              	.LBB200:
 892              	.LBB190:
 893              	.LBB179:
 894              	.LBB166:
 895              	.LBB152:
 896              	.LBB126:
 897 03b4 13071002 		li	a4,33
 898 03b8 6388E718 		beq	a5,a4,.L55
 899              	.LBE126:
 900              	.LBE152:
 901              	.LBE166:
 902              	.LBE179:
 903              	.LBE190:
 904              	.LBE200:
 905              	.LBE211:
 906              	.LBE224:
 907              	.LBE234:
 237:src/Riscv.cpp ****             {
 908              		.loc 1 237 18
 909              	.LBB235:
 910              	.LBB225:
 911              	.LBB212:
 912              	.LBB201:
 913              	.LBB191:
 914              	.LBB180:
 915              	.LBB167:
 916              	.LBB153:
 917              	.LBB140:
 918              	.LBB127:
 919 03bc 13073002 		li	a4,35
 920 03c0 6382E71C 		beq	a5,a4,.L56
 921              	.LBE127:
 922              	.LBE140:
 923              	.LBE153:
 924              	.LBE167:
 925              	.LBE180:
 926              	.LBE191:
 927              	.LBE201:
 928              	.LBE212:
 929              	.LBE225:
 930              	.LBE235:
 246:src/Riscv.cpp ****             {
 931              		.loc 1 246 18
 932              	.LBB236:
 933              	.LBB226:
 934              	.LBB213:
 935              	.LBB202:
 936              	.LBB192:
 937              	.LBB181:
 938              	.LBB168:
 939              	.LBB154:
 940              	.LBB141:
 941              	.LBB135:
 942              	.LBB128:
 943 03c4 13074002 		li	a4,36
GAS LISTING /tmp/ccxxb8xC.s 			page 27


 944 03c8 6388E71C 		beq	a5,a4,.L57
 945              	.LBE128:
 946              	.LBE135:
 947              	.LBE141:
 948              	.LBE154:
 949              	.LBE168:
 950              	.LBE181:
 951              	.LBE192:
 952              	.LBE202:
 953              	.LBE213:
 954              	.LBE226:
 955              	.LBE236:
 255:src/Riscv.cpp ****             {
 956              		.loc 1 255 18
 957              	.LBB237:
 958              	.LBB227:
 959              	.LBB214:
 960              	.LBB203:
 961              	.LBB193:
 962              	.LBB182:
 963              	.LBB169:
 964              	.LBB155:
 965              	.LBB142:
 966              	.LBB136:
 967              	.LBB132:
 968              	.LBB129:
 969 03cc 13072002 		li	a4,34
 970 03d0 6390E704 		bne	a5,a4,.L28
 971              	.LBB130:
 259:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(kSem));
 972              		.loc 1 259 17
 260:src/Riscv.cpp **** 
 973              		.loc 1 260 17
 260:src/Riscv.cpp **** 
 974              		.loc 1 260 59 is_stmt 0
 975              	#APP
 976              	# 260 "src/Riscv.cpp" 1
 977              		mv s2, a1
 978              	# 0 "" 2
 979              	.LVL59:
 262:src/Riscv.cpp **** 
 980              		.loc 1 262 17 is_stmt 1
 262:src/Riscv.cpp **** 
 981              		.loc 1 262 28 is_stmt 0
 982              	#NO_APP
 983 03d8 630E0900 		beqz	s2,.L41
 262:src/Riscv.cpp **** 
 984              		.loc 1 262 24 discriminator 1
 985 03dc 13050900 		mv	a0,s2
 986 03e0 97000000 		call	_ZN10KSemaphoreD1Ev@plt
 986      E7800000 
 987              	.LVL60:
 988 03e8 13050900 		mv	a0,s2
 989 03ec 97000000 		call	_ZN10KSemaphoredlEPv@plt
 989      E7800000 
 990              	.LVL61:
 991              	.L41:
GAS LISTING /tmp/ccxxb8xC.s 			page 28


 264:src/Riscv.cpp ****             }
 992              		.loc 1 264 17 is_stmt 1
 264:src/Riscv.cpp ****             }
 993              		.loc 1 264 45 is_stmt 0
 994              	#APP
 995              	# 264 "src/Riscv.cpp" 1
 996              		li a0, 0
 997              	# 0 "" 2
 998              	#NO_APP
 999              	.LBE130:
 1000 03f8 6F008001 		j	.L28
 1001              	.LVL62:
 1002              	.L49:
 1003              	.LBE129:
 1004              	.LBE132:
 1005              	.LBE136:
 1006              	.LBE142:
 1007              	.LBE155:
 1008              	.LBE169:
 1009              	.LBE182:
 1010              	.LBE193:
 1011              	.LBE203:
 1012              	.LBB204:
 145:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(size));
 1013              		.loc 1 145 17 is_stmt 1
 146:src/Riscv.cpp ****                 size*=MEM_BLOCK_SIZE;
 1014              		.loc 1 146 17
 146:src/Riscv.cpp ****                 size*=MEM_BLOCK_SIZE;
 1015              		.loc 1 146 59 is_stmt 0
 1016              	#APP
 1017              	# 146 "src/Riscv.cpp" 1
 1018              		mv a0, a1
 1019              	# 0 "" 2
 1020              	.LVL63:
 147:src/Riscv.cpp ****                 void* allocatedAddr = kmalloc(size);
 1021              		.loc 1 147 17 is_stmt 1
 148:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : : "r"((uint64)allocatedAddr));
 1022              		.loc 1 148 17
 148:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : : "r"((uint64)allocatedAddr));
 1023              		.loc 1 148 46 is_stmt 0
 1024              	#NO_APP
 1025 0400 13156500 		slli	a0,a0,6
 1026              	.LVL64:
 1027 0404 97000000 		call	_Z7kmallocm@plt
 1027      E7800000 
 1028              	.LVL65:
 149:src/Riscv.cpp ****             }
 1029              		.loc 1 149 17 is_stmt 1
 149:src/Riscv.cpp ****             }
 1030              		.loc 1 149 76 is_stmt 0
 1031              	#APP
 1032              	# 149 "src/Riscv.cpp" 1
 1033              		mv a0,a0
 1034              	# 0 "" 2
 1035              	.LVL66:
 1036              	#NO_APP
 1037              	.L28:
GAS LISTING /tmp/ccxxb8xC.s 			page 29


 1038              	.LBE204:
 1039              	.LBE214:
 271:src/Riscv.cpp **** 
 1040              		.loc 1 271 13 is_stmt 1
 1041              	.LBB215:
 1042              	.LBB216:
 104:src/../h/Riscv.hpp **** }
 1043              		.loc 2 104 5
 104:src/../h/Riscv.hpp **** }
 1044              		.loc 2 104 51 is_stmt 0
 1045              	#APP
 1046              	# 104 "src/../h/Riscv.hpp" 1
 105:src/../h/Riscv.hpp **** 
 1047              		csrw sepc, s1
 1048              	# 0 "" 2
 1049              		.loc 2 105 1
 1050              	#NO_APP
 1051 0414 6FF05FF3 		j	.L23
 1052              	.LVL67:
 1053              	.L50:
 1054              	.LBE216:
 1055              	.LBE215:
 1056              	.LBB217:
 1057              	.LBB205:
 1058              	.LBB194:
 153:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(addr));
 1059              		.loc 1 153 17 is_stmt 1
 154:src/Riscv.cpp ****                 uint64 retval = kfree((void*)addr);
 1060              		.loc 1 154 17
 154:src/Riscv.cpp ****                 uint64 retval = kfree((void*)addr);
 1061              		.loc 1 154 59 is_stmt 0
 1062              	#APP
 1063              	# 154 "src/Riscv.cpp" 1
 1064              		mv a0, a1
 1065              	# 0 "" 2
 1066              	.LVL68:
 155:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 1067              		.loc 1 155 17 is_stmt 1
 155:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 1068              		.loc 1 155 38 is_stmt 0
 1069              	#NO_APP
 1070 041c 97000000 		call	_Z5kfreePv@plt
 1070      E7800000 
 1071              	.LVL69:
 156:src/Riscv.cpp ****             }
 1072              		.loc 1 156 17 is_stmt 1
 156:src/Riscv.cpp ****             }
 1073              		.loc 1 156 60 is_stmt 0
 1074              	#APP
 1075              	# 156 "src/Riscv.cpp" 1
 1076              		mv a0,a0
 1077              	# 0 "" 2
 1078              	#NO_APP
 1079              	.LBE194:
 1080 0428 6FF09FFE 		j	.L28
 1081              	.LVL70:
 1082              	.L51:
GAS LISTING /tmp/ccxxb8xC.s 			page 30


 1083              	.LBB195:
 1084              	.LBB183:
 161:src/Riscv.cpp ****                 uint64 args;
 1085              		.loc 1 161 17 is_stmt 1
 162:src/Riscv.cpp ****                 PCB** threadHandle;
 1086              		.loc 1 162 17
 163:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(threadHandle));
 1087              		.loc 1 163 17
 164:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(start_routine));
 1088              		.loc 1 164 17
 164:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(start_routine));
 1089              		.loc 1 164 67 is_stmt 0
 1090              	#APP
 1091              	# 164 "src/Riscv.cpp" 1
 1092              		mv s4, a1
 1093              	# 0 "" 2
 1094              	.LVL71:
 165:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a3" : "=r"(args));
 1095              		.loc 1 165 17 is_stmt 1
 165:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a3" : "=r"(args));
 1096              		.loc 1 165 68 is_stmt 0
 1097              	# 165 "src/Riscv.cpp" 1
 1098              		mv s5, a2
 1099              	# 0 "" 2
 1100              	.LVL72:
 166:src/Riscv.cpp ****                 //uint64 stack_space;
 1101              		.loc 1 166 17 is_stmt 1
 166:src/Riscv.cpp ****                 //uint64 stack_space;
 1102              		.loc 1 166 59 is_stmt 0
 1103              	# 166 "src/Riscv.cpp" 1
 1104              		mv s6, a3
 1105              	# 0 "" 2
 1106              	.LVL73:
 174:src/Riscv.cpp **** 
 1107              		.loc 1 174 17 is_stmt 1
 174:src/Riscv.cpp **** 
 1108              		.loc 1 174 98 is_stmt 0
 1109              	#NO_APP
 1110 0438 13050005 		li	a0,80
 1111 043c 97000000 		call	_ZN3PCBnwEm@plt
 1111      E7800000 
 1112              	.LVL74:
 1113              	.LEHE4:
 1114 0444 93090500 		mv	s3,a0
 1115 0448 13073000 		li	a4,3
 1116 044c 93060900 		mv	a3,s2
 1117 0450 13060B00 		mv	a2,s6
 1118 0454 93850A00 		mv	a1,s5
 1119              	.LEHB5:
 1120 0458 97000000 		call	_ZN3PCBC1EPFvPvES0_S0_m@plt
 1120      E7800000 
 1121              	.LVL75:
 1122              	.LEHE5:
 176:src/Riscv.cpp **** 
 1123              		.loc 1 176 17 is_stmt 1 discriminator 2
 176:src/Riscv.cpp **** 
 1124              		.loc 1 176 33 is_stmt 0 discriminator 2
GAS LISTING /tmp/ccxxb8xC.s 			page 31


 1125 0460 23303A01 		sd	s3,0(s4)
 178:src/Riscv.cpp ****                     __asm__ volatile("li a0, 0xffffffffffffffff");
 1126              		.loc 1 178 17 is_stmt 1 discriminator 2
 1127 0464 63860900 		beqz	s3,.L58
 181:src/Riscv.cpp ****             }
 1128              		.loc 1 181 21
 181:src/Riscv.cpp ****             }
 1129              		.loc 1 181 49 is_stmt 0
 1130              	#APP
 1131              	# 181 "src/Riscv.cpp" 1
 1132              		li a0, 0
 1133              	# 0 "" 2
 1134              	#NO_APP
 1135 046c 6FF05FFA 		j	.L28
 1136              	.L58:
 179:src/Riscv.cpp ****                 else
 1137              		.loc 1 179 21 is_stmt 1
 179:src/Riscv.cpp ****                 else
 1138              		.loc 1 179 66 is_stmt 0
 1139              	#APP
 1140              	# 179 "src/Riscv.cpp" 1
 1141              		li a0, 0xffffffffffffffff
 1142              	# 0 "" 2
 1143              	#NO_APP
 1144 0474 6FF0DFF9 		j	.L28
 1145              	.LVL76:
 1146              	.L52:
 1147              	.LBE183:
 1148              	.LBB184:
 1149              	.LBB170:
 185:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 1150              		.loc 1 185 17 is_stmt 1
 1151              	.LBB171:
 1152              	.LBB172:
 154:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 1153              		.loc 2 154 5
 155:src/../h/Riscv.hpp ****     return sstatus;
 1154              		.loc 2 155 5
 155:src/../h/Riscv.hpp ****     return sstatus;
 1155              		.loc 2 155 57 is_stmt 0
 1156              	#APP
 1157              	# 155 "src/../h/Riscv.hpp" 1
 1158              		csrr a5, sstatus
 1159              	# 0 "" 2
 1160              	.LVL77:
 1161              	#NO_APP
 1162 047c 2334F4FA 		sd	a5,-88(s0)
 156:src/../h/Riscv.hpp **** }
 1163              		.loc 2 156 5 is_stmt 1
 156:src/../h/Riscv.hpp **** }
 1164              		.loc 2 156 12 is_stmt 0
 1165 0480 033984FA 		ld	s2,-88(s0)
 1166              	.LVL78:
 1167              	.LBE172:
 1168              	.LBE171:
 186:src/Riscv.cpp ****                 PCB::dispatch();
 1169              		.loc 1 186 17 is_stmt 1
GAS LISTING /tmp/ccxxb8xC.s 			page 32


 186:src/Riscv.cpp ****                 PCB::dispatch();
 1170              		.loc 1 186 39 is_stmt 0
 1171 0484 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 1171      83B70700 
 1172 048c 23B00700 		sd	zero,0(a5)
 187:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1173              		.loc 1 187 17 is_stmt 1
 1174              	.LEHB6:
 187:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1175              		.loc 1 187 30 is_stmt 0
 1176 0490 97000000 		call	_ZN3PCB8dispatchEv@plt
 1176      E7800000 
 1177              	.LVL79:
 188:src/Riscv.cpp ****             }
 1178              		.loc 1 188 17 is_stmt 1
 1179              	.LBB173:
 1180              	.LBB174:
 160:src/../h/Riscv.hpp **** }
 1181              		.loc 2 160 5
 160:src/../h/Riscv.hpp **** }
 1182              		.loc 2 160 57 is_stmt 0
 1183              	#APP
 1184              	# 160 "src/../h/Riscv.hpp" 1
 1185              		csrw sstatus, s2
 1186              	# 0 "" 2
 1187              		.loc 2 161 1
 1188              	#NO_APP
 1189 049c 6FF05FF7 		j	.L28
 1190              	.LVL80:
 1191              	.L53:
 1192              	.LBE174:
 1193              	.LBE173:
 1194              	.LBE170:
 1195              	.LBB175:
 1196              	.LBB156:
 192:src/Riscv.cpp ****                 {
 1197              		.loc 1 192 17 is_stmt 1
 192:src/Riscv.cpp ****                 {
 1198              		.loc 1 192 33 is_stmt 0
 1199 04a0 97070000 		la	a5,_ZN3PCB7runningE
 1199      83B70700 
 1200              	.LVL81:
 1201 04a8 83B70700 		ld	a5,0(a5)
 192:src/Riscv.cpp ****                 {
 1202              		.loc 1 192 17
 1203 04ac 63860704 		beqz	a5,.L59
 197:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 1204              		.loc 1 197 17 is_stmt 1
 1205              	.LBB157:
 1206              	.LBB158:
 154:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 1207              		.loc 2 154 5
 155:src/../h/Riscv.hpp ****     return sstatus;
 1208              		.loc 2 155 5
 155:src/../h/Riscv.hpp ****     return sstatus;
 1209              		.loc 2 155 57 is_stmt 0
 1210              	#APP
GAS LISTING /tmp/ccxxb8xC.s 			page 33


 1211              	# 155 "src/../h/Riscv.hpp" 1
 1212              		csrr a5, sstatus
 1213              	# 0 "" 2
 1214              	#NO_APP
 1215 04b4 2338F4FA 		sd	a5,-80(s0)
 156:src/../h/Riscv.hpp **** }
 1216              		.loc 2 156 5 is_stmt 1
 156:src/../h/Riscv.hpp **** }
 1217              		.loc 2 156 12 is_stmt 0
 1218 04b8 033904FB 		ld	s2,-80(s0)
 1219              	.LVL82:
 1220              	.LBE158:
 1221              	.LBE157:
 198:src/Riscv.cpp ****                 PCB::exitingPCB = PCB::running;
 1222              		.loc 1 198 17 is_stmt 1
 198:src/Riscv.cpp ****                 PCB::exitingPCB = PCB::running;
 1223              		.loc 1 198 39 is_stmt 0
 1224 04bc 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 1224      83B70700 
 1225 04c4 23B00700 		sd	zero,0(a5)
 199:src/Riscv.cpp ****                 PCB::exitingPCB->setState(PCB::EXITING);
 1226              		.loc 1 199 17 is_stmt 1
 199:src/Riscv.cpp ****                 PCB::exitingPCB->setState(PCB::EXITING);
 1227              		.loc 1 199 33 is_stmt 0
 1228 04c8 97070000 		la	a5,_ZN3PCB7runningE
 1228      83B70700 
 1229 04d0 83B70700 		ld	a5,0(a5)
 1230 04d4 17070000 		la	a4,_ZN3PCB10exitingPCBE
 1230      03370700 
 1231 04dc 2330F700 		sd	a5,0(a4)
 200:src/Riscv.cpp ****                 //todo
 1232              		.loc 1 200 17 is_stmt 1
 1233              	.LVL83:
 1234              	.LBB159:
 1235              	.LBB160:
 1236              		.loc 3 35 29
 1237              		.loc 3 35 35 is_stmt 0
 1238 04e0 13074000 		li	a4,4
 1239 04e4 23A8E702 		sw	a4,48(a5)
 1240              	.LVL84:
 1241              	.LBE160:
 1242              	.LBE159:
 203:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1243              		.loc 1 203 17 is_stmt 1
 203:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1244              		.loc 1 203 30 is_stmt 0
 1245 04e8 97000000 		call	_ZN3PCB8dispatchEv@plt
 1245      E7800000 
 1246              	.LVL85:
 204:src/Riscv.cpp ****             }
 1247              		.loc 1 204 17 is_stmt 1
 1248              	.LBB161:
 1249              	.LBB162:
 160:src/../h/Riscv.hpp **** }
 1250              		.loc 2 160 5
 160:src/../h/Riscv.hpp **** }
 1251              		.loc 2 160 57 is_stmt 0
GAS LISTING /tmp/ccxxb8xC.s 			page 34


 1252              	#APP
 1253              	# 160 "src/../h/Riscv.hpp" 1
 1254              		csrw sstatus, s2
 1255              	# 0 "" 2
 1256              		.loc 2 161 1
 1257              	#NO_APP
 1258 04f4 6FF0DFF1 		j	.L28
 1259              	.LVL86:
 1260              	.L59:
 1261              	.LBE162:
 1262              	.LBE161:
 194:src/Riscv.cpp ****                     return;
 1263              		.loc 1 194 21 is_stmt 1
 194:src/Riscv.cpp ****                     return;
 1264              		.loc 1 194 66 is_stmt 0
 1265              	#APP
 1266              	# 194 "src/Riscv.cpp" 1
 195:src/Riscv.cpp ****                 }
 1267              		li a0, 0xffffffffffffffff
 1268              	# 0 "" 2
 1269              		.loc 1 195 21 is_stmt 1
 1270              	#NO_APP
 1271 04fc 6FF0DFE4 		j	.L23
 1272              	.LVL87:
 1273              	.L54:
 1274              	.LBE156:
 1275              	.LBB163:
 1276              	.LBB143:
 208:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(time));
 1277              		.loc 1 208 17
 209:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 1278              		.loc 1 209 17
 209:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 1279              		.loc 1 209 59 is_stmt 0
 1280              	#APP
 1281              	# 209 "src/Riscv.cpp" 1
 1282              		mv a4, a1
 1283              	# 0 "" 2
 1284              	.LVL88:
 210:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 1285              		.loc 1 210 17 is_stmt 1
 1286              	#NO_APP
 1287              	.LBB144:
 1288              	.LBB145:
 154:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 1289              		.loc 2 154 5
 155:src/../h/Riscv.hpp ****     return sstatus;
 1290              		.loc 2 155 5
 155:src/../h/Riscv.hpp ****     return sstatus;
 1291              		.loc 2 155 57 is_stmt 0
 1292              	#APP
 1293              	# 155 "src/../h/Riscv.hpp" 1
 1294              		csrr a5, sstatus
 1295              	# 0 "" 2
 1296              	.LVL89:
 1297              	#NO_APP
 1298 0508 233CF4FA 		sd	a5,-72(s0)
GAS LISTING /tmp/ccxxb8xC.s 			page 35


 156:src/../h/Riscv.hpp **** }
 1299              		.loc 2 156 5 is_stmt 1
 156:src/../h/Riscv.hpp **** }
 1300              		.loc 2 156 12 is_stmt 0
 1301 050c 033984FB 		ld	s2,-72(s0)
 1302              	.LVL90:
 1303              	.LBE145:
 1304              	.LBE144:
 211:src/Riscv.cpp ****                 PCB::running->setTimeToSleep(time);
 1305              		.loc 1 211 17 is_stmt 1
 211:src/Riscv.cpp ****                 PCB::running->setTimeToSleep(time);
 1306              		.loc 1 211 39 is_stmt 0
 1307 0510 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 1307      83B70700 
 1308 0518 23B00700 		sd	zero,0(a5)
 212:src/Riscv.cpp ****                 SleepPCBList::insertSleepingPCB();
 1309              		.loc 1 212 17 is_stmt 1
 212:src/Riscv.cpp ****                 SleepPCBList::insertSleepingPCB();
 1310              		.loc 1 212 45 is_stmt 0
 1311 051c 97070000 		la	a5,_ZN3PCB7runningE
 1311      83B70700 
 1312 0524 83B70700 		ld	a5,0(a5)
 1313              	.LVL91:
 1314              	.LBB146:
 1315              	.LBB147:
  36:src/../h/PCB.hpp ****     void setTimeToSleep(uint64 time) {timeToSleep = time;}
 1316              		.loc 3 36 39 is_stmt 1
 1317              		.loc 3 36 51 is_stmt 0
 1318 0528 23B8E700 		sd	a4,16(a5)
 1319              	.LVL92:
 1320              	.LBE147:
 1321              	.LBE146:
 213:src/Riscv.cpp ****                 PCB::dispatch();
 1322              		.loc 1 213 17 is_stmt 1
 213:src/Riscv.cpp ****                 PCB::dispatch();
 1323              		.loc 1 213 48 is_stmt 0
 1324 052c 97000000 		call	_ZN12SleepPCBList17insertSleepingPCBEv@plt
 1324      E7800000 
 1325              	.LVL93:
 214:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1326              		.loc 1 214 17 is_stmt 1
 214:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1327              		.loc 1 214 30 is_stmt 0
 1328 0534 97000000 		call	_ZN3PCB8dispatchEv@plt
 1328      E7800000 
 1329              	.LVL94:
 215:src/Riscv.cpp ****                 //todo
 1330              		.loc 1 215 17 is_stmt 1
 1331              	.LBB148:
 1332              	.LBB149:
 160:src/../h/Riscv.hpp **** }
 1333              		.loc 2 160 5
 160:src/../h/Riscv.hpp **** }
 1334              		.loc 2 160 57 is_stmt 0
 1335              	#APP
 1336              	# 160 "src/../h/Riscv.hpp" 1
 1337              		csrw sstatus, s2
GAS LISTING /tmp/ccxxb8xC.s 			page 36


 1338              	# 0 "" 2
 1339              	.LVL95:
 1340              	#NO_APP
 1341              	.LBE149:
 1342              	.LBE148:
 218:src/Riscv.cpp ****             }
 1343              		.loc 1 218 17 is_stmt 1
 218:src/Riscv.cpp ****             }
 1344              		.loc 1 218 47 is_stmt 0
 1345              	#APP
 1346              	# 218 "src/Riscv.cpp" 1
 1347              		li a0, 0x0
 1348              	# 0 "" 2
 1349              	#NO_APP
 1350              	.LBE143:
 1351 0544 6FF0DFEC 		j	.L28
 1352              	.LVL96:
 1353              	.L55:
 1354              	.LBB150:
 1355              	.LBB137:
 222:src/Riscv.cpp ****                 KSemaphore** semaphoreHandle;
 1356              		.loc 1 222 17 is_stmt 1
 223:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(semaphoreHandle));
 1357              		.loc 1 223 17
 224:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(val));
 1358              		.loc 1 224 17
 224:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(val));
 1359              		.loc 1 224 70 is_stmt 0
 1360              	#APP
 1361              	# 224 "src/Riscv.cpp" 1
 1362              		mv s3, a1
 1363              	# 0 "" 2
 1364              	.LVL97:
 225:src/Riscv.cpp **** 
 1365              		.loc 1 225 17 is_stmt 1
 225:src/Riscv.cpp **** 
 1366              		.loc 1 225 58 is_stmt 0
 1367              	# 225 "src/Riscv.cpp" 1
 1368              		mv s4, a2
 1369              	# 0 "" 2
 1370              	.LVL98:
 227:src/Riscv.cpp **** 
 1371              		.loc 1 227 17 is_stmt 1
 227:src/Riscv.cpp **** 
 1372              		.loc 1 227 56 is_stmt 0
 1373              	#NO_APP
 1374 0550 13058001 		li	a0,24
 1375 0554 97000000 		call	_ZN10KSemaphorenwEm@plt
 1375      E7800000 
 1376              	.LVL99:
 1377              	.LEHE6:
 1378 055c 13090500 		mv	s2,a0
 1379              	.LVL100:
 1380 0560 9B050A00 		sext.w	a1,s4
 1381              	.LEHB7:
 1382 0564 97000000 		call	_ZN10KSemaphoreC1Ei@plt
 1382      E7800000 
GAS LISTING /tmp/ccxxb8xC.s 			page 37


 1383              	.LVL101:
 1384              	.LEHE7:
 229:src/Riscv.cpp **** 
 1385              		.loc 1 229 17 is_stmt 1 discriminator 2
 229:src/Riscv.cpp **** 
 1386              		.loc 1 229 36 is_stmt 0 discriminator 2
 1387 056c 23B02901 		sd	s2,0(s3)
 231:src/Riscv.cpp ****                         __asm__ volatile("li a0, 0xffffffffffffffff");
 1388              		.loc 1 231 17 is_stmt 1 discriminator 2
 1389 0570 63060900 		beqz	s2,.L60
 234:src/Riscv.cpp **** 
 1390              		.loc 1 234 25
 234:src/Riscv.cpp **** 
 1391              		.loc 1 234 53 is_stmt 0
 1392              	#APP
 1393              	# 234 "src/Riscv.cpp" 1
 1394              		li a0, 0
 1395              	# 0 "" 2
 1396              	#NO_APP
 1397 0578 6FF09FE9 		j	.L28
 1398              	.L60:
 232:src/Riscv.cpp ****                 else
 1399              		.loc 1 232 25 is_stmt 1
 232:src/Riscv.cpp ****                 else
 1400              		.loc 1 232 70 is_stmt 0
 1401              	#APP
 1402              	# 232 "src/Riscv.cpp" 1
 1403              		li a0, 0xffffffffffffffff
 1404              	# 0 "" 2
 1405              	#NO_APP
 1406 0580 6FF01FE9 		j	.L28
 1407              	.LVL102:
 1408              	.L56:
 1409              	.LBE137:
 1410              	.LBB138:
 1411              	.LBB133:
 241:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(kSem));
 1412              		.loc 1 241 17 is_stmt 1
 242:src/Riscv.cpp ****                 uint64 retval = kSem->wait();
 1413              		.loc 1 242 17
 242:src/Riscv.cpp ****                 uint64 retval = kSem->wait();
 1414              		.loc 1 242 59 is_stmt 0
 1415              	#APP
 1416              	# 242 "src/Riscv.cpp" 1
 1417              		mv a0, a1
 1418              	# 0 "" 2
 1419              	.LVL103:
 243:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 1420              		.loc 1 243 17 is_stmt 1
 1421              	.LEHB8:
 243:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 1422              		.loc 1 243 43 is_stmt 0
 1423              	#NO_APP
 1424 0588 97000000 		call	_ZN10KSemaphore4waitEv@plt
 1424      E7800000 
 1425              	.LVL104:
 244:src/Riscv.cpp ****             }
GAS LISTING /tmp/ccxxb8xC.s 			page 38


 1426              		.loc 1 244 17 is_stmt 1
 244:src/Riscv.cpp ****             }
 1427              		.loc 1 244 60 is_stmt 0
 1428              	#APP
 1429              	# 244 "src/Riscv.cpp" 1
 1430              		mv a0,a0
 1431              	# 0 "" 2
 1432              	#NO_APP
 1433              	.LBE133:
 1434 0594 6FF0DFE7 		j	.L28
 1435              	.LVL105:
 1436              	.L57:
 1437              	.LBB134:
 1438              	.LBB131:
 250:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(kSem));
 1439              		.loc 1 250 17 is_stmt 1
 251:src/Riscv.cpp ****                 uint64 retval = kSem->signal();
 1440              		.loc 1 251 17
 251:src/Riscv.cpp ****                 uint64 retval = kSem->signal();
 1441              		.loc 1 251 59 is_stmt 0
 1442              	#APP
 1443              	# 251 "src/Riscv.cpp" 1
 1444              		mv a0, a1
 1445              	# 0 "" 2
 1446              	.LVL106:
 252:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 1447              		.loc 1 252 17 is_stmt 1
 252:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 1448              		.loc 1 252 45 is_stmt 0
 1449              	#NO_APP
 1450 059c 97000000 		call	_ZN10KSemaphore6signalEv@plt
 1450      E7800000 
 1451              	.LVL107:
 1452              	.LEHE8:
 253:src/Riscv.cpp ****             }
 1453              		.loc 1 253 17 is_stmt 1
 253:src/Riscv.cpp ****             }
 1454              		.loc 1 253 60 is_stmt 0
 1455              	#APP
 1456              	# 253 "src/Riscv.cpp" 1
 1457              		mv a0,a0
 1458              	# 0 "" 2
 1459              	#NO_APP
 1460              	.LBE131:
 1461 05a8 6FF09FE6 		j	.L28
 1462              	.LVL108:
 1463              	.L44:
 1464 05ac 93040500 		mv	s1,a0
 1465              	.LVL109:
 1466              	.LBE134:
 1467              	.LBE138:
 1468              	.LBE150:
 1469              	.LBE163:
 1470              	.LBE175:
 1471              	.LBE184:
 1472              	.LBB185:
 174:src/Riscv.cpp **** 
GAS LISTING /tmp/ccxxb8xC.s 			page 39


 1473              		.loc 1 174 98
 1474 05b0 13850900 		mv	a0,s3
 1475 05b4 97000000 		call	_ZN3PCBdlEPv@plt
 1475      E7800000 
 1476              	.LVL110:
 1477 05bc 13850400 		mv	a0,s1
 1478              	.LEHB9:
 1479 05c0 97000000 		call	_Unwind_Resume@plt
 1479      E7800000 
 1480              	.LVL111:
 1481              	.LEHE9:
 1482              	.L45:
 1483 05c8 93040500 		mv	s1,a0
 1484              	.LVL112:
 1485              	.LBE185:
 1486              	.LBB186:
 1487              	.LBB176:
 1488              	.LBB164:
 1489              	.LBB151:
 1490              	.LBB139:
 227:src/Riscv.cpp **** 
 1491              		.loc 1 227 56
 1492 05cc 13050900 		mv	a0,s2
 1493 05d0 97000000 		call	_ZN10KSemaphoredlEPv@plt
 1493      E7800000 
 1494              	.LVL113:
 1495 05d8 13850400 		mv	a0,s1
 1496              	.LEHB10:
 1497 05dc 97000000 		call	_Unwind_Resume@plt
 1497      E7800000 
 1498              	.LVL114:
 1499              	.LEHE10:
 1500              	.LBE139:
 1501              	.LBE151:
 1502              	.LBE164:
 1503              	.LBE176:
 1504              	.LBE186:
 1505              	.LBE195:
 1506              	.LBE205:
 1507              	.LBE217:
 1508              	.LBE227:
 1509              	.LBE237:
 1510              		.cfi_endproc
 1511              	.LFE28:
 1512              		.section	.gcc_except_table
 1513              	.LLSDA28:
 1514 0038 FF       		.byte	0xff
 1515 0039 FF       		.byte	0xff
 1516 003a 03       		.byte	0x3
 1517 003b 5B       		.byte	0x5b
 1518 003c 00000000 		.4byte	.LEHB4-.LFB28
 1519 0040 00000000 		.4byte	.LEHE4-.LEHB4
 1520 0044 00000000 		.4byte	0
 1521 0048 00       		.byte	0
 1522 0049 00000000 		.4byte	.LEHB5-.LFB28
 1523 004d 00000000 		.4byte	.LEHE5-.LEHB5
 1524 0051 00000000 		.4byte	.L44-.LFB28
GAS LISTING /tmp/ccxxb8xC.s 			page 40


 1525 0055 00       		.byte	0
 1526 0056 00000000 		.4byte	.LEHB6-.LFB28
 1527 005a 00000000 		.4byte	.LEHE6-.LEHB6
 1528 005e 00000000 		.4byte	0
 1529 0062 00       		.byte	0
 1530 0063 00000000 		.4byte	.LEHB7-.LFB28
 1531 0067 00000000 		.4byte	.LEHE7-.LEHB7
 1532 006b 00000000 		.4byte	.L45-.LFB28
 1533 006f 00       		.byte	0
 1534 0070 00000000 		.4byte	.LEHB8-.LFB28
 1535 0074 00000000 		.4byte	.LEHE8-.LEHB8
 1536 0078 00000000 		.4byte	0
 1537 007c 00       		.byte	0
 1538 007d 00000000 		.4byte	.LEHB9-.LFB28
 1539 0081 00000000 		.4byte	.LEHE9-.LEHB9
 1540 0085 00000000 		.4byte	0
 1541 0089 00       		.byte	0
 1542 008a 00000000 		.4byte	.LEHB10-.LFB28
 1543 008e 00000000 		.4byte	.LEHE10-.LEHB10
 1544 0092 00000000 		.4byte	0
 1545 0096 00       		.byte	0
 1546              		.text
 1548              		.section	.rodata
 1549              		.align	3
 1550              		.set	.LANCHOR0,. + 0
 1553              	_ZZN5Riscv12printIntegerEmE6digits:
 1554 0000 30313233 		.string	"0123456789"
 1554      34353637 
 1554      383900
 1555              		.bss
 1556              		.align	3
 1557              		.set	.LANCHOR1,. + 0
 1560              	_ZZN5Riscv20handleSupervisorTrapEvE13sumInterrupts:
 1561 0000 00000000 		.zero	8
 1561      00000000 
 1562              		.text
 1563              	.Letext0:
 1564              		.file 4 "src/../h/../lib/hw.h"
 1565              		.file 5 "src/../h/Queue.hpp"
 1566              		.file 6 "src/../h/Scheduler.hpp"
 1567              		.file 7 "src/../h/KSemaphore.hpp"
 1568              		.file 8 "src/../h/syscall_cpp.hpp"
 1569              		.file 9 "src/../h/SleepPCBList.hpp"
 1570              		.file 10 "src/../h/MemoryAllocator.hpp"
 1571              		.file 11 "src/../lib/console.h"
 6595              		.align	3
 6598              	DW.ref.__gxx_personality_v0:
 6599 0000 00000000 		.dword	__gxx_personality_v0
 6599      00000000 
 6600              		.ident	"GCC: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0"
 6601              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/ccxxb8xC.s 			page 41


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Riscv.cpp
     /tmp/ccxxb8xC.s:9      .text:0000000000000000 _ZN5Riscv10initSystemEv
     /tmp/ccxxb8xC.s:13     .text:0000000000000000 .L0 
     /tmp/ccxxb8xC.s:6598   .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/ccxxb8xC.s:16     .text:0000000000000000 .L0 
     /tmp/ccxxb8xC.s:17     .text:0000000000000004 .L0 
     /tmp/ccxxb8xC.s:22     .text:0000000000000014 .L0 
     /tmp/ccxxb8xC.s:23     .text:0000000000000014 .L0 
     /tmp/ccxxb8xC.s:24     .text:0000000000000014 .L0 
     /tmp/ccxxb8xC.s:25     .text:0000000000000014 .L0 
     /tmp/ccxxb8xC.s:27     .text:0000000000000018 .L0 
     /tmp/ccxxb8xC.s:29     .text:0000000000000018 .L0 
     /tmp/ccxxb8xC.s:30     .text:0000000000000018 .L0 
     /tmp/ccxxb8xC.s:36     .text:0000000000000020 .L0 
  src/../h/Riscv.hpp:114    .text:0000000000000020 .L0 
     /tmp/ccxxb8xC.s:46     .text:0000000000000024 .L0 
     /tmp/ccxxb8xC.s:47     .text:0000000000000024 .L0 
     /tmp/ccxxb8xC.s:60     .text:0000000000000044 .L0 
     /tmp/ccxxb8xC.s:61     .text:0000000000000044 .L0 
     /tmp/ccxxb8xC.s:66     .text:0000000000000050 .L0 
     /tmp/ccxxb8xC.s:67     .text:0000000000000050 .L0 
     /tmp/ccxxb8xC.s:71     .text:0000000000000058 .L0 
     /tmp/ccxxb8xC.s:78     .text:0000000000000064 .L0 
     /tmp/ccxxb8xC.s:79     .text:0000000000000064 .L0 
     /tmp/ccxxb8xC.s:80     .text:0000000000000064 .L0 
     /tmp/ccxxb8xC.s:86     .text:000000000000006c .L0 
     /tmp/ccxxb8xC.s:87     .text:0000000000000070 .L0 
     /tmp/ccxxb8xC.s:88     .text:0000000000000070 .L0 
     /tmp/ccxxb8xC.s:90     .text:0000000000000074 .L0 
     /tmp/ccxxb8xC.s:91     .text:0000000000000074 .L0 
     /tmp/ccxxb8xC.s:93     .text:0000000000000078 .L0 
     /tmp/ccxxb8xC.s:96     .text:000000000000007c .L0 
     /tmp/ccxxb8xC.s:98     .text:0000000000000080 .L0 
     /tmp/ccxxb8xC.s:101    .text:0000000000000084 .L0 
     /tmp/ccxxb8xC.s:104    .text:0000000000000088 .L0 
     /tmp/ccxxb8xC.s:112    .text:00000000000000a0 .L0 
     /tmp/ccxxb8xC.s:142    .text:00000000000000a0 _ZN5Riscv16enableInterruptsEv
     /tmp/ccxxb8xC.s:145    .text:00000000000000a0 .L0 
     /tmp/ccxxb8xC.s:146    .text:00000000000000a0 .L0 
     /tmp/ccxxb8xC.s:147    .text:00000000000000a4 .L0 
     /tmp/ccxxb8xC.s:149    .text:00000000000000a8 .L0 
     /tmp/ccxxb8xC.s:151    .text:00000000000000ac .L0 
     /tmp/ccxxb8xC.s:156    .text:00000000000000ac .L0 
     /tmp/ccxxb8xC.s:157    .text:00000000000000ac .L0 
     /tmp/ccxxb8xC.s:158    .text:00000000000000ac .L0 
     /tmp/ccxxb8xC.s:168    .text:00000000000000b4 .L0 
     /tmp/ccxxb8xC.s:169    .text:00000000000000b8 .L0 
     /tmp/ccxxb8xC.s:170    .text:00000000000000b8 .L0 
     /tmp/ccxxb8xC.s:172    .text:00000000000000bc .L0 
     /tmp/ccxxb8xC.s:174    .text:00000000000000c0 .L0 
     /tmp/ccxxb8xC.s:180    .text:00000000000000c0 _ZN5Riscv17disableInterruptsEv
     /tmp/ccxxb8xC.s:183    .text:00000000000000c0 .L0 
     /tmp/ccxxb8xC.s:184    .text:00000000000000c0 .L0 
     /tmp/ccxxb8xC.s:185    .text:00000000000000c4 .L0 
     /tmp/ccxxb8xC.s:187    .text:00000000000000c8 .L0 
     /tmp/ccxxb8xC.s:189    .text:00000000000000cc .L0 
GAS LISTING /tmp/ccxxb8xC.s 			page 42


     /tmp/ccxxb8xC.s:194    .text:00000000000000cc .L0 
     /tmp/ccxxb8xC.s:195    .text:00000000000000cc .L0 
     /tmp/ccxxb8xC.s:196    .text:00000000000000cc .L0 
     /tmp/ccxxb8xC.s:206    .text:00000000000000d4 .L0 
     /tmp/ccxxb8xC.s:207    .text:00000000000000d8 .L0 
     /tmp/ccxxb8xC.s:208    .text:00000000000000d8 .L0 
     /tmp/ccxxb8xC.s:210    .text:00000000000000dc .L0 
     /tmp/ccxxb8xC.s:212    .text:00000000000000e0 .L0 
     /tmp/ccxxb8xC.s:218    .text:00000000000000e0 _ZN5Riscv9endSystemEv
     /tmp/ccxxb8xC.s:221    .text:00000000000000e0 .L0 
     /tmp/ccxxb8xC.s:222    .text:00000000000000e0 .L0 
     /tmp/ccxxb8xC.s:223    .text:00000000000000e4 .L0 
     /tmp/ccxxb8xC.s:226    .text:00000000000000ec .L0 
     /tmp/ccxxb8xC.s:227    .text:00000000000000ec .L0 
     /tmp/ccxxb8xC.s:229    .text:00000000000000f0 .L0 
     /tmp/ccxxb8xC.s:231    .text:00000000000000f0 .L0 
     /tmp/ccxxb8xC.s:232    .text:00000000000000f0 .L0 
     /tmp/ccxxb8xC.s:235    .text:00000000000000f8 .L0 
     /tmp/ccxxb8xC.s:236    .text:00000000000000fc .L0 
     /tmp/ccxxb8xC.s:238    .text:0000000000000100 .L0 
     /tmp/ccxxb8xC.s:239    .text:0000000000000100 .L0 
     /tmp/ccxxb8xC.s:241    .text:0000000000000104 .L0 
     /tmp/ccxxb8xC.s:243    .text:0000000000000108 .L0 
     /tmp/ccxxb8xC.s:249    .text:0000000000000108 _ZN5Riscv10popSppSpieEv
     /tmp/ccxxb8xC.s:252    .text:0000000000000108 .L0 
     /tmp/ccxxb8xC.s:253    .text:0000000000000108 .L0 
     /tmp/ccxxb8xC.s:254    .text:000000000000010c .L0 
     /tmp/ccxxb8xC.s:256    .text:0000000000000110 .L0 
     /tmp/ccxxb8xC.s:258    .text:0000000000000114 .L0 
     /tmp/ccxxb8xC.s:260    .text:0000000000000114 .L0 
       src/Riscv.cpp:39     .text:0000000000000114 .L0 
     /tmp/ccxxb8xC.s:266    .text:0000000000000118 .L0 
       src/Riscv.cpp:40     .text:0000000000000118 .L0 
     /tmp/ccxxb8xC.s:272    .text:000000000000011c .L0 
     /tmp/ccxxb8xC.s:273    .text:0000000000000120 .L0 
     /tmp/ccxxb8xC.s:274    .text:0000000000000120 .L0 
     /tmp/ccxxb8xC.s:276    .text:0000000000000124 .L0 
     /tmp/ccxxb8xC.s:278    .text:0000000000000128 .L0 
     /tmp/ccxxb8xC.s:284    .text:0000000000000128 _ZN5Riscv11printStringEPKc
     /tmp/ccxxb8xC.s:287    .text:0000000000000128 .L0 
     /tmp/ccxxb8xC.s:289    .text:0000000000000128 .L0 
     /tmp/ccxxb8xC.s:290    .text:000000000000012c .L0 
     /tmp/ccxxb8xC.s:295    .text:000000000000013c .L0 
     /tmp/ccxxb8xC.s:296    .text:000000000000013c .L0 
     /tmp/ccxxb8xC.s:297    .text:000000000000013c .L0 
     /tmp/ccxxb8xC.s:298    .text:000000000000013c .L0 
     /tmp/ccxxb8xC.s:300    .text:0000000000000140 .L0 
     /tmp/ccxxb8xC.s:305    .text:0000000000000144 .L0 
     /tmp/ccxxb8xC.s:306    .text:0000000000000144 .L0 
     /tmp/ccxxb8xC.s:307    .text:0000000000000144 .L0 
  src/../h/Riscv.hpp:155    .text:0000000000000144 .L0 
     /tmp/ccxxb8xC.s:315    .text:000000000000014c .L0 
     /tmp/ccxxb8xC.s:316    .text:000000000000014c .L0 
     /tmp/ccxxb8xC.s:323    .text:0000000000000150 .L0 
     /tmp/ccxxb8xC.s:324    .text:0000000000000150 .L0 
     /tmp/ccxxb8xC.s:325    .text:0000000000000150 .L0 
     /tmp/ccxxb8xC.s:336    .text:0000000000000158 .L0 
GAS LISTING /tmp/ccxxb8xC.s 			page 43


     /tmp/ccxxb8xC.s:337    .text:0000000000000158 .L0 
     /tmp/ccxxb8xC.s:338    .text:0000000000000158 .L0 
     /tmp/ccxxb8xC.s:340    .text:000000000000015c .L0 
     /tmp/ccxxb8xC.s:342    .text:0000000000000160 .L0 
     /tmp/ccxxb8xC.s:343    .text:0000000000000160 .L0 
     /tmp/ccxxb8xC.s:346    .text:0000000000000168 .L0 
     /tmp/ccxxb8xC.s:347    .text:0000000000000168 .L0 
     /tmp/ccxxb8xC.s:350    .text:000000000000016c .L0 
     /tmp/ccxxb8xC.s:353    .text:0000000000000170 .L0 
     /tmp/ccxxb8xC.s:354    .text:0000000000000170 .L0 
     /tmp/ccxxb8xC.s:357    .text:0000000000000174 .L0 
     /tmp/ccxxb8xC.s:363    .text:000000000000017c .L0 
  src/../h/Riscv.hpp:146    .text:000000000000017c .L0 
     /tmp/ccxxb8xC.s:373    .text:0000000000000180 .L0 
     /tmp/ccxxb8xC.s:374    .text:0000000000000184 .L0 
     /tmp/ccxxb8xC.s:376    .text:0000000000000188 .L0 
     /tmp/ccxxb8xC.s:377    .text:0000000000000188 .L0 
     /tmp/ccxxb8xC.s:379    .text:000000000000018c .L0 
     /tmp/ccxxb8xC.s:382    .text:0000000000000190 .L0 
     /tmp/ccxxb8xC.s:384    .text:0000000000000194 .L0 
     /tmp/ccxxb8xC.s:386    .text:0000000000000198 .L0 
     /tmp/ccxxb8xC.s:392    .text:0000000000000198 _ZN5Riscv12printIntegerEm
     /tmp/ccxxb8xC.s:395    .text:0000000000000198 .L0 
     /tmp/ccxxb8xC.s:397    .text:0000000000000198 .L0 
     /tmp/ccxxb8xC.s:398    .text:000000000000019c .L0 
     /tmp/ccxxb8xC.s:403    .text:00000000000001ac .L0 
     /tmp/ccxxb8xC.s:404    .text:00000000000001ac .L0 
     /tmp/ccxxb8xC.s:405    .text:00000000000001ac .L0 
     /tmp/ccxxb8xC.s:406    .text:00000000000001ac .L0 
     /tmp/ccxxb8xC.s:408    .text:00000000000001b0 .L0 
     /tmp/ccxxb8xC.s:412    .text:00000000000001b0 .L0 
     /tmp/ccxxb8xC.s:413    .text:00000000000001b0 .L0 
     /tmp/ccxxb8xC.s:414    .text:00000000000001b0 .L0 
  src/../h/Riscv.hpp:155    .text:00000000000001b0 .L0 
     /tmp/ccxxb8xC.s:422    .text:00000000000001b8 .L0 
     /tmp/ccxxb8xC.s:423    .text:00000000000001b8 .L0 
     /tmp/ccxxb8xC.s:430    .text:00000000000001bc .L0 
     /tmp/ccxxb8xC.s:431    .text:00000000000001bc .L0 
     /tmp/ccxxb8xC.s:432    .text:00000000000001bc .L0 
     /tmp/ccxxb8xC.s:442    .text:00000000000001c4 .L0 
     /tmp/ccxxb8xC.s:443    .text:00000000000001c4 .L0 
     /tmp/ccxxb8xC.s:444    .text:00000000000001c4 .L0 
     /tmp/ccxxb8xC.s:445    .text:00000000000001c4 .L0 
     /tmp/ccxxb8xC.s:446    .text:00000000000001c4 .L0 
     /tmp/ccxxb8xC.s:447    .text:00000000000001c4 .L0 
     /tmp/ccxxb8xC.s:448    .text:00000000000001c4 .L0 
     /tmp/ccxxb8xC.s:449    .text:00000000000001c4 .L0 
     /tmp/ccxxb8xC.s:452    .text:00000000000001c8 .L0 
     /tmp/ccxxb8xC.s:453    .text:00000000000001c8 .L0 
     /tmp/ccxxb8xC.s:457    .text:00000000000001cc .L0 
     /tmp/ccxxb8xC.s:458    .text:00000000000001cc .L0 
     /tmp/ccxxb8xC.s:459    .text:00000000000001cc .L0 
     /tmp/ccxxb8xC.s:463    .text:00000000000001d4 .L0 
     /tmp/ccxxb8xC.s:469    .text:00000000000001ec .L0 
     /tmp/ccxxb8xC.s:475    .text:00000000000001fc .L0 
     /tmp/ccxxb8xC.s:477    .text:0000000000000200 .L0 
     /tmp/ccxxb8xC.s:480    .text:0000000000000204 .L0 
GAS LISTING /tmp/ccxxb8xC.s 			page 44


     /tmp/ccxxb8xC.s:485    .text:000000000000020c .L0 
     /tmp/ccxxb8xC.s:486    .text:000000000000020c .L0 
     /tmp/ccxxb8xC.s:490    .text:0000000000000214 .L0 
     /tmp/ccxxb8xC.s:491    .text:0000000000000214 .L0 
     /tmp/ccxxb8xC.s:499    .text:000000000000022c .L0 
     /tmp/ccxxb8xC.s:500    .text:000000000000022c .L0 
     /tmp/ccxxb8xC.s:504    .text:0000000000000238 .L0 
     /tmp/ccxxb8xC.s:505    .text:0000000000000238 .L0 
     /tmp/ccxxb8xC.s:508    .text:000000000000023c .L0 
     /tmp/ccxxb8xC.s:514    .text:0000000000000244 .L0 
  src/../h/Riscv.hpp:146    .text:0000000000000244 .L0 
     /tmp/ccxxb8xC.s:524    .text:0000000000000248 .L0 
     /tmp/ccxxb8xC.s:525    .text:000000000000024c .L0 
     /tmp/ccxxb8xC.s:527    .text:0000000000000250 .L0 
     /tmp/ccxxb8xC.s:528    .text:0000000000000250 .L0 
     /tmp/ccxxb8xC.s:530    .text:0000000000000254 .L0 
     /tmp/ccxxb8xC.s:532    .text:0000000000000258 .L0 
     /tmp/ccxxb8xC.s:534    .text:000000000000025c .L0 
     /tmp/ccxxb8xC.s:536    .text:0000000000000260 .L0 
     /tmp/ccxxb8xC.s:542    .text:0000000000000260 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccxxb8xC.s:545    .text:0000000000000260 .L0 
     /tmp/ccxxb8xC.s:548    .text:0000000000000260 .L0 
     /tmp/ccxxb8xC.s:549    .text:0000000000000264 .L0 
     /tmp/ccxxb8xC.s:558    .text:0000000000000284 .L0 
     /tmp/ccxxb8xC.s:559    .text:0000000000000284 .L0 
     /tmp/ccxxb8xC.s:560    .text:0000000000000284 .L0 
     /tmp/ccxxb8xC.s:561    .text:0000000000000284 .L0 
     /tmp/ccxxb8xC.s:562    .text:0000000000000284 .L0 
     /tmp/ccxxb8xC.s:563    .text:0000000000000284 .L0 
     /tmp/ccxxb8xC.s:564    .text:0000000000000284 .L0 
     /tmp/ccxxb8xC.s:565    .text:0000000000000284 .L0 
     /tmp/ccxxb8xC.s:567    .text:0000000000000288 .L0 
     /tmp/ccxxb8xC.s:569    .text:0000000000000288 .L0 
     /tmp/ccxxb8xC.s:570    .text:0000000000000288 .L0 
       src/Riscv.cpp:92     .text:0000000000000288 .L0 
     /tmp/ccxxb8xC.s:580    .text:000000000000028c .L0 
     /tmp/ccxxb8xC.s:581    .text:000000000000028c .L0 
     /tmp/ccxxb8xC.s:582    .text:000000000000028c .L0 
  src/../h/Riscv.hpp:89     .text:000000000000028c .L0 
     /tmp/ccxxb8xC.s:590    .text:0000000000000294 .L0 
     /tmp/ccxxb8xC.s:591    .text:0000000000000294 .L0 
     /tmp/ccxxb8xC.s:597    .text:0000000000000298 .L0 
     /tmp/ccxxb8xC.s:605    .text:00000000000002b0 .L0 
     /tmp/ccxxb8xC.s:609    .text:00000000000002b0 .L0 
     /tmp/ccxxb8xC.s:610    .text:00000000000002b0 .L0 
     /tmp/ccxxb8xC.s:611    .text:00000000000002b0 .L0 
     /tmp/ccxxb8xC.s:621    .text:00000000000002b8 .L0 
     /tmp/ccxxb8xC.s:622    .text:00000000000002b8 .L0 
     /tmp/ccxxb8xC.s:628    .text:00000000000002cc .L0 
     /tmp/ccxxb8xC.s:629    .text:00000000000002cc .L0 
     /tmp/ccxxb8xC.s:632    .text:00000000000002d4 .L0 
     /tmp/ccxxb8xC.s:633    .text:00000000000002d4 .L0 
     /tmp/ccxxb8xC.s:634    .text:00000000000002d4 .L0 
     /tmp/ccxxb8xC.s:640    .text:00000000000002e8 .L0 
     /tmp/ccxxb8xC.s:641    .text:00000000000002e8 .L0 
     /tmp/ccxxb8xC.s:647    .text:00000000000002f4 .L0 
     /tmp/ccxxb8xC.s:648    .text:00000000000002f4 .L0 
GAS LISTING /tmp/ccxxb8xC.s 			page 45


     /tmp/ccxxb8xC.s:653    .text:00000000000002f8 .L0 
     /tmp/ccxxb8xC.s:655    .text:00000000000002fc .L0 
     /tmp/ccxxb8xC.s:660    .text:0000000000000300 .L0 
     /tmp/ccxxb8xC.s:661    .text:0000000000000300 .L0 
     /tmp/ccxxb8xC.s:662    .text:0000000000000300 .L0 
  src/../h/Riscv.hpp:99     .text:0000000000000300 .L0 
     /tmp/ccxxb8xC.s:670    .text:0000000000000308 .L0 
     /tmp/ccxxb8xC.s:671    .text:0000000000000308 .L0 
     /tmp/ccxxb8xC.s:678    .text:000000000000030c .L0 
     /tmp/ccxxb8xC.s:679    .text:000000000000030c .L0 
     /tmp/ccxxb8xC.s:680    .text:000000000000030c .L0 
  src/../h/Riscv.hpp:155    .text:000000000000030c .L0 
     /tmp/ccxxb8xC.s:688    .text:0000000000000314 .L0 
     /tmp/ccxxb8xC.s:689    .text:0000000000000314 .L0 
     /tmp/ccxxb8xC.s:694    .text:0000000000000318 .L0 
     /tmp/ccxxb8xC.s:695    .text:0000000000000318 .L0 
     /tmp/ccxxb8xC.s:698    .text:0000000000000324 .L0 
     /tmp/ccxxb8xC.s:699    .text:0000000000000324 .L0 
     /tmp/ccxxb8xC.s:704    .text:000000000000032c .L0 
     /tmp/ccxxb8xC.s:705    .text:000000000000032c .L0 
  src/../h/Riscv.hpp:160    .text:000000000000032c .L0 
     /tmp/ccxxb8xC.s:717    .text:0000000000000330 .L0 
     /tmp/ccxxb8xC.s:718    .text:0000000000000330 .L0 
  src/../h/Riscv.hpp:104    .text:0000000000000330 .L0 
     /tmp/ccxxb8xC.s:725    .text:0000000000000334 .L0 
     /tmp/ccxxb8xC.s:734    .text:0000000000000338 .L0 
     /tmp/ccxxb8xC.s:740    .text:0000000000000340 .L0 
     /tmp/ccxxb8xC.s:741    .text:0000000000000340 .L0 
     /tmp/ccxxb8xC.s:745    .text:0000000000000348 .L0 
     /tmp/ccxxb8xC.s:746    .text:000000000000034c .L0 
     /tmp/ccxxb8xC.s:747    .text:000000000000034c .L0 
     /tmp/ccxxb8xC.s:749    .text:0000000000000350 .L0 
     /tmp/ccxxb8xC.s:750    .text:0000000000000350 .L0 
     /tmp/ccxxb8xC.s:752    .text:0000000000000354 .L0 
     /tmp/ccxxb8xC.s:754    .text:0000000000000358 .L0 
     /tmp/ccxxb8xC.s:756    .text:000000000000035c .L0 
     /tmp/ccxxb8xC.s:758    .text:0000000000000360 .L0 
     /tmp/ccxxb8xC.s:760    .text:0000000000000364 .L0 
     /tmp/ccxxb8xC.s:762    .text:0000000000000368 .L0 
     /tmp/ccxxb8xC.s:764    .text:000000000000036c .L0 
     /tmp/ccxxb8xC.s:768    .text:0000000000000370 .L0 
     /tmp/ccxxb8xC.s:772    .text:0000000000000370 .L0 
     /tmp/ccxxb8xC.s:773    .text:0000000000000370 .L0 
     /tmp/ccxxb8xC.s:774    .text:0000000000000370 .L0 
     /tmp/ccxxb8xC.s:775    .text:0000000000000370 .L0 
       src/Riscv.cpp:138    .text:0000000000000370 .L0 
     /tmp/ccxxb8xC.s:785    .text:0000000000000374 .L0 
     /tmp/ccxxb8xC.s:786    .text:0000000000000374 .L0 
     /tmp/ccxxb8xC.s:787    .text:0000000000000374 .L0 
  src/../h/Riscv.hpp:99     .text:0000000000000374 .L0 
     /tmp/ccxxb8xC.s:796    .text:000000000000037c .L0 
     /tmp/ccxxb8xC.s:797    .text:000000000000037c .L0 
     /tmp/ccxxb8xC.s:802    .text:0000000000000380 .L0 
     /tmp/ccxxb8xC.s:803    .text:0000000000000380 .L0 
     /tmp/ccxxb8xC.s:807    .text:0000000000000384 .L0 
     /tmp/ccxxb8xC.s:817    .text:000000000000038c .L0 
     /tmp/ccxxb8xC.s:829    .text:0000000000000394 .L0 
GAS LISTING /tmp/ccxxb8xC.s 			page 46


     /tmp/ccxxb8xC.s:843    .text:000000000000039c .L0 
     /tmp/ccxxb8xC.s:859    .text:00000000000003a4 .L0 
     /tmp/ccxxb8xC.s:877    .text:00000000000003ac .L0 
     /tmp/ccxxb8xC.s:897    .text:00000000000003b4 .L0 
     /tmp/ccxxb8xC.s:919    .text:00000000000003bc .L0 
     /tmp/ccxxb8xC.s:943    .text:00000000000003c4 .L0 
     /tmp/ccxxb8xC.s:969    .text:00000000000003cc .L0 
     /tmp/ccxxb8xC.s:973    .text:00000000000003d4 .L0 
     /tmp/ccxxb8xC.s:974    .text:00000000000003d4 .L0 
       src/Riscv.cpp:260    .text:00000000000003d4 .L0 
     /tmp/ccxxb8xC.s:981    .text:00000000000003d8 .L0 
     /tmp/ccxxb8xC.s:983    .text:00000000000003d8 .L0 
     /tmp/ccxxb8xC.s:985    .text:00000000000003dc .L0 
     /tmp/ccxxb8xC.s:993    .text:00000000000003f4 .L0 
       src/Riscv.cpp:264    .text:00000000000003f4 .L0 
     /tmp/ccxxb8xC.s:1014   .text:00000000000003fc .L0 
     /tmp/ccxxb8xC.s:1015   .text:00000000000003fc .L0 
       src/Riscv.cpp:146    .text:00000000000003fc .L0 
     /tmp/ccxxb8xC.s:1022   .text:0000000000000400 .L0 
     /tmp/ccxxb8xC.s:1023   .text:0000000000000400 .L0 
     /tmp/ccxxb8xC.s:1025   .text:0000000000000400 .L0 
     /tmp/ccxxb8xC.s:1030   .text:000000000000040c .L0 
       src/Riscv.cpp:149    .text:000000000000040c .L0 
     /tmp/ccxxb8xC.s:1043   .text:0000000000000410 .L0 
     /tmp/ccxxb8xC.s:1044   .text:0000000000000410 .L0 
  src/../h/Riscv.hpp:104    .text:0000000000000410 .L0 
     /tmp/ccxxb8xC.s:1051   .text:0000000000000414 .L0 
     /tmp/ccxxb8xC.s:1060   .text:0000000000000418 .L0 
     /tmp/ccxxb8xC.s:1061   .text:0000000000000418 .L0 
       src/Riscv.cpp:154    .text:0000000000000418 .L0 
     /tmp/ccxxb8xC.s:1068   .text:000000000000041c .L0 
     /tmp/ccxxb8xC.s:1070   .text:000000000000041c .L0 
     /tmp/ccxxb8xC.s:1073   .text:0000000000000424 .L0 
       src/Riscv.cpp:156    .text:0000000000000424 .L0 
     /tmp/ccxxb8xC.s:1086   .text:000000000000042c .L0 
     /tmp/ccxxb8xC.s:1087   .text:000000000000042c .L0 
     /tmp/ccxxb8xC.s:1088   .text:000000000000042c .L0 
     /tmp/ccxxb8xC.s:1089   .text:000000000000042c .L0 
       src/Riscv.cpp:164    .text:000000000000042c .L0 
     /tmp/ccxxb8xC.s:1096   .text:0000000000000430 .L0 
       src/Riscv.cpp:165    .text:0000000000000430 .L0 
     /tmp/ccxxb8xC.s:1102   .text:0000000000000434 .L0 
       src/Riscv.cpp:166    .text:0000000000000434 .L0 
     /tmp/ccxxb8xC.s:1108   .text:0000000000000438 .L0 
     /tmp/ccxxb8xC.s:1110   .text:0000000000000438 .L0 
     /tmp/ccxxb8xC.s:1124   .text:0000000000000460 .L0 
     /tmp/ccxxb8xC.s:1125   .text:0000000000000460 .L0 
     /tmp/ccxxb8xC.s:1127   .text:0000000000000464 .L0 
     /tmp/ccxxb8xC.s:1129   .text:0000000000000468 .L0 
       src/Riscv.cpp:181    .text:0000000000000468 .L0 
     /tmp/ccxxb8xC.s:1138   .text:0000000000000470 .L0 
       src/Riscv.cpp:179    .text:0000000000000470 .L0 
     /tmp/ccxxb8xC.s:1153   .text:0000000000000478 .L0 
     /tmp/ccxxb8xC.s:1154   .text:0000000000000478 .L0 
     /tmp/ccxxb8xC.s:1155   .text:0000000000000478 .L0 
  src/../h/Riscv.hpp:155    .text:0000000000000478 .L0 
     /tmp/ccxxb8xC.s:1164   .text:0000000000000480 .L0 
GAS LISTING /tmp/ccxxb8xC.s 			page 47


     /tmp/ccxxb8xC.s:1165   .text:0000000000000480 .L0 
     /tmp/ccxxb8xC.s:1170   .text:0000000000000484 .L0 
     /tmp/ccxxb8xC.s:1171   .text:0000000000000484 .L0 
     /tmp/ccxxb8xC.s:1175   .text:0000000000000490 .L0 
     /tmp/ccxxb8xC.s:1176   .text:0000000000000490 .L0 
     /tmp/ccxxb8xC.s:1181   .text:0000000000000498 .L0 
     /tmp/ccxxb8xC.s:1182   .text:0000000000000498 .L0 
  src/../h/Riscv.hpp:160    .text:0000000000000498 .L0 
     /tmp/ccxxb8xC.s:1189   .text:000000000000049c .L0 
     /tmp/ccxxb8xC.s:1198   .text:00000000000004a0 .L0 
     /tmp/ccxxb8xC.s:1199   .text:00000000000004a0 .L0 
     /tmp/ccxxb8xC.s:1203   .text:00000000000004ac .L0 
     /tmp/ccxxb8xC.s:1207   .text:00000000000004b0 .L0 
     /tmp/ccxxb8xC.s:1208   .text:00000000000004b0 .L0 
     /tmp/ccxxb8xC.s:1209   .text:00000000000004b0 .L0 
  src/../h/Riscv.hpp:155    .text:00000000000004b0 .L0 
     /tmp/ccxxb8xC.s:1217   .text:00000000000004b8 .L0 
     /tmp/ccxxb8xC.s:1218   .text:00000000000004b8 .L0 
     /tmp/ccxxb8xC.s:1223   .text:00000000000004bc .L0 
     /tmp/ccxxb8xC.s:1224   .text:00000000000004bc .L0 
     /tmp/ccxxb8xC.s:1227   .text:00000000000004c8 .L0 
     /tmp/ccxxb8xC.s:1228   .text:00000000000004c8 .L0 
     /tmp/ccxxb8xC.s:1236   .text:00000000000004e0 .L0 
     /tmp/ccxxb8xC.s:1237   .text:00000000000004e0 .L0 
     /tmp/ccxxb8xC.s:1238   .text:00000000000004e0 .L0 
     /tmp/ccxxb8xC.s:1244   .text:00000000000004e8 .L0 
     /tmp/ccxxb8xC.s:1245   .text:00000000000004e8 .L0 
     /tmp/ccxxb8xC.s:1250   .text:00000000000004f0 .L0 
     /tmp/ccxxb8xC.s:1251   .text:00000000000004f0 .L0 
  src/../h/Riscv.hpp:160    .text:00000000000004f0 .L0 
     /tmp/ccxxb8xC.s:1258   .text:00000000000004f4 .L0 
     /tmp/ccxxb8xC.s:1264   .text:00000000000004f8 .L0 
       src/Riscv.cpp:194    .text:00000000000004f8 .L0 
     /tmp/ccxxb8xC.s:1271   .text:00000000000004fc .L0 
     /tmp/ccxxb8xC.s:1278   .text:0000000000000500 .L0 
     /tmp/ccxxb8xC.s:1279   .text:0000000000000500 .L0 
       src/Riscv.cpp:209    .text:0000000000000500 .L0 
     /tmp/ccxxb8xC.s:1289   .text:0000000000000504 .L0 
     /tmp/ccxxb8xC.s:1290   .text:0000000000000504 .L0 
     /tmp/ccxxb8xC.s:1291   .text:0000000000000504 .L0 
  src/../h/Riscv.hpp:155    .text:0000000000000504 .L0 
     /tmp/ccxxb8xC.s:1300   .text:000000000000050c .L0 
     /tmp/ccxxb8xC.s:1301   .text:000000000000050c .L0 
     /tmp/ccxxb8xC.s:1306   .text:0000000000000510 .L0 
     /tmp/ccxxb8xC.s:1307   .text:0000000000000510 .L0 
     /tmp/ccxxb8xC.s:1310   .text:000000000000051c .L0 
     /tmp/ccxxb8xC.s:1311   .text:000000000000051c .L0 
     /tmp/ccxxb8xC.s:1317   .text:0000000000000528 .L0 
     /tmp/ccxxb8xC.s:1318   .text:0000000000000528 .L0 
     /tmp/ccxxb8xC.s:1323   .text:000000000000052c .L0 
     /tmp/ccxxb8xC.s:1324   .text:000000000000052c .L0 
     /tmp/ccxxb8xC.s:1327   .text:0000000000000534 .L0 
     /tmp/ccxxb8xC.s:1328   .text:0000000000000534 .L0 
     /tmp/ccxxb8xC.s:1333   .text:000000000000053c .L0 
     /tmp/ccxxb8xC.s:1334   .text:000000000000053c .L0 
  src/../h/Riscv.hpp:160    .text:000000000000053c .L0 
     /tmp/ccxxb8xC.s:1344   .text:0000000000000540 .L0 
GAS LISTING /tmp/ccxxb8xC.s 			page 48


       src/Riscv.cpp:218    .text:0000000000000540 .L0 
     /tmp/ccxxb8xC.s:1357   .text:0000000000000548 .L0 
     /tmp/ccxxb8xC.s:1358   .text:0000000000000548 .L0 
     /tmp/ccxxb8xC.s:1359   .text:0000000000000548 .L0 
       src/Riscv.cpp:224    .text:0000000000000548 .L0 
     /tmp/ccxxb8xC.s:1366   .text:000000000000054c .L0 
       src/Riscv.cpp:225    .text:000000000000054c .L0 
     /tmp/ccxxb8xC.s:1372   .text:0000000000000550 .L0 
     /tmp/ccxxb8xC.s:1374   .text:0000000000000550 .L0 
     /tmp/ccxxb8xC.s:1386   .text:000000000000056c .L0 
     /tmp/ccxxb8xC.s:1387   .text:000000000000056c .L0 
     /tmp/ccxxb8xC.s:1389   .text:0000000000000570 .L0 
     /tmp/ccxxb8xC.s:1391   .text:0000000000000574 .L0 
       src/Riscv.cpp:234    .text:0000000000000574 .L0 
     /tmp/ccxxb8xC.s:1400   .text:000000000000057c .L0 
       src/Riscv.cpp:232    .text:000000000000057c .L0 
     /tmp/ccxxb8xC.s:1413   .text:0000000000000584 .L0 
     /tmp/ccxxb8xC.s:1414   .text:0000000000000584 .L0 
       src/Riscv.cpp:242    .text:0000000000000584 .L0 
     /tmp/ccxxb8xC.s:1422   .text:0000000000000588 .L0 
     /tmp/ccxxb8xC.s:1424   .text:0000000000000588 .L0 
     /tmp/ccxxb8xC.s:1427   .text:0000000000000590 .L0 
       src/Riscv.cpp:244    .text:0000000000000590 .L0 
     /tmp/ccxxb8xC.s:1440   .text:0000000000000598 .L0 
     /tmp/ccxxb8xC.s:1441   .text:0000000000000598 .L0 
       src/Riscv.cpp:251    .text:0000000000000598 .L0 
     /tmp/ccxxb8xC.s:1448   .text:000000000000059c .L0 
     /tmp/ccxxb8xC.s:1450   .text:000000000000059c .L0 
     /tmp/ccxxb8xC.s:1454   .text:00000000000005a4 .L0 
       src/Riscv.cpp:253    .text:00000000000005a4 .L0 
     /tmp/ccxxb8xC.s:1474   .text:00000000000005b0 .L0 
     /tmp/ccxxb8xC.s:1492   .text:00000000000005cc .L0 
     /tmp/ccxxb8xC.s:1510   .text:00000000000005e4 .L0 
     /tmp/ccxxb8xC.s:1550   .rodata:0000000000000000 .LANCHOR0
     /tmp/ccxxb8xC.s:1553   .rodata:0000000000000000 _ZZN5Riscv12printIntegerEmE6digits
     /tmp/ccxxb8xC.s:1557   .bss:0000000000000000 .LANCHOR1
     /tmp/ccxxb8xC.s:1560   .bss:0000000000000000 _ZZN5Riscv20handleSupervisorTrapEvE13sumInterrupts
     /tmp/ccxxb8xC.s:1572   .text:00000000000005e4 .L0 
     /tmp/ccxxb8xC.s:30     .text:0000000000000018 .L0 
     /tmp/ccxxb8xC.s:71     .text:0000000000000058 .L0 
     /tmp/ccxxb8xC.s:465    .text:00000000000001dc .L0 
     /tmp/ccxxb8xC.s:622    .text:00000000000002b8 .L0 
     /tmp/ccxxb8xC.s:634    .text:00000000000002d4 .L0 
     /tmp/ccxxb8xC.s:641    .text:00000000000002e8 .L0 
     /tmp/ccxxb8xC.s:695    .text:0000000000000318 .L0 
     /tmp/ccxxb8xC.s:1171   .text:0000000000000484 .L0 
     /tmp/ccxxb8xC.s:1199   .text:00000000000004a0 .L0 
     /tmp/ccxxb8xC.s:1224   .text:00000000000004bc .L0 
     /tmp/ccxxb8xC.s:1228   .text:00000000000004c8 .L0 
     /tmp/ccxxb8xC.s:1230   .text:00000000000004d4 .L0 
     /tmp/ccxxb8xC.s:1307   .text:0000000000000510 .L0 
     /tmp/ccxxb8xC.s:1311   .text:000000000000051c .L0 
     /tmp/ccxxb8xC.s:351    .text:0000000000000170 .L15
     /tmp/ccxxb8xC.s:332    .text:0000000000000158 .L16
     /tmp/ccxxb8xC.s:455    .text:00000000000001cc .L19
     /tmp/ccxxb8xC.s:497    .text:000000000000022c .L20
     /tmp/ccxxb8xC.s:483    .text:000000000000020c .L21
GAS LISTING /tmp/ccxxb8xC.s 			page 49


     /tmp/ccxxb8xC.s:727    .text:0000000000000338 .L47
     /tmp/ccxxb8xC.s:737    .text:0000000000000340 .L26
     /tmp/ccxxb8xC.s:767    .text:0000000000000370 .L48
     /tmp/ccxxb8xC.s:1002   .text:00000000000003fc .L49
     /tmp/ccxxb8xC.s:1053   .text:0000000000000418 .L50
     /tmp/ccxxb8xC.s:1082   .text:000000000000042c .L51
     /tmp/ccxxb8xC.s:1146   .text:0000000000000478 .L52
     /tmp/ccxxb8xC.s:1191   .text:00000000000004a0 .L53
     /tmp/ccxxb8xC.s:1273   .text:0000000000000500 .L54
     /tmp/ccxxb8xC.s:1353   .text:0000000000000548 .L55
     /tmp/ccxxb8xC.s:1408   .text:0000000000000584 .L56
     /tmp/ccxxb8xC.s:1436   .text:0000000000000598 .L57
     /tmp/ccxxb8xC.s:1037   .text:0000000000000410 .L28
     /tmp/ccxxb8xC.s:991    .text:00000000000003f4 .L41
     /tmp/ccxxb8xC.s:743    .text:0000000000000348 .L23
     /tmp/ccxxb8xC.s:1136   .text:0000000000000470 .L58
     /tmp/ccxxb8xC.s:1260   .text:00000000000004f8 .L59
     /tmp/ccxxb8xC.s:1398   .text:000000000000057c .L60
     /tmp/ccxxb8xC.s:48     .text:0000000000000028 .LEHB0
     /tmp/ccxxb8xC.s:10     .text:0000000000000000 .LFB21
     /tmp/ccxxb8xC.s:51     .text:0000000000000030 .LEHE0
     /tmp/ccxxb8xC.s:55     .text:000000000000003c .LEHB1
     /tmp/ccxxb8xC.s:58     .text:0000000000000044 .LEHE1
     /tmp/ccxxb8xC.s:100    .text:0000000000000084 .L3
     /tmp/ccxxb8xC.s:62     .text:0000000000000048 .LEHB2
     /tmp/ccxxb8xC.s:69     .text:0000000000000058 .LEHE2
     /tmp/ccxxb8xC.s:108    .text:0000000000000098 .LEHB3
     /tmp/ccxxb8xC.s:111    .text:00000000000000a0 .LEHE3
     /tmp/ccxxb8xC.s:627    .text:00000000000002cc .LEHB4
     /tmp/ccxxb8xC.s:543    .text:0000000000000260 .LFB28
     /tmp/ccxxb8xC.s:1113   .text:0000000000000444 .LEHE4
     /tmp/ccxxb8xC.s:1119   .text:0000000000000458 .LEHB5
     /tmp/ccxxb8xC.s:1122   .text:0000000000000460 .LEHE5
     /tmp/ccxxb8xC.s:1463   .text:00000000000005ac .L44
     /tmp/ccxxb8xC.s:1174   .text:0000000000000490 .LEHB6
     /tmp/ccxxb8xC.s:1377   .text:000000000000055c .LEHE6
     /tmp/ccxxb8xC.s:1381   .text:0000000000000564 .LEHB7
     /tmp/ccxxb8xC.s:1384   .text:000000000000056c .LEHE7
     /tmp/ccxxb8xC.s:1482   .text:00000000000005c8 .L45
     /tmp/ccxxb8xC.s:1421   .text:0000000000000588 .LEHB8
     /tmp/ccxxb8xC.s:1452   .text:00000000000005a4 .LEHE8
     /tmp/ccxxb8xC.s:1478   .text:00000000000005c0 .LEHB9
     /tmp/ccxxb8xC.s:1481   .text:00000000000005c8 .LEHE9
     /tmp/ccxxb8xC.s:1496   .text:00000000000005dc .LEHB10
     /tmp/ccxxb8xC.s:1499   .text:00000000000005e4 .LEHE10
     /tmp/ccxxb8xC.s:4276   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccxxb8xC.s:6342   .debug_str:000000000000079d .LASF240
     /tmp/ccxxb8xC.s:6180   .debug_str:00000000000002e8 .LASF241
     /tmp/ccxxb8xC.s:6494   .debug_str:0000000000000c1a .LASF242
     /tmp/ccxxb8xC.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccxxb8xC.s:1563   .text:00000000000005e4 .Letext0
     /tmp/ccxxb8xC.s:6090   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccxxb8xC.s:6272   .debug_str:0000000000000595 .LASF0
     /tmp/ccxxb8xC.s:6404   .debug_str:00000000000009cf .LASF3
     /tmp/ccxxb8xC.s:6308   .debug_str:0000000000000688 .LASF1
     /tmp/ccxxb8xC.s:6414   .debug_str:00000000000009fd .LASF2
     /tmp/ccxxb8xC.s:6430   .debug_str:0000000000000a81 .LASF4
GAS LISTING /tmp/ccxxb8xC.s 			page 50


     /tmp/ccxxb8xC.s:6290   .debug_str:0000000000000606 .LASF5
     /tmp/ccxxb8xC.s:6110   .debug_str:0000000000000086 .LASF6
     /tmp/ccxxb8xC.s:6388   .debug_str:000000000000096a .LASF7
     /tmp/ccxxb8xC.s:6378   .debug_str:0000000000000928 .LASF8
     /tmp/ccxxb8xC.s:6298   .debug_str:000000000000064f .LASF9
     /tmp/ccxxb8xC.s:6246   .debug_str:00000000000004c7 .LASF10
     /tmp/ccxxb8xC.s:6254   .debug_str:0000000000000517 .LASF11
     /tmp/ccxxb8xC.s:6168   .debug_str:00000000000002a4 .LASF12
     /tmp/ccxxb8xC.s:6232   .debug_str:0000000000000468 .LASF13
     /tmp/ccxxb8xC.s:6182   .debug_str:00000000000002f6 .LASF14
     /tmp/ccxxb8xC.s:6166   .debug_str:0000000000000294 .LASF15
     /tmp/ccxxb8xC.s:6464   .debug_str:0000000000000b78 .LASF16
     /tmp/ccxxb8xC.s:6216   .debug_str:00000000000003d7 .LASF17
     /tmp/ccxxb8xC.s:6454   .debug_str:0000000000000b31 .LASF18
     /tmp/ccxxb8xC.s:6526   .debug_str:0000000000000cdd .LASF91
     /tmp/ccxxb8xC.s:6400   .debug_str:00000000000009b9 .LASF22
     /tmp/ccxxb8xC.s:6316   .debug_str:00000000000006bd .LASF19
     /tmp/ccxxb8xC.s:6222   .debug_str:0000000000000421 .LASF20
     /tmp/ccxxb8xC.s:6544   .debug_str:0000000000000d42 .LASF21
     /tmp/ccxxb8xC.s:6516   .debug_str:0000000000000ca7 .LASF23
     /tmp/ccxxb8xC.s:6224   .debug_str:000000000000042a .LASF24
     /tmp/ccxxb8xC.s:6482   .debug_str:0000000000000bc4 .LASF25
     /tmp/ccxxb8xC.s:6198   .debug_str:0000000000000368 .LASF26
     /tmp/ccxxb8xC.s:6348   .debug_str:0000000000000859 .LASF27
     /tmp/ccxxb8xC.s:6336   .debug_str:000000000000075f .LASF29
     /tmp/ccxxb8xC.s:6214   .debug_str:00000000000003cd .LASF28
     /tmp/ccxxb8xC.s:6104   .debug_str:0000000000000060 .LASF30
     /tmp/ccxxb8xC.s:6164   .debug_str:0000000000000283 .LASF31
     /tmp/ccxxb8xC.s:6320   .debug_str:00000000000006cb .LASF32
     /tmp/ccxxb8xC.s:6286   .debug_str:00000000000005e7 .LASF33
     /tmp/ccxxb8xC.s:6188   .debug_str:0000000000000329 .LASF34
     /tmp/ccxxb8xC.s:6554   .debug_str:0000000000000d7d .LASF35
     /tmp/ccxxb8xC.s:6126   .debug_str:0000000000000127 .LASF37
     /tmp/ccxxb8xC.s:6386   .debug_str:000000000000095d .LASF36
     /tmp/ccxxb8xC.s:6132   .debug_str:0000000000000155 .LASF38
     /tmp/ccxxb8xC.s:6440   .debug_str:0000000000000acd .LASF39
     /tmp/ccxxb8xC.s:6220   .debug_str:0000000000000406 .LASF40
     /tmp/ccxxb8xC.s:6278   .debug_str:00000000000005b7 .LASF41
     /tmp/ccxxb8xC.s:6538   .debug_str:0000000000000d13 .LASF42
     /tmp/ccxxb8xC.s:6510   .debug_str:0000000000000c94 .LASF45
     /tmp/ccxxb8xC.s:6502   .debug_str:0000000000000c52 .LASF47
     /tmp/ccxxb8xC.s:6410   .debug_str:00000000000009e9 .LASF43
     /tmp/ccxxb8xC.s:6362   .debug_str:00000000000008b7 .LASF44
     /tmp/ccxxb8xC.s:6394   .debug_str:000000000000098b .LASF46
     /tmp/ccxxb8xC.s:6396   .debug_str:0000000000000992 .LASF48
     /tmp/ccxxb8xC.s:6358   .debug_str:000000000000089c .LASF49
     /tmp/ccxxb8xC.s:6300   .debug_str:0000000000000662 .LASF50
     /tmp/ccxxb8xC.s:6540   .debug_str:0000000000000d2d .LASF51
     /tmp/ccxxb8xC.s:6490   .debug_str:0000000000000bfc .LASF52
     /tmp/ccxxb8xC.s:6356   .debug_str:0000000000000894 .LASF53
     /tmp/ccxxb8xC.s:6360   .debug_str:00000000000008a3 .LASF54
     /tmp/ccxxb8xC.s:6344   .debug_str:000000000000083f .LASF55
     /tmp/ccxxb8xC.s:6398   .debug_str:00000000000009a5 .LASF56
     /tmp/ccxxb8xC.s:6584   .debug_str:0000000000000e55 .LASF57
     /tmp/ccxxb8xC.s:6282   .debug_str:00000000000005ca .LASF58
     /tmp/ccxxb8xC.s:6460   .debug_str:0000000000000b6a .LASF59
     /tmp/ccxxb8xC.s:6434   .debug_str:0000000000000aab .LASF60
GAS LISTING /tmp/ccxxb8xC.s 			page 51


     /tmp/ccxxb8xC.s:6436   .debug_str:0000000000000abe .LASF61
     /tmp/ccxxb8xC.s:6174   .debug_str:00000000000002c1 .LASF62
     /tmp/ccxxb8xC.s:6210   .debug_str:00000000000003b5 .LASF63
     /tmp/ccxxb8xC.s:6266   .debug_str:0000000000000565 .LASF64
     /tmp/ccxxb8xC.s:6280   .debug_str:00000000000005c4 .LASF65
     /tmp/ccxxb8xC.s:6202   .debug_str:0000000000000387 .LASF66
     /tmp/ccxxb8xC.s:6112   .debug_str:000000000000008d .LASF67
     /tmp/ccxxb8xC.s:6420   .debug_str:0000000000000a23 .LASF68
     /tmp/ccxxb8xC.s:6412   .debug_str:00000000000009f2 .LASF69
     /tmp/ccxxb8xC.s:6572   .debug_str:0000000000000df6 .LASF70
     /tmp/ccxxb8xC.s:6528   .debug_str:0000000000000ce3 .LASF71
     /tmp/ccxxb8xC.s:6550   .debug_str:0000000000000d60 .LASF72
     /tmp/ccxxb8xC.s:6522   .debug_str:0000000000000cce .LASF73
     /tmp/ccxxb8xC.s:6338   .debug_str:0000000000000777 .LASF74
     /tmp/ccxxb8xC.s:6260   .debug_str:000000000000053f .LASF75
     /tmp/ccxxb8xC.s:6268   .debug_str:0000000000000577 .LASF76
     /tmp/ccxxb8xC.s:6508   .debug_str:0000000000000c85 .LASF77
     /tmp/ccxxb8xC.s:6252   .debug_str:00000000000004fb .LASF78
     /tmp/ccxxb8xC.s:6384   .debug_str:0000000000000948 .LASF79
     /tmp/ccxxb8xC.s:6296   .debug_str:000000000000062d .LASF80
     /tmp/ccxxb8xC.s:6406   .debug_str:00000000000009d4 .LASF81
     /tmp/ccxxb8xC.s:6108   .debug_str:000000000000007e .LASF82
     /tmp/ccxxb8xC.s:6146   .debug_str:00000000000001e3 .LASF83
     /tmp/ccxxb8xC.s:6506   .debug_str:0000000000000c79 .LASF84
     /tmp/ccxxb8xC.s:6148   .debug_str:00000000000001f2 .LASF85
     /tmp/ccxxb8xC.s:6346   .debug_str:0000000000000847 .LASF86
     /tmp/ccxxb8xC.s:6256   .debug_str:0000000000000525 .LASF87
     /tmp/ccxxb8xC.s:6520   .debug_str:0000000000000cbb .LASF88
     /tmp/ccxxb8xC.s:6162   .debug_str:000000000000026f .LASF89
     /tmp/ccxxb8xC.s:6476   .debug_str:0000000000000bb1 .LASF90
     /tmp/ccxxb8xC.s:6496   .debug_str:0000000000000c3d .LASF92
     /tmp/ccxxb8xC.s:6512   .debug_str:0000000000000c9d .LASF95
     /tmp/ccxxb8xC.s:6302   .debug_str:0000000000000675 .LASF93
     /tmp/ccxxb8xC.s:6170   .debug_str:00000000000002b3 .LASF94
     /tmp/ccxxb8xC.s:6474   .debug_str:0000000000000bab .LASF96
     /tmp/ccxxb8xC.s:6318   .debug_str:00000000000006c6 .LASF97
     /tmp/ccxxb8xC.s:6558   .debug_str:0000000000000d94 .LASF116
     /tmp/ccxxb8xC.s:6128   .debug_str:0000000000000142 .LASF99
     /tmp/ccxxb8xC.s:6186   .debug_str:0000000000000317 .LASF101
     /tmp/ccxxb8xC.s:6276   .debug_str:00000000000005b2 .LASF98
     /tmp/ccxxb8xC.s:6448   .debug_str:0000000000000b06 .LASF103
     /tmp/ccxxb8xC.s:6306   .debug_str:0000000000000683 .LASF100
     /tmp/ccxxb8xC.s:6328   .debug_str:0000000000000723 .LASF102
     /tmp/ccxxb8xC.s:6208   .debug_str:00000000000003a7 .LASF104
     /tmp/ccxxb8xC.s:6552   .debug_str:0000000000000d76 .LASF105
     /tmp/ccxxb8xC.s:6142   .debug_str:00000000000001cb .LASF106
     /tmp/ccxxb8xC.s:6478   .debug_str:0000000000000bb6 .LASF107
     /tmp/ccxxb8xC.s:6160   .debug_str:0000000000000269 .LASF108
     /tmp/ccxxb8xC.s:6450   .debug_str:0000000000000b1b .LASF109
     /tmp/ccxxb8xC.s:6176   .debug_str:00000000000002d4 .LASF110
     /tmp/ccxxb8xC.s:6150   .debug_str:0000000000000205 .LASF111
     /tmp/ccxxb8xC.s:6380   .debug_str:000000000000093b .LASF112
     /tmp/ccxxb8xC.s:6304   .debug_str:000000000000067a .LASF113
     /tmp/ccxxb8xC.s:6472   .debug_str:0000000000000ba3 .LASF114
     /tmp/ccxxb8xC.s:6262   .debug_str:000000000000054a .LASF115
     /tmp/ccxxb8xC.s:6352   .debug_str:0000000000000873 .LASF117
     /tmp/ccxxb8xC.s:6368   .debug_str:00000000000008da .LASF243
GAS LISTING /tmp/ccxxb8xC.s 			page 52


     /tmp/ccxxb8xC.s:6530   .debug_str:0000000000000ced .LASF118
     /tmp/ccxxb8xC.s:6570   .debug_str:0000000000000dea .LASF119
     /tmp/ccxxb8xC.s:6564   .debug_str:0000000000000dc9 .LASF120
     /tmp/ccxxb8xC.s:6488   .debug_str:0000000000000bec .LASF121
     /tmp/ccxxb8xC.s:6204   .debug_str:0000000000000399 .LASF122
     /tmp/ccxxb8xC.s:6124   .debug_str:0000000000000114 .LASF123
     /tmp/ccxxb8xC.s:6312   .debug_str:00000000000006a4 .LASF124
     /tmp/ccxxb8xC.s:6372   .debug_str:00000000000008f2 .LASF125
     /tmp/ccxxb8xC.s:6480   .debug_str:0000000000000bbc .LASF126
     /tmp/ccxxb8xC.s:6532   .debug_str:0000000000000cf2 .LASF127
     /tmp/ccxxb8xC.s:6442   .debug_str:0000000000000adb .LASF128
     /tmp/ccxxb8xC.s:6334   .debug_str:0000000000000752 .LASF129
     /tmp/ccxxb8xC.s:6322   .debug_str:00000000000006e9 .LASF130
     /tmp/ccxxb8xC.s:6576   .debug_str:0000000000000e1e .LASF131
     /tmp/ccxxb8xC.s:6238   .debug_str:0000000000000494 .LASF132
     /tmp/ccxxb8xC.s:6274   .debug_str:00000000000005a2 .LASF133
     /tmp/ccxxb8xC.s:6288   .debug_str:00000000000005f9 .LASF134
     /tmp/ccxxb8xC.s:6446   .debug_str:0000000000000afd .LASF135
     /tmp/ccxxb8xC.s:6200   .debug_str:0000000000000374 .LASF136
     /tmp/ccxxb8xC.s:6424   .debug_str:0000000000000a47 .LASF137
     /tmp/ccxxb8xC.s:6458   .debug_str:0000000000000b4e .LASF138
     /tmp/ccxxb8xC.s:6350   .debug_str:0000000000000864 .LASF139
     /tmp/ccxxb8xC.s:6098   .debug_str:0000000000000029 .LASF140
     /tmp/ccxxb8xC.s:6548   .debug_str:0000000000000d51 .LASF141
     /tmp/ccxxb8xC.s:6376   .debug_str:000000000000090e .LASF142
     /tmp/ccxxb8xC.s:6452   .debug_str:0000000000000b23 .LASF143
     /tmp/ccxxb8xC.s:6392   .debug_str:000000000000097f .LASF144
     /tmp/ccxxb8xC.s:6094   .debug_str:000000000000000d .LASF145
     /tmp/ccxxb8xC.s:6556   .debug_str:0000000000000d89 .LASF146
     /tmp/ccxxb8xC.s:6340   .debug_str:000000000000078d .LASF147
     /tmp/ccxxb8xC.s:6438   .debug_str:0000000000000ac5 .LASF180
     /tmp/ccxxb8xC.s:6492   .debug_str:0000000000000c10 .LASF148
     /tmp/ccxxb8xC.s:6374   .debug_str:0000000000000902 .LASF149
     /tmp/ccxxb8xC.s:6192   .debug_str:000000000000034e .LASF150
     /tmp/ccxxb8xC.s:6138   .debug_str:000000000000019c .LASF152
     /tmp/ccxxb8xC.s:6136   .debug_str:0000000000000187 .LASF151
     /tmp/ccxxb8xC.s:6158   .debug_str:000000000000023d .LASF153
     /tmp/ccxxb8xC.s:6580   .debug_str:0000000000000e36 .LASF244
     /tmp/ccxxb8xC.s:6156   .debug_str:000000000000022c .LASF245
     /tmp/ccxxb8xC.s:6102   .debug_str:000000000000005b .LASF154
     /tmp/ccxxb8xC.s:6470   .debug_str:0000000000000b9e .LASF155
     /tmp/ccxxb8xC.s:6326   .debug_str:000000000000071b .LASF156
     /tmp/ccxxb8xC.s:6190   .debug_str:0000000000000348 .LASF157
     /tmp/ccxxb8xC.s:6500   .debug_str:0000000000000c4a .LASF158
     /tmp/ccxxb8xC.s:6144   .debug_str:00000000000001d9 .LASF159
     /tmp/ccxxb8xC.s:6244   .debug_str:00000000000004bd .LASF160
     /tmp/ccxxb8xC.s:6116   .debug_str:00000000000000ac .LASF246
     /tmp/ccxxb8xC.s:6566   .debug_str:0000000000000dcf .LASF247
     /tmp/ccxxb8xC.s:6292   .debug_str:0000000000000618 .LASF161
     /tmp/ccxxb8xC.s:6152   .debug_str:000000000000020e .LASF162
     /tmp/ccxxb8xC.s:6230   .debug_str:0000000000000463 .LASF163
     /tmp/ccxxb8xC.s:6234   .debug_str:0000000000000477 .LASF164
     /tmp/ccxxb8xC.s:6504   .debug_str:0000000000000c67 .LASF165
     /tmp/ccxxb8xC.s:6370   .debug_str:00000000000008df .LASF166
     /tmp/ccxxb8xC.s:6484   .debug_str:0000000000000bd1 .LASF167
     /tmp/ccxxb8xC.s:6100   .debug_str:0000000000000043 .LASF168
     /tmp/ccxxb8xC.s:6444   .debug_str:0000000000000aec .LASF169
GAS LISTING /tmp/ccxxb8xC.s 			page 53


     /tmp/ccxxb8xC.s:6184   .debug_str:0000000000000306 .LASF170
     /tmp/ccxxb8xC.s:6118   .debug_str:00000000000000c4 .LASF171
     /tmp/ccxxb8xC.s:6402   .debug_str:00000000000009c4 .LASF172
     /tmp/ccxxb8xC.s:6250   .debug_str:00000000000004e7 .LASF173
     /tmp/ccxxb8xC.s:6418   .debug_str:0000000000000a17 .LASF174
     /tmp/ccxxb8xC.s:6114   .debug_str:0000000000000098 .LASF175
     /tmp/ccxxb8xC.s:6206   .debug_str:00000000000003a2 .LASF176
     /tmp/ccxxb8xC.s:6242   .debug_str:00000000000004a6 .LASF177
     /tmp/ccxxb8xC.s:6468   .debug_str:0000000000000b97 .LASF178
     /tmp/ccxxb8xC.s:6218   .debug_str:00000000000003ed .LASF179
     /tmp/ccxxb8xC.s:6096   .debug_str:000000000000001d .LASF181
     /tmp/ccxxb8xC.s:6422   .debug_str:0000000000000a3b .LASF182
     /tmp/ccxxb8xC.s:6332   .debug_str:000000000000073e .LASF183
     /tmp/ccxxb8xC.s:6264   .debug_str:0000000000000550 .LASF184
     /tmp/ccxxb8xC.s:6172   .debug_str:00000000000002b8 .LASF185
     /tmp/ccxxb8xC.s:6178   .debug_str:00000000000002de .LASF186
     /tmp/ccxxb8xC.s:6354   .debug_str:000000000000088b .LASF187
     /tmp/ccxxb8xC.s:6428   .debug_str:0000000000000a76 .LASF188
     /tmp/ccxxb8xC.s:6310   .debug_str:000000000000069b .LASF189
     /tmp/ccxxb8xC.s:6270   .debug_str:000000000000058f .LASF190
     /tmp/ccxxb8xC.s:6582   .debug_str:0000000000000e3d .LASF191
     /tmp/ccxxb8xC.s:6106   .debug_str:0000000000000076 .LASF192
     /tmp/ccxxb8xC.s:6324   .debug_str:0000000000000701 .LASF193
     /tmp/ccxxb8xC.s:6574   .debug_str:0000000000000e0e .LASF194
     /tmp/ccxxb8xC.s:6432   .debug_str:0000000000000a88 .LASF195
     /tmp/ccxxb8xC.s:6466   .debug_str:0000000000000b84 .LASF196
     /tmp/ccxxb8xC.s:6426   .debug_str:0000000000000a50 .LASF197
     /tmp/ccxxb8xC.s:6092   .debug_str:0000000000000000 .LASF198
     /tmp/ccxxb8xC.s:6122   .debug_str:00000000000000f0 .LASF199
     /tmp/ccxxb8xC.s:6258   .debug_str:0000000000000538 .LASF200
     /tmp/ccxxb8xC.s:6590   .debug_str:0000000000000e7a .LASF201
     /tmp/ccxxb8xC.s:6314   .debug_str:00000000000006aa .LASF202
     /tmp/ccxxb8xC.s:6560   .debug_str:0000000000000da4 .LASF203
     /tmp/ccxxb8xC.s:6486   .debug_str:0000000000000bd9 .LASF204
     /tmp/ccxxb8xC.s:6284   .debug_str:00000000000005de .LASF205
     /tmp/ccxxb8xC.s:6588   .debug_str:0000000000000e6b .LASF206
     /tmp/ccxxb8xC.s:6542   .debug_str:0000000000000d35 .LASF207
     /tmp/ccxxb8xC.s:6212   .debug_str:00000000000003bb .LASF208
     /tmp/ccxxb8xC.s:6226   .debug_str:0000000000000436 .LASF209
     /tmp/ccxxb8xC.s:6408   .debug_str:00000000000009db .LASF210
     /tmp/ccxxb8xC.s:6120   .debug_str:00000000000000cd .LASF211
     /tmp/ccxxb8xC.s:1511   .text:00000000000005e4 .LFE28
     /tmp/ccxxb8xC.s:5503   .debug_loc:0000000000000000 .LLST15
     /tmp/ccxxb8xC.s:6456   .debug_str:0000000000000b47 .LASF212
     /tmp/ccxxb8xC.s:5542   .debug_loc:00000000000000bb .LLST16
     /tmp/ccxxb8xC.s:6052   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccxxb8xC.s:6390   .debug_str:0000000000000971 .LASF213
     /tmp/ccxxb8xC.s:6330   .debug_str:0000000000000734 .LASF214
     /tmp/ccxxb8xC.s:5557   .debug_loc:0000000000000104 .LLST17
     /tmp/ccxxb8xC.s:6514   .debug_str:0000000000000ca2 .LASF215
     /tmp/ccxxb8xC.s:5600   .debug_loc:00000000000001d2 .LLST18
     /tmp/ccxxb8xC.s:656    .text:0000000000000300 .LBB109
     /tmp/ccxxb8xC.s:730    .text:0000000000000338 .LBE109
     /tmp/ccxxb8xC.s:5615   .debug_loc:000000000000021b .LLST21
     /tmp/ccxxb8xC.s:6534   .debug_str:0000000000000cfd .LASF216
     /tmp/ccxxb8xC.s:5622   .debug_loc:000000000000023e .LLST22
     /tmp/ccxxb8xC.s:658    .text:0000000000000300 .LBB110
GAS LISTING /tmp/ccxxb8xC.s 			page 54


     /tmp/ccxxb8xC.s:674    .text:000000000000030c .LBE110
     /tmp/ccxxb8xC.s:676    .text:000000000000030c .LBB112
     /tmp/ccxxb8xC.s:692    .text:0000000000000318 .LBE112
     /tmp/ccxxb8xC.s:702    .text:000000000000032c .LBB114
     /tmp/ccxxb8xC.s:713    .text:0000000000000330 .LBE114
     /tmp/ccxxb8xC.s:5629   .debug_loc:0000000000000261 .LLST23
     /tmp/ccxxb8xC.s:715    .text:0000000000000330 .LBB116
     /tmp/ccxxb8xC.s:729    .text:0000000000000338 .LBE116
     /tmp/ccxxb8xC.s:5636   .debug_loc:0000000000000284 .LLST24
     /tmp/ccxxb8xC.s:700    .text:000000000000032c .LVL49
     /tmp/ccxxb8xC.s:1012   .text:00000000000003fc .LBB204
     /tmp/ccxxb8xC.s:1038   .text:0000000000000410 .LBE204
     /tmp/ccxxb8xC.s:5643   .debug_loc:00000000000002a7 .LLST50
     /tmp/ccxxb8xC.s:6536   .debug_str:0000000000000d05 .LASF217
     /tmp/ccxxb8xC.s:5658   .debug_loc:00000000000002e1 .LLST51
     /tmp/ccxxb8xC.s:1028   .text:000000000000040c .LVL65
     /tmp/ccxxb8xC.s:1058   .text:0000000000000418 .LBB194
     /tmp/ccxxb8xC.s:1079   .text:0000000000000428 .LBE194
     /tmp/ccxxb8xC.s:6154   .debug_str:0000000000000227 .LASF218
     /tmp/ccxxb8xC.s:5665   .debug_loc:0000000000000304 .LLST48
     /tmp/ccxxb8xC.s:6140   .debug_str:00000000000001c4 .LASF219
     /tmp/ccxxb8xC.s:5677   .debug_loc:000000000000033b .LLST49
     /tmp/ccxxb8xC.s:1071   .text:0000000000000424 .LVL69
     /tmp/ccxxb8xC.s:6586   .debug_str:0000000000000e5d .LASF220
     /tmp/ccxxb8xC.s:5684   .debug_loc:000000000000035e .LLST44
     /tmp/ccxxb8xC.s:5695   .debug_loc:0000000000000394 .LLST45
     /tmp/ccxxb8xC.s:6130   .debug_str:0000000000000148 .LASF221
     /tmp/ccxxb8xC.s:5706   .debug_loc:00000000000003ca .LLST46
     /tmp/ccxxb8xC.s:6364   .debug_str:00000000000008cc .LASF222
     /tmp/ccxxb8xC.s:5717   .debug_loc:0000000000000400 .LLST47
     /tmp/ccxxb8xC.s:1112   .text:0000000000000444 .LVL74
     /tmp/ccxxb8xC.s:1121   .text:0000000000000460 .LVL75
     /tmp/ccxxb8xC.s:1476   .text:00000000000005bc .LVL110
     /tmp/ccxxb8xC.s:1149   .text:0000000000000478 .LBB170
     /tmp/ccxxb8xC.s:1194   .text:00000000000004a0 .LBE170
     /tmp/ccxxb8xC.s:5724   .debug_loc:0000000000000423 .LLST42
     /tmp/ccxxb8xC.s:1151   .text:0000000000000478 .LBB171
     /tmp/ccxxb8xC.s:1168   .text:0000000000000484 .LBE171
     /tmp/ccxxb8xC.s:1179   .text:0000000000000498 .LBB173
     /tmp/ccxxb8xC.s:1193   .text:00000000000004a0 .LBE173
     /tmp/ccxxb8xC.s:5731   .debug_loc:0000000000000446 .LLST43
     /tmp/ccxxb8xC.s:1177   .text:0000000000000498 .LVL79
     /tmp/ccxxb8xC.s:1196   .text:00000000000004a0 .LBB156
     /tmp/ccxxb8xC.s:1274   .text:0000000000000500 .LBE156
     /tmp/ccxxb8xC.s:5738   .debug_loc:0000000000000469 .LLST38
     /tmp/ccxxb8xC.s:1205   .text:00000000000004b0 .LBB157
     /tmp/ccxxb8xC.s:1221   .text:00000000000004bc .LBE157
     /tmp/ccxxb8xC.s:1234   .text:00000000000004e0 .LBB159
     /tmp/ccxxb8xC.s:1242   .text:00000000000004e8 .LBE159
     /tmp/ccxxb8xC.s:5745   .debug_loc:000000000000048c .LLST39
     /tmp/ccxxb8xC.s:5753   .debug_loc:00000000000004b0 .LLST40
     /tmp/ccxxb8xC.s:1248   .text:00000000000004f0 .LBB161
     /tmp/ccxxb8xC.s:1262   .text:00000000000004f8 .LBE161
     /tmp/ccxxb8xC.s:5760   .debug_loc:00000000000004d3 .LLST41
     /tmp/ccxxb8xC.s:1246   .text:00000000000004f0 .LVL85
     /tmp/ccxxb8xC.s:1276   .text:0000000000000500 .LBB143
     /tmp/ccxxb8xC.s:1350   .text:0000000000000544 .LBE143
GAS LISTING /tmp/ccxxb8xC.s 			page 55


     /tmp/ccxxb8xC.s:6382   .debug_str:0000000000000943 .LASF223
     /tmp/ccxxb8xC.s:5767   .debug_loc:00000000000004f6 .LLST33
     /tmp/ccxxb8xC.s:5774   .debug_loc:0000000000000519 .LLST34
     /tmp/ccxxb8xC.s:1287   .text:0000000000000504 .LBB144
     /tmp/ccxxb8xC.s:1304   .text:0000000000000510 .LBE144
     /tmp/ccxxb8xC.s:1314   .text:0000000000000528 .LBB146
     /tmp/ccxxb8xC.s:1321   .text:000000000000052c .LBE146
     /tmp/ccxxb8xC.s:5781   .debug_loc:000000000000053c .LLST35
     /tmp/ccxxb8xC.s:5788   .debug_loc:000000000000055f .LLST36
     /tmp/ccxxb8xC.s:1331   .text:000000000000053c .LBB148
     /tmp/ccxxb8xC.s:1342   .text:0000000000000540 .LBE148
     /tmp/ccxxb8xC.s:5795   .debug_loc:0000000000000582 .LLST37
     /tmp/ccxxb8xC.s:1325   .text:0000000000000534 .LVL93
     /tmp/ccxxb8xC.s:1329   .text:000000000000053c .LVL94
     /tmp/ccxxb8xC.s:5802   .debug_loc:00000000000005a5 .LLST30
     /tmp/ccxxb8xC.s:6294   .debug_str:000000000000061d .LASF224
     /tmp/ccxxb8xC.s:5813   .debug_loc:00000000000005db .LLST31
     /tmp/ccxxb8xC.s:6568   .debug_str:0000000000000de3 .LASF225
     /tmp/ccxxb8xC.s:5824   .debug_loc:0000000000000611 .LLST32
     /tmp/ccxxb8xC.s:1376   .text:000000000000055c .LVL99
     /tmp/ccxxb8xC.s:1383   .text:000000000000056c .LVL101
     /tmp/ccxxb8xC.s:1494   .text:00000000000005d8 .LVL113
     /tmp/ccxxb8xC.s:1411   .text:0000000000000584 .LBB133
     /tmp/ccxxb8xC.s:1433   .text:0000000000000594 .LBE133
     /tmp/ccxxb8xC.s:6524   .debug_str:0000000000000cd8 .LASF226
     /tmp/ccxxb8xC.s:5831   .debug_loc:0000000000000634 .LLST28
     /tmp/ccxxb8xC.s:5838   .debug_loc:0000000000000657 .LLST29
     /tmp/ccxxb8xC.s:1425   .text:0000000000000590 .LVL104
     /tmp/ccxxb8xC.s:1438   .text:0000000000000598 .LBB131
     /tmp/ccxxb8xC.s:1460   .text:00000000000005a8 .LBE131
     /tmp/ccxxb8xC.s:5845   .debug_loc:000000000000067a .LLST26
     /tmp/ccxxb8xC.s:5852   .debug_loc:000000000000069d .LLST27
     /tmp/ccxxb8xC.s:1451   .text:00000000000005a4 .LVL107
     /tmp/ccxxb8xC.s:971    .text:00000000000003d4 .LBB130
     /tmp/ccxxb8xC.s:999    .text:00000000000003f8 .LBE130
     /tmp/ccxxb8xC.s:5859   .debug_loc:00000000000006c0 .LLST25
     /tmp/ccxxb8xC.s:987    .text:00000000000003e8 .LVL60
     /tmp/ccxxb8xC.s:990    .text:00000000000003f4 .LVL61
     /tmp/ccxxb8xC.s:607    .text:00000000000002b0 .LBB104
     /tmp/ccxxb8xC.s:619    .text:00000000000002b8 .LBE104
     /tmp/ccxxb8xC.s:5866   .debug_loc:00000000000006e3 .LLST19
     /tmp/ccxxb8xC.s:644    .text:00000000000002f4 .LBB107
     /tmp/ccxxb8xC.s:651    .text:00000000000002f8 .LBE107
     /tmp/ccxxb8xC.s:5874   .debug_loc:0000000000000707 .LLST20
     /tmp/ccxxb8xC.s:783    .text:0000000000000374 .LBB118
     /tmp/ccxxb8xC.s:800    .text:0000000000000380 .LBE118
     /tmp/ccxxb8xC.s:1041   .text:0000000000000410 .LBB215
     /tmp/ccxxb8xC.s:1055   .text:0000000000000418 .LBE215
     /tmp/ccxxb8xC.s:5881   .debug_loc:000000000000072a .LLST52
     /tmp/ccxxb8xC.s:630    .text:00000000000002d4 .LVL44
     /tmp/ccxxb8xC.s:578    .text:000000000000028c .LBB100
     /tmp/ccxxb8xC.s:594    .text:0000000000000298 .LBE100
     /tmp/ccxxb8xC.s:742    .text:0000000000000348 .LVL53
     /tmp/ccxxb8xC.s:1480   .text:00000000000005c8 .LVL111
     /tmp/ccxxb8xC.s:1498   .text:00000000000005e4 .LVL114
     /tmp/ccxxb8xC.s:393    .text:0000000000000198 .LFB27
     /tmp/ccxxb8xC.s:537    .text:0000000000000260 .LFE27
GAS LISTING /tmp/ccxxb8xC.s 			page 56


     /tmp/ccxxb8xC.s:5888   .debug_loc:000000000000074d .LLST9
     /tmp/ccxxb8xC.s:5902   .debug_loc:0000000000000786 .LLST10
     /tmp/ccxxb8xC.s:6498   .debug_str:0000000000000c43 .LASF227
     /tmp/ccxxb8xC.s:5909   .debug_loc:00000000000007a9 .LLST11
     /tmp/ccxxb8xC.s:5931   .debug_loc:0000000000000808 .LLST12
     /tmp/ccxxb8xC.s:410    .text:00000000000001b0 .LBB94
     /tmp/ccxxb8xC.s:426    .text:00000000000001bc .LBE94
     /tmp/ccxxb8xC.s:428    .text:00000000000001bc .LBB96
     /tmp/ccxxb8xC.s:440    .text:00000000000001c4 .LBE96
     /tmp/ccxxb8xC.s:5953   .debug_loc:0000000000000849 .LLST13
     /tmp/ccxxb8xC.s:511    .text:0000000000000244 .LBB98
     /tmp/ccxxb8xC.s:522    .text:0000000000000248 .LBE98
     /tmp/ccxxb8xC.s:5961   .debug_loc:000000000000086d .LLST14
     /tmp/ccxxb8xC.s:495    .text:0000000000000228 .LVL35
     /tmp/ccxxb8xC.s:502    .text:0000000000000238 .LVL36
     /tmp/ccxxb8xC.s:285    .text:0000000000000128 .LFB26
     /tmp/ccxxb8xC.s:387    .text:0000000000000198 .LFE26
     /tmp/ccxxb8xC.s:6462   .debug_str:0000000000000b71 .LASF228
     /tmp/ccxxb8xC.s:5968   .debug_loc:0000000000000890 .LLST5
     /tmp/ccxxb8xC.s:5979   .debug_loc:00000000000008c6 .LLST6
     /tmp/ccxxb8xC.s:303    .text:0000000000000144 .LBB88
     /tmp/ccxxb8xC.s:319    .text:0000000000000150 .LBE88
     /tmp/ccxxb8xC.s:321    .text:0000000000000150 .LBB90
     /tmp/ccxxb8xC.s:334    .text:0000000000000158 .LBE90
     /tmp/ccxxb8xC.s:5986   .debug_loc:00000000000008e9 .LLST7
     /tmp/ccxxb8xC.s:360    .text:000000000000017c .LBB92
     /tmp/ccxxb8xC.s:371    .text:0000000000000180 .LBE92
     /tmp/ccxxb8xC.s:5994   .debug_loc:000000000000090d .LLST8
     /tmp/ccxxb8xC.s:344    .text:0000000000000168 .LVL19
     /tmp/ccxxb8xC.s:250    .text:0000000000000108 .LFB25
     /tmp/ccxxb8xC.s:279    .text:0000000000000128 .LFE25
     /tmp/ccxxb8xC.s:181    .text:00000000000000c0 .LFB24
     /tmp/ccxxb8xC.s:213    .text:00000000000000e0 .LFE24
     /tmp/ccxxb8xC.s:192    .text:00000000000000cc .LBB86
     /tmp/ccxxb8xC.s:204    .text:00000000000000d4 .LBE86
     /tmp/ccxxb8xC.s:6001   .debug_loc:0000000000000930 .LLST4
     /tmp/ccxxb8xC.s:143    .text:00000000000000a0 .LFB23
     /tmp/ccxxb8xC.s:175    .text:00000000000000c0 .LFE23
     /tmp/ccxxb8xC.s:154    .text:00000000000000ac .LBB84
     /tmp/ccxxb8xC.s:166    .text:00000000000000b4 .LBE84
     /tmp/ccxxb8xC.s:6009   .debug_loc:0000000000000954 .LLST3
     /tmp/ccxxb8xC.s:219    .text:00000000000000e0 .LFB22
     /tmp/ccxxb8xC.s:244    .text:0000000000000108 .LFE22
     /tmp/ccxxb8xC.s:233    .text:00000000000000f8 .LVL15
     /tmp/ccxxb8xC.s:113    .text:00000000000000a0 .LFE21
     /tmp/ccxxb8xC.s:6017   .debug_loc:0000000000000978 .LLST0
     /tmp/ccxxb8xC.s:32     .text:0000000000000020 .LBB80
     /tmp/ccxxb8xC.s:44     .text:0000000000000024 .LBE80
     /tmp/ccxxb8xC.s:75     .text:0000000000000064 .LBB82
     /tmp/ccxxb8xC.s:84     .text:000000000000006c .LBE82
     /tmp/ccxxb8xC.s:6024   .debug_loc:000000000000099b .LLST1
     /tmp/ccxxb8xC.s:6032   .debug_loc:00000000000009bf .LLST2
     /tmp/ccxxb8xC.s:50     .text:0000000000000030 .LVL2
     /tmp/ccxxb8xC.s:57     .text:0000000000000044 .LVL3
     /tmp/ccxxb8xC.s:64     .text:0000000000000050 .LVL4
     /tmp/ccxxb8xC.s:68     .text:0000000000000058 .LVL5
     /tmp/ccxxb8xC.s:106    .text:0000000000000094 .LVL9
GAS LISTING /tmp/ccxxb8xC.s 			page 57


     /tmp/ccxxb8xC.s:110    .text:00000000000000a0 .LVL10
     /tmp/ccxxb8xC.s:6196   .debug_str:0000000000000363 .LASF229
     /tmp/ccxxb8xC.s:6518   .debug_str:0000000000000cb6 .LASF230
     /tmp/ccxxb8xC.s:6546   .debug_str:0000000000000d4b .LASF231
     /tmp/ccxxb8xC.s:6416   .debug_str:0000000000000a0b .LASF232
     /tmp/ccxxb8xC.s:6236   .debug_str:000000000000048c .LASF234
     /tmp/ccxxb8xC.s:6578   .debug_str:0000000000000e2b .LASF233
     /tmp/ccxxb8xC.s:6240   .debug_str:00000000000004a0 .LASF235
     /tmp/ccxxb8xC.s:6248   .debug_str:00000000000004d7 .LASF236
     /tmp/ccxxb8xC.s:6562   .debug_str:0000000000000dba .LASF248
     /tmp/ccxxb8xC.s:6134   .debug_str:000000000000016f .LASF249
     /tmp/ccxxb8xC.s:6194   .debug_str:000000000000035c .LASF237
     /tmp/ccxxb8xC.s:6228   .debug_str:000000000000045d .LASF238
     /tmp/ccxxb8xC.s:6366   .debug_str:00000000000008d3 .LASF239
     /tmp/ccxxb8xC.s:575    .text:000000000000028c .LVL40
     /tmp/ccxxb8xC.s:690    .text:0000000000000318 .LVL48
     /tmp/ccxxb8xC.s:726    .text:0000000000000338 .LVL51
     /tmp/ccxxb8xC.s:736    .text:0000000000000340 .LVL52
     /tmp/ccxxb8xC.s:766    .text:0000000000000370 .LVL54
     /tmp/ccxxb8xC.s:979    .text:00000000000003d8 .LVL59
     /tmp/ccxxb8xC.s:1001   .text:00000000000003fc .LVL62
     /tmp/ccxxb8xC.s:1035   .text:0000000000000410 .LVL66
     /tmp/ccxxb8xC.s:1052   .text:0000000000000418 .LVL67
     /tmp/ccxxb8xC.s:1166   .text:0000000000000484 .LVL78
     /tmp/ccxxb8xC.s:1190   .text:00000000000004a0 .LVL80
     /tmp/ccxxb8xC.s:1219   .text:00000000000004bc .LVL82
     /tmp/ccxxb8xC.s:1259   .text:00000000000004f8 .LVL86
     /tmp/ccxxb8xC.s:1302   .text:0000000000000510 .LVL90
     /tmp/ccxxb8xC.s:1352   .text:0000000000000548 .LVL96
     /tmp/ccxxb8xC.s:1379   .text:0000000000000560 .LVL100
     /tmp/ccxxb8xC.s:1407   .text:0000000000000584 .LVL102
     /tmp/ccxxb8xC.s:592    .text:0000000000000298 .LVL41
     /tmp/ccxxb8xC.s:792    .text:0000000000000378 .LVL56
     /tmp/ccxxb8xC.s:780    .text:0000000000000374 .LVL55
     /tmp/ccxxb8xC.s:1081   .text:000000000000042c .LVL70
     /tmp/ccxxb8xC.s:1145   .text:0000000000000478 .LVL76
     /tmp/ccxxb8xC.s:1160   .text:000000000000047c .LVL77
     /tmp/ccxxb8xC.s:1200   .text:00000000000004a8 .LVL81
     /tmp/ccxxb8xC.s:1272   .text:0000000000000500 .LVL87
     /tmp/ccxxb8xC.s:1296   .text:0000000000000508 .LVL89
     /tmp/ccxxb8xC.s:1435   .text:0000000000000598 .LVL105
     /tmp/ccxxb8xC.s:798    .text:0000000000000380 .LVL57
     /tmp/ccxxb8xC.s:804    .text:0000000000000384 .LVL58
     /tmp/ccxxb8xC.s:1465   .text:00000000000005b0 .LVL109
     /tmp/ccxxb8xC.s:1484   .text:00000000000005cc .LVL112
     /tmp/ccxxb8xC.s:672    .text:000000000000030c .LVL47
     /tmp/ccxxb8xC.s:710    .text:0000000000000330 .LVL50
     /tmp/ccxxb8xC.s:1020   .text:0000000000000400 .LVL63
     /tmp/ccxxb8xC.s:1026   .text:0000000000000404 .LVL64
     /tmp/ccxxb8xC.s:1066   .text:000000000000041c .LVL68
     /tmp/ccxxb8xC.s:1100   .text:0000000000000434 .LVL72
     /tmp/ccxxb8xC.s:1462   .text:00000000000005ac .LVL108
     /tmp/ccxxb8xC.s:1106   .text:0000000000000438 .LVL73
     /tmp/ccxxb8xC.s:1094   .text:0000000000000430 .LVL71
     /tmp/ccxxb8xC.s:1233   .text:00000000000004e0 .LVL83
     /tmp/ccxxb8xC.s:1240   .text:00000000000004e8 .LVL84
     /tmp/ccxxb8xC.s:1284   .text:0000000000000504 .LVL88
GAS LISTING /tmp/ccxxb8xC.s 			page 58


     /tmp/ccxxb8xC.s:1313   .text:0000000000000528 .LVL91
     /tmp/ccxxb8xC.s:1319   .text:000000000000052c .LVL92
     /tmp/ccxxb8xC.s:1339   .text:0000000000000540 .LVL95
     /tmp/ccxxb8xC.s:1370   .text:0000000000000550 .LVL98
     /tmp/ccxxb8xC.s:1364   .text:000000000000054c .LVL97
     /tmp/ccxxb8xC.s:1419   .text:0000000000000588 .LVL103
     /tmp/ccxxb8xC.s:1446   .text:000000000000059c .LVL106
     /tmp/ccxxb8xC.s:606    .text:00000000000002b0 .LVL42
     /tmp/ccxxb8xC.s:616    .text:00000000000002b8 .LVL43
     /tmp/ccxxb8xC.s:643    .text:00000000000002f4 .LVL45
     /tmp/ccxxb8xC.s:649    .text:00000000000002f8 .LVL46
     /tmp/ccxxb8xC.s:396    .text:0000000000000198 .LVL25
     /tmp/ccxxb8xC.s:450    .text:00000000000001c8 .LVL28
     /tmp/ccxxb8xC.s:424    .text:00000000000001bc .LVL26
     /tmp/ccxxb8xC.s:506    .text:000000000000023c .LVL37
     /tmp/ccxxb8xC.s:454    .text:00000000000001cc .LVL29
     /tmp/ccxxb8xC.s:461    .text:00000000000001d4 .LVL30
     /tmp/ccxxb8xC.s:472    .text:00000000000001f8 .LVL31
     /tmp/ccxxb8xC.s:482    .text:000000000000020c .LVL33
     /tmp/ccxxb8xC.s:487    .text:0000000000000210 .LVL34
     /tmp/ccxxb8xC.s:478    .text:0000000000000204 .LVL32
     /tmp/ccxxb8xC.s:437    .text:00000000000001c4 .LVL27
     /tmp/ccxxb8xC.s:510    .text:0000000000000244 .LVL38
     /tmp/ccxxb8xC.s:519    .text:0000000000000248 .LVL39
     /tmp/ccxxb8xC.s:288    .text:0000000000000128 .LVL16
     /tmp/ccxxb8xC.s:330    .text:0000000000000158 .LVL18
     /tmp/ccxxb8xC.s:380    .text:000000000000018c .LVL24
     /tmp/ccxxb8xC.s:317    .text:0000000000000150 .LVL17
     /tmp/ccxxb8xC.s:355    .text:0000000000000174 .LVL21
     /tmp/ccxxb8xC.s:359    .text:000000000000017c .LVL22
     /tmp/ccxxb8xC.s:368    .text:0000000000000180 .LVL23
     /tmp/ccxxb8xC.s:191    .text:00000000000000cc .LVL13
     /tmp/ccxxb8xC.s:201    .text:00000000000000d4 .LVL14
     /tmp/ccxxb8xC.s:153    .text:00000000000000ac .LVL11
     /tmp/ccxxb8xC.s:163    .text:00000000000000b4 .LVL12
     /tmp/ccxxb8xC.s:94     .text:0000000000000078 .LVL8
     /tmp/ccxxb8xC.s:74     .text:0000000000000064 .LVL6
     /tmp/ccxxb8xC.s:82     .text:000000000000006c .LVL7
     /tmp/ccxxb8xC.s:1573   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccxxb8xC.s:603    .text:00000000000002b0 .LBB103
     /tmp/ccxxb8xC.s:732    .text:0000000000000338 .LBE103
     /tmp/ccxxb8xC.s:770    .text:0000000000000370 .LBB218
     /tmp/ccxxb8xC.s:810    .text:000000000000038c .LBE218
     /tmp/ccxxb8xC.s:814    .text:000000000000038c .LBB219
     /tmp/ccxxb8xC.s:821    .text:0000000000000394 .LBE219
     /tmp/ccxxb8xC.s:825    .text:0000000000000394 .LBB220
     /tmp/ccxxb8xC.s:834    .text:000000000000039c .LBE220
     /tmp/ccxxb8xC.s:838    .text:000000000000039c .LBB221
     /tmp/ccxxb8xC.s:849    .text:00000000000003a4 .LBE221
     /tmp/ccxxb8xC.s:853    .text:00000000000003a4 .LBB222
     /tmp/ccxxb8xC.s:866    .text:00000000000003ac .LBE222
     /tmp/ccxxb8xC.s:870    .text:00000000000003ac .LBB223
     /tmp/ccxxb8xC.s:885    .text:00000000000003b4 .LBE223
     /tmp/ccxxb8xC.s:889    .text:00000000000003b4 .LBB224
     /tmp/ccxxb8xC.s:906    .text:00000000000003bc .LBE224
     /tmp/ccxxb8xC.s:910    .text:00000000000003bc .LBB225
     /tmp/ccxxb8xC.s:929    .text:00000000000003c4 .LBE225
GAS LISTING /tmp/ccxxb8xC.s 			page 59


     /tmp/ccxxb8xC.s:933    .text:00000000000003c4 .LBB226
     /tmp/ccxxb8xC.s:954    .text:00000000000003cc .LBE226
     /tmp/ccxxb8xC.s:958    .text:00000000000003cc .LBB227
     /tmp/ccxxb8xC.s:1508   .text:00000000000005e4 .LBE227
     /tmp/ccxxb8xC.s:1355   .text:0000000000000548 .LBB137
     /tmp/ccxxb8xC.s:1409   .text:0000000000000584 .LBE137
     /tmp/ccxxb8xC.s:1490   .text:00000000000005cc .LBB139
     /tmp/ccxxb8xC.s:1500   .text:00000000000005e4 .LBE139
     /tmp/ccxxb8xC.s:1084   .text:000000000000042c .LBB183
     /tmp/ccxxb8xC.s:1147   .text:0000000000000478 .LBE183
     /tmp/ccxxb8xC.s:1472   .text:00000000000005b0 .LBB185
     /tmp/ccxxb8xC.s:1485   .text:00000000000005cc .LBE185
     /tmp/ccxxb8xC.s:116    .gcc_except_table:0000000000000000 .LLSDA21
     /tmp/ccxxb8xC.s:1513   .gcc_except_table:0000000000000038 .LLSDA28

UNDEFINED SYMBOLS
_ZN5Riscv14supervisorTrapEv
_Znwm
_ZN6ThreadC1EPFvPvES0_
_ZN6Thread5startEv
_ZN9Scheduler3getEv
_ZN3PCB7runningE
_ZdlPv
_Unwind_Resume
__gxx_personality_v0
__putc
_ZN3PCB16timeSliceCounterE
_ZN12SleepPCBList13tryToWakePCBsEv
_ZN3PCB8dispatchEv
console_handler
_ZN10KSemaphoreD1Ev
_ZN10KSemaphoredlEPv
_Z7kmallocm
_Z5kfreePv
_ZN3PCBnwEm
_ZN3PCBC1EPFvPvES0_S0_m
_ZN3PCB10exitingPCBE
_ZN12SleepPCBList17insertSleepingPCBEv
_ZN10KSemaphorenwEm
_ZN10KSemaphoreC1Ei
_ZN10KSemaphore4waitEv
_ZN10KSemaphore6signalEv
_ZN3PCBdlEPv
