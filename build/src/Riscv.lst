GAS LISTING /tmp/ccPBObma.s 			page 1


   1              		.file	"Riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10initSystemEv
   9              	_ZN5Riscv10initSystemEv:
  10              	.LFB19:
  11              		.file 1 "src/Riscv.cpp"
   1:src/Riscv.cpp **** //
   2:src/Riscv.cpp **** // Created by os on 4/27/22.
   3:src/Riscv.cpp **** //
   4:src/Riscv.cpp **** 
   5:src/Riscv.cpp **** #include "../h/Riscv.h"
   6:src/Riscv.cpp **** #include "../h/MemoryAllocator.h"
   7:src/Riscv.cpp **** #include "../h/PCB.h"
   8:src/Riscv.cpp **** #include "../lib/console.h"
   9:src/Riscv.cpp **** #include "../h/syscall_cpp.h"
  10:src/Riscv.cpp **** 
  11:src/Riscv.cpp **** //todo
  12:src/Riscv.cpp **** //sta sve treba da se odradi ovde
  13:src/Riscv.cpp **** void Riscv::initSystem() {
  12              		.loc 1 13 26
  13              		.cfi_startproc
  14              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
  15              		.cfi_lsda 0x1b,.LLSDA19
  16 0000 130101FE 		addi	sp,sp,-32
  17              		.cfi_def_cfa_offset 32
  18 0004 233C1100 		sd	ra,24(sp)
  19 0008 23388100 		sd	s0,16(sp)
  20 000c 23349100 		sd	s1,8(sp)
  21 0010 23302101 		sd	s2,0(sp)
  22              		.cfi_offset 1, -8
  23              		.cfi_offset 8, -16
  24              		.cfi_offset 9, -24
  25              		.cfi_offset 18, -32
  26 0014 13040102 		addi	s0,sp,32
  27              		.cfi_def_cfa 8, 0
  14:src/Riscv.cpp ****     w_stvec((uint64)&Riscv::supervisorTrap);
  28              		.loc 1 14 5
  29              		.loc 1 14 12 is_stmt 0
  30 0018 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
  30      83B70700 
  31              	.LVL0:
  32              	.LBB64:
  33              	.LBB65:
  34              		.file 2 "src/../h/Riscv.h"
   1:src/../h/Riscv.h **** //
   2:src/../h/Riscv.h **** // Created by os on 4/27/22.
   3:src/../h/Riscv.h **** //
   4:src/../h/Riscv.h **** 
   5:src/../h/Riscv.h **** #ifndef PROJECT_BASE_V1_0_RISCV_H
   6:src/../h/Riscv.h **** #define PROJECT_BASE_V1_0_RISCV_H
   7:src/../h/Riscv.h **** 
   8:src/../h/Riscv.h **** #include "../lib/hw.h"
   9:src/../h/Riscv.h **** 
GAS LISTING /tmp/ccPBObma.s 			page 2


  10:src/../h/Riscv.h **** class Riscv
  11:src/../h/Riscv.h **** {
  12:src/../h/Riscv.h **** private:
  13:src/../h/Riscv.h **** 
  14:src/../h/Riscv.h **** public:
  15:src/../h/Riscv.h ****     static void initSystem();
  16:src/../h/Riscv.h ****     static void endSystem();
  17:src/../h/Riscv.h **** 
  18:src/../h/Riscv.h ****     static void enableInterrupts();
  19:src/../h/Riscv.h **** 
  20:src/../h/Riscv.h ****     static void disableInterrupts();
  21:src/../h/Riscv.h **** 
  22:src/../h/Riscv.h ****     static void printString(char const *string);
  23:src/../h/Riscv.h **** 
  24:src/../h/Riscv.h ****     static void printInteger(uint64 num);
  25:src/../h/Riscv.h **** 
  26:src/../h/Riscv.h ****     static void pushRegisters();
  27:src/../h/Riscv.h ****     static void popRegisters();
  28:src/../h/Riscv.h **** 
  29:src/../h/Riscv.h ****     static uint64 r_scause();
  30:src/../h/Riscv.h ****     static void w_scause(uint64 scause);
  31:src/../h/Riscv.h **** 
  32:src/../h/Riscv.h ****     static uint64 r_sepc();
  33:src/../h/Riscv.h ****     static void w_sepc(uint64 sepc);
  34:src/../h/Riscv.h **** 
  35:src/../h/Riscv.h ****     static uint64 r_stvec();
  36:src/../h/Riscv.h ****     static void w_stvec(uint64 stvec);
  37:src/../h/Riscv.h **** 
  38:src/../h/Riscv.h ****     static uint64 r_stval();
  39:src/../h/Riscv.h ****     static void w_stval(uint64 stval);
  40:src/../h/Riscv.h **** 
  41:src/../h/Riscv.h ****     enum BitMaskSip
  42:src/../h/Riscv.h ****     {
  43:src/../h/Riscv.h ****         SIP_SSIP = (1 << 1),
  44:src/../h/Riscv.h ****         SIP_STIP = (1 << 5),
  45:src/../h/Riscv.h ****         SIP_SEIP = (1 << 9),
  46:src/../h/Riscv.h ****     };
  47:src/../h/Riscv.h **** 
  48:src/../h/Riscv.h ****     static void ms_sip(uint64 mask);
  49:src/../h/Riscv.h **** 
  50:src/../h/Riscv.h ****     static void mc_sip(uint64 mask);
  51:src/../h/Riscv.h **** 
  52:src/../h/Riscv.h ****     static uint64 r_sip();
  53:src/../h/Riscv.h **** 
  54:src/../h/Riscv.h ****     static void w_sip(uint64 sip);
  55:src/../h/Riscv.h **** 
  56:src/../h/Riscv.h ****     enum BitMaskSstatus
  57:src/../h/Riscv.h ****     {
  58:src/../h/Riscv.h ****         SSTATUS_SIE = (1 << 1),
  59:src/../h/Riscv.h ****         SSTATUS_SPIE = (1 << 5),
  60:src/../h/Riscv.h ****         SSTATUS_SPP = (1 << 8),
  61:src/../h/Riscv.h ****     };
  62:src/../h/Riscv.h **** 
  63:src/../h/Riscv.h ****     static void ms_sstatus(uint64 mask);
  64:src/../h/Riscv.h **** 
  65:src/../h/Riscv.h ****     static void mc_sstatus(uint64 mask);
  66:src/../h/Riscv.h **** 
GAS LISTING /tmp/ccPBObma.s 			page 3


  67:src/../h/Riscv.h ****     static uint64 r_sstatus();
  68:src/../h/Riscv.h **** 
  69:src/../h/Riscv.h ****     static void w_sstatus(uint64 sstatus);
  70:src/../h/Riscv.h **** 
  71:src/../h/Riscv.h ****     static void popSppSpie();
  72:src/../h/Riscv.h **** 
  73:src/../h/Riscv.h ****     static void supervisorTrap();
  74:src/../h/Riscv.h ****     static void handleSupervisorTrap();
  75:src/../h/Riscv.h **** 
  76:src/../h/Riscv.h ****     static const uint64 bntOne = 1UL << 63;;
  77:src/../h/Riscv.h ****     static const uint64 bntZero = 0UL;
  78:src/../h/Riscv.h ****     static const uint64 timerInterrupt = bntOne + 1UL;
  79:src/../h/Riscv.h ****     static const uint64 hwInterrupt = bntOne + 9UL;
  80:src/../h/Riscv.h ****     static const uint64 operationInterrupt = bntZero + 2UL;
  81:src/../h/Riscv.h ****     static const uint64 addrReadInterrupt = bntZero + 5UL;
  82:src/../h/Riscv.h ****     static const uint64 addrWriteInterrupt = bntZero + 7UL;
  83:src/../h/Riscv.h ****     static const uint64 ecallUserInterrupt = bntZero + 8UL;
  84:src/../h/Riscv.h ****     static const uint64 ecallSystemInterupt = bntZero + 9UL;
  85:src/../h/Riscv.h **** };
  86:src/../h/Riscv.h **** 
  87:src/../h/Riscv.h **** inline uint64 Riscv::r_scause() {
  88:src/../h/Riscv.h ****     uint64 volatile scause;
  89:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
  90:src/../h/Riscv.h ****     return scause;
  91:src/../h/Riscv.h **** }
  92:src/../h/Riscv.h **** 
  93:src/../h/Riscv.h **** inline void Riscv::w_scause(uint64 scause) {
  94:src/../h/Riscv.h ****     __asm__ volatile("csrw scause, %0" : :"r"(scause));
  95:src/../h/Riscv.h **** }
  96:src/../h/Riscv.h **** 
  97:src/../h/Riscv.h **** inline uint64 Riscv::r_sepc() {
  98:src/../h/Riscv.h ****     uint64 volatile sepc;
  99:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 100:src/../h/Riscv.h ****     return sepc;
 101:src/../h/Riscv.h **** }
 102:src/../h/Riscv.h **** 
 103:src/../h/Riscv.h **** inline void Riscv::w_sepc(uint64 sepc) {
 104:src/../h/Riscv.h ****     __asm__ volatile("csrw sepc, %0" : :"r"(sepc));
 105:src/../h/Riscv.h **** }
 106:src/../h/Riscv.h **** 
 107:src/../h/Riscv.h **** inline uint64 Riscv::r_stvec() {
 108:src/../h/Riscv.h ****     uint64 volatile stvec;
 109:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, stvec" : "=r"(stvec));
 110:src/../h/Riscv.h ****     return stvec;
 111:src/../h/Riscv.h **** }
 112:src/../h/Riscv.h **** 
 113:src/../h/Riscv.h **** inline void Riscv::w_stvec(uint64 stvec) {
 114:src/../h/Riscv.h ****     __asm__ volatile("csrw stvec, %0" : :"r"(stvec));
  35              		.loc 2 114 5 is_stmt 1
  36              		.loc 2 114 53 is_stmt 0
  37              	#APP
  38              	# 114 "src/../h/Riscv.h" 1
 115              	}
  39              		csrw stvec, a5
  40              	# 0 "" 2
  41              	.LVL1:
  42              	#NO_APP
GAS LISTING /tmp/ccPBObma.s 			page 4


  43              	.LBE65:
  44              	.LBE64:
  15:src/Riscv.cpp ****     new Thread(0, 0);
  45              		.loc 1 15 5 is_stmt 1
  46              		.loc 1 15 20 is_stmt 0
  47 0024 13058000 		li	a0,8
  48              	.LEHB0:
  49 0028 97000000 		call	_Znwm@plt
  49      E7800000 
  50              	.LVL2:
  51              	.LEHE0:
  52 0030 93040500 		mv	s1,a0
  53 0034 13060000 		li	a2,0
  54 0038 93050000 		li	a1,0
  55              	.LEHB1:
  56 003c 97000000 		call	_ZN6ThreadC1EPFvPvES0_@plt
  56      E7800000 
  57              	.LVL3:
  58              	.LEHE1:
  16:src/Riscv.cpp ****     PCB::running = Scheduler::get();
  59              		.loc 1 16 5 is_stmt 1
  60              	.LEHB2:
  61              		.loc 1 16 34 is_stmt 0
  62 0044 97000000 		call	_ZN9Scheduler3getEv@plt
  62      E7800000 
  63              	.LVL4:
  64              	.LEHE2:
  65              		.loc 1 16 18
  66 004c 97070000 		la	a5,_ZN3PCB7runningE
  66      83B70700 
  67 0054 23B0A700 		sd	a0,0(a5)
  17:src/Riscv.cpp ****     PCB::running->setState(PCB::RUNNING);
  68              		.loc 1 17 5 is_stmt 1
  69              	.LVL5:
  70              	.LBB66:
  71              	.LBB67:
  72              		.file 3 "src/../h/PCB.h"
   1:src/../h/PCB.h **** //
   2:src/../h/PCB.h **** // Created by os on 4/27/22.
   3:src/../h/PCB.h **** //
   4:src/../h/PCB.h **** 
   5:src/../h/PCB.h **** #ifndef PROJECT_BASE_V1_0_PCB_H
   6:src/../h/PCB.h **** #define PROJECT_BASE_V1_0_PCB_H
   7:src/../h/PCB.h **** 
   8:src/../h/PCB.h **** #include "../lib/hw.h"
   9:src/../h/PCB.h **** #include "Scheduler.h"
  10:src/../h/PCB.h **** #include "Riscv.h"
  11:src/../h/PCB.h **** 
  12:src/../h/PCB.h **** class PCB
  13:src/../h/PCB.h **** {
  14:src/../h/PCB.h **** public:
  15:src/../h/PCB.h ****     using Body = void (*)(void*);
  16:src/../h/PCB.h **** 
  17:src/../h/PCB.h ****     PCB(Body body,  void* args, void* stack_space, uint64 timeSlice);
  18:src/../h/PCB.h ****     ~PCB();
  19:src/../h/PCB.h **** 
  20:src/../h/PCB.h ****     void start();
GAS LISTING /tmp/ccPBObma.s 			page 5


  21:src/../h/PCB.h ****     static void dispatch();
  22:src/../h/PCB.h ****     static void sleep(time_t);
  23:src/../h/PCB.h **** 
  24:src/../h/PCB.h ****     static PCB* running;
  25:src/../h/PCB.h ****     static PCB* exitingPCB;
  26:src/../h/PCB.h **** 
  27:src/../h/PCB.h ****     static uint64 timeSliceCounter;
  28:src/../h/PCB.h ****     uint64 getTimeSlice() { return timeSlice;}
  29:src/../h/PCB.h **** 
  30:src/../h/PCB.h ****     void* operator new(size_t size);
  31:src/../h/PCB.h ****     void operator delete(void *p);
  32:src/../h/PCB.h **** 
  33:src/../h/PCB.h ****     enum State{READY, RUNNING, SUSPENDED, FINISHED, EXITING};
  34:src/../h/PCB.h ****     State getState() {return state;}
  35:src/../h/PCB.h ****     void setState(State s) {state = s;}
  73              		.loc 3 35 29
  74              		.loc 3 35 35 is_stmt 0
  75 0058 93071000 		li	a5,1
  76 005c 2320F502 		sw	a5,32(a0)
  77              	.LVL6:
  78              	.LBE67:
  79              	.LBE66:
  18:src/Riscv.cpp ****     //todo
  19:src/Riscv.cpp ****     //no need for comment, but sync context switch
  20:src/Riscv.cpp ****     //should be tested, before hardware interrupts are enabled
  21:src/Riscv.cpp ****     //Riscv::enableInterrupts();
  22:src/Riscv.cpp **** }
  80              		.loc 1 22 1
  81 0060 83308101 		ld	ra,24(sp)
  82              		.cfi_remember_state
  83              		.cfi_restore 1
  84 0064 03340101 		ld	s0,16(sp)
  85              		.cfi_restore 8
  86              		.cfi_def_cfa 2, 32
  87 0068 83348100 		ld	s1,8(sp)
  88              		.cfi_restore 9
  89 006c 03390100 		ld	s2,0(sp)
  90              		.cfi_restore 18
  91 0070 13010102 		addi	sp,sp,32
  92              		.cfi_def_cfa_offset 0
  93 0074 67800000 		jr	ra
  94              	.L3:
  95              		.cfi_restore_state
  96 0078 13090500 		mv	s2,a0
  15:src/Riscv.cpp ****     PCB::running = Scheduler::get();
  97              		.loc 1 15 20
  98 007c 13850400 		mv	a0,s1
  99 0080 97000000 		call	_ZdlPv@plt
  99      E7800000 
 100              	.LVL7:
 101 0088 13050900 		mv	a0,s2
 102              	.LEHB3:
 103 008c 97000000 		call	_Unwind_Resume@plt
 103      E7800000 
 104              	.LVL8:
 105              	.LEHE3:
 106              		.cfi_endproc
GAS LISTING /tmp/ccPBObma.s 			page 6


 107              	.LFE19:
 108              		.globl	__gxx_personality_v0
 109              		.section	.gcc_except_table,"a",@progbits
 110              	.LLSDA19:
 111 0000 FF       		.byte	0xff
 112 0001 FF       		.byte	0xff
 113 0002 03       		.byte	0x3
 114 0003 34       		.byte	0x34
 115 0004 00000000 		.4byte	.LEHB0-.LFB19
 116 0008 00000000 		.4byte	.LEHE0-.LEHB0
 117 000c 00000000 		.4byte	0
 118 0010 00       		.byte	0
 119 0011 00000000 		.4byte	.LEHB1-.LFB19
 120 0015 00000000 		.4byte	.LEHE1-.LEHB1
 121 0019 00000000 		.4byte	.L3-.LFB19
 122 001d 00       		.byte	0
 123 001e 00000000 		.4byte	.LEHB2-.LFB19
 124 0022 00000000 		.4byte	.LEHE2-.LEHB2
 125 0026 00000000 		.4byte	0
 126 002a 00       		.byte	0
 127 002b 00000000 		.4byte	.LEHB3-.LFB19
 128 002f 00000000 		.4byte	.LEHE3-.LEHB3
 129 0033 00000000 		.4byte	0
 130 0037 00       		.byte	0
 131              		.text
 133              		.align	2
 134              		.globl	_ZN5Riscv16enableInterruptsEv
 136              	_ZN5Riscv16enableInterruptsEv:
 137              	.LFB21:
  23:src/Riscv.cpp **** 
  24:src/Riscv.cpp **** void Riscv::endSystem() {
  25:src/Riscv.cpp ****     //todo
  26:src/Riscv.cpp ****     //da li treba jos nesto da se ocisti
  27:src/Riscv.cpp ****     Riscv::disableInterrupts();
  28:src/Riscv.cpp **** }
  29:src/Riscv.cpp **** 
  30:src/Riscv.cpp **** 
  31:src/Riscv.cpp **** void Riscv::enableInterrupts() {
 138              		.loc 1 31 32 is_stmt 1
 139              		.cfi_startproc
 140 0094 130101FF 		addi	sp,sp,-16
 141              		.cfi_def_cfa_offset 16
 142 0098 23348100 		sd	s0,8(sp)
 143              		.cfi_offset 8, -8
 144 009c 13040101 		addi	s0,sp,16
 145              		.cfi_def_cfa 8, 0
  32:src/Riscv.cpp ****     ms_sstatus(Riscv::SSTATUS_SIE);
 146              		.loc 1 32 5
 147              	.LVL9:
 148              	.LBB68:
 149              	.LBB69:
 116:src/../h/Riscv.h **** 
 117:src/../h/Riscv.h **** inline uint64 Riscv::r_stval() {
 118:src/../h/Riscv.h ****     uint64 volatile stval;
 119:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, stval" : "=r"(stval));
 120:src/../h/Riscv.h ****     return stval;
 121:src/../h/Riscv.h **** }
GAS LISTING /tmp/ccPBObma.s 			page 7


 122:src/../h/Riscv.h **** 
 123:src/../h/Riscv.h **** inline void Riscv::w_stval(uint64 stval) {
 124:src/../h/Riscv.h ****     __asm__ volatile("csrw stval, %0" : :"r"(stval));
 125:src/../h/Riscv.h **** }
 126:src/../h/Riscv.h **** 
 127:src/../h/Riscv.h **** inline void Riscv::ms_sip(uint64 mask) {
 128:src/../h/Riscv.h ****     __asm__ volatile("csrs sip, %0" : :"r"(mask));
 129:src/../h/Riscv.h **** }
 130:src/../h/Riscv.h **** 
 131:src/../h/Riscv.h **** inline void Riscv::mc_sip(uint64 mask) {
 132:src/../h/Riscv.h ****     __asm__ volatile("csrc sip, %0" : :"r"(mask));
 133:src/../h/Riscv.h **** }
 134:src/../h/Riscv.h **** 
 135:src/../h/Riscv.h **** inline uint64 Riscv::r_sip() {
 136:src/../h/Riscv.h ****     uint64 volatile sip;
 137:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, sip" : "=r"(sip));
 138:src/../h/Riscv.h ****     return sip;
 139:src/../h/Riscv.h **** }
 140:src/../h/Riscv.h **** 
 141:src/../h/Riscv.h **** inline void Riscv::w_sip(uint64 sip) {
 142:src/../h/Riscv.h ****     __asm__ volatile("csrw sip, %0" : :"r"(sip));
 143:src/../h/Riscv.h **** }
 144:src/../h/Riscv.h **** 
 145:src/../h/Riscv.h **** inline void Riscv::ms_sstatus(uint64 mask) {
 146:src/../h/Riscv.h ****     __asm__ volatile("csrs sstatus, %0" : :"r"(mask));
 150              		.loc 2 146 5
 151              		.loc 2 146 54 is_stmt 0
 152 00a0 93072000 		li	a5,2
 153              	#APP
 154              	# 146 "src/../h/Riscv.h" 1
 147              	}
 155              		csrs sstatus, a5
 156              	# 0 "" 2
 157              	.LVL10:
 158              	#NO_APP
 159              	.LBE69:
 160              	.LBE68:
  33:src/Riscv.cpp **** }
 161              		.loc 1 33 1
 162 00a8 03348100 		ld	s0,8(sp)
 163              		.cfi_restore 8
 164              		.cfi_def_cfa 2, 16
 165 00ac 13010101 		addi	sp,sp,16
 166              		.cfi_def_cfa_offset 0
 167 00b0 67800000 		jr	ra
 168              		.cfi_endproc
 169              	.LFE21:
 171              		.align	2
 172              		.globl	_ZN5Riscv17disableInterruptsEv
 174              	_ZN5Riscv17disableInterruptsEv:
 175              	.LFB22:
  34:src/Riscv.cpp **** 
  35:src/Riscv.cpp **** void Riscv::disableInterrupts()
  36:src/Riscv.cpp **** {
 176              		.loc 1 36 1 is_stmt 1
 177              		.cfi_startproc
 178 00b4 130101FF 		addi	sp,sp,-16
GAS LISTING /tmp/ccPBObma.s 			page 8


 179              		.cfi_def_cfa_offset 16
 180 00b8 23348100 		sd	s0,8(sp)
 181              		.cfi_offset 8, -8
 182 00bc 13040101 		addi	s0,sp,16
 183              		.cfi_def_cfa 8, 0
  37:src/Riscv.cpp ****     mc_sstatus(Riscv::SSTATUS_SIE);
 184              		.loc 1 37 5
 185              	.LVL11:
 186              	.LBB70:
 187              	.LBB71:
 148:src/../h/Riscv.h **** 
 149:src/../h/Riscv.h **** inline void Riscv::mc_sstatus(uint64 mask) {
 150:src/../h/Riscv.h ****     __asm__ volatile("csrc sstatus, %0" : :"r"(mask));
 188              		.loc 2 150 5
 189              		.loc 2 150 54 is_stmt 0
 190 00c0 93072000 		li	a5,2
 191              	#APP
 192              	# 150 "src/../h/Riscv.h" 1
 151              	}
 193              		csrc sstatus, a5
 194              	# 0 "" 2
 195              	.LVL12:
 196              	#NO_APP
 197              	.LBE71:
 198              	.LBE70:
  38:src/Riscv.cpp **** }
 199              		.loc 1 38 1
 200 00c8 03348100 		ld	s0,8(sp)
 201              		.cfi_restore 8
 202              		.cfi_def_cfa 2, 16
 203 00cc 13010101 		addi	sp,sp,16
 204              		.cfi_def_cfa_offset 0
 205 00d0 67800000 		jr	ra
 206              		.cfi_endproc
 207              	.LFE22:
 209              		.align	2
 210              		.globl	_ZN5Riscv9endSystemEv
 212              	_ZN5Riscv9endSystemEv:
 213              	.LFB20:
  24:src/Riscv.cpp ****     //todo
 214              		.loc 1 24 25 is_stmt 1
 215              		.cfi_startproc
 216 00d4 130101FF 		addi	sp,sp,-16
 217              		.cfi_def_cfa_offset 16
 218 00d8 23341100 		sd	ra,8(sp)
 219 00dc 23308100 		sd	s0,0(sp)
 220              		.cfi_offset 1, -8
 221              		.cfi_offset 8, -16
 222 00e0 13040101 		addi	s0,sp,16
 223              		.cfi_def_cfa 8, 0
  27:src/Riscv.cpp **** }
 224              		.loc 1 27 5
  27:src/Riscv.cpp **** }
 225              		.loc 1 27 29 is_stmt 0
 226 00e4 97000000 		call	_ZN5Riscv17disableInterruptsEv
 226      E7800000 
 227              	.LVL13:
GAS LISTING /tmp/ccPBObma.s 			page 9


  28:src/Riscv.cpp **** 
 228              		.loc 1 28 1
 229 00ec 83308100 		ld	ra,8(sp)
 230              		.cfi_restore 1
 231 00f0 03340100 		ld	s0,0(sp)
 232              		.cfi_restore 8
 233              		.cfi_def_cfa 2, 16
 234 00f4 13010101 		addi	sp,sp,16
 235              		.cfi_def_cfa_offset 0
 236 00f8 67800000 		jr	ra
 237              		.cfi_endproc
 238              	.LFE20:
 240              		.align	2
 241              		.globl	_ZN5Riscv10popSppSpieEv
 243              	_ZN5Riscv10popSppSpieEv:
 244              	.LFB23:
  39:src/Riscv.cpp **** 
  40:src/Riscv.cpp **** void Riscv::popSppSpie() {
 245              		.loc 1 40 26 is_stmt 1
 246              		.cfi_startproc
 247 00fc 130101FF 		addi	sp,sp,-16
 248              		.cfi_def_cfa_offset 16
 249 0100 23348100 		sd	s0,8(sp)
 250              		.cfi_offset 8, -8
 251 0104 13040101 		addi	s0,sp,16
 252              		.cfi_def_cfa 8, 0
  41:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
 253              		.loc 1 41 5
 254              		.loc 1 41 39 is_stmt 0
 255              	#APP
 256              	# 41 "src/Riscv.cpp" 1
  42              	    __asm__ volatile ("sret");
 257              		csrw sepc, ra
 258              	# 0 "" 2
 259              		.loc 1 42 5 is_stmt 1
 260              		.loc 1 42 30 is_stmt 0
 261              	# 42 "src/Riscv.cpp" 1
  43              	}
 262              		sret
 263              	# 0 "" 2
 264              		.loc 1 43 1
 265              	#NO_APP
 266 0110 03348100 		ld	s0,8(sp)
 267              		.cfi_restore 8
 268              		.cfi_def_cfa 2, 16
 269 0114 13010101 		addi	sp,sp,16
 270              		.cfi_def_cfa_offset 0
 271 0118 67800000 		jr	ra
 272              		.cfi_endproc
 273              	.LFE23:
 275              		.align	2
 276              		.globl	_ZN5Riscv11printStringEPKc
 278              	_ZN5Riscv11printStringEPKc:
 279              	.LFB24:
  44:src/Riscv.cpp **** 
  45:src/Riscv.cpp **** void Riscv::printString(const char *string)
  46:src/Riscv.cpp **** {
GAS LISTING /tmp/ccPBObma.s 			page 10


 280              		.loc 1 46 1 is_stmt 1
 281              		.cfi_startproc
 282              	.LVL14:
 283 011c 130101FD 		addi	sp,sp,-48
 284              		.cfi_def_cfa_offset 48
 285 0120 23341102 		sd	ra,40(sp)
 286 0124 23308102 		sd	s0,32(sp)
 287 0128 233C9100 		sd	s1,24(sp)
 288 012c 23382101 		sd	s2,16(sp)
 289              		.cfi_offset 1, -8
 290              		.cfi_offset 8, -16
 291              		.cfi_offset 9, -24
 292              		.cfi_offset 18, -32
 293 0130 13040103 		addi	s0,sp,48
 294              		.cfi_def_cfa 8, 0
 295 0134 93040500 		mv	s1,a0
  47:src/Riscv.cpp ****     uint64 sstatus = r_sstatus();
 296              		.loc 1 47 5
 297              	.LBB72:
 298              	.LBB73:
 152:src/../h/Riscv.h **** 
 153:src/../h/Riscv.h **** inline uint64 Riscv::r_sstatus() {
 154:src/../h/Riscv.h ****     uint64 volatile sstatus;
 299              		.loc 2 154 5
 155:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 300              		.loc 2 155 5
 301              		.loc 2 155 57 is_stmt 0
 302              	#APP
 303              	# 155 "src/../h/Riscv.h" 1
 156              	    return sstatus;
 304              		csrr a5, sstatus
 305              	# 0 "" 2
 306              	#NO_APP
 307 013c 233CF4FC 		sd	a5,-40(s0)
 308              		.loc 2 156 5 is_stmt 1
 309              		.loc 2 156 12 is_stmt 0
 310 0140 033984FD 		ld	s2,-40(s0)
 311              	.LVL15:
 312              	.LBE73:
 313              	.LBE72:
  48:src/Riscv.cpp ****     mc_sstatus(SSTATUS_SIE);
 314              		.loc 1 48 5 is_stmt 1
 315              	.LBB74:
 316              	.LBB75:
 150:src/../h/Riscv.h **** }
 317              		.loc 2 150 5
 150:src/../h/Riscv.h **** }
 318              		.loc 2 150 54 is_stmt 0
 319 0144 93072000 		li	a5,2
 320              	#APP
 321              	# 150 "src/../h/Riscv.h" 1
 322              		csrc sstatus, a5
 323              	# 0 "" 2
 324              	.LVL16:
 325              	#NO_APP
 326              	.L16:
 327              	.LBE75:
GAS LISTING /tmp/ccPBObma.s 			page 11


 328              	.LBE74:
  49:src/Riscv.cpp ****     while (*string != '\0')
 329              		.loc 1 49 5 is_stmt 1
 330              		.loc 1 49 20
 331              		.loc 1 49 12 is_stmt 0
 332 014c 03C50400 		lbu	a0,0(s1)
 333              		.loc 1 49 20
 334 0150 630A0500 		beqz	a0,.L15
  50:src/Riscv.cpp ****     {
  51:src/Riscv.cpp ****         __putc(*string);
 335              		.loc 1 51 9 is_stmt 1
 336              		.loc 1 51 15 is_stmt 0
 337 0154 97000000 		call	__putc@plt
 337      E7800000 
 338              	.LVL17:
  52:src/Riscv.cpp ****         string++;
 339              		.loc 1 52 9 is_stmt 1
 340              		.loc 1 52 15 is_stmt 0
 341 015c 93841400 		addi	s1,s1,1
 342              	.LVL18:
  49:src/Riscv.cpp ****     while (*string != '\0')
 343              		.loc 1 49 5
 344 0160 6FF0DFFE 		j	.L16
 345              	.L15:
  53:src/Riscv.cpp ****     }
  54:src/Riscv.cpp ****     ms_sstatus(sstatus & SSTATUS_SIE ? SSTATUS_SIE : 0);
 346              		.loc 1 54 5 is_stmt 1
 347              		.loc 1 54 38 is_stmt 0
 348 0164 1B090900 		sext.w	s2,s2
 349              	.LVL19:
 350              		.loc 1 54 15
 351 0168 13792900 		andi	s2,s2,2
 352 016c 1B090900 		sext.w	s2,s2
 353              	.LVL20:
 354              	.LBB76:
 355              	.LBB77:
 146:src/../h/Riscv.h **** }
 356              		.loc 2 146 5 is_stmt 1
 146:src/../h/Riscv.h **** }
 357              		.loc 2 146 54 is_stmt 0
 358              	#APP
 359              	# 146 "src/../h/Riscv.h" 1
 360              		csrs sstatus, s2
 361              	# 0 "" 2
 362              	.LVL21:
 363              	#NO_APP
 364              	.LBE77:
 365              	.LBE76:
  55:src/Riscv.cpp **** }
 366              		.loc 1 55 1
 367 0174 83308102 		ld	ra,40(sp)
 368              		.cfi_restore 1
 369 0178 03340102 		ld	s0,32(sp)
 370              		.cfi_restore 8
 371              		.cfi_def_cfa 2, 48
 372 017c 83348101 		ld	s1,24(sp)
 373              		.cfi_restore 9
GAS LISTING /tmp/ccPBObma.s 			page 12


 374              	.LVL22:
 375 0180 03390101 		ld	s2,16(sp)
 376              		.cfi_restore 18
 377 0184 13010103 		addi	sp,sp,48
 378              		.cfi_def_cfa_offset 0
 379 0188 67800000 		jr	ra
 380              		.cfi_endproc
 381              	.LFE24:
 383              		.align	2
 384              		.globl	_ZN5Riscv12printIntegerEm
 386              	_ZN5Riscv12printIntegerEm:
 387              	.LFB25:
  56:src/Riscv.cpp **** 
  57:src/Riscv.cpp **** void Riscv::printInteger(uint64 num)
  58:src/Riscv.cpp **** {
 388              		.loc 1 58 1 is_stmt 1
 389              		.cfi_startproc
 390              	.LVL23:
 391 018c 130101FC 		addi	sp,sp,-64
 392              		.cfi_def_cfa_offset 64
 393 0190 233C1102 		sd	ra,56(sp)
 394 0194 23388102 		sd	s0,48(sp)
 395 0198 23349102 		sd	s1,40(sp)
 396 019c 23302103 		sd	s2,32(sp)
 397              		.cfi_offset 1, -8
 398              		.cfi_offset 8, -16
 399              		.cfi_offset 9, -24
 400              		.cfi_offset 18, -32
 401 01a0 13040104 		addi	s0,sp,64
 402              		.cfi_def_cfa 8, 0
  59:src/Riscv.cpp ****     uint64 sstatus = r_sstatus();
 403              		.loc 1 59 5
 404              	.LBB78:
 405              	.LBB79:
 154:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 406              		.loc 2 154 5
 155:src/../h/Riscv.h ****     return sstatus;
 407              		.loc 2 155 5
 155:src/../h/Riscv.h ****     return sstatus;
 408              		.loc 2 155 57 is_stmt 0
 409              	#APP
 410              	# 155 "src/../h/Riscv.h" 1
 411              		csrr a5, sstatus
 412              	# 0 "" 2
 413              	#NO_APP
 414 01a8 2334F4FC 		sd	a5,-56(s0)
 415              		.loc 2 156 5 is_stmt 1
 416              		.loc 2 156 12 is_stmt 0
 417 01ac 033984FC 		ld	s2,-56(s0)
 418              	.LVL24:
 419              	.LBE79:
 420              	.LBE78:
  60:src/Riscv.cpp ****     mc_sstatus(SSTATUS_SIE);
 421              		.loc 1 60 5 is_stmt 1
 422              	.LBB80:
 423              	.LBB81:
 150:src/../h/Riscv.h **** }
GAS LISTING /tmp/ccPBObma.s 			page 13


 424              		.loc 2 150 5
 150:src/../h/Riscv.h **** }
 425              		.loc 2 150 54 is_stmt 0
 426 01b0 93072000 		li	a5,2
 427              	#APP
 428              	# 150 "src/../h/Riscv.h" 1
 429              		csrc sstatus, a5
 430              	# 0 "" 2
 431              	.LVL25:
 432              	#NO_APP
 433              	.LBE81:
 434              	.LBE80:
  61:src/Riscv.cpp ****     static char digits[] = "0123456789";
 435              		.loc 1 61 5 is_stmt 1
  62:src/Riscv.cpp ****     char buf[16];
 436              		.loc 1 62 5
  63:src/Riscv.cpp ****     int i, neg;
 437              		.loc 1 63 5
  64:src/Riscv.cpp ****     uint x;
 438              		.loc 1 64 5
  65:src/Riscv.cpp **** 
  66:src/Riscv.cpp ****     neg = 0;
 439              		.loc 1 66 5
  67:src/Riscv.cpp ****     if(num < 0)
 440              		.loc 1 67 5
  68:src/Riscv.cpp ****     {
  69:src/Riscv.cpp ****         neg = 1;
  70:src/Riscv.cpp ****         x = -num;
  71:src/Riscv.cpp ****     }
  72:src/Riscv.cpp ****     else
  73:src/Riscv.cpp ****         x = num;
 441              		.loc 1 73 9
 442              		.loc 1 73 11 is_stmt 0
 443 01b8 1B050500 		sext.w	a0,a0
 444              	.LVL26:
  74:src/Riscv.cpp **** 
  75:src/Riscv.cpp ****     i = 0;
 445              		.loc 1 75 5 is_stmt 1
 446              		.loc 1 75 7 is_stmt 0
 447 01bc 93040000 		li	s1,0
 448              	.LVL27:
 449              	.L19:
  76:src/Riscv.cpp ****     do
 450              		.loc 1 76 5 is_stmt 1
  77:src/Riscv.cpp ****     {
  78:src/Riscv.cpp ****         buf[i++] = digits[x%10];
 451              		.loc 1 78 9
 452              		.loc 1 78 28 is_stmt 0
 453 01c0 1306A000 		li	a2,10
 454 01c4 3B77C502 		remuw	a4,a0,a2
 455              	.LVL28:
 456              		.loc 1 78 31
 457 01c8 93160702 		slli	a3,a4,32
 458 01cc 93D60602 		srli	a3,a3,32
 459 01d0 17070000 		lla	a4,.LANCHOR0
 459      13070700 
 460 01d8 3307D700 		add	a4,a4,a3
GAS LISTING /tmp/ccPBObma.s 			page 14


 461 01dc 03470700 		lbu	a4,0(a4)
 462              		.loc 1 78 18
 463 01e0 930604FE 		addi	a3,s0,-32
 464 01e4 B3879600 		add	a5,a3,s1
 465 01e8 9B841400 		addiw	s1,s1,1
 466              	.LVL29:
 467 01ec 2388E7FE 		sb	a4,-16(a5)
  79:src/Riscv.cpp ****     }while((x/=10) != 0);
 468              		.loc 1 79 20 is_stmt 1
 469 01f0 1B070500 		sext.w	a4,a0
 470              		.loc 1 79 14 is_stmt 0
 471 01f4 3B55C502 		divuw	a0,a0,a2
 472              	.LVL30:
 473              		.loc 1 79 20
 474 01f8 93079000 		li	a5,9
 475 01fc E3E2E7FC 		bgtu	a4,a5,.L19
 476              	.LVL31:
 477              	.L21:
  80:src/Riscv.cpp ****     if(neg)
  81:src/Riscv.cpp ****         buf[i++] = '-';
  82:src/Riscv.cpp **** 
  83:src/Riscv.cpp ****     while(--i >= 0)
 478              		.loc 1 83 5 is_stmt 1
 479              		.loc 1 83 15
 480 0200 9B84F4FF 		addiw	s1,s1,-1
 481              	.LVL32:
 482 0204 63CE0400 		bltz	s1,.L20
  84:src/Riscv.cpp ****         __putc(buf[i]);
 483              		.loc 1 84 9
 484              		.loc 1 84 15 is_stmt 0
 485 0208 930704FE 		addi	a5,s0,-32
 486 020c B3879700 		add	a5,a5,s1
 487 0210 03C507FF 		lbu	a0,-16(a5)
 488 0214 97000000 		call	__putc@plt
 488      E7800000 
 489              	.LVL33:
 490 021c 6FF05FFE 		j	.L21
 491              	.L20:
  85:src/Riscv.cpp **** 
  86:src/Riscv.cpp ****     __putc('\n');
 492              		.loc 1 86 5 is_stmt 1
 493              		.loc 1 86 11 is_stmt 0
 494 0220 1305A000 		li	a0,10
 495 0224 97000000 		call	__putc@plt
 495      E7800000 
 496              	.LVL34:
  87:src/Riscv.cpp **** 
  88:src/Riscv.cpp ****     ms_sstatus(sstatus & SSTATUS_SIE ? SSTATUS_SIE : 0);
 497              		.loc 1 88 5 is_stmt 1
 498              		.loc 1 88 38 is_stmt 0
 499 022c 1B090900 		sext.w	s2,s2
 500              	.LVL35:
 501              		.loc 1 88 15
 502 0230 13792900 		andi	s2,s2,2
 503 0234 1B090900 		sext.w	s2,s2
 504              	.LVL36:
 505              	.LBB82:
GAS LISTING /tmp/ccPBObma.s 			page 15


 506              	.LBB83:
 146:src/../h/Riscv.h **** }
 507              		.loc 2 146 5 is_stmt 1
 146:src/../h/Riscv.h **** }
 508              		.loc 2 146 54 is_stmt 0
 509              	#APP
 510              	# 146 "src/../h/Riscv.h" 1
 511              		csrs sstatus, s2
 512              	# 0 "" 2
 513              	.LVL37:
 514              	#NO_APP
 515              	.LBE83:
 516              	.LBE82:
  89:src/Riscv.cpp **** }
 517              		.loc 1 89 1
 518 023c 83308103 		ld	ra,56(sp)
 519              		.cfi_restore 1
 520 0240 03340103 		ld	s0,48(sp)
 521              		.cfi_restore 8
 522              		.cfi_def_cfa 2, 64
 523 0244 83348102 		ld	s1,40(sp)
 524              		.cfi_restore 9
 525 0248 03390102 		ld	s2,32(sp)
 526              		.cfi_restore 18
 527 024c 13010104 		addi	sp,sp,64
 528              		.cfi_def_cfa_offset 0
 529 0250 67800000 		jr	ra
 530              		.cfi_endproc
 531              	.LFE25:
 533              		.section	.rodata.str1.8,"aMS",@progbits,1
 534              		.align	3
 535              	.LC0:
 536 0000 74696D65 		.string	"timerInterrupt\n"
 536      72496E74 
 536      65727275 
 536      70740A00 
 537              		.text
 538              		.align	2
 539              		.globl	_ZN5Riscv20handleSupervisorTrapEv
 541              	_ZN5Riscv20handleSupervisorTrapEv:
 542              	.LFB26:
  90:src/Riscv.cpp **** 
  91:src/Riscv.cpp **** void Riscv::handleSupervisorTrap() {
 543              		.loc 1 91 36 is_stmt 1
 544              		.cfi_startproc
 545              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 546              		.cfi_lsda 0x1b,.LLSDA26
 547 0254 130101F9 		addi	sp,sp,-112
 548              		.cfi_def_cfa_offset 112
 549 0258 23341106 		sd	ra,104(sp)
 550 025c 23308106 		sd	s0,96(sp)
 551 0260 233C9104 		sd	s1,88(sp)
 552 0264 23382105 		sd	s2,80(sp)
 553 0268 23343105 		sd	s3,72(sp)
 554 026c 23304105 		sd	s4,64(sp)
 555 0270 233C5103 		sd	s5,56(sp)
 556 0274 23386103 		sd	s6,48(sp)
GAS LISTING /tmp/ccPBObma.s 			page 16


 557              		.cfi_offset 1, -8
 558              		.cfi_offset 8, -16
 559              		.cfi_offset 9, -24
 560              		.cfi_offset 18, -32
 561              		.cfi_offset 19, -40
 562              		.cfi_offset 20, -48
 563              		.cfi_offset 21, -56
 564              		.cfi_offset 22, -64
 565 0278 13040107 		addi	s0,sp,112
 566              		.cfi_def_cfa 8, 0
  92:src/Riscv.cpp **** 
  93:src/Riscv.cpp ****     uint64 a4;
 567              		.loc 1 93 5
  94:src/Riscv.cpp ****     __asm__ volatile("mv %0, a4" : "=r"(a4));
 568              		.loc 1 94 5
 569              		.loc 1 94 45 is_stmt 0
 570              	#APP
 571              	# 94 "src/Riscv.cpp" 1
  95              	
 572              		mv s2, a4
 573              	# 0 "" 2
 574              	.LVL38:
  96:src/Riscv.cpp ****     uint64 scause = Riscv::r_scause();
 575              		.loc 1 96 5 is_stmt 1
 576              	#NO_APP
 577              	.LBB84:
 578              	.LBB85:
  88:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
 579              		.loc 2 88 5
  89:src/../h/Riscv.h ****     return scause;
 580              		.loc 2 89 5
  89:src/../h/Riscv.h ****     return scause;
 581              		.loc 2 89 55 is_stmt 0
 582              	#APP
 583              	# 89 "src/../h/Riscv.h" 1
 584              		csrr a5, scause
 585              	# 0 "" 2
 586              	#NO_APP
 587 0284 2338F4F8 		sd	a5,-112(s0)
  90:src/../h/Riscv.h **** }
 588              		.loc 2 90 5 is_stmt 1
  90:src/../h/Riscv.h **** }
 589              		.loc 2 90 12 is_stmt 0
 590 0288 033704F9 		ld	a4,-112(s0)
 591              	.LVL39:
 592              	.LBE85:
 593              	.LBE84:
  97:src/Riscv.cpp ****     switch(scause) {
 594              		.loc 1 97 5 is_stmt 1
 595              	.LBB86:
 596 028c 93079000 		li	a5,9
 597 0290 63FCE704 		bleu	a4,a5,.L39
 598 0294 9307F0FF 		li	a5,-1
 599 0298 9397F703 		slli	a5,a5,63
 600 029c 93871700 		addi	a5,a5,1
 601 02a0 6318F704 		bne	a4,a5,.L26
 602              	.LBB87:
GAS LISTING /tmp/ccPBObma.s 			page 17


  98:src/Riscv.cpp **** 
  99:src/Riscv.cpp ****         case timerInterrupt:
 603              		.loc 1 99 9
 100:src/Riscv.cpp **** 
 101:src/Riscv.cpp ****             Riscv::printString("timerInterrupt\n");
 604              		.loc 1 101 13
 605              		.loc 1 101 31 is_stmt 0
 606 02a4 17050000 		lla	a0,.LC0
 606      13050500 
 607              	.LEHB4:
 608 02ac 97000000 		call	_ZN5Riscv11printStringEPKc
 608      E7800000 
 609              	.LVL40:
 102:src/Riscv.cpp ****             PCB::timeSliceCounter++;
 610              		.loc 1 102 13 is_stmt 1
 611              		.loc 1 102 34 is_stmt 0
 612 02b4 17070000 		la	a4,_ZN3PCB16timeSliceCounterE
 612      03370700 
 613 02bc 83370700 		ld	a5,0(a4)
 614 02c0 93871700 		addi	a5,a5,1
 615 02c4 2330F700 		sd	a5,0(a4)
 103:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice()) {
 616              		.loc 1 103 13 is_stmt 1
 617              	.LBB88:
 618              		.loc 1 103 68 is_stmt 0
 619 02c8 17070000 		la	a4,_ZN3PCB7runningE
 619      03370700 
 620 02d0 03370700 		ld	a4,0(a4)
 621              	.LVL41:
 622              	.LBB89:
 623              	.LBB90:
  28:src/../h/PCB.h **** 
 624              		.loc 3 28 29 is_stmt 1
  28:src/../h/PCB.h **** 
 625              		.loc 3 28 36 is_stmt 0
 626 02d4 03370700 		ld	a4,0(a4)
 627              	.LVL42:
 628              	.LBE90:
 629              	.LBE89:
 630              		.loc 1 103 13
 631 02d8 63F4E704 		bgeu	a5,a4,.L40
 632              	.LVL43:
 633              	.L27:
 634              	.LBE88:
 104:src/Riscv.cpp ****                 uint64 sepc = Riscv::r_sepc();
 105:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 106:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 107:src/Riscv.cpp ****                 PCB::dispatch();
 108:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 109:src/Riscv.cpp ****                 Riscv::w_sepc(sepc);
 110:src/Riscv.cpp ****             }
 111:src/Riscv.cpp **** 
 112:src/Riscv.cpp ****             Riscv::mc_sip(Riscv::SIP_SSIP);
 635              		.loc 1 112 13 is_stmt 1
 636              	.LBB100:
 637              	.LBB101:
 132:src/../h/Riscv.h **** }
GAS LISTING /tmp/ccPBObma.s 			page 18


 638              		.loc 2 132 5
 132:src/../h/Riscv.h **** }
 639              		.loc 2 132 50 is_stmt 0
 640 02dc 93072000 		li	a5,2
 641              	#APP
 642              	# 132 "src/../h/Riscv.h" 1
 133:src/../h/Riscv.h **** 
 643              		csrc sip, a5
 644              	# 0 "" 2
 645              		.loc 2 133 1
 646              	#NO_APP
 647 02e4 6F00C000 		j	.L26
 648              	.LVL44:
 649              	.L39:
 650              	.LBE101:
 651              	.LBE100:
 652              	.LBE87:
  97:src/Riscv.cpp **** 
 653              		.loc 1 97 5
 654 02e8 93078000 		li	a5,8
 655 02ec 6376F706 		bgeu	a4,a5,.L41
 656              	.LVL45:
 657              	.L26:
 658              	.LBE86:
 113:src/Riscv.cpp **** 
 114:src/Riscv.cpp ****             break;
 115:src/Riscv.cpp **** 
 116:src/Riscv.cpp ****         case hwInterrupt: // todo
 117:src/Riscv.cpp **** 
 118:src/Riscv.cpp ****             break;
 119:src/Riscv.cpp **** 
 120:src/Riscv.cpp ****         case operationInterrupt: // todo
 121:src/Riscv.cpp ****             break;
 122:src/Riscv.cpp **** 
 123:src/Riscv.cpp ****         case addrReadInterrupt: // todo
 124:src/Riscv.cpp ****             break;
 125:src/Riscv.cpp **** 
 126:src/Riscv.cpp ****         case addrWriteInterrupt: // todo
 127:src/Riscv.cpp ****             break;
 128:src/Riscv.cpp **** 
 129:src/Riscv.cpp ****         case ecallSystemInterupt:
 130:src/Riscv.cpp ****         case ecallUserInterrupt:
 131:src/Riscv.cpp **** 
 132:src/Riscv.cpp ****             uint64 operation;
 133:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
 134:src/Riscv.cpp **** 
 135:src/Riscv.cpp ****             uint64 sepc = Riscv::r_sepc();
 136:src/Riscv.cpp ****             sepc+=4;
 137:src/Riscv.cpp **** 
 138:src/Riscv.cpp ****             if(operation == MemoryAllocator::MEM_ALLOC) {
 139:src/Riscv.cpp ****                 size_t size;
 140:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(size));
 141:src/Riscv.cpp ****                 size*=MEM_BLOCK_SIZE;
 142:src/Riscv.cpp ****                 void* allocatedAddr = kmalloc(size);
 143:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : : "r"((uint64)allocatedAddr));
 144:src/Riscv.cpp ****             }
 145:src/Riscv.cpp ****             else if(operation == MemoryAllocator::MEM_FREE) {
GAS LISTING /tmp/ccPBObma.s 			page 19


 146:src/Riscv.cpp ****                 uint64 addr = 0;
 147:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(addr));
 148:src/Riscv.cpp ****                 uint64 retval = kfree((void*)addr);
 149:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 150:src/Riscv.cpp ****             }
 151:src/Riscv.cpp ****             else if(operation == PCB::THREAD_CREATE)
 152:src/Riscv.cpp ****             {
 153:src/Riscv.cpp ****                 //todo
 154:src/Riscv.cpp ****                 uint64 start_routine;
 155:src/Riscv.cpp ****                 uint64 args;
 156:src/Riscv.cpp ****                 PCB** threadHandle;
 157:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(threadHandle));
 158:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(start_routine));
 159:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a3" : "=r"(args));
 160:src/Riscv.cpp ****                 //uint64 stack_space;
 161:src/Riscv.cpp ****                 //__asm__ volatile("mv %0, a4" : "=r"(stack_space));
 162:src/Riscv.cpp **** 
 163:src/Riscv.cpp ****                 //todo
 164:src/Riscv.cpp ****                 //da li treba ovako ili tipa da se ne koristi new
 165:src/Riscv.cpp ****                 //nego direktno kmalloc - ali onda kako konstruktor
 166:src/Riscv.cpp ****                 //sta se desava ako preklopljeni new vrati 0
 167:src/Riscv.cpp ****                 PCB* newPCB = new PCB((void (*)(void*))start_routine, (void*)args, (void*)a4, 3UL);
 168:src/Riscv.cpp **** 
 169:src/Riscv.cpp ****                 (*threadHandle) = newPCB;
 170:src/Riscv.cpp **** 
 171:src/Riscv.cpp ****                 if(newPCB == 0)
 172:src/Riscv.cpp ****                     __asm__ volatile("li a0, 0xffffffffffffffff");
 173:src/Riscv.cpp ****                 else
 174:src/Riscv.cpp ****                     __asm__ volatile("li a0, 0");
 175:src/Riscv.cpp ****             }
 176:src/Riscv.cpp ****             else if(operation == PCB::THREAD_DISPATCH)
 177:src/Riscv.cpp ****             {
 178:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 179:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 180:src/Riscv.cpp ****                 PCB::dispatch();
 181:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 182:src/Riscv.cpp ****             }
 183:src/Riscv.cpp ****             else if(operation == PCB::THREAD_EXIT)
 184:src/Riscv.cpp ****             {
 185:src/Riscv.cpp ****                 if(PCB::running == 0)
 186:src/Riscv.cpp ****                 {
 187:src/Riscv.cpp ****                     __asm__ volatile("li a0, 0xffffffffffffffff");
 188:src/Riscv.cpp ****                     return;
 189:src/Riscv.cpp ****                 }
 190:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 191:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 192:src/Riscv.cpp ****                 PCB::exitingPCB = PCB::running;
 193:src/Riscv.cpp ****                 PCB::exitingPCB->setState(PCB::EXITING);
 194:src/Riscv.cpp ****                 //todo
 195:src/Riscv.cpp ****                 //da li se iz ovog dispatch-a neka nit vraca uopste
 196:src/Riscv.cpp ****                 PCB::dispatch();
 197:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 198:src/Riscv.cpp ****             }
 199:src/Riscv.cpp **** 
 200:src/Riscv.cpp **** 
 201:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 202:src/Riscv.cpp **** 
GAS LISTING /tmp/ccPBObma.s 			page 20


 203:src/Riscv.cpp ****             return;
 204:src/Riscv.cpp ****             //break;
 205:src/Riscv.cpp ****     }
 206:src/Riscv.cpp **** 
 207:src/Riscv.cpp ****     console_handler();
 659              		.loc 1 207 5 is_stmt 1
 660              		.loc 1 207 20 is_stmt 0
 661 02f0 97000000 		call	console_handler@plt
 661      E7800000 
 662              	.LVL46:
 663              	.L23:
 208:src/Riscv.cpp **** }
 664              		.loc 1 208 1
 665 02f8 83308106 		ld	ra,104(sp)
 666              		.cfi_remember_state
 667              		.cfi_restore 1
 668 02fc 03340106 		ld	s0,96(sp)
 669              		.cfi_restore 8
 670              		.cfi_def_cfa 2, 112
 671 0300 83348105 		ld	s1,88(sp)
 672              		.cfi_restore 9
 673 0304 03390105 		ld	s2,80(sp)
 674              		.cfi_restore 18
 675 0308 83398104 		ld	s3,72(sp)
 676              		.cfi_restore 19
 677 030c 033A0104 		ld	s4,64(sp)
 678              		.cfi_restore 20
 679 0310 833A8103 		ld	s5,56(sp)
 680              		.cfi_restore 21
 681 0314 033B0103 		ld	s6,48(sp)
 682              		.cfi_restore 22
 683 0318 13010107 		addi	sp,sp,112
 684              		.cfi_def_cfa_offset 0
 685 031c 67800000 		jr	ra
 686              	.LVL47:
 687              	.L40:
 688              		.cfi_restore_state
 689              	.LBB148:
 690              	.LBB143:
 691              	.LBB102:
 692              	.LBB91:
 104:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 693              		.loc 1 104 17 is_stmt 1
 694              	.LBB92:
 695              	.LBB93:
  98:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 696              		.loc 2 98 5
  99:src/../h/Riscv.h ****     return sepc;
 697              		.loc 2 99 5
  99:src/../h/Riscv.h ****     return sepc;
 698              		.loc 2 99 51 is_stmt 0
 699              	#APP
 700              	# 99 "src/../h/Riscv.h" 1
 701              		csrr a5, sepc
 702              	# 0 "" 2
 703              	#NO_APP
 704 0324 2330F4FA 		sd	a5,-96(s0)
GAS LISTING /tmp/ccPBObma.s 			page 21


 100:src/../h/Riscv.h **** }
 705              		.loc 2 100 5 is_stmt 1
 100:src/../h/Riscv.h **** }
 706              		.loc 2 100 12 is_stmt 0
 707 0328 833404FA 		ld	s1,-96(s0)
 708              	.LVL48:
 709              	.LBE93:
 710              	.LBE92:
 105:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 711              		.loc 1 105 17 is_stmt 1
 712              	.LBB94:
 713              	.LBB95:
 154:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 714              		.loc 2 154 5
 155:src/../h/Riscv.h ****     return sstatus;
 715              		.loc 2 155 5
 155:src/../h/Riscv.h ****     return sstatus;
 716              		.loc 2 155 57 is_stmt 0
 717              	#APP
 718              	# 155 "src/../h/Riscv.h" 1
 719              		csrr a5, sstatus
 720              	# 0 "" 2
 721              	#NO_APP
 722 0330 233CF4F8 		sd	a5,-104(s0)
 723              		.loc 2 156 5 is_stmt 1
 724              		.loc 2 156 12 is_stmt 0
 725 0334 033984F9 		ld	s2,-104(s0)
 726              	.LVL49:
 727              	.LBE95:
 728              	.LBE94:
 106:src/Riscv.cpp ****                 PCB::dispatch();
 729              		.loc 1 106 17 is_stmt 1
 106:src/Riscv.cpp ****                 PCB::dispatch();
 730              		.loc 1 106 39 is_stmt 0
 731 0338 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 731      83B70700 
 732 0340 23B00700 		sd	zero,0(a5)
 107:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 733              		.loc 1 107 17 is_stmt 1
 107:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 734              		.loc 1 107 30 is_stmt 0
 735 0344 97000000 		call	_ZN3PCB8dispatchEv@plt
 735      E7800000 
 736              	.LVL50:
 108:src/Riscv.cpp ****                 Riscv::w_sepc(sepc);
 737              		.loc 1 108 17 is_stmt 1
 738              	.LBB96:
 739              	.LBB97:
 157:src/../h/Riscv.h **** }
 158:src/../h/Riscv.h **** 
 159:src/../h/Riscv.h **** inline void Riscv::w_sstatus(uint64 sstatus) {
 160:src/../h/Riscv.h ****     __asm__ volatile("csrw sstatus, %0" : :"r"(sstatus));
 740              		.loc 2 160 5
 741              		.loc 2 160 57 is_stmt 0
 742              	#APP
 743              	# 160 "src/../h/Riscv.h" 1
 161              	}
GAS LISTING /tmp/ccPBObma.s 			page 22


 744              		csrw sstatus, s2
 745              	# 0 "" 2
 746              	.LVL51:
 747              	#NO_APP
 748              	.LBE97:
 749              	.LBE96:
 109:src/Riscv.cpp ****             }
 750              		.loc 1 109 17 is_stmt 1
 751              	.LBB98:
 752              	.LBB99:
 104:src/../h/Riscv.h **** }
 753              		.loc 2 104 5
 104:src/../h/Riscv.h **** }
 754              		.loc 2 104 51 is_stmt 0
 755              	#APP
 756              	# 104 "src/../h/Riscv.h" 1
 105:src/../h/Riscv.h **** 
 757              		csrw sepc, s1
 758              	# 0 "" 2
 759              		.loc 2 105 1
 760              	#NO_APP
 761 0354 6FF09FF8 		j	.L27
 762              	.LVL52:
 763              	.L41:
 764              	.LBE99:
 765              	.LBE98:
 766              	.LBE91:
 767              	.LBE102:
 129:src/Riscv.cpp ****         case ecallUserInterrupt:
 768              		.loc 1 129 9 is_stmt 1
 130:src/Riscv.cpp **** 
 769              		.loc 1 130 9
 132:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
 770              		.loc 1 132 13
 133:src/Riscv.cpp **** 
 771              		.loc 1 133 13
 133:src/Riscv.cpp **** 
 772              		.loc 1 133 61 is_stmt 0
 773              	#APP
 774              	# 133 "src/Riscv.cpp" 1
 775              		mv a5, a0
 776              	# 0 "" 2
 777              	.LVL53:
 135:src/Riscv.cpp ****             sepc+=4;
 778              		.loc 1 135 13 is_stmt 1
 779              	#NO_APP
 780              	.LBB103:
 781              	.LBB104:
  98:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 782              		.loc 2 98 5
  99:src/../h/Riscv.h ****     return sepc;
 783              		.loc 2 99 5
  99:src/../h/Riscv.h ****     return sepc;
 784              		.loc 2 99 51 is_stmt 0
 785              	#APP
 786              	# 99 "src/../h/Riscv.h" 1
 787              		csrr a4, sepc
GAS LISTING /tmp/ccPBObma.s 			page 23


 788              	# 0 "" 2
 789              	.LVL54:
 790              	#NO_APP
 791 0360 2334E4FA 		sd	a4,-88(s0)
 100:src/../h/Riscv.h **** }
 792              		.loc 2 100 5 is_stmt 1
 100:src/../h/Riscv.h **** }
 793              		.loc 2 100 12 is_stmt 0
 794 0364 033784FA 		ld	a4,-88(s0)
 795              	.LVL55:
 796              	.LBE104:
 797              	.LBE103:
 136:src/Riscv.cpp **** 
 798              		.loc 1 136 13 is_stmt 1
 136:src/Riscv.cpp **** 
 799              		.loc 1 136 17 is_stmt 0
 800 0368 93044700 		addi	s1,a4,4
 801              	.LVL56:
 138:src/Riscv.cpp ****                 size_t size;
 802              		.loc 1 138 13 is_stmt 1
 803              	.LBB105:
 804 036c 13071000 		li	a4,1
 805 0370 6386E702 		beq	a5,a4,.L42
 806              	.LBE105:
 807              	.LBE143:
 808              	.LBE148:
 145:src/Riscv.cpp ****                 uint64 addr = 0;
 809              		.loc 1 145 18
 810              	.LBB149:
 811              	.LBB144:
 812              	.LBB136:
 813              	.LBB106:
 814 0374 13072000 		li	a4,2
 815 0378 638EE702 		beq	a5,a4,.L43
 816              	.LBE106:
 817              	.LBE136:
 818              	.LBE144:
 819              	.LBE149:
 151:src/Riscv.cpp ****             {
 820              		.loc 1 151 18
 821              	.LBB150:
 822              	.LBB145:
 823              	.LBB137:
 824              	.LBB131:
 825              	.LBB107:
 826 037c 13071001 		li	a4,17
 827 0380 6384E704 		beq	a5,a4,.L44
 828              	.LBE107:
 829              	.LBE131:
 830              	.LBE137:
 831              	.LBE145:
 832              	.LBE150:
 176:src/Riscv.cpp ****             {
 833              		.loc 1 176 18
 834              	.LBB151:
 835              	.LBB146:
 836              	.LBB138:
GAS LISTING /tmp/ccPBObma.s 			page 24


 837              	.LBB132:
 838              	.LBB127:
 839              	.LBB108:
 840 0384 13073001 		li	a4,19
 841 0388 6386E708 		beq	a5,a4,.L45
 842              	.LBE108:
 843              	.LBE127:
 844              	.LBE132:
 845              	.LBE138:
 846              	.LBE146:
 847              	.LBE151:
 183:src/Riscv.cpp ****             {
 848              		.loc 1 183 18
 849              	.LBB152:
 850              	.LBB147:
 851              	.LBB139:
 852              	.LBB133:
 853              	.LBB128:
 854              	.LBB123:
 855              	.LBB109:
 856 038c 13072001 		li	a4,18
 857 0390 6386E70A 		beq	a5,a4,.L46
 858              	.LVL57:
 859              	.L29:
 860              	.LBE109:
 861              	.LBE123:
 862              	.LBE128:
 863              	.LBE133:
 864              	.LBE139:
 201:src/Riscv.cpp **** 
 865              		.loc 1 201 13
 866              	.LBB140:
 867              	.LBB141:
 104:src/../h/Riscv.h **** }
 868              		.loc 2 104 5
 104:src/../h/Riscv.h **** }
 869              		.loc 2 104 51 is_stmt 0
 870              	#APP
 871              	# 104 "src/../h/Riscv.h" 1
 105:src/../h/Riscv.h **** 
 872              		csrw sepc, s1
 873              	# 0 "" 2
 874              		.loc 2 105 1
 875              	#NO_APP
 876 0398 6FF01FF6 		j	.L23
 877              	.LVL58:
 878              	.L42:
 879              	.LBE141:
 880              	.LBE140:
 881              	.LBB142:
 882              	.LBB134:
 139:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(size));
 883              		.loc 1 139 17 is_stmt 1
 140:src/Riscv.cpp ****                 size*=MEM_BLOCK_SIZE;
 884              		.loc 1 140 17
 140:src/Riscv.cpp ****                 size*=MEM_BLOCK_SIZE;
 885              		.loc 1 140 59 is_stmt 0
GAS LISTING /tmp/ccPBObma.s 			page 25


 886              	#APP
 887              	# 140 "src/Riscv.cpp" 1
 888              		mv a0, a1
 889              	# 0 "" 2
 890              	.LVL59:
 141:src/Riscv.cpp ****                 void* allocatedAddr = kmalloc(size);
 891              		.loc 1 141 17 is_stmt 1
 142:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : : "r"((uint64)allocatedAddr));
 892              		.loc 1 142 17
 142:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : : "r"((uint64)allocatedAddr));
 893              		.loc 1 142 46 is_stmt 0
 894              	#NO_APP
 895 03a0 13156500 		slli	a0,a0,6
 896              	.LVL60:
 897 03a4 97000000 		call	_Z7kmallocm@plt
 897      E7800000 
 898              	.LVL61:
 143:src/Riscv.cpp ****             }
 899              		.loc 1 143 17 is_stmt 1
 143:src/Riscv.cpp ****             }
 900              		.loc 1 143 76 is_stmt 0
 901              	#APP
 902              	# 143 "src/Riscv.cpp" 1
 903              		mv a0,a0
 904              	# 0 "" 2
 905              	#NO_APP
 906              	.LBE134:
 907 03b0 6FF05FFE 		j	.L29
 908              	.LVL62:
 909              	.L43:
 910              	.LBB135:
 911              	.LBB129:
 146:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(addr));
 912              		.loc 1 146 17 is_stmt 1
 147:src/Riscv.cpp ****                 uint64 retval = kfree((void*)addr);
 913              		.loc 1 147 17
 147:src/Riscv.cpp ****                 uint64 retval = kfree((void*)addr);
 914              		.loc 1 147 59 is_stmt 0
 915              	#APP
 916              	# 147 "src/Riscv.cpp" 1
 917              		mv a0, a1
 918              	# 0 "" 2
 919              	.LVL63:
 148:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 920              		.loc 1 148 17 is_stmt 1
 148:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 921              		.loc 1 148 38 is_stmt 0
 922              	#NO_APP
 923 03b8 97000000 		call	_Z5kfreePv@plt
 923      E7800000 
 924              	.LVL64:
 149:src/Riscv.cpp ****             }
 925              		.loc 1 149 17 is_stmt 1
 149:src/Riscv.cpp ****             }
 926              		.loc 1 149 60 is_stmt 0
 927              	#APP
 928              	# 149 "src/Riscv.cpp" 1
GAS LISTING /tmp/ccPBObma.s 			page 26


 929              		mv a0,a0
 930              	# 0 "" 2
 931              	#NO_APP
 932              	.LBE129:
 933 03c4 6FF01FFD 		j	.L29
 934              	.LVL65:
 935              	.L44:
 936              	.LBB130:
 937              	.LBB124:
 154:src/Riscv.cpp ****                 uint64 args;
 938              		.loc 1 154 17 is_stmt 1
 155:src/Riscv.cpp ****                 PCB** threadHandle;
 939              		.loc 1 155 17
 156:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(threadHandle));
 940              		.loc 1 156 17
 157:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(start_routine));
 941              		.loc 1 157 17
 157:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(start_routine));
 942              		.loc 1 157 67 is_stmt 0
 943              	#APP
 944              	# 157 "src/Riscv.cpp" 1
 945              		mv s4, a1
 946              	# 0 "" 2
 947              	.LVL66:
 158:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a3" : "=r"(args));
 948              		.loc 1 158 17 is_stmt 1
 158:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a3" : "=r"(args));
 949              		.loc 1 158 68 is_stmt 0
 950              	# 158 "src/Riscv.cpp" 1
 951              		mv s5, a2
 952              	# 0 "" 2
 953              	.LVL67:
 159:src/Riscv.cpp ****                 //uint64 stack_space;
 954              		.loc 1 159 17 is_stmt 1
 159:src/Riscv.cpp ****                 //uint64 stack_space;
 955              		.loc 1 159 59 is_stmt 0
 956              	# 159 "src/Riscv.cpp" 1
 957              		mv s6, a3
 958              	# 0 "" 2
 959              	.LVL68:
 167:src/Riscv.cpp **** 
 960              		.loc 1 167 17 is_stmt 1
 167:src/Riscv.cpp **** 
 961              		.loc 1 167 98 is_stmt 0
 962              	#NO_APP
 963 03d4 13058004 		li	a0,72
 964 03d8 97000000 		call	_ZN3PCBnwEm@plt
 964      E7800000 
 965              	.LVL69:
 966              	.LEHE4:
 967 03e0 93090500 		mv	s3,a0
 968 03e4 13073000 		li	a4,3
 969 03e8 93060900 		mv	a3,s2
 970 03ec 13060B00 		mv	a2,s6
 971 03f0 93850A00 		mv	a1,s5
 972              	.LEHB5:
 973 03f4 97000000 		call	_ZN3PCBC1EPFvPvES0_S0_m@plt
GAS LISTING /tmp/ccPBObma.s 			page 27


 973      E7800000 
 974              	.LVL70:
 975              	.LEHE5:
 169:src/Riscv.cpp **** 
 976              		.loc 1 169 17 is_stmt 1 discriminator 2
 169:src/Riscv.cpp **** 
 977              		.loc 1 169 33 is_stmt 0 discriminator 2
 978 03fc 23303A01 		sd	s3,0(s4)
 171:src/Riscv.cpp ****                     __asm__ volatile("li a0, 0xffffffffffffffff");
 979              		.loc 1 171 17 is_stmt 1 discriminator 2
 980 0400 63860900 		beqz	s3,.L47
 174:src/Riscv.cpp ****             }
 981              		.loc 1 174 21
 174:src/Riscv.cpp ****             }
 982              		.loc 1 174 49 is_stmt 0
 983              	#APP
 984              	# 174 "src/Riscv.cpp" 1
 985              		li a0, 0
 986              	# 0 "" 2
 987              	#NO_APP
 988 0408 6FF0DFF8 		j	.L29
 989              	.L47:
 172:src/Riscv.cpp ****                 else
 990              		.loc 1 172 21 is_stmt 1
 172:src/Riscv.cpp ****                 else
 991              		.loc 1 172 66 is_stmt 0
 992              	#APP
 993              	# 172 "src/Riscv.cpp" 1
 994              		li a0, 0xffffffffffffffff
 995              	# 0 "" 2
 996              	#NO_APP
 997 0410 6FF05FF8 		j	.L29
 998              	.LVL71:
 999              	.L45:
 1000              	.LBE124:
 1001              	.LBB125:
 1002              	.LBB117:
 178:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 1003              		.loc 1 178 17 is_stmt 1
 1004              	.LBB118:
 1005              	.LBB119:
 154:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 1006              		.loc 2 154 5
 155:src/../h/Riscv.h ****     return sstatus;
 1007              		.loc 2 155 5
 155:src/../h/Riscv.h ****     return sstatus;
 1008              		.loc 2 155 57 is_stmt 0
 1009              	#APP
 1010              	# 155 "src/../h/Riscv.h" 1
 1011              		csrr a5, sstatus
 1012              	# 0 "" 2
 1013              	.LVL72:
 1014              	#NO_APP
 1015 0418 2338F4FA 		sd	a5,-80(s0)
 156:src/../h/Riscv.h **** }
 1016              		.loc 2 156 5 is_stmt 1
 156:src/../h/Riscv.h **** }
GAS LISTING /tmp/ccPBObma.s 			page 28


 1017              		.loc 2 156 12 is_stmt 0
 1018 041c 033904FB 		ld	s2,-80(s0)
 1019              	.LVL73:
 1020              	.LBE119:
 1021              	.LBE118:
 179:src/Riscv.cpp ****                 PCB::dispatch();
 1022              		.loc 1 179 17 is_stmt 1
 179:src/Riscv.cpp ****                 PCB::dispatch();
 1023              		.loc 1 179 39 is_stmt 0
 1024 0420 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 1024      83B70700 
 1025 0428 23B00700 		sd	zero,0(a5)
 180:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1026              		.loc 1 180 17 is_stmt 1
 1027              	.LEHB6:
 180:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1028              		.loc 1 180 30 is_stmt 0
 1029 042c 97000000 		call	_ZN3PCB8dispatchEv@plt
 1029      E7800000 
 1030              	.LVL74:
 181:src/Riscv.cpp ****             }
 1031              		.loc 1 181 17 is_stmt 1
 1032              	.LBB120:
 1033              	.LBB121:
 160:src/../h/Riscv.h **** }
 1034              		.loc 2 160 5
 160:src/../h/Riscv.h **** }
 1035              		.loc 2 160 57 is_stmt 0
 1036              	#APP
 1037              	# 160 "src/../h/Riscv.h" 1
 1038              		csrw sstatus, s2
 1039              	# 0 "" 2
 1040              		.loc 2 161 1
 1041              	#NO_APP
 1042 0438 6FF0DFF5 		j	.L29
 1043              	.LVL75:
 1044              	.L46:
 1045              	.LBE121:
 1046              	.LBE120:
 1047              	.LBE117:
 1048              	.LBB122:
 1049              	.LBB110:
 185:src/Riscv.cpp ****                 {
 1050              		.loc 1 185 17 is_stmt 1
 185:src/Riscv.cpp ****                 {
 1051              		.loc 1 185 33 is_stmt 0
 1052 043c 97070000 		la	a5,_ZN3PCB7runningE
 1052      83B70700 
 1053              	.LVL76:
 1054 0444 83B70700 		ld	a5,0(a5)
 185:src/Riscv.cpp ****                 {
 1055              		.loc 1 185 17
 1056 0448 63860704 		beqz	a5,.L48
 190:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 1057              		.loc 1 190 17 is_stmt 1
 1058              	.LBB111:
 1059              	.LBB112:
GAS LISTING /tmp/ccPBObma.s 			page 29


 154:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 1060              		.loc 2 154 5
 155:src/../h/Riscv.h ****     return sstatus;
 1061              		.loc 2 155 5
 155:src/../h/Riscv.h ****     return sstatus;
 1062              		.loc 2 155 57 is_stmt 0
 1063              	#APP
 1064              	# 155 "src/../h/Riscv.h" 1
 1065              		csrr a5, sstatus
 1066              	# 0 "" 2
 1067              	#NO_APP
 1068 0450 233CF4FA 		sd	a5,-72(s0)
 156:src/../h/Riscv.h **** }
 1069              		.loc 2 156 5 is_stmt 1
 156:src/../h/Riscv.h **** }
 1070              		.loc 2 156 12 is_stmt 0
 1071 0454 033984FB 		ld	s2,-72(s0)
 1072              	.LVL77:
 1073              	.LBE112:
 1074              	.LBE111:
 191:src/Riscv.cpp ****                 PCB::exitingPCB = PCB::running;
 1075              		.loc 1 191 17 is_stmt 1
 191:src/Riscv.cpp ****                 PCB::exitingPCB = PCB::running;
 1076              		.loc 1 191 39 is_stmt 0
 1077 0458 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 1077      83B70700 
 1078 0460 23B00700 		sd	zero,0(a5)
 192:src/Riscv.cpp ****                 PCB::exitingPCB->setState(PCB::EXITING);
 1079              		.loc 1 192 17 is_stmt 1
 192:src/Riscv.cpp ****                 PCB::exitingPCB->setState(PCB::EXITING);
 1080              		.loc 1 192 33 is_stmt 0
 1081 0464 97070000 		la	a5,_ZN3PCB7runningE
 1081      83B70700 
 1082 046c 83B70700 		ld	a5,0(a5)
 1083 0470 17070000 		la	a4,_ZN3PCB10exitingPCBE
 1083      03370700 
 1084 0478 2330F700 		sd	a5,0(a4)
 193:src/Riscv.cpp ****                 //todo
 1085              		.loc 1 193 17 is_stmt 1
 1086              	.LVL78:
 1087              	.LBB113:
 1088              	.LBB114:
 1089              		.loc 3 35 29
 1090              		.loc 3 35 35 is_stmt 0
 1091 047c 13074000 		li	a4,4
 1092 0480 23A0E702 		sw	a4,32(a5)
 1093              	.LVL79:
 1094              	.LBE114:
 1095              	.LBE113:
 196:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1096              		.loc 1 196 17 is_stmt 1
 196:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1097              		.loc 1 196 30 is_stmt 0
 1098 0484 97000000 		call	_ZN3PCB8dispatchEv@plt
 1098      E7800000 
 1099              	.LVL80:
 1100              	.LEHE6:
GAS LISTING /tmp/ccPBObma.s 			page 30


 197:src/Riscv.cpp ****             }
 1101              		.loc 1 197 17 is_stmt 1
 1102              	.LBB115:
 1103              	.LBB116:
 160:src/../h/Riscv.h **** }
 1104              		.loc 2 160 5
 160:src/../h/Riscv.h **** }
 1105              		.loc 2 160 57 is_stmt 0
 1106              	#APP
 1107              	# 160 "src/../h/Riscv.h" 1
 1108              		csrw sstatus, s2
 1109              	# 0 "" 2
 1110              		.loc 2 161 1
 1111              	#NO_APP
 1112 0490 6FF05FF0 		j	.L29
 1113              	.LVL81:
 1114              	.L48:
 1115              	.LBE116:
 1116              	.LBE115:
 187:src/Riscv.cpp ****                     return;
 1117              		.loc 1 187 21 is_stmt 1
 187:src/Riscv.cpp ****                     return;
 1118              		.loc 1 187 66 is_stmt 0
 1119              	#APP
 1120              	# 187 "src/Riscv.cpp" 1
 188:src/Riscv.cpp ****                 }
 1121              		li a0, 0xffffffffffffffff
 1122              	# 0 "" 2
 1123              		.loc 1 188 21 is_stmt 1
 1124              	#NO_APP
 1125 0498 6FF01FE6 		j	.L23
 1126              	.LVL82:
 1127              	.L37:
 1128 049c 93040500 		mv	s1,a0
 1129              	.LVL83:
 1130              	.LBE110:
 1131              	.LBE122:
 1132              	.LBE125:
 1133              	.LBB126:
 167:src/Riscv.cpp **** 
 1134              		.loc 1 167 98 is_stmt 0
 1135 04a0 13850900 		mv	a0,s3
 1136 04a4 97000000 		call	_ZN3PCBdlEPv@plt
 1136      E7800000 
 1137              	.LVL84:
 1138 04ac 13850400 		mv	a0,s1
 1139              	.LEHB7:
 1140 04b0 97000000 		call	_Unwind_Resume@plt
 1140      E7800000 
 1141              	.LVL85:
 1142              	.LEHE7:
 1143              	.LBE126:
 1144              	.LBE130:
 1145              	.LBE135:
 1146              	.LBE142:
 1147              	.LBE147:
 1148              	.LBE152:
GAS LISTING /tmp/ccPBObma.s 			page 31


 1149              		.cfi_endproc
 1150              	.LFE26:
 1151              		.section	.gcc_except_table
 1152              	.LLSDA26:
 1153 0038 FF       		.byte	0xff
 1154 0039 FF       		.byte	0xff
 1155 003a 03       		.byte	0x3
 1156 003b 34       		.byte	0x34
 1157 003c 00000000 		.4byte	.LEHB4-.LFB26
 1158 0040 00000000 		.4byte	.LEHE4-.LEHB4
 1159 0044 00000000 		.4byte	0
 1160 0048 00       		.byte	0
 1161 0049 00000000 		.4byte	.LEHB5-.LFB26
 1162 004d 00000000 		.4byte	.LEHE5-.LEHB5
 1163 0051 00000000 		.4byte	.L37-.LFB26
 1164 0055 00       		.byte	0
 1165 0056 00000000 		.4byte	.LEHB6-.LFB26
 1166 005a 00000000 		.4byte	.LEHE6-.LEHB6
 1167 005e 00000000 		.4byte	0
 1168 0062 00       		.byte	0
 1169 0063 00000000 		.4byte	.LEHB7-.LFB26
 1170 0067 00000000 		.4byte	.LEHE7-.LEHB7
 1171 006b 00000000 		.4byte	0
 1172 006f 00       		.byte	0
 1173              		.text
 1175              		.section	.rodata
 1176              		.align	3
 1177              		.set	.LANCHOR0,. + 0
 1180              	_ZZN5Riscv12printIntegerEmE6digits:
 1181 0000 30313233 		.string	"0123456789"
 1181      34353637 
 1181      383900
 1182              		.text
 1183              	.Letext0:
 1184              		.file 4 "src/../h/../lib/hw.h"
 1185              		.file 5 "src/../h/Queue.h"
 1186              		.file 6 "src/../h/Scheduler.h"
 1187              		.file 7 "src/../h/MemoryAllocator.h"
 1188              		.file 8 "src/../lib/console.h"
 1189              		.file 9 "src/../h/syscall_cpp.h"
 5168              		.align	3
 5171              	DW.ref.__gxx_personality_v0:
 5172 0000 00000000 		.dword	__gxx_personality_v0
 5172      00000000 
 5173              		.ident	"GCC: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0"
 5174              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/ccPBObma.s 			page 32


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Riscv.cpp
     /tmp/ccPBObma.s:9      .text:0000000000000000 _ZN5Riscv10initSystemEv
     /tmp/ccPBObma.s:13     .text:0000000000000000 .L0 
     /tmp/ccPBObma.s:5171   .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/ccPBObma.s:16     .text:0000000000000000 .L0 
     /tmp/ccPBObma.s:17     .text:0000000000000004 .L0 
     /tmp/ccPBObma.s:22     .text:0000000000000014 .L0 
     /tmp/ccPBObma.s:23     .text:0000000000000014 .L0 
     /tmp/ccPBObma.s:24     .text:0000000000000014 .L0 
     /tmp/ccPBObma.s:25     .text:0000000000000014 .L0 
     /tmp/ccPBObma.s:27     .text:0000000000000018 .L0 
     /tmp/ccPBObma.s:29     .text:0000000000000018 .L0 
     /tmp/ccPBObma.s:30     .text:0000000000000018 .L0 
     /tmp/ccPBObma.s:36     .text:0000000000000020 .L0 
    src/../h/Riscv.h:114    .text:0000000000000020 .L0 
     /tmp/ccPBObma.s:46     .text:0000000000000024 .L0 
     /tmp/ccPBObma.s:47     .text:0000000000000024 .L0 
     /tmp/ccPBObma.s:61     .text:0000000000000044 .L0 
     /tmp/ccPBObma.s:62     .text:0000000000000044 .L0 
     /tmp/ccPBObma.s:66     .text:000000000000004c .L0 
     /tmp/ccPBObma.s:73     .text:0000000000000058 .L0 
     /tmp/ccPBObma.s:74     .text:0000000000000058 .L0 
     /tmp/ccPBObma.s:75     .text:0000000000000058 .L0 
     /tmp/ccPBObma.s:81     .text:0000000000000060 .L0 
     /tmp/ccPBObma.s:82     .text:0000000000000064 .L0 
     /tmp/ccPBObma.s:83     .text:0000000000000064 .L0 
     /tmp/ccPBObma.s:85     .text:0000000000000068 .L0 
     /tmp/ccPBObma.s:86     .text:0000000000000068 .L0 
     /tmp/ccPBObma.s:88     .text:000000000000006c .L0 
     /tmp/ccPBObma.s:90     .text:0000000000000070 .L0 
     /tmp/ccPBObma.s:92     .text:0000000000000074 .L0 
     /tmp/ccPBObma.s:95     .text:0000000000000078 .L0 
     /tmp/ccPBObma.s:98     .text:000000000000007c .L0 
     /tmp/ccPBObma.s:106    .text:0000000000000094 .L0 
     /tmp/ccPBObma.s:136    .text:0000000000000094 _ZN5Riscv16enableInterruptsEv
     /tmp/ccPBObma.s:139    .text:0000000000000094 .L0 
     /tmp/ccPBObma.s:140    .text:0000000000000094 .L0 
     /tmp/ccPBObma.s:141    .text:0000000000000098 .L0 
     /tmp/ccPBObma.s:143    .text:000000000000009c .L0 
     /tmp/ccPBObma.s:145    .text:00000000000000a0 .L0 
     /tmp/ccPBObma.s:150    .text:00000000000000a0 .L0 
     /tmp/ccPBObma.s:151    .text:00000000000000a0 .L0 
     /tmp/ccPBObma.s:152    .text:00000000000000a0 .L0 
     /tmp/ccPBObma.s:162    .text:00000000000000a8 .L0 
     /tmp/ccPBObma.s:163    .text:00000000000000ac .L0 
     /tmp/ccPBObma.s:164    .text:00000000000000ac .L0 
     /tmp/ccPBObma.s:166    .text:00000000000000b0 .L0 
     /tmp/ccPBObma.s:168    .text:00000000000000b4 .L0 
     /tmp/ccPBObma.s:174    .text:00000000000000b4 _ZN5Riscv17disableInterruptsEv
     /tmp/ccPBObma.s:177    .text:00000000000000b4 .L0 
     /tmp/ccPBObma.s:178    .text:00000000000000b4 .L0 
     /tmp/ccPBObma.s:179    .text:00000000000000b8 .L0 
     /tmp/ccPBObma.s:181    .text:00000000000000bc .L0 
     /tmp/ccPBObma.s:183    .text:00000000000000c0 .L0 
     /tmp/ccPBObma.s:188    .text:00000000000000c0 .L0 
     /tmp/ccPBObma.s:189    .text:00000000000000c0 .L0 
GAS LISTING /tmp/ccPBObma.s 			page 33


     /tmp/ccPBObma.s:190    .text:00000000000000c0 .L0 
     /tmp/ccPBObma.s:200    .text:00000000000000c8 .L0 
     /tmp/ccPBObma.s:201    .text:00000000000000cc .L0 
     /tmp/ccPBObma.s:202    .text:00000000000000cc .L0 
     /tmp/ccPBObma.s:204    .text:00000000000000d0 .L0 
     /tmp/ccPBObma.s:206    .text:00000000000000d4 .L0 
     /tmp/ccPBObma.s:212    .text:00000000000000d4 _ZN5Riscv9endSystemEv
     /tmp/ccPBObma.s:215    .text:00000000000000d4 .L0 
     /tmp/ccPBObma.s:216    .text:00000000000000d4 .L0 
     /tmp/ccPBObma.s:217    .text:00000000000000d8 .L0 
     /tmp/ccPBObma.s:220    .text:00000000000000e0 .L0 
     /tmp/ccPBObma.s:221    .text:00000000000000e0 .L0 
     /tmp/ccPBObma.s:223    .text:00000000000000e4 .L0 
     /tmp/ccPBObma.s:225    .text:00000000000000e4 .L0 
     /tmp/ccPBObma.s:226    .text:00000000000000e4 .L0 
     /tmp/ccPBObma.s:229    .text:00000000000000ec .L0 
     /tmp/ccPBObma.s:230    .text:00000000000000f0 .L0 
     /tmp/ccPBObma.s:232    .text:00000000000000f4 .L0 
     /tmp/ccPBObma.s:233    .text:00000000000000f4 .L0 
     /tmp/ccPBObma.s:235    .text:00000000000000f8 .L0 
     /tmp/ccPBObma.s:237    .text:00000000000000fc .L0 
     /tmp/ccPBObma.s:243    .text:00000000000000fc _ZN5Riscv10popSppSpieEv
     /tmp/ccPBObma.s:246    .text:00000000000000fc .L0 
     /tmp/ccPBObma.s:247    .text:00000000000000fc .L0 
     /tmp/ccPBObma.s:248    .text:0000000000000100 .L0 
     /tmp/ccPBObma.s:250    .text:0000000000000104 .L0 
     /tmp/ccPBObma.s:252    .text:0000000000000108 .L0 
     /tmp/ccPBObma.s:254    .text:0000000000000108 .L0 
       src/Riscv.cpp:41     .text:0000000000000108 .L0 
     /tmp/ccPBObma.s:260    .text:000000000000010c .L0 
       src/Riscv.cpp:42     .text:000000000000010c .L0 
     /tmp/ccPBObma.s:266    .text:0000000000000110 .L0 
     /tmp/ccPBObma.s:267    .text:0000000000000114 .L0 
     /tmp/ccPBObma.s:268    .text:0000000000000114 .L0 
     /tmp/ccPBObma.s:270    .text:0000000000000118 .L0 
     /tmp/ccPBObma.s:272    .text:000000000000011c .L0 
     /tmp/ccPBObma.s:278    .text:000000000000011c _ZN5Riscv11printStringEPKc
     /tmp/ccPBObma.s:281    .text:000000000000011c .L0 
     /tmp/ccPBObma.s:283    .text:000000000000011c .L0 
     /tmp/ccPBObma.s:284    .text:0000000000000120 .L0 
     /tmp/ccPBObma.s:289    .text:0000000000000130 .L0 
     /tmp/ccPBObma.s:290    .text:0000000000000130 .L0 
     /tmp/ccPBObma.s:291    .text:0000000000000130 .L0 
     /tmp/ccPBObma.s:292    .text:0000000000000130 .L0 
     /tmp/ccPBObma.s:294    .text:0000000000000134 .L0 
     /tmp/ccPBObma.s:299    .text:0000000000000138 .L0 
     /tmp/ccPBObma.s:300    .text:0000000000000138 .L0 
     /tmp/ccPBObma.s:301    .text:0000000000000138 .L0 
    src/../h/Riscv.h:155    .text:0000000000000138 .L0 
     /tmp/ccPBObma.s:309    .text:0000000000000140 .L0 
     /tmp/ccPBObma.s:310    .text:0000000000000140 .L0 
     /tmp/ccPBObma.s:317    .text:0000000000000144 .L0 
     /tmp/ccPBObma.s:318    .text:0000000000000144 .L0 
     /tmp/ccPBObma.s:319    .text:0000000000000144 .L0 
     /tmp/ccPBObma.s:330    .text:000000000000014c .L0 
     /tmp/ccPBObma.s:331    .text:000000000000014c .L0 
     /tmp/ccPBObma.s:332    .text:000000000000014c .L0 
GAS LISTING /tmp/ccPBObma.s 			page 34


     /tmp/ccPBObma.s:334    .text:0000000000000150 .L0 
     /tmp/ccPBObma.s:336    .text:0000000000000154 .L0 
     /tmp/ccPBObma.s:337    .text:0000000000000154 .L0 
     /tmp/ccPBObma.s:340    .text:000000000000015c .L0 
     /tmp/ccPBObma.s:341    .text:000000000000015c .L0 
     /tmp/ccPBObma.s:344    .text:0000000000000160 .L0 
     /tmp/ccPBObma.s:347    .text:0000000000000164 .L0 
     /tmp/ccPBObma.s:348    .text:0000000000000164 .L0 
     /tmp/ccPBObma.s:351    .text:0000000000000168 .L0 
     /tmp/ccPBObma.s:357    .text:0000000000000170 .L0 
    src/../h/Riscv.h:146    .text:0000000000000170 .L0 
     /tmp/ccPBObma.s:367    .text:0000000000000174 .L0 
     /tmp/ccPBObma.s:368    .text:0000000000000178 .L0 
     /tmp/ccPBObma.s:370    .text:000000000000017c .L0 
     /tmp/ccPBObma.s:371    .text:000000000000017c .L0 
     /tmp/ccPBObma.s:373    .text:0000000000000180 .L0 
     /tmp/ccPBObma.s:376    .text:0000000000000184 .L0 
     /tmp/ccPBObma.s:378    .text:0000000000000188 .L0 
     /tmp/ccPBObma.s:380    .text:000000000000018c .L0 
     /tmp/ccPBObma.s:386    .text:000000000000018c _ZN5Riscv12printIntegerEm
     /tmp/ccPBObma.s:389    .text:000000000000018c .L0 
     /tmp/ccPBObma.s:391    .text:000000000000018c .L0 
     /tmp/ccPBObma.s:392    .text:0000000000000190 .L0 
     /tmp/ccPBObma.s:397    .text:00000000000001a0 .L0 
     /tmp/ccPBObma.s:398    .text:00000000000001a0 .L0 
     /tmp/ccPBObma.s:399    .text:00000000000001a0 .L0 
     /tmp/ccPBObma.s:400    .text:00000000000001a0 .L0 
     /tmp/ccPBObma.s:402    .text:00000000000001a4 .L0 
     /tmp/ccPBObma.s:406    .text:00000000000001a4 .L0 
     /tmp/ccPBObma.s:407    .text:00000000000001a4 .L0 
     /tmp/ccPBObma.s:408    .text:00000000000001a4 .L0 
    src/../h/Riscv.h:155    .text:00000000000001a4 .L0 
     /tmp/ccPBObma.s:416    .text:00000000000001ac .L0 
     /tmp/ccPBObma.s:417    .text:00000000000001ac .L0 
     /tmp/ccPBObma.s:424    .text:00000000000001b0 .L0 
     /tmp/ccPBObma.s:425    .text:00000000000001b0 .L0 
     /tmp/ccPBObma.s:426    .text:00000000000001b0 .L0 
     /tmp/ccPBObma.s:436    .text:00000000000001b8 .L0 
     /tmp/ccPBObma.s:437    .text:00000000000001b8 .L0 
     /tmp/ccPBObma.s:438    .text:00000000000001b8 .L0 
     /tmp/ccPBObma.s:439    .text:00000000000001b8 .L0 
     /tmp/ccPBObma.s:440    .text:00000000000001b8 .L0 
     /tmp/ccPBObma.s:441    .text:00000000000001b8 .L0 
     /tmp/ccPBObma.s:442    .text:00000000000001b8 .L0 
     /tmp/ccPBObma.s:443    .text:00000000000001b8 .L0 
     /tmp/ccPBObma.s:446    .text:00000000000001bc .L0 
     /tmp/ccPBObma.s:447    .text:00000000000001bc .L0 
     /tmp/ccPBObma.s:451    .text:00000000000001c0 .L0 
     /tmp/ccPBObma.s:452    .text:00000000000001c0 .L0 
     /tmp/ccPBObma.s:453    .text:00000000000001c0 .L0 
     /tmp/ccPBObma.s:457    .text:00000000000001c8 .L0 
     /tmp/ccPBObma.s:463    .text:00000000000001e0 .L0 
     /tmp/ccPBObma.s:469    .text:00000000000001f0 .L0 
     /tmp/ccPBObma.s:471    .text:00000000000001f4 .L0 
     /tmp/ccPBObma.s:474    .text:00000000000001f8 .L0 
     /tmp/ccPBObma.s:479    .text:0000000000000200 .L0 
     /tmp/ccPBObma.s:480    .text:0000000000000200 .L0 
GAS LISTING /tmp/ccPBObma.s 			page 35


     /tmp/ccPBObma.s:484    .text:0000000000000208 .L0 
     /tmp/ccPBObma.s:485    .text:0000000000000208 .L0 
     /tmp/ccPBObma.s:493    .text:0000000000000220 .L0 
     /tmp/ccPBObma.s:494    .text:0000000000000220 .L0 
     /tmp/ccPBObma.s:498    .text:000000000000022c .L0 
     /tmp/ccPBObma.s:499    .text:000000000000022c .L0 
     /tmp/ccPBObma.s:502    .text:0000000000000230 .L0 
     /tmp/ccPBObma.s:508    .text:0000000000000238 .L0 
    src/../h/Riscv.h:146    .text:0000000000000238 .L0 
     /tmp/ccPBObma.s:518    .text:000000000000023c .L0 
     /tmp/ccPBObma.s:519    .text:0000000000000240 .L0 
     /tmp/ccPBObma.s:521    .text:0000000000000244 .L0 
     /tmp/ccPBObma.s:522    .text:0000000000000244 .L0 
     /tmp/ccPBObma.s:524    .text:0000000000000248 .L0 
     /tmp/ccPBObma.s:526    .text:000000000000024c .L0 
     /tmp/ccPBObma.s:528    .text:0000000000000250 .L0 
     /tmp/ccPBObma.s:530    .text:0000000000000254 .L0 
     /tmp/ccPBObma.s:541    .text:0000000000000254 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccPBObma.s:544    .text:0000000000000254 .L0 
     /tmp/ccPBObma.s:547    .text:0000000000000254 .L0 
     /tmp/ccPBObma.s:548    .text:0000000000000258 .L0 
     /tmp/ccPBObma.s:557    .text:0000000000000278 .L0 
     /tmp/ccPBObma.s:558    .text:0000000000000278 .L0 
     /tmp/ccPBObma.s:559    .text:0000000000000278 .L0 
     /tmp/ccPBObma.s:560    .text:0000000000000278 .L0 
     /tmp/ccPBObma.s:561    .text:0000000000000278 .L0 
     /tmp/ccPBObma.s:562    .text:0000000000000278 .L0 
     /tmp/ccPBObma.s:563    .text:0000000000000278 .L0 
     /tmp/ccPBObma.s:564    .text:0000000000000278 .L0 
     /tmp/ccPBObma.s:566    .text:000000000000027c .L0 
     /tmp/ccPBObma.s:568    .text:000000000000027c .L0 
     /tmp/ccPBObma.s:569    .text:000000000000027c .L0 
       src/Riscv.cpp:94     .text:000000000000027c .L0 
     /tmp/ccPBObma.s:579    .text:0000000000000280 .L0 
     /tmp/ccPBObma.s:580    .text:0000000000000280 .L0 
     /tmp/ccPBObma.s:581    .text:0000000000000280 .L0 
    src/../h/Riscv.h:89     .text:0000000000000280 .L0 
     /tmp/ccPBObma.s:589    .text:0000000000000288 .L0 
     /tmp/ccPBObma.s:590    .text:0000000000000288 .L0 
     /tmp/ccPBObma.s:596    .text:000000000000028c .L0 
     /tmp/ccPBObma.s:604    .text:00000000000002a4 .L0 
     /tmp/ccPBObma.s:605    .text:00000000000002a4 .L0 
     /tmp/ccPBObma.s:606    .text:00000000000002a4 .L0 
     /tmp/ccPBObma.s:611    .text:00000000000002b4 .L0 
     /tmp/ccPBObma.s:612    .text:00000000000002b4 .L0 
     /tmp/ccPBObma.s:618    .text:00000000000002c8 .L0 
     /tmp/ccPBObma.s:619    .text:00000000000002c8 .L0 
     /tmp/ccPBObma.s:625    .text:00000000000002d4 .L0 
     /tmp/ccPBObma.s:626    .text:00000000000002d4 .L0 
     /tmp/ccPBObma.s:631    .text:00000000000002d8 .L0 
     /tmp/ccPBObma.s:638    .text:00000000000002dc .L0 
     /tmp/ccPBObma.s:639    .text:00000000000002dc .L0 
     /tmp/ccPBObma.s:640    .text:00000000000002dc .L0 
     /tmp/ccPBObma.s:647    .text:00000000000002e4 .L0 
     /tmp/ccPBObma.s:654    .text:00000000000002e8 .L0 
     /tmp/ccPBObma.s:660    .text:00000000000002f0 .L0 
     /tmp/ccPBObma.s:661    .text:00000000000002f0 .L0 
GAS LISTING /tmp/ccPBObma.s 			page 36


     /tmp/ccPBObma.s:665    .text:00000000000002f8 .L0 
     /tmp/ccPBObma.s:666    .text:00000000000002fc .L0 
     /tmp/ccPBObma.s:667    .text:00000000000002fc .L0 
     /tmp/ccPBObma.s:669    .text:0000000000000300 .L0 
     /tmp/ccPBObma.s:670    .text:0000000000000300 .L0 
     /tmp/ccPBObma.s:672    .text:0000000000000304 .L0 
     /tmp/ccPBObma.s:674    .text:0000000000000308 .L0 
     /tmp/ccPBObma.s:676    .text:000000000000030c .L0 
     /tmp/ccPBObma.s:678    .text:0000000000000310 .L0 
     /tmp/ccPBObma.s:680    .text:0000000000000314 .L0 
     /tmp/ccPBObma.s:682    .text:0000000000000318 .L0 
     /tmp/ccPBObma.s:684    .text:000000000000031c .L0 
     /tmp/ccPBObma.s:688    .text:0000000000000320 .L0 
     /tmp/ccPBObma.s:696    .text:0000000000000320 .L0 
     /tmp/ccPBObma.s:697    .text:0000000000000320 .L0 
     /tmp/ccPBObma.s:698    .text:0000000000000320 .L0 
    src/../h/Riscv.h:99     .text:0000000000000320 .L0 
     /tmp/ccPBObma.s:706    .text:0000000000000328 .L0 
     /tmp/ccPBObma.s:707    .text:0000000000000328 .L0 
     /tmp/ccPBObma.s:714    .text:000000000000032c .L0 
     /tmp/ccPBObma.s:715    .text:000000000000032c .L0 
     /tmp/ccPBObma.s:716    .text:000000000000032c .L0 
    src/../h/Riscv.h:155    .text:000000000000032c .L0 
     /tmp/ccPBObma.s:724    .text:0000000000000334 .L0 
     /tmp/ccPBObma.s:725    .text:0000000000000334 .L0 
     /tmp/ccPBObma.s:730    .text:0000000000000338 .L0 
     /tmp/ccPBObma.s:731    .text:0000000000000338 .L0 
     /tmp/ccPBObma.s:734    .text:0000000000000344 .L0 
     /tmp/ccPBObma.s:735    .text:0000000000000344 .L0 
     /tmp/ccPBObma.s:740    .text:000000000000034c .L0 
     /tmp/ccPBObma.s:741    .text:000000000000034c .L0 
    src/../h/Riscv.h:160    .text:000000000000034c .L0 
     /tmp/ccPBObma.s:753    .text:0000000000000350 .L0 
     /tmp/ccPBObma.s:754    .text:0000000000000350 .L0 
    src/../h/Riscv.h:104    .text:0000000000000350 .L0 
     /tmp/ccPBObma.s:761    .text:0000000000000354 .L0 
     /tmp/ccPBObma.s:769    .text:0000000000000358 .L0 
     /tmp/ccPBObma.s:770    .text:0000000000000358 .L0 
     /tmp/ccPBObma.s:771    .text:0000000000000358 .L0 
     /tmp/ccPBObma.s:772    .text:0000000000000358 .L0 
       src/Riscv.cpp:133    .text:0000000000000358 .L0 
     /tmp/ccPBObma.s:782    .text:000000000000035c .L0 
     /tmp/ccPBObma.s:783    .text:000000000000035c .L0 
     /tmp/ccPBObma.s:784    .text:000000000000035c .L0 
    src/../h/Riscv.h:99     .text:000000000000035c .L0 
     /tmp/ccPBObma.s:793    .text:0000000000000364 .L0 
     /tmp/ccPBObma.s:794    .text:0000000000000364 .L0 
     /tmp/ccPBObma.s:799    .text:0000000000000368 .L0 
     /tmp/ccPBObma.s:800    .text:0000000000000368 .L0 
     /tmp/ccPBObma.s:804    .text:000000000000036c .L0 
     /tmp/ccPBObma.s:814    .text:0000000000000374 .L0 
     /tmp/ccPBObma.s:826    .text:000000000000037c .L0 
     /tmp/ccPBObma.s:840    .text:0000000000000384 .L0 
     /tmp/ccPBObma.s:856    .text:000000000000038c .L0 
     /tmp/ccPBObma.s:868    .text:0000000000000394 .L0 
     /tmp/ccPBObma.s:869    .text:0000000000000394 .L0 
    src/../h/Riscv.h:104    .text:0000000000000394 .L0 
GAS LISTING /tmp/ccPBObma.s 			page 37


     /tmp/ccPBObma.s:876    .text:0000000000000398 .L0 
     /tmp/ccPBObma.s:884    .text:000000000000039c .L0 
     /tmp/ccPBObma.s:885    .text:000000000000039c .L0 
       src/Riscv.cpp:140    .text:000000000000039c .L0 
     /tmp/ccPBObma.s:892    .text:00000000000003a0 .L0 
     /tmp/ccPBObma.s:893    .text:00000000000003a0 .L0 
     /tmp/ccPBObma.s:895    .text:00000000000003a0 .L0 
     /tmp/ccPBObma.s:900    .text:00000000000003ac .L0 
       src/Riscv.cpp:143    .text:00000000000003ac .L0 
     /tmp/ccPBObma.s:913    .text:00000000000003b4 .L0 
     /tmp/ccPBObma.s:914    .text:00000000000003b4 .L0 
       src/Riscv.cpp:147    .text:00000000000003b4 .L0 
     /tmp/ccPBObma.s:921    .text:00000000000003b8 .L0 
     /tmp/ccPBObma.s:923    .text:00000000000003b8 .L0 
     /tmp/ccPBObma.s:926    .text:00000000000003c0 .L0 
       src/Riscv.cpp:149    .text:00000000000003c0 .L0 
     /tmp/ccPBObma.s:939    .text:00000000000003c8 .L0 
     /tmp/ccPBObma.s:940    .text:00000000000003c8 .L0 
     /tmp/ccPBObma.s:941    .text:00000000000003c8 .L0 
     /tmp/ccPBObma.s:942    .text:00000000000003c8 .L0 
       src/Riscv.cpp:157    .text:00000000000003c8 .L0 
     /tmp/ccPBObma.s:949    .text:00000000000003cc .L0 
       src/Riscv.cpp:158    .text:00000000000003cc .L0 
     /tmp/ccPBObma.s:955    .text:00000000000003d0 .L0 
       src/Riscv.cpp:159    .text:00000000000003d0 .L0 
     /tmp/ccPBObma.s:961    .text:00000000000003d4 .L0 
     /tmp/ccPBObma.s:963    .text:00000000000003d4 .L0 
     /tmp/ccPBObma.s:977    .text:00000000000003fc .L0 
     /tmp/ccPBObma.s:978    .text:00000000000003fc .L0 
     /tmp/ccPBObma.s:980    .text:0000000000000400 .L0 
     /tmp/ccPBObma.s:982    .text:0000000000000404 .L0 
       src/Riscv.cpp:174    .text:0000000000000404 .L0 
     /tmp/ccPBObma.s:991    .text:000000000000040c .L0 
       src/Riscv.cpp:172    .text:000000000000040c .L0 
     /tmp/ccPBObma.s:1006   .text:0000000000000414 .L0 
     /tmp/ccPBObma.s:1007   .text:0000000000000414 .L0 
     /tmp/ccPBObma.s:1008   .text:0000000000000414 .L0 
    src/../h/Riscv.h:155    .text:0000000000000414 .L0 
     /tmp/ccPBObma.s:1017   .text:000000000000041c .L0 
     /tmp/ccPBObma.s:1018   .text:000000000000041c .L0 
     /tmp/ccPBObma.s:1023   .text:0000000000000420 .L0 
     /tmp/ccPBObma.s:1024   .text:0000000000000420 .L0 
     /tmp/ccPBObma.s:1028   .text:000000000000042c .L0 
     /tmp/ccPBObma.s:1029   .text:000000000000042c .L0 
     /tmp/ccPBObma.s:1034   .text:0000000000000434 .L0 
     /tmp/ccPBObma.s:1035   .text:0000000000000434 .L0 
    src/../h/Riscv.h:160    .text:0000000000000434 .L0 
     /tmp/ccPBObma.s:1042   .text:0000000000000438 .L0 
     /tmp/ccPBObma.s:1051   .text:000000000000043c .L0 
     /tmp/ccPBObma.s:1052   .text:000000000000043c .L0 
     /tmp/ccPBObma.s:1056   .text:0000000000000448 .L0 
     /tmp/ccPBObma.s:1060   .text:000000000000044c .L0 
     /tmp/ccPBObma.s:1061   .text:000000000000044c .L0 
     /tmp/ccPBObma.s:1062   .text:000000000000044c .L0 
    src/../h/Riscv.h:155    .text:000000000000044c .L0 
     /tmp/ccPBObma.s:1070   .text:0000000000000454 .L0 
     /tmp/ccPBObma.s:1071   .text:0000000000000454 .L0 
GAS LISTING /tmp/ccPBObma.s 			page 38


     /tmp/ccPBObma.s:1076   .text:0000000000000458 .L0 
     /tmp/ccPBObma.s:1077   .text:0000000000000458 .L0 
     /tmp/ccPBObma.s:1080   .text:0000000000000464 .L0 
     /tmp/ccPBObma.s:1081   .text:0000000000000464 .L0 
     /tmp/ccPBObma.s:1089   .text:000000000000047c .L0 
     /tmp/ccPBObma.s:1090   .text:000000000000047c .L0 
     /tmp/ccPBObma.s:1091   .text:000000000000047c .L0 
     /tmp/ccPBObma.s:1097   .text:0000000000000484 .L0 
     /tmp/ccPBObma.s:1098   .text:0000000000000484 .L0 
     /tmp/ccPBObma.s:1104   .text:000000000000048c .L0 
     /tmp/ccPBObma.s:1105   .text:000000000000048c .L0 
    src/../h/Riscv.h:160    .text:000000000000048c .L0 
     /tmp/ccPBObma.s:1112   .text:0000000000000490 .L0 
     /tmp/ccPBObma.s:1118   .text:0000000000000494 .L0 
       src/Riscv.cpp:187    .text:0000000000000494 .L0 
     /tmp/ccPBObma.s:1125   .text:0000000000000498 .L0 
     /tmp/ccPBObma.s:1135   .text:00000000000004a0 .L0 
     /tmp/ccPBObma.s:1149   .text:00000000000004b8 .L0 
     /tmp/ccPBObma.s:1177   .rodata:0000000000000000 .LANCHOR0
     /tmp/ccPBObma.s:1180   .rodata:0000000000000000 _ZZN5Riscv12printIntegerEmE6digits
     /tmp/ccPBObma.s:1190   .text:00000000000004b8 .L0 
     /tmp/ccPBObma.s:30     .text:0000000000000018 .L0 
     /tmp/ccPBObma.s:66     .text:000000000000004c .L0 
     /tmp/ccPBObma.s:459    .text:00000000000001d0 .L0 
     /tmp/ccPBObma.s:535    .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccPBObma.s:606    .text:00000000000002a4 .L0 
     /tmp/ccPBObma.s:612    .text:00000000000002b4 .L0 
     /tmp/ccPBObma.s:619    .text:00000000000002c8 .L0 
     /tmp/ccPBObma.s:731    .text:0000000000000338 .L0 
     /tmp/ccPBObma.s:1024   .text:0000000000000420 .L0 
     /tmp/ccPBObma.s:1052   .text:000000000000043c .L0 
     /tmp/ccPBObma.s:1077   .text:0000000000000458 .L0 
     /tmp/ccPBObma.s:1081   .text:0000000000000464 .L0 
     /tmp/ccPBObma.s:1083   .text:0000000000000470 .L0 
     /tmp/ccPBObma.s:345    .text:0000000000000164 .L15
     /tmp/ccPBObma.s:326    .text:000000000000014c .L16
     /tmp/ccPBObma.s:449    .text:00000000000001c0 .L19
     /tmp/ccPBObma.s:491    .text:0000000000000220 .L20
     /tmp/ccPBObma.s:477    .text:0000000000000200 .L21
     /tmp/ccPBObma.s:649    .text:00000000000002e8 .L39
     /tmp/ccPBObma.s:657    .text:00000000000002f0 .L26
     /tmp/ccPBObma.s:687    .text:0000000000000320 .L40
     /tmp/ccPBObma.s:763    .text:0000000000000358 .L41
     /tmp/ccPBObma.s:633    .text:00000000000002dc .L27
     /tmp/ccPBObma.s:878    .text:000000000000039c .L42
     /tmp/ccPBObma.s:909    .text:00000000000003b4 .L43
     /tmp/ccPBObma.s:935    .text:00000000000003c8 .L44
     /tmp/ccPBObma.s:999    .text:0000000000000414 .L45
     /tmp/ccPBObma.s:1044   .text:000000000000043c .L46
     /tmp/ccPBObma.s:663    .text:00000000000002f8 .L23
     /tmp/ccPBObma.s:859    .text:0000000000000394 .L29
     /tmp/ccPBObma.s:989    .text:000000000000040c .L47
     /tmp/ccPBObma.s:1114   .text:0000000000000494 .L48
     /tmp/ccPBObma.s:48     .text:0000000000000028 .LEHB0
     /tmp/ccPBObma.s:10     .text:0000000000000000 .LFB19
     /tmp/ccPBObma.s:51     .text:0000000000000030 .LEHE0
     /tmp/ccPBObma.s:55     .text:000000000000003c .LEHB1
GAS LISTING /tmp/ccPBObma.s 			page 39


     /tmp/ccPBObma.s:58     .text:0000000000000044 .LEHE1
     /tmp/ccPBObma.s:94     .text:0000000000000078 .L3
     /tmp/ccPBObma.s:60     .text:0000000000000044 .LEHB2
     /tmp/ccPBObma.s:64     .text:000000000000004c .LEHE2
     /tmp/ccPBObma.s:102    .text:000000000000008c .LEHB3
     /tmp/ccPBObma.s:105    .text:0000000000000094 .LEHE3
     /tmp/ccPBObma.s:607    .text:00000000000002ac .LEHB4
     /tmp/ccPBObma.s:542    .text:0000000000000254 .LFB26
     /tmp/ccPBObma.s:966    .text:00000000000003e0 .LEHE4
     /tmp/ccPBObma.s:972    .text:00000000000003f4 .LEHB5
     /tmp/ccPBObma.s:975    .text:00000000000003fc .LEHE5
     /tmp/ccPBObma.s:1127   .text:000000000000049c .L37
     /tmp/ccPBObma.s:1027   .text:000000000000042c .LEHB6
     /tmp/ccPBObma.s:1100   .text:000000000000048c .LEHE6
     /tmp/ccPBObma.s:1139   .text:00000000000004b0 .LEHB7
     /tmp/ccPBObma.s:1142   .text:00000000000004b8 .LEHE7
     /tmp/ccPBObma.s:3239   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccPBObma.s:4977   .debug_str:00000000000005b0 .LASF181
     /tmp/ccPBObma.s:4851   .debug_str:0000000000000230 .LASF182
     /tmp/ccPBObma.s:5093   .debug_str:000000000000090f .LASF183
     /tmp/ccPBObma.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccPBObma.s:1183   .text:00000000000004b8 .Letext0
     /tmp/ccPBObma.s:4779   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccPBObma.s:4923   .debug_str:000000000000041b .LASF0
     /tmp/ccPBObma.s:5023   .debug_str:000000000000077f .LASF3
     /tmp/ccPBObma.s:4953   .debug_str:00000000000004f5 .LASF1
     /tmp/ccPBObma.s:5031   .debug_str:000000000000079f .LASF2
     /tmp/ccPBObma.s:5039   .debug_str:00000000000007da .LASF4
     /tmp/ccPBObma.s:4939   .debug_str:0000000000000483 .LASF5
     /tmp/ccPBObma.s:4791   .debug_str:000000000000004b .LASF6
     /tmp/ccPBObma.s:5011   .debug_str:0000000000000733 .LASF7
     /tmp/ccPBObma.s:5003   .debug_str:00000000000006f6 .LASF8
     /tmp/ccPBObma.s:4943   .debug_str:00000000000004b7 .LASF9
     /tmp/ccPBObma.s:4905   .debug_str:0000000000000383 .LASF10
     /tmp/ccPBObma.s:4911   .debug_str:00000000000003bf .LASF11
     /tmp/ccPBObma.s:4843   .debug_str:00000000000001ff .LASF12
     /tmp/ccPBObma.s:4893   .debug_str:000000000000034a .LASF13
     /tmp/ccPBObma.s:4853   .debug_str:000000000000023e .LASF14
     /tmp/ccPBObma.s:4841   .debug_str:00000000000001ef .LASF15
     /tmp/ccPBObma.s:5069   .debug_str:000000000000089d .LASF16
     /tmp/ccPBObma.s:4881   .debug_str:00000000000002f7 .LASF17
     /tmp/ccPBObma.s:5059   .debug_str:0000000000000856 .LASF18
     /tmp/ccPBObma.s:5121   .debug_str:00000000000009c8 .LASF91
     /tmp/ccPBObma.s:5021   .debug_str:0000000000000774 .LASF22
     /tmp/ccPBObma.s:4957   .debug_str:000000000000050e .LASF19
     /tmp/ccPBObma.s:4885   .debug_str:0000000000000328 .LASF20
     /tmp/ccPBObma.s:5137   .debug_str:0000000000000a20 .LASF21
     /tmp/ccPBObma.s:5113   .debug_str:0000000000000997 .LASF23
     /tmp/ccPBObma.s:4887   .debug_str:0000000000000331 .LASF24
     /tmp/ccPBObma.s:5083   .debug_str:00000000000008cf .LASF25
     /tmp/ccPBObma.s:4867   .debug_str:000000000000029f .LASF26
     /tmp/ccPBObma.s:4983   .debug_str:000000000000066c .LASF27
     /tmp/ccPBObma.s:4973   .debug_str:0000000000000582 .LASF29
     /tmp/ccPBObma.s:4879   .debug_str:00000000000002ed .LASF28
     /tmp/ccPBObma.s:4787   .debug_str:000000000000002d .LASF30
     /tmp/ccPBObma.s:4839   .debug_str:00000000000001de .LASF31
     /tmp/ccPBObma.s:4961   .debug_str:000000000000051c .LASF32
GAS LISTING /tmp/ccPBObma.s 			page 40


     /tmp/ccPBObma.s:4935   .debug_str:0000000000000464 .LASF33
     /tmp/ccPBObma.s:4857   .debug_str:0000000000000260 .LASF34
     /tmp/ccPBObma.s:5143   .debug_str:0000000000000a46 .LASF35
     /tmp/ccPBObma.s:4803   .debug_str:000000000000009b .LASF37
     /tmp/ccPBObma.s:5009   .debug_str:0000000000000726 .LASF36
     /tmp/ccPBObma.s:4809   .debug_str:00000000000000c9 .LASF38
     /tmp/ccPBObma.s:5047   .debug_str:0000000000000803 .LASF39
     /tmp/ccPBObma.s:4883   .debug_str:000000000000030d .LASF40
     /tmp/ccPBObma.s:4929   .debug_str:000000000000043d .LASF41
     /tmp/ccPBObma.s:5133   .debug_str:00000000000009fe .LASF42
     /tmp/ccPBObma.s:5109   .debug_str:0000000000000989 .LASF45
     /tmp/ccPBObma.s:5101   .debug_str:0000000000000947 .LASF47
     /tmp/ccPBObma.s:5027   .debug_str:000000000000078b .LASF43
     /tmp/ccPBObma.s:4993   .debug_str:00000000000006b2 .LASF44
     /tmp/ccPBObma.s:5015   .debug_str:0000000000000746 .LASF46
     /tmp/ccPBObma.s:5017   .debug_str:000000000000074d .LASF48
     /tmp/ccPBObma.s:4989   .debug_str:0000000000000697 .LASF49
     /tmp/ccPBObma.s:4945   .debug_str:00000000000004ca .LASF50
     /tmp/ccPBObma.s:5135   .debug_str:0000000000000a18 .LASF51
     /tmp/ccPBObma.s:5089   .debug_str:00000000000008f1 .LASF52
     /tmp/ccPBObma.s:4987   .debug_str:000000000000068f .LASF53
     /tmp/ccPBObma.s:4991   .debug_str:000000000000069e .LASF54
     /tmp/ccPBObma.s:4979   .debug_str:0000000000000652 .LASF55
     /tmp/ccPBObma.s:5019   .debug_str:0000000000000760 .LASF56
     /tmp/ccPBObma.s:5163   .debug_str:0000000000000ace .LASF57
     /tmp/ccPBObma.s:4933   .debug_str:0000000000000450 .LASF58
     /tmp/ccPBObma.s:5065   .debug_str:000000000000088f .LASF59
     /tmp/ccPBObma.s:5041   .debug_str:00000000000007e1 .LASF60
     /tmp/ccPBObma.s:5043   .debug_str:00000000000007f4 .LASF61
     /tmp/ccPBObma.s:4847   .debug_str:0000000000000213 .LASF62
     /tmp/ccPBObma.s:4877   .debug_str:00000000000002e7 .LASF63
     /tmp/ccPBObma.s:4919   .debug_str:00000000000003f1 .LASF64
     /tmp/ccPBObma.s:4931   .debug_str:000000000000044a .LASF65
     /tmp/ccPBObma.s:4871   .debug_str:00000000000002be .LASF66
     /tmp/ccPBObma.s:4793   .debug_str:0000000000000052 .LASF67
     /tmp/ccPBObma.s:5035   .debug_str:00000000000007b9 .LASF68
     /tmp/ccPBObma.s:5029   .debug_str:0000000000000794 .LASF69
     /tmp/ccPBObma.s:5155   .debug_str:0000000000000a97 .LASF70
     /tmp/ccPBObma.s:5123   .debug_str:00000000000009ce .LASF71
     /tmp/ccPBObma.s:5139   .debug_str:0000000000000a29 .LASF72
     /tmp/ccPBObma.s:5119   .debug_str:00000000000009be .LASF73
     /tmp/ccPBObma.s:4975   .debug_str:000000000000059a .LASF74
     /tmp/ccPBObma.s:4915   .debug_str:00000000000003e0 .LASF75
     /tmp/ccPBObma.s:4921   .debug_str:0000000000000403 .LASF76
     /tmp/ccPBObma.s:5107   .debug_str:000000000000097a .LASF77
     /tmp/ccPBObma.s:4909   .debug_str:00000000000003a3 .LASF78
     /tmp/ccPBObma.s:5007   .debug_str:0000000000000711 .LASF79
     /tmp/ccPBObma.s:4941   .debug_str:0000000000000495 .LASF80
     /tmp/ccPBObma.s:5025   .debug_str:0000000000000784 .LASF81
     /tmp/ccPBObma.s:4789   .debug_str:0000000000000043 .LASF82
     /tmp/ccPBObma.s:4823   .debug_str:0000000000000157 .LASF83
     /tmp/ccPBObma.s:5105   .debug_str:000000000000096e .LASF84
     /tmp/ccPBObma.s:4825   .debug_str:0000000000000166 .LASF85
     /tmp/ccPBObma.s:4981   .debug_str:000000000000065a .LASF86
     /tmp/ccPBObma.s:4913   .debug_str:00000000000003cd .LASF87
     /tmp/ccPBObma.s:5117   .debug_str:00000000000009ab .LASF88
     /tmp/ccPBObma.s:4837   .debug_str:00000000000001ca .LASF89
GAS LISTING /tmp/ccPBObma.s 			page 41


     /tmp/ccPBObma.s:5077   .debug_str:00000000000008bc .LASF90
     /tmp/ccPBObma.s:5095   .debug_str:0000000000000932 .LASF92
     /tmp/ccPBObma.s:5111   .debug_str:0000000000000992 .LASF95
     /tmp/ccPBObma.s:4947   .debug_str:00000000000004dd .LASF93
     /tmp/ccPBObma.s:4845   .debug_str:000000000000020e .LASF94
     /tmp/ccPBObma.s:5075   .debug_str:00000000000008b6 .LASF96
     /tmp/ccPBObma.s:4959   .debug_str:0000000000000517 .LASF97
     /tmp/ccPBObma.s:5145   .debug_str:0000000000000a52 .LASF115
     /tmp/ccPBObma.s:4805   .debug_str:00000000000000b6 .LASF99
     /tmp/ccPBObma.s:4855   .debug_str:000000000000024e .LASF101
     /tmp/ccPBObma.s:4927   .debug_str:0000000000000438 .LASF98
     /tmp/ccPBObma.s:5053   .debug_str:000000000000082b .LASF103
     /tmp/ccPBObma.s:4951   .debug_str:00000000000004f0 .LASF100
     /tmp/ccPBObma.s:4967   .debug_str:000000000000055a .LASF102
     /tmp/ccPBObma.s:4875   .debug_str:00000000000002d9 .LASF104
     /tmp/ccPBObma.s:5141   .debug_str:0000000000000a3f .LASF105
     /tmp/ccPBObma.s:4819   .debug_str:000000000000013f .LASF106
     /tmp/ccPBObma.s:5079   .debug_str:00000000000008c1 .LASF107
     /tmp/ccPBObma.s:4835   .debug_str:00000000000001c4 .LASF108
     /tmp/ccPBObma.s:5055   .debug_str:0000000000000840 .LASF109
     /tmp/ccPBObma.s:4849   .debug_str:0000000000000226 .LASF110
     /tmp/ccPBObma.s:4827   .debug_str:0000000000000179 .LASF111
     /tmp/ccPBObma.s:5005   .debug_str:0000000000000709 .LASF112
     /tmp/ccPBObma.s:5073   .debug_str:00000000000008ae .LASF113
     /tmp/ccPBObma.s:4917   .debug_str:00000000000003eb .LASF114
     /tmp/ccPBObma.s:4985   .debug_str:0000000000000677 .LASF116
     /tmp/ccPBObma.s:4997   .debug_str:00000000000006ce .LASF184
     /tmp/ccPBObma.s:5125   .debug_str:00000000000009d8 .LASF117
     /tmp/ccPBObma.s:5153   .debug_str:0000000000000a8b .LASF118
     /tmp/ccPBObma.s:5149   .debug_str:0000000000000a71 .LASF119
     /tmp/ccPBObma.s:5087   .debug_str:00000000000008e1 .LASF120
     /tmp/ccPBObma.s:4873   .debug_str:00000000000002d0 .LASF121
     /tmp/ccPBObma.s:4801   .debug_str:0000000000000088 .LASF122
     /tmp/ccPBObma.s:4955   .debug_str:0000000000000508 .LASF123
     /tmp/ccPBObma.s:5001   .debug_str:00000000000006e6 .LASF124
     /tmp/ccPBObma.s:5081   .debug_str:00000000000008c7 .LASF125
     /tmp/ccPBObma.s:5127   .debug_str:00000000000009dd .LASF126
     /tmp/ccPBObma.s:5049   .debug_str:0000000000000811 .LASF127
     /tmp/ccPBObma.s:4971   .debug_str:0000000000000575 .LASF128
     /tmp/ccPBObma.s:4963   .debug_str:000000000000053a .LASF129
     /tmp/ccPBObma.s:5157   .debug_str:0000000000000aaf .LASF130
     /tmp/ccPBObma.s:4897   .debug_str:0000000000000361 .LASF131
     /tmp/ccPBObma.s:4925   .debug_str:0000000000000428 .LASF132
     /tmp/ccPBObma.s:4937   .debug_str:0000000000000476 .LASF133
     /tmp/ccPBObma.s:5051   .debug_str:0000000000000822 .LASF134
     /tmp/ccPBObma.s:4869   .debug_str:00000000000002ab .LASF135
     /tmp/ccPBObma.s:5037   .debug_str:00000000000007d1 .LASF136
     /tmp/ccPBObma.s:5063   .debug_str:0000000000000873 .LASF137
     /tmp/ccPBObma.s:5057   .debug_str:0000000000000848 .LASF138
     /tmp/ccPBObma.s:5013   .debug_str:000000000000073a .LASF139
     /tmp/ccPBObma.s:4781   .debug_str:0000000000000000 .LASF140
     /tmp/ccPBObma.s:5091   .debug_str:0000000000000905 .LASF141
     /tmp/ccPBObma.s:4861   .debug_str:0000000000000285 .LASF142
     /tmp/ccPBObma.s:4815   .debug_str:0000000000000110 .LASF144
     /tmp/ccPBObma.s:4813   .debug_str:00000000000000fb .LASF143
     /tmp/ccPBObma.s:4833   .debug_str:0000000000000198 .LASF145
     /tmp/ccPBObma.s:5161   .debug_str:0000000000000ac7 .LASF185
GAS LISTING /tmp/ccPBObma.s 			page 42


     /tmp/ccPBObma.s:4831   .debug_str:0000000000000187 .LASF186
     /tmp/ccPBObma.s:4785   .debug_str:0000000000000028 .LASF146
     /tmp/ccPBObma.s:5071   .debug_str:00000000000008a9 .LASF147
     /tmp/ccPBObma.s:4965   .debug_str:0000000000000552 .LASF148
     /tmp/ccPBObma.s:4859   .debug_str:000000000000027f .LASF149
     /tmp/ccPBObma.s:5099   .debug_str:000000000000093f .LASF150
     /tmp/ccPBObma.s:4821   .debug_str:000000000000014d .LASF151
     /tmp/ccPBObma.s:4903   .debug_str:0000000000000379 .LASF152
     /tmp/ccPBObma.s:4797   .debug_str:0000000000000067 .LASF187
     /tmp/ccPBObma.s:5151   .debug_str:0000000000000a77 .LASF188
     /tmp/ccPBObma.s:5103   .debug_str:000000000000095c .LASF153
     /tmp/ccPBObma.s:4999   .debug_str:00000000000006d3 .LASF154
     /tmp/ccPBObma.s:5045   .debug_str:00000000000007fb .LASF155
     /tmp/ccPBObma.s:4783   .debug_str:0000000000000010 .LASF156
     /tmp/ccPBObma.s:4799   .debug_str:000000000000007f .LASF157
     /tmp/ccPBObma.s:4795   .debug_str:000000000000005d .LASF189
     /tmp/ccPBObma.s:1150   .text:00000000000004b8 .LFE26
     /tmp/ccPBObma.s:4342   .debug_loc:0000000000000000 .LLST14
     /tmp/ccPBObma.s:5061   .debug_str:000000000000086c .LASF158
     /tmp/ccPBObma.s:4373   .debug_loc:0000000000000095 .LLST15
     /tmp/ccPBObma.s:4757   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccPBObma.s:4969   .debug_str:000000000000056b .LASF159
     /tmp/ccPBObma.s:4388   .debug_loc:00000000000000de .LLST16
     /tmp/ccPBObma.s:5085   .debug_str:00000000000008dc .LASF160
     /tmp/ccPBObma.s:4415   .debug_loc:0000000000000160 .LLST17
     /tmp/ccPBObma.s:692    .text:0000000000000320 .LBB91
     /tmp/ccPBObma.s:766    .text:0000000000000358 .LBE91
     /tmp/ccPBObma.s:4426   .debug_loc:0000000000000196 .LLST19
     /tmp/ccPBObma.s:5129   .debug_str:00000000000009e8 .LASF161
     /tmp/ccPBObma.s:4433   .debug_loc:00000000000001b9 .LLST20
     /tmp/ccPBObma.s:694    .text:0000000000000320 .LBB92
     /tmp/ccPBObma.s:710    .text:000000000000032c .LBE92
     /tmp/ccPBObma.s:712    .text:000000000000032c .LBB94
     /tmp/ccPBObma.s:728    .text:0000000000000338 .LBE94
     /tmp/ccPBObma.s:738    .text:000000000000034c .LBB96
     /tmp/ccPBObma.s:749    .text:0000000000000350 .LBE96
     /tmp/ccPBObma.s:4440   .debug_loc:00000000000001dc .LLST21
     /tmp/ccPBObma.s:751    .text:0000000000000350 .LBB98
     /tmp/ccPBObma.s:765    .text:0000000000000358 .LBE98
     /tmp/ccPBObma.s:4447   .debug_loc:00000000000001ff .LLST22
     /tmp/ccPBObma.s:736    .text:000000000000034c .LVL50
     /tmp/ccPBObma.s:882    .text:000000000000039c .LBB134
     /tmp/ccPBObma.s:906    .text:00000000000003b0 .LBE134
     /tmp/ccPBObma.s:4454   .debug_loc:0000000000000222 .LLST36
     /tmp/ccPBObma.s:5131   .debug_str:00000000000009f0 .LASF162
     /tmp/ccPBObma.s:4469   .debug_loc:000000000000025c .LLST37
     /tmp/ccPBObma.s:898    .text:00000000000003ac .LVL61
     /tmp/ccPBObma.s:911    .text:00000000000003b4 .LBB129
     /tmp/ccPBObma.s:932    .text:00000000000003c4 .LBE129
     /tmp/ccPBObma.s:4829   .debug_str:0000000000000182 .LASF163
     /tmp/ccPBObma.s:4476   .debug_loc:000000000000027f .LLST34
     /tmp/ccPBObma.s:4817   .debug_str:0000000000000138 .LASF164
     /tmp/ccPBObma.s:4488   .debug_loc:00000000000002b6 .LLST35
     /tmp/ccPBObma.s:924    .text:00000000000003c0 .LVL64
     /tmp/ccPBObma.s:4949   .debug_str:00000000000004e2 .LASF165
     /tmp/ccPBObma.s:4495   .debug_loc:00000000000002d9 .LLST30
     /tmp/ccPBObma.s:4506   .debug_loc:000000000000030f .LLST31
GAS LISTING /tmp/ccPBObma.s 			page 43


     /tmp/ccPBObma.s:4807   .debug_str:00000000000000bc .LASF166
     /tmp/ccPBObma.s:4517   .debug_loc:0000000000000345 .LLST32
     /tmp/ccPBObma.s:4891   .debug_str:0000000000000343 .LASF167
     /tmp/ccPBObma.s:4528   .debug_loc:000000000000037b .LLST33
     /tmp/ccPBObma.s:965    .text:00000000000003e0 .LVL69
     /tmp/ccPBObma.s:974    .text:00000000000003fc .LVL70
     /tmp/ccPBObma.s:1137   .text:00000000000004ac .LVL84
     /tmp/ccPBObma.s:1002   .text:0000000000000414 .LBB117
     /tmp/ccPBObma.s:1047   .text:000000000000043c .LBE117
     /tmp/ccPBObma.s:4535   .debug_loc:000000000000039e .LLST28
     /tmp/ccPBObma.s:1004   .text:0000000000000414 .LBB118
     /tmp/ccPBObma.s:1021   .text:0000000000000420 .LBE118
     /tmp/ccPBObma.s:1032   .text:0000000000000434 .LBB120
     /tmp/ccPBObma.s:1046   .text:000000000000043c .LBE120
     /tmp/ccPBObma.s:4542   .debug_loc:00000000000003c1 .LLST29
     /tmp/ccPBObma.s:1030   .text:0000000000000434 .LVL74
     /tmp/ccPBObma.s:1049   .text:000000000000043c .LBB110
     /tmp/ccPBObma.s:1130   .text:00000000000004a0 .LBE110
     /tmp/ccPBObma.s:4549   .debug_loc:00000000000003e4 .LLST24
     /tmp/ccPBObma.s:1058   .text:000000000000044c .LBB111
     /tmp/ccPBObma.s:1074   .text:0000000000000458 .LBE111
     /tmp/ccPBObma.s:1087   .text:000000000000047c .LBB113
     /tmp/ccPBObma.s:1095   .text:0000000000000484 .LBE113
     /tmp/ccPBObma.s:4556   .debug_loc:0000000000000407 .LLST25
     /tmp/ccPBObma.s:4564   .debug_loc:000000000000042b .LLST26
     /tmp/ccPBObma.s:1102   .text:000000000000048c .LBB115
     /tmp/ccPBObma.s:1116   .text:0000000000000494 .LBE115
     /tmp/ccPBObma.s:4571   .debug_loc:000000000000044e .LLST27
     /tmp/ccPBObma.s:1099   .text:000000000000048c .LVL80
     /tmp/ccPBObma.s:622    .text:00000000000002d4 .LBB89
     /tmp/ccPBObma.s:629    .text:00000000000002d8 .LBE89
     /tmp/ccPBObma.s:4578   .debug_loc:0000000000000471 .LLST18
     /tmp/ccPBObma.s:636    .text:00000000000002dc .LBB100
     /tmp/ccPBObma.s:651    .text:00000000000002e8 .LBE100
     /tmp/ccPBObma.s:4585   .debug_loc:0000000000000494 .LLST23
     /tmp/ccPBObma.s:780    .text:000000000000035c .LBB103
     /tmp/ccPBObma.s:797    .text:0000000000000368 .LBE103
     /tmp/ccPBObma.s:866    .text:0000000000000394 .LBB140
     /tmp/ccPBObma.s:880    .text:000000000000039c .LBE140
     /tmp/ccPBObma.s:4593   .debug_loc:00000000000004b8 .LLST38
     /tmp/ccPBObma.s:609    .text:00000000000002b4 .LVL40
     /tmp/ccPBObma.s:577    .text:0000000000000280 .LBB84
     /tmp/ccPBObma.s:593    .text:000000000000028c .LBE84
     /tmp/ccPBObma.s:662    .text:00000000000002f8 .LVL46
     /tmp/ccPBObma.s:1141   .text:00000000000004b8 .LVL85
     /tmp/ccPBObma.s:387    .text:000000000000018c .LFB25
     /tmp/ccPBObma.s:531    .text:0000000000000254 .LFE25
     /tmp/ccPBObma.s:4600   .debug_loc:00000000000004db .LLST8
     /tmp/ccPBObma.s:4614   .debug_loc:0000000000000514 .LLST9
     /tmp/ccPBObma.s:5097   .debug_str:0000000000000938 .LASF168
     /tmp/ccPBObma.s:4621   .debug_loc:0000000000000537 .LLST10
     /tmp/ccPBObma.s:4643   .debug_loc:0000000000000596 .LLST11
     /tmp/ccPBObma.s:404    .text:00000000000001a4 .LBB78
     /tmp/ccPBObma.s:420    .text:00000000000001b0 .LBE78
     /tmp/ccPBObma.s:422    .text:00000000000001b0 .LBB80
     /tmp/ccPBObma.s:434    .text:00000000000001b8 .LBE80
     /tmp/ccPBObma.s:4665   .debug_loc:00000000000005d7 .LLST12
GAS LISTING /tmp/ccPBObma.s 			page 44


     /tmp/ccPBObma.s:505    .text:0000000000000238 .LBB82
     /tmp/ccPBObma.s:516    .text:000000000000023c .LBE82
     /tmp/ccPBObma.s:4673   .debug_loc:00000000000005fb .LLST13
     /tmp/ccPBObma.s:489    .text:000000000000021c .LVL33
     /tmp/ccPBObma.s:496    .text:000000000000022c .LVL34
     /tmp/ccPBObma.s:279    .text:000000000000011c .LFB24
     /tmp/ccPBObma.s:381    .text:000000000000018c .LFE24
     /tmp/ccPBObma.s:5067   .debug_str:0000000000000896 .LASF169
     /tmp/ccPBObma.s:4680   .debug_loc:000000000000061e .LLST4
     /tmp/ccPBObma.s:4691   .debug_loc:0000000000000654 .LLST5
     /tmp/ccPBObma.s:297    .text:0000000000000138 .LBB72
     /tmp/ccPBObma.s:313    .text:0000000000000144 .LBE72
     /tmp/ccPBObma.s:315    .text:0000000000000144 .LBB74
     /tmp/ccPBObma.s:328    .text:000000000000014c .LBE74
     /tmp/ccPBObma.s:4698   .debug_loc:0000000000000677 .LLST6
     /tmp/ccPBObma.s:354    .text:0000000000000170 .LBB76
     /tmp/ccPBObma.s:365    .text:0000000000000174 .LBE76
     /tmp/ccPBObma.s:4706   .debug_loc:000000000000069b .LLST7
     /tmp/ccPBObma.s:338    .text:000000000000015c .LVL17
     /tmp/ccPBObma.s:244    .text:00000000000000fc .LFB23
     /tmp/ccPBObma.s:273    .text:000000000000011c .LFE23
     /tmp/ccPBObma.s:175    .text:00000000000000b4 .LFB22
     /tmp/ccPBObma.s:207    .text:00000000000000d4 .LFE22
     /tmp/ccPBObma.s:186    .text:00000000000000c0 .LBB70
     /tmp/ccPBObma.s:198    .text:00000000000000c8 .LBE70
     /tmp/ccPBObma.s:4713   .debug_loc:00000000000006be .LLST3
     /tmp/ccPBObma.s:137    .text:0000000000000094 .LFB21
     /tmp/ccPBObma.s:169    .text:00000000000000b4 .LFE21
     /tmp/ccPBObma.s:148    .text:00000000000000a0 .LBB68
     /tmp/ccPBObma.s:160    .text:00000000000000a8 .LBE68
     /tmp/ccPBObma.s:4721   .debug_loc:00000000000006e2 .LLST2
     /tmp/ccPBObma.s:213    .text:00000000000000d4 .LFB20
     /tmp/ccPBObma.s:238    .text:00000000000000fc .LFE20
     /tmp/ccPBObma.s:227    .text:00000000000000ec .LVL13
     /tmp/ccPBObma.s:107    .text:0000000000000094 .LFE19
     /tmp/ccPBObma.s:32     .text:0000000000000020 .LBB64
     /tmp/ccPBObma.s:44     .text:0000000000000024 .LBE64
     /tmp/ccPBObma.s:70     .text:0000000000000058 .LBB66
     /tmp/ccPBObma.s:79     .text:0000000000000060 .LBE66
     /tmp/ccPBObma.s:4729   .debug_loc:0000000000000706 .LLST0
     /tmp/ccPBObma.s:4737   .debug_loc:000000000000072a .LLST1
     /tmp/ccPBObma.s:50     .text:0000000000000030 .LVL2
     /tmp/ccPBObma.s:57     .text:0000000000000044 .LVL3
     /tmp/ccPBObma.s:63     .text:000000000000004c .LVL4
     /tmp/ccPBObma.s:100    .text:0000000000000088 .LVL7
     /tmp/ccPBObma.s:104    .text:0000000000000094 .LVL8
     /tmp/ccPBObma.s:4865   .debug_str:000000000000029a .LASF170
     /tmp/ccPBObma.s:5115   .debug_str:00000000000009a6 .LASF171
     /tmp/ccPBObma.s:4901   .debug_str:0000000000000373 .LASF172
     /tmp/ccPBObma.s:5033   .debug_str:00000000000007ad .LASF173
     /tmp/ccPBObma.s:4895   .debug_str:0000000000000359 .LASF175
     /tmp/ccPBObma.s:5159   .debug_str:0000000000000abc .LASF174
     /tmp/ccPBObma.s:4899   .debug_str:000000000000036d .LASF176
     /tmp/ccPBObma.s:4907   .debug_str:0000000000000393 .LASF177
     /tmp/ccPBObma.s:5147   .debug_str:0000000000000a62 .LASF190
     /tmp/ccPBObma.s:4811   .debug_str:00000000000000e3 .LASF191
     /tmp/ccPBObma.s:4863   .debug_str:0000000000000293 .LASF178
GAS LISTING /tmp/ccPBObma.s 			page 45


     /tmp/ccPBObma.s:4889   .debug_str:000000000000033d .LASF179
     /tmp/ccPBObma.s:4995   .debug_str:00000000000006c7 .LASF180
     /tmp/ccPBObma.s:574    .text:0000000000000280 .LVL38
     /tmp/ccPBObma.s:632    .text:00000000000002dc .LVL43
     /tmp/ccPBObma.s:648    .text:00000000000002e8 .LVL44
     /tmp/ccPBObma.s:656    .text:00000000000002f0 .LVL45
     /tmp/ccPBObma.s:686    .text:0000000000000320 .LVL47
     /tmp/ccPBObma.s:726    .text:0000000000000338 .LVL49
     /tmp/ccPBObma.s:762    .text:0000000000000358 .LVL52
     /tmp/ccPBObma.s:858    .text:0000000000000394 .LVL57
     /tmp/ccPBObma.s:877    .text:000000000000039c .LVL58
     /tmp/ccPBObma.s:1019   .text:0000000000000420 .LVL73
     /tmp/ccPBObma.s:1043   .text:000000000000043c .LVL75
     /tmp/ccPBObma.s:1072   .text:0000000000000458 .LVL77
     /tmp/ccPBObma.s:1113   .text:0000000000000494 .LVL81
     /tmp/ccPBObma.s:591    .text:000000000000028c .LVL39
     /tmp/ccPBObma.s:789    .text:0000000000000360 .LVL54
     /tmp/ccPBObma.s:777    .text:000000000000035c .LVL53
     /tmp/ccPBObma.s:908    .text:00000000000003b4 .LVL62
     /tmp/ccPBObma.s:934    .text:00000000000003c8 .LVL65
     /tmp/ccPBObma.s:998    .text:0000000000000414 .LVL71
     /tmp/ccPBObma.s:1013   .text:0000000000000418 .LVL72
     /tmp/ccPBObma.s:1053   .text:0000000000000444 .LVL76
     /tmp/ccPBObma.s:795    .text:0000000000000368 .LVL55
     /tmp/ccPBObma.s:801    .text:000000000000036c .LVL56
     /tmp/ccPBObma.s:1129   .text:00000000000004a0 .LVL83
     /tmp/ccPBObma.s:708    .text:000000000000032c .LVL48
     /tmp/ccPBObma.s:746    .text:0000000000000350 .LVL51
     /tmp/ccPBObma.s:890    .text:00000000000003a0 .LVL59
     /tmp/ccPBObma.s:896    .text:00000000000003a4 .LVL60
     /tmp/ccPBObma.s:919    .text:00000000000003b8 .LVL63
     /tmp/ccPBObma.s:953    .text:00000000000003d0 .LVL67
     /tmp/ccPBObma.s:1126   .text:000000000000049c .LVL82
     /tmp/ccPBObma.s:959    .text:00000000000003d4 .LVL68
     /tmp/ccPBObma.s:947    .text:00000000000003cc .LVL66
     /tmp/ccPBObma.s:1086   .text:000000000000047c .LVL78
     /tmp/ccPBObma.s:1093   .text:0000000000000484 .LVL79
     /tmp/ccPBObma.s:621    .text:00000000000002d4 .LVL41
     /tmp/ccPBObma.s:627    .text:00000000000002d8 .LVL42
     /tmp/ccPBObma.s:390    .text:000000000000018c .LVL23
     /tmp/ccPBObma.s:444    .text:00000000000001bc .LVL26
     /tmp/ccPBObma.s:418    .text:00000000000001b0 .LVL24
     /tmp/ccPBObma.s:500    .text:0000000000000230 .LVL35
     /tmp/ccPBObma.s:448    .text:00000000000001c0 .LVL27
     /tmp/ccPBObma.s:455    .text:00000000000001c8 .LVL28
     /tmp/ccPBObma.s:466    .text:00000000000001ec .LVL29
     /tmp/ccPBObma.s:476    .text:0000000000000200 .LVL31
     /tmp/ccPBObma.s:481    .text:0000000000000204 .LVL32
     /tmp/ccPBObma.s:472    .text:00000000000001f8 .LVL30
     /tmp/ccPBObma.s:431    .text:00000000000001b8 .LVL25
     /tmp/ccPBObma.s:504    .text:0000000000000238 .LVL36
     /tmp/ccPBObma.s:513    .text:000000000000023c .LVL37
     /tmp/ccPBObma.s:282    .text:000000000000011c .LVL14
     /tmp/ccPBObma.s:324    .text:000000000000014c .LVL16
     /tmp/ccPBObma.s:374    .text:0000000000000180 .LVL22
     /tmp/ccPBObma.s:311    .text:0000000000000144 .LVL15
     /tmp/ccPBObma.s:349    .text:0000000000000168 .LVL19
GAS LISTING /tmp/ccPBObma.s 			page 46


     /tmp/ccPBObma.s:353    .text:0000000000000170 .LVL20
     /tmp/ccPBObma.s:362    .text:0000000000000174 .LVL21
     /tmp/ccPBObma.s:185    .text:00000000000000c0 .LVL11
     /tmp/ccPBObma.s:195    .text:00000000000000c8 .LVL12
     /tmp/ccPBObma.s:147    .text:00000000000000a0 .LVL9
     /tmp/ccPBObma.s:157    .text:00000000000000a8 .LVL10
     /tmp/ccPBObma.s:69     .text:0000000000000058 .LVL5
     /tmp/ccPBObma.s:77     .text:0000000000000060 .LVL6
     /tmp/ccPBObma.s:1191   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccPBObma.s:602    .text:00000000000002a4 .LBB87
     /tmp/ccPBObma.s:652    .text:00000000000002e8 .LBE87
     /tmp/ccPBObma.s:690    .text:0000000000000320 .LBB143
     /tmp/ccPBObma.s:807    .text:0000000000000374 .LBE143
     /tmp/ccPBObma.s:811    .text:0000000000000374 .LBB144
     /tmp/ccPBObma.s:818    .text:000000000000037c .LBE144
     /tmp/ccPBObma.s:822    .text:000000000000037c .LBB145
     /tmp/ccPBObma.s:831    .text:0000000000000384 .LBE145
     /tmp/ccPBObma.s:835    .text:0000000000000384 .LBB146
     /tmp/ccPBObma.s:846    .text:000000000000038c .LBE146
     /tmp/ccPBObma.s:850    .text:000000000000038c .LBB147
     /tmp/ccPBObma.s:1147   .text:00000000000004b8 .LBE147
     /tmp/ccPBObma.s:937    .text:00000000000003c8 .LBB124
     /tmp/ccPBObma.s:1000   .text:0000000000000414 .LBE124
     /tmp/ccPBObma.s:1133   .text:00000000000004a0 .LBB126
     /tmp/ccPBObma.s:1143   .text:00000000000004b8 .LBE126
     /tmp/ccPBObma.s:110    .gcc_except_table:0000000000000000 .LLSDA19
     /tmp/ccPBObma.s:1152   .gcc_except_table:0000000000000038 .LLSDA26

UNDEFINED SYMBOLS
_ZN5Riscv14supervisorTrapEv
_Znwm
_ZN6ThreadC1EPFvPvES0_
_ZN9Scheduler3getEv
_ZN3PCB7runningE
_ZdlPv
_Unwind_Resume
__gxx_personality_v0
__putc
_ZN3PCB16timeSliceCounterE
console_handler
_ZN3PCB8dispatchEv
_Z7kmallocm
_Z5kfreePv
_ZN3PCBnwEm
_ZN3PCBC1EPFvPvES0_S0_m
_ZN3PCB10exitingPCBE
_ZN3PCBdlEPv
