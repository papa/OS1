GAS LISTING /tmp/cclof41u.s 			page 1


   1              		.file	"Riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv15userMainWrapperEPv
   9              	_ZN5Riscv15userMainWrapperEPv:
  10              	.LFB35:
  11              		.file 1 "src/Riscv.cpp"
   1:src/Riscv.cpp **** //
   2:src/Riscv.cpp **** // Created by os on 4/27/22.
   3:src/Riscv.cpp **** //
   4:src/Riscv.cpp **** 
   5:src/Riscv.cpp **** #include "../h/Riscv.hpp"
   6:src/Riscv.cpp **** #include "../h/MemoryAllocator.hpp"
   7:src/Riscv.cpp **** #include "../h/PCB.hpp"
   8:src/Riscv.cpp **** #include "../lib/console.h"
   9:src/Riscv.cpp **** #include "../h/syscall_cpp.hpp"
  10:src/Riscv.cpp **** #include "../h/SleepPCBList.hpp"
  11:src/Riscv.cpp **** #include "../h/KConsole.hpp"
  12:src/Riscv.cpp **** #include "../h/Tests.hpp"
  13:src/Riscv.cpp **** #include "../test/userMain.hpp"
  14:src/Riscv.cpp **** 
  15:src/Riscv.cpp **** //extern const uint64 CONSOLE_STATUS;
  16:src/Riscv.cpp **** //extern const uint64 CONSOLE_TX_DATA;
  17:src/Riscv.cpp **** //extern const uint64 CONSOLE_RX_DATA;
  18:src/Riscv.cpp **** 
  19:src/Riscv.cpp **** void Riscv::getCharactersFromConsole()
  20:src/Riscv.cpp **** {
  21:src/Riscv.cpp ****     //uint64 addr = CONSOLE_STATUS;
  22:src/Riscv.cpp ****     //__asm__ volatile("ld a0, %0" : : "r"(addr));
  23:src/Riscv.cpp **** }
  24:src/Riscv.cpp **** 
  25:src/Riscv.cpp **** void Riscv::initSystem()
  26:src/Riscv.cpp **** {
  27:src/Riscv.cpp ****     w_stvec((uint64)&Riscv::supervisorTrap);
  28:src/Riscv.cpp ****     PCB::initialize();
  29:src/Riscv.cpp ****     KConsole::initialize();
  30:src/Riscv.cpp **** }
  31:src/Riscv.cpp **** 
  32:src/Riscv.cpp **** void Riscv::endSystem() {
  33:src/Riscv.cpp ****     //todo
  34:src/Riscv.cpp ****     //da li treba jos nesto da se ocisti
  35:src/Riscv.cpp ****     Riscv::disableInterrupts();
  36:src/Riscv.cpp **** }
  37:src/Riscv.cpp **** 
  38:src/Riscv.cpp **** 
  39:src/Riscv.cpp **** void Riscv::enableInterrupts() {
  40:src/Riscv.cpp ****     ms_sstatus(Riscv::SSTATUS_SIE);
  41:src/Riscv.cpp **** }
  42:src/Riscv.cpp **** 
  43:src/Riscv.cpp **** void Riscv::disableInterrupts()
  44:src/Riscv.cpp **** {
  45:src/Riscv.cpp ****     mc_sstatus(Riscv::SSTATUS_SIE);
  46:src/Riscv.cpp **** }
  47:src/Riscv.cpp **** 
GAS LISTING /tmp/cclof41u.s 			page 2


  48:src/Riscv.cpp **** void Riscv::popSppSpie() {
  49:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
  50:src/Riscv.cpp ****     __asm__ volatile ("sret");
  51:src/Riscv.cpp **** }
  52:src/Riscv.cpp **** 
  53:src/Riscv.cpp **** void Riscv::printString(const char *string)
  54:src/Riscv.cpp **** {
  55:src/Riscv.cpp ****     uint64 sstatus = r_sstatus();
  56:src/Riscv.cpp ****     mc_sstatus(SSTATUS_SIE);
  57:src/Riscv.cpp ****     while (*string != '\0')
  58:src/Riscv.cpp ****     {
  59:src/Riscv.cpp ****         __putc(*string);
  60:src/Riscv.cpp ****         string++;
  61:src/Riscv.cpp ****     }
  62:src/Riscv.cpp ****     ms_sstatus(sstatus & SSTATUS_SIE ? SSTATUS_SIE : 0);
  63:src/Riscv.cpp **** }
  64:src/Riscv.cpp **** 
  65:src/Riscv.cpp **** void Riscv::printInteger(uint64 num)
  66:src/Riscv.cpp **** {
  67:src/Riscv.cpp ****     uint64 sstatus = r_sstatus();
  68:src/Riscv.cpp ****     mc_sstatus(SSTATUS_SIE);
  69:src/Riscv.cpp ****     static char digits[] = "0123456789";
  70:src/Riscv.cpp ****     char buf[16];
  71:src/Riscv.cpp ****     int i, neg;
  72:src/Riscv.cpp ****     uint x;
  73:src/Riscv.cpp **** 
  74:src/Riscv.cpp ****     neg = 0;
  75:src/Riscv.cpp ****     if(num < 0)
  76:src/Riscv.cpp ****     {
  77:src/Riscv.cpp ****         neg = 1;
  78:src/Riscv.cpp ****         x = -num;
  79:src/Riscv.cpp ****     }
  80:src/Riscv.cpp ****     else
  81:src/Riscv.cpp ****         x = num;
  82:src/Riscv.cpp **** 
  83:src/Riscv.cpp ****     i = 0;
  84:src/Riscv.cpp ****     do
  85:src/Riscv.cpp ****     {
  86:src/Riscv.cpp ****         buf[i++] = digits[x%10];
  87:src/Riscv.cpp ****     }while((x/=10) != 0);
  88:src/Riscv.cpp ****     if(neg)
  89:src/Riscv.cpp ****         buf[i++] = '-';
  90:src/Riscv.cpp **** 
  91:src/Riscv.cpp ****     while(--i >= 0)
  92:src/Riscv.cpp ****         __putc(buf[i]);
  93:src/Riscv.cpp **** 
  94:src/Riscv.cpp ****     __putc('\n');
  95:src/Riscv.cpp **** 
  96:src/Riscv.cpp ****     ms_sstatus(sstatus & SSTATUS_SIE ? SSTATUS_SIE : 0);
  97:src/Riscv.cpp **** }
  98:src/Riscv.cpp **** 
  99:src/Riscv.cpp **** void Riscv::handleSupervisorTrap()
 100:src/Riscv.cpp **** {
 101:src/Riscv.cpp ****     uint64 a4;
 102:src/Riscv.cpp ****     __asm__ volatile("mv %0, a4" : "=r"(a4));
 103:src/Riscv.cpp **** 
 104:src/Riscv.cpp ****     uint64 scause = Riscv::r_scause();
GAS LISTING /tmp/cclof41u.s 			page 3


 105:src/Riscv.cpp **** 
 106:src/Riscv.cpp ****     switch(scause)
 107:src/Riscv.cpp ****     {
 108:src/Riscv.cpp **** 
 109:src/Riscv.cpp ****         case timerInterrupt:
 110:src/Riscv.cpp **** 
 111:src/Riscv.cpp ****             Riscv::mc_sip(Riscv::SIP_SSIP);
 112:src/Riscv.cpp ****             //Riscv::printString("timerInterrupt\n");
 113:src/Riscv.cpp **** 
 114:src/Riscv.cpp ****             static uint64 total = 0;
 115:src/Riscv.cpp ****             total++;
 116:src/Riscv.cpp ****             Riscv::printInteger(total);
 117:src/Riscv.cpp **** 
 118:src/Riscv.cpp ****             PCB::timeSliceCounter++;
 119:src/Riscv.cpp **** 
 120:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
 121:src/Riscv.cpp **** 
 122:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
 123:src/Riscv.cpp ****             {
 124:src/Riscv.cpp ****                 uint64 sepc = Riscv::r_sepc();
 125:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 126:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 127:src/Riscv.cpp ****                 PCB::dispatch();
 128:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 129:src/Riscv.cpp ****                 Riscv::w_sepc(sepc);
 130:src/Riscv.cpp ****             }
 131:src/Riscv.cpp **** 
 132:src/Riscv.cpp ****             return;
 133:src/Riscv.cpp **** 
 134:src/Riscv.cpp ****         case hwInterrupt: // todo
 135:src/Riscv.cpp **** 
 136:src/Riscv.cpp ****             //Riscv::printString("Hardware interrupt...\n");
 137:src/Riscv.cpp **** 
 138:src/Riscv.cpp ****             break;
 139:src/Riscv.cpp **** 
 140:src/Riscv.cpp ****         case operationInterrupt: // todo
 141:src/Riscv.cpp ****             break;
 142:src/Riscv.cpp **** 
 143:src/Riscv.cpp ****         case addrReadInterrupt: // todo
 144:src/Riscv.cpp ****             break;
 145:src/Riscv.cpp **** 
 146:src/Riscv.cpp ****         case addrWriteInterrupt: // todo
 147:src/Riscv.cpp ****             break;
 148:src/Riscv.cpp **** 
 149:src/Riscv.cpp ****         case ecallSystemInterupt:
 150:src/Riscv.cpp ****         case ecallUserInterrupt:
 151:src/Riscv.cpp **** 
 152:src/Riscv.cpp ****             uint64 operation;
 153:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
 154:src/Riscv.cpp **** 
 155:src/Riscv.cpp ****             uint64 sepc = Riscv::r_sepc();
 156:src/Riscv.cpp ****             sepc+=4;
 157:src/Riscv.cpp **** 
 158:src/Riscv.cpp ****             if(operation == MemoryAllocator::MEM_ALLOC)
 159:src/Riscv.cpp ****             {
 160:src/Riscv.cpp ****                 size_t size;
 161:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(size));
GAS LISTING /tmp/cclof41u.s 			page 4


 162:src/Riscv.cpp ****                 size*=MEM_BLOCK_SIZE;
 163:src/Riscv.cpp ****                 void* allocatedAddr = kmalloc(size);
 164:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : : "r"((uint64)allocatedAddr));
 165:src/Riscv.cpp ****             }
 166:src/Riscv.cpp ****             else if(operation == MemoryAllocator::MEM_FREE)
 167:src/Riscv.cpp ****             {
 168:src/Riscv.cpp ****                 uint64 addr = 0;
 169:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(addr));
 170:src/Riscv.cpp ****                 uint64 retval = kfree((void*)addr);
 171:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 172:src/Riscv.cpp ****             }
 173:src/Riscv.cpp ****             else if(operation == PCB::THREAD_CREATE)
 174:src/Riscv.cpp ****             {
 175:src/Riscv.cpp ****                 uint64 start_routine;
 176:src/Riscv.cpp ****                 uint64 args;
 177:src/Riscv.cpp ****                 PCB** threadHandle;
 178:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(threadHandle));
 179:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(start_routine));
 180:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a3" : "=r"(args));
 181:src/Riscv.cpp ****                 //todo
 182:src/Riscv.cpp ****                 //uint64 stack_space;
 183:src/Riscv.cpp ****                 //__asm__ volatile("mv %0, a4" : "=r"(stack_space));
 184:src/Riscv.cpp **** 
 185:src/Riscv.cpp ****                 PCB* newPCB = new PCB((void (*)(void*))start_routine, (void*)args, (void*)a4, DEFAU
 186:src/Riscv.cpp **** 
 187:src/Riscv.cpp ****                 (*threadHandle) = newPCB;
 188:src/Riscv.cpp **** 
 189:src/Riscv.cpp ****                 if(newPCB == 0)
 190:src/Riscv.cpp ****                     __asm__ volatile("li a0, 0xffffffffffffffff");
 191:src/Riscv.cpp ****                 else
 192:src/Riscv.cpp ****                     __asm__ volatile("li a0, 0");
 193:src/Riscv.cpp ****             }
 194:src/Riscv.cpp ****             else if(operation == PCB::THREAD_DISPATCH)
 195:src/Riscv.cpp ****             {
 196:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 197:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 198:src/Riscv.cpp ****                 PCB::dispatch();
 199:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 200:src/Riscv.cpp ****             }
 201:src/Riscv.cpp ****             else if(operation == PCB::THREAD_EXIT)
 202:src/Riscv.cpp ****             {
 203:src/Riscv.cpp ****                 if(PCB::running == 0)
 204:src/Riscv.cpp ****                 {
 205:src/Riscv.cpp ****                     __asm__ volatile("li a0, 0xffffffffffffffff");
 206:src/Riscv.cpp ****                     return;
 207:src/Riscv.cpp ****                 }
 208:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 209:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 210:src/Riscv.cpp ****                 PCB::running->setState(PCB::EXITING);
 211:src/Riscv.cpp ****                 PCB::running->setState(PCB::FINISHED);
 212:src/Riscv.cpp ****                 PCB::dispatch();
 213:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 214:src/Riscv.cpp ****             }
 215:src/Riscv.cpp ****             else if(operation == PCB::TIME_SLEEP)
 216:src/Riscv.cpp ****             {
 217:src/Riscv.cpp ****                 uint64 time;
 218:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(time));
GAS LISTING /tmp/cclof41u.s 			page 5


 219:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 220:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 221:src/Riscv.cpp ****                 PCB::running->setTimeToSleep(time);
 222:src/Riscv.cpp ****                 SleepPCBList::insertSleepingPCB();
 223:src/Riscv.cpp ****                 PCB::dispatch();
 224:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 225:src/Riscv.cpp ****                 //todo
 226:src/Riscv.cpp ****                 //kad treba vratiti kod greske
 227:src/Riscv.cpp ****                 __asm__ volatile("li a0, 0x0");
 228:src/Riscv.cpp ****             }
 229:src/Riscv.cpp ****             else if(operation == KSemaphore::SEM_OPEN)
 230:src/Riscv.cpp ****             {
 231:src/Riscv.cpp ****                 uint64 val;
 232:src/Riscv.cpp ****                 KSemaphore** semaphoreHandle;
 233:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(semaphoreHandle));
 234:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(val));
 235:src/Riscv.cpp **** 
 236:src/Riscv.cpp ****                 KSemaphore* newSem = new KSemaphore(val);
 237:src/Riscv.cpp **** 
 238:src/Riscv.cpp ****                 (*semaphoreHandle) = newSem;
 239:src/Riscv.cpp **** 
 240:src/Riscv.cpp ****                 if(newSem == 0)
 241:src/Riscv.cpp ****                         __asm__ volatile("li a0, 0xffffffffffffffff");
 242:src/Riscv.cpp ****                 else
 243:src/Riscv.cpp ****                         __asm__ volatile("li a0, 0");
 244:src/Riscv.cpp **** 
 245:src/Riscv.cpp ****             }
 246:src/Riscv.cpp ****             else if(operation == KSemaphore::SEM_WAIT)
 247:src/Riscv.cpp ****             {
 248:src/Riscv.cpp ****                 //todo
 249:src/Riscv.cpp ****                 //negativna povratna vrednost sta i kako
 250:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 251:src/Riscv.cpp ****                 KSemaphore* kSem;
 252:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(kSem));
 253:src/Riscv.cpp ****                 uint64 retval = kSem->wait();
 254:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 255:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 256:src/Riscv.cpp ****             }
 257:src/Riscv.cpp ****             else if(operation == KSemaphore::SEM_SIGNAL)
 258:src/Riscv.cpp ****             {
 259:src/Riscv.cpp ****                 //todo
 260:src/Riscv.cpp ****                 //negativna povratna vrednost sta i kako
 261:src/Riscv.cpp ****                 KSemaphore* kSem;
 262:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(kSem));
 263:src/Riscv.cpp ****                 uint64 retval = kSem->signal();
 264:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 265:src/Riscv.cpp ****             }
 266:src/Riscv.cpp ****             else if(operation == KSemaphore::SEM_CLOSE)
 267:src/Riscv.cpp ****             {
 268:src/Riscv.cpp ****                 //todo
 269:src/Riscv.cpp ****                 //negativna povratna vrednost sta i kako
 270:src/Riscv.cpp ****                 KSemaphore* kSem;
 271:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(kSem));
 272:src/Riscv.cpp **** 
 273:src/Riscv.cpp ****                 delete kSem;
 274:src/Riscv.cpp **** 
 275:src/Riscv.cpp ****                 __asm__ volatile("li a0, 0");
GAS LISTING /tmp/cclof41u.s 			page 6


 276:src/Riscv.cpp ****             }
 277:src/Riscv.cpp **** 
 278:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 279:src/Riscv.cpp **** 
 280:src/Riscv.cpp ****             return;
 281:src/Riscv.cpp ****     }
 282:src/Riscv.cpp **** 
 283:src/Riscv.cpp ****     console_handler();
 284:src/Riscv.cpp **** }
 285:src/Riscv.cpp **** 
 286:src/Riscv.cpp **** void Riscv::kernelMain()
 287:src/Riscv.cpp **** {
 288:src/Riscv.cpp ****     initSystem();
 289:src/Riscv.cpp **** 
 290:src/Riscv.cpp ****     //enableInterrupts();
 291:src/Riscv.cpp ****     //todo
 292:src/Riscv.cpp ****     //go to unprivileged mode
 293:src/Riscv.cpp **** 
 294:src/Riscv.cpp ****     PCB* userPCB = new PCB(&Riscv::userMainWrapper, 0, kmalloc(DEFAULT_STACK_SIZE), DEFAULT_TIME_SL
 295:src/Riscv.cpp **** 
 296:src/Riscv.cpp ****     while(userPCB->getState() != PCB::FINISHED)
 297:src/Riscv.cpp ****     {
 298:src/Riscv.cpp ****         //Riscv::printString("main\n");
 299:src/Riscv.cpp ****         thread_dispatch();
 300:src/Riscv.cpp ****     }
 301:src/Riscv.cpp **** 
 302:src/Riscv.cpp ****     //myTests();
 303:src/Riscv.cpp **** 
 304:src/Riscv.cpp ****     //disableInterrupts();
 305:src/Riscv.cpp **** 
 306:src/Riscv.cpp ****     endSystem();
 307:src/Riscv.cpp **** 
 308:src/Riscv.cpp ****     Riscv::printString("End...");
 309:src/Riscv.cpp **** }
 310:src/Riscv.cpp **** 
 311:src/Riscv.cpp **** void Riscv::userMainWrapper(void* ) {
  12              		.loc 1 311 37
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23341100 		sd	ra,8(sp)
  17 0008 23308100 		sd	s0,0(sp)
  18              		.cfi_offset 1, -8
  19              		.cfi_offset 8, -16
  20 000c 13040101 		addi	s0,sp,16
  21              		.cfi_def_cfa 8, 0
 312:src/Riscv.cpp ****     userMain();
  22              		.loc 1 312 5
  23              		.loc 1 312 13 is_stmt 0
  24 0010 97000000 		call	_Z8userMainv@plt
  24      E7800000 
  25              	.LVL0:
 313:src/Riscv.cpp **** }
  26              		.loc 1 313 1
  27 0018 83308100 		ld	ra,8(sp)
  28              		.cfi_restore 1
  29 001c 03340100 		ld	s0,0(sp)
GAS LISTING /tmp/cclof41u.s 			page 7


  30              		.cfi_restore 8
  31              		.cfi_def_cfa 2, 16
  32 0020 13010101 		addi	sp,sp,16
  33              		.cfi_def_cfa_offset 0
  34 0024 67800000 		jr	ra
  35              		.cfi_endproc
  36              	.LFE35:
  38              		.align	2
  39              		.globl	_ZN5Riscv24getCharactersFromConsoleEv
  41              	_ZN5Riscv24getCharactersFromConsoleEv:
  42              	.LFB25:
  20:src/Riscv.cpp ****     //uint64 addr = CONSOLE_STATUS;
  43              		.loc 1 20 1 is_stmt 1
  44              		.cfi_startproc
  45 0028 130101FF 		addi	sp,sp,-16
  46              		.cfi_def_cfa_offset 16
  47 002c 23348100 		sd	s0,8(sp)
  48              		.cfi_offset 8, -8
  49 0030 13040101 		addi	s0,sp,16
  50              		.cfi_def_cfa 8, 0
  23:src/Riscv.cpp **** 
  51              		.loc 1 23 1 is_stmt 0
  52 0034 03348100 		ld	s0,8(sp)
  53              		.cfi_restore 8
  54              		.cfi_def_cfa 2, 16
  55 0038 13010101 		addi	sp,sp,16
  56              		.cfi_def_cfa_offset 0
  57 003c 67800000 		jr	ra
  58              		.cfi_endproc
  59              	.LFE25:
  61              		.align	2
  62              		.globl	_ZN5Riscv10initSystemEv
  64              	_ZN5Riscv10initSystemEv:
  65              	.LFB26:
  26:src/Riscv.cpp ****     w_stvec((uint64)&Riscv::supervisorTrap);
  66              		.loc 1 26 1 is_stmt 1
  67              		.cfi_startproc
  68 0040 130101FF 		addi	sp,sp,-16
  69              		.cfi_def_cfa_offset 16
  70 0044 23341100 		sd	ra,8(sp)
  71 0048 23308100 		sd	s0,0(sp)
  72              		.cfi_offset 1, -8
  73              		.cfi_offset 8, -16
  74 004c 13040101 		addi	s0,sp,16
  75              		.cfi_def_cfa 8, 0
  27:src/Riscv.cpp ****     PCB::initialize();
  76              		.loc 1 27 5
  27:src/Riscv.cpp ****     PCB::initialize();
  77              		.loc 1 27 12 is_stmt 0
  78 0050 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
  78      83B70700 
  79              	.LVL1:
  80              	.LBB86:
  81              	.LBB87:
  82              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 4/27/22.
GAS LISTING /tmp/cclof41u.s 			page 8


   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_0_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_0_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** class Riscv
  11:src/../h/Riscv.hpp **** {
  12:src/../h/Riscv.hpp **** private:
  13:src/../h/Riscv.hpp **** 
  14:src/../h/Riscv.hpp **** public:
  15:src/../h/Riscv.hpp ****     static void kernelMain();
  16:src/../h/Riscv.hpp **** 
  17:src/../h/Riscv.hpp ****     static void initSystem();
  18:src/../h/Riscv.hpp ****     static void endSystem();
  19:src/../h/Riscv.hpp **** 
  20:src/../h/Riscv.hpp ****     static void userMainWrapper(void* p);
  21:src/../h/Riscv.hpp **** 
  22:src/../h/Riscv.hpp ****     static void enableInterrupts();
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp ****     static void disableInterrupts();
  25:src/../h/Riscv.hpp **** 
  26:src/../h/Riscv.hpp ****     static void printString(char const *string);
  27:src/../h/Riscv.hpp **** 
  28:src/../h/Riscv.hpp ****     static void printInteger(uint64 num);
  29:src/../h/Riscv.hpp **** 
  30:src/../h/Riscv.hpp ****     static void pushRegisters();
  31:src/../h/Riscv.hpp ****     static void popRegisters();
  32:src/../h/Riscv.hpp **** 
  33:src/../h/Riscv.hpp ****     static uint64 r_scause();
  34:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  35:src/../h/Riscv.hpp **** 
  36:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  37:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
  38:src/../h/Riscv.hpp **** 
  39:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  40:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  41:src/../h/Riscv.hpp **** 
  42:src/../h/Riscv.hpp ****     static uint64 r_stval();
  43:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  44:src/../h/Riscv.hpp **** 
  45:src/../h/Riscv.hpp ****     enum BitMaskSip
  46:src/../h/Riscv.hpp ****     {
  47:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  48:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  49:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9),
  50:src/../h/Riscv.hpp ****     };
  51:src/../h/Riscv.hpp **** 
  52:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  53:src/../h/Riscv.hpp **** 
  54:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  55:src/../h/Riscv.hpp **** 
  56:src/../h/Riscv.hpp ****     static uint64 r_sip();
  57:src/../h/Riscv.hpp **** 
  58:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  59:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/cclof41u.s 			page 9


  60:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  61:src/../h/Riscv.hpp ****     {
  62:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  63:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  64:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  65:src/../h/Riscv.hpp ****     };
  66:src/../h/Riscv.hpp **** 
  67:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  68:src/../h/Riscv.hpp **** 
  69:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  72:src/../h/Riscv.hpp **** 
  73:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  74:src/../h/Riscv.hpp **** 
  75:src/../h/Riscv.hpp ****     static void popSppSpie();
  76:src/../h/Riscv.hpp **** 
  77:src/../h/Riscv.hpp ****     static void supervisorTrap();
  78:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  79:src/../h/Riscv.hpp **** 
  80:src/../h/Riscv.hpp ****     static void getCharactersFromConsole();
  81:src/../h/Riscv.hpp **** 
  82:src/../h/Riscv.hpp ****     static const uint64 bntOne = 1UL << 63;;
  83:src/../h/Riscv.hpp ****     static const uint64 bntZero = 0UL;
  84:src/../h/Riscv.hpp ****     static const uint64 timerInterrupt = bntOne + 1UL;
  85:src/../h/Riscv.hpp ****     static const uint64 hwInterrupt = bntOne + 9UL;
  86:src/../h/Riscv.hpp ****     static const uint64 operationInterrupt = bntZero + 2UL;
  87:src/../h/Riscv.hpp ****     static const uint64 addrReadInterrupt = bntZero + 5UL;
  88:src/../h/Riscv.hpp ****     static const uint64 addrWriteInterrupt = bntZero + 7UL;
  89:src/../h/Riscv.hpp ****     static const uint64 ecallUserInterrupt = bntZero + 8UL;
  90:src/../h/Riscv.hpp ****     static const uint64 ecallSystemInterupt = bntZero + 9UL;
  91:src/../h/Riscv.hpp **** };
  92:src/../h/Riscv.hpp **** 
  93:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause() {
  94:src/../h/Riscv.hpp ****     uint64 volatile scause;
  95:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
  96:src/../h/Riscv.hpp ****     return scause;
  97:src/../h/Riscv.hpp **** }
  98:src/../h/Riscv.hpp **** 
  99:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
 100:src/../h/Riscv.hpp ****     __asm__ volatile("csrw scause, %0" : :"r"(scause));
 101:src/../h/Riscv.hpp **** }
 102:src/../h/Riscv.hpp **** 
 103:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc() {
 104:src/../h/Riscv.hpp ****     uint64 volatile sepc;
 105:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 106:src/../h/Riscv.hpp ****     return sepc;
 107:src/../h/Riscv.hpp **** }
 108:src/../h/Riscv.hpp **** 
 109:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
 110:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sepc, %0" : :"r"(sepc));
 111:src/../h/Riscv.hpp **** }
 112:src/../h/Riscv.hpp **** 
 113:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec() {
 114:src/../h/Riscv.hpp ****     uint64 volatile stvec;
 115:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, stvec" : "=r"(stvec));
 116:src/../h/Riscv.hpp ****     return stvec;
GAS LISTING /tmp/cclof41u.s 			page 10


 117:src/../h/Riscv.hpp **** }
 118:src/../h/Riscv.hpp **** 
 119:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 120:src/../h/Riscv.hpp ****     __asm__ volatile("csrw stvec, %0" : :"r"(stvec));
  83              		.loc 2 120 5 is_stmt 1
  84              		.loc 2 120 53 is_stmt 0
  85              	#APP
  86              	# 120 "src/../h/Riscv.hpp" 1
 121              	}
  87              		csrw stvec, a5
  88              	# 0 "" 2
  89              	.LVL2:
  90              	#NO_APP
  91              	.LBE87:
  92              	.LBE86:
  28:src/Riscv.cpp ****     KConsole::initialize();
  93              		.loc 1 28 5 is_stmt 1
  28:src/Riscv.cpp ****     KConsole::initialize();
  94              		.loc 1 28 20 is_stmt 0
  95 005c 97000000 		call	_ZN3PCB10initializeEv@plt
  95      E7800000 
  96              	.LVL3:
  29:src/Riscv.cpp **** }
  97              		.loc 1 29 5 is_stmt 1
  29:src/Riscv.cpp **** }
  98              		.loc 1 29 25 is_stmt 0
  99 0064 97000000 		call	_ZN8KConsole10initializeEv@plt
  99      E7800000 
 100              	.LVL4:
  30:src/Riscv.cpp **** 
 101              		.loc 1 30 1
 102 006c 83308100 		ld	ra,8(sp)
 103              		.cfi_restore 1
 104 0070 03340100 		ld	s0,0(sp)
 105              		.cfi_restore 8
 106              		.cfi_def_cfa 2, 16
 107 0074 13010101 		addi	sp,sp,16
 108              		.cfi_def_cfa_offset 0
 109 0078 67800000 		jr	ra
 110              		.cfi_endproc
 111              	.LFE26:
 113              		.align	2
 114              		.globl	_ZN5Riscv16enableInterruptsEv
 116              	_ZN5Riscv16enableInterruptsEv:
 117              	.LFB28:
  39:src/Riscv.cpp ****     ms_sstatus(Riscv::SSTATUS_SIE);
 118              		.loc 1 39 32 is_stmt 1
 119              		.cfi_startproc
 120 007c 130101FF 		addi	sp,sp,-16
 121              		.cfi_def_cfa_offset 16
 122 0080 23348100 		sd	s0,8(sp)
 123              		.cfi_offset 8, -8
 124 0084 13040101 		addi	s0,sp,16
 125              		.cfi_def_cfa 8, 0
  40:src/Riscv.cpp **** }
 126              		.loc 1 40 5
 127              	.LVL5:
GAS LISTING /tmp/cclof41u.s 			page 11


 128              	.LBB88:
 129              	.LBB89:
 122:src/../h/Riscv.hpp **** 
 123:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stval() {
 124:src/../h/Riscv.hpp ****     uint64 volatile stval;
 125:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, stval" : "=r"(stval));
 126:src/../h/Riscv.hpp ****     return stval;
 127:src/../h/Riscv.hpp **** }
 128:src/../h/Riscv.hpp **** 
 129:src/../h/Riscv.hpp **** inline void Riscv::w_stval(uint64 stval) {
 130:src/../h/Riscv.hpp ****     __asm__ volatile("csrw stval, %0" : :"r"(stval));
 131:src/../h/Riscv.hpp **** }
 132:src/../h/Riscv.hpp **** 
 133:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 134:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sip, %0" : :"r"(mask));
 135:src/../h/Riscv.hpp **** }
 136:src/../h/Riscv.hpp **** 
 137:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 138:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sip, %0" : :"r"(mask));
 139:src/../h/Riscv.hpp **** }
 140:src/../h/Riscv.hpp **** 
 141:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip() {
 142:src/../h/Riscv.hpp ****     uint64 volatile sip;
 143:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sip" : "=r"(sip));
 144:src/../h/Riscv.hpp ****     return sip;
 145:src/../h/Riscv.hpp **** }
 146:src/../h/Riscv.hpp **** 
 147:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 148:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sip, %0" : :"r"(sip));
 149:src/../h/Riscv.hpp **** }
 150:src/../h/Riscv.hpp **** 
 151:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 152:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sstatus, %0" : :"r"(mask));
 130              		.loc 2 152 5
 131              		.loc 2 152 54 is_stmt 0
 132 0088 93072000 		li	a5,2
 133              	#APP
 134              	# 152 "src/../h/Riscv.hpp" 1
 153              	}
 135              		csrs sstatus, a5
 136              	# 0 "" 2
 137              	.LVL6:
 138              	#NO_APP
 139              	.LBE89:
 140              	.LBE88:
  41:src/Riscv.cpp **** 
 141              		.loc 1 41 1
 142 0090 03348100 		ld	s0,8(sp)
 143              		.cfi_restore 8
 144              		.cfi_def_cfa 2, 16
 145 0094 13010101 		addi	sp,sp,16
 146              		.cfi_def_cfa_offset 0
 147 0098 67800000 		jr	ra
 148              		.cfi_endproc
 149              	.LFE28:
 151              		.align	2
 152              		.globl	_ZN5Riscv17disableInterruptsEv
GAS LISTING /tmp/cclof41u.s 			page 12


 154              	_ZN5Riscv17disableInterruptsEv:
 155              	.LFB29:
  44:src/Riscv.cpp ****     mc_sstatus(Riscv::SSTATUS_SIE);
 156              		.loc 1 44 1 is_stmt 1
 157              		.cfi_startproc
 158 009c 130101FF 		addi	sp,sp,-16
 159              		.cfi_def_cfa_offset 16
 160 00a0 23348100 		sd	s0,8(sp)
 161              		.cfi_offset 8, -8
 162 00a4 13040101 		addi	s0,sp,16
 163              		.cfi_def_cfa 8, 0
  45:src/Riscv.cpp **** }
 164              		.loc 1 45 5
 165              	.LVL7:
 166              	.LBB90:
 167              	.LBB91:
 154:src/../h/Riscv.hpp **** 
 155:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 156:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sstatus, %0" : :"r"(mask));
 168              		.loc 2 156 5
 169              		.loc 2 156 54 is_stmt 0
 170 00a8 93072000 		li	a5,2
 171              	#APP
 172              	# 156 "src/../h/Riscv.hpp" 1
 157              	}
 173              		csrc sstatus, a5
 174              	# 0 "" 2
 175              	.LVL8:
 176              	#NO_APP
 177              	.LBE91:
 178              	.LBE90:
  46:src/Riscv.cpp **** 
 179              		.loc 1 46 1
 180 00b0 03348100 		ld	s0,8(sp)
 181              		.cfi_restore 8
 182              		.cfi_def_cfa 2, 16
 183 00b4 13010101 		addi	sp,sp,16
 184              		.cfi_def_cfa_offset 0
 185 00b8 67800000 		jr	ra
 186              		.cfi_endproc
 187              	.LFE29:
 189              		.align	2
 190              		.globl	_ZN5Riscv9endSystemEv
 192              	_ZN5Riscv9endSystemEv:
 193              	.LFB27:
  32:src/Riscv.cpp ****     //todo
 194              		.loc 1 32 25 is_stmt 1
 195              		.cfi_startproc
 196 00bc 130101FF 		addi	sp,sp,-16
 197              		.cfi_def_cfa_offset 16
 198 00c0 23341100 		sd	ra,8(sp)
 199 00c4 23308100 		sd	s0,0(sp)
 200              		.cfi_offset 1, -8
 201              		.cfi_offset 8, -16
 202 00c8 13040101 		addi	s0,sp,16
 203              		.cfi_def_cfa 8, 0
  35:src/Riscv.cpp **** }
GAS LISTING /tmp/cclof41u.s 			page 13


 204              		.loc 1 35 5
  35:src/Riscv.cpp **** }
 205              		.loc 1 35 29 is_stmt 0
 206 00cc 97000000 		call	_ZN5Riscv17disableInterruptsEv
 206      E7800000 
 207              	.LVL9:
  36:src/Riscv.cpp **** 
 208              		.loc 1 36 1
 209 00d4 83308100 		ld	ra,8(sp)
 210              		.cfi_restore 1
 211 00d8 03340100 		ld	s0,0(sp)
 212              		.cfi_restore 8
 213              		.cfi_def_cfa 2, 16
 214 00dc 13010101 		addi	sp,sp,16
 215              		.cfi_def_cfa_offset 0
 216 00e0 67800000 		jr	ra
 217              		.cfi_endproc
 218              	.LFE27:
 220              		.align	2
 221              		.globl	_ZN5Riscv10popSppSpieEv
 223              	_ZN5Riscv10popSppSpieEv:
 224              	.LFB30:
  48:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
 225              		.loc 1 48 26 is_stmt 1
 226              		.cfi_startproc
 227 00e4 130101FF 		addi	sp,sp,-16
 228              		.cfi_def_cfa_offset 16
 229 00e8 23348100 		sd	s0,8(sp)
 230              		.cfi_offset 8, -8
 231 00ec 13040101 		addi	s0,sp,16
 232              		.cfi_def_cfa 8, 0
  49:src/Riscv.cpp ****     __asm__ volatile ("sret");
 233              		.loc 1 49 5
  49:src/Riscv.cpp ****     __asm__ volatile ("sret");
 234              		.loc 1 49 39 is_stmt 0
 235              	#APP
 236              	# 49 "src/Riscv.cpp" 1
  50:src/Riscv.cpp **** }
 237              		csrw sepc, ra
 238              	# 0 "" 2
 239              		.loc 1 50 5 is_stmt 1
  50:src/Riscv.cpp **** }
 240              		.loc 1 50 30 is_stmt 0
 241              	# 50 "src/Riscv.cpp" 1
  51:src/Riscv.cpp **** 
 242              		sret
 243              	# 0 "" 2
 244              		.loc 1 51 1
 245              	#NO_APP
 246 00f8 03348100 		ld	s0,8(sp)
 247              		.cfi_restore 8
 248              		.cfi_def_cfa 2, 16
 249 00fc 13010101 		addi	sp,sp,16
 250              		.cfi_def_cfa_offset 0
 251 0100 67800000 		jr	ra
 252              		.cfi_endproc
 253              	.LFE30:
GAS LISTING /tmp/cclof41u.s 			page 14


 255              		.align	2
 256              		.globl	_ZN5Riscv11printStringEPKc
 258              	_ZN5Riscv11printStringEPKc:
 259              	.LFB31:
  54:src/Riscv.cpp ****     uint64 sstatus = r_sstatus();
 260              		.loc 1 54 1 is_stmt 1
 261              		.cfi_startproc
 262              	.LVL10:
 263 0104 130101FD 		addi	sp,sp,-48
 264              		.cfi_def_cfa_offset 48
 265 0108 23341102 		sd	ra,40(sp)
 266 010c 23308102 		sd	s0,32(sp)
 267 0110 233C9100 		sd	s1,24(sp)
 268 0114 23382101 		sd	s2,16(sp)
 269              		.cfi_offset 1, -8
 270              		.cfi_offset 8, -16
 271              		.cfi_offset 9, -24
 272              		.cfi_offset 18, -32
 273 0118 13040103 		addi	s0,sp,48
 274              		.cfi_def_cfa 8, 0
 275 011c 93040500 		mv	s1,a0
  55:src/Riscv.cpp ****     mc_sstatus(SSTATUS_SIE);
 276              		.loc 1 55 5
 277              	.LBB92:
 278              	.LBB93:
 158:src/../h/Riscv.hpp **** 
 159:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sstatus() {
 160:src/../h/Riscv.hpp ****     uint64 volatile sstatus;
 279              		.loc 2 160 5
 161:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 280              		.loc 2 161 5
 281              		.loc 2 161 57 is_stmt 0
 282              	#APP
 283              	# 161 "src/../h/Riscv.hpp" 1
 162              	    return sstatus;
 284              		csrr a5, sstatus
 285              	# 0 "" 2
 286              	#NO_APP
 287 0124 233CF4FC 		sd	a5,-40(s0)
 288              		.loc 2 162 5 is_stmt 1
 289              		.loc 2 162 12 is_stmt 0
 290 0128 033984FD 		ld	s2,-40(s0)
 291              	.LVL11:
 292              	.LBE93:
 293              	.LBE92:
  56:src/Riscv.cpp ****     while (*string != '\0')
 294              		.loc 1 56 5 is_stmt 1
 295              	.LBB94:
 296              	.LBB95:
 156:src/../h/Riscv.hpp **** }
 297              		.loc 2 156 5
 156:src/../h/Riscv.hpp **** }
 298              		.loc 2 156 54 is_stmt 0
 299 012c 93072000 		li	a5,2
 300              	#APP
 301              	# 156 "src/../h/Riscv.hpp" 1
 302              		csrc sstatus, a5
GAS LISTING /tmp/cclof41u.s 			page 15


 303              	# 0 "" 2
 304              	.LVL12:
 305              	#NO_APP
 306              	.L17:
 307              	.LBE95:
 308              	.LBE94:
  57:src/Riscv.cpp ****     {
 309              		.loc 1 57 5 is_stmt 1
  57:src/Riscv.cpp ****     {
 310              		.loc 1 57 20
  57:src/Riscv.cpp ****     {
 311              		.loc 1 57 12 is_stmt 0
 312 0134 03C50400 		lbu	a0,0(s1)
  57:src/Riscv.cpp ****     {
 313              		.loc 1 57 20
 314 0138 630A0500 		beqz	a0,.L16
  59:src/Riscv.cpp ****         string++;
 315              		.loc 1 59 9 is_stmt 1
  59:src/Riscv.cpp ****         string++;
 316              		.loc 1 59 15 is_stmt 0
 317 013c 97000000 		call	__putc@plt
 317      E7800000 
 318              	.LVL13:
  60:src/Riscv.cpp ****     }
 319              		.loc 1 60 9 is_stmt 1
  60:src/Riscv.cpp ****     }
 320              		.loc 1 60 15 is_stmt 0
 321 0144 93841400 		addi	s1,s1,1
 322              	.LVL14:
  57:src/Riscv.cpp ****     {
 323              		.loc 1 57 5
 324 0148 6FF0DFFE 		j	.L17
 325              	.L16:
  62:src/Riscv.cpp **** }
 326              		.loc 1 62 5 is_stmt 1
  62:src/Riscv.cpp **** }
 327              		.loc 1 62 38 is_stmt 0
 328 014c 1B090900 		sext.w	s2,s2
 329              	.LVL15:
  62:src/Riscv.cpp **** }
 330              		.loc 1 62 15
 331 0150 13792900 		andi	s2,s2,2
 332 0154 1B090900 		sext.w	s2,s2
 333              	.LVL16:
 334              	.LBB96:
 335              	.LBB97:
 152:src/../h/Riscv.hpp **** }
 336              		.loc 2 152 5 is_stmt 1
 152:src/../h/Riscv.hpp **** }
 337              		.loc 2 152 54 is_stmt 0
 338              	#APP
 339              	# 152 "src/../h/Riscv.hpp" 1
 340              		csrs sstatus, s2
 341              	# 0 "" 2
 342              	.LVL17:
 343              	#NO_APP
 344              	.LBE97:
GAS LISTING /tmp/cclof41u.s 			page 16


 345              	.LBE96:
  63:src/Riscv.cpp **** 
 346              		.loc 1 63 1
 347 015c 83308102 		ld	ra,40(sp)
 348              		.cfi_restore 1
 349 0160 03340102 		ld	s0,32(sp)
 350              		.cfi_restore 8
 351              		.cfi_def_cfa 2, 48
 352 0164 83348101 		ld	s1,24(sp)
 353              		.cfi_restore 9
 354              	.LVL18:
 355 0168 03390101 		ld	s2,16(sp)
 356              		.cfi_restore 18
 357 016c 13010103 		addi	sp,sp,48
 358              		.cfi_def_cfa_offset 0
 359 0170 67800000 		jr	ra
 360              		.cfi_endproc
 361              	.LFE31:
 363              		.align	2
 364              		.globl	_ZN5Riscv12printIntegerEm
 366              	_ZN5Riscv12printIntegerEm:
 367              	.LFB32:
  66:src/Riscv.cpp ****     uint64 sstatus = r_sstatus();
 368              		.loc 1 66 1 is_stmt 1
 369              		.cfi_startproc
 370              	.LVL19:
 371 0174 130101FC 		addi	sp,sp,-64
 372              		.cfi_def_cfa_offset 64
 373 0178 233C1102 		sd	ra,56(sp)
 374 017c 23388102 		sd	s0,48(sp)
 375 0180 23349102 		sd	s1,40(sp)
 376 0184 23302103 		sd	s2,32(sp)
 377              		.cfi_offset 1, -8
 378              		.cfi_offset 8, -16
 379              		.cfi_offset 9, -24
 380              		.cfi_offset 18, -32
 381 0188 13040104 		addi	s0,sp,64
 382              		.cfi_def_cfa 8, 0
  67:src/Riscv.cpp ****     mc_sstatus(SSTATUS_SIE);
 383              		.loc 1 67 5
 384              	.LBB98:
 385              	.LBB99:
 160:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 386              		.loc 2 160 5
 161:src/../h/Riscv.hpp ****     return sstatus;
 387              		.loc 2 161 5
 161:src/../h/Riscv.hpp ****     return sstatus;
 388              		.loc 2 161 57 is_stmt 0
 389              	#APP
 390              	# 161 "src/../h/Riscv.hpp" 1
 391              		csrr a5, sstatus
 392              	# 0 "" 2
 393              	#NO_APP
 394 0190 2334F4FC 		sd	a5,-56(s0)
 395              		.loc 2 162 5 is_stmt 1
 396              		.loc 2 162 12 is_stmt 0
 397 0194 033984FC 		ld	s2,-56(s0)
GAS LISTING /tmp/cclof41u.s 			page 17


 398              	.LVL20:
 399              	.LBE99:
 400              	.LBE98:
  68:src/Riscv.cpp ****     static char digits[] = "0123456789";
 401              		.loc 1 68 5 is_stmt 1
 402              	.LBB100:
 403              	.LBB101:
 156:src/../h/Riscv.hpp **** }
 404              		.loc 2 156 5
 156:src/../h/Riscv.hpp **** }
 405              		.loc 2 156 54 is_stmt 0
 406 0198 93072000 		li	a5,2
 407              	#APP
 408              	# 156 "src/../h/Riscv.hpp" 1
 409              		csrc sstatus, a5
 410              	# 0 "" 2
 411              	.LVL21:
 412              	#NO_APP
 413              	.LBE101:
 414              	.LBE100:
  69:src/Riscv.cpp ****     char buf[16];
 415              		.loc 1 69 5 is_stmt 1
  70:src/Riscv.cpp ****     int i, neg;
 416              		.loc 1 70 5
  71:src/Riscv.cpp ****     uint x;
 417              		.loc 1 71 5
  72:src/Riscv.cpp **** 
 418              		.loc 1 72 5
  74:src/Riscv.cpp ****     if(num < 0)
 419              		.loc 1 74 5
  75:src/Riscv.cpp ****     {
 420              		.loc 1 75 5
  81:src/Riscv.cpp **** 
 421              		.loc 1 81 9
  81:src/Riscv.cpp **** 
 422              		.loc 1 81 11 is_stmt 0
 423 01a0 1B050500 		sext.w	a0,a0
 424              	.LVL22:
  83:src/Riscv.cpp ****     do
 425              		.loc 1 83 5 is_stmt 1
  83:src/Riscv.cpp ****     do
 426              		.loc 1 83 7 is_stmt 0
 427 01a4 93040000 		li	s1,0
 428              	.LVL23:
 429              	.L20:
  84:src/Riscv.cpp ****     {
 430              		.loc 1 84 5 is_stmt 1
  86:src/Riscv.cpp ****     }while((x/=10) != 0);
 431              		.loc 1 86 9
  86:src/Riscv.cpp ****     }while((x/=10) != 0);
 432              		.loc 1 86 28 is_stmt 0
 433 01a8 1306A000 		li	a2,10
 434 01ac 3B77C502 		remuw	a4,a0,a2
 435              	.LVL24:
  86:src/Riscv.cpp ****     }while((x/=10) != 0);
 436              		.loc 1 86 31
 437 01b0 93160702 		slli	a3,a4,32
GAS LISTING /tmp/cclof41u.s 			page 18


 438 01b4 93D60602 		srli	a3,a3,32
 439 01b8 17070000 		lla	a4,.LANCHOR0
 439      13070700 
 440 01c0 3307D700 		add	a4,a4,a3
 441 01c4 03470700 		lbu	a4,0(a4)
  86:src/Riscv.cpp ****     }while((x/=10) != 0);
 442              		.loc 1 86 18
 443 01c8 930604FE 		addi	a3,s0,-32
 444 01cc B3879600 		add	a5,a3,s1
 445 01d0 9B841400 		addiw	s1,s1,1
 446              	.LVL25:
 447 01d4 2388E7FE 		sb	a4,-16(a5)
  87:src/Riscv.cpp ****     if(neg)
 448              		.loc 1 87 20 is_stmt 1
 449 01d8 1B070500 		sext.w	a4,a0
  87:src/Riscv.cpp ****     if(neg)
 450              		.loc 1 87 14 is_stmt 0
 451 01dc 3B55C502 		divuw	a0,a0,a2
 452              	.LVL26:
  87:src/Riscv.cpp ****     if(neg)
 453              		.loc 1 87 20
 454 01e0 93079000 		li	a5,9
 455 01e4 E3E2E7FC 		bgtu	a4,a5,.L20
 456              	.LVL27:
 457              	.L22:
  91:src/Riscv.cpp ****         __putc(buf[i]);
 458              		.loc 1 91 5 is_stmt 1
  91:src/Riscv.cpp ****         __putc(buf[i]);
 459              		.loc 1 91 15
 460 01e8 9B84F4FF 		addiw	s1,s1,-1
 461              	.LVL28:
 462 01ec 63CE0400 		bltz	s1,.L21
  92:src/Riscv.cpp **** 
 463              		.loc 1 92 9
  92:src/Riscv.cpp **** 
 464              		.loc 1 92 15 is_stmt 0
 465 01f0 930704FE 		addi	a5,s0,-32
 466 01f4 B3879700 		add	a5,a5,s1
 467 01f8 03C507FF 		lbu	a0,-16(a5)
 468 01fc 97000000 		call	__putc@plt
 468      E7800000 
 469              	.LVL29:
 470 0204 6FF05FFE 		j	.L22
 471              	.L21:
  94:src/Riscv.cpp **** 
 472              		.loc 1 94 5 is_stmt 1
  94:src/Riscv.cpp **** 
 473              		.loc 1 94 11 is_stmt 0
 474 0208 1305A000 		li	a0,10
 475 020c 97000000 		call	__putc@plt
 475      E7800000 
 476              	.LVL30:
  96:src/Riscv.cpp **** }
 477              		.loc 1 96 5 is_stmt 1
  96:src/Riscv.cpp **** }
 478              		.loc 1 96 38 is_stmt 0
 479 0214 1B090900 		sext.w	s2,s2
GAS LISTING /tmp/cclof41u.s 			page 19


 480              	.LVL31:
  96:src/Riscv.cpp **** }
 481              		.loc 1 96 15
 482 0218 13792900 		andi	s2,s2,2
 483 021c 1B090900 		sext.w	s2,s2
 484              	.LVL32:
 485              	.LBB102:
 486              	.LBB103:
 152:src/../h/Riscv.hpp **** }
 487              		.loc 2 152 5 is_stmt 1
 152:src/../h/Riscv.hpp **** }
 488              		.loc 2 152 54 is_stmt 0
 489              	#APP
 490              	# 152 "src/../h/Riscv.hpp" 1
 491              		csrs sstatus, s2
 492              	# 0 "" 2
 493              	.LVL33:
 494              	#NO_APP
 495              	.LBE103:
 496              	.LBE102:
  97:src/Riscv.cpp **** 
 497              		.loc 1 97 1
 498 0224 83308103 		ld	ra,56(sp)
 499              		.cfi_restore 1
 500 0228 03340103 		ld	s0,48(sp)
 501              		.cfi_restore 8
 502              		.cfi_def_cfa 2, 64
 503 022c 83348102 		ld	s1,40(sp)
 504              		.cfi_restore 9
 505 0230 03390102 		ld	s2,32(sp)
 506              		.cfi_restore 18
 507 0234 13010104 		addi	sp,sp,64
 508              		.cfi_def_cfa_offset 0
 509 0238 67800000 		jr	ra
 510              		.cfi_endproc
 511              	.LFE32:
 513              		.align	2
 514              		.globl	_ZN5Riscv20handleSupervisorTrapEv
 516              	_ZN5Riscv20handleSupervisorTrapEv:
 517              	.LFB33:
 100:src/Riscv.cpp ****     uint64 a4;
 518              		.loc 1 100 1 is_stmt 1
 519              		.cfi_startproc
 520              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 521              		.cfi_lsda 0x1b,.LLSDA33
 522 023c 130101F8 		addi	sp,sp,-128
 523              		.cfi_def_cfa_offset 128
 524 0240 233C1106 		sd	ra,120(sp)
 525 0244 23388106 		sd	s0,112(sp)
 526 0248 23349106 		sd	s1,104(sp)
 527 024c 23302107 		sd	s2,96(sp)
 528 0250 233C3105 		sd	s3,88(sp)
 529 0254 23384105 		sd	s4,80(sp)
 530 0258 23345105 		sd	s5,72(sp)
 531 025c 23306105 		sd	s6,64(sp)
 532              		.cfi_offset 1, -8
 533              		.cfi_offset 8, -16
GAS LISTING /tmp/cclof41u.s 			page 20


 534              		.cfi_offset 9, -24
 535              		.cfi_offset 18, -32
 536              		.cfi_offset 19, -40
 537              		.cfi_offset 20, -48
 538              		.cfi_offset 21, -56
 539              		.cfi_offset 22, -64
 540 0260 13040108 		addi	s0,sp,128
 541              		.cfi_def_cfa 8, 0
 101:src/Riscv.cpp ****     __asm__ volatile("mv %0, a4" : "=r"(a4));
 542              		.loc 1 101 5
 102:src/Riscv.cpp **** 
 543              		.loc 1 102 5
 102:src/Riscv.cpp **** 
 544              		.loc 1 102 45 is_stmt 0
 545              	#APP
 546              	# 102 "src/Riscv.cpp" 1
 547              		mv s2, a4
 548              	# 0 "" 2
 549              	.LVL34:
 104:src/Riscv.cpp **** 
 550              		.loc 1 104 5 is_stmt 1
 551              	#NO_APP
 552              	.LBB104:
 553              	.LBB105:
  94:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
 554              		.loc 2 94 5
  95:src/../h/Riscv.hpp ****     return scause;
 555              		.loc 2 95 5
  95:src/../h/Riscv.hpp ****     return scause;
 556              		.loc 2 95 55 is_stmt 0
 557              	#APP
 558              	# 95 "src/../h/Riscv.hpp" 1
 559              		csrr a5, scause
 560              	# 0 "" 2
 561              	#NO_APP
 562 026c 2330F4F8 		sd	a5,-128(s0)
  96:src/../h/Riscv.hpp **** }
 563              		.loc 2 96 5 is_stmt 1
  96:src/../h/Riscv.hpp **** }
 564              		.loc 2 96 12 is_stmt 0
 565 0270 033704F8 		ld	a4,-128(s0)
 566              	.LVL35:
 567              	.LBE105:
 568              	.LBE104:
 106:src/Riscv.cpp ****     {
 569              		.loc 1 106 5 is_stmt 1
 570              	.LBB106:
 571 0274 93079000 		li	a5,9
 572 0278 63F2E70A 		bleu	a4,a5,.L48
 573 027c 9307F0FF 		li	a5,-1
 574 0280 9397F703 		slli	a5,a5,63
 575 0284 93871700 		addi	a5,a5,1
 576 0288 631EF708 		bne	a4,a5,.L27
 577              	.LBB107:
 109:src/Riscv.cpp **** 
 578              		.loc 1 109 9
 111:src/Riscv.cpp ****             //Riscv::printString("timerInterrupt\n");
GAS LISTING /tmp/cclof41u.s 			page 21


 579              		.loc 1 111 13
 580              	.LVL36:
 581              	.LBB108:
 582              	.LBB109:
 138:src/../h/Riscv.hpp **** }
 583              		.loc 2 138 5
 138:src/../h/Riscv.hpp **** }
 584              		.loc 2 138 50 is_stmt 0
 585 028c 93072000 		li	a5,2
 586              	#APP
 587              	# 138 "src/../h/Riscv.hpp" 1
 588              		csrc sip, a5
 589              	# 0 "" 2
 590              	.LVL37:
 591              	#NO_APP
 592              	.LBE109:
 593              	.LBE108:
 114:src/Riscv.cpp ****             total++;
 594              		.loc 1 114 13 is_stmt 1
 115:src/Riscv.cpp ****             Riscv::printInteger(total);
 595              		.loc 1 115 13
 115:src/Riscv.cpp ****             Riscv::printInteger(total);
 596              		.loc 1 115 18 is_stmt 0
 597 0294 97070000 		lla	a5,.LANCHOR1
 597      93870700 
 598 029c 03B50700 		ld	a0,0(a5)
 599 02a0 13051500 		addi	a0,a0,1
 600 02a4 23B0A700 		sd	a0,0(a5)
 116:src/Riscv.cpp **** 
 601              		.loc 1 116 13 is_stmt 1
 602              	.LEHB0:
 116:src/Riscv.cpp **** 
 603              		.loc 1 116 32 is_stmt 0
 604 02a8 97000000 		call	_ZN5Riscv12printIntegerEm
 604      E7800000 
 605              	.LVL38:
 118:src/Riscv.cpp **** 
 606              		.loc 1 118 13 is_stmt 1
 118:src/Riscv.cpp **** 
 607              		.loc 1 118 34 is_stmt 0
 608 02b0 97040000 		la	s1,_ZN3PCB16timeSliceCounterE
 608      83B40400 
 609 02b8 83B70400 		ld	a5,0(s1)
 610 02bc 93871700 		addi	a5,a5,1
 611 02c0 23B0F400 		sd	a5,0(s1)
 120:src/Riscv.cpp **** 
 612              		.loc 1 120 13 is_stmt 1
 120:src/Riscv.cpp **** 
 613              		.loc 1 120 40 is_stmt 0
 614 02c4 97000000 		call	_ZN12SleepPCBList13tryToWakePCBsEv@plt
 614      E7800000 
 615              	.LVL39:
 122:src/Riscv.cpp ****             {
 616              		.loc 1 122 13 is_stmt 1
 617              	.LBB110:
 122:src/Riscv.cpp ****             {
 618              		.loc 1 122 68 is_stmt 0
GAS LISTING /tmp/cclof41u.s 			page 22


 619 02cc 97070000 		la	a5,_ZN3PCB7runningE
 619      83B70700 
 620 02d4 83B70700 		ld	a5,0(a5)
 621              	.LVL40:
 622              	.LBB111:
 623              	.LBB112:
 624              		.file 3 "src/../h/PCB.hpp"
   1:src/../h/PCB.hpp **** //
   2:src/../h/PCB.hpp **** // Created by os on 4/27/22.
   3:src/../h/PCB.hpp **** //
   4:src/../h/PCB.hpp **** 
   5:src/../h/PCB.hpp **** #ifndef PROJECT_BASE_V1_0_PCB_HPP
   6:src/../h/PCB.hpp **** #define PROJECT_BASE_V1_0_PCB_HPP
   7:src/../h/PCB.hpp **** 
   8:src/../h/PCB.hpp **** #include "../lib/hw.h"
   9:src/../h/PCB.hpp **** #include "Scheduler.hpp"
  10:src/../h/PCB.hpp **** #include "Riscv.hpp"
  11:src/../h/PCB.hpp **** 
  12:src/../h/PCB.hpp **** class PCB
  13:src/../h/PCB.hpp **** {
  14:src/../h/PCB.hpp **** public:
  15:src/../h/PCB.hpp ****     using Body = void (*)(void*);
  16:src/../h/PCB.hpp **** 
  17:src/../h/PCB.hpp ****     PCB(Body body,  void* args, void* stack_space, uint64 timeSlice);
  18:src/../h/PCB.hpp ****     ~PCB();
  19:src/../h/PCB.hpp **** 
  20:src/../h/PCB.hpp ****     void start();
  21:src/../h/PCB.hpp ****     static void dispatch();
  22:src/../h/PCB.hpp ****     static void sleep(time_t);
  23:src/../h/PCB.hpp **** 
  24:src/../h/PCB.hpp ****     static PCB* running;
  25:src/../h/PCB.hpp ****     static PCB* exitingPCB;
  26:src/../h/PCB.hpp **** 
  27:src/../h/PCB.hpp ****     static uint64 timeSliceCounter;
  28:src/../h/PCB.hpp ****     uint64 getTimeSlice() { return timeSlice;}
 625              		.loc 3 28 29 is_stmt 1
 626              		.loc 3 28 36 is_stmt 0
 627 02d8 83B70701 		ld	a5,16(a5)
 628              	.LVL41:
 629              	.LBE112:
 630              	.LBE111:
 122:src/Riscv.cpp ****             {
 631              		.loc 1 122 39
 632 02dc 03B70400 		ld	a4,0(s1)
 122:src/Riscv.cpp ****             {
 633              		.loc 1 122 13
 634 02e0 6366F704 		bltu	a4,a5,.L24
 635              	.LBB113:
 124:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 636              		.loc 1 124 17 is_stmt 1
 637              	.LBB114:
 638              	.LBB115:
 104:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 639              		.loc 2 104 5
 105:src/../h/Riscv.hpp ****     return sepc;
 640              		.loc 2 105 5
 105:src/../h/Riscv.hpp ****     return sepc;
GAS LISTING /tmp/cclof41u.s 			page 23


 641              		.loc 2 105 51 is_stmt 0
 642              	#APP
 643              	# 105 "src/../h/Riscv.hpp" 1
 644              		csrr a5, sepc
 645              	# 0 "" 2
 646              	#NO_APP
 647 02e8 2338F4F8 		sd	a5,-112(s0)
 106:src/../h/Riscv.hpp **** }
 648              		.loc 2 106 5 is_stmt 1
 106:src/../h/Riscv.hpp **** }
 649              		.loc 2 106 12 is_stmt 0
 650 02ec 833404F9 		ld	s1,-112(s0)
 651              	.LVL42:
 652              	.LBE115:
 653              	.LBE114:
 125:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 654              		.loc 1 125 17 is_stmt 1
 655              	.LBB116:
 656              	.LBB117:
 160:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 657              		.loc 2 160 5
 161:src/../h/Riscv.hpp ****     return sstatus;
 658              		.loc 2 161 5
 161:src/../h/Riscv.hpp ****     return sstatus;
 659              		.loc 2 161 57 is_stmt 0
 660              	#APP
 661              	# 161 "src/../h/Riscv.hpp" 1
 662              		csrr a5, sstatus
 663              	# 0 "" 2
 664              	#NO_APP
 665 02f4 2334F4F8 		sd	a5,-120(s0)
 666              		.loc 2 162 5 is_stmt 1
 667              		.loc 2 162 12 is_stmt 0
 668 02f8 033984F8 		ld	s2,-120(s0)
 669              	.LVL43:
 670              	.LBE117:
 671              	.LBE116:
 126:src/Riscv.cpp ****                 PCB::dispatch();
 672              		.loc 1 126 17 is_stmt 1
 126:src/Riscv.cpp ****                 PCB::dispatch();
 673              		.loc 1 126 39 is_stmt 0
 674 02fc 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 674      83B70700 
 675 0304 23B00700 		sd	zero,0(a5)
 127:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 676              		.loc 1 127 17 is_stmt 1
 127:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 677              		.loc 1 127 30 is_stmt 0
 678 0308 97000000 		call	_ZN3PCB8dispatchEv@plt
 678      E7800000 
 679              	.LVL44:
 128:src/Riscv.cpp ****                 Riscv::w_sepc(sepc);
 680              		.loc 1 128 17 is_stmt 1
 681              	.LBB118:
 682              	.LBB119:
 163:src/../h/Riscv.hpp **** }
 164:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/cclof41u.s 			page 24


 165:src/../h/Riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus) {
 166:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sstatus, %0" : :"r"(sstatus));
 683              		.loc 2 166 5
 684              		.loc 2 166 57 is_stmt 0
 685              	#APP
 686              	# 166 "src/../h/Riscv.hpp" 1
 167              	}
 687              		csrw sstatus, s2
 688              	# 0 "" 2
 689              	.LVL45:
 690              	#NO_APP
 691              	.LBE119:
 692              	.LBE118:
 129:src/Riscv.cpp ****             }
 693              		.loc 1 129 17 is_stmt 1
 694              	.LBB120:
 695              	.LBB121:
 110:src/../h/Riscv.hpp **** }
 696              		.loc 2 110 5
 110:src/../h/Riscv.hpp **** }
 697              		.loc 2 110 51 is_stmt 0
 698              	#APP
 699              	# 110 "src/../h/Riscv.hpp" 1
 111:src/../h/Riscv.hpp **** 
 700              		csrw sepc, s1
 701              	# 0 "" 2
 702              		.loc 2 111 1
 703              	#NO_APP
 704 0318 6F004001 		j	.L24
 705              	.LVL46:
 706              	.L48:
 707              	.LBE121:
 708              	.LBE120:
 709              	.LBE113:
 710              	.LBE110:
 711              	.LBE107:
 106:src/Riscv.cpp ****     {
 712              		.loc 1 106 5
 713 031c 93078000 		li	a5,8
 714 0320 637AF702 		bgeu	a4,a5,.L49
 715              	.L27:
 716              	.LBE106:
 283:src/Riscv.cpp **** }
 717              		.loc 1 283 5 is_stmt 1
 283:src/Riscv.cpp **** }
 718              		.loc 1 283 20 is_stmt 0
 719 0324 97000000 		call	console_handler@plt
 719      E7800000 
 720              	.LVL47:
 721              	.L24:
 284:src/Riscv.cpp **** 
 722              		.loc 1 284 1
 723 032c 83308107 		ld	ra,120(sp)
 724              		.cfi_remember_state
 725              		.cfi_restore 1
 726 0330 03340107 		ld	s0,112(sp)
 727              		.cfi_restore 8
GAS LISTING /tmp/cclof41u.s 			page 25


 728              		.cfi_def_cfa 2, 128
 729 0334 83348106 		ld	s1,104(sp)
 730              		.cfi_restore 9
 731 0338 03390106 		ld	s2,96(sp)
 732              		.cfi_restore 18
 733 033c 83398105 		ld	s3,88(sp)
 734              		.cfi_restore 19
 735 0340 033A0105 		ld	s4,80(sp)
 736              		.cfi_restore 20
 737 0344 833A8104 		ld	s5,72(sp)
 738              		.cfi_restore 21
 739 0348 033B0104 		ld	s6,64(sp)
 740              		.cfi_restore 22
 741 034c 13010108 		addi	sp,sp,128
 742              		.cfi_def_cfa_offset 0
 743 0350 67800000 		jr	ra
 744              	.LVL48:
 745              	.L49:
 746              		.cfi_restore_state
 747              	.LBB243:
 748              	.LBB232:
 149:src/Riscv.cpp ****         case ecallUserInterrupt:
 749              		.loc 1 149 9 is_stmt 1
 150:src/Riscv.cpp **** 
 750              		.loc 1 150 9
 152:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
 751              		.loc 1 152 13
 153:src/Riscv.cpp **** 
 752              		.loc 1 153 13
 153:src/Riscv.cpp **** 
 753              		.loc 1 153 61 is_stmt 0
 754              	#APP
 755              	# 153 "src/Riscv.cpp" 1
 756              		mv a5, a0
 757              	# 0 "" 2
 758              	.LVL49:
 155:src/Riscv.cpp ****             sepc+=4;
 759              		.loc 1 155 13 is_stmt 1
 760              	#NO_APP
 761              	.LBB122:
 762              	.LBB123:
 104:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 763              		.loc 2 104 5
 105:src/../h/Riscv.hpp ****     return sepc;
 764              		.loc 2 105 5
 105:src/../h/Riscv.hpp ****     return sepc;
 765              		.loc 2 105 51 is_stmt 0
 766              	#APP
 767              	# 105 "src/../h/Riscv.hpp" 1
 768              		csrr a4, sepc
 769              	# 0 "" 2
 770              	.LVL50:
 771              	#NO_APP
 772 035c 233CE4F8 		sd	a4,-104(s0)
 106:src/../h/Riscv.hpp **** }
 773              		.loc 2 106 5 is_stmt 1
 106:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/cclof41u.s 			page 26


 774              		.loc 2 106 12 is_stmt 0
 775 0360 033784F9 		ld	a4,-104(s0)
 776              	.LVL51:
 777              	.LBE123:
 778              	.LBE122:
 156:src/Riscv.cpp **** 
 779              		.loc 1 156 13 is_stmt 1
 156:src/Riscv.cpp **** 
 780              		.loc 1 156 17 is_stmt 0
 781 0364 93044700 		addi	s1,a4,4
 782              	.LVL52:
 158:src/Riscv.cpp ****             {
 783              		.loc 1 158 13 is_stmt 1
 784              	.LBB124:
 785 0368 13071000 		li	a4,1
 786 036c 638AE706 		beq	a5,a4,.L50
 787              	.LBE124:
 788              	.LBE232:
 789              	.LBE243:
 166:src/Riscv.cpp ****             {
 790              		.loc 1 166 18
 791              	.LBB244:
 792              	.LBB233:
 793              	.LBB219:
 794              	.LBB125:
 795 0370 13072000 		li	a4,2
 796 0374 6384E708 		beq	a5,a4,.L51
 797              	.LBE125:
 798              	.LBE219:
 799              	.LBE233:
 800              	.LBE244:
 173:src/Riscv.cpp ****             {
 801              		.loc 1 173 18
 802              	.LBB245:
 803              	.LBB234:
 804              	.LBB220:
 805              	.LBB208:
 806              	.LBB126:
 807 0378 13071001 		li	a4,17
 808 037c 638AE708 		beq	a5,a4,.L52
 809              	.LBE126:
 810              	.LBE208:
 811              	.LBE220:
 812              	.LBE234:
 813              	.LBE245:
 194:src/Riscv.cpp ****             {
 814              		.loc 1 194 18
 815              	.LBB246:
 816              	.LBB235:
 817              	.LBB221:
 818              	.LBB209:
 819              	.LBB198:
 820              	.LBB127:
 821 0380 13073001 		li	a4,19
 822 0384 638CE70C 		beq	a5,a4,.L53
 823              	.LBE127:
 824              	.LBE198:
GAS LISTING /tmp/cclof41u.s 			page 27


 825              	.LBE209:
 826              	.LBE221:
 827              	.LBE235:
 828              	.LBE246:
 201:src/Riscv.cpp ****             {
 829              		.loc 1 201 18
 830              	.LBB247:
 831              	.LBB236:
 832              	.LBB222:
 833              	.LBB210:
 834              	.LBB199:
 835              	.LBB187:
 836              	.LBB128:
 837 0388 13072001 		li	a4,18
 838 038c 638CE70E 		beq	a5,a4,.L54
 839              	.LBE128:
 840              	.LBE187:
 841              	.LBE199:
 842              	.LBE210:
 843              	.LBE222:
 844              	.LBE236:
 845              	.LBE247:
 215:src/Riscv.cpp ****             {
 846              		.loc 1 215 18
 847              	.LBB248:
 848              	.LBB237:
 849              	.LBB223:
 850              	.LBB211:
 851              	.LBB200:
 852              	.LBB188:
 853              	.LBB174:
 854              	.LBB129:
 855 0390 13071003 		li	a4,49
 856 0394 6382E714 		beq	a5,a4,.L55
 857              	.LBE129:
 858              	.LBE174:
 859              	.LBE188:
 860              	.LBE200:
 861              	.LBE211:
 862              	.LBE223:
 863              	.LBE237:
 864              	.LBE248:
 229:src/Riscv.cpp ****             {
 865              		.loc 1 229 18
 866              	.LBB249:
 867              	.LBB238:
 868              	.LBB224:
 869              	.LBB212:
 870              	.LBB201:
 871              	.LBB189:
 872              	.LBB175:
 873              	.LBB160:
 874              	.LBB130:
 875 0398 13071002 		li	a4,33
 876 039c 6382E718 		beq	a5,a4,.L56
 877              	.LBE130:
 878              	.LBE160:
GAS LISTING /tmp/cclof41u.s 			page 28


 879              	.LBE175:
 880              	.LBE189:
 881              	.LBE201:
 882              	.LBE212:
 883              	.LBE224:
 884              	.LBE238:
 885              	.LBE249:
 246:src/Riscv.cpp ****             {
 886              		.loc 1 246 18
 887              	.LBB250:
 888              	.LBB239:
 889              	.LBB225:
 890              	.LBB213:
 891              	.LBB202:
 892              	.LBB190:
 893              	.LBB176:
 894              	.LBB161:
 895              	.LBB148:
 896              	.LBB131:
 897 03a0 13073002 		li	a4,35
 898 03a4 638CE71A 		beq	a5,a4,.L57
 899              	.LBE131:
 900              	.LBE148:
 901              	.LBE161:
 902              	.LBE176:
 903              	.LBE190:
 904              	.LBE202:
 905              	.LBE213:
 906              	.LBE225:
 907              	.LBE239:
 908              	.LBE250:
 257:src/Riscv.cpp ****             {
 909              		.loc 1 257 18
 910              	.LBB251:
 911              	.LBB240:
 912              	.LBB226:
 913              	.LBB214:
 914              	.LBB203:
 915              	.LBB191:
 916              	.LBB177:
 917              	.LBB162:
 918              	.LBB149:
 919              	.LBB143:
 920              	.LBB132:
 921 03a8 13074002 		li	a4,36
 922 03ac 638AE71C 		beq	a5,a4,.L58
 923              	.LBE132:
 924              	.LBE143:
 925              	.LBE149:
 926              	.LBE162:
 927              	.LBE177:
 928              	.LBE191:
 929              	.LBE203:
 930              	.LBE214:
 931              	.LBE226:
 932              	.LBE240:
 933              	.LBE251:
GAS LISTING /tmp/cclof41u.s 			page 29


 266:src/Riscv.cpp ****             {
 934              		.loc 1 266 18
 935              	.LBB252:
 936              	.LBB241:
 937              	.LBB227:
 938              	.LBB215:
 939              	.LBB204:
 940              	.LBB192:
 941              	.LBB178:
 942              	.LBB163:
 943              	.LBB150:
 944              	.LBB144:
 945              	.LBB136:
 946              	.LBB133:
 947 03b0 13072002 		li	a4,34
 948 03b4 6390E704 		bne	a5,a4,.L30
 949              	.LBB134:
 270:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(kSem));
 950              		.loc 1 270 17
 271:src/Riscv.cpp **** 
 951              		.loc 1 271 17
 271:src/Riscv.cpp **** 
 952              		.loc 1 271 59 is_stmt 0
 953              	#APP
 954              	# 271 "src/Riscv.cpp" 1
 955              		mv s2, a1
 956              	# 0 "" 2
 957              	.LVL53:
 273:src/Riscv.cpp **** 
 958              		.loc 1 273 17 is_stmt 1
 273:src/Riscv.cpp **** 
 959              		.loc 1 273 28 is_stmt 0
 960              	#NO_APP
 961 03bc 630E0900 		beqz	s2,.L42
 273:src/Riscv.cpp **** 
 962              		.loc 1 273 24 discriminator 1
 963 03c0 13050900 		mv	a0,s2
 964 03c4 97000000 		call	_ZN10KSemaphoreD1Ev@plt
 964      E7800000 
 965              	.LVL54:
 966 03cc 13050900 		mv	a0,s2
 967 03d0 97000000 		call	_ZN10KSemaphoredlEPv@plt
 967      E7800000 
 968              	.LVL55:
 969              	.L42:
 275:src/Riscv.cpp ****             }
 970              		.loc 1 275 17 is_stmt 1
 275:src/Riscv.cpp ****             }
 971              		.loc 1 275 45 is_stmt 0
 972              	#APP
 973              	# 275 "src/Riscv.cpp" 1
 974              		li a0, 0
 975              	# 0 "" 2
 976              	#NO_APP
 977              	.LBE134:
 978 03dc 6F008001 		j	.L30
 979              	.LVL56:
GAS LISTING /tmp/cclof41u.s 			page 30


 980              	.L50:
 981              	.LBE133:
 982              	.LBE136:
 983              	.LBE144:
 984              	.LBE150:
 985              	.LBE163:
 986              	.LBE178:
 987              	.LBE192:
 988              	.LBE204:
 989              	.LBE215:
 990              	.LBB216:
 160:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(size));
 991              		.loc 1 160 17 is_stmt 1
 161:src/Riscv.cpp ****                 size*=MEM_BLOCK_SIZE;
 992              		.loc 1 161 17
 161:src/Riscv.cpp ****                 size*=MEM_BLOCK_SIZE;
 993              		.loc 1 161 59 is_stmt 0
 994              	#APP
 995              	# 161 "src/Riscv.cpp" 1
 996              		mv a0, a1
 997              	# 0 "" 2
 998              	.LVL57:
 162:src/Riscv.cpp ****                 void* allocatedAddr = kmalloc(size);
 999              		.loc 1 162 17 is_stmt 1
 163:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : : "r"((uint64)allocatedAddr));
 1000              		.loc 1 163 17
 163:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : : "r"((uint64)allocatedAddr));
 1001              		.loc 1 163 46 is_stmt 0
 1002              	#NO_APP
 1003 03e4 13156500 		slli	a0,a0,6
 1004              	.LVL58:
 1005 03e8 97000000 		call	_Z7kmallocm@plt
 1005      E7800000 
 1006              	.LVL59:
 164:src/Riscv.cpp ****             }
 1007              		.loc 1 164 17 is_stmt 1
 164:src/Riscv.cpp ****             }
 1008              		.loc 1 164 76 is_stmt 0
 1009              	#APP
 1010              	# 164 "src/Riscv.cpp" 1
 1011              		mv a0,a0
 1012              	# 0 "" 2
 1013              	.LVL60:
 1014              	#NO_APP
 1015              	.L30:
 1016              	.LBE216:
 1017              	.LBE227:
 278:src/Riscv.cpp **** 
 1018              		.loc 1 278 13 is_stmt 1
 1019              	.LBB228:
 1020              	.LBB229:
 110:src/../h/Riscv.hpp **** }
 1021              		.loc 2 110 5
 110:src/../h/Riscv.hpp **** }
 1022              		.loc 2 110 51 is_stmt 0
 1023              	#APP
 1024              	# 110 "src/../h/Riscv.hpp" 1
GAS LISTING /tmp/cclof41u.s 			page 31


 111:src/../h/Riscv.hpp **** 
 1025              		csrw sepc, s1
 1026              	# 0 "" 2
 1027              		.loc 2 111 1
 1028              	#NO_APP
 1029 03f8 6FF05FF3 		j	.L24
 1030              	.LVL61:
 1031              	.L51:
 1032              	.LBE229:
 1033              	.LBE228:
 1034              	.LBB230:
 1035              	.LBB217:
 1036              	.LBB205:
 168:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(addr));
 1037              		.loc 1 168 17 is_stmt 1
 169:src/Riscv.cpp ****                 uint64 retval = kfree((void*)addr);
 1038              		.loc 1 169 17
 169:src/Riscv.cpp ****                 uint64 retval = kfree((void*)addr);
 1039              		.loc 1 169 59 is_stmt 0
 1040              	#APP
 1041              	# 169 "src/Riscv.cpp" 1
 1042              		mv a0, a1
 1043              	# 0 "" 2
 1044              	.LVL62:
 170:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 1045              		.loc 1 170 17 is_stmt 1
 170:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 1046              		.loc 1 170 38 is_stmt 0
 1047              	#NO_APP
 1048 0400 97000000 		call	_Z5kfreePv@plt
 1048      E7800000 
 1049              	.LVL63:
 171:src/Riscv.cpp ****             }
 1050              		.loc 1 171 17 is_stmt 1
 171:src/Riscv.cpp ****             }
 1051              		.loc 1 171 60 is_stmt 0
 1052              	#APP
 1053              	# 171 "src/Riscv.cpp" 1
 1054              		mv a0,a0
 1055              	# 0 "" 2
 1056              	#NO_APP
 1057              	.LBE205:
 1058 040c 6FF09FFE 		j	.L30
 1059              	.LVL64:
 1060              	.L52:
 1061              	.LBB206:
 1062              	.LBB193:
 175:src/Riscv.cpp ****                 uint64 args;
 1063              		.loc 1 175 17 is_stmt 1
 176:src/Riscv.cpp ****                 PCB** threadHandle;
 1064              		.loc 1 176 17
 177:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(threadHandle));
 1065              		.loc 1 177 17
 178:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(start_routine));
 1066              		.loc 1 178 17
 178:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(start_routine));
 1067              		.loc 1 178 67 is_stmt 0
GAS LISTING /tmp/cclof41u.s 			page 32


 1068              	#APP
 1069              	# 178 "src/Riscv.cpp" 1
 1070              		mv s4, a1
 1071              	# 0 "" 2
 1072              	.LVL65:
 179:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a3" : "=r"(args));
 1073              		.loc 1 179 17 is_stmt 1
 179:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a3" : "=r"(args));
 1074              		.loc 1 179 68 is_stmt 0
 1075              	# 179 "src/Riscv.cpp" 1
 1076              		mv s5, a2
 1077              	# 0 "" 2
 1078              	.LVL66:
 180:src/Riscv.cpp ****                 //todo
 1079              		.loc 1 180 17 is_stmt 1
 180:src/Riscv.cpp ****                 //todo
 1080              		.loc 1 180 59 is_stmt 0
 1081              	# 180 "src/Riscv.cpp" 1
 1082              		mv s6, a3
 1083              	# 0 "" 2
 1084              	.LVL67:
 185:src/Riscv.cpp **** 
 1085              		.loc 1 185 17 is_stmt 1
 185:src/Riscv.cpp **** 
 1086              		.loc 1 185 113 is_stmt 0
 1087              	#NO_APP
 1088 041c 13058005 		li	a0,88
 1089 0420 97000000 		call	_ZN3PCBnwEm@plt
 1089      E7800000 
 1090              	.LVL68:
 1091              	.LEHE0:
 1092 0428 93090500 		mv	s3,a0
 1093 042c 13072000 		li	a4,2
 1094 0430 93060900 		mv	a3,s2
 1095 0434 13060B00 		mv	a2,s6
 1096 0438 93850A00 		mv	a1,s5
 1097              	.LEHB1:
 1098 043c 97000000 		call	_ZN3PCBC1EPFvPvES0_S0_m@plt
 1098      E7800000 
 1099              	.LVL69:
 1100              	.LEHE1:
 187:src/Riscv.cpp **** 
 1101              		.loc 1 187 17 is_stmt 1 discriminator 2
 187:src/Riscv.cpp **** 
 1102              		.loc 1 187 33 is_stmt 0 discriminator 2
 1103 0444 23303A01 		sd	s3,0(s4)
 189:src/Riscv.cpp ****                     __asm__ volatile("li a0, 0xffffffffffffffff");
 1104              		.loc 1 189 17 is_stmt 1 discriminator 2
 1105 0448 63860900 		beqz	s3,.L59
 192:src/Riscv.cpp ****             }
 1106              		.loc 1 192 21
 192:src/Riscv.cpp ****             }
 1107              		.loc 1 192 49 is_stmt 0
 1108              	#APP
 1109              	# 192 "src/Riscv.cpp" 1
 1110              		li a0, 0
 1111              	# 0 "" 2
GAS LISTING /tmp/cclof41u.s 			page 33


 1112              	#NO_APP
 1113 0450 6FF05FFA 		j	.L30
 1114              	.L59:
 190:src/Riscv.cpp ****                 else
 1115              		.loc 1 190 21 is_stmt 1
 190:src/Riscv.cpp ****                 else
 1116              		.loc 1 190 66 is_stmt 0
 1117              	#APP
 1118              	# 190 "src/Riscv.cpp" 1
 1119              		li a0, 0xffffffffffffffff
 1120              	# 0 "" 2
 1121              	#NO_APP
 1122 0458 6FF0DFF9 		j	.L30
 1123              	.LVL70:
 1124              	.L53:
 1125              	.LBE193:
 1126              	.LBB194:
 1127              	.LBB179:
 196:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 1128              		.loc 1 196 17 is_stmt 1
 1129              	.LBB180:
 1130              	.LBB181:
 160:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 1131              		.loc 2 160 5
 161:src/../h/Riscv.hpp ****     return sstatus;
 1132              		.loc 2 161 5
 161:src/../h/Riscv.hpp ****     return sstatus;
 1133              		.loc 2 161 57 is_stmt 0
 1134              	#APP
 1135              	# 161 "src/../h/Riscv.hpp" 1
 1136              		csrr a5, sstatus
 1137              	# 0 "" 2
 1138              	.LVL71:
 1139              	#NO_APP
 1140 0460 2330F4FA 		sd	a5,-96(s0)
 162:src/../h/Riscv.hpp **** }
 1141              		.loc 2 162 5 is_stmt 1
 162:src/../h/Riscv.hpp **** }
 1142              		.loc 2 162 12 is_stmt 0
 1143 0464 033904FA 		ld	s2,-96(s0)
 1144              	.LVL72:
 1145              	.LBE181:
 1146              	.LBE180:
 197:src/Riscv.cpp ****                 PCB::dispatch();
 1147              		.loc 1 197 17 is_stmt 1
 197:src/Riscv.cpp ****                 PCB::dispatch();
 1148              		.loc 1 197 39 is_stmt 0
 1149 0468 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 1149      83B70700 
 1150 0470 23B00700 		sd	zero,0(a5)
 198:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1151              		.loc 1 198 17 is_stmt 1
 1152              	.LEHB2:
 198:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1153              		.loc 1 198 30 is_stmt 0
 1154 0474 97000000 		call	_ZN3PCB8dispatchEv@plt
 1154      E7800000 
GAS LISTING /tmp/cclof41u.s 			page 34


 1155              	.LVL73:
 199:src/Riscv.cpp ****             }
 1156              		.loc 1 199 17 is_stmt 1
 1157              	.LBB182:
 1158              	.LBB183:
 166:src/../h/Riscv.hpp **** }
 1159              		.loc 2 166 5
 166:src/../h/Riscv.hpp **** }
 1160              		.loc 2 166 57 is_stmt 0
 1161              	#APP
 1162              	# 166 "src/../h/Riscv.hpp" 1
 1163              		csrw sstatus, s2
 1164              	# 0 "" 2
 1165              		.loc 2 167 1
 1166              	#NO_APP
 1167 0480 6FF05FF7 		j	.L30
 1168              	.LVL74:
 1169              	.L54:
 1170              	.LBE183:
 1171              	.LBE182:
 1172              	.LBE179:
 1173              	.LBB184:
 1174              	.LBB164:
 203:src/Riscv.cpp ****                 {
 1175              		.loc 1 203 17 is_stmt 1
 203:src/Riscv.cpp ****                 {
 1176              		.loc 1 203 33 is_stmt 0
 1177 0484 97070000 		la	a5,_ZN3PCB7runningE
 1177      83B70700 
 1178              	.LVL75:
 1179 048c 83B70700 		ld	a5,0(a5)
 203:src/Riscv.cpp ****                 {
 1180              		.loc 1 203 17
 1181 0490 63800704 		beqz	a5,.L60
 208:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 1182              		.loc 1 208 17 is_stmt 1
 1183              	.LBB165:
 1184              	.LBB166:
 160:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 1185              		.loc 2 160 5
 161:src/../h/Riscv.hpp ****     return sstatus;
 1186              		.loc 2 161 5
 161:src/../h/Riscv.hpp ****     return sstatus;
 1187              		.loc 2 161 57 is_stmt 0
 1188              	#APP
 1189              	# 161 "src/../h/Riscv.hpp" 1
 1190              		csrr a5, sstatus
 1191              	# 0 "" 2
 1192              	#NO_APP
 1193 0498 2334F4FA 		sd	a5,-88(s0)
 162:src/../h/Riscv.hpp **** }
 1194              		.loc 2 162 5 is_stmt 1
 162:src/../h/Riscv.hpp **** }
 1195              		.loc 2 162 12 is_stmt 0
 1196 049c 033984FA 		ld	s2,-88(s0)
 1197              	.LVL76:
 1198              	.LBE166:
GAS LISTING /tmp/cclof41u.s 			page 35


 1199              	.LBE165:
 209:src/Riscv.cpp ****                 PCB::running->setState(PCB::EXITING);
 1200              		.loc 1 209 17 is_stmt 1
 209:src/Riscv.cpp ****                 PCB::running->setState(PCB::EXITING);
 1201              		.loc 1 209 39 is_stmt 0
 1202 04a0 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 1202      83B70700 
 1203 04a8 23B00700 		sd	zero,0(a5)
 210:src/Riscv.cpp ****                 PCB::running->setState(PCB::FINISHED);
 1204              		.loc 1 210 17 is_stmt 1
 210:src/Riscv.cpp ****                 PCB::running->setState(PCB::FINISHED);
 1205              		.loc 1 210 39 is_stmt 0
 1206 04ac 97070000 		la	a5,_ZN3PCB7runningE
 1206      83B70700 
 1207 04b4 83B70700 		ld	a5,0(a5)
 1208              	.LVL77:
 1209              	.LBE164:
 1210              	.LBE184:
 1211              	.LBE194:
 1212              	.LBE206:
 1213              	.LBE217:
 1214              	.LBE230:
 1215              	.LBE241:
 1216              	.LBE252:
  29:src/../h/PCB.hpp **** 
  30:src/../h/PCB.hpp ****     void* operator new(size_t size);
  31:src/../h/PCB.hpp ****     void operator delete(void *p);
  32:src/../h/PCB.hpp **** 
  33:src/../h/PCB.hpp ****     enum State{READY, RUNNING, SUSPENDED, FINISHED, EXITING, SLEEPING};
  34:src/../h/PCB.hpp ****     State getState() {return state;}
  35:src/../h/PCB.hpp ****     void setState(State s) {state = s;}
 1217              		.loc 3 35 29 is_stmt 1
 1218              	.LBB253:
 1219              	.LBB242:
 1220              	.LBB231:
 1221              	.LBB218:
 1222              	.LBB207:
 1223              	.LBB195:
 1224              	.LBB185:
 1225              	.LBB171:
 211:src/Riscv.cpp ****                 PCB::dispatch();
 1226              		.loc 1 211 17
 1227              	.LBB167:
 1228              	.LBB168:
 1229              		.loc 3 35 29
 1230              		.loc 3 35 35 is_stmt 0
 1231 04b8 13073000 		li	a4,3
 1232 04bc 23ACE702 		sw	a4,56(a5)
 1233              	.LVL78:
 1234              	.LBE168:
 1235              	.LBE167:
 212:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1236              		.loc 1 212 17 is_stmt 1
 212:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1237              		.loc 1 212 30 is_stmt 0
 1238 04c0 97000000 		call	_ZN3PCB8dispatchEv@plt
 1238      E7800000 
GAS LISTING /tmp/cclof41u.s 			page 36


 1239              	.LVL79:
 213:src/Riscv.cpp ****             }
 1240              		.loc 1 213 17 is_stmt 1
 1241              	.LBB169:
 1242              	.LBB170:
 166:src/../h/Riscv.hpp **** }
 1243              		.loc 2 166 5
 166:src/../h/Riscv.hpp **** }
 1244              		.loc 2 166 57 is_stmt 0
 1245              	#APP
 1246              	# 166 "src/../h/Riscv.hpp" 1
 1247              		csrw sstatus, s2
 1248              	# 0 "" 2
 1249              		.loc 2 167 1
 1250              	#NO_APP
 1251 04cc 6FF09FF2 		j	.L30
 1252              	.LVL80:
 1253              	.L60:
 1254              	.LBE170:
 1255              	.LBE169:
 205:src/Riscv.cpp ****                     return;
 1256              		.loc 1 205 21 is_stmt 1
 205:src/Riscv.cpp ****                     return;
 1257              		.loc 1 205 66 is_stmt 0
 1258              	#APP
 1259              	# 205 "src/Riscv.cpp" 1
 206:src/Riscv.cpp ****                 }
 1260              		li a0, 0xffffffffffffffff
 1261              	# 0 "" 2
 1262              		.loc 1 206 21 is_stmt 1
 1263              	#NO_APP
 1264 04d4 6FF09FE5 		j	.L24
 1265              	.LVL81:
 1266              	.L55:
 1267              	.LBE171:
 1268              	.LBB172:
 1269              	.LBB151:
 217:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(time));
 1270              		.loc 1 217 17
 218:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 1271              		.loc 1 218 17
 218:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 1272              		.loc 1 218 59 is_stmt 0
 1273              	#APP
 1274              	# 218 "src/Riscv.cpp" 1
 1275              		mv a4, a1
 1276              	# 0 "" 2
 1277              	.LVL82:
 219:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 1278              		.loc 1 219 17 is_stmt 1
 1279              	#NO_APP
 1280              	.LBB152:
 1281              	.LBB153:
 160:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 1282              		.loc 2 160 5
 161:src/../h/Riscv.hpp ****     return sstatus;
 1283              		.loc 2 161 5
GAS LISTING /tmp/cclof41u.s 			page 37


 161:src/../h/Riscv.hpp ****     return sstatus;
 1284              		.loc 2 161 57 is_stmt 0
 1285              	#APP
 1286              	# 161 "src/../h/Riscv.hpp" 1
 1287              		csrr a5, sstatus
 1288              	# 0 "" 2
 1289              	.LVL83:
 1290              	#NO_APP
 1291 04e0 2338F4FA 		sd	a5,-80(s0)
 162:src/../h/Riscv.hpp **** }
 1292              		.loc 2 162 5 is_stmt 1
 162:src/../h/Riscv.hpp **** }
 1293              		.loc 2 162 12 is_stmt 0
 1294 04e4 033904FB 		ld	s2,-80(s0)
 1295              	.LVL84:
 1296              	.LBE153:
 1297              	.LBE152:
 220:src/Riscv.cpp ****                 PCB::running->setTimeToSleep(time);
 1298              		.loc 1 220 17 is_stmt 1
 220:src/Riscv.cpp ****                 PCB::running->setTimeToSleep(time);
 1299              		.loc 1 220 39 is_stmt 0
 1300 04e8 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 1300      83B70700 
 1301 04f0 23B00700 		sd	zero,0(a5)
 221:src/Riscv.cpp ****                 SleepPCBList::insertSleepingPCB();
 1302              		.loc 1 221 17 is_stmt 1
 221:src/Riscv.cpp ****                 SleepPCBList::insertSleepingPCB();
 1303              		.loc 1 221 45 is_stmt 0
 1304 04f4 97070000 		la	a5,_ZN3PCB7runningE
 1304      83B70700 
 1305 04fc 83B70700 		ld	a5,0(a5)
 1306              	.LVL85:
 1307              	.LBB154:
 1308              	.LBB155:
  36:src/../h/PCB.hpp ****     void setTimeToSleep(uint64 time) {timeToSleep = time;}
 1309              		.loc 3 36 39 is_stmt 1
 1310              		.loc 3 36 51 is_stmt 0
 1311 0500 23BCE700 		sd	a4,24(a5)
 1312              	.LVL86:
 1313              	.LBE155:
 1314              	.LBE154:
 222:src/Riscv.cpp ****                 PCB::dispatch();
 1315              		.loc 1 222 17 is_stmt 1
 222:src/Riscv.cpp ****                 PCB::dispatch();
 1316              		.loc 1 222 48 is_stmt 0
 1317 0504 97000000 		call	_ZN12SleepPCBList17insertSleepingPCBEv@plt
 1317      E7800000 
 1318              	.LVL87:
 223:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1319              		.loc 1 223 17 is_stmt 1
 223:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1320              		.loc 1 223 30 is_stmt 0
 1321 050c 97000000 		call	_ZN3PCB8dispatchEv@plt
 1321      E7800000 
 1322              	.LVL88:
 224:src/Riscv.cpp ****                 //todo
 1323              		.loc 1 224 17 is_stmt 1
GAS LISTING /tmp/cclof41u.s 			page 38


 1324              	.LBB156:
 1325              	.LBB157:
 166:src/../h/Riscv.hpp **** }
 1326              		.loc 2 166 5
 166:src/../h/Riscv.hpp **** }
 1327              		.loc 2 166 57 is_stmt 0
 1328              	#APP
 1329              	# 166 "src/../h/Riscv.hpp" 1
 1330              		csrw sstatus, s2
 1331              	# 0 "" 2
 1332              	.LVL89:
 1333              	#NO_APP
 1334              	.LBE157:
 1335              	.LBE156:
 227:src/Riscv.cpp ****             }
 1336              		.loc 1 227 17 is_stmt 1
 227:src/Riscv.cpp ****             }
 1337              		.loc 1 227 47 is_stmt 0
 1338              	#APP
 1339              	# 227 "src/Riscv.cpp" 1
 1340              		li a0, 0x0
 1341              	# 0 "" 2
 1342              	#NO_APP
 1343              	.LBE151:
 1344 051c 6FF09FED 		j	.L30
 1345              	.LVL90:
 1346              	.L56:
 1347              	.LBB158:
 1348              	.LBB145:
 231:src/Riscv.cpp ****                 KSemaphore** semaphoreHandle;
 1349              		.loc 1 231 17 is_stmt 1
 232:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(semaphoreHandle));
 1350              		.loc 1 232 17
 233:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(val));
 1351              		.loc 1 233 17
 233:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(val));
 1352              		.loc 1 233 70 is_stmt 0
 1353              	#APP
 1354              	# 233 "src/Riscv.cpp" 1
 1355              		mv s3, a1
 1356              	# 0 "" 2
 1357              	.LVL91:
 234:src/Riscv.cpp **** 
 1358              		.loc 1 234 17 is_stmt 1
 234:src/Riscv.cpp **** 
 1359              		.loc 1 234 58 is_stmt 0
 1360              	# 234 "src/Riscv.cpp" 1
 1361              		mv s4, a2
 1362              	# 0 "" 2
 1363              	.LVL92:
 236:src/Riscv.cpp **** 
 1364              		.loc 1 236 17 is_stmt 1
 236:src/Riscv.cpp **** 
 1365              		.loc 1 236 56 is_stmt 0
 1366              	#NO_APP
 1367 0528 13058001 		li	a0,24
 1368 052c 97000000 		call	_ZN10KSemaphorenwEm@plt
GAS LISTING /tmp/cclof41u.s 			page 39


 1368      E7800000 
 1369              	.LVL93:
 1370              	.LEHE2:
 1371 0534 13090500 		mv	s2,a0
 1372              	.LVL94:
 1373 0538 9B050A00 		sext.w	a1,s4
 1374              	.LEHB3:
 1375 053c 97000000 		call	_ZN10KSemaphoreC1Ei@plt
 1375      E7800000 
 1376              	.LVL95:
 1377              	.LEHE3:
 238:src/Riscv.cpp **** 
 1378              		.loc 1 238 17 is_stmt 1 discriminator 2
 238:src/Riscv.cpp **** 
 1379              		.loc 1 238 36 is_stmt 0 discriminator 2
 1380 0544 23B02901 		sd	s2,0(s3)
 240:src/Riscv.cpp ****                         __asm__ volatile("li a0, 0xffffffffffffffff");
 1381              		.loc 1 240 17 is_stmt 1 discriminator 2
 1382 0548 63060900 		beqz	s2,.L61
 243:src/Riscv.cpp **** 
 1383              		.loc 1 243 25
 243:src/Riscv.cpp **** 
 1384              		.loc 1 243 53 is_stmt 0
 1385              	#APP
 1386              	# 243 "src/Riscv.cpp" 1
 1387              		li a0, 0
 1388              	# 0 "" 2
 1389              	#NO_APP
 1390 0550 6FF05FEA 		j	.L30
 1391              	.L61:
 241:src/Riscv.cpp ****                 else
 1392              		.loc 1 241 25 is_stmt 1
 241:src/Riscv.cpp ****                 else
 1393              		.loc 1 241 70 is_stmt 0
 1394              	#APP
 1395              	# 241 "src/Riscv.cpp" 1
 1396              		li a0, 0xffffffffffffffff
 1397              	# 0 "" 2
 1398              	#NO_APP
 1399 0558 6FF0DFE9 		j	.L30
 1400              	.LVL96:
 1401              	.L57:
 1402              	.LBE145:
 1403              	.LBB146:
 1404              	.LBB137:
 250:src/Riscv.cpp ****                 KSemaphore* kSem;
 1405              		.loc 1 250 17 is_stmt 1
 1406              	.LBB138:
 1407              	.LBB139:
 160:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 1408              		.loc 2 160 5
 161:src/../h/Riscv.hpp ****     return sstatus;
 1409              		.loc 2 161 5
 161:src/../h/Riscv.hpp ****     return sstatus;
 1410              		.loc 2 161 57 is_stmt 0
 1411              	#APP
 1412              	# 161 "src/../h/Riscv.hpp" 1
GAS LISTING /tmp/cclof41u.s 			page 40


 1413              		csrr a5, sstatus
 1414              	# 0 "" 2
 1415              	.LVL97:
 1416              	#NO_APP
 1417 0560 233CF4FA 		sd	a5,-72(s0)
 162:src/../h/Riscv.hpp **** }
 1418              		.loc 2 162 5 is_stmt 1
 162:src/../h/Riscv.hpp **** }
 1419              		.loc 2 162 12 is_stmt 0
 1420 0564 033984FB 		ld	s2,-72(s0)
 1421              	.LVL98:
 1422              	.LBE139:
 1423              	.LBE138:
 251:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(kSem));
 1424              		.loc 1 251 17 is_stmt 1
 252:src/Riscv.cpp ****                 uint64 retval = kSem->wait();
 1425              		.loc 1 252 17
 252:src/Riscv.cpp ****                 uint64 retval = kSem->wait();
 1426              		.loc 1 252 59 is_stmt 0
 1427              	#APP
 1428              	# 252 "src/Riscv.cpp" 1
 1429              		mv a0, a1
 1430              	# 0 "" 2
 1431              	.LVL99:
 253:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1432              		.loc 1 253 17 is_stmt 1
 1433              	.LEHB4:
 253:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1434              		.loc 1 253 43 is_stmt 0
 1435              	#NO_APP
 1436 056c 97000000 		call	_ZN10KSemaphore4waitEv@plt
 1436      E7800000 
 1437              	.LVL100:
 254:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 1438              		.loc 1 254 17 is_stmt 1
 1439              	.LBB140:
 1440              	.LBB141:
 166:src/../h/Riscv.hpp **** }
 1441              		.loc 2 166 5
 166:src/../h/Riscv.hpp **** }
 1442              		.loc 2 166 57 is_stmt 0
 1443              	#APP
 1444              	# 166 "src/../h/Riscv.hpp" 1
 1445              		csrw sstatus, s2
 1446              	# 0 "" 2
 1447              	.LVL101:
 1448              	#NO_APP
 1449              	.LBE141:
 1450              	.LBE140:
 255:src/Riscv.cpp ****             }
 1451              		.loc 1 255 17 is_stmt 1
 255:src/Riscv.cpp ****             }
 1452              		.loc 1 255 60 is_stmt 0
 1453              	#APP
 1454              	# 255 "src/Riscv.cpp" 1
 1455              		mv a0,a0
 1456              	# 0 "" 2
GAS LISTING /tmp/cclof41u.s 			page 41


 1457              	#NO_APP
 1458              	.LBE137:
 1459 057c 6FF09FE7 		j	.L30
 1460              	.LVL102:
 1461              	.L58:
 1462              	.LBB142:
 1463              	.LBB135:
 261:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(kSem));
 1464              		.loc 1 261 17 is_stmt 1
 262:src/Riscv.cpp ****                 uint64 retval = kSem->signal();
 1465              		.loc 1 262 17
 262:src/Riscv.cpp ****                 uint64 retval = kSem->signal();
 1466              		.loc 1 262 59 is_stmt 0
 1467              	#APP
 1468              	# 262 "src/Riscv.cpp" 1
 1469              		mv a0, a1
 1470              	# 0 "" 2
 1471              	.LVL103:
 263:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 1472              		.loc 1 263 17 is_stmt 1
 263:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 1473              		.loc 1 263 45 is_stmt 0
 1474              	#NO_APP
 1475 0584 97000000 		call	_ZN10KSemaphore6signalEv@plt
 1475      E7800000 
 1476              	.LVL104:
 1477              	.LEHE4:
 264:src/Riscv.cpp ****             }
 1478              		.loc 1 264 17 is_stmt 1
 264:src/Riscv.cpp ****             }
 1479              		.loc 1 264 60 is_stmt 0
 1480              	#APP
 1481              	# 264 "src/Riscv.cpp" 1
 1482              		mv a0,a0
 1483              	# 0 "" 2
 1484              	#NO_APP
 1485              	.LBE135:
 1486 0590 6FF05FE6 		j	.L30
 1487              	.LVL105:
 1488              	.L45:
 1489 0594 93040500 		mv	s1,a0
 1490              	.LVL106:
 1491              	.LBE142:
 1492              	.LBE146:
 1493              	.LBE158:
 1494              	.LBE172:
 1495              	.LBE185:
 1496              	.LBE195:
 1497              	.LBB196:
 185:src/Riscv.cpp **** 
 1498              		.loc 1 185 113
 1499 0598 13850900 		mv	a0,s3
 1500 059c 97000000 		call	_ZN3PCBdlEPv@plt
 1500      E7800000 
 1501              	.LVL107:
 1502 05a4 13850400 		mv	a0,s1
 1503              	.LEHB5:
GAS LISTING /tmp/cclof41u.s 			page 42


 1504 05a8 97000000 		call	_Unwind_Resume@plt
 1504      E7800000 
 1505              	.LVL108:
 1506              	.LEHE5:
 1507              	.L46:
 1508 05b0 93040500 		mv	s1,a0
 1509              	.LVL109:
 1510              	.LBE196:
 1511              	.LBB197:
 1512              	.LBB186:
 1513              	.LBB173:
 1514              	.LBB159:
 1515              	.LBB147:
 236:src/Riscv.cpp **** 
 1516              		.loc 1 236 56
 1517 05b4 13050900 		mv	a0,s2
 1518 05b8 97000000 		call	_ZN10KSemaphoredlEPv@plt
 1518      E7800000 
 1519              	.LVL110:
 1520 05c0 13850400 		mv	a0,s1
 1521              	.LEHB6:
 1522 05c4 97000000 		call	_Unwind_Resume@plt
 1522      E7800000 
 1523              	.LVL111:
 1524              	.LEHE6:
 1525              	.LBE147:
 1526              	.LBE159:
 1527              	.LBE173:
 1528              	.LBE186:
 1529              	.LBE197:
 1530              	.LBE207:
 1531              	.LBE218:
 1532              	.LBE231:
 1533              	.LBE242:
 1534              	.LBE253:
 1535              		.cfi_endproc
 1536              	.LFE33:
 1537              		.globl	__gxx_personality_v0
 1538              		.section	.gcc_except_table,"a",@progbits
 1539              	.LLSDA33:
 1540 0000 FF       		.byte	0xff
 1541 0001 FF       		.byte	0xff
 1542 0002 03       		.byte	0x3
 1543 0003 5B       		.byte	0x5b
 1544 0004 00000000 		.4byte	.LEHB0-.LFB33
 1545 0008 00000000 		.4byte	.LEHE0-.LEHB0
 1546 000c 00000000 		.4byte	0
 1547 0010 00       		.byte	0
 1548 0011 00000000 		.4byte	.LEHB1-.LFB33
 1549 0015 00000000 		.4byte	.LEHE1-.LEHB1
 1550 0019 00000000 		.4byte	.L45-.LFB33
 1551 001d 00       		.byte	0
 1552 001e 00000000 		.4byte	.LEHB2-.LFB33
 1553 0022 00000000 		.4byte	.LEHE2-.LEHB2
 1554 0026 00000000 		.4byte	0
 1555 002a 00       		.byte	0
 1556 002b 00000000 		.4byte	.LEHB3-.LFB33
GAS LISTING /tmp/cclof41u.s 			page 43


 1557 002f 00000000 		.4byte	.LEHE3-.LEHB3
 1558 0033 00000000 		.4byte	.L46-.LFB33
 1559 0037 00       		.byte	0
 1560 0038 00000000 		.4byte	.LEHB4-.LFB33
 1561 003c 00000000 		.4byte	.LEHE4-.LEHB4
 1562 0040 00000000 		.4byte	0
 1563 0044 00       		.byte	0
 1564 0045 00000000 		.4byte	.LEHB5-.LFB33
 1565 0049 00000000 		.4byte	.LEHE5-.LEHB5
 1566 004d 00000000 		.4byte	0
 1567 0051 00       		.byte	0
 1568 0052 00000000 		.4byte	.LEHB6-.LFB33
 1569 0056 00000000 		.4byte	.LEHE6-.LEHB6
 1570 005a 00000000 		.4byte	0
 1571 005e 00       		.byte	0
 1572              		.text
 1574              		.section	.rodata.str1.8,"aMS",@progbits,1
 1575              		.align	3
 1576              	.LC0:
 1577 0000 456E642E 		.string	"End..."
 1577      2E2E00
 1578              		.text
 1579              		.align	2
 1580              		.globl	_ZN5Riscv10kernelMainEv
 1582              	_ZN5Riscv10kernelMainEv:
 1583              	.LFB34:
 287:src/Riscv.cpp ****     initSystem();
 1584              		.loc 1 287 1 is_stmt 1
 1585              		.cfi_startproc
 1586              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 1587              		.cfi_lsda 0x1b,.LLSDA34
 1588 05cc 130101FE 		addi	sp,sp,-32
 1589              		.cfi_def_cfa_offset 32
 1590 05d0 233C1100 		sd	ra,24(sp)
 1591 05d4 23388100 		sd	s0,16(sp)
 1592 05d8 23349100 		sd	s1,8(sp)
 1593 05dc 23302101 		sd	s2,0(sp)
 1594              		.cfi_offset 1, -8
 1595              		.cfi_offset 8, -16
 1596              		.cfi_offset 9, -24
 1597              		.cfi_offset 18, -32
 1598 05e0 13040102 		addi	s0,sp,32
 1599              		.cfi_def_cfa 8, 0
 288:src/Riscv.cpp **** 
 1600              		.loc 1 288 5
 1601              	.LEHB7:
 288:src/Riscv.cpp **** 
 1602              		.loc 1 288 15 is_stmt 0
 1603 05e4 97000000 		call	_ZN5Riscv10initSystemEv
 1603      E7800000 
 1604              	.LVL112:
 294:src/Riscv.cpp **** 
 1605              		.loc 1 294 5 is_stmt 1
 294:src/Riscv.cpp **** 
 1606              		.loc 1 294 63 is_stmt 0
 1607 05ec 37150000 		li	a0,4096
 1608 05f0 97000000 		call	_Z7kmallocm@plt
GAS LISTING /tmp/cclof41u.s 			page 44


 1608      E7800000 
 1609              	.LVL113:
 1610 05f8 13090500 		mv	s2,a0
 294:src/Riscv.cpp **** 
 1611              		.loc 1 294 103
 1612 05fc 13058005 		li	a0,88
 1613 0600 97000000 		call	_ZN3PCBnwEm@plt
 1613      E7800000 
 1614              	.LVL114:
 1615              	.LEHE7:
 1616 0608 93040500 		mv	s1,a0
 1617 060c 13072000 		li	a4,2
 1618 0610 93060900 		mv	a3,s2
 1619 0614 13060000 		li	a2,0
 1620 0618 97050000 		lla	a1,_ZN5Riscv15userMainWrapperEPv
 1620      93850500 
 1621              	.LEHB8:
 1622 0620 97000000 		call	_ZN3PCBC1EPFvPvES0_S0_m@plt
 1622      E7800000 
 1623              	.LVL115:
 1624              	.LEHE8:
 1625              	.L64:
 296:src/Riscv.cpp ****     {
 1626              		.loc 1 296 5 is_stmt 1
 296:src/Riscv.cpp ****     {
 1627              		.loc 1 296 31
 1628              	.LBB254:
 1629              	.LBB255:
  34:src/../h/PCB.hpp ****     void setState(State s) {state = s;}
 1630              		.loc 3 34 23
  34:src/../h/PCB.hpp ****     void setState(State s) {state = s;}
 1631              		.loc 3 34 30 is_stmt 0
 1632 0628 03A78403 		lw	a4,56(s1)
 1633              	.LVL116:
 1634              	.LBE255:
 1635              	.LBE254:
 296:src/Riscv.cpp ****     {
 1636              		.loc 1 296 31
 1637 062c 93073000 		li	a5,3
 1638 0630 6308F700 		beq	a4,a5,.L63
 299:src/Riscv.cpp ****     }
 1639              		.loc 1 299 9 is_stmt 1
 1640              	.LEHB9:
 299:src/Riscv.cpp ****     }
 1641              		.loc 1 299 24 is_stmt 0
 1642 0634 97000000 		call	thread_dispatch@plt
 1642      E7800000 
 1643              	.LVL117:
 296:src/Riscv.cpp ****     {
 1644              		.loc 1 296 5
 1645 063c 6FF0DFFE 		j	.L64
 1646              	.L63:
 306:src/Riscv.cpp **** 
 1647              		.loc 1 306 5 is_stmt 1
 306:src/Riscv.cpp **** 
 1648              		.loc 1 306 14 is_stmt 0
 1649 0640 97000000 		call	_ZN5Riscv9endSystemEv
GAS LISTING /tmp/cclof41u.s 			page 45


 1649      E7800000 
 1650              	.LVL118:
 308:src/Riscv.cpp **** }
 1651              		.loc 1 308 5 is_stmt 1
 308:src/Riscv.cpp **** }
 1652              		.loc 1 308 23 is_stmt 0
 1653 0648 17050000 		lla	a0,.LC0
 1653      13050500 
 1654 0650 97000000 		call	_ZN5Riscv11printStringEPKc
 1654      E7800000 
 1655              	.LVL119:
 1656              	.LEHE9:
 309:src/Riscv.cpp **** 
 1657              		.loc 1 309 1
 1658 0658 83308101 		ld	ra,24(sp)
 1659              		.cfi_remember_state
 1660              		.cfi_restore 1
 1661 065c 03340101 		ld	s0,16(sp)
 1662              		.cfi_restore 8
 1663              		.cfi_def_cfa 2, 32
 1664 0660 83348100 		ld	s1,8(sp)
 1665              		.cfi_restore 9
 1666 0664 03390100 		ld	s2,0(sp)
 1667              		.cfi_restore 18
 1668 0668 13010102 		addi	sp,sp,32
 1669              		.cfi_def_cfa_offset 0
 1670 066c 67800000 		jr	ra
 1671              	.L66:
 1672              		.cfi_restore_state
 1673 0670 13090500 		mv	s2,a0
 294:src/Riscv.cpp **** 
 1674              		.loc 1 294 103
 1675 0674 13850400 		mv	a0,s1
 1676 0678 97000000 		call	_ZN3PCBdlEPv@plt
 1676      E7800000 
 1677              	.LVL120:
 1678 0680 13050900 		mv	a0,s2
 1679              	.LEHB10:
 1680 0684 97000000 		call	_Unwind_Resume@plt
 1680      E7800000 
 1681              	.LVL121:
 1682              	.LEHE10:
 1683              		.cfi_endproc
 1684              	.LFE34:
 1685              		.section	.gcc_except_table
 1686              	.LLSDA34:
 1687 005f FF       		.byte	0xff
 1688 0060 FF       		.byte	0xff
 1689 0061 03       		.byte	0x3
 1690 0062 34       		.byte	0x34
 1691 0063 00000000 		.4byte	.LEHB7-.LFB34
 1692 0067 00000000 		.4byte	.LEHE7-.LEHB7
 1693 006b 00000000 		.4byte	0
 1694 006f 00       		.byte	0
 1695 0070 00000000 		.4byte	.LEHB8-.LFB34
 1696 0074 00000000 		.4byte	.LEHE8-.LEHB8
 1697 0078 00000000 		.4byte	.L66-.LFB34
GAS LISTING /tmp/cclof41u.s 			page 46


 1698 007c 00       		.byte	0
 1699 007d 00000000 		.4byte	.LEHB9-.LFB34
 1700 0081 00000000 		.4byte	.LEHE9-.LEHB9
 1701 0085 00000000 		.4byte	0
 1702 0089 00       		.byte	0
 1703 008a 00000000 		.4byte	.LEHB10-.LFB34
 1704 008e 00000000 		.4byte	.LEHE10-.LEHB10
 1705 0092 00000000 		.4byte	0
 1706 0096 00       		.byte	0
 1707              		.text
 1709              		.section	.rodata
 1710              		.align	3
 1711              		.set	.LANCHOR0,. + 0
 1714              	_ZZN5Riscv12printIntegerEmE6digits:
 1715 0000 30313233 		.string	"0123456789"
 1715      34353637 
 1715      383900
 1716              		.bss
 1717              		.align	3
 1718              		.set	.LANCHOR1,. + 0
 1721              	_ZZN5Riscv20handleSupervisorTrapEvE5total:
 1722 0000 00000000 		.zero	8
 1722      00000000 
 1723              		.text
 1724              	.Letext0:
 1725              		.file 4 "src/../h/../lib/hw.h"
 1726              		.file 5 "src/../h/KSemaphore.hpp"
 1727              		.file 6 "src/../h/SleepPCBList.hpp"
 1728              		.file 7 "src/../h/KConsole.hpp"
 1729              		.file 8 "src/../test/userMain.hpp"
 1730              		.file 9 "src/../h/MemoryAllocator.hpp"
 1731              		.file 10 "src/../h/syscall_c.h"
 1732              		.file 11 "src/../lib/console.h"
 6699              		.align	3
 6702              	DW.ref.__gxx_personality_v0:
 6703 0000 00000000 		.dword	__gxx_personality_v0
 6703      00000000 
 6704              		.ident	"GCC: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0"
 6705              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/cclof41u.s 			page 47


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Riscv.cpp
     /tmp/cclof41u.s:9      .text:0000000000000000 _ZN5Riscv15userMainWrapperEPv
     /tmp/cclof41u.s:13     .text:0000000000000000 .L0 
     /tmp/cclof41u.s:14     .text:0000000000000000 .L0 
     /tmp/cclof41u.s:15     .text:0000000000000004 .L0 
     /tmp/cclof41u.s:18     .text:000000000000000c .L0 
     /tmp/cclof41u.s:19     .text:000000000000000c .L0 
     /tmp/cclof41u.s:21     .text:0000000000000010 .L0 
     /tmp/cclof41u.s:23     .text:0000000000000010 .L0 
     /tmp/cclof41u.s:24     .text:0000000000000010 .L0 
     /tmp/cclof41u.s:27     .text:0000000000000018 .L0 
     /tmp/cclof41u.s:28     .text:000000000000001c .L0 
     /tmp/cclof41u.s:30     .text:0000000000000020 .L0 
     /tmp/cclof41u.s:31     .text:0000000000000020 .L0 
     /tmp/cclof41u.s:33     .text:0000000000000024 .L0 
     /tmp/cclof41u.s:35     .text:0000000000000028 .L0 
     /tmp/cclof41u.s:41     .text:0000000000000028 _ZN5Riscv24getCharactersFromConsoleEv
     /tmp/cclof41u.s:44     .text:0000000000000028 .L0 
     /tmp/cclof41u.s:45     .text:0000000000000028 .L0 
     /tmp/cclof41u.s:46     .text:000000000000002c .L0 
     /tmp/cclof41u.s:48     .text:0000000000000030 .L0 
     /tmp/cclof41u.s:50     .text:0000000000000034 .L0 
     /tmp/cclof41u.s:52     .text:0000000000000034 .L0 
     /tmp/cclof41u.s:53     .text:0000000000000038 .L0 
     /tmp/cclof41u.s:54     .text:0000000000000038 .L0 
     /tmp/cclof41u.s:56     .text:000000000000003c .L0 
     /tmp/cclof41u.s:58     .text:0000000000000040 .L0 
     /tmp/cclof41u.s:64     .text:0000000000000040 _ZN5Riscv10initSystemEv
     /tmp/cclof41u.s:67     .text:0000000000000040 .L0 
     /tmp/cclof41u.s:68     .text:0000000000000040 .L0 
     /tmp/cclof41u.s:69     .text:0000000000000044 .L0 
     /tmp/cclof41u.s:72     .text:000000000000004c .L0 
     /tmp/cclof41u.s:73     .text:000000000000004c .L0 
     /tmp/cclof41u.s:75     .text:0000000000000050 .L0 
     /tmp/cclof41u.s:77     .text:0000000000000050 .L0 
     /tmp/cclof41u.s:78     .text:0000000000000050 .L0 
     /tmp/cclof41u.s:84     .text:0000000000000058 .L0 
  src/../h/Riscv.hpp:120    .text:0000000000000058 .L0 
     /tmp/cclof41u.s:94     .text:000000000000005c .L0 
     /tmp/cclof41u.s:95     .text:000000000000005c .L0 
     /tmp/cclof41u.s:98     .text:0000000000000064 .L0 
     /tmp/cclof41u.s:99     .text:0000000000000064 .L0 
     /tmp/cclof41u.s:102    .text:000000000000006c .L0 
     /tmp/cclof41u.s:103    .text:0000000000000070 .L0 
     /tmp/cclof41u.s:105    .text:0000000000000074 .L0 
     /tmp/cclof41u.s:106    .text:0000000000000074 .L0 
     /tmp/cclof41u.s:108    .text:0000000000000078 .L0 
     /tmp/cclof41u.s:110    .text:000000000000007c .L0 
     /tmp/cclof41u.s:116    .text:000000000000007c _ZN5Riscv16enableInterruptsEv
     /tmp/cclof41u.s:119    .text:000000000000007c .L0 
     /tmp/cclof41u.s:120    .text:000000000000007c .L0 
     /tmp/cclof41u.s:121    .text:0000000000000080 .L0 
     /tmp/cclof41u.s:123    .text:0000000000000084 .L0 
     /tmp/cclof41u.s:125    .text:0000000000000088 .L0 
     /tmp/cclof41u.s:130    .text:0000000000000088 .L0 
     /tmp/cclof41u.s:131    .text:0000000000000088 .L0 
GAS LISTING /tmp/cclof41u.s 			page 48


     /tmp/cclof41u.s:132    .text:0000000000000088 .L0 
     /tmp/cclof41u.s:142    .text:0000000000000090 .L0 
     /tmp/cclof41u.s:143    .text:0000000000000094 .L0 
     /tmp/cclof41u.s:144    .text:0000000000000094 .L0 
     /tmp/cclof41u.s:146    .text:0000000000000098 .L0 
     /tmp/cclof41u.s:148    .text:000000000000009c .L0 
     /tmp/cclof41u.s:154    .text:000000000000009c _ZN5Riscv17disableInterruptsEv
     /tmp/cclof41u.s:157    .text:000000000000009c .L0 
     /tmp/cclof41u.s:158    .text:000000000000009c .L0 
     /tmp/cclof41u.s:159    .text:00000000000000a0 .L0 
     /tmp/cclof41u.s:161    .text:00000000000000a4 .L0 
     /tmp/cclof41u.s:163    .text:00000000000000a8 .L0 
     /tmp/cclof41u.s:168    .text:00000000000000a8 .L0 
     /tmp/cclof41u.s:169    .text:00000000000000a8 .L0 
     /tmp/cclof41u.s:170    .text:00000000000000a8 .L0 
     /tmp/cclof41u.s:180    .text:00000000000000b0 .L0 
     /tmp/cclof41u.s:181    .text:00000000000000b4 .L0 
     /tmp/cclof41u.s:182    .text:00000000000000b4 .L0 
     /tmp/cclof41u.s:184    .text:00000000000000b8 .L0 
     /tmp/cclof41u.s:186    .text:00000000000000bc .L0 
     /tmp/cclof41u.s:192    .text:00000000000000bc _ZN5Riscv9endSystemEv
     /tmp/cclof41u.s:195    .text:00000000000000bc .L0 
     /tmp/cclof41u.s:196    .text:00000000000000bc .L0 
     /tmp/cclof41u.s:197    .text:00000000000000c0 .L0 
     /tmp/cclof41u.s:200    .text:00000000000000c8 .L0 
     /tmp/cclof41u.s:201    .text:00000000000000c8 .L0 
     /tmp/cclof41u.s:203    .text:00000000000000cc .L0 
     /tmp/cclof41u.s:205    .text:00000000000000cc .L0 
     /tmp/cclof41u.s:206    .text:00000000000000cc .L0 
     /tmp/cclof41u.s:209    .text:00000000000000d4 .L0 
     /tmp/cclof41u.s:210    .text:00000000000000d8 .L0 
     /tmp/cclof41u.s:212    .text:00000000000000dc .L0 
     /tmp/cclof41u.s:213    .text:00000000000000dc .L0 
     /tmp/cclof41u.s:215    .text:00000000000000e0 .L0 
     /tmp/cclof41u.s:217    .text:00000000000000e4 .L0 
     /tmp/cclof41u.s:223    .text:00000000000000e4 _ZN5Riscv10popSppSpieEv
     /tmp/cclof41u.s:226    .text:00000000000000e4 .L0 
     /tmp/cclof41u.s:227    .text:00000000000000e4 .L0 
     /tmp/cclof41u.s:228    .text:00000000000000e8 .L0 
     /tmp/cclof41u.s:230    .text:00000000000000ec .L0 
     /tmp/cclof41u.s:232    .text:00000000000000f0 .L0 
     /tmp/cclof41u.s:234    .text:00000000000000f0 .L0 
       src/Riscv.cpp:49     .text:00000000000000f0 .L0 
     /tmp/cclof41u.s:240    .text:00000000000000f4 .L0 
       src/Riscv.cpp:50     .text:00000000000000f4 .L0 
     /tmp/cclof41u.s:246    .text:00000000000000f8 .L0 
     /tmp/cclof41u.s:247    .text:00000000000000fc .L0 
     /tmp/cclof41u.s:248    .text:00000000000000fc .L0 
     /tmp/cclof41u.s:250    .text:0000000000000100 .L0 
     /tmp/cclof41u.s:252    .text:0000000000000104 .L0 
     /tmp/cclof41u.s:258    .text:0000000000000104 _ZN5Riscv11printStringEPKc
     /tmp/cclof41u.s:261    .text:0000000000000104 .L0 
     /tmp/cclof41u.s:263    .text:0000000000000104 .L0 
     /tmp/cclof41u.s:264    .text:0000000000000108 .L0 
     /tmp/cclof41u.s:269    .text:0000000000000118 .L0 
     /tmp/cclof41u.s:270    .text:0000000000000118 .L0 
     /tmp/cclof41u.s:271    .text:0000000000000118 .L0 
GAS LISTING /tmp/cclof41u.s 			page 49


     /tmp/cclof41u.s:272    .text:0000000000000118 .L0 
     /tmp/cclof41u.s:274    .text:000000000000011c .L0 
     /tmp/cclof41u.s:279    .text:0000000000000120 .L0 
     /tmp/cclof41u.s:280    .text:0000000000000120 .L0 
     /tmp/cclof41u.s:281    .text:0000000000000120 .L0 
  src/../h/Riscv.hpp:161    .text:0000000000000120 .L0 
     /tmp/cclof41u.s:289    .text:0000000000000128 .L0 
     /tmp/cclof41u.s:290    .text:0000000000000128 .L0 
     /tmp/cclof41u.s:297    .text:000000000000012c .L0 
     /tmp/cclof41u.s:298    .text:000000000000012c .L0 
     /tmp/cclof41u.s:299    .text:000000000000012c .L0 
     /tmp/cclof41u.s:310    .text:0000000000000134 .L0 
     /tmp/cclof41u.s:311    .text:0000000000000134 .L0 
     /tmp/cclof41u.s:312    .text:0000000000000134 .L0 
     /tmp/cclof41u.s:314    .text:0000000000000138 .L0 
     /tmp/cclof41u.s:316    .text:000000000000013c .L0 
     /tmp/cclof41u.s:317    .text:000000000000013c .L0 
     /tmp/cclof41u.s:320    .text:0000000000000144 .L0 
     /tmp/cclof41u.s:321    .text:0000000000000144 .L0 
     /tmp/cclof41u.s:324    .text:0000000000000148 .L0 
     /tmp/cclof41u.s:327    .text:000000000000014c .L0 
     /tmp/cclof41u.s:328    .text:000000000000014c .L0 
     /tmp/cclof41u.s:331    .text:0000000000000150 .L0 
     /tmp/cclof41u.s:337    .text:0000000000000158 .L0 
  src/../h/Riscv.hpp:152    .text:0000000000000158 .L0 
     /tmp/cclof41u.s:347    .text:000000000000015c .L0 
     /tmp/cclof41u.s:348    .text:0000000000000160 .L0 
     /tmp/cclof41u.s:350    .text:0000000000000164 .L0 
     /tmp/cclof41u.s:351    .text:0000000000000164 .L0 
     /tmp/cclof41u.s:353    .text:0000000000000168 .L0 
     /tmp/cclof41u.s:356    .text:000000000000016c .L0 
     /tmp/cclof41u.s:358    .text:0000000000000170 .L0 
     /tmp/cclof41u.s:360    .text:0000000000000174 .L0 
     /tmp/cclof41u.s:366    .text:0000000000000174 _ZN5Riscv12printIntegerEm
     /tmp/cclof41u.s:369    .text:0000000000000174 .L0 
     /tmp/cclof41u.s:371    .text:0000000000000174 .L0 
     /tmp/cclof41u.s:372    .text:0000000000000178 .L0 
     /tmp/cclof41u.s:377    .text:0000000000000188 .L0 
     /tmp/cclof41u.s:378    .text:0000000000000188 .L0 
     /tmp/cclof41u.s:379    .text:0000000000000188 .L0 
     /tmp/cclof41u.s:380    .text:0000000000000188 .L0 
     /tmp/cclof41u.s:382    .text:000000000000018c .L0 
     /tmp/cclof41u.s:386    .text:000000000000018c .L0 
     /tmp/cclof41u.s:387    .text:000000000000018c .L0 
     /tmp/cclof41u.s:388    .text:000000000000018c .L0 
  src/../h/Riscv.hpp:161    .text:000000000000018c .L0 
     /tmp/cclof41u.s:396    .text:0000000000000194 .L0 
     /tmp/cclof41u.s:397    .text:0000000000000194 .L0 
     /tmp/cclof41u.s:404    .text:0000000000000198 .L0 
     /tmp/cclof41u.s:405    .text:0000000000000198 .L0 
     /tmp/cclof41u.s:406    .text:0000000000000198 .L0 
     /tmp/cclof41u.s:416    .text:00000000000001a0 .L0 
     /tmp/cclof41u.s:417    .text:00000000000001a0 .L0 
     /tmp/cclof41u.s:418    .text:00000000000001a0 .L0 
     /tmp/cclof41u.s:419    .text:00000000000001a0 .L0 
     /tmp/cclof41u.s:420    .text:00000000000001a0 .L0 
     /tmp/cclof41u.s:421    .text:00000000000001a0 .L0 
GAS LISTING /tmp/cclof41u.s 			page 50


     /tmp/cclof41u.s:422    .text:00000000000001a0 .L0 
     /tmp/cclof41u.s:423    .text:00000000000001a0 .L0 
     /tmp/cclof41u.s:426    .text:00000000000001a4 .L0 
     /tmp/cclof41u.s:427    .text:00000000000001a4 .L0 
     /tmp/cclof41u.s:431    .text:00000000000001a8 .L0 
     /tmp/cclof41u.s:432    .text:00000000000001a8 .L0 
     /tmp/cclof41u.s:433    .text:00000000000001a8 .L0 
     /tmp/cclof41u.s:437    .text:00000000000001b0 .L0 
     /tmp/cclof41u.s:443    .text:00000000000001c8 .L0 
     /tmp/cclof41u.s:449    .text:00000000000001d8 .L0 
     /tmp/cclof41u.s:451    .text:00000000000001dc .L0 
     /tmp/cclof41u.s:454    .text:00000000000001e0 .L0 
     /tmp/cclof41u.s:459    .text:00000000000001e8 .L0 
     /tmp/cclof41u.s:460    .text:00000000000001e8 .L0 
     /tmp/cclof41u.s:464    .text:00000000000001f0 .L0 
     /tmp/cclof41u.s:465    .text:00000000000001f0 .L0 
     /tmp/cclof41u.s:473    .text:0000000000000208 .L0 
     /tmp/cclof41u.s:474    .text:0000000000000208 .L0 
     /tmp/cclof41u.s:478    .text:0000000000000214 .L0 
     /tmp/cclof41u.s:479    .text:0000000000000214 .L0 
     /tmp/cclof41u.s:482    .text:0000000000000218 .L0 
     /tmp/cclof41u.s:488    .text:0000000000000220 .L0 
  src/../h/Riscv.hpp:152    .text:0000000000000220 .L0 
     /tmp/cclof41u.s:498    .text:0000000000000224 .L0 
     /tmp/cclof41u.s:499    .text:0000000000000228 .L0 
     /tmp/cclof41u.s:501    .text:000000000000022c .L0 
     /tmp/cclof41u.s:502    .text:000000000000022c .L0 
     /tmp/cclof41u.s:504    .text:0000000000000230 .L0 
     /tmp/cclof41u.s:506    .text:0000000000000234 .L0 
     /tmp/cclof41u.s:508    .text:0000000000000238 .L0 
     /tmp/cclof41u.s:510    .text:000000000000023c .L0 
     /tmp/cclof41u.s:516    .text:000000000000023c _ZN5Riscv20handleSupervisorTrapEv
     /tmp/cclof41u.s:519    .text:000000000000023c .L0 
     /tmp/cclof41u.s:6702   .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/cclof41u.s:522    .text:000000000000023c .L0 
     /tmp/cclof41u.s:523    .text:0000000000000240 .L0 
     /tmp/cclof41u.s:532    .text:0000000000000260 .L0 
     /tmp/cclof41u.s:533    .text:0000000000000260 .L0 
     /tmp/cclof41u.s:534    .text:0000000000000260 .L0 
     /tmp/cclof41u.s:535    .text:0000000000000260 .L0 
     /tmp/cclof41u.s:536    .text:0000000000000260 .L0 
     /tmp/cclof41u.s:537    .text:0000000000000260 .L0 
     /tmp/cclof41u.s:538    .text:0000000000000260 .L0 
     /tmp/cclof41u.s:539    .text:0000000000000260 .L0 
     /tmp/cclof41u.s:541    .text:0000000000000264 .L0 
     /tmp/cclof41u.s:543    .text:0000000000000264 .L0 
     /tmp/cclof41u.s:544    .text:0000000000000264 .L0 
       src/Riscv.cpp:102    .text:0000000000000264 .L0 
     /tmp/cclof41u.s:554    .text:0000000000000268 .L0 
     /tmp/cclof41u.s:555    .text:0000000000000268 .L0 
     /tmp/cclof41u.s:556    .text:0000000000000268 .L0 
  src/../h/Riscv.hpp:95     .text:0000000000000268 .L0 
     /tmp/cclof41u.s:564    .text:0000000000000270 .L0 
     /tmp/cclof41u.s:565    .text:0000000000000270 .L0 
     /tmp/cclof41u.s:571    .text:0000000000000274 .L0 
     /tmp/cclof41u.s:579    .text:000000000000028c .L0 
     /tmp/cclof41u.s:583    .text:000000000000028c .L0 
GAS LISTING /tmp/cclof41u.s 			page 51


     /tmp/cclof41u.s:584    .text:000000000000028c .L0 
     /tmp/cclof41u.s:585    .text:000000000000028c .L0 
     /tmp/cclof41u.s:595    .text:0000000000000294 .L0 
     /tmp/cclof41u.s:596    .text:0000000000000294 .L0 
     /tmp/cclof41u.s:597    .text:0000000000000294 .L0 
     /tmp/cclof41u.s:603    .text:00000000000002a8 .L0 
     /tmp/cclof41u.s:604    .text:00000000000002a8 .L0 
     /tmp/cclof41u.s:607    .text:00000000000002b0 .L0 
     /tmp/cclof41u.s:608    .text:00000000000002b0 .L0 
     /tmp/cclof41u.s:613    .text:00000000000002c4 .L0 
     /tmp/cclof41u.s:614    .text:00000000000002c4 .L0 
     /tmp/cclof41u.s:618    .text:00000000000002cc .L0 
     /tmp/cclof41u.s:619    .text:00000000000002cc .L0 
     /tmp/cclof41u.s:626    .text:00000000000002d8 .L0 
     /tmp/cclof41u.s:627    .text:00000000000002d8 .L0 
     /tmp/cclof41u.s:632    .text:00000000000002dc .L0 
     /tmp/cclof41u.s:634    .text:00000000000002e0 .L0 
     /tmp/cclof41u.s:639    .text:00000000000002e4 .L0 
     /tmp/cclof41u.s:640    .text:00000000000002e4 .L0 
     /tmp/cclof41u.s:641    .text:00000000000002e4 .L0 
  src/../h/Riscv.hpp:105    .text:00000000000002e4 .L0 
     /tmp/cclof41u.s:649    .text:00000000000002ec .L0 
     /tmp/cclof41u.s:650    .text:00000000000002ec .L0 
     /tmp/cclof41u.s:657    .text:00000000000002f0 .L0 
     /tmp/cclof41u.s:658    .text:00000000000002f0 .L0 
     /tmp/cclof41u.s:659    .text:00000000000002f0 .L0 
  src/../h/Riscv.hpp:161    .text:00000000000002f0 .L0 
     /tmp/cclof41u.s:667    .text:00000000000002f8 .L0 
     /tmp/cclof41u.s:668    .text:00000000000002f8 .L0 
     /tmp/cclof41u.s:673    .text:00000000000002fc .L0 
     /tmp/cclof41u.s:674    .text:00000000000002fc .L0 
     /tmp/cclof41u.s:677    .text:0000000000000308 .L0 
     /tmp/cclof41u.s:678    .text:0000000000000308 .L0 
     /tmp/cclof41u.s:683    .text:0000000000000310 .L0 
     /tmp/cclof41u.s:684    .text:0000000000000310 .L0 
  src/../h/Riscv.hpp:166    .text:0000000000000310 .L0 
     /tmp/cclof41u.s:696    .text:0000000000000314 .L0 
     /tmp/cclof41u.s:697    .text:0000000000000314 .L0 
  src/../h/Riscv.hpp:110    .text:0000000000000314 .L0 
     /tmp/cclof41u.s:704    .text:0000000000000318 .L0 
     /tmp/cclof41u.s:713    .text:000000000000031c .L0 
     /tmp/cclof41u.s:718    .text:0000000000000324 .L0 
     /tmp/cclof41u.s:719    .text:0000000000000324 .L0 
     /tmp/cclof41u.s:723    .text:000000000000032c .L0 
     /tmp/cclof41u.s:724    .text:0000000000000330 .L0 
     /tmp/cclof41u.s:725    .text:0000000000000330 .L0 
     /tmp/cclof41u.s:727    .text:0000000000000334 .L0 
     /tmp/cclof41u.s:728    .text:0000000000000334 .L0 
     /tmp/cclof41u.s:730    .text:0000000000000338 .L0 
     /tmp/cclof41u.s:732    .text:000000000000033c .L0 
     /tmp/cclof41u.s:734    .text:0000000000000340 .L0 
     /tmp/cclof41u.s:736    .text:0000000000000344 .L0 
     /tmp/cclof41u.s:738    .text:0000000000000348 .L0 
     /tmp/cclof41u.s:740    .text:000000000000034c .L0 
     /tmp/cclof41u.s:742    .text:0000000000000350 .L0 
     /tmp/cclof41u.s:746    .text:0000000000000354 .L0 
     /tmp/cclof41u.s:750    .text:0000000000000354 .L0 
GAS LISTING /tmp/cclof41u.s 			page 52


     /tmp/cclof41u.s:751    .text:0000000000000354 .L0 
     /tmp/cclof41u.s:752    .text:0000000000000354 .L0 
     /tmp/cclof41u.s:753    .text:0000000000000354 .L0 
       src/Riscv.cpp:153    .text:0000000000000354 .L0 
     /tmp/cclof41u.s:763    .text:0000000000000358 .L0 
     /tmp/cclof41u.s:764    .text:0000000000000358 .L0 
     /tmp/cclof41u.s:765    .text:0000000000000358 .L0 
  src/../h/Riscv.hpp:105    .text:0000000000000358 .L0 
     /tmp/cclof41u.s:774    .text:0000000000000360 .L0 
     /tmp/cclof41u.s:775    .text:0000000000000360 .L0 
     /tmp/cclof41u.s:780    .text:0000000000000364 .L0 
     /tmp/cclof41u.s:781    .text:0000000000000364 .L0 
     /tmp/cclof41u.s:785    .text:0000000000000368 .L0 
     /tmp/cclof41u.s:795    .text:0000000000000370 .L0 
     /tmp/cclof41u.s:807    .text:0000000000000378 .L0 
     /tmp/cclof41u.s:821    .text:0000000000000380 .L0 
     /tmp/cclof41u.s:837    .text:0000000000000388 .L0 
     /tmp/cclof41u.s:855    .text:0000000000000390 .L0 
     /tmp/cclof41u.s:875    .text:0000000000000398 .L0 
     /tmp/cclof41u.s:897    .text:00000000000003a0 .L0 
     /tmp/cclof41u.s:921    .text:00000000000003a8 .L0 
     /tmp/cclof41u.s:947    .text:00000000000003b0 .L0 
     /tmp/cclof41u.s:951    .text:00000000000003b8 .L0 
     /tmp/cclof41u.s:952    .text:00000000000003b8 .L0 
       src/Riscv.cpp:271    .text:00000000000003b8 .L0 
     /tmp/cclof41u.s:959    .text:00000000000003bc .L0 
     /tmp/cclof41u.s:961    .text:00000000000003bc .L0 
     /tmp/cclof41u.s:963    .text:00000000000003c0 .L0 
     /tmp/cclof41u.s:971    .text:00000000000003d8 .L0 
       src/Riscv.cpp:275    .text:00000000000003d8 .L0 
     /tmp/cclof41u.s:992    .text:00000000000003e0 .L0 
     /tmp/cclof41u.s:993    .text:00000000000003e0 .L0 
       src/Riscv.cpp:161    .text:00000000000003e0 .L0 
     /tmp/cclof41u.s:1000   .text:00000000000003e4 .L0 
     /tmp/cclof41u.s:1001   .text:00000000000003e4 .L0 
     /tmp/cclof41u.s:1003   .text:00000000000003e4 .L0 
     /tmp/cclof41u.s:1008   .text:00000000000003f0 .L0 
       src/Riscv.cpp:164    .text:00000000000003f0 .L0 
     /tmp/cclof41u.s:1021   .text:00000000000003f4 .L0 
     /tmp/cclof41u.s:1022   .text:00000000000003f4 .L0 
  src/../h/Riscv.hpp:110    .text:00000000000003f4 .L0 
     /tmp/cclof41u.s:1029   .text:00000000000003f8 .L0 
     /tmp/cclof41u.s:1038   .text:00000000000003fc .L0 
     /tmp/cclof41u.s:1039   .text:00000000000003fc .L0 
       src/Riscv.cpp:169    .text:00000000000003fc .L0 
     /tmp/cclof41u.s:1046   .text:0000000000000400 .L0 
     /tmp/cclof41u.s:1048   .text:0000000000000400 .L0 
     /tmp/cclof41u.s:1051   .text:0000000000000408 .L0 
       src/Riscv.cpp:171    .text:0000000000000408 .L0 
     /tmp/cclof41u.s:1064   .text:0000000000000410 .L0 
     /tmp/cclof41u.s:1065   .text:0000000000000410 .L0 
     /tmp/cclof41u.s:1066   .text:0000000000000410 .L0 
     /tmp/cclof41u.s:1067   .text:0000000000000410 .L0 
       src/Riscv.cpp:178    .text:0000000000000410 .L0 
     /tmp/cclof41u.s:1074   .text:0000000000000414 .L0 
       src/Riscv.cpp:179    .text:0000000000000414 .L0 
     /tmp/cclof41u.s:1080   .text:0000000000000418 .L0 
GAS LISTING /tmp/cclof41u.s 			page 53


       src/Riscv.cpp:180    .text:0000000000000418 .L0 
     /tmp/cclof41u.s:1086   .text:000000000000041c .L0 
     /tmp/cclof41u.s:1088   .text:000000000000041c .L0 
     /tmp/cclof41u.s:1102   .text:0000000000000444 .L0 
     /tmp/cclof41u.s:1103   .text:0000000000000444 .L0 
     /tmp/cclof41u.s:1105   .text:0000000000000448 .L0 
     /tmp/cclof41u.s:1107   .text:000000000000044c .L0 
       src/Riscv.cpp:192    .text:000000000000044c .L0 
     /tmp/cclof41u.s:1116   .text:0000000000000454 .L0 
       src/Riscv.cpp:190    .text:0000000000000454 .L0 
     /tmp/cclof41u.s:1131   .text:000000000000045c .L0 
     /tmp/cclof41u.s:1132   .text:000000000000045c .L0 
     /tmp/cclof41u.s:1133   .text:000000000000045c .L0 
  src/../h/Riscv.hpp:161    .text:000000000000045c .L0 
     /tmp/cclof41u.s:1142   .text:0000000000000464 .L0 
     /tmp/cclof41u.s:1143   .text:0000000000000464 .L0 
     /tmp/cclof41u.s:1148   .text:0000000000000468 .L0 
     /tmp/cclof41u.s:1149   .text:0000000000000468 .L0 
     /tmp/cclof41u.s:1153   .text:0000000000000474 .L0 
     /tmp/cclof41u.s:1154   .text:0000000000000474 .L0 
     /tmp/cclof41u.s:1159   .text:000000000000047c .L0 
     /tmp/cclof41u.s:1160   .text:000000000000047c .L0 
  src/../h/Riscv.hpp:166    .text:000000000000047c .L0 
     /tmp/cclof41u.s:1167   .text:0000000000000480 .L0 
     /tmp/cclof41u.s:1176   .text:0000000000000484 .L0 
     /tmp/cclof41u.s:1177   .text:0000000000000484 .L0 
     /tmp/cclof41u.s:1181   .text:0000000000000490 .L0 
     /tmp/cclof41u.s:1185   .text:0000000000000494 .L0 
     /tmp/cclof41u.s:1186   .text:0000000000000494 .L0 
     /tmp/cclof41u.s:1187   .text:0000000000000494 .L0 
  src/../h/Riscv.hpp:161    .text:0000000000000494 .L0 
     /tmp/cclof41u.s:1195   .text:000000000000049c .L0 
     /tmp/cclof41u.s:1196   .text:000000000000049c .L0 
     /tmp/cclof41u.s:1201   .text:00000000000004a0 .L0 
     /tmp/cclof41u.s:1202   .text:00000000000004a0 .L0 
     /tmp/cclof41u.s:1205   .text:00000000000004ac .L0 
     /tmp/cclof41u.s:1206   .text:00000000000004ac .L0 
     /tmp/cclof41u.s:1226   .text:00000000000004b8 .L0 
     /tmp/cclof41u.s:1229   .text:00000000000004b8 .L0 
     /tmp/cclof41u.s:1230   .text:00000000000004b8 .L0 
     /tmp/cclof41u.s:1231   .text:00000000000004b8 .L0 
     /tmp/cclof41u.s:1237   .text:00000000000004c0 .L0 
     /tmp/cclof41u.s:1238   .text:00000000000004c0 .L0 
     /tmp/cclof41u.s:1243   .text:00000000000004c8 .L0 
     /tmp/cclof41u.s:1244   .text:00000000000004c8 .L0 
  src/../h/Riscv.hpp:166    .text:00000000000004c8 .L0 
     /tmp/cclof41u.s:1251   .text:00000000000004cc .L0 
     /tmp/cclof41u.s:1257   .text:00000000000004d0 .L0 
       src/Riscv.cpp:205    .text:00000000000004d0 .L0 
     /tmp/cclof41u.s:1264   .text:00000000000004d4 .L0 
     /tmp/cclof41u.s:1271   .text:00000000000004d8 .L0 
     /tmp/cclof41u.s:1272   .text:00000000000004d8 .L0 
       src/Riscv.cpp:218    .text:00000000000004d8 .L0 
     /tmp/cclof41u.s:1282   .text:00000000000004dc .L0 
     /tmp/cclof41u.s:1283   .text:00000000000004dc .L0 
     /tmp/cclof41u.s:1284   .text:00000000000004dc .L0 
  src/../h/Riscv.hpp:161    .text:00000000000004dc .L0 
GAS LISTING /tmp/cclof41u.s 			page 54


     /tmp/cclof41u.s:1293   .text:00000000000004e4 .L0 
     /tmp/cclof41u.s:1294   .text:00000000000004e4 .L0 
     /tmp/cclof41u.s:1299   .text:00000000000004e8 .L0 
     /tmp/cclof41u.s:1300   .text:00000000000004e8 .L0 
     /tmp/cclof41u.s:1303   .text:00000000000004f4 .L0 
     /tmp/cclof41u.s:1304   .text:00000000000004f4 .L0 
     /tmp/cclof41u.s:1310   .text:0000000000000500 .L0 
     /tmp/cclof41u.s:1311   .text:0000000000000500 .L0 
     /tmp/cclof41u.s:1316   .text:0000000000000504 .L0 
     /tmp/cclof41u.s:1317   .text:0000000000000504 .L0 
     /tmp/cclof41u.s:1320   .text:000000000000050c .L0 
     /tmp/cclof41u.s:1321   .text:000000000000050c .L0 
     /tmp/cclof41u.s:1326   .text:0000000000000514 .L0 
     /tmp/cclof41u.s:1327   .text:0000000000000514 .L0 
  src/../h/Riscv.hpp:166    .text:0000000000000514 .L0 
     /tmp/cclof41u.s:1337   .text:0000000000000518 .L0 
       src/Riscv.cpp:227    .text:0000000000000518 .L0 
     /tmp/cclof41u.s:1350   .text:0000000000000520 .L0 
     /tmp/cclof41u.s:1351   .text:0000000000000520 .L0 
     /tmp/cclof41u.s:1352   .text:0000000000000520 .L0 
       src/Riscv.cpp:233    .text:0000000000000520 .L0 
     /tmp/cclof41u.s:1359   .text:0000000000000524 .L0 
       src/Riscv.cpp:234    .text:0000000000000524 .L0 
     /tmp/cclof41u.s:1365   .text:0000000000000528 .L0 
     /tmp/cclof41u.s:1367   .text:0000000000000528 .L0 
     /tmp/cclof41u.s:1379   .text:0000000000000544 .L0 
     /tmp/cclof41u.s:1380   .text:0000000000000544 .L0 
     /tmp/cclof41u.s:1382   .text:0000000000000548 .L0 
     /tmp/cclof41u.s:1384   .text:000000000000054c .L0 
       src/Riscv.cpp:243    .text:000000000000054c .L0 
     /tmp/cclof41u.s:1393   .text:0000000000000554 .L0 
       src/Riscv.cpp:241    .text:0000000000000554 .L0 
     /tmp/cclof41u.s:1408   .text:000000000000055c .L0 
     /tmp/cclof41u.s:1409   .text:000000000000055c .L0 
     /tmp/cclof41u.s:1410   .text:000000000000055c .L0 
  src/../h/Riscv.hpp:161    .text:000000000000055c .L0 
     /tmp/cclof41u.s:1419   .text:0000000000000564 .L0 
     /tmp/cclof41u.s:1420   .text:0000000000000564 .L0 
     /tmp/cclof41u.s:1425   .text:0000000000000568 .L0 
     /tmp/cclof41u.s:1426   .text:0000000000000568 .L0 
       src/Riscv.cpp:252    .text:0000000000000568 .L0 
     /tmp/cclof41u.s:1434   .text:000000000000056c .L0 
     /tmp/cclof41u.s:1436   .text:000000000000056c .L0 
     /tmp/cclof41u.s:1441   .text:0000000000000574 .L0 
     /tmp/cclof41u.s:1442   .text:0000000000000574 .L0 
  src/../h/Riscv.hpp:166    .text:0000000000000574 .L0 
     /tmp/cclof41u.s:1452   .text:0000000000000578 .L0 
       src/Riscv.cpp:255    .text:0000000000000578 .L0 
     /tmp/cclof41u.s:1465   .text:0000000000000580 .L0 
     /tmp/cclof41u.s:1466   .text:0000000000000580 .L0 
       src/Riscv.cpp:262    .text:0000000000000580 .L0 
     /tmp/cclof41u.s:1473   .text:0000000000000584 .L0 
     /tmp/cclof41u.s:1475   .text:0000000000000584 .L0 
     /tmp/cclof41u.s:1479   .text:000000000000058c .L0 
       src/Riscv.cpp:264    .text:000000000000058c .L0 
     /tmp/cclof41u.s:1499   .text:0000000000000598 .L0 
     /tmp/cclof41u.s:1517   .text:00000000000005b4 .L0 
GAS LISTING /tmp/cclof41u.s 			page 55


     /tmp/cclof41u.s:1535   .text:00000000000005cc .L0 
     /tmp/cclof41u.s:1582   .text:00000000000005cc _ZN5Riscv10kernelMainEv
     /tmp/cclof41u.s:1585   .text:00000000000005cc .L0 
     /tmp/cclof41u.s:1588   .text:00000000000005cc .L0 
     /tmp/cclof41u.s:1589   .text:00000000000005d0 .L0 
     /tmp/cclof41u.s:1594   .text:00000000000005e0 .L0 
     /tmp/cclof41u.s:1595   .text:00000000000005e0 .L0 
     /tmp/cclof41u.s:1596   .text:00000000000005e0 .L0 
     /tmp/cclof41u.s:1597   .text:00000000000005e0 .L0 
     /tmp/cclof41u.s:1599   .text:00000000000005e4 .L0 
     /tmp/cclof41u.s:1602   .text:00000000000005e4 .L0 
     /tmp/cclof41u.s:1603   .text:00000000000005e4 .L0 
     /tmp/cclof41u.s:1606   .text:00000000000005ec .L0 
     /tmp/cclof41u.s:1607   .text:00000000000005ec .L0 
     /tmp/cclof41u.s:1612   .text:00000000000005fc .L0 
     /tmp/cclof41u.s:1627   .text:0000000000000628 .L0 
     /tmp/cclof41u.s:1630   .text:0000000000000628 .L0 
     /tmp/cclof41u.s:1631   .text:0000000000000628 .L0 
     /tmp/cclof41u.s:1632   .text:0000000000000628 .L0 
     /tmp/cclof41u.s:1637   .text:000000000000062c .L0 
     /tmp/cclof41u.s:1641   .text:0000000000000634 .L0 
     /tmp/cclof41u.s:1642   .text:0000000000000634 .L0 
     /tmp/cclof41u.s:1645   .text:000000000000063c .L0 
     /tmp/cclof41u.s:1648   .text:0000000000000640 .L0 
     /tmp/cclof41u.s:1649   .text:0000000000000640 .L0 
     /tmp/cclof41u.s:1652   .text:0000000000000648 .L0 
     /tmp/cclof41u.s:1653   .text:0000000000000648 .L0 
     /tmp/cclof41u.s:1658   .text:0000000000000658 .L0 
     /tmp/cclof41u.s:1659   .text:000000000000065c .L0 
     /tmp/cclof41u.s:1660   .text:000000000000065c .L0 
     /tmp/cclof41u.s:1662   .text:0000000000000660 .L0 
     /tmp/cclof41u.s:1663   .text:0000000000000660 .L0 
     /tmp/cclof41u.s:1665   .text:0000000000000664 .L0 
     /tmp/cclof41u.s:1667   .text:0000000000000668 .L0 
     /tmp/cclof41u.s:1669   .text:000000000000066c .L0 
     /tmp/cclof41u.s:1672   .text:0000000000000670 .L0 
     /tmp/cclof41u.s:1675   .text:0000000000000674 .L0 
     /tmp/cclof41u.s:1683   .text:000000000000068c .L0 
     /tmp/cclof41u.s:1711   .rodata:0000000000000000 .LANCHOR0
     /tmp/cclof41u.s:1714   .rodata:0000000000000000 _ZZN5Riscv12printIntegerEmE6digits
     /tmp/cclof41u.s:1718   .bss:0000000000000000 .LANCHOR1
     /tmp/cclof41u.s:1721   .bss:0000000000000000 _ZZN5Riscv20handleSupervisorTrapEvE5total
     /tmp/cclof41u.s:1733   .text:000000000000068c .L0 
     /tmp/cclof41u.s:78     .text:0000000000000050 .L0 
     /tmp/cclof41u.s:439    .text:00000000000001b8 .L0 
     /tmp/cclof41u.s:597    .text:0000000000000294 .L0 
     /tmp/cclof41u.s:608    .text:00000000000002b0 .L0 
     /tmp/cclof41u.s:619    .text:00000000000002cc .L0 
     /tmp/cclof41u.s:674    .text:00000000000002fc .L0 
     /tmp/cclof41u.s:1149   .text:0000000000000468 .L0 
     /tmp/cclof41u.s:1177   .text:0000000000000484 .L0 
     /tmp/cclof41u.s:1202   .text:00000000000004a0 .L0 
     /tmp/cclof41u.s:1206   .text:00000000000004ac .L0 
     /tmp/cclof41u.s:1300   .text:00000000000004e8 .L0 
     /tmp/cclof41u.s:1304   .text:00000000000004f4 .L0 
     /tmp/cclof41u.s:1620   .text:0000000000000618 .L0 
     /tmp/cclof41u.s:1576   .rodata.str1.8:0000000000000000 .LC0
GAS LISTING /tmp/cclof41u.s 			page 56


     /tmp/cclof41u.s:1653   .text:0000000000000648 .L0 
     /tmp/cclof41u.s:325    .text:000000000000014c .L16
     /tmp/cclof41u.s:306    .text:0000000000000134 .L17
     /tmp/cclof41u.s:429    .text:00000000000001a8 .L20
     /tmp/cclof41u.s:471    .text:0000000000000208 .L21
     /tmp/cclof41u.s:457    .text:00000000000001e8 .L22
     /tmp/cclof41u.s:706    .text:000000000000031c .L48
     /tmp/cclof41u.s:715    .text:0000000000000324 .L27
     /tmp/cclof41u.s:721    .text:000000000000032c .L24
     /tmp/cclof41u.s:745    .text:0000000000000354 .L49
     /tmp/cclof41u.s:980    .text:00000000000003e0 .L50
     /tmp/cclof41u.s:1031   .text:00000000000003fc .L51
     /tmp/cclof41u.s:1060   .text:0000000000000410 .L52
     /tmp/cclof41u.s:1124   .text:000000000000045c .L53
     /tmp/cclof41u.s:1169   .text:0000000000000484 .L54
     /tmp/cclof41u.s:1266   .text:00000000000004d8 .L55
     /tmp/cclof41u.s:1346   .text:0000000000000520 .L56
     /tmp/cclof41u.s:1401   .text:000000000000055c .L57
     /tmp/cclof41u.s:1461   .text:0000000000000580 .L58
     /tmp/cclof41u.s:1015   .text:00000000000003f4 .L30
     /tmp/cclof41u.s:969    .text:00000000000003d8 .L42
     /tmp/cclof41u.s:1114   .text:0000000000000454 .L59
     /tmp/cclof41u.s:1253   .text:00000000000004d0 .L60
     /tmp/cclof41u.s:1391   .text:0000000000000554 .L61
     /tmp/cclof41u.s:1646   .text:0000000000000640 .L63
     /tmp/cclof41u.s:1625   .text:0000000000000628 .L64
     /tmp/cclof41u.s:602    .text:00000000000002a8 .LEHB0
     /tmp/cclof41u.s:517    .text:000000000000023c .LFB33
     /tmp/cclof41u.s:1091   .text:0000000000000428 .LEHE0
     /tmp/cclof41u.s:1097   .text:000000000000043c .LEHB1
     /tmp/cclof41u.s:1100   .text:0000000000000444 .LEHE1
     /tmp/cclof41u.s:1488   .text:0000000000000594 .L45
     /tmp/cclof41u.s:1152   .text:0000000000000474 .LEHB2
     /tmp/cclof41u.s:1370   .text:0000000000000534 .LEHE2
     /tmp/cclof41u.s:1374   .text:000000000000053c .LEHB3
     /tmp/cclof41u.s:1377   .text:0000000000000544 .LEHE3
     /tmp/cclof41u.s:1507   .text:00000000000005b0 .L46
     /tmp/cclof41u.s:1433   .text:000000000000056c .LEHB4
     /tmp/cclof41u.s:1477   .text:000000000000058c .LEHE4
     /tmp/cclof41u.s:1503   .text:00000000000005a8 .LEHB5
     /tmp/cclof41u.s:1506   .text:00000000000005b0 .LEHE5
     /tmp/cclof41u.s:1521   .text:00000000000005c4 .LEHB6
     /tmp/cclof41u.s:1524   .text:00000000000005cc .LEHE6
     /tmp/cclof41u.s:1601   .text:00000000000005e4 .LEHB7
     /tmp/cclof41u.s:1583   .text:00000000000005cc .LFB34
     /tmp/cclof41u.s:1615   .text:0000000000000608 .LEHE7
     /tmp/cclof41u.s:1621   .text:0000000000000620 .LEHB8
     /tmp/cclof41u.s:1624   .text:0000000000000628 .LEHE8
     /tmp/cclof41u.s:1671   .text:0000000000000670 .L66
     /tmp/cclof41u.s:1640   .text:0000000000000634 .LEHB9
     /tmp/cclof41u.s:1656   .text:0000000000000658 .LEHE9
     /tmp/cclof41u.s:1679   .text:0000000000000684 .LEHB10
     /tmp/cclof41u.s:1682   .text:000000000000068c .LEHE10
     /tmp/cclof41u.s:4382   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cclof41u.s:6264   .debug_str:00000000000001e9 .LASF235
     /tmp/cclof41u.s:6292   .debug_str:000000000000036e .LASF236
     /tmp/cclof41u.s:6606   .debug_str:0000000000000bf9 .LASF237
GAS LISTING /tmp/cclof41u.s 			page 57


     /tmp/cclof41u.s:5      .text:0000000000000000 .Ltext0
     /tmp/cclof41u.s:1724   .text:000000000000068c .Letext0
     /tmp/cclof41u.s:6206   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cclof41u.s:6374   .debug_str:00000000000005cd .LASF0
     /tmp/cclof41u.s:6518   .debug_str:00000000000009be .LASF3
     /tmp/cclof41u.s:6408   .debug_str:00000000000006c2 .LASF1
     /tmp/cclof41u.s:6528   .debug_str:00000000000009e3 .LASF2
     /tmp/cclof41u.s:6544   .debug_str:0000000000000a67 .LASF4
     /tmp/cclof41u.s:6390   .debug_str:0000000000000638 .LASF5
     /tmp/cclof41u.s:6224   .debug_str:000000000000006e .LASF6
     /tmp/cclof41u.s:6498   .debug_str:000000000000092e .LASF7
     /tmp/cclof41u.s:6486   .debug_str:00000000000008e3 .LASF8
     /tmp/cclof41u.s:6398   .debug_str:0000000000000689 .LASF9
     /tmp/cclof41u.s:6350   .debug_str:000000000000050d .LASF10
     /tmp/cclof41u.s:6358   .debug_str:000000000000055d .LASF11
     /tmp/cclof41u.s:6280   .debug_str:000000000000032a .LASF12
     /tmp/cclof41u.s:6340   .debug_str:00000000000004d7 .LASF13
     /tmp/cclof41u.s:6294   .debug_str:000000000000037c .LASF14
     /tmp/cclof41u.s:6278   .debug_str:000000000000031a .LASF15
     /tmp/cclof41u.s:6580   .debug_str:0000000000000b70 .LASF16
     /tmp/cclof41u.s:6326   .debug_str:0000000000000444 .LASF17
     /tmp/cclof41u.s:6568   .debug_str:0000000000000b13 .LASF18
     /tmp/cclof41u.s:6638   .debug_str:0000000000000ce5 .LASF97
     /tmp/cclof41u.s:6512   .debug_str:0000000000000994 .LASF22
     /tmp/cclof41u.s:6414   .debug_str:00000000000006e4 .LASF19
     /tmp/cclof41u.s:6332   .debug_str:000000000000048e .LASF20
     /tmp/cclof41u.s:6658   .debug_str:0000000000000d84 .LASF21
     /tmp/cclof41u.s:6624   .debug_str:0000000000000c6f .LASF23
     /tmp/cclof41u.s:6334   .debug_str:0000000000000497 .LASF24
     /tmp/cclof41u.s:6596   .debug_str:0000000000000bb9 .LASF25
     /tmp/cclof41u.s:6306   .debug_str:00000000000003ca .LASF26
     /tmp/cclof41u.s:6368   .debug_str:00000000000005a4 .LASF27
     /tmp/cclof41u.s:6570   .debug_str:0000000000000b29 .LASF29
     /tmp/cclof41u.s:6454   .debug_str:0000000000000819 .LASF28
     /tmp/cclof41u.s:6436   .debug_str:0000000000000797 .LASF30
     /tmp/cclof41u.s:6324   .debug_str:000000000000043a .LASF31
     /tmp/cclof41u.s:6218   .debug_str:0000000000000048 .LASF32
     /tmp/cclof41u.s:6438   .debug_str:00000000000007af .LASF37
     /tmp/cclof41u.s:6632   .debug_str:0000000000000cb8 .LASF39
     /tmp/cclof41u.s:6274   .debug_str:00000000000002ec .LASF33
     /tmp/cclof41u.s:6418   .debug_str:0000000000000708 .LASF34
     /tmp/cclof41u.s:6384   .debug_str:0000000000000611 .LASF35
     /tmp/cclof41u.s:6298   .debug_str:0000000000000393 .LASF36
     /tmp/cclof41u.s:6666   .debug_str:0000000000000db8 .LASF38
     /tmp/cclof41u.s:6236   .debug_str:00000000000000ec .LASF40
     /tmp/cclof41u.s:6496   .debug_str:0000000000000921 .LASF41
     /tmp/cclof41u.s:6242   .debug_str:0000000000000119 .LASF42
     /tmp/cclof41u.s:6554   .debug_str:0000000000000ab3 .LASF43
     /tmp/cclof41u.s:6330   .debug_str:0000000000000473 .LASF44
     /tmp/cclof41u.s:6378   .debug_str:00000000000005ea .LASF45
     /tmp/cclof41u.s:6650   .debug_str:0000000000000d3c .LASF46
     /tmp/cclof41u.s:6620   .debug_str:0000000000000c61 .LASF49
     /tmp/cclof41u.s:6612   .debug_str:0000000000000c2b .LASF51
     /tmp/cclof41u.s:6524   .debug_str:00000000000009cf .LASF47
     /tmp/cclof41u.s:6472   .debug_str:0000000000000885 .LASF48
     /tmp/cclof41u.s:6506   .debug_str:0000000000000966 .LASF50
     /tmp/cclof41u.s:6508   .debug_str:000000000000096d .LASF52
GAS LISTING /tmp/cclof41u.s 			page 58


     /tmp/cclof41u.s:6468   .debug_str:000000000000086a .LASF53
     /tmp/cclof41u.s:6400   .debug_str:000000000000069c .LASF54
     /tmp/cclof41u.s:6652   .debug_str:0000000000000d56 .LASF55
     /tmp/cclof41u.s:6602   .debug_str:0000000000000bdb .LASF56
     /tmp/cclof41u.s:6462   .debug_str:0000000000000854 .LASF57
     /tmp/cclof41u.s:6470   .debug_str:0000000000000871 .LASF58
     /tmp/cclof41u.s:6448   .debug_str:00000000000007fa .LASF59
     /tmp/cclof41u.s:6510   .debug_str:0000000000000980 .LASF60
     /tmp/cclof41u.s:6694   .debug_str:0000000000000e80 .LASF61
     /tmp/cclof41u.s:6382   .debug_str:00000000000005fd .LASF62
     /tmp/cclof41u.s:6576   .debug_str:0000000000000b62 .LASF63
     /tmp/cclof41u.s:6548   .debug_str:0000000000000a91 .LASF64
     /tmp/cclof41u.s:6550   .debug_str:0000000000000aa4 .LASF65
     /tmp/cclof41u.s:6286   .debug_str:0000000000000347 .LASF66
     /tmp/cclof41u.s:6318   .debug_str:000000000000040f .LASF67
     /tmp/cclof41u.s:6228   .debug_str:0000000000000080 .LASF68
     /tmp/cclof41u.s:6380   .debug_str:00000000000005f7 .LASF69
     /tmp/cclof41u.s:6310   .debug_str:00000000000003e9 .LASF70
     /tmp/cclof41u.s:6226   .debug_str:0000000000000075 .LASF71
     /tmp/cclof41u.s:6534   .debug_str:0000000000000a09 .LASF72
     /tmp/cclof41u.s:6526   .debug_str:00000000000009d8 .LASF73
     /tmp/cclof41u.s:6682   .debug_str:0000000000000e21 .LASF74
     /tmp/cclof41u.s:6640   .debug_str:0000000000000ceb .LASF75
     /tmp/cclof41u.s:6664   .debug_str:0000000000000da2 .LASF76
     /tmp/cclof41u.s:6634   .debug_str:0000000000000cd6 .LASF77
     /tmp/cclof41u.s:6440   .debug_str:00000000000007bf .LASF78
     /tmp/cclof41u.s:6362   .debug_str:000000000000057e .LASF79
     /tmp/cclof41u.s:6370   .debug_str:00000000000005af .LASF80
     /tmp/cclof41u.s:6616   .debug_str:0000000000000c4c .LASF81
     /tmp/cclof41u.s:6356   .debug_str:0000000000000541 .LASF82
     /tmp/cclof41u.s:6492   .debug_str:0000000000000903 .LASF83
     /tmp/cclof41u.s:6396   .debug_str:0000000000000667 .LASF84
     /tmp/cclof41u.s:6654   .debug_str:0000000000000d5e .LASF85
     /tmp/cclof41u.s:6646   .debug_str:0000000000000d08 .LASF86
     /tmp/cclof41u.s:6520   .debug_str:00000000000009c3 .LASF87
     /tmp/cclof41u.s:6222   .debug_str:0000000000000066 .LASF88
     /tmp/cclof41u.s:6256   .debug_str:00000000000001b0 .LASF89
     /tmp/cclof41u.s:6614   .debug_str:0000000000000c40 .LASF90
     /tmp/cclof41u.s:6258   .debug_str:00000000000001bf .LASF91
     /tmp/cclof41u.s:6450   .debug_str:0000000000000802 .LASF92
     /tmp/cclof41u.s:6360   .debug_str:000000000000056b .LASF93
     /tmp/cclof41u.s:6320   .debug_str:0000000000000415 .LASF94
     /tmp/cclof41u.s:6272   .debug_str:00000000000002d8 .LASF95
     /tmp/cclof41u.s:6590   .debug_str:0000000000000ba6 .LASF96
     /tmp/cclof41u.s:6592   .debug_str:0000000000000bab .LASF98
     /tmp/cclof41u.s:6270   .debug_str:00000000000002d2 .LASF99
     /tmp/cclof41u.s:6560   .debug_str:0000000000000adb .LASF100
     /tmp/cclof41u.s:6288   .debug_str:000000000000035a .LASF101
     /tmp/cclof41u.s:6260   .debug_str:00000000000001d2 .LASF102
     /tmp/cclof41u.s:6488   .debug_str:00000000000008f6 .LASF103
     /tmp/cclof41u.s:6404   .debug_str:00000000000006b4 .LASF104
     /tmp/cclof41u.s:6588   .debug_str:0000000000000b9e .LASF149
     /tmp/cclof41u.s:6364   .debug_str:0000000000000589 .LASF105
     /tmp/cclof41u.s:6458   .debug_str:0000000000000833 .LASF238
     /tmp/cclof41u.s:6476   .debug_str:00000000000008a1 .LASF239
     /tmp/cclof41u.s:6406   .debug_str:00000000000006bd .LASF106
     /tmp/cclof41u.s:6678   .debug_str:0000000000000e07 .LASF108
GAS LISTING /tmp/cclof41u.s 			page 59


     /tmp/cclof41u.s:6674   .debug_str:0000000000000deb .LASF107
     /tmp/cclof41u.s:6600   .debug_str:0000000000000bcb .LASF109
     /tmp/cclof41u.s:6312   .debug_str:00000000000003fb .LASF110
     /tmp/cclof41u.s:6234   .debug_str:00000000000000d9 .LASF111
     /tmp/cclof41u.s:6412   .debug_str:00000000000006de .LASF112
     /tmp/cclof41u.s:6478   .debug_str:00000000000008a6 .LASF113
     /tmp/cclof41u.s:6594   .debug_str:0000000000000bb1 .LASF114
     /tmp/cclof41u.s:6642   .debug_str:0000000000000cf5 .LASF115
     /tmp/cclof41u.s:6556   .debug_str:0000000000000ac1 .LASF116
     /tmp/cclof41u.s:6434   .debug_str:000000000000078a .LASF121
     /tmp/cclof41u.s:6420   .debug_str:0000000000000726 .LASF123
     /tmp/cclof41u.s:6686   .debug_str:0000000000000e49 .LASF117
     /tmp/cclof41u.s:6344   .debug_str:00000000000004ee .LASF118
     /tmp/cclof41u.s:6376   .debug_str:00000000000005da .LASF119
     /tmp/cclof41u.s:6386   .debug_str:0000000000000623 .LASF120
     /tmp/cclof41u.s:6558   .debug_str:0000000000000ad2 .LASF122
     /tmp/cclof41u.s:6308   .debug_str:00000000000003d6 .LASF124
     /tmp/cclof41u.s:6538   .debug_str:0000000000000a2d .LASF125
     /tmp/cclof41u.s:6572   .debug_str:0000000000000b41 .LASF126
     /tmp/cclof41u.s:6456   .debug_str:0000000000000824 .LASF127
     /tmp/cclof41u.s:6214   .debug_str:0000000000000029 .LASF128
     /tmp/cclof41u.s:6662   .debug_str:0000000000000d93 .LASF129
     /tmp/cclof41u.s:6482   .debug_str:00000000000008c2 .LASF130
     /tmp/cclof41u.s:6566   .debug_str:0000000000000b05 .LASF131
     /tmp/cclof41u.s:6504   .debug_str:000000000000095a .LASF132
     /tmp/cclof41u.s:6210   .debug_str:000000000000000d .LASF133
     /tmp/cclof41u.s:6668   .debug_str:0000000000000dc4 .LASF134
     /tmp/cclof41u.s:6392   .debug_str:000000000000064a .LASF137
     /tmp/cclof41u.s:6564   .debug_str:0000000000000afa .LASF135
     /tmp/cclof41u.s:6676   .debug_str:0000000000000df1 .LASF136
     /tmp/cclof41u.s:6552   .debug_str:0000000000000aab .LASF138
     /tmp/cclof41u.s:6604   .debug_str:0000000000000bef .LASF139
     /tmp/cclof41u.s:6480   .debug_str:00000000000008b6 .LASF140
     /tmp/cclof41u.s:6302   .debug_str:00000000000003b7 .LASF141
     /tmp/cclof41u.s:6248   .debug_str:0000000000000160 .LASF143
     /tmp/cclof41u.s:6246   .debug_str:000000000000014b .LASF142
     /tmp/cclof41u.s:6268   .debug_str:00000000000002a6 .LASF144
     /tmp/cclof41u.s:6690   .debug_str:0000000000000e61 .LASF240
     /tmp/cclof41u.s:6266   .debug_str:0000000000000295 .LASF241
     /tmp/cclof41u.s:6216   .debug_str:0000000000000043 .LASF145
     /tmp/cclof41u.s:6622   .debug_str:0000000000000c6a .LASF146
     /tmp/cclof41u.s:6424   .debug_str:0000000000000758 .LASF147
     /tmp/cclof41u.s:6316   .debug_str:0000000000000409 .LASF148
     /tmp/cclof41u.s:6610   .debug_str:0000000000000c23 .LASF150
     /tmp/cclof41u.s:6254   .debug_str:00000000000001a6 .LASF151
     /tmp/cclof41u.s:6430   .debug_str:0000000000000771 .LASF152
     /tmp/cclof41u.s:6516   .debug_str:00000000000009b3 .LASF153
     /tmp/cclof41u.s:6354   .debug_str:000000000000052d .LASF154
     /tmp/cclof41u.s:6532   .debug_str:00000000000009fd .LASF155
     /tmp/cclof41u.s:6514   .debug_str:000000000000099f .LASF156
     /tmp/cclof41u.s:6314   .debug_str:0000000000000404 .LASF157
     /tmp/cclof41u.s:6562   .debug_str:0000000000000ae3 .LASF158
     /tmp/cclof41u.s:6584   .debug_str:0000000000000b8f .LASF159
     /tmp/cclof41u.s:6328   .debug_str:000000000000045a .LASF160
     /tmp/cclof41u.s:6212   .debug_str:000000000000001d .LASF161
     /tmp/cclof41u.s:6536   .debug_str:0000000000000a21 .LASF162
     /tmp/cclof41u.s:6432   .debug_str:0000000000000776 .LASF163
GAS LISTING /tmp/cclof41u.s 			page 60


     /tmp/cclof41u.s:6366   .debug_str:000000000000058f .LASF164
     /tmp/cclof41u.s:6284   .debug_str:000000000000033e .LASF165
     /tmp/cclof41u.s:6290   .debug_str:0000000000000364 .LASF166
     /tmp/cclof41u.s:6460   .debug_str:000000000000084b .LASF167
     /tmp/cclof41u.s:6542   .debug_str:0000000000000a5c .LASF168
     /tmp/cclof41u.s:6410   .debug_str:00000000000006d5 .LASF169
     /tmp/cclof41u.s:6372   .debug_str:00000000000005c7 .LASF170
     /tmp/cclof41u.s:6692   .debug_str:0000000000000e68 .LASF171
     /tmp/cclof41u.s:6220   .debug_str:000000000000005e .LASF172
     /tmp/cclof41u.s:6422   .debug_str:000000000000073e .LASF173
     /tmp/cclof41u.s:6684   .debug_str:0000000000000e39 .LASF174
     /tmp/cclof41u.s:6546   .debug_str:0000000000000a6e .LASF175
     /tmp/cclof41u.s:6582   .debug_str:0000000000000b7c .LASF176
     /tmp/cclof41u.s:6540   .debug_str:0000000000000a36 .LASF177
     /tmp/cclof41u.s:6208   .debug_str:0000000000000000 .LASF178
     /tmp/cclof41u.s:6232   .debug_str:00000000000000b5 .LASF179
     /tmp/cclof41u.s:6656   .debug_str:0000000000000d77 .LASF180
     /tmp/cclof41u.s:6446   .debug_str:00000000000007ea .LASF181
     /tmp/cclof41u.s:6322   .debug_str:0000000000000428 .LASF182
     /tmp/cclof41u.s:6336   .debug_str:00000000000004a3 .LASF183
     /tmp/cclof41u.s:6262   .debug_str:00000000000001db .LASF184
     /tmp/cclof41u.s:6230   .debug_str:0000000000000092 .LASF185
     /tmp/cclof41u.s:6466   .debug_str:0000000000000861 .LASF186
     /tmp/cclof41u.s:6300   .debug_str:00000000000003b2 .LASF187
     /tmp/cclof41u.s:6282   .debug_str:0000000000000339 .LASF188
     /tmp/cclof41u.s:6402   .debug_str:00000000000006af .LASF189
     /tmp/cclof41u.s:6574   .debug_str:0000000000000b5d .LASF190
     /tmp/cclof41u.s:6464   .debug_str:000000000000085c .LASF191
     /tmp/cclof41u.s:6680   .debug_str:0000000000000e13 .LASF192
     /tmp/cclof41u.s:6586   .debug_str:0000000000000b96 .LASF193
     /tmp/cclof41u.s:6502   .debug_str:0000000000000943 .LASF194
     /tmp/cclof41u.s:6388   .debug_str:0000000000000630 .LASF195
     /tmp/cclof41u.s:6250   .debug_str:0000000000000188 .LASF196
     /tmp/cclof41u.s:6338   .debug_str:00000000000004ca .LASF197
     /tmp/cclof41u.s:6628   .debug_str:0000000000000c8e .LASF198
     /tmp/cclof41u.s:6630   .debug_str:0000000000000cab .LASF199
     /tmp/cclof41u.s:6276   .debug_str:00000000000002fd .LASF200
     /tmp/cclof41u.s:6348   .debug_str:0000000000000500 .LASF201
     /tmp/cclof41u.s:6670   .debug_str:0000000000000dcf .LASF202
     /tmp/cclof41u.s:6416   .debug_str:00000000000006ed .LASF203
     /tmp/cclof41u.s:10     .text:0000000000000000 .LFB35
     /tmp/cclof41u.s:36     .text:0000000000000028 .LFE35
     /tmp/cclof41u.s:25     .text:0000000000000018 .LVL0
     /tmp/cclof41u.s:1684   .text:000000000000068c .LFE34
     /tmp/cclof41u.s:6444   .debug_str:00000000000007e2 .LASF223
     /tmp/cclof41u.s:1628   .text:0000000000000628 .LBB254
     /tmp/cclof41u.s:1635   .text:000000000000062c .LBE254
     /tmp/cclof41u.s:5608   .debug_loc:0000000000000000 .LLST52
     /tmp/cclof41u.s:1604   .text:00000000000005ec .LVL112
     /tmp/cclof41u.s:1609   .text:00000000000005f8 .LVL113
     /tmp/cclof41u.s:1614   .text:0000000000000608 .LVL114
     /tmp/cclof41u.s:1623   .text:0000000000000628 .LVL115
     /tmp/cclof41u.s:1643   .text:000000000000063c .LVL117
     /tmp/cclof41u.s:1650   .text:0000000000000648 .LVL118
     /tmp/cclof41u.s:1655   .text:0000000000000658 .LVL119
     /tmp/cclof41u.s:1677   .text:0000000000000680 .LVL120
     /tmp/cclof41u.s:1681   .text:000000000000068c .LVL121
GAS LISTING /tmp/cclof41u.s 			page 61


     /tmp/cclof41u.s:1536   .text:00000000000005cc .LFE33
     /tmp/cclof41u.s:5615   .debug_loc:0000000000000023 .LLST12
     /tmp/cclof41u.s:6296   .debug_str:000000000000038c .LASF204
     /tmp/cclof41u.s:5658   .debug_loc:00000000000000f1 .LLST13
     /tmp/cclof41u.s:6160   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/cclof41u.s:6618   .debug_str:0000000000000c5b .LASF205
     /tmp/cclof41u.s:6428   .debug_str:0000000000000767 .LASF206
     /tmp/cclof41u.s:5673   .debug_loc:000000000000013a .LLST14
     /tmp/cclof41u.s:6598   .debug_str:0000000000000bc6 .LASF207
     /tmp/cclof41u.s:5716   .debug_loc:0000000000000208 .LLST15
     /tmp/cclof41u.s:635    .text:00000000000002e4 .LBB113
     /tmp/cclof41u.s:709    .text:000000000000031c .LBE113
     /tmp/cclof41u.s:5731   .debug_loc:0000000000000251 .LLST18
     /tmp/cclof41u.s:6644   .debug_str:0000000000000d00 .LASF208
     /tmp/cclof41u.s:5738   .debug_loc:0000000000000274 .LLST19
     /tmp/cclof41u.s:637    .text:00000000000002e4 .LBB114
     /tmp/cclof41u.s:653    .text:00000000000002f0 .LBE114
     /tmp/cclof41u.s:655    .text:00000000000002f0 .LBB116
     /tmp/cclof41u.s:671    .text:00000000000002fc .LBE116
     /tmp/cclof41u.s:681    .text:0000000000000310 .LBB118
     /tmp/cclof41u.s:692    .text:0000000000000314 .LBE118
     /tmp/cclof41u.s:5745   .debug_loc:0000000000000297 .LLST20
     /tmp/cclof41u.s:694    .text:0000000000000314 .LBB120
     /tmp/cclof41u.s:708    .text:000000000000031c .LBE120
     /tmp/cclof41u.s:5752   .debug_loc:00000000000002ba .LLST21
     /tmp/cclof41u.s:679    .text:0000000000000310 .LVL44
     /tmp/cclof41u.s:990    .text:00000000000003e0 .LBB216
     /tmp/cclof41u.s:1016   .text:00000000000003f4 .LBE216
     /tmp/cclof41u.s:6452   .debug_str:0000000000000814 .LASF209
     /tmp/cclof41u.s:5759   .debug_loc:00000000000002dd .LLST49
     /tmp/cclof41u.s:6648   .debug_str:0000000000000d2e .LASF210
     /tmp/cclof41u.s:5774   .debug_loc:0000000000000317 .LLST50
     /tmp/cclof41u.s:1006   .text:00000000000003f0 .LVL59
     /tmp/cclof41u.s:1036   .text:00000000000003fc .LBB205
     /tmp/cclof41u.s:1057   .text:000000000000040c .LBE205
     /tmp/cclof41u.s:6522   .debug_str:00000000000009ca .LASF211
     /tmp/cclof41u.s:5781   .debug_loc:000000000000033a .LLST47
     /tmp/cclof41u.s:6252   .debug_str:000000000000019f .LASF212
     /tmp/cclof41u.s:5793   .debug_loc:0000000000000371 .LLST48
     /tmp/cclof41u.s:1049   .text:0000000000000408 .LVL63
     /tmp/cclof41u.s:6500   .debug_str:0000000000000935 .LASF213
     /tmp/cclof41u.s:5800   .debug_loc:0000000000000394 .LLST43
     /tmp/cclof41u.s:5811   .debug_loc:00000000000003ca .LLST44
     /tmp/cclof41u.s:6240   .debug_str:000000000000010c .LASF214
     /tmp/cclof41u.s:5822   .debug_loc:0000000000000400 .LLST45
     /tmp/cclof41u.s:6474   .debug_str:000000000000089a .LASF215
     /tmp/cclof41u.s:5833   .debug_loc:0000000000000436 .LLST46
     /tmp/cclof41u.s:1090   .text:0000000000000428 .LVL68
     /tmp/cclof41u.s:1099   .text:0000000000000444 .LVL69
     /tmp/cclof41u.s:1501   .text:00000000000005a4 .LVL107
     /tmp/cclof41u.s:1127   .text:000000000000045c .LBB179
     /tmp/cclof41u.s:1172   .text:0000000000000484 .LBE179
     /tmp/cclof41u.s:5840   .debug_loc:0000000000000459 .LLST41
     /tmp/cclof41u.s:1129   .text:000000000000045c .LBB180
     /tmp/cclof41u.s:1146   .text:0000000000000468 .LBE180
     /tmp/cclof41u.s:1157   .text:000000000000047c .LBB182
     /tmp/cclof41u.s:1171   .text:0000000000000484 .LBE182
GAS LISTING /tmp/cclof41u.s 			page 62


     /tmp/cclof41u.s:5847   .debug_loc:000000000000047c .LLST42
     /tmp/cclof41u.s:1155   .text:000000000000047c .LVL73
     /tmp/cclof41u.s:5854   .debug_loc:000000000000049f .LLST37
     /tmp/cclof41u.s:1183   .text:0000000000000494 .LBB165
     /tmp/cclof41u.s:1199   .text:00000000000004a0 .LBE165
     /tmp/cclof41u.s:1227   .text:00000000000004b8 .LBB167
     /tmp/cclof41u.s:1235   .text:00000000000004c0 .LBE167
     /tmp/cclof41u.s:5861   .debug_loc:00000000000004c2 .LLST38
     /tmp/cclof41u.s:5869   .debug_loc:00000000000004e6 .LLST39
     /tmp/cclof41u.s:1241   .text:00000000000004c8 .LBB169
     /tmp/cclof41u.s:1255   .text:00000000000004d0 .LBE169
     /tmp/cclof41u.s:5876   .debug_loc:0000000000000509 .LLST40
     /tmp/cclof41u.s:1239   .text:00000000000004c8 .LVL79
     /tmp/cclof41u.s:1269   .text:00000000000004d8 .LBB151
     /tmp/cclof41u.s:1343   .text:000000000000051c .LBE151
     /tmp/cclof41u.s:6490   .debug_str:00000000000008fe .LASF216
     /tmp/cclof41u.s:5883   .debug_loc:000000000000052c .LLST32
     /tmp/cclof41u.s:5890   .debug_loc:000000000000054f .LLST33
     /tmp/cclof41u.s:1280   .text:00000000000004dc .LBB152
     /tmp/cclof41u.s:1297   .text:00000000000004e8 .LBE152
     /tmp/cclof41u.s:1307   .text:0000000000000500 .LBB154
     /tmp/cclof41u.s:1314   .text:0000000000000504 .LBE154
     /tmp/cclof41u.s:5897   .debug_loc:0000000000000572 .LLST34
     /tmp/cclof41u.s:5904   .debug_loc:0000000000000595 .LLST35
     /tmp/cclof41u.s:1324   .text:0000000000000514 .LBB156
     /tmp/cclof41u.s:1335   .text:0000000000000518 .LBE156
     /tmp/cclof41u.s:5911   .debug_loc:00000000000005b8 .LLST36
     /tmp/cclof41u.s:1318   .text:000000000000050c .LVL87
     /tmp/cclof41u.s:1322   .text:0000000000000514 .LVL88
     /tmp/cclof41u.s:5918   .debug_loc:00000000000005db .LLST29
     /tmp/cclof41u.s:6394   .debug_str:0000000000000657 .LASF217
     /tmp/cclof41u.s:5929   .debug_loc:0000000000000611 .LLST30
     /tmp/cclof41u.s:6484   .debug_str:00000000000008dc .LASF218
     /tmp/cclof41u.s:5940   .debug_loc:0000000000000647 .LLST31
     /tmp/cclof41u.s:1369   .text:0000000000000534 .LVL93
     /tmp/cclof41u.s:1376   .text:0000000000000544 .LVL95
     /tmp/cclof41u.s:1519   .text:00000000000005c0 .LVL110
     /tmp/cclof41u.s:1404   .text:000000000000055c .LBB137
     /tmp/cclof41u.s:1458   .text:000000000000057c .LBE137
     /tmp/cclof41u.s:5947   .debug_loc:000000000000066a .LLST25
     /tmp/cclof41u.s:6636   .debug_str:0000000000000ce0 .LASF219
     /tmp/cclof41u.s:5954   .debug_loc:000000000000068d .LLST26
     /tmp/cclof41u.s:5961   .debug_loc:00000000000006b0 .LLST27
     /tmp/cclof41u.s:1406   .text:000000000000055c .LBB138
     /tmp/cclof41u.s:1423   .text:0000000000000568 .LBE138
     /tmp/cclof41u.s:1439   .text:0000000000000574 .LBB140
     /tmp/cclof41u.s:1450   .text:0000000000000578 .LBE140
     /tmp/cclof41u.s:5968   .debug_loc:00000000000006d3 .LLST28
     /tmp/cclof41u.s:1437   .text:0000000000000574 .LVL100
     /tmp/cclof41u.s:1463   .text:0000000000000580 .LBB135
     /tmp/cclof41u.s:1485   .text:0000000000000590 .LBE135
     /tmp/cclof41u.s:5975   .debug_loc:00000000000006f6 .LLST23
     /tmp/cclof41u.s:5982   .debug_loc:0000000000000719 .LLST24
     /tmp/cclof41u.s:1476   .text:000000000000058c .LVL104
     /tmp/cclof41u.s:949    .text:00000000000003b8 .LBB134
     /tmp/cclof41u.s:977    .text:00000000000003dc .LBE134
     /tmp/cclof41u.s:5989   .debug_loc:000000000000073c .LLST22
GAS LISTING /tmp/cclof41u.s 			page 63


     /tmp/cclof41u.s:965    .text:00000000000003cc .LVL54
     /tmp/cclof41u.s:968    .text:00000000000003d8 .LVL55
     /tmp/cclof41u.s:581    .text:000000000000028c .LBB108
     /tmp/cclof41u.s:593    .text:0000000000000294 .LBE108
     /tmp/cclof41u.s:5996   .debug_loc:000000000000075f .LLST16
     /tmp/cclof41u.s:622    .text:00000000000002d8 .LBB111
     /tmp/cclof41u.s:630    .text:00000000000002dc .LBE111
     /tmp/cclof41u.s:6004   .debug_loc:0000000000000783 .LLST17
     /tmp/cclof41u.s:761    .text:0000000000000358 .LBB122
     /tmp/cclof41u.s:778    .text:0000000000000364 .LBE122
     /tmp/cclof41u.s:1019   .text:00000000000003f4 .LBB228
     /tmp/cclof41u.s:1033   .text:00000000000003fc .LBE228
     /tmp/cclof41u.s:6011   .debug_loc:00000000000007a6 .LLST51
     /tmp/cclof41u.s:605    .text:00000000000002b0 .LVL38
     /tmp/cclof41u.s:615    .text:00000000000002cc .LVL39
     /tmp/cclof41u.s:552    .text:0000000000000268 .LBB104
     /tmp/cclof41u.s:568    .text:0000000000000274 .LBE104
     /tmp/cclof41u.s:720    .text:000000000000032c .LVL47
     /tmp/cclof41u.s:1505   .text:00000000000005b0 .LVL108
     /tmp/cclof41u.s:1523   .text:00000000000005cc .LVL111
     /tmp/cclof41u.s:367    .text:0000000000000174 .LFB32
     /tmp/cclof41u.s:511    .text:000000000000023c .LFE32
     /tmp/cclof41u.s:6018   .debug_loc:00000000000007c9 .LLST6
     /tmp/cclof41u.s:6032   .debug_loc:0000000000000802 .LLST7
     /tmp/cclof41u.s:6608   .debug_str:0000000000000c1c .LASF220
     /tmp/cclof41u.s:6039   .debug_loc:0000000000000825 .LLST8
     /tmp/cclof41u.s:6061   .debug_loc:0000000000000884 .LLST9
     /tmp/cclof41u.s:384    .text:000000000000018c .LBB98
     /tmp/cclof41u.s:400    .text:0000000000000198 .LBE98
     /tmp/cclof41u.s:402    .text:0000000000000198 .LBB100
     /tmp/cclof41u.s:414    .text:00000000000001a0 .LBE100
     /tmp/cclof41u.s:6083   .debug_loc:00000000000008c5 .LLST10
     /tmp/cclof41u.s:485    .text:0000000000000220 .LBB102
     /tmp/cclof41u.s:496    .text:0000000000000224 .LBE102
     /tmp/cclof41u.s:6091   .debug_loc:00000000000008e9 .LLST11
     /tmp/cclof41u.s:469    .text:0000000000000204 .LVL29
     /tmp/cclof41u.s:476    .text:0000000000000214 .LVL30
     /tmp/cclof41u.s:259    .text:0000000000000104 .LFB31
     /tmp/cclof41u.s:361    .text:0000000000000174 .LFE31
     /tmp/cclof41u.s:6578   .debug_str:0000000000000b69 .LASF221
     /tmp/cclof41u.s:6098   .debug_loc:000000000000090c .LLST2
     /tmp/cclof41u.s:6109   .debug_loc:0000000000000942 .LLST3
     /tmp/cclof41u.s:277    .text:0000000000000120 .LBB92
     /tmp/cclof41u.s:293    .text:000000000000012c .LBE92
     /tmp/cclof41u.s:295    .text:000000000000012c .LBB94
     /tmp/cclof41u.s:308    .text:0000000000000134 .LBE94
     /tmp/cclof41u.s:6116   .debug_loc:0000000000000965 .LLST4
     /tmp/cclof41u.s:334    .text:0000000000000158 .LBB96
     /tmp/cclof41u.s:345    .text:000000000000015c .LBE96
     /tmp/cclof41u.s:6124   .debug_loc:0000000000000989 .LLST5
     /tmp/cclof41u.s:318    .text:0000000000000144 .LVL13
     /tmp/cclof41u.s:224    .text:00000000000000e4 .LFB30
     /tmp/cclof41u.s:253    .text:0000000000000104 .LFE30
     /tmp/cclof41u.s:155    .text:000000000000009c .LFB29
     /tmp/cclof41u.s:187    .text:00000000000000bc .LFE29
     /tmp/cclof41u.s:166    .text:00000000000000a8 .LBB90
     /tmp/cclof41u.s:178    .text:00000000000000b0 .LBE90
GAS LISTING /tmp/cclof41u.s 			page 64


     /tmp/cclof41u.s:6131   .debug_loc:00000000000009ac .LLST1
     /tmp/cclof41u.s:117    .text:000000000000007c .LFB28
     /tmp/cclof41u.s:149    .text:000000000000009c .LFE28
     /tmp/cclof41u.s:128    .text:0000000000000088 .LBB88
     /tmp/cclof41u.s:140    .text:0000000000000090 .LBE88
     /tmp/cclof41u.s:6139   .debug_loc:00000000000009d0 .LLST0
     /tmp/cclof41u.s:193    .text:00000000000000bc .LFB27
     /tmp/cclof41u.s:218    .text:00000000000000e4 .LFE27
     /tmp/cclof41u.s:207    .text:00000000000000d4 .LVL9
     /tmp/cclof41u.s:65     .text:0000000000000040 .LFB26
     /tmp/cclof41u.s:111    .text:000000000000007c .LFE26
     /tmp/cclof41u.s:80     .text:0000000000000058 .LBB86
     /tmp/cclof41u.s:92     .text:000000000000005c .LBE86
     /tmp/cclof41u.s:96     .text:0000000000000064 .LVL3
     /tmp/cclof41u.s:100    .text:000000000000006c .LVL4
     /tmp/cclof41u.s:42     .text:0000000000000028 .LFB25
     /tmp/cclof41u.s:59     .text:0000000000000040 .LFE25
     /tmp/cclof41u.s:6304   .debug_str:00000000000003c5 .LASF222
     /tmp/cclof41u.s:6238   .debug_str:0000000000000107 .LASF224
     /tmp/cclof41u.s:6660   .debug_str:0000000000000d8d .LASF225
     /tmp/cclof41u.s:6442   .debug_str:00000000000007d5 .LASF226
     /tmp/cclof41u.s:6494   .debug_str:0000000000000918 .LASF228
     /tmp/cclof41u.s:6530   .debug_str:00000000000009f1 .LASF227
     /tmp/cclof41u.s:6342   .debug_str:00000000000004e6 .LASF229
     /tmp/cclof41u.s:6626   .debug_str:0000000000000c7e .LASF230
     /tmp/cclof41u.s:6672   .debug_str:0000000000000ddc .LASF242
     /tmp/cclof41u.s:6244   .debug_str:0000000000000133 .LASF243
     /tmp/cclof41u.s:6688   .debug_str:0000000000000e56 .LASF231
     /tmp/cclof41u.s:6346   .debug_str:00000000000004fa .LASF232
     /tmp/cclof41u.s:6352   .debug_str:000000000000051d .LASF233
     /tmp/cclof41u.s:6426   .debug_str:0000000000000760 .LASF234
     /tmp/cclof41u.s:1633   .text:000000000000062c .LVL116
     /tmp/cclof41u.s:549    .text:0000000000000268 .LVL34
     /tmp/cclof41u.s:669    .text:00000000000002fc .LVL43
     /tmp/cclof41u.s:705    .text:000000000000031c .LVL46
     /tmp/cclof41u.s:744    .text:0000000000000354 .LVL48
     /tmp/cclof41u.s:957    .text:00000000000003bc .LVL53
     /tmp/cclof41u.s:979    .text:00000000000003e0 .LVL56
     /tmp/cclof41u.s:1013   .text:00000000000003f4 .LVL60
     /tmp/cclof41u.s:1030   .text:00000000000003fc .LVL61
     /tmp/cclof41u.s:1144   .text:0000000000000468 .LVL72
     /tmp/cclof41u.s:1168   .text:0000000000000484 .LVL74
     /tmp/cclof41u.s:1197   .text:00000000000004a0 .LVL76
     /tmp/cclof41u.s:1252   .text:00000000000004d0 .LVL80
     /tmp/cclof41u.s:1295   .text:00000000000004e8 .LVL84
     /tmp/cclof41u.s:1345   .text:0000000000000520 .LVL90
     /tmp/cclof41u.s:1372   .text:0000000000000538 .LVL94
     /tmp/cclof41u.s:1400   .text:000000000000055c .LVL96
     /tmp/cclof41u.s:1421   .text:0000000000000568 .LVL98
     /tmp/cclof41u.s:1460   .text:0000000000000580 .LVL102
     /tmp/cclof41u.s:566    .text:0000000000000274 .LVL35
     /tmp/cclof41u.s:770    .text:000000000000035c .LVL50
     /tmp/cclof41u.s:758    .text:0000000000000358 .LVL49
     /tmp/cclof41u.s:1059   .text:0000000000000410 .LVL64
     /tmp/cclof41u.s:1123   .text:000000000000045c .LVL70
     /tmp/cclof41u.s:1138   .text:0000000000000460 .LVL71
     /tmp/cclof41u.s:1178   .text:000000000000048c .LVL75
GAS LISTING /tmp/cclof41u.s 			page 65


     /tmp/cclof41u.s:1265   .text:00000000000004d8 .LVL81
     /tmp/cclof41u.s:1289   .text:00000000000004e0 .LVL83
     /tmp/cclof41u.s:1415   .text:0000000000000560 .LVL97
     /tmp/cclof41u.s:776    .text:0000000000000364 .LVL51
     /tmp/cclof41u.s:782    .text:0000000000000368 .LVL52
     /tmp/cclof41u.s:1490   .text:0000000000000598 .LVL106
     /tmp/cclof41u.s:1509   .text:00000000000005b4 .LVL109
     /tmp/cclof41u.s:651    .text:00000000000002f0 .LVL42
     /tmp/cclof41u.s:689    .text:0000000000000314 .LVL45
     /tmp/cclof41u.s:998    .text:00000000000003e4 .LVL57
     /tmp/cclof41u.s:1004   .text:00000000000003e8 .LVL58
     /tmp/cclof41u.s:1044   .text:0000000000000400 .LVL62
     /tmp/cclof41u.s:1078   .text:0000000000000418 .LVL66
     /tmp/cclof41u.s:1487   .text:0000000000000594 .LVL105
     /tmp/cclof41u.s:1084   .text:000000000000041c .LVL67
     /tmp/cclof41u.s:1072   .text:0000000000000414 .LVL65
     /tmp/cclof41u.s:1208   .text:00000000000004b8 .LVL77
     /tmp/cclof41u.s:1233   .text:00000000000004c0 .LVL78
     /tmp/cclof41u.s:1277   .text:00000000000004dc .LVL82
     /tmp/cclof41u.s:1306   .text:0000000000000500 .LVL85
     /tmp/cclof41u.s:1312   .text:0000000000000504 .LVL86
     /tmp/cclof41u.s:1332   .text:0000000000000518 .LVL89
     /tmp/cclof41u.s:1363   .text:0000000000000528 .LVL92
     /tmp/cclof41u.s:1357   .text:0000000000000524 .LVL91
     /tmp/cclof41u.s:1431   .text:000000000000056c .LVL99
     /tmp/cclof41u.s:1447   .text:0000000000000578 .LVL101
     /tmp/cclof41u.s:1471   .text:0000000000000584 .LVL103
     /tmp/cclof41u.s:580    .text:000000000000028c .LVL36
     /tmp/cclof41u.s:590    .text:0000000000000294 .LVL37
     /tmp/cclof41u.s:621    .text:00000000000002d8 .LVL40
     /tmp/cclof41u.s:628    .text:00000000000002dc .LVL41
     /tmp/cclof41u.s:370    .text:0000000000000174 .LVL19
     /tmp/cclof41u.s:424    .text:00000000000001a4 .LVL22
     /tmp/cclof41u.s:398    .text:0000000000000198 .LVL20
     /tmp/cclof41u.s:480    .text:0000000000000218 .LVL31
     /tmp/cclof41u.s:428    .text:00000000000001a8 .LVL23
     /tmp/cclof41u.s:435    .text:00000000000001b0 .LVL24
     /tmp/cclof41u.s:446    .text:00000000000001d4 .LVL25
     /tmp/cclof41u.s:456    .text:00000000000001e8 .LVL27
     /tmp/cclof41u.s:461    .text:00000000000001ec .LVL28
     /tmp/cclof41u.s:452    .text:00000000000001e0 .LVL26
     /tmp/cclof41u.s:411    .text:00000000000001a0 .LVL21
     /tmp/cclof41u.s:484    .text:0000000000000220 .LVL32
     /tmp/cclof41u.s:493    .text:0000000000000224 .LVL33
     /tmp/cclof41u.s:262    .text:0000000000000104 .LVL10
     /tmp/cclof41u.s:304    .text:0000000000000134 .LVL12
     /tmp/cclof41u.s:354    .text:0000000000000168 .LVL18
     /tmp/cclof41u.s:291    .text:000000000000012c .LVL11
     /tmp/cclof41u.s:329    .text:0000000000000150 .LVL15
     /tmp/cclof41u.s:333    .text:0000000000000158 .LVL16
     /tmp/cclof41u.s:342    .text:000000000000015c .LVL17
     /tmp/cclof41u.s:165    .text:00000000000000a8 .LVL7
     /tmp/cclof41u.s:175    .text:00000000000000b0 .LVL8
     /tmp/cclof41u.s:127    .text:0000000000000088 .LVL5
     /tmp/cclof41u.s:137    .text:0000000000000090 .LVL6
     /tmp/cclof41u.s:1734   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/cclof41u.s:577    .text:000000000000028c .LBB107
GAS LISTING /tmp/cclof41u.s 			page 66


     /tmp/cclof41u.s:711    .text:000000000000031c .LBE107
     /tmp/cclof41u.s:748    .text:0000000000000354 .LBB232
     /tmp/cclof41u.s:788    .text:0000000000000370 .LBE232
     /tmp/cclof41u.s:792    .text:0000000000000370 .LBB233
     /tmp/cclof41u.s:799    .text:0000000000000378 .LBE233
     /tmp/cclof41u.s:803    .text:0000000000000378 .LBB234
     /tmp/cclof41u.s:812    .text:0000000000000380 .LBE234
     /tmp/cclof41u.s:816    .text:0000000000000380 .LBB235
     /tmp/cclof41u.s:827    .text:0000000000000388 .LBE235
     /tmp/cclof41u.s:831    .text:0000000000000388 .LBB236
     /tmp/cclof41u.s:844    .text:0000000000000390 .LBE236
     /tmp/cclof41u.s:848    .text:0000000000000390 .LBB237
     /tmp/cclof41u.s:863    .text:0000000000000398 .LBE237
     /tmp/cclof41u.s:867    .text:0000000000000398 .LBB238
     /tmp/cclof41u.s:884    .text:00000000000003a0 .LBE238
     /tmp/cclof41u.s:888    .text:00000000000003a0 .LBB239
     /tmp/cclof41u.s:907    .text:00000000000003a8 .LBE239
     /tmp/cclof41u.s:911    .text:00000000000003a8 .LBB240
     /tmp/cclof41u.s:932    .text:00000000000003b0 .LBE240
     /tmp/cclof41u.s:936    .text:00000000000003b0 .LBB241
     /tmp/cclof41u.s:1215   .text:00000000000004b8 .LBE241
     /tmp/cclof41u.s:1219   .text:00000000000004b8 .LBB242
     /tmp/cclof41u.s:1533   .text:00000000000005cc .LBE242
     /tmp/cclof41u.s:1348   .text:0000000000000520 .LBB145
     /tmp/cclof41u.s:1402   .text:000000000000055c .LBE145
     /tmp/cclof41u.s:1515   .text:00000000000005b4 .LBB147
     /tmp/cclof41u.s:1525   .text:00000000000005cc .LBE147
     /tmp/cclof41u.s:1174   .text:0000000000000484 .LBB164
     /tmp/cclof41u.s:1209   .text:00000000000004b8 .LBE164
     /tmp/cclof41u.s:1225   .text:00000000000004b8 .LBB171
     /tmp/cclof41u.s:1267   .text:00000000000004d8 .LBE171
     /tmp/cclof41u.s:1062   .text:0000000000000410 .LBB193
     /tmp/cclof41u.s:1125   .text:000000000000045c .LBE193
     /tmp/cclof41u.s:1497   .text:0000000000000598 .LBB196
     /tmp/cclof41u.s:1510   .text:00000000000005b4 .LBE196
     /tmp/cclof41u.s:1539   .gcc_except_table:0000000000000000 .LLSDA33
     /tmp/cclof41u.s:1686   .gcc_except_table:000000000000005f .LLSDA34

UNDEFINED SYMBOLS
_Z8userMainv
_ZN5Riscv14supervisorTrapEv
_ZN3PCB10initializeEv
_ZN8KConsole10initializeEv
__putc
_ZN3PCB16timeSliceCounterE
_ZN12SleepPCBList13tryToWakePCBsEv
_ZN3PCB7runningE
_ZN3PCB8dispatchEv
console_handler
_ZN10KSemaphoreD1Ev
_ZN10KSemaphoredlEPv
_Z7kmallocm
_Z5kfreePv
_ZN3PCBnwEm
_ZN3PCBC1EPFvPvES0_S0_m
_ZN12SleepPCBList17insertSleepingPCBEv
_ZN10KSemaphorenwEm
GAS LISTING /tmp/cclof41u.s 			page 67


_ZN10KSemaphoreC1Ei
_ZN10KSemaphore4waitEv
_ZN10KSemaphore6signalEv
_ZN3PCBdlEPv
_Unwind_Resume
__gxx_personality_v0
thread_dispatch
