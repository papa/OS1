GAS LISTING /tmp/cc72vfn8.s 			page 1


   1              		.file	"Riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv15userMainWrapperEPv
   9              	_ZN5Riscv15userMainWrapperEPv:
  10              	.LFB34:
  11              		.file 1 "src/Riscv.cpp"
   1:src/Riscv.cpp **** //
   2:src/Riscv.cpp **** // Created by os on 4/27/22.
   3:src/Riscv.cpp **** //
   4:src/Riscv.cpp **** 
   5:src/Riscv.cpp **** #include "../h/Riscv.hpp"
   6:src/Riscv.cpp **** #include "../h/MemoryAllocator.hpp"
   7:src/Riscv.cpp **** #include "../h/PCB.hpp"
   8:src/Riscv.cpp **** #include "../h/syscall_cpp.hpp"
   9:src/Riscv.cpp **** #include "../h/SleepPCBList.hpp"
  10:src/Riscv.cpp **** #include "../h/KConsole.hpp"
  11:src/Riscv.cpp **** #include "../h/Tests.hpp"
  12:src/Riscv.cpp **** #include "../test/userMain.hpp"
  13:src/Riscv.cpp **** 
  14:src/Riscv.cpp **** uint64 Riscv::totalTime = 0;
  15:src/Riscv.cpp **** bool Riscv::finishSystem = false;
  16:src/Riscv.cpp **** 
  17:src/Riscv.cpp **** void Riscv::initSystem()
  18:src/Riscv.cpp **** {
  19:src/Riscv.cpp ****     w_stvec((uint64)&Riscv::supervisorTrap);
  20:src/Riscv.cpp ****     PCB::initialize();
  21:src/Riscv.cpp ****     KConsole::initialize();
  22:src/Riscv.cpp **** }
  23:src/Riscv.cpp **** 
  24:src/Riscv.cpp **** void Riscv::endSystem()
  25:src/Riscv.cpp **** {
  26:src/Riscv.cpp ****     //todo
  27:src/Riscv.cpp ****     Riscv::disableInterrupts();
  28:src/Riscv.cpp **** }
  29:src/Riscv.cpp **** 
  30:src/Riscv.cpp **** void Riscv::enableInterrupts() {
  31:src/Riscv.cpp ****     ms_sstatus(Riscv::SSTATUS_SIE);
  32:src/Riscv.cpp **** }
  33:src/Riscv.cpp **** 
  34:src/Riscv.cpp **** void Riscv::disableInterrupts()
  35:src/Riscv.cpp **** {
  36:src/Riscv.cpp ****     mc_sstatus(Riscv::SSTATUS_SIE);
  37:src/Riscv.cpp **** }
  38:src/Riscv.cpp **** 
  39:src/Riscv.cpp **** void Riscv::popSppSpie()
  40:src/Riscv.cpp **** {
  41:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
  42:src/Riscv.cpp ****     __asm__ volatile ("sret");
  43:src/Riscv.cpp **** }
  44:src/Riscv.cpp **** 
  45:src/Riscv.cpp **** void Riscv::handleSupervisorTrap()
  46:src/Riscv.cpp **** {
  47:src/Riscv.cpp ****     __asm__ volatile("mv %0, a4" : "=r"(PCB::savedRegA4));
GAS LISTING /tmp/cc72vfn8.s 			page 2


  48:src/Riscv.cpp ****     __asm__ volatile("csrr %0, sscratch":"=r"(PCB::running->sscratch));
  49:src/Riscv.cpp **** 
  50:src/Riscv.cpp ****     uint64 scause = Riscv::r_scause();
  51:src/Riscv.cpp **** 
  52:src/Riscv.cpp ****     switch(scause)
  53:src/Riscv.cpp ****     {
  54:src/Riscv.cpp ****         case timerInterrupt:
  55:src/Riscv.cpp ****         {
  56:src/Riscv.cpp ****             uint64 volatile sepc = Riscv::r_sepc();
  57:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
  58:src/Riscv.cpp ****             mc_sip(Riscv::SIP_SSIP);
  59:src/Riscv.cpp ****             //trapPrintString("timerInterrupt\n");
  60:src/Riscv.cpp ****             //static uint64 total = 0;
  61:src/Riscv.cpp ****             totalTime++;
  62:src/Riscv.cpp ****             //trapPrintInt(totalTime);
  63:src/Riscv.cpp **** 
  64:src/Riscv.cpp ****             PCB::timeSliceCounter++;
  65:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
  66:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
  67:src/Riscv.cpp ****             {
  68:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
  69:src/Riscv.cpp ****                 PCB::dispatch();
  70:src/Riscv.cpp ****             }
  71:src/Riscv.cpp **** 
  72:src/Riscv.cpp ****             Riscv::w_sstatus(sstatus);
  73:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
  74:src/Riscv.cpp ****             changePrivMode();
  75:src/Riscv.cpp ****             break;
  76:src/Riscv.cpp ****         }
  77:src/Riscv.cpp ****         case hwInterrupt:
  78:src/Riscv.cpp ****         {
  79:src/Riscv.cpp ****             uint64 x = CONSOLE_STATUS;
  80:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0"::"r"(x));
  81:src/Riscv.cpp ****             __asm__ volatile("lb a1, 0(a0)");
  82:src/Riscv.cpp ****             uint64 operation;
  83:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" :  "=r"(operation));
  84:src/Riscv.cpp ****             if(operation & KConsole::STATUS_READ_MASK)
  85:src/Riscv.cpp ****             {
  86:src/Riscv.cpp ****                 x = CONSOLE_TX_DATA;
  87:src/Riscv.cpp ****                 __asm__ volatile("mv a0, %0"::"r"(x));
  88:src/Riscv.cpp ****                 __asm__ volatile("lb a1,0(a0)");
  89:src/Riscv.cpp ****                 char c;
  90:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" :  "=r"(c));
  91:src/Riscv.cpp **** 
  92:src/Riscv.cpp ****                 if(KConsole::pendingGetc > 0)
  93:src/Riscv.cpp ****                 {
  94:src/Riscv.cpp ****                     KConsole::pendingGetc--;
  95:src/Riscv.cpp ****                     KConsole::putCharacterInput(c);
  96:src/Riscv.cpp ****                     KConsole::putCharacterOutput(c);
  97:src/Riscv.cpp ****                 }
  98:src/Riscv.cpp ****             }
  99:src/Riscv.cpp **** 
 100:src/Riscv.cpp ****             plic_complete(plic_claim());
 101:src/Riscv.cpp **** 
 102:src/Riscv.cpp ****             break;
 103:src/Riscv.cpp ****         }
 104:src/Riscv.cpp ****         case operationInterrupt: // todo
GAS LISTING /tmp/cc72vfn8.s 			page 3


 105:src/Riscv.cpp ****         {
 106:src/Riscv.cpp ****             trapPrintString("operation interrupt\n");
 107:src/Riscv.cpp ****             thread_exit();
 108:src/Riscv.cpp ****             break;
 109:src/Riscv.cpp ****         }
 110:src/Riscv.cpp ****         case addrReadInterrupt: // todo
 111:src/Riscv.cpp ****         {
 112:src/Riscv.cpp ****             trapPrintString("read interrupt\n");
 113:src/Riscv.cpp ****             thread_exit();
 114:src/Riscv.cpp ****             break;
 115:src/Riscv.cpp ****         }
 116:src/Riscv.cpp ****         case addrWriteInterrupt: // todo
 117:src/Riscv.cpp ****         {
 118:src/Riscv.cpp ****             trapPrintString("write interrupt\n");
 119:src/Riscv.cpp ****             thread_exit();
 120:src/Riscv.cpp ****             break;
 121:src/Riscv.cpp ****         }
 122:src/Riscv.cpp ****         case ecallSystemInterupt:
 123:src/Riscv.cpp ****         case ecallUserInterrupt:
 124:src/Riscv.cpp ****         {
 125:src/Riscv.cpp ****             uint64 operation;
 126:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
 127:src/Riscv.cpp **** 
 128:src/Riscv.cpp ****             uint64 volatile sepc = Riscv::r_sepc() + 4;
 129:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 130:src/Riscv.cpp **** 
 131:src/Riscv.cpp ****             switch(operation)
 132:src/Riscv.cpp ****             {
 133:src/Riscv.cpp ****                 case MemoryAllocator::MEM_ALLOC:
 134:src/Riscv.cpp ****                     MemoryAllocator::memAllocHandler();
 135:src/Riscv.cpp ****                     break;
 136:src/Riscv.cpp ****                 case MemoryAllocator::MEM_FREE:
 137:src/Riscv.cpp ****                     MemoryAllocator::memFreeHandler();
 138:src/Riscv.cpp ****                     break;
 139:src/Riscv.cpp ****                 case PCB::THREAD_MAKE_PCB:
 140:src/Riscv.cpp ****                     PCB::threadMakePCBHandler();
 141:src/Riscv.cpp ****                     break;
 142:src/Riscv.cpp ****                 case PCB::THREAD_CREATE:
 143:src/Riscv.cpp ****                     PCB::threadCreateHandler();
 144:src/Riscv.cpp ****                     break;
 145:src/Riscv.cpp ****                 case PCB::THREAD_START:
 146:src/Riscv.cpp ****                     PCB::threadStartHandler();
 147:src/Riscv.cpp ****                     break;
 148:src/Riscv.cpp ****                 case PCB::THREAD_DISPATCH:
 149:src/Riscv.cpp ****                     PCB::threadDispatchHandler();
 150:src/Riscv.cpp ****                     break;
 151:src/Riscv.cpp ****                 case PCB::THREAD_EXIT:
 152:src/Riscv.cpp ****                     PCB::threadExitHandler();
 153:src/Riscv.cpp ****                     break;
 154:src/Riscv.cpp ****                 case PCB::TIME_SLEEP:
 155:src/Riscv.cpp ****                     PCB::threadSleepHandler();
 156:src/Riscv.cpp ****                     break;
 157:src/Riscv.cpp ****                 case KSemaphore::SEM_OPEN:
 158:src/Riscv.cpp ****                     KSemaphore::semOpenHandler();
 159:src/Riscv.cpp ****                     break;
 160:src/Riscv.cpp ****                 case KSemaphore::SEM_WAIT:
 161:src/Riscv.cpp ****                     KSemaphore::semWaitHandler();
GAS LISTING /tmp/cc72vfn8.s 			page 4


 162:src/Riscv.cpp ****                     break;
 163:src/Riscv.cpp ****                 case KSemaphore::SEM_SIGNAL:
 164:src/Riscv.cpp ****                     KSemaphore::semSignalHandler();
 165:src/Riscv.cpp ****                     break;
 166:src/Riscv.cpp ****                 case KSemaphore::SEM_CLOSE:
 167:src/Riscv.cpp ****                     KSemaphore::semCloseHandler();
 168:src/Riscv.cpp ****                     break;
 169:src/Riscv.cpp ****                 case KConsole::CONSOLE_GETC:
 170:src/Riscv.cpp ****                     KConsole::getcHandler();
 171:src/Riscv.cpp ****                     break;
 172:src/Riscv.cpp ****                 case KConsole::CONSOLE_PUTC:
 173:src/Riscv.cpp ****                     KConsole::putcHandler();
 174:src/Riscv.cpp ****                     break;
 175:src/Riscv.cpp ****                 case KConsole::CONSOLE_GET_CHAR:
 176:src/Riscv.cpp ****                     KConsole::getCharHandler();
 177:src/Riscv.cpp ****                     break;
 178:src/Riscv.cpp ****             }
 179:src/Riscv.cpp **** 
 180:src/Riscv.cpp ****             Riscv::w_sstatus(sstatus);
 181:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 182:src/Riscv.cpp ****             changePrivMode();
 183:src/Riscv.cpp ****             break;
 184:src/Riscv.cpp ****         }
 185:src/Riscv.cpp ****     }
 186:src/Riscv.cpp **** }
 187:src/Riscv.cpp **** 
 188:src/Riscv.cpp **** void Riscv::kernelMain()
 189:src/Riscv.cpp **** {
 190:src/Riscv.cpp ****     initSystem();
 191:src/Riscv.cpp **** 
 192:src/Riscv.cpp ****     //disableTimerInterrupts();
 193:src/Riscv.cpp ****     enableInterrupts();
 194:src/Riscv.cpp **** 
 195:src/Riscv.cpp ****     PCB* userPCB = new PCB(&Riscv::userMainWrapper, 0, kmalloc(DEFAULT_STACK_SIZE), DEFAULT_TIME_SL
 196:src/Riscv.cpp ****     //PCB* userPCB = new PCB(&Riscv::myTestsWrapper, 0, kmalloc(DEFAULT_STACK_SIZE), DEFAULT_TIME_S
 197:src/Riscv.cpp ****     userPCB->start();
 198:src/Riscv.cpp ****     while(!userPCB->isFinished())
 199:src/Riscv.cpp ****     {
 200:src/Riscv.cpp ****         thread_dispatch();
 201:src/Riscv.cpp ****     }
 202:src/Riscv.cpp **** 
 203:src/Riscv.cpp ****     finishSystem = true;
 204:src/Riscv.cpp ****     ::printString("End...\n");
 205:src/Riscv.cpp ****     while(!PCB::consolePCB->isFinished())
 206:src/Riscv.cpp ****     {
 207:src/Riscv.cpp ****         thread_dispatch();
 208:src/Riscv.cpp ****     }
 209:src/Riscv.cpp ****     disableInterrupts();
 210:src/Riscv.cpp ****     endSystem();
 211:src/Riscv.cpp **** }
 212:src/Riscv.cpp **** 
 213:src/Riscv.cpp **** void Riscv::userMainWrapper(void* )
 214:src/Riscv.cpp **** {
  12              		.loc 1 214 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
GAS LISTING /tmp/cc72vfn8.s 			page 5


  16 0004 23341100 		sd	ra,8(sp)
  17 0008 23308100 		sd	s0,0(sp)
  18              		.cfi_offset 1, -8
  19              		.cfi_offset 8, -16
  20 000c 13040101 		addi	s0,sp,16
  21              		.cfi_def_cfa 8, 0
 215:src/Riscv.cpp ****     userMain();
  22              		.loc 1 215 5
  23              		.loc 1 215 13 is_stmt 0
  24 0010 97000000 		call	_Z8userMainv@plt
  24      E7800000 
  25              	.LVL0:
 216:src/Riscv.cpp **** }
  26              		.loc 1 216 1
  27 0018 83308100 		ld	ra,8(sp)
  28              		.cfi_restore 1
  29 001c 03340100 		ld	s0,0(sp)
  30              		.cfi_restore 8
  31              		.cfi_def_cfa 2, 16
  32 0020 13010101 		addi	sp,sp,16
  33              		.cfi_def_cfa_offset 0
  34 0024 67800000 		jr	ra
  35              		.cfi_endproc
  36              	.LFE34:
  38              		.align	2
  39              		.globl	_ZN5Riscv10initSystemEv
  41              	_ZN5Riscv10initSystemEv:
  42              	.LFB27:
  18:src/Riscv.cpp ****     w_stvec((uint64)&Riscv::supervisorTrap);
  43              		.loc 1 18 1 is_stmt 1
  44              		.cfi_startproc
  45 0028 130101FF 		addi	sp,sp,-16
  46              		.cfi_def_cfa_offset 16
  47 002c 23341100 		sd	ra,8(sp)
  48 0030 23308100 		sd	s0,0(sp)
  49              		.cfi_offset 1, -8
  50              		.cfi_offset 8, -16
  51 0034 13040101 		addi	s0,sp,16
  52              		.cfi_def_cfa 8, 0
  19:src/Riscv.cpp ****     PCB::initialize();
  53              		.loc 1 19 5
  19:src/Riscv.cpp ****     PCB::initialize();
  54              		.loc 1 19 12 is_stmt 0
  55 0038 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
  55      83B70700 
  56              	.LVL1:
  57              	.LBB41:
  58              	.LBB42:
  59              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 4/27/22.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_0_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_0_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
GAS LISTING /tmp/cc72vfn8.s 			page 6


   9:src/../h/Riscv.hpp **** #include "../test/printing.hpp"
  10:src/../h/Riscv.hpp **** 
  11:src/../h/Riscv.hpp **** class Riscv
  12:src/../h/Riscv.hpp **** {
  13:src/../h/Riscv.hpp **** public:
  14:src/../h/Riscv.hpp ****     static void kernelMain();
  15:src/../h/Riscv.hpp **** 
  16:src/../h/Riscv.hpp ****     static void changePrivMode();
  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp ****     static void initSystem();
  19:src/../h/Riscv.hpp ****     static void endSystem();
  20:src/../h/Riscv.hpp **** 
  21:src/../h/Riscv.hpp ****     static void userMainWrapper(void* p);
  22:src/../h/Riscv.hpp **** 
  23:src/../h/Riscv.hpp ****     static void enableInterrupts();
  24:src/../h/Riscv.hpp **** 
  25:src/../h/Riscv.hpp ****     static void disableTimerInterrupts();
  26:src/../h/Riscv.hpp **** 
  27:src/../h/Riscv.hpp ****     static void disableInterrupts();
  28:src/../h/Riscv.hpp **** 
  29:src/../h/Riscv.hpp ****     static void idleRiscv(void* arg);
  30:src/../h/Riscv.hpp **** 
  31:src/../h/Riscv.hpp ****     static void pushRegisters();
  32:src/../h/Riscv.hpp ****     static void popRegisters();
  33:src/../h/Riscv.hpp **** 
  34:src/../h/Riscv.hpp ****     static uint64 r_scause();
  35:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  36:src/../h/Riscv.hpp **** 
  37:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  38:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
  39:src/../h/Riscv.hpp **** 
  40:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  41:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  42:src/../h/Riscv.hpp **** 
  43:src/../h/Riscv.hpp ****     static uint64 r_stval();
  44:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  45:src/../h/Riscv.hpp **** 
  46:src/../h/Riscv.hpp ****     static bool finishSystem;
  47:src/../h/Riscv.hpp **** 
  48:src/../h/Riscv.hpp ****     enum BitMaskSip
  49:src/../h/Riscv.hpp ****     {
  50:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  51:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  52:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9),
  53:src/../h/Riscv.hpp ****     };
  54:src/../h/Riscv.hpp **** 
  55:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  56:src/../h/Riscv.hpp **** 
  57:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  58:src/../h/Riscv.hpp **** 
  59:src/../h/Riscv.hpp ****     static uint64 r_sip();
  60:src/../h/Riscv.hpp **** 
  61:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  62:src/../h/Riscv.hpp **** 
  63:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  64:src/../h/Riscv.hpp ****     {
  65:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
GAS LISTING /tmp/cc72vfn8.s 			page 7


  66:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  67:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  68:src/../h/Riscv.hpp ****     };
  69:src/../h/Riscv.hpp **** 
  70:src/../h/Riscv.hpp ****     static void w_a0_sscratch();
  71:src/../h/Riscv.hpp **** 
  72:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  73:src/../h/Riscv.hpp **** 
  74:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  75:src/../h/Riscv.hpp **** 
  76:src/../h/Riscv.hpp ****     static void mc_sie(uint64 mask);
  77:src/../h/Riscv.hpp **** 
  78:src/../h/Riscv.hpp ****     static void ms_sie(uint64 mask);
  79:src/../h/Riscv.hpp **** 
  80:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  81:src/../h/Riscv.hpp **** 
  82:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  83:src/../h/Riscv.hpp **** 
  84:src/../h/Riscv.hpp ****     static uint64 r_sie();
  85:src/../h/Riscv.hpp ****     static void w_sie(uint64 sie);
  86:src/../h/Riscv.hpp ****     static void popSppSpie();
  87:src/../h/Riscv.hpp **** 
  88:src/../h/Riscv.hpp ****     static void supervisorTrap();
  89:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  90:src/../h/Riscv.hpp **** 
  91:src/../h/Riscv.hpp ****     static void myTestsWrapper(void* );
  92:src/../h/Riscv.hpp **** 
  93:src/../h/Riscv.hpp ****     static const uint64 bntOne = 1UL << 63;;
  94:src/../h/Riscv.hpp ****     static const uint64 bntZero = 0UL;
  95:src/../h/Riscv.hpp ****     static const uint64 timerInterrupt = bntOne + 1UL;
  96:src/../h/Riscv.hpp ****     static const uint64 hwInterrupt = bntOne + 9UL;
  97:src/../h/Riscv.hpp ****     static const uint64 operationInterrupt = bntZero + 2UL;
  98:src/../h/Riscv.hpp ****     static const uint64 addrReadInterrupt = bntZero + 5UL;
  99:src/../h/Riscv.hpp ****     static const uint64 addrWriteInterrupt = bntZero + 7UL;
 100:src/../h/Riscv.hpp ****     static const uint64 ecallUserInterrupt = bntZero + 8UL;
 101:src/../h/Riscv.hpp ****     static const uint64 ecallSystemInterupt = bntZero + 9UL;
 102:src/../h/Riscv.hpp **** 
 103:src/../h/Riscv.hpp ****     static uint64 totalTime;
 104:src/../h/Riscv.hpp **** };
 105:src/../h/Riscv.hpp **** 
 106:src/../h/Riscv.hpp **** inline void Riscv::mc_sie(uint64 mask)
 107:src/../h/Riscv.hpp **** {
 108:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sie, %0" : :"r"(mask));
 109:src/../h/Riscv.hpp **** }
 110:src/../h/Riscv.hpp **** 
 111:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause() {
 112:src/../h/Riscv.hpp ****     uint64 volatile scause;
 113:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
 114:src/../h/Riscv.hpp ****     return scause;
 115:src/../h/Riscv.hpp **** }
 116:src/../h/Riscv.hpp **** 
 117:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
 118:src/../h/Riscv.hpp ****     __asm__ volatile("csrw scause, %0" : :"r"(scause));
 119:src/../h/Riscv.hpp **** }
 120:src/../h/Riscv.hpp **** 
 121:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc() {
 122:src/../h/Riscv.hpp ****     uint64 volatile sepc;
GAS LISTING /tmp/cc72vfn8.s 			page 8


 123:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 124:src/../h/Riscv.hpp ****     return sepc;
 125:src/../h/Riscv.hpp **** }
 126:src/../h/Riscv.hpp **** 
 127:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
 128:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sepc, %0" : :"r"(sepc));
 129:src/../h/Riscv.hpp **** }
 130:src/../h/Riscv.hpp **** 
 131:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec() {
 132:src/../h/Riscv.hpp ****     uint64 volatile stvec;
 133:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, stvec" : "=r"(stvec));
 134:src/../h/Riscv.hpp ****     return stvec;
 135:src/../h/Riscv.hpp **** }
 136:src/../h/Riscv.hpp **** 
 137:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 138:src/../h/Riscv.hpp ****     __asm__ volatile("csrw stvec, %0" : :"r"(stvec));
  60              		.loc 2 138 5 is_stmt 1
  61              		.loc 2 138 53 is_stmt 0
  62              	#APP
  63              	# 138 "src/../h/Riscv.hpp" 1
 139              	}
  64              		csrw stvec, a5
  65              	# 0 "" 2
  66              	.LVL2:
  67              	#NO_APP
  68              	.LBE42:
  69              	.LBE41:
  20:src/Riscv.cpp ****     KConsole::initialize();
  70              		.loc 1 20 5 is_stmt 1
  20:src/Riscv.cpp ****     KConsole::initialize();
  71              		.loc 1 20 20 is_stmt 0
  72 0044 97000000 		call	_ZN3PCB10initializeEv@plt
  72      E7800000 
  73              	.LVL3:
  21:src/Riscv.cpp **** }
  74              		.loc 1 21 5 is_stmt 1
  21:src/Riscv.cpp **** }
  75              		.loc 1 21 25 is_stmt 0
  76 004c 97000000 		call	_ZN8KConsole10initializeEv@plt
  76      E7800000 
  77              	.LVL4:
  22:src/Riscv.cpp **** 
  78              		.loc 1 22 1
  79 0054 83308100 		ld	ra,8(sp)
  80              		.cfi_restore 1
  81 0058 03340100 		ld	s0,0(sp)
  82              		.cfi_restore 8
  83              		.cfi_def_cfa 2, 16
  84 005c 13010101 		addi	sp,sp,16
  85              		.cfi_def_cfa_offset 0
  86 0060 67800000 		jr	ra
  87              		.cfi_endproc
  88              	.LFE27:
  90              		.align	2
  91              		.globl	_ZN5Riscv16enableInterruptsEv
  93              	_ZN5Riscv16enableInterruptsEv:
  94              	.LFB29:
GAS LISTING /tmp/cc72vfn8.s 			page 9


  30:src/Riscv.cpp ****     ms_sstatus(Riscv::SSTATUS_SIE);
  95              		.loc 1 30 32 is_stmt 1
  96              		.cfi_startproc
  97 0064 130101FF 		addi	sp,sp,-16
  98              		.cfi_def_cfa_offset 16
  99 0068 23348100 		sd	s0,8(sp)
 100              		.cfi_offset 8, -8
 101 006c 13040101 		addi	s0,sp,16
 102              		.cfi_def_cfa 8, 0
  31:src/Riscv.cpp **** }
 103              		.loc 1 31 5
 104              	.LVL5:
 105              	.LBB43:
 106              	.LBB44:
 140:src/../h/Riscv.hpp **** 
 141:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stval() {
 142:src/../h/Riscv.hpp ****     uint64 volatile stval;
 143:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, stval" : "=r"(stval));
 144:src/../h/Riscv.hpp ****     return stval;
 145:src/../h/Riscv.hpp **** }
 146:src/../h/Riscv.hpp **** 
 147:src/../h/Riscv.hpp **** inline void Riscv::w_sie(uint64 sie)
 148:src/../h/Riscv.hpp **** {
 149:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sie, %0" : :"r"(sie));
 150:src/../h/Riscv.hpp **** }
 151:src/../h/Riscv.hpp **** 
 152:src/../h/Riscv.hpp **** inline void Riscv::w_stval(uint64 stval) {
 153:src/../h/Riscv.hpp ****     __asm__ volatile("csrw stval, %0" : :"r"(stval));
 154:src/../h/Riscv.hpp **** }
 155:src/../h/Riscv.hpp **** 
 156:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 157:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sip, %0" : :"r"(mask));
 158:src/../h/Riscv.hpp **** }
 159:src/../h/Riscv.hpp **** 
 160:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 161:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sip, %0" : :"r"(mask));
 162:src/../h/Riscv.hpp **** }
 163:src/../h/Riscv.hpp **** 
 164:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sie()
 165:src/../h/Riscv.hpp **** {
 166:src/../h/Riscv.hpp ****     uint64 volatile sie;
 167:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sip" : "=r"(sie));
 168:src/../h/Riscv.hpp ****     return sie;
 169:src/../h/Riscv.hpp **** }
 170:src/../h/Riscv.hpp **** 
 171:src/../h/Riscv.hpp **** inline void Riscv::ms_sie(uint64 mask)
 172:src/../h/Riscv.hpp **** {
 173:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sie, %0" : :"r"(mask));
 174:src/../h/Riscv.hpp **** }
 175:src/../h/Riscv.hpp **** 
 176:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip() {
 177:src/../h/Riscv.hpp ****     uint64 volatile sip;
 178:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sip" : "=r"(sip));
 179:src/../h/Riscv.hpp ****     return sip;
 180:src/../h/Riscv.hpp **** }
 181:src/../h/Riscv.hpp **** 
 182:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
GAS LISTING /tmp/cc72vfn8.s 			page 10


 183:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sip, %0" : :"r"(sip));
 184:src/../h/Riscv.hpp **** }
 185:src/../h/Riscv.hpp **** 
 186:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 187:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sstatus, %0" : :"r"(mask));
 107              		.loc 2 187 5
 108              		.loc 2 187 54 is_stmt 0
 109 0070 93072000 		li	a5,2
 110              	#APP
 111              	# 187 "src/../h/Riscv.hpp" 1
 188              	}
 112              		csrs sstatus, a5
 113              	# 0 "" 2
 114              	.LVL6:
 115              	#NO_APP
 116              	.LBE44:
 117              	.LBE43:
  32:src/Riscv.cpp **** 
 118              		.loc 1 32 1
 119 0078 03348100 		ld	s0,8(sp)
 120              		.cfi_restore 8
 121              		.cfi_def_cfa 2, 16
 122 007c 13010101 		addi	sp,sp,16
 123              		.cfi_def_cfa_offset 0
 124 0080 67800000 		jr	ra
 125              		.cfi_endproc
 126              	.LFE29:
 128              		.align	2
 129              		.globl	_ZN5Riscv17disableInterruptsEv
 131              	_ZN5Riscv17disableInterruptsEv:
 132              	.LFB30:
  35:src/Riscv.cpp ****     mc_sstatus(Riscv::SSTATUS_SIE);
 133              		.loc 1 35 1 is_stmt 1
 134              		.cfi_startproc
 135 0084 130101FF 		addi	sp,sp,-16
 136              		.cfi_def_cfa_offset 16
 137 0088 23348100 		sd	s0,8(sp)
 138              		.cfi_offset 8, -8
 139 008c 13040101 		addi	s0,sp,16
 140              		.cfi_def_cfa 8, 0
  36:src/Riscv.cpp **** }
 141              		.loc 1 36 5
 142              	.LVL7:
 143              	.LBB45:
 144              	.LBB46:
 189:src/../h/Riscv.hpp **** 
 190:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 191:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sstatus, %0" : :"r"(mask));
 145              		.loc 2 191 5
 146              		.loc 2 191 54 is_stmt 0
 147 0090 93072000 		li	a5,2
 148              	#APP
 149              	# 191 "src/../h/Riscv.hpp" 1
 192              	}
 150              		csrc sstatus, a5
 151              	# 0 "" 2
 152              	.LVL8:
GAS LISTING /tmp/cc72vfn8.s 			page 11


 153              	#NO_APP
 154              	.LBE46:
 155              	.LBE45:
  37:src/Riscv.cpp **** 
 156              		.loc 1 37 1
 157 0098 03348100 		ld	s0,8(sp)
 158              		.cfi_restore 8
 159              		.cfi_def_cfa 2, 16
 160 009c 13010101 		addi	sp,sp,16
 161              		.cfi_def_cfa_offset 0
 162 00a0 67800000 		jr	ra
 163              		.cfi_endproc
 164              	.LFE30:
 166              		.align	2
 167              		.globl	_ZN5Riscv9endSystemEv
 169              	_ZN5Riscv9endSystemEv:
 170              	.LFB28:
  25:src/Riscv.cpp ****     //todo
 171              		.loc 1 25 1 is_stmt 1
 172              		.cfi_startproc
 173 00a4 130101FF 		addi	sp,sp,-16
 174              		.cfi_def_cfa_offset 16
 175 00a8 23341100 		sd	ra,8(sp)
 176 00ac 23308100 		sd	s0,0(sp)
 177              		.cfi_offset 1, -8
 178              		.cfi_offset 8, -16
 179 00b0 13040101 		addi	s0,sp,16
 180              		.cfi_def_cfa 8, 0
  27:src/Riscv.cpp **** }
 181              		.loc 1 27 5
  27:src/Riscv.cpp **** }
 182              		.loc 1 27 29 is_stmt 0
 183 00b4 97000000 		call	_ZN5Riscv17disableInterruptsEv
 183      E7800000 
 184              	.LVL9:
  28:src/Riscv.cpp **** 
 185              		.loc 1 28 1
 186 00bc 83308100 		ld	ra,8(sp)
 187              		.cfi_restore 1
 188 00c0 03340100 		ld	s0,0(sp)
 189              		.cfi_restore 8
 190              		.cfi_def_cfa 2, 16
 191 00c4 13010101 		addi	sp,sp,16
 192              		.cfi_def_cfa_offset 0
 193 00c8 67800000 		jr	ra
 194              		.cfi_endproc
 195              	.LFE28:
 197              		.align	2
 198              		.globl	_ZN5Riscv10popSppSpieEv
 200              	_ZN5Riscv10popSppSpieEv:
 201              	.LFB31:
  40:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
 202              		.loc 1 40 1 is_stmt 1
 203              		.cfi_startproc
 204 00cc 130101FF 		addi	sp,sp,-16
 205              		.cfi_def_cfa_offset 16
 206 00d0 23348100 		sd	s0,8(sp)
GAS LISTING /tmp/cc72vfn8.s 			page 12


 207              		.cfi_offset 8, -8
 208 00d4 13040101 		addi	s0,sp,16
 209              		.cfi_def_cfa 8, 0
  41:src/Riscv.cpp ****     __asm__ volatile ("sret");
 210              		.loc 1 41 5
  41:src/Riscv.cpp ****     __asm__ volatile ("sret");
 211              		.loc 1 41 39 is_stmt 0
 212              	#APP
 213              	# 41 "src/Riscv.cpp" 1
  42:src/Riscv.cpp **** }
 214              		csrw sepc, ra
 215              	# 0 "" 2
 216              		.loc 1 42 5 is_stmt 1
  42:src/Riscv.cpp **** }
 217              		.loc 1 42 30 is_stmt 0
 218              	# 42 "src/Riscv.cpp" 1
  43:src/Riscv.cpp **** 
 219              		sret
 220              	# 0 "" 2
 221              		.loc 1 43 1
 222              	#NO_APP
 223 00e0 03348100 		ld	s0,8(sp)
 224              		.cfi_restore 8
 225              		.cfi_def_cfa 2, 16
 226 00e4 13010101 		addi	sp,sp,16
 227              		.cfi_def_cfa_offset 0
 228 00e8 67800000 		jr	ra
 229              		.cfi_endproc
 230              	.LFE31:
 232              		.section	.rodata.str1.8,"aMS",@progbits,1
 233              		.align	3
 234              	.LC0:
 235 0000 456E642E 		.string	"End...\n"
 235      2E2E0A00 
 236              		.text
 237              		.align	2
 238              		.globl	_ZN5Riscv10kernelMainEv
 240              	_ZN5Riscv10kernelMainEv:
 241              	.LFB33:
 189:src/Riscv.cpp ****     initSystem();
 242              		.loc 1 189 1 is_stmt 1
 243              		.cfi_startproc
 244              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 245              		.cfi_lsda 0x1b,.LLSDA33
 246 00ec 130101FE 		addi	sp,sp,-32
 247              		.cfi_def_cfa_offset 32
 248 00f0 233C1100 		sd	ra,24(sp)
 249 00f4 23388100 		sd	s0,16(sp)
 250 00f8 23349100 		sd	s1,8(sp)
 251 00fc 23302101 		sd	s2,0(sp)
 252              		.cfi_offset 1, -8
 253              		.cfi_offset 8, -16
 254              		.cfi_offset 9, -24
 255              		.cfi_offset 18, -32
 256 0100 13040102 		addi	s0,sp,32
 257              		.cfi_def_cfa 8, 0
 190:src/Riscv.cpp **** 
GAS LISTING /tmp/cc72vfn8.s 			page 13


 258              		.loc 1 190 5
 259              	.LEHB0:
 190:src/Riscv.cpp **** 
 260              		.loc 1 190 15 is_stmt 0
 261 0104 97000000 		call	_ZN5Riscv10initSystemEv
 261      E7800000 
 262              	.LVL10:
 193:src/Riscv.cpp **** 
 263              		.loc 1 193 5 is_stmt 1
 193:src/Riscv.cpp **** 
 264              		.loc 1 193 21 is_stmt 0
 265 010c 97000000 		call	_ZN5Riscv16enableInterruptsEv
 265      E7800000 
 266              	.LVL11:
 195:src/Riscv.cpp ****     //PCB* userPCB = new PCB(&Riscv::myTestsWrapper, 0, kmalloc(DEFAULT_STACK_SIZE), DEFAULT_TIME_S
 267              		.loc 1 195 5 is_stmt 1
 195:src/Riscv.cpp ****     //PCB* userPCB = new PCB(&Riscv::myTestsWrapper, 0, kmalloc(DEFAULT_STACK_SIZE), DEFAULT_TIME_S
 268              		.loc 1 195 63 is_stmt 0
 269 0114 37150000 		li	a0,4096
 270 0118 97000000 		call	_Z7kmallocm@plt
 270      E7800000 
 271              	.LVL12:
 272 0120 13090500 		mv	s2,a0
 195:src/Riscv.cpp ****     //PCB* userPCB = new PCB(&Riscv::myTestsWrapper, 0, kmalloc(DEFAULT_STACK_SIZE), DEFAULT_TIME_S
 273              		.loc 1 195 103
 274 0124 13058005 		li	a0,88
 275 0128 97000000 		call	_ZN3PCBnwEm@plt
 275      E7800000 
 276              	.LVL13:
 277              	.LEHE0:
 278 0130 93040500 		mv	s1,a0
 279 0134 13072000 		li	a4,2
 280 0138 93060900 		mv	a3,s2
 281 013c 13060000 		li	a2,0
 282 0140 97050000 		lla	a1,_ZN5Riscv15userMainWrapperEPv
 282      93850500 
 283              	.LEHB1:
 284 0148 97000000 		call	_ZN3PCBC1EPFvPvES0_S0_m@plt
 284      E7800000 
 285              	.LVL14:
 286              	.LEHE1:
 197:src/Riscv.cpp ****     while(!userPCB->isFinished())
 287              		.loc 1 197 5 is_stmt 1 discriminator 2
 197:src/Riscv.cpp ****     while(!userPCB->isFinished())
 288              		.loc 1 197 19 is_stmt 0 discriminator 2
 289 0150 13850400 		mv	a0,s1
 290              	.LEHB2:
 291 0154 97000000 		call	_ZN3PCB5startEv@plt
 291      E7800000 
 292              	.LVL15:
 293              	.L15:
 198:src/Riscv.cpp ****     {
 294              		.loc 1 198 5 is_stmt 1
 198:src/Riscv.cpp ****     {
 295              		.loc 1 198 11
 198:src/Riscv.cpp ****     {
 296              		.loc 1 198 31 is_stmt 0
GAS LISTING /tmp/cc72vfn8.s 			page 14


 297 015c 13850400 		mv	a0,s1
 298 0160 97000000 		call	_ZN3PCB10isFinishedEv@plt
 298      E7800000 
 299              	.LVL16:
 198:src/Riscv.cpp ****     {
 300              		.loc 1 198 11
 301 0168 63180500 		bnez	a0,.L14
 200:src/Riscv.cpp ****     }
 302              		.loc 1 200 9 is_stmt 1
 200:src/Riscv.cpp ****     }
 303              		.loc 1 200 24 is_stmt 0
 304 016c 97000000 		call	thread_dispatch@plt
 304      E7800000 
 305              	.LVL17:
 198:src/Riscv.cpp ****     {
 306              		.loc 1 198 5
 307 0174 6FF09FFE 		j	.L15
 308              	.L14:
 203:src/Riscv.cpp ****     ::printString("End...\n");
 309              		.loc 1 203 5 is_stmt 1
 203:src/Riscv.cpp ****     ::printString("End...\n");
 310              		.loc 1 203 18 is_stmt 0
 311 0178 93071000 		li	a5,1
 312 017c 17070000 		sb	a5,.LANCHOR0,a4
 312      2300F700 
 204:src/Riscv.cpp ****     while(!PCB::consolePCB->isFinished())
 313              		.loc 1 204 5 is_stmt 1
 204:src/Riscv.cpp ****     while(!PCB::consolePCB->isFinished())
 314              		.loc 1 204 18 is_stmt 0
 315 0184 17050000 		lla	a0,.LC0
 315      13050500 
 316 018c 97000000 		call	_Z11printStringPKc@plt
 316      E7800000 
 317              	.LVL18:
 318              	.L17:
 205:src/Riscv.cpp ****     {
 319              		.loc 1 205 5 is_stmt 1
 205:src/Riscv.cpp ****     {
 320              		.loc 1 205 11
 205:src/Riscv.cpp ****     {
 321              		.loc 1 205 39 is_stmt 0
 322 0194 97070000 		la	a5,_ZN3PCB10consolePCBE
 322      83B70700 
 323 019c 03B50700 		ld	a0,0(a5)
 324 01a0 97000000 		call	_ZN3PCB10isFinishedEv@plt
 324      E7800000 
 325              	.LVL19:
 205:src/Riscv.cpp ****     {
 326              		.loc 1 205 11
 327 01a8 63180500 		bnez	a0,.L16
 207:src/Riscv.cpp ****     }
 328              		.loc 1 207 9 is_stmt 1
 207:src/Riscv.cpp ****     }
 329              		.loc 1 207 24 is_stmt 0
 330 01ac 97000000 		call	thread_dispatch@plt
 330      E7800000 
 331              	.LVL20:
GAS LISTING /tmp/cc72vfn8.s 			page 15


 332              	.LEHE2:
 205:src/Riscv.cpp ****     {
 333              		.loc 1 205 5
 334 01b4 6FF01FFE 		j	.L17
 335              	.L16:
 209:src/Riscv.cpp ****     endSystem();
 336              		.loc 1 209 5 is_stmt 1
 209:src/Riscv.cpp ****     endSystem();
 337              		.loc 1 209 22 is_stmt 0
 338 01b8 97000000 		call	_ZN5Riscv17disableInterruptsEv
 338      E7800000 
 339              	.LVL21:
 210:src/Riscv.cpp **** }
 340              		.loc 1 210 5 is_stmt 1
 210:src/Riscv.cpp **** }
 341              		.loc 1 210 14 is_stmt 0
 342 01c0 97000000 		call	_ZN5Riscv9endSystemEv
 342      E7800000 
 343              	.LVL22:
 211:src/Riscv.cpp **** 
 344              		.loc 1 211 1
 345 01c8 83308101 		ld	ra,24(sp)
 346              		.cfi_remember_state
 347              		.cfi_restore 1
 348 01cc 03340101 		ld	s0,16(sp)
 349              		.cfi_restore 8
 350              		.cfi_def_cfa 2, 32
 351 01d0 83348100 		ld	s1,8(sp)
 352              		.cfi_restore 9
 353              	.LVL23:
 354 01d4 03390100 		ld	s2,0(sp)
 355              		.cfi_restore 18
 356 01d8 13010102 		addi	sp,sp,32
 357              		.cfi_def_cfa_offset 0
 358 01dc 67800000 		jr	ra
 359              	.L19:
 360              		.cfi_restore_state
 361 01e0 13090500 		mv	s2,a0
 195:src/Riscv.cpp ****     //PCB* userPCB = new PCB(&Riscv::myTestsWrapper, 0, kmalloc(DEFAULT_STACK_SIZE), DEFAULT_TIME_S
 362              		.loc 1 195 103
 363 01e4 13850400 		mv	a0,s1
 364 01e8 97000000 		call	_ZN3PCBdlEPv@plt
 364      E7800000 
 365              	.LVL24:
 366 01f0 13050900 		mv	a0,s2
 367              	.LEHB3:
 368 01f4 97000000 		call	_Unwind_Resume@plt
 368      E7800000 
 369              	.LVL25:
 370              	.LEHE3:
 371              		.cfi_endproc
 372              	.LFE33:
 373              		.globl	__gxx_personality_v0
 374              		.section	.gcc_except_table,"a",@progbits
 375              	.LLSDA33:
 376 0000 FF       		.byte	0xff
 377 0001 FF       		.byte	0xff
GAS LISTING /tmp/cc72vfn8.s 			page 16


 378 0002 03       		.byte	0x3
 379 0003 34       		.byte	0x34
 380 0004 00000000 		.4byte	.LEHB0-.LFB33
 381 0008 00000000 		.4byte	.LEHE0-.LEHB0
 382 000c 00000000 		.4byte	0
 383 0010 00       		.byte	0
 384 0011 00000000 		.4byte	.LEHB1-.LFB33
 385 0015 00000000 		.4byte	.LEHE1-.LEHB1
 386 0019 00000000 		.4byte	.L19-.LFB33
 387 001d 00       		.byte	0
 388 001e 00000000 		.4byte	.LEHB2-.LFB33
 389 0022 00000000 		.4byte	.LEHE2-.LEHB2
 390 0026 00000000 		.4byte	0
 391 002a 00       		.byte	0
 392 002b 00000000 		.4byte	.LEHB3-.LFB33
 393 002f 00000000 		.4byte	.LEHE3-.LEHB3
 394 0033 00000000 		.4byte	0
 395 0037 00       		.byte	0
 396              		.text
 398              		.align	2
 399              		.globl	_ZN5Riscv14myTestsWrapperEPv
 401              	_ZN5Riscv14myTestsWrapperEPv:
 402              	.LFB35:
 217:src/Riscv.cpp **** 
 218:src/Riscv.cpp **** void Riscv::myTestsWrapper(void* p)
 219:src/Riscv.cpp **** {
 403              		.loc 1 219 1 is_stmt 1
 404              		.cfi_startproc
 405              	.LVL26:
 406 01fc 130101FF 		addi	sp,sp,-16
 407              		.cfi_def_cfa_offset 16
 408 0200 23341100 		sd	ra,8(sp)
 409 0204 23308100 		sd	s0,0(sp)
 410              		.cfi_offset 1, -8
 411              		.cfi_offset 8, -16
 412 0208 13040101 		addi	s0,sp,16
 413              		.cfi_def_cfa 8, 0
 220:src/Riscv.cpp ****     myTests();
 414              		.loc 1 220 5
 415              		.loc 1 220 12 is_stmt 0
 416 020c 97000000 		call	_Z7myTestsv@plt
 416      E7800000 
 417              	.LVL27:
 221:src/Riscv.cpp **** }
 418              		.loc 1 221 1
 419 0214 83308100 		ld	ra,8(sp)
 420              		.cfi_restore 1
 421 0218 03340100 		ld	s0,0(sp)
 422              		.cfi_restore 8
 423              		.cfi_def_cfa 2, 16
 424 021c 13010101 		addi	sp,sp,16
 425              		.cfi_def_cfa_offset 0
 426 0220 67800000 		jr	ra
 427              		.cfi_endproc
 428              	.LFE35:
 430              		.align	2
 431              		.globl	_ZN5Riscv22disableTimerInterruptsEv
GAS LISTING /tmp/cc72vfn8.s 			page 17


 433              	_ZN5Riscv22disableTimerInterruptsEv:
 434              	.LFB36:
 222:src/Riscv.cpp **** 
 223:src/Riscv.cpp **** void Riscv::disableTimerInterrupts()
 224:src/Riscv.cpp **** {
 435              		.loc 1 224 1 is_stmt 1
 436              		.cfi_startproc
 437 0224 130101FF 		addi	sp,sp,-16
 438              		.cfi_def_cfa_offset 16
 439 0228 23348100 		sd	s0,8(sp)
 440              		.cfi_offset 8, -8
 441 022c 13040101 		addi	s0,sp,16
 442              		.cfi_def_cfa 8, 0
 225:src/Riscv.cpp ****     uint64 x = 0x2;
 443              		.loc 1 225 5
 444              	.LVL28:
 226:src/Riscv.cpp ****     __asm__ volatile("csrc sie, %0"::"r"(x));
 445              		.loc 1 226 5
 446              		.loc 1 226 45 is_stmt 0
 447 0230 93072000 		li	a5,2
 448              	#APP
 449              	# 226 "src/Riscv.cpp" 1
 227              	}
 450              		csrc sie, a5
 451              	# 0 "" 2
 452              		.loc 1 227 1
 453              	#NO_APP
 454 0238 03348100 		ld	s0,8(sp)
 455              		.cfi_restore 8
 456              		.cfi_def_cfa 2, 16
 457 023c 13010101 		addi	sp,sp,16
 458              		.cfi_def_cfa_offset 0
 459 0240 67800000 		jr	ra
 460              		.cfi_endproc
 461              	.LFE36:
 463              		.align	2
 464              		.globl	_ZN5Riscv9idleRiscvEPv
 466              	_ZN5Riscv9idleRiscvEPv:
 467              	.LFB37:
 228:src/Riscv.cpp **** 
 229:src/Riscv.cpp **** void Riscv::idleRiscv(void* p)
 230:src/Riscv.cpp **** {
 468              		.loc 1 230 1 is_stmt 1
 469              		.cfi_startproc
 470              	.LVL29:
 471 0244 130101FF 		addi	sp,sp,-16
 472              		.cfi_def_cfa_offset 16
 473 0248 23348100 		sd	s0,8(sp)
 474              		.cfi_offset 8, -8
 475 024c 13040101 		addi	s0,sp,16
 476              		.cfi_def_cfa 8, 0
 477              	.L27:
 231:src/Riscv.cpp ****     while(true)
 478              		.loc 1 231 5 discriminator 1
 479              		.loc 1 231 5 discriminator 1
 480 0250 6F000000 		j	.L27
 481              		.cfi_endproc
GAS LISTING /tmp/cc72vfn8.s 			page 18


 482              	.LFE37:
 484              		.align	2
 485              		.globl	_ZN5Riscv13w_a0_sscratchEv
 487              	_ZN5Riscv13w_a0_sscratchEv:
 488              	.LFB38:
 232:src/Riscv.cpp ****     {
 233:src/Riscv.cpp **** 
 234:src/Riscv.cpp ****     }
 235:src/Riscv.cpp **** }
 236:src/Riscv.cpp **** 
 237:src/Riscv.cpp **** void Riscv::w_a0_sscratch()
 238:src/Riscv.cpp **** {
 489              		.loc 1 238 1
 490              		.cfi_startproc
 491 0254 130101FF 		addi	sp,sp,-16
 492              		.cfi_def_cfa_offset 16
 493 0258 23348100 		sd	s0,8(sp)
 494              		.cfi_offset 8, -8
 495 025c 13040101 		addi	s0,sp,16
 496              		.cfi_def_cfa 8, 0
 239:src/Riscv.cpp ****     uint64 a1Temp;
 497              		.loc 1 239 5
 240:src/Riscv.cpp ****     __asm__ volatile("mv %0, a1":"=r"(a1Temp));
 498              		.loc 1 240 5
 499              		.loc 1 240 47 is_stmt 0
 500              	#APP
 501              	# 240 "src/Riscv.cpp" 1
 241              	    __asm__ volatile("mv a1, %0"::"r"(PCB::running->sscratch));
 502              		mv a5, a1
 503              	# 0 "" 2
 504              	.LVL30:
 505              		.loc 1 241 5 is_stmt 1
 506              		.loc 1 241 53 is_stmt 0
 507              	#NO_APP
 508 0264 17070000 		la	a4,_ZN3PCB7runningE
 508      03370700 
 509 026c 03370700 		ld	a4,0(a4)
 510 0270 03370701 		ld	a4,16(a4)
 511              		.loc 1 241 63
 512              	#APP
 513              	# 241 "src/Riscv.cpp" 1
 242              	    __asm__ volatile("sd a0, 80(a1)");
 514              		mv a1, a4
 515              	# 0 "" 2
 516              		.loc 1 242 5 is_stmt 1
 517              		.loc 1 242 38 is_stmt 0
 518              	# 242 "src/Riscv.cpp" 1
 243              	    __asm__ volatile("mv a1,%0"::"r"(a1Temp));
 519              		sd a0, 80(a1)
 520              	# 0 "" 2
 521              		.loc 1 243 5 is_stmt 1
 522              		.loc 1 243 46 is_stmt 0
 523              	# 243 "src/Riscv.cpp" 1
 244              	}
 524              		mv a1,a5
 525              	# 0 "" 2
 526              		.loc 1 244 1
GAS LISTING /tmp/cc72vfn8.s 			page 19


 527              	#NO_APP
 528 0280 03348100 		ld	s0,8(sp)
 529              		.cfi_restore 8
 530              		.cfi_def_cfa 2, 16
 531 0284 13010101 		addi	sp,sp,16
 532              		.cfi_def_cfa_offset 0
 533 0288 67800000 		jr	ra
 534              		.cfi_endproc
 535              	.LFE38:
 537              		.align	2
 538              		.globl	_ZN5Riscv14changePrivModeEv
 540              	_ZN5Riscv14changePrivModeEv:
 541              	.LFB39:
 245:src/Riscv.cpp **** 
 246:src/Riscv.cpp **** void Riscv::changePrivMode()
 247:src/Riscv.cpp **** {
 542              		.loc 1 247 1 is_stmt 1
 543              		.cfi_startproc
 544 028c 130101FF 		addi	sp,sp,-16
 545              		.cfi_def_cfa_offset 16
 546 0290 23348100 		sd	s0,8(sp)
 547              		.cfi_offset 8, -8
 548 0294 13040101 		addi	s0,sp,16
 549              		.cfi_def_cfa 8, 0
 248:src/Riscv.cpp ****     if(PCB::running->systemThread)
 550              		.loc 1 248 5
 551              		.loc 1 248 22 is_stmt 0
 552 0298 97070000 		la	a5,_ZN3PCB7runningE
 552      83B70700 
 553 02a0 83B70700 		ld	a5,0(a5)
 554 02a4 83C70700 		lbu	a5,0(a5)
 555              		.loc 1 248 5
 556 02a8 638C0700 		beqz	a5,.L32
 249:src/Riscv.cpp ****         Riscv::ms_sstatus(Riscv::SSTATUS_SPP);
 557              		.loc 1 249 9 is_stmt 1
 558              	.LVL31:
 559              	.LBB47:
 560              	.LBB48:
 187:src/../h/Riscv.hpp **** }
 561              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 562              		.loc 2 187 54 is_stmt 0
 563 02ac 93070010 		li	a5,256
 564              	#APP
 565              	# 187 "src/../h/Riscv.hpp" 1
 566              		csrs sstatus, a5
 567              	# 0 "" 2
 568              	.LVL32:
 569              	#NO_APP
 570              	.L31:
 571              	.LBE48:
 572              	.LBE47:
 250:src/Riscv.cpp ****     else
 251:src/Riscv.cpp ****         Riscv::mc_sstatus(Riscv::SSTATUS_SPP);
 252:src/Riscv.cpp **** }
 573              		.loc 1 252 1
 574 02b4 03348100 		ld	s0,8(sp)
GAS LISTING /tmp/cc72vfn8.s 			page 20


 575              		.cfi_remember_state
 576              		.cfi_restore 8
 577              		.cfi_def_cfa 2, 16
 578 02b8 13010101 		addi	sp,sp,16
 579              		.cfi_def_cfa_offset 0
 580 02bc 67800000 		jr	ra
 581              	.L32:
 582              		.cfi_restore_state
 251:src/Riscv.cpp **** }
 583              		.loc 1 251 9 is_stmt 1
 584              	.LVL33:
 585              	.LBB49:
 586              	.LBB50:
 191:src/../h/Riscv.hpp **** }
 587              		.loc 2 191 5
 191:src/../h/Riscv.hpp **** }
 588              		.loc 2 191 54 is_stmt 0
 589 02c0 93070010 		li	a5,256
 590              	#APP
 591              	# 191 "src/../h/Riscv.hpp" 1
 592              		csrc sstatus, a5
 593              	# 0 "" 2
 594              	.LVL34:
 595              	#NO_APP
 596              	.LBE50:
 597              	.LBE49:
 598              		.loc 1 252 1
 599 02c8 6FF0DFFE 		j	.L31
 600              		.cfi_endproc
 601              	.LFE39:
 603              		.section	.rodata.str1.8
 604              		.align	3
 605              	.LC1:
 606 0008 6F706572 		.string	"operation interrupt\n"
 606      6174696F 
 606      6E20696E 
 606      74657272 
 606      7570740A 
 607 001d 000000   		.align	3
 608              	.LC2:
 609 0020 72656164 		.string	"read interrupt\n"
 609      20696E74 
 609      65727275 
 609      70740A00 
 610              		.align	3
 611              	.LC3:
 612 0030 77726974 		.string	"write interrupt\n"
 612      6520696E 
 612      74657272 
 612      7570740A 
 612      00
 613              		.text
 614              		.align	2
 615              		.globl	_ZN5Riscv20handleSupervisorTrapEv
 617              	_ZN5Riscv20handleSupervisorTrapEv:
 618              	.LFB32:
  46:src/Riscv.cpp ****     __asm__ volatile("mv %0, a4" : "=r"(PCB::savedRegA4));
GAS LISTING /tmp/cc72vfn8.s 			page 21


 619              		.loc 1 46 1 is_stmt 1
 620              		.cfi_startproc
 621 02cc 130101F9 		addi	sp,sp,-112
 622              		.cfi_def_cfa_offset 112
 623 02d0 23341106 		sd	ra,104(sp)
 624 02d4 23308106 		sd	s0,96(sp)
 625 02d8 233C9104 		sd	s1,88(sp)
 626              		.cfi_offset 1, -8
 627              		.cfi_offset 8, -16
 628              		.cfi_offset 9, -24
 629 02dc 13040107 		addi	s0,sp,112
 630              		.cfi_def_cfa 8, 0
  47:src/Riscv.cpp ****     __asm__ volatile("csrr %0, sscratch":"=r"(PCB::running->sscratch));
 631              		.loc 1 47 5
  47:src/Riscv.cpp ****     __asm__ volatile("csrr %0, sscratch":"=r"(PCB::running->sscratch));
 632              		.loc 1 47 58 is_stmt 0
 633              	#APP
 634              	# 47 "src/Riscv.cpp" 1
 635              		mv a4, a4
 636              	# 0 "" 2
 637              	#NO_APP
 638 02e4 97070000 		la	a5,_ZN3PCB10savedRegA4E
 638      83B70700 
 639 02ec 23B0E700 		sd	a4,0(a5)
  48:src/Riscv.cpp **** 
 640              		.loc 1 48 5 is_stmt 1
  48:src/Riscv.cpp **** 
 641              		.loc 1 48 61 is_stmt 0
 642 02f0 97070000 		la	a5,_ZN3PCB7runningE
 642      83B70700 
 643 02f8 83B70700 		ld	a5,0(a5)
  48:src/Riscv.cpp **** 
 644              		.loc 1 48 71
 645              	#APP
 646              	# 48 "src/Riscv.cpp" 1
 647              		csrr a4, sscratch
 648              	# 0 "" 2
 649              	#NO_APP
 650 0300 23B8E700 		sd	a4,16(a5)
  50:src/Riscv.cpp **** 
 651              		.loc 1 50 5 is_stmt 1
 652              	.LBB51:
 653              	.LBB52:
 112:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
 654              		.loc 2 112 5
 113:src/../h/Riscv.hpp ****     return scause;
 655              		.loc 2 113 5
 113:src/../h/Riscv.hpp ****     return scause;
 656              		.loc 2 113 55 is_stmt 0
 657              	#APP
 658              	# 113 "src/../h/Riscv.hpp" 1
 659              		csrr a5, scause
 660              	# 0 "" 2
 661              	#NO_APP
 662 0308 233CF4FA 		sd	a5,-72(s0)
 114:src/../h/Riscv.hpp **** }
 663              		.loc 2 114 5 is_stmt 1
GAS LISTING /tmp/cc72vfn8.s 			page 22


 114:src/../h/Riscv.hpp **** }
 664              		.loc 2 114 12 is_stmt 0
 665 030c 833784FB 		ld	a5,-72(s0)
 666              	.LVL35:
 667              	.LBE52:
 668              	.LBE51:
  52:src/Riscv.cpp ****     {
 669              		.loc 1 52 5 is_stmt 1
 670              	.LBB53:
 671 0310 13079000 		li	a4,9
 672 0314 636EF704 		bgtu	a5,a4,.L36
 673 0318 13078000 		li	a4,8
 674 031c 63F4E71C 		bgeu	a5,a4,.L37
 675 0320 13075000 		li	a4,5
 676 0324 6382E71A 		beq	a5,a4,.L38
 677 0328 13077000 		li	a4,7
 678 032c 6390E702 		bne	a5,a4,.L64
 679              	.LBB54:
 116:src/Riscv.cpp ****         {
 680              		.loc 1 116 9
 117:src/Riscv.cpp ****             trapPrintString("write interrupt\n");
 681              		.loc 1 117 9
 118:src/Riscv.cpp ****             thread_exit();
 682              		.loc 1 118 13
 118:src/Riscv.cpp ****             thread_exit();
 683              		.loc 1 118 28 is_stmt 0
 684 0330 17050000 		lla	a0,.LC3
 684      13050500 
 685 0338 97000000 		call	_Z15trapPrintStringPKc@plt
 685      E7800000 
 686              	.LVL36:
 119:src/Riscv.cpp ****             break;
 687              		.loc 1 119 13 is_stmt 1
 119:src/Riscv.cpp ****             break;
 688              		.loc 1 119 24 is_stmt 0
 689 0340 97000000 		call	thread_exit@plt
 689      E7800000 
 690              	.LVL37:
 120:src/Riscv.cpp ****         }
 691              		.loc 1 120 13 is_stmt 1
 692 0348 6F000013 		j	.L35
 693              	.LVL38:
 694              	.L64:
 695              	.LBE54:
  52:src/Riscv.cpp ****     {
 696              		.loc 1 52 5 is_stmt 0
 697 034c 13072000 		li	a4,2
 698 0350 6394E712 		bne	a5,a4,.L35
 699              	.LBB85:
 104:src/Riscv.cpp ****         {
 700              		.loc 1 104 9 is_stmt 1
 105:src/Riscv.cpp ****             trapPrintString("operation interrupt\n");
 701              		.loc 1 105 9
 106:src/Riscv.cpp ****             thread_exit();
 702              		.loc 1 106 13
 106:src/Riscv.cpp ****             thread_exit();
 703              		.loc 1 106 28 is_stmt 0
GAS LISTING /tmp/cc72vfn8.s 			page 23


 704 0354 17050000 		lla	a0,.LC1
 704      13050500 
 705 035c 97000000 		call	_Z15trapPrintStringPKc@plt
 705      E7800000 
 706              	.LVL39:
 107:src/Riscv.cpp ****             break;
 707              		.loc 1 107 13 is_stmt 1
 107:src/Riscv.cpp ****             break;
 708              		.loc 1 107 24 is_stmt 0
 709 0364 97000000 		call	thread_exit@plt
 709      E7800000 
 710              	.LVL40:
 108:src/Riscv.cpp ****         }
 711              		.loc 1 108 13 is_stmt 1
 712 036c 6F00C010 		j	.L35
 713              	.LVL41:
 714              	.L36:
 715              	.LBE85:
  52:src/Riscv.cpp ****     {
 716              		.loc 1 52 5 is_stmt 0
 717 0370 1307F0FF 		li	a4,-1
 718 0374 1317F703 		slli	a4,a4,63
 719 0378 13071700 		addi	a4,a4,1
 720 037c 638AE706 		beq	a5,a4,.L42
 721 0380 1307F0FF 		li	a4,-1
 722 0384 1317F703 		slli	a4,a4,63
 723 0388 13079700 		addi	a4,a4,9
 724 038c 6396E70E 		bne	a5,a4,.L35
 725              	.LBB86:
  77:src/Riscv.cpp ****         {
 726              		.loc 1 77 9 is_stmt 1
  78:src/Riscv.cpp ****             uint64 x = CONSOLE_STATUS;
 727              		.loc 1 78 9
 728              	.LBB55:
  79:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0"::"r"(x));
 729              		.loc 1 79 13
  79:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0"::"r"(x));
 730              		.loc 1 79 20 is_stmt 0
 731 0390 97070000 		la	a5,CONSOLE_STATUS
 731      83B70700 
 732              	.LVL42:
 733 0398 83B70700 		ld	a5,0(a5)
 734              	.LVL43:
  80:src/Riscv.cpp ****             __asm__ volatile("lb a1, 0(a0)");
 735              		.loc 1 80 13 is_stmt 1
  80:src/Riscv.cpp ****             __asm__ volatile("lb a1, 0(a0)");
 736              		.loc 1 80 50 is_stmt 0
 737              	#APP
 738              	# 80 "src/Riscv.cpp" 1
  81:src/Riscv.cpp ****             uint64 operation;
 739              		mv a0, a5
 740              	# 0 "" 2
 741              		.loc 1 81 13 is_stmt 1
  81:src/Riscv.cpp ****             uint64 operation;
 742              		.loc 1 81 45 is_stmt 0
 743              	# 81 "src/Riscv.cpp" 1
  82:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" :  "=r"(operation));
GAS LISTING /tmp/cc72vfn8.s 			page 24


 744              		lb a1, 0(a0)
 745              	# 0 "" 2
 746              		.loc 1 82 13 is_stmt 1
  83:src/Riscv.cpp ****             if(operation & KConsole::STATUS_READ_MASK)
 747              		.loc 1 83 13
  83:src/Riscv.cpp ****             if(operation & KConsole::STATUS_READ_MASK)
 748              		.loc 1 83 61 is_stmt 0
 749              	# 83 "src/Riscv.cpp" 1
 750              		mv a5, a1
 751              	# 0 "" 2
 752              	.LVL44:
  84:src/Riscv.cpp ****             {
 753              		.loc 1 84 13 is_stmt 1
 754              	#NO_APP
 755              	.LBB56:
  84:src/Riscv.cpp ****             {
 756              		.loc 1 84 26 is_stmt 0
 757 03a8 93F71700 		andi	a5,a5,1
 758              	.LVL45:
  84:src/Riscv.cpp ****             {
 759              		.loc 1 84 13
 760 03ac 63880702 		beqz	a5,.L45
 761              	.LBB57:
  86:src/Riscv.cpp ****                 __asm__ volatile("mv a0, %0"::"r"(x));
 762              		.loc 1 86 17 is_stmt 1
  86:src/Riscv.cpp ****                 __asm__ volatile("mv a0, %0"::"r"(x));
 763              		.loc 1 86 19 is_stmt 0
 764 03b0 97070000 		la	a5,CONSOLE_TX_DATA
 764      83B70700 
 765 03b8 83B70700 		ld	a5,0(a5)
 766              	.LVL46:
  87:src/Riscv.cpp ****                 __asm__ volatile("lb a1,0(a0)");
 767              		.loc 1 87 17 is_stmt 1
  87:src/Riscv.cpp ****                 __asm__ volatile("lb a1,0(a0)");
 768              		.loc 1 87 54 is_stmt 0
 769              	#APP
 770              	# 87 "src/Riscv.cpp" 1
  88:src/Riscv.cpp ****                 char c;
 771              		mv a0, a5
 772              	# 0 "" 2
 773              		.loc 1 88 17 is_stmt 1
  88:src/Riscv.cpp ****                 char c;
 774              		.loc 1 88 48 is_stmt 0
 775              	# 88 "src/Riscv.cpp" 1
  89:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" :  "=r"(c));
 776              		lb a1,0(a0)
 777              	# 0 "" 2
 778              		.loc 1 89 17 is_stmt 1
  90:src/Riscv.cpp **** 
 779              		.loc 1 90 17
  90:src/Riscv.cpp **** 
 780              		.loc 1 90 57 is_stmt 0
 781              	# 90 "src/Riscv.cpp" 1
 782              		mv a0, a1
 783              	# 0 "" 2
 784              	#NO_APP
 785 03c8 9374F50F 		andi	s1,a0,0xff
GAS LISTING /tmp/cc72vfn8.s 			page 25


 786              	.LVL47:
  92:src/Riscv.cpp ****                 {
 787              		.loc 1 92 17 is_stmt 1
  92:src/Riscv.cpp ****                 {
 788              		.loc 1 92 42 is_stmt 0
 789 03cc 97070000 		la	a5,_ZN8KConsole11pendingGetcE
 789      83B70700 
 790              	.LVL48:
 791 03d4 83B70700 		ld	a5,0(a5)
  92:src/Riscv.cpp ****                 {
 792              		.loc 1 92 17
 793 03d8 6392070C 		bnez	a5,.L65
 794              	.LVL49:
 795              	.L45:
 796              	.LBE57:
 797              	.LBE56:
 100:src/Riscv.cpp **** 
 798              		.loc 1 100 13 is_stmt 1
 100:src/Riscv.cpp **** 
 799              		.loc 1 100 26 is_stmt 0
 800 03dc 97000000 		call	plic_claim@plt
 800      E7800000 
 801              	.LVL50:
 802 03e4 97000000 		call	plic_complete@plt
 802      E7800000 
 803              	.LVL51:
 102:src/Riscv.cpp ****         }
 804              		.loc 1 102 13 is_stmt 1
 805 03ec 6F00C008 		j	.L35
 806              	.LVL52:
 807              	.L42:
 808              	.LBE55:
  54:src/Riscv.cpp ****         {
 809              		.loc 1 54 9
  55:src/Riscv.cpp ****             uint64 volatile sepc = Riscv::r_sepc();
 810              		.loc 1 55 9
 811              	.LBB60:
  56:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 812              		.loc 1 56 13
 813              	.LBB61:
 814              	.LBB62:
 122:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 815              		.loc 2 122 5
 123:src/../h/Riscv.hpp ****     return sepc;
 816              		.loc 2 123 5
 123:src/../h/Riscv.hpp ****     return sepc;
 817              		.loc 2 123 51 is_stmt 0
 818              	#APP
 819              	# 123 "src/../h/Riscv.hpp" 1
 820              		csrr a5, sepc
 821              	# 0 "" 2
 822              	.LVL53:
 823              	#NO_APP
 824 03f4 2334F4FC 		sd	a5,-56(s0)
 124:src/../h/Riscv.hpp **** }
 825              		.loc 2 124 5 is_stmt 1
 124:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/cc72vfn8.s 			page 26


 826              		.loc 2 124 12 is_stmt 0
 827 03f8 833784FC 		ld	a5,-56(s0)
 828              	.LBE62:
 829              	.LBE61:
  56:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 830              		.loc 1 56 50
 831 03fc 233CF4F8 		sd	a5,-104(s0)
  57:src/Riscv.cpp ****             mc_sip(Riscv::SIP_SSIP);
 832              		.loc 1 57 13 is_stmt 1
 833              	.LBB63:
 834              	.LBB64:
 193:src/../h/Riscv.hpp **** 
 194:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sstatus() {
 195:src/../h/Riscv.hpp ****     uint64 volatile sstatus;
 835              		.loc 2 195 5
 196:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 836              		.loc 2 196 5
 837              		.loc 2 196 57 is_stmt 0
 838              	#APP
 839              	# 196 "src/../h/Riscv.hpp" 1
 197              	    return sstatus;
 840              		csrr a5, sstatus
 841              	# 0 "" 2
 842              	#NO_APP
 843 0404 2330F4FC 		sd	a5,-64(s0)
 844              		.loc 2 197 5 is_stmt 1
 845              		.loc 2 197 12 is_stmt 0
 846 0408 833704FC 		ld	a5,-64(s0)
 847              	.LBE64:
 848              	.LBE63:
  57:src/Riscv.cpp ****             mc_sip(Riscv::SIP_SSIP);
 849              		.loc 1 57 56
 850 040c 2330F4FA 		sd	a5,-96(s0)
  58:src/Riscv.cpp ****             //trapPrintString("timerInterrupt\n");
 851              		.loc 1 58 13 is_stmt 1
 852              	.LVL54:
 853              	.LBB65:
 854              	.LBB66:
 161:src/../h/Riscv.hpp **** }
 855              		.loc 2 161 5
 161:src/../h/Riscv.hpp **** }
 856              		.loc 2 161 50 is_stmt 0
 857 0410 93072000 		li	a5,2
 858              	#APP
 859              	# 161 "src/../h/Riscv.hpp" 1
 860              		csrc sip, a5
 861              	# 0 "" 2
 862              	.LVL55:
 863              	#NO_APP
 864              	.LBE66:
 865              	.LBE65:
  61:src/Riscv.cpp ****             //trapPrintInt(totalTime);
 866              		.loc 1 61 13 is_stmt 1
  61:src/Riscv.cpp ****             //trapPrintInt(totalTime);
 867              		.loc 1 61 22 is_stmt 0
 868 0418 17070000 		lla	a4,.LANCHOR0
 868      13070700 
GAS LISTING /tmp/cc72vfn8.s 			page 27


 869 0420 83378700 		ld	a5,8(a4)
 870 0424 93871700 		addi	a5,a5,1
 871 0428 2334F700 		sd	a5,8(a4)
  64:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
 872              		.loc 1 64 13 is_stmt 1
  64:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
 873              		.loc 1 64 34 is_stmt 0
 874 042c 97040000 		la	s1,_ZN3PCB16timeSliceCounterE
 874      83B40400 
 875 0434 83B70400 		ld	a5,0(s1)
 876 0438 93871700 		addi	a5,a5,1
 877 043c 23B0F400 		sd	a5,0(s1)
  65:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
 878              		.loc 1 65 13 is_stmt 1
  65:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
 879              		.loc 1 65 40 is_stmt 0
 880 0440 97000000 		call	_ZN12SleepPCBList13tryToWakePCBsEv@plt
 880      E7800000 
 881              	.LVL56:
  66:src/Riscv.cpp ****             {
 882              		.loc 1 66 13 is_stmt 1
  66:src/Riscv.cpp ****             {
 883              		.loc 1 66 68 is_stmt 0
 884 0448 97070000 		la	a5,_ZN3PCB7runningE
 884      83B70700 
 885 0450 83B70700 		ld	a5,0(a5)
 886              	.LVL57:
 887              	.LBB67:
 888              	.LBB68:
 889              		.file 3 "src/../h/PCB.hpp"
   1:src/../h/PCB.hpp **** //
   2:src/../h/PCB.hpp **** // Created by os on 4/27/22.
   3:src/../h/PCB.hpp **** //
   4:src/../h/PCB.hpp **** 
   5:src/../h/PCB.hpp **** #ifndef PROJECT_BASE_V1_0_PCB_HPP
   6:src/../h/PCB.hpp **** #define PROJECT_BASE_V1_0_PCB_HPP
   7:src/../h/PCB.hpp **** 
   8:src/../h/PCB.hpp **** #include "../lib/hw.h"
   9:src/../h/PCB.hpp **** #include "Scheduler.hpp"
  10:src/../h/PCB.hpp **** #include "Riscv.hpp"
  11:src/../h/PCB.hpp **** 
  12:src/../h/PCB.hpp **** class PCB
  13:src/../h/PCB.hpp **** {
  14:src/../h/PCB.hpp **** public:
  15:src/../h/PCB.hpp ****     static uint64 savedRegA4;
  16:src/../h/PCB.hpp **** 
  17:src/../h/PCB.hpp ****     using Body = void (*)(void*);
  18:src/../h/PCB.hpp **** 
  19:src/../h/PCB.hpp ****     PCB(Body body,  void* args, void* stack_space, uint64 timeSlice);
  20:src/../h/PCB.hpp ****     ~PCB();
  21:src/../h/PCB.hpp **** 
  22:src/../h/PCB.hpp ****     void start();
  23:src/../h/PCB.hpp ****     static void dispatch();
  24:src/../h/PCB.hpp ****     static void sleep(time_t);
  25:src/../h/PCB.hpp **** 
  26:src/../h/PCB.hpp ****     static PCB* running;
  27:src/../h/PCB.hpp **** 
GAS LISTING /tmp/cc72vfn8.s 			page 28


  28:src/../h/PCB.hpp ****     static uint64 timeSliceCounter;
  29:src/../h/PCB.hpp ****     uint64 getTimeSlice() { return timeSlice;}
 890              		.loc 3 29 29 is_stmt 1
 891              		.loc 3 29 36 is_stmt 0
 892 0454 83B78701 		ld	a5,24(a5)
 893              	.LVL58:
 894              	.LBE68:
 895              	.LBE67:
  66:src/Riscv.cpp ****             {
 896              		.loc 1 66 39
 897 0458 03B70400 		ld	a4,0(s1)
  66:src/Riscv.cpp ****             {
 898              		.loc 1 66 13
 899 045c 6378F702 		bgeu	a4,a5,.L66
 900              	.L44:
  72:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 901              		.loc 1 72 13 is_stmt 1
  72:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 902              		.loc 1 72 29 is_stmt 0
 903 0460 833704FA 		ld	a5,-96(s0)
 904              	.LVL59:
 905              	.LBB69:
 906              	.LBB70:
 198:src/../h/Riscv.hpp **** }
 199:src/../h/Riscv.hpp **** 
 200:src/../h/Riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus) {
 201:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sstatus, %0" : :"r"(sstatus));
 907              		.loc 2 201 5 is_stmt 1
 908              		.loc 2 201 57 is_stmt 0
 909              	#APP
 910              	# 201 "src/../h/Riscv.hpp" 1
 202              	}
 911              		csrw sstatus, a5
 912              	# 0 "" 2
 913              	.LVL60:
 914              	#NO_APP
 915              	.LBE70:
 916              	.LBE69:
  73:src/Riscv.cpp ****             changePrivMode();
 917              		.loc 1 73 13 is_stmt 1
  73:src/Riscv.cpp ****             changePrivMode();
 918              		.loc 1 73 26 is_stmt 0
 919 0468 833784F9 		ld	a5,-104(s0)
 920              	.LVL61:
 921              	.LBB71:
 922              	.LBB72:
 128:src/../h/Riscv.hpp **** }
 923              		.loc 2 128 5 is_stmt 1
 128:src/../h/Riscv.hpp **** }
 924              		.loc 2 128 51 is_stmt 0
 925              	#APP
 926              	# 128 "src/../h/Riscv.hpp" 1
 927              		csrw sepc, a5
 928              	# 0 "" 2
 929              	.LVL62:
 930              	#NO_APP
 931              	.LBE72:
GAS LISTING /tmp/cc72vfn8.s 			page 29


 932              	.LBE71:
  74:src/Riscv.cpp ****             break;
 933              		.loc 1 74 13 is_stmt 1
  74:src/Riscv.cpp ****             break;
 934              		.loc 1 74 27 is_stmt 0
 935 0470 97000000 		call	_ZN5Riscv14changePrivModeEv
 935      E7800000 
 936              	.LVL63:
  75:src/Riscv.cpp ****         }
 937              		.loc 1 75 13 is_stmt 1
 938              	.L35:
 939              	.LBE60:
 940              	.LBE86:
 941              	.LBE53:
 186:src/Riscv.cpp **** 
 942              		.loc 1 186 1 is_stmt 0
 943 0478 83308106 		ld	ra,104(sp)
 944              		.cfi_remember_state
 945              		.cfi_restore 1
 946 047c 03340106 		ld	s0,96(sp)
 947              		.cfi_restore 8
 948              		.cfi_def_cfa 2, 112
 949 0480 83348105 		ld	s1,88(sp)
 950              		.cfi_restore 9
 951 0484 13010107 		addi	sp,sp,112
 952              		.cfi_def_cfa_offset 0
 953 0488 67800000 		jr	ra
 954              	.L66:
 955              		.cfi_restore_state
 956              	.LBB89:
 957              	.LBB87:
 958              	.LBB73:
  68:src/Riscv.cpp ****                 PCB::dispatch();
 959              		.loc 1 68 17 is_stmt 1
  68:src/Riscv.cpp ****                 PCB::dispatch();
 960              		.loc 1 68 39 is_stmt 0
 961 048c 23B00400 		sd	zero,0(s1)
  69:src/Riscv.cpp ****             }
 962              		.loc 1 69 17 is_stmt 1
  69:src/Riscv.cpp ****             }
 963              		.loc 1 69 30 is_stmt 0
 964 0490 97000000 		call	_ZN3PCB8dispatchEv@plt
 964      E7800000 
 965              	.LVL64:
 966 0498 6FF09FFC 		j	.L44
 967              	.LVL65:
 968              	.L65:
 969              	.LBE73:
 970              	.LBB74:
 971              	.LBB59:
 972              	.LBB58:
  94:src/Riscv.cpp ****                     KConsole::putCharacterInput(c);
 973              		.loc 1 94 21 is_stmt 1
  94:src/Riscv.cpp ****                     KConsole::putCharacterInput(c);
 974              		.loc 1 94 42 is_stmt 0
 975 049c 9387F7FF 		addi	a5,a5,-1
 976 04a0 17070000 		la	a4,_ZN8KConsole11pendingGetcE
GAS LISTING /tmp/cc72vfn8.s 			page 30


 976      03370700 
 977 04a8 2330F700 		sd	a5,0(a4)
  95:src/Riscv.cpp ****                     KConsole::putCharacterOutput(c);
 978              		.loc 1 95 21 is_stmt 1
  95:src/Riscv.cpp ****                     KConsole::putCharacterOutput(c);
 979              		.loc 1 95 48 is_stmt 0
 980 04ac 13850400 		mv	a0,s1
 981              	.LVL66:
 982 04b0 97000000 		call	_ZN8KConsole17putCharacterInputEc@plt
 982      E7800000 
 983              	.LVL67:
  96:src/Riscv.cpp ****                 }
 984              		.loc 1 96 21 is_stmt 1
  96:src/Riscv.cpp ****                 }
 985              		.loc 1 96 49 is_stmt 0
 986 04b8 13850400 		mv	a0,s1
 987 04bc 97000000 		call	_ZN8KConsole18putCharacterOutputEc@plt
 987      E7800000 
 988              	.LVL68:
 989 04c4 6FF09FF1 		j	.L45
 990              	.LVL69:
 991              	.L38:
 992              	.LBE58:
 993              	.LBE59:
 994              	.LBE74:
 110:src/Riscv.cpp ****         {
 995              		.loc 1 110 9 is_stmt 1
 111:src/Riscv.cpp ****             trapPrintString("read interrupt\n");
 996              		.loc 1 111 9
 112:src/Riscv.cpp ****             thread_exit();
 997              		.loc 1 112 13
 112:src/Riscv.cpp ****             thread_exit();
 998              		.loc 1 112 28 is_stmt 0
 999 04c8 17050000 		lla	a0,.LC2
 999      13050500 
 1000 04d0 97000000 		call	_Z15trapPrintStringPKc@plt
 1000      E7800000 
 1001              	.LVL70:
 113:src/Riscv.cpp ****             break;
 1002              		.loc 1 113 13 is_stmt 1
 113:src/Riscv.cpp ****             break;
 1003              		.loc 1 113 24 is_stmt 0
 1004 04d8 97000000 		call	thread_exit@plt
 1004      E7800000 
 1005              	.LVL71:
 114:src/Riscv.cpp ****         }
 1006              		.loc 1 114 13 is_stmt 1
 1007 04e0 6FF09FF9 		j	.L35
 1008              	.LVL72:
 1009              	.L37:
 122:src/Riscv.cpp ****         case ecallUserInterrupt:
 1010              		.loc 1 122 9
 123:src/Riscv.cpp ****         {
 1011              		.loc 1 123 9
 124:src/Riscv.cpp ****             uint64 operation;
 1012              		.loc 1 124 9
 1013              	.LBB75:
GAS LISTING /tmp/cc72vfn8.s 			page 31


 125:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
 1014              		.loc 1 125 13
 126:src/Riscv.cpp **** 
 1015              		.loc 1 126 13
 126:src/Riscv.cpp **** 
 1016              		.loc 1 126 61 is_stmt 0
 1017              	#APP
 1018              	# 126 "src/Riscv.cpp" 1
 1019              		mv a5, a0
 1020              	# 0 "" 2
 1021              	.LVL73:
 128:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 1022              		.loc 1 128 13 is_stmt 1
 1023              	#NO_APP
 1024              	.LBB76:
 1025              	.LBB77:
 122:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 1026              		.loc 2 122 5
 123:src/../h/Riscv.hpp ****     return sepc;
 1027              		.loc 2 123 5
 123:src/../h/Riscv.hpp ****     return sepc;
 1028              		.loc 2 123 51 is_stmt 0
 1029              	#APP
 1030              	# 123 "src/../h/Riscv.hpp" 1
 1031              		csrr a4, sepc
 1032              	# 0 "" 2
 1033              	#NO_APP
 1034 04ec 233CE4FC 		sd	a4,-40(s0)
 124:src/../h/Riscv.hpp **** }
 1035              		.loc 2 124 5 is_stmt 1
 124:src/../h/Riscv.hpp **** }
 1036              		.loc 2 124 12 is_stmt 0
 1037 04f0 033784FD 		ld	a4,-40(s0)
 1038              	.LBE77:
 1039              	.LBE76:
 128:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 1040              		.loc 1 128 52
 1041 04f4 13074700 		addi	a4,a4,4
 128:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 1042              		.loc 1 128 54
 1043 04f8 2334E4FA 		sd	a4,-88(s0)
 129:src/Riscv.cpp **** 
 1044              		.loc 1 129 13 is_stmt 1
 1045              	.LBB78:
 1046              	.LBB79:
 195:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 1047              		.loc 2 195 5
 196:src/../h/Riscv.hpp ****     return sstatus;
 1048              		.loc 2 196 5
 196:src/../h/Riscv.hpp ****     return sstatus;
 1049              		.loc 2 196 57 is_stmt 0
 1050              	#APP
 1051              	# 196 "src/../h/Riscv.hpp" 1
 1052              		csrr a4, sstatus
 1053              	# 0 "" 2
 1054              	#NO_APP
 1055 0500 2338E4FC 		sd	a4,-48(s0)
GAS LISTING /tmp/cc72vfn8.s 			page 32


 197:src/../h/Riscv.hpp **** }
 1056              		.loc 2 197 5 is_stmt 1
 197:src/../h/Riscv.hpp **** }
 1057              		.loc 2 197 12 is_stmt 0
 1058 0504 033704FD 		ld	a4,-48(s0)
 1059              	.LBE79:
 1060              	.LBE78:
 129:src/Riscv.cpp **** 
 1061              		.loc 1 129 56
 1062 0508 2338E4FA 		sd	a4,-80(s0)
 131:src/Riscv.cpp ****             {
 1063              		.loc 1 131 13 is_stmt 1
 1064 050c 13073004 		li	a4,67
 1065 0510 6364F702 		bgtu	a5,a4,.L46
 1066 0514 93972700 		slli	a5,a5,2
 1067              	.LVL74:
 1068 0518 17070000 		lla	a4,.L48
 1068      13070700 
 1069 0520 B387E700 		add	a5,a5,a4
 1070 0524 83A70700 		lw	a5,0(a5)
 1071 0528 B387E700 		add	a5,a5,a4
 1072 052c 67800700 		jr	a5
 1073              		.section	.rodata
 1074              		.align	2
 1075              		.align	2
 1076              	.L48:
 1077 0000 00000000 		.word	.L46-.L48
 1078 0004 00000000 		.word	.L62-.L48
 1079 0008 00000000 		.word	.L61-.L48
 1080 000c 00000000 		.word	.L46-.L48
 1081 0010 00000000 		.word	.L46-.L48
 1082 0014 00000000 		.word	.L46-.L48
 1083 0018 00000000 		.word	.L46-.L48
 1084 001c 00000000 		.word	.L46-.L48
 1085 0020 00000000 		.word	.L46-.L48
 1086 0024 00000000 		.word	.L46-.L48
 1087 0028 00000000 		.word	.L46-.L48
 1088 002c 00000000 		.word	.L46-.L48
 1089 0030 00000000 		.word	.L46-.L48
 1090 0034 00000000 		.word	.L46-.L48
 1091 0038 00000000 		.word	.L46-.L48
 1092 003c 00000000 		.word	.L46-.L48
 1093 0040 00000000 		.word	.L46-.L48
 1094 0044 00000000 		.word	.L60-.L48
 1095 0048 00000000 		.word	.L59-.L48
 1096 004c 00000000 		.word	.L58-.L48
 1097 0050 00000000 		.word	.L57-.L48
 1098 0054 00000000 		.word	.L56-.L48
 1099 0058 00000000 		.word	.L46-.L48
 1100 005c 00000000 		.word	.L46-.L48
 1101 0060 00000000 		.word	.L46-.L48
 1102 0064 00000000 		.word	.L46-.L48
 1103 0068 00000000 		.word	.L46-.L48
 1104 006c 00000000 		.word	.L46-.L48
 1105 0070 00000000 		.word	.L46-.L48
 1106 0074 00000000 		.word	.L46-.L48
 1107 0078 00000000 		.word	.L46-.L48
GAS LISTING /tmp/cc72vfn8.s 			page 33


 1108 007c 00000000 		.word	.L46-.L48
 1109 0080 00000000 		.word	.L46-.L48
 1110 0084 00000000 		.word	.L55-.L48
 1111 0088 00000000 		.word	.L54-.L48
 1112 008c 00000000 		.word	.L53-.L48
 1113 0090 00000000 		.word	.L52-.L48
 1114 0094 00000000 		.word	.L46-.L48
 1115 0098 00000000 		.word	.L46-.L48
 1116 009c 00000000 		.word	.L46-.L48
 1117 00a0 00000000 		.word	.L46-.L48
 1118 00a4 00000000 		.word	.L46-.L48
 1119 00a8 00000000 		.word	.L46-.L48
 1120 00ac 00000000 		.word	.L46-.L48
 1121 00b0 00000000 		.word	.L46-.L48
 1122 00b4 00000000 		.word	.L46-.L48
 1123 00b8 00000000 		.word	.L46-.L48
 1124 00bc 00000000 		.word	.L46-.L48
 1125 00c0 00000000 		.word	.L46-.L48
 1126 00c4 00000000 		.word	.L51-.L48
 1127 00c8 00000000 		.word	.L46-.L48
 1128 00cc 00000000 		.word	.L46-.L48
 1129 00d0 00000000 		.word	.L46-.L48
 1130 00d4 00000000 		.word	.L46-.L48
 1131 00d8 00000000 		.word	.L46-.L48
 1132 00dc 00000000 		.word	.L46-.L48
 1133 00e0 00000000 		.word	.L46-.L48
 1134 00e4 00000000 		.word	.L46-.L48
 1135 00e8 00000000 		.word	.L46-.L48
 1136 00ec 00000000 		.word	.L46-.L48
 1137 00f0 00000000 		.word	.L46-.L48
 1138 00f4 00000000 		.word	.L46-.L48
 1139 00f8 00000000 		.word	.L46-.L48
 1140 00fc 00000000 		.word	.L46-.L48
 1141 0100 00000000 		.word	.L46-.L48
 1142 0104 00000000 		.word	.L50-.L48
 1143 0108 00000000 		.word	.L49-.L48
 1144 010c 00000000 		.word	.L47-.L48
 1145              		.text
 1146              	.L62:
 133:src/Riscv.cpp ****                     MemoryAllocator::memAllocHandler();
 1147              		.loc 1 133 17
 134:src/Riscv.cpp ****                     break;
 1148              		.loc 1 134 21
 134:src/Riscv.cpp ****                     break;
 1149              		.loc 1 134 53 is_stmt 0
 1150 0530 97000000 		call	_ZN15MemoryAllocator15memAllocHandlerEv@plt
 1150      E7800000 
 1151              	.LVL75:
 135:src/Riscv.cpp ****                 case MemoryAllocator::MEM_FREE:
 1152              		.loc 1 135 21 is_stmt 1
 1153              	.L46:
 180:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 1154              		.loc 1 180 13
 180:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 1155              		.loc 1 180 29 is_stmt 0
 1156 0538 833704FB 		ld	a5,-80(s0)
 1157              	.LVL76:
GAS LISTING /tmp/cc72vfn8.s 			page 34


 1158              	.LBB80:
 1159              	.LBB81:
 201:src/../h/Riscv.hpp **** }
 1160              		.loc 2 201 5 is_stmt 1
 201:src/../h/Riscv.hpp **** }
 1161              		.loc 2 201 57 is_stmt 0
 1162              	#APP
 1163              	# 201 "src/../h/Riscv.hpp" 1
 1164              		csrw sstatus, a5
 1165              	# 0 "" 2
 1166              	.LVL77:
 1167              	#NO_APP
 1168              	.LBE81:
 1169              	.LBE80:
 181:src/Riscv.cpp ****             changePrivMode();
 1170              		.loc 1 181 13 is_stmt 1
 181:src/Riscv.cpp ****             changePrivMode();
 1171              		.loc 1 181 26 is_stmt 0
 1172 0540 833784FA 		ld	a5,-88(s0)
 1173              	.LVL78:
 1174              	.LBB82:
 1175              	.LBB83:
 128:src/../h/Riscv.hpp **** }
 1176              		.loc 2 128 5 is_stmt 1
 128:src/../h/Riscv.hpp **** }
 1177              		.loc 2 128 51 is_stmt 0
 1178              	#APP
 1179              	# 128 "src/../h/Riscv.hpp" 1
 1180              		csrw sepc, a5
 1181              	# 0 "" 2
 1182              	.LVL79:
 1183              	#NO_APP
 1184              	.LBE83:
 1185              	.LBE82:
 182:src/Riscv.cpp ****             break;
 1186              		.loc 1 182 13 is_stmt 1
 182:src/Riscv.cpp ****             break;
 1187              		.loc 1 182 27 is_stmt 0
 1188 0548 97000000 		call	_ZN5Riscv14changePrivModeEv
 1188      E7800000 
 1189              	.LVL80:
 183:src/Riscv.cpp ****         }
 1190              		.loc 1 183 13 is_stmt 1
 1191              	.LBE75:
 1192              	.LBE87:
 1193              	.LBE89:
 186:src/Riscv.cpp **** 
 1194              		.loc 1 186 1 is_stmt 0
 1195 0550 6FF09FF2 		j	.L35
 1196              	.L61:
 1197              	.LBB90:
 1198              	.LBB88:
 1199              	.LBB84:
 136:src/Riscv.cpp ****                     MemoryAllocator::memFreeHandler();
 1200              		.loc 1 136 17 is_stmt 1
 137:src/Riscv.cpp ****                     break;
 1201              		.loc 1 137 21
GAS LISTING /tmp/cc72vfn8.s 			page 35


 137:src/Riscv.cpp ****                     break;
 1202              		.loc 1 137 52 is_stmt 0
 1203 0554 97000000 		call	_ZN15MemoryAllocator14memFreeHandlerEv@plt
 1203      E7800000 
 1204              	.LVL81:
 138:src/Riscv.cpp ****                 case PCB::THREAD_MAKE_PCB:
 1205              		.loc 1 138 21 is_stmt 1
 1206 055c 6FF0DFFD 		j	.L46
 1207              	.L57:
 139:src/Riscv.cpp ****                     PCB::threadMakePCBHandler();
 1208              		.loc 1 139 17
 140:src/Riscv.cpp ****                     break;
 1209              		.loc 1 140 21
 140:src/Riscv.cpp ****                     break;
 1210              		.loc 1 140 46 is_stmt 0
 1211 0560 97000000 		call	_ZN3PCB20threadMakePCBHandlerEv@plt
 1211      E7800000 
 1212              	.LVL82:
 141:src/Riscv.cpp ****                 case PCB::THREAD_CREATE:
 1213              		.loc 1 141 21 is_stmt 1
 1214 0568 6FF01FFD 		j	.L46
 1215              	.L60:
 142:src/Riscv.cpp ****                     PCB::threadCreateHandler();
 1216              		.loc 1 142 17
 143:src/Riscv.cpp ****                     break;
 1217              		.loc 1 143 21
 143:src/Riscv.cpp ****                     break;
 1218              		.loc 1 143 45 is_stmt 0
 1219 056c 97000000 		call	_ZN3PCB19threadCreateHandlerEv@plt
 1219      E7800000 
 1220              	.LVL83:
 144:src/Riscv.cpp ****                 case PCB::THREAD_START:
 1221              		.loc 1 144 21 is_stmt 1
 1222 0574 6FF05FFC 		j	.L46
 1223              	.L56:
 145:src/Riscv.cpp ****                     PCB::threadStartHandler();
 1224              		.loc 1 145 17
 146:src/Riscv.cpp ****                     break;
 1225              		.loc 1 146 21
 146:src/Riscv.cpp ****                     break;
 1226              		.loc 1 146 44 is_stmt 0
 1227 0578 97000000 		call	_ZN3PCB18threadStartHandlerEv@plt
 1227      E7800000 
 1228              	.LVL84:
 147:src/Riscv.cpp ****                 case PCB::THREAD_DISPATCH:
 1229              		.loc 1 147 21 is_stmt 1
 1230 0580 6FF09FFB 		j	.L46
 1231              	.L58:
 148:src/Riscv.cpp ****                     PCB::threadDispatchHandler();
 1232              		.loc 1 148 17
 149:src/Riscv.cpp ****                     break;
 1233              		.loc 1 149 21
 149:src/Riscv.cpp ****                     break;
 1234              		.loc 1 149 47 is_stmt 0
 1235 0584 97000000 		call	_ZN3PCB21threadDispatchHandlerEv@plt
 1235      E7800000 
 1236              	.LVL85:
GAS LISTING /tmp/cc72vfn8.s 			page 36


 150:src/Riscv.cpp ****                 case PCB::THREAD_EXIT:
 1237              		.loc 1 150 21 is_stmt 1
 1238 058c 6FF0DFFA 		j	.L46
 1239              	.L59:
 151:src/Riscv.cpp ****                     PCB::threadExitHandler();
 1240              		.loc 1 151 17
 152:src/Riscv.cpp ****                     break;
 1241              		.loc 1 152 21
 152:src/Riscv.cpp ****                     break;
 1242              		.loc 1 152 43 is_stmt 0
 1243 0590 97000000 		call	_ZN3PCB17threadExitHandlerEv@plt
 1243      E7800000 
 1244              	.LVL86:
 153:src/Riscv.cpp ****                 case PCB::TIME_SLEEP:
 1245              		.loc 1 153 21 is_stmt 1
 1246 0598 6FF01FFA 		j	.L46
 1247              	.L51:
 154:src/Riscv.cpp ****                     PCB::threadSleepHandler();
 1248              		.loc 1 154 17
 155:src/Riscv.cpp ****                     break;
 1249              		.loc 1 155 21
 155:src/Riscv.cpp ****                     break;
 1250              		.loc 1 155 44 is_stmt 0
 1251 059c 97000000 		call	_ZN3PCB18threadSleepHandlerEv@plt
 1251      E7800000 
 1252              	.LVL87:
 156:src/Riscv.cpp ****                 case KSemaphore::SEM_OPEN:
 1253              		.loc 1 156 21 is_stmt 1
 1254 05a4 6FF05FF9 		j	.L46
 1255              	.L55:
 157:src/Riscv.cpp ****                     KSemaphore::semOpenHandler();
 1256              		.loc 1 157 17
 158:src/Riscv.cpp ****                     break;
 1257              		.loc 1 158 21
 158:src/Riscv.cpp ****                     break;
 1258              		.loc 1 158 47 is_stmt 0
 1259 05a8 97000000 		call	_ZN10KSemaphore14semOpenHandlerEv@plt
 1259      E7800000 
 1260              	.LVL88:
 159:src/Riscv.cpp ****                 case KSemaphore::SEM_WAIT:
 1261              		.loc 1 159 21 is_stmt 1
 1262 05b0 6FF09FF8 		j	.L46
 1263              	.L53:
 160:src/Riscv.cpp ****                     KSemaphore::semWaitHandler();
 1264              		.loc 1 160 17
 161:src/Riscv.cpp ****                     break;
 1265              		.loc 1 161 21
 161:src/Riscv.cpp ****                     break;
 1266              		.loc 1 161 47 is_stmt 0
 1267 05b4 97000000 		call	_ZN10KSemaphore14semWaitHandlerEv@plt
 1267      E7800000 
 1268              	.LVL89:
 162:src/Riscv.cpp ****                 case KSemaphore::SEM_SIGNAL:
 1269              		.loc 1 162 21 is_stmt 1
 1270 05bc 6FF0DFF7 		j	.L46
 1271              	.L52:
 163:src/Riscv.cpp ****                     KSemaphore::semSignalHandler();
GAS LISTING /tmp/cc72vfn8.s 			page 37


 1272              		.loc 1 163 17
 164:src/Riscv.cpp ****                     break;
 1273              		.loc 1 164 21
 164:src/Riscv.cpp ****                     break;
 1274              		.loc 1 164 49 is_stmt 0
 1275 05c0 97000000 		call	_ZN10KSemaphore16semSignalHandlerEv@plt
 1275      E7800000 
 1276              	.LVL90:
 165:src/Riscv.cpp ****                 case KSemaphore::SEM_CLOSE:
 1277              		.loc 1 165 21 is_stmt 1
 1278 05c8 6FF01FF7 		j	.L46
 1279              	.L54:
 166:src/Riscv.cpp ****                     KSemaphore::semCloseHandler();
 1280              		.loc 1 166 17
 167:src/Riscv.cpp ****                     break;
 1281              		.loc 1 167 21
 167:src/Riscv.cpp ****                     break;
 1282              		.loc 1 167 48 is_stmt 0
 1283 05cc 97000000 		call	_ZN10KSemaphore15semCloseHandlerEv@plt
 1283      E7800000 
 1284              	.LVL91:
 168:src/Riscv.cpp ****                 case KConsole::CONSOLE_GETC:
 1285              		.loc 1 168 21 is_stmt 1
 1286 05d4 6FF05FF6 		j	.L46
 1287              	.L50:
 169:src/Riscv.cpp ****                     KConsole::getcHandler();
 1288              		.loc 1 169 17
 170:src/Riscv.cpp ****                     break;
 1289              		.loc 1 170 21
 170:src/Riscv.cpp ****                     break;
 1290              		.loc 1 170 42 is_stmt 0
 1291 05d8 97000000 		call	_ZN8KConsole11getcHandlerEv@plt
 1291      E7800000 
 1292              	.LVL92:
 171:src/Riscv.cpp ****                 case KConsole::CONSOLE_PUTC:
 1293              		.loc 1 171 21 is_stmt 1
 1294 05e0 6FF09FF5 		j	.L46
 1295              	.L49:
 172:src/Riscv.cpp ****                     KConsole::putcHandler();
 1296              		.loc 1 172 17
 173:src/Riscv.cpp ****                     break;
 1297              		.loc 1 173 21
 173:src/Riscv.cpp ****                     break;
 1298              		.loc 1 173 42 is_stmt 0
 1299 05e4 97000000 		call	_ZN8KConsole11putcHandlerEv@plt
 1299      E7800000 
 1300              	.LVL93:
 174:src/Riscv.cpp ****                 case KConsole::CONSOLE_GET_CHAR:
 1301              		.loc 1 174 21 is_stmt 1
 1302 05ec 6FF0DFF4 		j	.L46
 1303              	.L47:
 175:src/Riscv.cpp ****                     KConsole::getCharHandler();
 1304              		.loc 1 175 17
 176:src/Riscv.cpp ****                     break;
 1305              		.loc 1 176 21
 176:src/Riscv.cpp ****                     break;
 1306              		.loc 1 176 45 is_stmt 0
GAS LISTING /tmp/cc72vfn8.s 			page 38


 1307 05f0 97000000 		call	_ZN8KConsole14getCharHandlerEv@plt
 1307      E7800000 
 1308              	.LVL94:
 177:src/Riscv.cpp ****             }
 1309              		.loc 1 177 21 is_stmt 1
 1310 05f8 6FF01FF4 		j	.L46
 1311              	.LBE84:
 1312              	.LBE88:
 1313              	.LBE90:
 1314              		.cfi_endproc
 1315              	.LFE32:
 1317              		.globl	_ZN5Riscv12finishSystemE
 1318              		.globl	_ZN5Riscv9totalTimeE
 1319              		.bss
 1320              		.align	3
 1321              		.set	.LANCHOR0,. + 0
 1324              	_ZN5Riscv12finishSystemE:
 1325 0000 00       		.zero	1
 1326 0001 00000000 		.zero	7
 1326      000000
 1329              	_ZN5Riscv9totalTimeE:
 1330 0008 00000000 		.zero	8
 1330      00000000 
 1331              		.text
 1332              	.Letext0:
 1333              		.file 4 "src/../h/../lib/hw.h"
 1334              		.file 5 "src/../h/MemoryAllocator.hpp"
 1335              		.file 6 "src/../h/KSemaphore.hpp"
 1336              		.file 7 "src/../h/SleepPCBList.hpp"
 1337              		.file 8 "src/../h/KConsole.hpp"
 1338              		.file 9 "src/../h/Tests.hpp"
 1339              		.file 10 "src/../test/userMain.hpp"
 1340              		.file 11 "src/../h/../test/../h/syscall_c.h"
 1341              		.file 12 "src/../h/../test/printing.hpp"
 6022              		.align	3
 6025              	DW.ref.__gxx_personality_v0:
 6026 0000 00000000 		.dword	__gxx_personality_v0
 6026      00000000 
 6027              		.ident	"GCC: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0"
 6028              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/cc72vfn8.s 			page 39


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Riscv.cpp
     /tmp/cc72vfn8.s:9      .text:0000000000000000 _ZN5Riscv15userMainWrapperEPv
     /tmp/cc72vfn8.s:13     .text:0000000000000000 .L0 
     /tmp/cc72vfn8.s:14     .text:0000000000000000 .L0 
     /tmp/cc72vfn8.s:15     .text:0000000000000004 .L0 
     /tmp/cc72vfn8.s:18     .text:000000000000000c .L0 
     /tmp/cc72vfn8.s:19     .text:000000000000000c .L0 
     /tmp/cc72vfn8.s:21     .text:0000000000000010 .L0 
     /tmp/cc72vfn8.s:23     .text:0000000000000010 .L0 
     /tmp/cc72vfn8.s:24     .text:0000000000000010 .L0 
     /tmp/cc72vfn8.s:27     .text:0000000000000018 .L0 
     /tmp/cc72vfn8.s:28     .text:000000000000001c .L0 
     /tmp/cc72vfn8.s:30     .text:0000000000000020 .L0 
     /tmp/cc72vfn8.s:31     .text:0000000000000020 .L0 
     /tmp/cc72vfn8.s:33     .text:0000000000000024 .L0 
     /tmp/cc72vfn8.s:35     .text:0000000000000028 .L0 
     /tmp/cc72vfn8.s:41     .text:0000000000000028 _ZN5Riscv10initSystemEv
     /tmp/cc72vfn8.s:44     .text:0000000000000028 .L0 
     /tmp/cc72vfn8.s:45     .text:0000000000000028 .L0 
     /tmp/cc72vfn8.s:46     .text:000000000000002c .L0 
     /tmp/cc72vfn8.s:49     .text:0000000000000034 .L0 
     /tmp/cc72vfn8.s:50     .text:0000000000000034 .L0 
     /tmp/cc72vfn8.s:52     .text:0000000000000038 .L0 
     /tmp/cc72vfn8.s:54     .text:0000000000000038 .L0 
     /tmp/cc72vfn8.s:55     .text:0000000000000038 .L0 
     /tmp/cc72vfn8.s:61     .text:0000000000000040 .L0 
  src/../h/Riscv.hpp:138    .text:0000000000000040 .L0 
     /tmp/cc72vfn8.s:71     .text:0000000000000044 .L0 
     /tmp/cc72vfn8.s:72     .text:0000000000000044 .L0 
     /tmp/cc72vfn8.s:75     .text:000000000000004c .L0 
     /tmp/cc72vfn8.s:76     .text:000000000000004c .L0 
     /tmp/cc72vfn8.s:79     .text:0000000000000054 .L0 
     /tmp/cc72vfn8.s:80     .text:0000000000000058 .L0 
     /tmp/cc72vfn8.s:82     .text:000000000000005c .L0 
     /tmp/cc72vfn8.s:83     .text:000000000000005c .L0 
     /tmp/cc72vfn8.s:85     .text:0000000000000060 .L0 
     /tmp/cc72vfn8.s:87     .text:0000000000000064 .L0 
     /tmp/cc72vfn8.s:93     .text:0000000000000064 _ZN5Riscv16enableInterruptsEv
     /tmp/cc72vfn8.s:96     .text:0000000000000064 .L0 
     /tmp/cc72vfn8.s:97     .text:0000000000000064 .L0 
     /tmp/cc72vfn8.s:98     .text:0000000000000068 .L0 
     /tmp/cc72vfn8.s:100    .text:000000000000006c .L0 
     /tmp/cc72vfn8.s:102    .text:0000000000000070 .L0 
     /tmp/cc72vfn8.s:107    .text:0000000000000070 .L0 
     /tmp/cc72vfn8.s:108    .text:0000000000000070 .L0 
     /tmp/cc72vfn8.s:109    .text:0000000000000070 .L0 
     /tmp/cc72vfn8.s:119    .text:0000000000000078 .L0 
     /tmp/cc72vfn8.s:120    .text:000000000000007c .L0 
     /tmp/cc72vfn8.s:121    .text:000000000000007c .L0 
     /tmp/cc72vfn8.s:123    .text:0000000000000080 .L0 
     /tmp/cc72vfn8.s:125    .text:0000000000000084 .L0 
     /tmp/cc72vfn8.s:131    .text:0000000000000084 _ZN5Riscv17disableInterruptsEv
     /tmp/cc72vfn8.s:134    .text:0000000000000084 .L0 
     /tmp/cc72vfn8.s:135    .text:0000000000000084 .L0 
     /tmp/cc72vfn8.s:136    .text:0000000000000088 .L0 
     /tmp/cc72vfn8.s:138    .text:000000000000008c .L0 
GAS LISTING /tmp/cc72vfn8.s 			page 40


     /tmp/cc72vfn8.s:140    .text:0000000000000090 .L0 
     /tmp/cc72vfn8.s:145    .text:0000000000000090 .L0 
     /tmp/cc72vfn8.s:146    .text:0000000000000090 .L0 
     /tmp/cc72vfn8.s:147    .text:0000000000000090 .L0 
     /tmp/cc72vfn8.s:157    .text:0000000000000098 .L0 
     /tmp/cc72vfn8.s:158    .text:000000000000009c .L0 
     /tmp/cc72vfn8.s:159    .text:000000000000009c .L0 
     /tmp/cc72vfn8.s:161    .text:00000000000000a0 .L0 
     /tmp/cc72vfn8.s:163    .text:00000000000000a4 .L0 
     /tmp/cc72vfn8.s:169    .text:00000000000000a4 _ZN5Riscv9endSystemEv
     /tmp/cc72vfn8.s:172    .text:00000000000000a4 .L0 
     /tmp/cc72vfn8.s:173    .text:00000000000000a4 .L0 
     /tmp/cc72vfn8.s:174    .text:00000000000000a8 .L0 
     /tmp/cc72vfn8.s:177    .text:00000000000000b0 .L0 
     /tmp/cc72vfn8.s:178    .text:00000000000000b0 .L0 
     /tmp/cc72vfn8.s:180    .text:00000000000000b4 .L0 
     /tmp/cc72vfn8.s:182    .text:00000000000000b4 .L0 
     /tmp/cc72vfn8.s:183    .text:00000000000000b4 .L0 
     /tmp/cc72vfn8.s:186    .text:00000000000000bc .L0 
     /tmp/cc72vfn8.s:187    .text:00000000000000c0 .L0 
     /tmp/cc72vfn8.s:189    .text:00000000000000c4 .L0 
     /tmp/cc72vfn8.s:190    .text:00000000000000c4 .L0 
     /tmp/cc72vfn8.s:192    .text:00000000000000c8 .L0 
     /tmp/cc72vfn8.s:194    .text:00000000000000cc .L0 
     /tmp/cc72vfn8.s:200    .text:00000000000000cc _ZN5Riscv10popSppSpieEv
     /tmp/cc72vfn8.s:203    .text:00000000000000cc .L0 
     /tmp/cc72vfn8.s:204    .text:00000000000000cc .L0 
     /tmp/cc72vfn8.s:205    .text:00000000000000d0 .L0 
     /tmp/cc72vfn8.s:207    .text:00000000000000d4 .L0 
     /tmp/cc72vfn8.s:209    .text:00000000000000d8 .L0 
     /tmp/cc72vfn8.s:211    .text:00000000000000d8 .L0 
       src/Riscv.cpp:41     .text:00000000000000d8 .L0 
     /tmp/cc72vfn8.s:217    .text:00000000000000dc .L0 
       src/Riscv.cpp:42     .text:00000000000000dc .L0 
     /tmp/cc72vfn8.s:223    .text:00000000000000e0 .L0 
     /tmp/cc72vfn8.s:224    .text:00000000000000e4 .L0 
     /tmp/cc72vfn8.s:225    .text:00000000000000e4 .L0 
     /tmp/cc72vfn8.s:227    .text:00000000000000e8 .L0 
     /tmp/cc72vfn8.s:229    .text:00000000000000ec .L0 
     /tmp/cc72vfn8.s:240    .text:00000000000000ec _ZN5Riscv10kernelMainEv
     /tmp/cc72vfn8.s:243    .text:00000000000000ec .L0 
     /tmp/cc72vfn8.s:6025   .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/cc72vfn8.s:246    .text:00000000000000ec .L0 
     /tmp/cc72vfn8.s:247    .text:00000000000000f0 .L0 
     /tmp/cc72vfn8.s:252    .text:0000000000000100 .L0 
     /tmp/cc72vfn8.s:253    .text:0000000000000100 .L0 
     /tmp/cc72vfn8.s:254    .text:0000000000000100 .L0 
     /tmp/cc72vfn8.s:255    .text:0000000000000100 .L0 
     /tmp/cc72vfn8.s:257    .text:0000000000000104 .L0 
     /tmp/cc72vfn8.s:260    .text:0000000000000104 .L0 
     /tmp/cc72vfn8.s:261    .text:0000000000000104 .L0 
     /tmp/cc72vfn8.s:264    .text:000000000000010c .L0 
     /tmp/cc72vfn8.s:265    .text:000000000000010c .L0 
     /tmp/cc72vfn8.s:268    .text:0000000000000114 .L0 
     /tmp/cc72vfn8.s:269    .text:0000000000000114 .L0 
     /tmp/cc72vfn8.s:274    .text:0000000000000124 .L0 
     /tmp/cc72vfn8.s:288    .text:0000000000000150 .L0 
GAS LISTING /tmp/cc72vfn8.s 			page 41


     /tmp/cc72vfn8.s:289    .text:0000000000000150 .L0 
     /tmp/cc72vfn8.s:295    .text:000000000000015c .L0 
     /tmp/cc72vfn8.s:296    .text:000000000000015c .L0 
     /tmp/cc72vfn8.s:297    .text:000000000000015c .L0 
     /tmp/cc72vfn8.s:301    .text:0000000000000168 .L0 
     /tmp/cc72vfn8.s:303    .text:000000000000016c .L0 
     /tmp/cc72vfn8.s:304    .text:000000000000016c .L0 
     /tmp/cc72vfn8.s:307    .text:0000000000000174 .L0 
     /tmp/cc72vfn8.s:310    .text:0000000000000178 .L0 
     /tmp/cc72vfn8.s:311    .text:0000000000000178 .L0 
     /tmp/cc72vfn8.s:314    .text:0000000000000184 .L0 
     /tmp/cc72vfn8.s:315    .text:0000000000000184 .L0 
     /tmp/cc72vfn8.s:320    .text:0000000000000194 .L0 
     /tmp/cc72vfn8.s:321    .text:0000000000000194 .L0 
     /tmp/cc72vfn8.s:322    .text:0000000000000194 .L0 
     /tmp/cc72vfn8.s:327    .text:00000000000001a8 .L0 
     /tmp/cc72vfn8.s:329    .text:00000000000001ac .L0 
     /tmp/cc72vfn8.s:330    .text:00000000000001ac .L0 
     /tmp/cc72vfn8.s:334    .text:00000000000001b4 .L0 
     /tmp/cc72vfn8.s:337    .text:00000000000001b8 .L0 
     /tmp/cc72vfn8.s:338    .text:00000000000001b8 .L0 
     /tmp/cc72vfn8.s:341    .text:00000000000001c0 .L0 
     /tmp/cc72vfn8.s:342    .text:00000000000001c0 .L0 
     /tmp/cc72vfn8.s:345    .text:00000000000001c8 .L0 
     /tmp/cc72vfn8.s:346    .text:00000000000001cc .L0 
     /tmp/cc72vfn8.s:347    .text:00000000000001cc .L0 
     /tmp/cc72vfn8.s:349    .text:00000000000001d0 .L0 
     /tmp/cc72vfn8.s:350    .text:00000000000001d0 .L0 
     /tmp/cc72vfn8.s:352    .text:00000000000001d4 .L0 
     /tmp/cc72vfn8.s:355    .text:00000000000001d8 .L0 
     /tmp/cc72vfn8.s:357    .text:00000000000001dc .L0 
     /tmp/cc72vfn8.s:360    .text:00000000000001e0 .L0 
     /tmp/cc72vfn8.s:363    .text:00000000000001e4 .L0 
     /tmp/cc72vfn8.s:371    .text:00000000000001fc .L0 
     /tmp/cc72vfn8.s:401    .text:00000000000001fc _ZN5Riscv14myTestsWrapperEPv
     /tmp/cc72vfn8.s:404    .text:00000000000001fc .L0 
     /tmp/cc72vfn8.s:406    .text:00000000000001fc .L0 
     /tmp/cc72vfn8.s:407    .text:0000000000000200 .L0 
     /tmp/cc72vfn8.s:410    .text:0000000000000208 .L0 
     /tmp/cc72vfn8.s:411    .text:0000000000000208 .L0 
     /tmp/cc72vfn8.s:413    .text:000000000000020c .L0 
     /tmp/cc72vfn8.s:415    .text:000000000000020c .L0 
     /tmp/cc72vfn8.s:416    .text:000000000000020c .L0 
     /tmp/cc72vfn8.s:419    .text:0000000000000214 .L0 
     /tmp/cc72vfn8.s:420    .text:0000000000000218 .L0 
     /tmp/cc72vfn8.s:422    .text:000000000000021c .L0 
     /tmp/cc72vfn8.s:423    .text:000000000000021c .L0 
     /tmp/cc72vfn8.s:425    .text:0000000000000220 .L0 
     /tmp/cc72vfn8.s:427    .text:0000000000000224 .L0 
     /tmp/cc72vfn8.s:433    .text:0000000000000224 _ZN5Riscv22disableTimerInterruptsEv
     /tmp/cc72vfn8.s:436    .text:0000000000000224 .L0 
     /tmp/cc72vfn8.s:437    .text:0000000000000224 .L0 
     /tmp/cc72vfn8.s:438    .text:0000000000000228 .L0 
     /tmp/cc72vfn8.s:440    .text:000000000000022c .L0 
     /tmp/cc72vfn8.s:442    .text:0000000000000230 .L0 
     /tmp/cc72vfn8.s:445    .text:0000000000000230 .L0 
     /tmp/cc72vfn8.s:446    .text:0000000000000230 .L0 
GAS LISTING /tmp/cc72vfn8.s 			page 42


     /tmp/cc72vfn8.s:447    .text:0000000000000230 .L0 
     /tmp/cc72vfn8.s:454    .text:0000000000000238 .L0 
     /tmp/cc72vfn8.s:455    .text:000000000000023c .L0 
     /tmp/cc72vfn8.s:456    .text:000000000000023c .L0 
     /tmp/cc72vfn8.s:458    .text:0000000000000240 .L0 
     /tmp/cc72vfn8.s:460    .text:0000000000000244 .L0 
     /tmp/cc72vfn8.s:466    .text:0000000000000244 _ZN5Riscv9idleRiscvEPv
     /tmp/cc72vfn8.s:469    .text:0000000000000244 .L0 
     /tmp/cc72vfn8.s:471    .text:0000000000000244 .L0 
     /tmp/cc72vfn8.s:472    .text:0000000000000248 .L0 
     /tmp/cc72vfn8.s:474    .text:000000000000024c .L0 
     /tmp/cc72vfn8.s:476    .text:0000000000000250 .L0 
     /tmp/cc72vfn8.s:479    .text:0000000000000250 .L0 
     /tmp/cc72vfn8.s:480    .text:0000000000000250 .L0 
     /tmp/cc72vfn8.s:481    .text:0000000000000254 .L0 
     /tmp/cc72vfn8.s:487    .text:0000000000000254 _ZN5Riscv13w_a0_sscratchEv
     /tmp/cc72vfn8.s:490    .text:0000000000000254 .L0 
     /tmp/cc72vfn8.s:491    .text:0000000000000254 .L0 
     /tmp/cc72vfn8.s:492    .text:0000000000000258 .L0 
     /tmp/cc72vfn8.s:494    .text:000000000000025c .L0 
     /tmp/cc72vfn8.s:496    .text:0000000000000260 .L0 
     /tmp/cc72vfn8.s:498    .text:0000000000000260 .L0 
     /tmp/cc72vfn8.s:499    .text:0000000000000260 .L0 
       src/Riscv.cpp:240    .text:0000000000000260 .L0 
     /tmp/cc72vfn8.s:506    .text:0000000000000264 .L0 
     /tmp/cc72vfn8.s:508    .text:0000000000000264 .L0 
       src/Riscv.cpp:241    .text:0000000000000274 .L0 
     /tmp/cc72vfn8.s:517    .text:0000000000000278 .L0 
       src/Riscv.cpp:242    .text:0000000000000278 .L0 
     /tmp/cc72vfn8.s:522    .text:000000000000027c .L0 
       src/Riscv.cpp:243    .text:000000000000027c .L0 
     /tmp/cc72vfn8.s:528    .text:0000000000000280 .L0 
     /tmp/cc72vfn8.s:529    .text:0000000000000284 .L0 
     /tmp/cc72vfn8.s:530    .text:0000000000000284 .L0 
     /tmp/cc72vfn8.s:532    .text:0000000000000288 .L0 
     /tmp/cc72vfn8.s:534    .text:000000000000028c .L0 
     /tmp/cc72vfn8.s:540    .text:000000000000028c _ZN5Riscv14changePrivModeEv
     /tmp/cc72vfn8.s:543    .text:000000000000028c .L0 
     /tmp/cc72vfn8.s:544    .text:000000000000028c .L0 
     /tmp/cc72vfn8.s:545    .text:0000000000000290 .L0 
     /tmp/cc72vfn8.s:547    .text:0000000000000294 .L0 
     /tmp/cc72vfn8.s:549    .text:0000000000000298 .L0 
     /tmp/cc72vfn8.s:551    .text:0000000000000298 .L0 
     /tmp/cc72vfn8.s:552    .text:0000000000000298 .L0 
     /tmp/cc72vfn8.s:556    .text:00000000000002a8 .L0 
     /tmp/cc72vfn8.s:561    .text:00000000000002ac .L0 
     /tmp/cc72vfn8.s:562    .text:00000000000002ac .L0 
     /tmp/cc72vfn8.s:563    .text:00000000000002ac .L0 
     /tmp/cc72vfn8.s:574    .text:00000000000002b4 .L0 
     /tmp/cc72vfn8.s:575    .text:00000000000002b8 .L0 
     /tmp/cc72vfn8.s:576    .text:00000000000002b8 .L0 
     /tmp/cc72vfn8.s:577    .text:00000000000002b8 .L0 
     /tmp/cc72vfn8.s:579    .text:00000000000002bc .L0 
     /tmp/cc72vfn8.s:582    .text:00000000000002c0 .L0 
     /tmp/cc72vfn8.s:587    .text:00000000000002c0 .L0 
     /tmp/cc72vfn8.s:588    .text:00000000000002c0 .L0 
     /tmp/cc72vfn8.s:589    .text:00000000000002c0 .L0 
GAS LISTING /tmp/cc72vfn8.s 			page 43


     /tmp/cc72vfn8.s:599    .text:00000000000002c8 .L0 
     /tmp/cc72vfn8.s:600    .text:00000000000002cc .L0 
     /tmp/cc72vfn8.s:617    .text:00000000000002cc _ZN5Riscv20handleSupervisorTrapEv
     /tmp/cc72vfn8.s:620    .text:00000000000002cc .L0 
     /tmp/cc72vfn8.s:621    .text:00000000000002cc .L0 
     /tmp/cc72vfn8.s:622    .text:00000000000002d0 .L0 
     /tmp/cc72vfn8.s:626    .text:00000000000002dc .L0 
     /tmp/cc72vfn8.s:627    .text:00000000000002dc .L0 
     /tmp/cc72vfn8.s:628    .text:00000000000002dc .L0 
     /tmp/cc72vfn8.s:630    .text:00000000000002e0 .L0 
     /tmp/cc72vfn8.s:632    .text:00000000000002e0 .L0 
       src/Riscv.cpp:47     .text:00000000000002e0 .L0 
     /tmp/cc72vfn8.s:641    .text:00000000000002f0 .L0 
     /tmp/cc72vfn8.s:642    .text:00000000000002f0 .L0 
       src/Riscv.cpp:48     .text:00000000000002fc .L0 
     /tmp/cc72vfn8.s:654    .text:0000000000000304 .L0 
     /tmp/cc72vfn8.s:655    .text:0000000000000304 .L0 
     /tmp/cc72vfn8.s:656    .text:0000000000000304 .L0 
  src/../h/Riscv.hpp:113    .text:0000000000000304 .L0 
     /tmp/cc72vfn8.s:664    .text:000000000000030c .L0 
     /tmp/cc72vfn8.s:665    .text:000000000000030c .L0 
     /tmp/cc72vfn8.s:671    .text:0000000000000310 .L0 
     /tmp/cc72vfn8.s:681    .text:0000000000000330 .L0 
     /tmp/cc72vfn8.s:682    .text:0000000000000330 .L0 
     /tmp/cc72vfn8.s:683    .text:0000000000000330 .L0 
     /tmp/cc72vfn8.s:684    .text:0000000000000330 .L0 
     /tmp/cc72vfn8.s:688    .text:0000000000000340 .L0 
     /tmp/cc72vfn8.s:689    .text:0000000000000340 .L0 
     /tmp/cc72vfn8.s:692    .text:0000000000000348 .L0 
     /tmp/cc72vfn8.s:697    .text:000000000000034c .L0 
     /tmp/cc72vfn8.s:701    .text:0000000000000354 .L0 
     /tmp/cc72vfn8.s:702    .text:0000000000000354 .L0 
     /tmp/cc72vfn8.s:703    .text:0000000000000354 .L0 
     /tmp/cc72vfn8.s:704    .text:0000000000000354 .L0 
     /tmp/cc72vfn8.s:708    .text:0000000000000364 .L0 
     /tmp/cc72vfn8.s:709    .text:0000000000000364 .L0 
     /tmp/cc72vfn8.s:712    .text:000000000000036c .L0 
     /tmp/cc72vfn8.s:717    .text:0000000000000370 .L0 
     /tmp/cc72vfn8.s:727    .text:0000000000000390 .L0 
     /tmp/cc72vfn8.s:729    .text:0000000000000390 .L0 
     /tmp/cc72vfn8.s:730    .text:0000000000000390 .L0 
     /tmp/cc72vfn8.s:731    .text:0000000000000390 .L0 
     /tmp/cc72vfn8.s:736    .text:000000000000039c .L0 
       src/Riscv.cpp:80     .text:000000000000039c .L0 
     /tmp/cc72vfn8.s:742    .text:00000000000003a0 .L0 
       src/Riscv.cpp:81     .text:00000000000003a0 .L0 
     /tmp/cc72vfn8.s:747    .text:00000000000003a4 .L0 
     /tmp/cc72vfn8.s:748    .text:00000000000003a4 .L0 
       src/Riscv.cpp:83     .text:00000000000003a4 .L0 
     /tmp/cc72vfn8.s:756    .text:00000000000003a8 .L0 
     /tmp/cc72vfn8.s:757    .text:00000000000003a8 .L0 
     /tmp/cc72vfn8.s:760    .text:00000000000003ac .L0 
     /tmp/cc72vfn8.s:763    .text:00000000000003b0 .L0 
     /tmp/cc72vfn8.s:764    .text:00000000000003b0 .L0 
     /tmp/cc72vfn8.s:768    .text:00000000000003bc .L0 
       src/Riscv.cpp:87     .text:00000000000003bc .L0 
     /tmp/cc72vfn8.s:774    .text:00000000000003c0 .L0 
GAS LISTING /tmp/cc72vfn8.s 			page 44


       src/Riscv.cpp:88     .text:00000000000003c0 .L0 
     /tmp/cc72vfn8.s:779    .text:00000000000003c4 .L0 
     /tmp/cc72vfn8.s:780    .text:00000000000003c4 .L0 
       src/Riscv.cpp:90     .text:00000000000003c4 .L0 
     /tmp/cc72vfn8.s:788    .text:00000000000003cc .L0 
     /tmp/cc72vfn8.s:789    .text:00000000000003cc .L0 
     /tmp/cc72vfn8.s:793    .text:00000000000003d8 .L0 
     /tmp/cc72vfn8.s:799    .text:00000000000003dc .L0 
     /tmp/cc72vfn8.s:800    .text:00000000000003dc .L0 
     /tmp/cc72vfn8.s:805    .text:00000000000003ec .L0 
     /tmp/cc72vfn8.s:810    .text:00000000000003f0 .L0 
     /tmp/cc72vfn8.s:812    .text:00000000000003f0 .L0 
     /tmp/cc72vfn8.s:815    .text:00000000000003f0 .L0 
     /tmp/cc72vfn8.s:816    .text:00000000000003f0 .L0 
     /tmp/cc72vfn8.s:817    .text:00000000000003f0 .L0 
  src/../h/Riscv.hpp:123    .text:00000000000003f0 .L0 
     /tmp/cc72vfn8.s:826    .text:00000000000003f8 .L0 
     /tmp/cc72vfn8.s:827    .text:00000000000003f8 .L0 
     /tmp/cc72vfn8.s:831    .text:00000000000003fc .L0 
     /tmp/cc72vfn8.s:835    .text:0000000000000400 .L0 
     /tmp/cc72vfn8.s:836    .text:0000000000000400 .L0 
     /tmp/cc72vfn8.s:837    .text:0000000000000400 .L0 
  src/../h/Riscv.hpp:196    .text:0000000000000400 .L0 
     /tmp/cc72vfn8.s:845    .text:0000000000000408 .L0 
     /tmp/cc72vfn8.s:846    .text:0000000000000408 .L0 
     /tmp/cc72vfn8.s:850    .text:000000000000040c .L0 
     /tmp/cc72vfn8.s:855    .text:0000000000000410 .L0 
     /tmp/cc72vfn8.s:856    .text:0000000000000410 .L0 
     /tmp/cc72vfn8.s:857    .text:0000000000000410 .L0 
     /tmp/cc72vfn8.s:867    .text:0000000000000418 .L0 
     /tmp/cc72vfn8.s:868    .text:0000000000000418 .L0 
     /tmp/cc72vfn8.s:873    .text:000000000000042c .L0 
     /tmp/cc72vfn8.s:874    .text:000000000000042c .L0 
     /tmp/cc72vfn8.s:879    .text:0000000000000440 .L0 
     /tmp/cc72vfn8.s:880    .text:0000000000000440 .L0 
     /tmp/cc72vfn8.s:883    .text:0000000000000448 .L0 
     /tmp/cc72vfn8.s:884    .text:0000000000000448 .L0 
     /tmp/cc72vfn8.s:891    .text:0000000000000454 .L0 
     /tmp/cc72vfn8.s:892    .text:0000000000000454 .L0 
     /tmp/cc72vfn8.s:897    .text:0000000000000458 .L0 
     /tmp/cc72vfn8.s:899    .text:000000000000045c .L0 
     /tmp/cc72vfn8.s:902    .text:0000000000000460 .L0 
     /tmp/cc72vfn8.s:903    .text:0000000000000460 .L0 
     /tmp/cc72vfn8.s:908    .text:0000000000000464 .L0 
  src/../h/Riscv.hpp:201    .text:0000000000000464 .L0 
     /tmp/cc72vfn8.s:918    .text:0000000000000468 .L0 
     /tmp/cc72vfn8.s:919    .text:0000000000000468 .L0 
     /tmp/cc72vfn8.s:924    .text:000000000000046c .L0 
  src/../h/Riscv.hpp:128    .text:000000000000046c .L0 
     /tmp/cc72vfn8.s:934    .text:0000000000000470 .L0 
     /tmp/cc72vfn8.s:935    .text:0000000000000470 .L0 
     /tmp/cc72vfn8.s:942    .text:0000000000000478 .L0 
     /tmp/cc72vfn8.s:943    .text:0000000000000478 .L0 
     /tmp/cc72vfn8.s:944    .text:000000000000047c .L0 
     /tmp/cc72vfn8.s:945    .text:000000000000047c .L0 
     /tmp/cc72vfn8.s:947    .text:0000000000000480 .L0 
     /tmp/cc72vfn8.s:948    .text:0000000000000480 .L0 
GAS LISTING /tmp/cc72vfn8.s 			page 45


     /tmp/cc72vfn8.s:950    .text:0000000000000484 .L0 
     /tmp/cc72vfn8.s:952    .text:0000000000000488 .L0 
     /tmp/cc72vfn8.s:955    .text:000000000000048c .L0 
     /tmp/cc72vfn8.s:960    .text:000000000000048c .L0 
     /tmp/cc72vfn8.s:961    .text:000000000000048c .L0 
     /tmp/cc72vfn8.s:963    .text:0000000000000490 .L0 
     /tmp/cc72vfn8.s:964    .text:0000000000000490 .L0 
     /tmp/cc72vfn8.s:974    .text:000000000000049c .L0 
     /tmp/cc72vfn8.s:975    .text:000000000000049c .L0 
     /tmp/cc72vfn8.s:979    .text:00000000000004ac .L0 
     /tmp/cc72vfn8.s:980    .text:00000000000004ac .L0 
     /tmp/cc72vfn8.s:985    .text:00000000000004b8 .L0 
     /tmp/cc72vfn8.s:986    .text:00000000000004b8 .L0 
     /tmp/cc72vfn8.s:996    .text:00000000000004c8 .L0 
     /tmp/cc72vfn8.s:997    .text:00000000000004c8 .L0 
     /tmp/cc72vfn8.s:998    .text:00000000000004c8 .L0 
     /tmp/cc72vfn8.s:999    .text:00000000000004c8 .L0 
     /tmp/cc72vfn8.s:1003   .text:00000000000004d8 .L0 
     /tmp/cc72vfn8.s:1004   .text:00000000000004d8 .L0 
     /tmp/cc72vfn8.s:1007   .text:00000000000004e0 .L0 
     /tmp/cc72vfn8.s:1011   .text:00000000000004e4 .L0 
     /tmp/cc72vfn8.s:1012   .text:00000000000004e4 .L0 
     /tmp/cc72vfn8.s:1014   .text:00000000000004e4 .L0 
     /tmp/cc72vfn8.s:1015   .text:00000000000004e4 .L0 
     /tmp/cc72vfn8.s:1016   .text:00000000000004e4 .L0 
       src/Riscv.cpp:126    .text:00000000000004e4 .L0 
     /tmp/cc72vfn8.s:1026   .text:00000000000004e8 .L0 
     /tmp/cc72vfn8.s:1027   .text:00000000000004e8 .L0 
     /tmp/cc72vfn8.s:1028   .text:00000000000004e8 .L0 
  src/../h/Riscv.hpp:123    .text:00000000000004e8 .L0 
     /tmp/cc72vfn8.s:1036   .text:00000000000004f0 .L0 
     /tmp/cc72vfn8.s:1037   .text:00000000000004f0 .L0 
     /tmp/cc72vfn8.s:1041   .text:00000000000004f4 .L0 
     /tmp/cc72vfn8.s:1043   .text:00000000000004f8 .L0 
     /tmp/cc72vfn8.s:1047   .text:00000000000004fc .L0 
     /tmp/cc72vfn8.s:1048   .text:00000000000004fc .L0 
     /tmp/cc72vfn8.s:1049   .text:00000000000004fc .L0 
  src/../h/Riscv.hpp:196    .text:00000000000004fc .L0 
     /tmp/cc72vfn8.s:1057   .text:0000000000000504 .L0 
     /tmp/cc72vfn8.s:1058   .text:0000000000000504 .L0 
     /tmp/cc72vfn8.s:1062   .text:0000000000000508 .L0 
     /tmp/cc72vfn8.s:1064   .text:000000000000050c .L0 
     /tmp/cc72vfn8.s:1148   .text:0000000000000530 .L0 
     /tmp/cc72vfn8.s:1149   .text:0000000000000530 .L0 
     /tmp/cc72vfn8.s:1150   .text:0000000000000530 .L0 
     /tmp/cc72vfn8.s:1154   .text:0000000000000538 .L0 
     /tmp/cc72vfn8.s:1155   .text:0000000000000538 .L0 
     /tmp/cc72vfn8.s:1156   .text:0000000000000538 .L0 
     /tmp/cc72vfn8.s:1161   .text:000000000000053c .L0 
  src/../h/Riscv.hpp:201    .text:000000000000053c .L0 
     /tmp/cc72vfn8.s:1171   .text:0000000000000540 .L0 
     /tmp/cc72vfn8.s:1172   .text:0000000000000540 .L0 
     /tmp/cc72vfn8.s:1177   .text:0000000000000544 .L0 
  src/../h/Riscv.hpp:128    .text:0000000000000544 .L0 
     /tmp/cc72vfn8.s:1187   .text:0000000000000548 .L0 
     /tmp/cc72vfn8.s:1188   .text:0000000000000548 .L0 
     /tmp/cc72vfn8.s:1194   .text:0000000000000550 .L0 
GAS LISTING /tmp/cc72vfn8.s 			page 46


     /tmp/cc72vfn8.s:1195   .text:0000000000000550 .L0 
     /tmp/cc72vfn8.s:1201   .text:0000000000000554 .L0 
     /tmp/cc72vfn8.s:1202   .text:0000000000000554 .L0 
     /tmp/cc72vfn8.s:1203   .text:0000000000000554 .L0 
     /tmp/cc72vfn8.s:1206   .text:000000000000055c .L0 
     /tmp/cc72vfn8.s:1209   .text:0000000000000560 .L0 
     /tmp/cc72vfn8.s:1210   .text:0000000000000560 .L0 
     /tmp/cc72vfn8.s:1211   .text:0000000000000560 .L0 
     /tmp/cc72vfn8.s:1214   .text:0000000000000568 .L0 
     /tmp/cc72vfn8.s:1217   .text:000000000000056c .L0 
     /tmp/cc72vfn8.s:1218   .text:000000000000056c .L0 
     /tmp/cc72vfn8.s:1219   .text:000000000000056c .L0 
     /tmp/cc72vfn8.s:1222   .text:0000000000000574 .L0 
     /tmp/cc72vfn8.s:1225   .text:0000000000000578 .L0 
     /tmp/cc72vfn8.s:1226   .text:0000000000000578 .L0 
     /tmp/cc72vfn8.s:1227   .text:0000000000000578 .L0 
     /tmp/cc72vfn8.s:1230   .text:0000000000000580 .L0 
     /tmp/cc72vfn8.s:1233   .text:0000000000000584 .L0 
     /tmp/cc72vfn8.s:1234   .text:0000000000000584 .L0 
     /tmp/cc72vfn8.s:1235   .text:0000000000000584 .L0 
     /tmp/cc72vfn8.s:1238   .text:000000000000058c .L0 
     /tmp/cc72vfn8.s:1241   .text:0000000000000590 .L0 
     /tmp/cc72vfn8.s:1242   .text:0000000000000590 .L0 
     /tmp/cc72vfn8.s:1243   .text:0000000000000590 .L0 
     /tmp/cc72vfn8.s:1246   .text:0000000000000598 .L0 
     /tmp/cc72vfn8.s:1249   .text:000000000000059c .L0 
     /tmp/cc72vfn8.s:1250   .text:000000000000059c .L0 
     /tmp/cc72vfn8.s:1251   .text:000000000000059c .L0 
     /tmp/cc72vfn8.s:1254   .text:00000000000005a4 .L0 
     /tmp/cc72vfn8.s:1257   .text:00000000000005a8 .L0 
     /tmp/cc72vfn8.s:1258   .text:00000000000005a8 .L0 
     /tmp/cc72vfn8.s:1259   .text:00000000000005a8 .L0 
     /tmp/cc72vfn8.s:1262   .text:00000000000005b0 .L0 
     /tmp/cc72vfn8.s:1265   .text:00000000000005b4 .L0 
     /tmp/cc72vfn8.s:1266   .text:00000000000005b4 .L0 
     /tmp/cc72vfn8.s:1267   .text:00000000000005b4 .L0 
     /tmp/cc72vfn8.s:1270   .text:00000000000005bc .L0 
     /tmp/cc72vfn8.s:1273   .text:00000000000005c0 .L0 
     /tmp/cc72vfn8.s:1274   .text:00000000000005c0 .L0 
     /tmp/cc72vfn8.s:1275   .text:00000000000005c0 .L0 
     /tmp/cc72vfn8.s:1278   .text:00000000000005c8 .L0 
     /tmp/cc72vfn8.s:1281   .text:00000000000005cc .L0 
     /tmp/cc72vfn8.s:1282   .text:00000000000005cc .L0 
     /tmp/cc72vfn8.s:1283   .text:00000000000005cc .L0 
     /tmp/cc72vfn8.s:1286   .text:00000000000005d4 .L0 
     /tmp/cc72vfn8.s:1289   .text:00000000000005d8 .L0 
     /tmp/cc72vfn8.s:1290   .text:00000000000005d8 .L0 
     /tmp/cc72vfn8.s:1291   .text:00000000000005d8 .L0 
     /tmp/cc72vfn8.s:1294   .text:00000000000005e0 .L0 
     /tmp/cc72vfn8.s:1297   .text:00000000000005e4 .L0 
     /tmp/cc72vfn8.s:1298   .text:00000000000005e4 .L0 
     /tmp/cc72vfn8.s:1299   .text:00000000000005e4 .L0 
     /tmp/cc72vfn8.s:1302   .text:00000000000005ec .L0 
     /tmp/cc72vfn8.s:1305   .text:00000000000005f0 .L0 
     /tmp/cc72vfn8.s:1306   .text:00000000000005f0 .L0 
     /tmp/cc72vfn8.s:1307   .text:00000000000005f0 .L0 
     /tmp/cc72vfn8.s:1310   .text:00000000000005f8 .L0 
GAS LISTING /tmp/cc72vfn8.s 			page 47


     /tmp/cc72vfn8.s:1314   .text:00000000000005fc .L0 
     /tmp/cc72vfn8.s:1324   .bss:0000000000000000 _ZN5Riscv12finishSystemE
     /tmp/cc72vfn8.s:1329   .bss:0000000000000008 _ZN5Riscv9totalTimeE
     /tmp/cc72vfn8.s:1321   .bss:0000000000000000 .LANCHOR0
     /tmp/cc72vfn8.s:1342   .text:00000000000005fc .L0 
     /tmp/cc72vfn8.s:55     .text:0000000000000038 .L0 
     /tmp/cc72vfn8.s:282    .text:0000000000000140 .L0 
     /tmp/cc72vfn8.s:312    .text:000000000000017c .L0 
     /tmp/cc72vfn8.s:234    .rodata.str1.8:0000000000000000 .LC0
     /tmp/cc72vfn8.s:315    .text:0000000000000184 .L0 
     /tmp/cc72vfn8.s:322    .text:0000000000000194 .L0 
     /tmp/cc72vfn8.s:508    .text:0000000000000264 .L0 
     /tmp/cc72vfn8.s:552    .text:0000000000000298 .L0 
     /tmp/cc72vfn8.s:638    .text:00000000000002e4 .L0 
     /tmp/cc72vfn8.s:642    .text:00000000000002f0 .L0 
     /tmp/cc72vfn8.s:611    .rodata.str1.8:0000000000000030 .LC3
     /tmp/cc72vfn8.s:684    .text:0000000000000330 .L0 
     /tmp/cc72vfn8.s:605    .rodata.str1.8:0000000000000008 .LC1
     /tmp/cc72vfn8.s:704    .text:0000000000000354 .L0 
     /tmp/cc72vfn8.s:731    .text:0000000000000390 .L0 
     /tmp/cc72vfn8.s:764    .text:00000000000003b0 .L0 
     /tmp/cc72vfn8.s:789    .text:00000000000003cc .L0 
     /tmp/cc72vfn8.s:868    .text:0000000000000418 .L0 
     /tmp/cc72vfn8.s:874    .text:000000000000042c .L0 
     /tmp/cc72vfn8.s:884    .text:0000000000000448 .L0 
     /tmp/cc72vfn8.s:976    .text:00000000000004a0 .L0 
     /tmp/cc72vfn8.s:608    .rodata.str1.8:0000000000000020 .LC2
     /tmp/cc72vfn8.s:999    .text:00000000000004c8 .L0 
     /tmp/cc72vfn8.s:1076   .rodata:0000000000000000 .L48
     /tmp/cc72vfn8.s:1068   .text:0000000000000518 .L0 
     /tmp/cc72vfn8.s:308    .text:0000000000000178 .L14
     /tmp/cc72vfn8.s:293    .text:000000000000015c .L15
     /tmp/cc72vfn8.s:335    .text:00000000000001b8 .L16
     /tmp/cc72vfn8.s:318    .text:0000000000000194 .L17
     /tmp/cc72vfn8.s:477    .text:0000000000000250 .L27
     /tmp/cc72vfn8.s:581    .text:00000000000002c0 .L32
     /tmp/cc72vfn8.s:570    .text:00000000000002b4 .L31
     /tmp/cc72vfn8.s:714    .text:0000000000000370 .L36
     /tmp/cc72vfn8.s:1009   .text:00000000000004e4 .L37
     /tmp/cc72vfn8.s:991    .text:00000000000004c8 .L38
     /tmp/cc72vfn8.s:694    .text:000000000000034c .L64
     /tmp/cc72vfn8.s:938    .text:0000000000000478 .L35
     /tmp/cc72vfn8.s:807    .text:00000000000003f0 .L42
     /tmp/cc72vfn8.s:795    .text:00000000000003dc .L45
     /tmp/cc72vfn8.s:968    .text:000000000000049c .L65
     /tmp/cc72vfn8.s:954    .text:000000000000048c .L66
     /tmp/cc72vfn8.s:900    .text:0000000000000460 .L44
     /tmp/cc72vfn8.s:1153   .text:0000000000000538 .L46
     /tmp/cc72vfn8.s:259    .text:0000000000000104 .LEHB0
     /tmp/cc72vfn8.s:241    .text:00000000000000ec .LFB33
     /tmp/cc72vfn8.s:277    .text:0000000000000130 .LEHE0
     /tmp/cc72vfn8.s:283    .text:0000000000000148 .LEHB1
     /tmp/cc72vfn8.s:286    .text:0000000000000150 .LEHE1
     /tmp/cc72vfn8.s:359    .text:00000000000001e0 .L19
     /tmp/cc72vfn8.s:290    .text:0000000000000154 .LEHB2
     /tmp/cc72vfn8.s:332    .text:00000000000001b4 .LEHE2
     /tmp/cc72vfn8.s:367    .text:00000000000001f4 .LEHB3
GAS LISTING /tmp/cc72vfn8.s 			page 48


     /tmp/cc72vfn8.s:370    .text:00000000000001fc .LEHE3
     /tmp/cc72vfn8.s:1146   .text:0000000000000530 .L62
     /tmp/cc72vfn8.s:1196   .text:0000000000000554 .L61
     /tmp/cc72vfn8.s:1215   .text:000000000000056c .L60
     /tmp/cc72vfn8.s:1239   .text:0000000000000590 .L59
     /tmp/cc72vfn8.s:1231   .text:0000000000000584 .L58
     /tmp/cc72vfn8.s:1207   .text:0000000000000560 .L57
     /tmp/cc72vfn8.s:1223   .text:0000000000000578 .L56
     /tmp/cc72vfn8.s:1255   .text:00000000000005a8 .L55
     /tmp/cc72vfn8.s:1279   .text:00000000000005cc .L54
     /tmp/cc72vfn8.s:1263   .text:00000000000005b4 .L53
     /tmp/cc72vfn8.s:1271   .text:00000000000005c0 .L52
     /tmp/cc72vfn8.s:1247   .text:000000000000059c .L51
     /tmp/cc72vfn8.s:1287   .text:00000000000005d8 .L50
     /tmp/cc72vfn8.s:1295   .text:00000000000005e4 .L49
     /tmp/cc72vfn8.s:1303   .text:00000000000005f0 .L47
     /tmp/cc72vfn8.s:4022   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cc72vfn8.s:5445   .debug_str:00000000000002c2 .LASF314
     /tmp/cc72vfn8.s:5479   .debug_str:000000000000048d .LASF315
     /tmp/cc72vfn8.s:5899   .debug_str:0000000000001251 .LASF316
     /tmp/cc72vfn8.s:5      .text:0000000000000000 .Ltext0
     /tmp/cc72vfn8.s:1332   .text:00000000000005fc .Letext0
     /tmp/cc72vfn8.s:5371   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cc72vfn8.s:5593   .debug_str:000000000000087e .LASF0
     /tmp/cc72vfn8.s:5631   .debug_str:00000000000009b3 .LASF1
     /tmp/cc72vfn8.s:5785   .debug_str:0000000000000ed5 .LASF2
     /tmp/cc72vfn8.s:5803   .debug_str:0000000000000f6b .LASF4
     /tmp/cc72vfn8.s:5615   .debug_str:0000000000000932 .LASF3
     /tmp/cc72vfn8.s:5397   .debug_str:00000000000000eb .LASF5
     /tmp/cc72vfn8.s:5743   .debug_str:0000000000000dbf .LASF6
     /tmp/cc72vfn8.s:5733   .debug_str:0000000000000d76 .LASF7
     /tmp/cc72vfn8.s:5623   .debug_str:000000000000097f .LASF8
     /tmp/cc72vfn8.s:5555   .debug_str:0000000000000722 .LASF9
     /tmp/cc72vfn8.s:5567   .debug_str:0000000000000794 .LASF10
     /tmp/cc72vfn8.s:5465   .debug_str:000000000000042a .LASF11
     /tmp/cc72vfn8.s:5543   .debug_str:00000000000006e0 .LASF12
     /tmp/cc72vfn8.s:5481   .debug_str:000000000000049b .LASF13
     /tmp/cc72vfn8.s:5463   .debug_str:000000000000041a .LASF14
     /tmp/cc72vfn8.s:5857   .debug_str:0000000000001138 .LASF15
     /tmp/cc72vfn8.s:5521   .debug_str:00000000000005ed .LASF16
     /tmp/cc72vfn8.s:5841   .debug_str:0000000000001083 .LASF17
     /tmp/cc72vfn8.s:5947   .debug_str:00000000000013c8 .LASF110
     /tmp/cc72vfn8.s:5765   .debug_str:0000000000000e5a .LASF21
     /tmp/cc72vfn8.s:5641   .debug_str:00000000000009f6 .LASF18
     /tmp/cc72vfn8.s:5531   .debug_str:000000000000065c .LASF19
     /tmp/cc72vfn8.s:5967   .debug_str:0000000000001476 .LASF20
     /tmp/cc72vfn8.s:5933   .debug_str:0000000000001350 .LASF22
     /tmp/cc72vfn8.s:5537   .debug_str:000000000000069c .LASF23
     /tmp/cc72vfn8.s:5887   .debug_str:00000000000011ee .LASF24
     /tmp/cc72vfn8.s:5495   .debug_str:0000000000000523 .LASF25
     /tmp/cc72vfn8.s:5587   .debug_str:0000000000000855 .LASF26
     /tmp/cc72vfn8.s:5845   .debug_str:00000000000010a8 .LASF28
     /tmp/cc72vfn8.s:5977   .debug_str:00000000000014c7 .LASF27
     /tmp/cc72vfn8.s:5821   .debug_str:0000000000000fec .LASF29
     /tmp/cc72vfn8.s:5689   .debug_str:0000000000000be4 .LASF30
     /tmp/cc72vfn8.s:5669   .debug_str:0000000000000b14 .LASF31
     /tmp/cc72vfn8.s:5517   .debug_str:00000000000005d0 .LASF32
GAS LISTING /tmp/cc72vfn8.s 			page 49


     /tmp/cc72vfn8.s:5385   .debug_str:000000000000005b .LASF33
     /tmp/cc72vfn8.s:5671   .debug_str:0000000000000b2c .LASF40
     /tmp/cc72vfn8.s:5943   .debug_str:00000000000013a0 .LASF42
     /tmp/cc72vfn8.s:5459   .debug_str:00000000000003f6 .LASF34
     /tmp/cc72vfn8.s:5647   .debug_str:0000000000000a33 .LASF35
     /tmp/cc72vfn8.s:5511   .debug_str:000000000000057f .LASF36
     /tmp/cc72vfn8.s:5471   .debug_str:0000000000000447 .LASF37
     /tmp/cc72vfn8.s:5605   .debug_str:00000000000008e4 .LASF38
     /tmp/cc72vfn8.s:5487   .debug_str:00000000000004e1 .LASF39
     /tmp/cc72vfn8.s:5435   .debug_str:000000000000027f .LASF41
     /tmp/cc72vfn8.s:5557   .debug_str:0000000000000732 .LASF43
     /tmp/cc72vfn8.s:5813   .debug_str:0000000000000f9c .LASF44
     /tmp/cc72vfn8.s:5529   .debug_str:0000000000000641 .LASF45
     /tmp/cc72vfn8.s:5599   .debug_str:00000000000008bd .LASF46
     /tmp/cc72vfn8.s:5959   .debug_str:000000000000142e .LASF47
     /tmp/cc72vfn8.s:5923   .debug_str:0000000000001318 .LASF50
     /tmp/cc72vfn8.s:5911   .debug_str:00000000000012bd .LASF52
     /tmp/cc72vfn8.s:5781   .debug_str:0000000000000ec1 .LASF48
     /tmp/cc72vfn8.s:5713   .debug_str:0000000000000cbe .LASF49
     /tmp/cc72vfn8.s:5751   .debug_str:0000000000000de8 .LASF51
     /tmp/cc72vfn8.s:5759   .debug_str:0000000000000e28 .LASF53
     /tmp/cc72vfn8.s:5703   .debug_str:0000000000000c4f .LASF54
     /tmp/cc72vfn8.s:5625   .debug_str:0000000000000992 .LASF55
     /tmp/cc72vfn8.s:5961   .debug_str:0000000000001448 .LASF56
     /tmp/cc72vfn8.s:5893   .debug_str:0000000000001210 .LASF57
     /tmp/cc72vfn8.s:5697   .debug_str:0000000000000c1f .LASF58
     /tmp/cc72vfn8.s:5711   .debug_str:0000000000000caa .LASF59
     /tmp/cc72vfn8.s:5683   .debug_str:0000000000000ba8 .LASF60
     /tmp/cc72vfn8.s:5763   .debug_str:0000000000000e46 .LASF61
     /tmp/cc72vfn8.s:6011   .debug_str:00000000000015d8 .LASF62
     /tmp/cc72vfn8.s:5603   .debug_str:00000000000008d0 .LASF63
     /tmp/cc72vfn8.s:5985   .debug_str:00000000000014fa .LASF107
     /tmp/cc72vfn8.s:5853   .debug_str:000000000000110f .LASF64
     /tmp/cc72vfn8.s:5807   .debug_str:0000000000000f7a .LASF65
     /tmp/cc72vfn8.s:5809   .debug_str:0000000000000f8d .LASF66
     /tmp/cc72vfn8.s:5515   .debug_str:00000000000005bd .LASF67
     /tmp/cc72vfn8.s:5509   .debug_str:0000000000000579 .LASF68
     /tmp/cc72vfn8.s:5405   .debug_str:000000000000012b .LASF69
     /tmp/cc72vfn8.s:5601   .debug_str:00000000000008ca .LASF70
     /tmp/cc72vfn8.s:5499   .debug_str:0000000000000542 .LASF71
     /tmp/cc72vfn8.s:5451   .debug_str:00000000000003a2 .LASF72
     /tmp/cc72vfn8.s:5815   .debug_str:0000000000000faa .LASF73
     /tmp/cc72vfn8.s:5399   .debug_str:00000000000000f2 .LASF74
     /tmp/cc72vfn8.s:5791   .debug_str:0000000000000ef2 .LASF75
     /tmp/cc72vfn8.s:5783   .debug_str:0000000000000eca .LASF76
     /tmp/cc72vfn8.s:5999   .debug_str:0000000000001573 .LASF77
     /tmp/cc72vfn8.s:5789   .debug_str:0000000000000eeb .LASF78
     /tmp/cc72vfn8.s:5461   .debug_str:0000000000000407 .LASF79
     /tmp/cc72vfn8.s:5837   .debug_str:000000000000106e .LASF80
     /tmp/cc72vfn8.s:5797   .debug_str:0000000000000f29 .LASF81
     /tmp/cc72vfn8.s:5949   .debug_str:00000000000013ce .LASF82
     /tmp/cc72vfn8.s:5973   .debug_str:0000000000001494 .LASF83
     /tmp/cc72vfn8.s:5945   .debug_str:00000000000013be .LASF84
     /tmp/cc72vfn8.s:5673   .debug_str:0000000000000b3c .LASF85
     /tmp/cc72vfn8.s:5771   .debug_str:0000000000000e84 .LASF86
     /tmp/cc72vfn8.s:5577   .debug_str:0000000000000817 .LASF87
     /tmp/cc72vfn8.s:5585   .debug_str:000000000000084f .LASF88
GAS LISTING /tmp/cc72vfn8.s 			page 50


     /tmp/cc72vfn8.s:5489   .debug_str:0000000000000500 .LASF89
     /tmp/cc72vfn8.s:5581   .debug_str:000000000000082f .LASF90
     /tmp/cc72vfn8.s:5589   .debug_str:0000000000000860 .LASF91
     /tmp/cc72vfn8.s:5917   .debug_str:00000000000012e5 .LASF92
     /tmp/cc72vfn8.s:5565   .debug_str:0000000000000778 .LASF93
     /tmp/cc72vfn8.s:5737   .debug_str:0000000000000d91 .LASF94
     /tmp/cc72vfn8.s:5621   .debug_str:000000000000095d .LASF95
     /tmp/cc72vfn8.s:5429   .debug_str:000000000000024d .LASF96
     /tmp/cc72vfn8.s:5663   .debug_str:0000000000000ad6 .LASF97
     /tmp/cc72vfn8.s:5773   .debug_str:0000000000000e8a .LASF98
     /tmp/cc72vfn8.s:5391   .debug_str:00000000000000a7 .LASF99
     /tmp/cc72vfn8.s:5437   .debug_str:0000000000000289 .LASF100
     /tmp/cc72vfn8.s:5915   .debug_str:00000000000012d9 .LASF101
     /tmp/cc72vfn8.s:5439   .debug_str:0000000000000298 .LASF102
     /tmp/cc72vfn8.s:5687   .debug_str:0000000000000bd2 .LASF103
     /tmp/cc72vfn8.s:5569   .debug_str:00000000000007a2 .LASF104
     /tmp/cc72vfn8.s:5613   .debug_str:000000000000091f .LASF105
     /tmp/cc72vfn8.s:5457   .debug_str:00000000000003e2 .LASF106
     /tmp/cc72vfn8.s:5881   .debug_str:00000000000011ca .LASF108
     /tmp/cc72vfn8.s:5661   .debug_str:0000000000000ad1 .LASF109
     /tmp/cc72vfn8.s:5727   .debug_str:0000000000000d38 .LASF111
     /tmp/cc72vfn8.s:5827   .debug_str:0000000000001018 .LASF146
     /tmp/cc72vfn8.s:5629   .debug_str:00000000000009ae .LASF112
     /tmp/cc72vfn8.s:5467   .debug_str:0000000000000439 .LASF113
     /tmp/cc72vfn8.s:5551   .debug_str:000000000000070c .LASF114
     /tmp/cc72vfn8.s:5633   .debug_str:00000000000009c6 .LASF115
     /tmp/cc72vfn8.s:5639   .debug_str:00000000000009e3 .LASF116
     /tmp/cc72vfn8.s:5549   .debug_str:0000000000000703 .LASF117
     /tmp/cc72vfn8.s:6015   .debug_str:00000000000015fe .LASF118
     /tmp/cc72vfn8.s:5677   .debug_str:0000000000000b71 .LASF119
     /tmp/cc72vfn8.s:5401   .debug_str:00000000000000fd .LASF121
     /tmp/cc72vfn8.s:5863   .debug_str:0000000000001166 .LASF120
     /tmp/cc72vfn8.s:5679   .debug_str:0000000000000b7b .LASF122
     /tmp/cc72vfn8.s:5937   .debug_str:000000000000136f .LASF123
     /tmp/cc72vfn8.s:5897   .debug_str:000000000000122e .LASF124
     /tmp/cc72vfn8.s:5859   .debug_str:0000000000001144 .LASF125
     /tmp/cc72vfn8.s:5393   .debug_str:00000000000000af .LASF126
     /tmp/cc72vfn8.s:5953   .debug_str:00000000000013dd .LASF127
     /tmp/cc72vfn8.s:5389   .debug_str:0000000000000079 .LASF128
     /tmp/cc72vfn8.s:5871   .debug_str:000000000000118a .LASF129
     /tmp/cc72vfn8.s:5575   .debug_str:00000000000007e8 .LASF130
     /tmp/cc72vfn8.s:5379   .debug_str:000000000000002b .LASF131
     /tmp/cc72vfn8.s:5715   .debug_str:0000000000000cd3 .LASF132
     /tmp/cc72vfn8.s:5523   .debug_str:0000000000000603 .LASF133
     /tmp/cc72vfn8.s:5957   .debug_str:0000000000001406 .LASF134
     /tmp/cc72vfn8.s:5843   .debug_str:0000000000001099 .LASF135
     /tmp/cc72vfn8.s:5513   .debug_str:0000000000000596 .LASF136
     /tmp/cc72vfn8.s:5877   .debug_str:00000000000011b5 .LASF137
     /tmp/cc72vfn8.s:5455   .debug_str:00000000000003dc .LASF138
     /tmp/cc72vfn8.s:5825   .debug_str:0000000000001010 .LASF139
     /tmp/cc72vfn8.s:5473   .debug_str:000000000000046b .LASF140
     /tmp/cc72vfn8.s:5441   .debug_str:00000000000002ab .LASF141
     /tmp/cc72vfn8.s:5735   .debug_str:0000000000000d89 .LASF142
     /tmp/cc72vfn8.s:5627   .debug_str:00000000000009a5 .LASF143
     /tmp/cc72vfn8.s:5805   .debug_str:0000000000000f72 .LASF208
     /tmp/cc72vfn8.s:5579   .debug_str:0000000000000829 .LASF144
     /tmp/cc72vfn8.s:5905   .debug_str:000000000000129b .LASF145
GAS LISTING /tmp/cc72vfn8.s 			page 51


     /tmp/cc72vfn8.s:5693   .debug_str:0000000000000bfe .LASF317
     /tmp/cc72vfn8.s:5719   .debug_str:0000000000000d0d .LASF147
     /tmp/cc72vfn8.s:5951   .debug_str:00000000000013d8 .LASF148
     /tmp/cc72vfn8.s:5995   .debug_str:000000000000153e .LASF149
     /tmp/cc72vfn8.s:5989   .debug_str:0000000000001515 .LASF150
     /tmp/cc72vfn8.s:5891   .debug_str:0000000000001200 .LASF151
     /tmp/cc72vfn8.s:5503   .debug_str:0000000000000565 .LASF152
     /tmp/cc72vfn8.s:5411   .debug_str:0000000000000184 .LASF153
     /tmp/cc72vfn8.s:5637   .debug_str:00000000000009dd .LASF154
     /tmp/cc72vfn8.s:5723   .debug_str:0000000000000d1c .LASF155
     /tmp/cc72vfn8.s:5885   .debug_str:00000000000011e6 .LASF156
     /tmp/cc72vfn8.s:5501   .debug_str:0000000000000554 .LASF157
     /tmp/cc72vfn8.s:5667   .debug_str:0000000000000b07 .LASF162
     /tmp/cc72vfn8.s:5649   .debug_str:0000000000000a51 .LASF164
     /tmp/cc72vfn8.s:6003   .debug_str:00000000000015a0 .LASF158
     /tmp/cc72vfn8.s:5547   .debug_str:00000000000006f7 .LASF159
     /tmp/cc72vfn8.s:5595   .debug_str:000000000000088b .LASF160
     /tmp/cc72vfn8.s:5607   .debug_str:00000000000008f6 .LASF161
     /tmp/cc72vfn8.s:5817   .debug_str:0000000000000fc5 .LASF163
     /tmp/cc72vfn8.s:5497   .debug_str:000000000000052f .LASF165
     /tmp/cc72vfn8.s:5755   .debug_str:0000000000000e12 .LASF166
     /tmp/cc72vfn8.s:5849   .debug_str:00000000000010e0 .LASF167
     /tmp/cc72vfn8.s:5691   .debug_str:0000000000000bef .LASF168
     /tmp/cc72vfn8.s:5381   .debug_str:000000000000003c .LASF169
     /tmp/cc72vfn8.s:5971   .debug_str:0000000000001485 .LASF170
     /tmp/cc72vfn8.s:5729   .debug_str:0000000000000d48 .LASF171
     /tmp/cc72vfn8.s:5839   .debug_str:0000000000001075 .LASF172
     /tmp/cc72vfn8.s:5749   .debug_str:0000000000000ddc .LASF173
     /tmp/cc72vfn8.s:5375   .debug_str:000000000000000f .LASF174
     /tmp/cc72vfn8.s:5709   .debug_str:0000000000000c9a .LASF175
     /tmp/cc72vfn8.s:5777   .debug_str:0000000000000e9b .LASF176
     /tmp/cc72vfn8.s:5979   .debug_str:00000000000014d6 .LASF177
     /tmp/cc72vfn8.s:5617   .debug_str:0000000000000944 .LASF178
     /tmp/cc72vfn8.s:5831   .debug_str:000000000000103b .LASF179
     /tmp/cc72vfn8.s:5993   .debug_str:0000000000001528 .LASF180
     /tmp/cc72vfn8.s:5865   .debug_str:000000000000116f .LASF181
     /tmp/cc72vfn8.s:5833   .debug_str:0000000000001046 .LASF182
     /tmp/cc72vfn8.s:5811   .debug_str:0000000000000f94 .LASF183
     /tmp/cc72vfn8.s:5731   .debug_str:0000000000000d62 .LASF184
     /tmp/cc72vfn8.s:5701   .debug_str:0000000000000c30 .LASF185
     /tmp/cc72vfn8.s:5485   .debug_str:00000000000004cf .LASF186
     /tmp/cc72vfn8.s:5975   .debug_str:00000000000014aa .LASF187
     /tmp/cc72vfn8.s:6017   .debug_str:0000000000001608 .LASF188
     /tmp/cc72vfn8.s:5705   .debug_str:0000000000000c56 .LASF189
     /tmp/cc72vfn8.s:5795   .debug_str:0000000000000f16 .LASF190
     /tmp/cc72vfn8.s:5819   .debug_str:0000000000000fce .LASF191
     /tmp/cc72vfn8.s:5929   .debug_str:0000000000001332 .LASF192
     /tmp/cc72vfn8.s:6013   .debug_str:00000000000015e0 .LASF193
     /tmp/cc72vfn8.s:6001   .debug_str:000000000000158b .LASF194
     /tmp/cc72vfn8.s:5847   .debug_str:00000000000010c0 .LASF195
     /tmp/cc72vfn8.s:5801   .debug_str:0000000000000f62 .LASF196
     /tmp/cc72vfn8.s:5761   .debug_str:0000000000000e3b .LASF197
     /tmp/cc72vfn8.s:5895   .debug_str:0000000000001224 .LASF198
     /tmp/cc72vfn8.s:5725   .debug_str:0000000000000d2c .LASF199
     /tmp/cc72vfn8.s:5987   .debug_str:0000000000001507 .LASF200
     /tmp/cc72vfn8.s:5423   .debug_str:00000000000001f8 .LASF202
     /tmp/cc72vfn8.s:5427   .debug_str:0000000000000238 .LASF201
GAS LISTING /tmp/cc72vfn8.s 			page 52


     /tmp/cc72vfn8.s:5453   .debug_str:00000000000003b0 .LASF203
     /tmp/cc72vfn8.s:6007   .debug_str:00000000000015b9 .LASF318
     /tmp/cc72vfn8.s:5449   .debug_str:0000000000000391 .LASF319
     /tmp/cc72vfn8.s:5383   .debug_str:0000000000000056 .LASF204
     /tmp/cc72vfn8.s:5925   .debug_str:0000000000001321 .LASF205
     /tmp/cc72vfn8.s:5655   .debug_str:0000000000000a8e .LASF206
     /tmp/cc72vfn8.s:5507   .debug_str:0000000000000573 .LASF207
     /tmp/cc72vfn8.s:5909   .debug_str:00000000000012b5 .LASF209
     /tmp/cc72vfn8.s:5769   .debug_str:0000000000000e79 .LASF210
     /tmp/cc72vfn8.s:5563   .debug_str:0000000000000764 .LASF211
     /tmp/cc72vfn8.s:5419   .debug_str:00000000000001e7 .LASF212
     /tmp/cc72vfn8.s:5767   .debug_str:0000000000000e65 .LASF213
     /tmp/cc72vfn8.s:5505   .debug_str:000000000000056e .LASF214
     /tmp/cc72vfn8.s:5829   .debug_str:0000000000001024 .LASF215
     /tmp/cc72vfn8.s:5861   .debug_str:000000000000115f .LASF216
     /tmp/cc72vfn8.s:5779   .debug_str:0000000000000ea8 .LASF217
     /tmp/cc72vfn8.s:5377   .debug_str:000000000000001f .LASF218
     /tmp/cc72vfn8.s:5793   .debug_str:0000000000000f0a .LASF219
     /tmp/cc72vfn8.s:5665   .debug_str:0000000000000af3 .LASF220
     /tmp/cc72vfn8.s:5583   .debug_str:000000000000083a .LASF221
     /tmp/cc72vfn8.s:5469   .debug_str:000000000000043e .LASF222
     /tmp/cc72vfn8.s:5477   .debug_str:0000000000000483 .LASF223
     /tmp/cc72vfn8.s:5695   .debug_str:0000000000000c16 .LASF224
     /tmp/cc72vfn8.s:5873   .debug_str:000000000000119f .LASF225
     /tmp/cc72vfn8.s:5373   .debug_str:0000000000000000 .LASF226
     /tmp/cc72vfn8.s:5573   .debug_str:00000000000007c6 .LASF227
     /tmp/cc72vfn8.s:5907   .debug_str:00000000000012a6 .LASF228
     /tmp/cc72vfn8.s:5855   .debug_str:0000000000001116 .LASF229
     /tmp/cc72vfn8.s:5657   .debug_str:0000000000000a96 .LASF230
     /tmp/cc72vfn8.s:5483   .debug_str:00000000000004ab .LASF231
     /tmp/cc72vfn8.s:5717   .debug_str:0000000000000cfd .LASF232
     /tmp/cc72vfn8.s:5753   .debug_str:0000000000000def .LASF233
     /tmp/cc72vfn8.s:5635   .debug_str:00000000000009d4 .LASF234
     /tmp/cc72vfn8.s:5591   .debug_str:0000000000000878 .LASF235
     /tmp/cc72vfn8.s:6009   .debug_str:00000000000015c0 .LASF236
     /tmp/cc72vfn8.s:5387   .debug_str:0000000000000071 .LASF237
     /tmp/cc72vfn8.s:5653   .debug_str:0000000000000a74 .LASF238
     /tmp/cc72vfn8.s:5611   .debug_str:000000000000090f .LASF239
     /tmp/cc72vfn8.s:5707   .debug_str:0000000000000c77 .LASF240
     /tmp/cc72vfn8.s:5955   .debug_str:00000000000013f3 .LASF241
     /tmp/cc72vfn8.s:5799   .debug_str:0000000000000f3c .LASF242
     /tmp/cc72vfn8.s:5991   .debug_str:000000000000151b .LASF243
     /tmp/cc72vfn8.s:5409   .debug_str:0000000000000160 .LASF244
     /tmp/cc72vfn8.s:5869   .debug_str:0000000000001185 .LASF245
     /tmp/cc72vfn8.s:5965   .debug_str:0000000000001469 .LASF246
     /tmp/cc72vfn8.s:5741   .debug_str:0000000000000daf .LASF247
     /tmp/cc72vfn8.s:5903   .debug_str:0000000000001289 .LASF248
     /tmp/cc72vfn8.s:5539   .debug_str:00000000000006a8 .LASF249
     /tmp/cc72vfn8.s:5443   .debug_str:00000000000002b4 .LASF250
     /tmp/cc72vfn8.s:5407   .debug_str:000000000000013d .LASF251
     /tmp/cc72vfn8.s:5699   .debug_str:0000000000000c27 .LASF252
     /tmp/cc72vfn8.s:5559   .debug_str:0000000000000749 .LASF253
     /tmp/cc72vfn8.s:5533   .debug_str:0000000000000665 .LASF254
     /tmp/cc72vfn8.s:5721   .debug_str:0000000000000d12 .LASF255
     /tmp/cc72vfn8.s:5867   .debug_str:000000000000117a .LASF256
     /tmp/cc72vfn8.s:5747   .debug_str:0000000000000dd2 .LASF257
     /tmp/cc72vfn8.s:5931   .debug_str:0000000000001345 .LASF258
GAS LISTING /tmp/cc72vfn8.s 			page 53


     /tmp/cc72vfn8.s:5875   .debug_str:00000000000011aa .LASF259
     /tmp/cc72vfn8.s:5927   .debug_str:0000000000001326 .LASF260
     /tmp/cc72vfn8.s:5403   .debug_str:000000000000011e .LASF261
     /tmp/cc72vfn8.s:5681   .debug_str:0000000000000b9c .LASF262
     /tmp/cc72vfn8.s:5745   .debug_str:0000000000000dc6 .LASF263
     /tmp/cc72vfn8.s:5835   .debug_str:000000000000105c .LASF264
     /tmp/cc72vfn8.s:5527   .debug_str:000000000000061f .LASF265
     /tmp/cc72vfn8.s:5921   .debug_str:0000000000001306 .LASF266
     /tmp/cc72vfn8.s:5597   .debug_str:000000000000089b .LASF267
     /tmp/cc72vfn8.s:5919   .debug_str:00000000000012f4 .LASF268
     /tmp/cc72vfn8.s:5685   .debug_str:0000000000000bb0 .LASF269
     /tmp/cc72vfn8.s:5433   .debug_str:000000000000026c .LASF270
     /tmp/cc72vfn8.s:5447   .debug_str:000000000000036e .LASF271
     /tmp/cc72vfn8.s:5519   .debug_str:00000000000005da .LASF272
     /tmp/cc72vfn8.s:5535   .debug_str:0000000000000679 .LASF273
     /tmp/cc72vfn8.s:5413   .debug_str:0000000000000197 .LASF274
     /tmp/cc72vfn8.s:5941   .debug_str:0000000000001391 .LASF275
     /tmp/cc72vfn8.s:5675   .debug_str:0000000000000b52 .LASF276
     /tmp/cc72vfn8.s:5963   .debug_str:0000000000001450 .LASF277
     /tmp/cc72vfn8.s:5659   .debug_str:0000000000000aa7 .LASF278
     /tmp/cc72vfn8.s:5643   .debug_str:00000000000009ff .LASF279
     /tmp/cc72vfn8.s:5997   .debug_str:000000000000154a .LASF280
     /tmp/cc72vfn8.s:5541   .debug_str:00000000000006cf .LASF281
     /tmp/cc72vfn8.s:5883   .debug_str:00000000000011d4 .LASF282
     /tmp/cc72vfn8.s:5553   .debug_str:0000000000000715 .LASF283
     /tmp/cc72vfn8.s:5981   .debug_str:00000000000014e1 .LASF284
     /tmp/cc72vfn8.s:5571   .debug_str:00000000000007b5 .LASF285
     /tmp/cc72vfn8.s:5619   .debug_str:0000000000000951 .LASF286
     /tmp/cc72vfn8.s:5645   .debug_str:0000000000000a17 .LASF287
     /tmp/cc72vfn8.s:6005   .debug_str:00000000000015ad .LASF288
     /tmp/cc72vfn8.s:5417   .debug_str:00000000000001cb .LASF289
     /tmp/cc72vfn8.s:5901   .debug_str:0000000000001274 .LASF290
     /tmp/cc72vfn8.s:5415   .debug_str:00000000000001b2 .LASF291
     /tmp/cc72vfn8.s:541    .text:000000000000028c .LFB39
     /tmp/cc72vfn8.s:601    .text:00000000000002cc .LFE39
     /tmp/cc72vfn8.s:559    .text:00000000000002ac .LBB47
     /tmp/cc72vfn8.s:572    .text:00000000000002b4 .LBE47
     /tmp/cc72vfn8.s:5167   .debug_loc:0000000000000000 .LLST4
     /tmp/cc72vfn8.s:585    .text:00000000000002c0 .LBB49
     /tmp/cc72vfn8.s:597    .text:00000000000002c8 .LBE49
     /tmp/cc72vfn8.s:5176   .debug_loc:0000000000000026 .LLST5
     /tmp/cc72vfn8.s:488    .text:0000000000000254 .LFB38
     /tmp/cc72vfn8.s:535    .text:000000000000028c .LFE38
     /tmp/cc72vfn8.s:5913   .debug_str:00000000000012d2 .LASF292
     /tmp/cc72vfn8.s:467    .text:0000000000000244 .LFB37
     /tmp/cc72vfn8.s:482    .text:0000000000000254 .LFE37
     /tmp/cc72vfn8.s:434    .text:0000000000000224 .LFB36
     /tmp/cc72vfn8.s:461    .text:0000000000000244 .LFE36
     /tmp/cc72vfn8.s:402    .text:00000000000001fc .LFB35
     /tmp/cc72vfn8.s:428    .text:0000000000000224 .LFE35
     /tmp/cc72vfn8.s:5185   .debug_loc:000000000000004c .LLST3
     /tmp/cc72vfn8.s:417    .text:0000000000000214 .LVL27
     /tmp/cc72vfn8.s:10     .text:0000000000000000 .LFB34
     /tmp/cc72vfn8.s:36     .text:0000000000000028 .LFE34
     /tmp/cc72vfn8.s:25     .text:0000000000000018 .LVL0
     /tmp/cc72vfn8.s:372    .text:00000000000001fc .LFE33
     /tmp/cc72vfn8.s:5561   .debug_str:000000000000075c .LASF293
GAS LISTING /tmp/cc72vfn8.s 			page 54


     /tmp/cc72vfn8.s:5199   .debug_loc:0000000000000085 .LLST2
     /tmp/cc72vfn8.s:262    .text:000000000000010c .LVL10
     /tmp/cc72vfn8.s:266    .text:0000000000000114 .LVL11
     /tmp/cc72vfn8.s:271    .text:0000000000000120 .LVL12
     /tmp/cc72vfn8.s:276    .text:0000000000000130 .LVL13
     /tmp/cc72vfn8.s:285    .text:0000000000000150 .LVL14
     /tmp/cc72vfn8.s:292    .text:000000000000015c .LVL15
     /tmp/cc72vfn8.s:299    .text:0000000000000168 .LVL16
     /tmp/cc72vfn8.s:305    .text:0000000000000174 .LVL17
     /tmp/cc72vfn8.s:317    .text:0000000000000194 .LVL18
     /tmp/cc72vfn8.s:325    .text:00000000000001a8 .LVL19
     /tmp/cc72vfn8.s:331    .text:00000000000001b4 .LVL20
     /tmp/cc72vfn8.s:339    .text:00000000000001c0 .LVL21
     /tmp/cc72vfn8.s:343    .text:00000000000001c8 .LVL22
     /tmp/cc72vfn8.s:365    .text:00000000000001f0 .LVL24
     /tmp/cc72vfn8.s:369    .text:00000000000001fc .LVL25
     /tmp/cc72vfn8.s:618    .text:00000000000002cc .LFB32
     /tmp/cc72vfn8.s:1315   .text:00000000000005fc .LFE32
     /tmp/cc72vfn8.s:5395   .debug_str:00000000000000e4 .LASF294
     /tmp/cc72vfn8.s:5206   .debug_loc:00000000000000a8 .LLST6
     /tmp/cc72vfn8.s:5345   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/cc72vfn8.s:5889   .debug_str:00000000000011fb .LASF295
     /tmp/cc72vfn8.s:5823   .debug_str:0000000000001008 .LASF296
     /tmp/cc72vfn8.s:813    .text:00000000000003f0 .LBB61
     /tmp/cc72vfn8.s:829    .text:00000000000003fc .LBE61
     /tmp/cc72vfn8.s:833    .text:0000000000000400 .LBB63
     /tmp/cc72vfn8.s:848    .text:000000000000040c .LBE63
     /tmp/cc72vfn8.s:853    .text:0000000000000410 .LBB65
     /tmp/cc72vfn8.s:865    .text:0000000000000418 .LBE65
     /tmp/cc72vfn8.s:5233   .debug_loc:000000000000012a .LLST10
     /tmp/cc72vfn8.s:887    .text:0000000000000454 .LBB67
     /tmp/cc72vfn8.s:895    .text:0000000000000458 .LBE67
     /tmp/cc72vfn8.s:5241   .debug_loc:000000000000014e .LLST11
     /tmp/cc72vfn8.s:905    .text:0000000000000464 .LBB69
     /tmp/cc72vfn8.s:916    .text:0000000000000468 .LBE69
     /tmp/cc72vfn8.s:5248   .debug_loc:0000000000000171 .LLST12
     /tmp/cc72vfn8.s:921    .text:000000000000046c .LBB71
     /tmp/cc72vfn8.s:932    .text:0000000000000470 .LBE71
     /tmp/cc72vfn8.s:5255   .debug_loc:0000000000000194 .LLST13
     /tmp/cc72vfn8.s:881    .text:0000000000000448 .LVL56
     /tmp/cc72vfn8.s:936    .text:0000000000000478 .LVL63
     /tmp/cc72vfn8.s:965    .text:0000000000000498 .LVL64
     /tmp/cc72vfn8.s:5262   .debug_loc:00000000000001b7 .LLST7
     /tmp/cc72vfn8.s:5775   .debug_str:0000000000000e91 .LASF297
     /tmp/cc72vfn8.s:5273   .debug_loc:00000000000001ed .LLST8
     /tmp/cc72vfn8.s:5280   .debug_loc:0000000000000210 .LLST9
     /tmp/cc72vfn8.s:983    .text:00000000000004b8 .LVL67
     /tmp/cc72vfn8.s:988    .text:00000000000004c4 .LVL68
     /tmp/cc72vfn8.s:801    .text:00000000000003e4 .LVL50
     /tmp/cc72vfn8.s:803    .text:00000000000003ec .LVL51
     /tmp/cc72vfn8.s:5295   .debug_loc:0000000000000259 .LLST14
     /tmp/cc72vfn8.s:1024   .text:00000000000004e8 .LBB76
     /tmp/cc72vfn8.s:1039   .text:00000000000004f4 .LBE76
     /tmp/cc72vfn8.s:1045   .text:00000000000004fc .LBB78
     /tmp/cc72vfn8.s:1060   .text:0000000000000508 .LBE78
     /tmp/cc72vfn8.s:1158   .text:000000000000053c .LBB80
     /tmp/cc72vfn8.s:1169   .text:0000000000000540 .LBE80
GAS LISTING /tmp/cc72vfn8.s 			page 55


     /tmp/cc72vfn8.s:5302   .debug_loc:000000000000027c .LLST15
     /tmp/cc72vfn8.s:1174   .text:0000000000000544 .LBB82
     /tmp/cc72vfn8.s:1185   .text:0000000000000548 .LBE82
     /tmp/cc72vfn8.s:5309   .debug_loc:000000000000029f .LLST16
     /tmp/cc72vfn8.s:1151   .text:0000000000000538 .LVL75
     /tmp/cc72vfn8.s:1189   .text:0000000000000550 .LVL80
     /tmp/cc72vfn8.s:1204   .text:000000000000055c .LVL81
     /tmp/cc72vfn8.s:1212   .text:0000000000000568 .LVL82
     /tmp/cc72vfn8.s:1220   .text:0000000000000574 .LVL83
     /tmp/cc72vfn8.s:1228   .text:0000000000000580 .LVL84
     /tmp/cc72vfn8.s:1236   .text:000000000000058c .LVL85
     /tmp/cc72vfn8.s:1244   .text:0000000000000598 .LVL86
     /tmp/cc72vfn8.s:1252   .text:00000000000005a4 .LVL87
     /tmp/cc72vfn8.s:1260   .text:00000000000005b0 .LVL88
     /tmp/cc72vfn8.s:1268   .text:00000000000005bc .LVL89
     /tmp/cc72vfn8.s:1276   .text:00000000000005c8 .LVL90
     /tmp/cc72vfn8.s:1284   .text:00000000000005d4 .LVL91
     /tmp/cc72vfn8.s:1292   .text:00000000000005e0 .LVL92
     /tmp/cc72vfn8.s:1300   .text:00000000000005ec .LVL93
     /tmp/cc72vfn8.s:1308   .text:00000000000005f8 .LVL94
     /tmp/cc72vfn8.s:652    .text:0000000000000304 .LBB51
     /tmp/cc72vfn8.s:668    .text:0000000000000310 .LBE51
     /tmp/cc72vfn8.s:686    .text:0000000000000340 .LVL36
     /tmp/cc72vfn8.s:690    .text:0000000000000348 .LVL37
     /tmp/cc72vfn8.s:706    .text:0000000000000364 .LVL39
     /tmp/cc72vfn8.s:710    .text:000000000000036c .LVL40
     /tmp/cc72vfn8.s:1001   .text:00000000000004d8 .LVL70
     /tmp/cc72vfn8.s:1005   .text:00000000000004e0 .LVL71
     /tmp/cc72vfn8.s:201    .text:00000000000000cc .LFB31
     /tmp/cc72vfn8.s:230    .text:00000000000000ec .LFE31
     /tmp/cc72vfn8.s:132    .text:0000000000000084 .LFB30
     /tmp/cc72vfn8.s:164    .text:00000000000000a4 .LFE30
     /tmp/cc72vfn8.s:143    .text:0000000000000090 .LBB45
     /tmp/cc72vfn8.s:155    .text:0000000000000098 .LBE45
     /tmp/cc72vfn8.s:5316   .debug_loc:00000000000002c2 .LLST1
     /tmp/cc72vfn8.s:94     .text:0000000000000064 .LFB29
     /tmp/cc72vfn8.s:126    .text:0000000000000084 .LFE29
     /tmp/cc72vfn8.s:105    .text:0000000000000070 .LBB43
     /tmp/cc72vfn8.s:117    .text:0000000000000078 .LBE43
     /tmp/cc72vfn8.s:5324   .debug_loc:00000000000002e6 .LLST0
     /tmp/cc72vfn8.s:170    .text:00000000000000a4 .LFB28
     /tmp/cc72vfn8.s:195    .text:00000000000000cc .LFE28
     /tmp/cc72vfn8.s:184    .text:00000000000000bc .LVL9
     /tmp/cc72vfn8.s:42     .text:0000000000000028 .LFB27
     /tmp/cc72vfn8.s:88     .text:0000000000000064 .LFE27
     /tmp/cc72vfn8.s:57     .text:0000000000000040 .LBB41
     /tmp/cc72vfn8.s:69     .text:0000000000000044 .LBE41
     /tmp/cc72vfn8.s:73     .text:000000000000004c .LVL3
     /tmp/cc72vfn8.s:77     .text:0000000000000054 .LVL4
     /tmp/cc72vfn8.s:5493   .debug_str:000000000000051e .LASF320
     /tmp/cc72vfn8.s:5421   .debug_str:00000000000001f3 .LASF298
     /tmp/cc72vfn8.s:5969   .debug_str:000000000000147f .LASF299
     /tmp/cc72vfn8.s:5525   .debug_str:0000000000000613 .LASF300
     /tmp/cc72vfn8.s:5787   .debug_str:0000000000000ee3 .LASF302
     /tmp/cc72vfn8.s:5757   .debug_str:0000000000000e1b .LASF301
     /tmp/cc72vfn8.s:5739   .debug_str:0000000000000da6 .LASF303
     /tmp/cc72vfn8.s:5491   .debug_str:0000000000000512 .LASF304
GAS LISTING /tmp/cc72vfn8.s 			page 56


     /tmp/cc72vfn8.s:5545   .debug_str:00000000000006ef .LASF305
     /tmp/cc72vfn8.s:5935   .debug_str:000000000000135f .LASF306
     /tmp/cc72vfn8.s:5851   .debug_str:00000000000010fc .LASF307
     /tmp/cc72vfn8.s:5983   .debug_str:00000000000014ee .LASF308
     /tmp/cc72vfn8.s:5879   .debug_str:00000000000011bb .LASF321
     /tmp/cc72vfn8.s:5425   .debug_str:0000000000000220 .LASF322
     /tmp/cc72vfn8.s:5651   .debug_str:0000000000000a69 .LASF309
     /tmp/cc72vfn8.s:5475   .debug_str:0000000000000475 .LASF310
     /tmp/cc72vfn8.s:5939   .debug_str:000000000000137a .LASF311
     /tmp/cc72vfn8.s:5431   .debug_str:000000000000025c .LASF312
     /tmp/cc72vfn8.s:5609   .debug_str:0000000000000903 .LASF313
     /tmp/cc72vfn8.s:558    .text:00000000000002ac .LVL31
     /tmp/cc72vfn8.s:568    .text:00000000000002b4 .LVL32
     /tmp/cc72vfn8.s:584    .text:00000000000002c0 .LVL33
     /tmp/cc72vfn8.s:594    .text:00000000000002c8 .LVL34
     /tmp/cc72vfn8.s:405    .text:00000000000001fc .LVL26
     /tmp/cc72vfn8.s:353    .text:00000000000001d4 .LVL23
     /tmp/cc72vfn8.s:666    .text:0000000000000310 .LVL35
     /tmp/cc72vfn8.s:693    .text:000000000000034c .LVL38
     /tmp/cc72vfn8.s:713    .text:0000000000000370 .LVL41
     /tmp/cc72vfn8.s:732    .text:0000000000000398 .LVL42
     /tmp/cc72vfn8.s:806    .text:00000000000003f0 .LVL52
     /tmp/cc72vfn8.s:822    .text:00000000000003f4 .LVL53
     /tmp/cc72vfn8.s:990    .text:00000000000004c8 .LVL69
     /tmp/cc72vfn8.s:1008   .text:00000000000004e4 .LVL72
     /tmp/cc72vfn8.s:1021   .text:00000000000004e8 .LVL73
     /tmp/cc72vfn8.s:852    .text:0000000000000410 .LVL54
     /tmp/cc72vfn8.s:862    .text:0000000000000418 .LVL55
     /tmp/cc72vfn8.s:886    .text:0000000000000454 .LVL57
     /tmp/cc72vfn8.s:893    .text:0000000000000458 .LVL58
     /tmp/cc72vfn8.s:904    .text:0000000000000464 .LVL59
     /tmp/cc72vfn8.s:913    .text:0000000000000468 .LVL60
     /tmp/cc72vfn8.s:920    .text:000000000000046c .LVL61
     /tmp/cc72vfn8.s:929    .text:0000000000000470 .LVL62
     /tmp/cc72vfn8.s:734    .text:000000000000039c .LVL43
     /tmp/cc72vfn8.s:752    .text:00000000000003a8 .LVL44
     /tmp/cc72vfn8.s:766    .text:00000000000003bc .LVL46
     /tmp/cc72vfn8.s:790    .text:00000000000003d4 .LVL48
     /tmp/cc72vfn8.s:758    .text:00000000000003ac .LVL45
     /tmp/cc72vfn8.s:786    .text:00000000000003cc .LVL47
     /tmp/cc72vfn8.s:794    .text:00000000000003dc .LVL49
     /tmp/cc72vfn8.s:967    .text:000000000000049c .LVL65
     /tmp/cc72vfn8.s:981    .text:00000000000004b0 .LVL66
     /tmp/cc72vfn8.s:1067   .text:0000000000000518 .LVL74
     /tmp/cc72vfn8.s:1157   .text:000000000000053c .LVL76
     /tmp/cc72vfn8.s:1166   .text:0000000000000540 .LVL77
     /tmp/cc72vfn8.s:1173   .text:0000000000000544 .LVL78
     /tmp/cc72vfn8.s:1182   .text:0000000000000548 .LVL79
     /tmp/cc72vfn8.s:142    .text:0000000000000090 .LVL7
     /tmp/cc72vfn8.s:152    .text:0000000000000098 .LVL8
     /tmp/cc72vfn8.s:104    .text:0000000000000070 .LVL5
     /tmp/cc72vfn8.s:114    .text:0000000000000078 .LVL6
     /tmp/cc72vfn8.s:1343   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/cc72vfn8.s:728    .text:0000000000000390 .LBB55
     /tmp/cc72vfn8.s:808    .text:00000000000003f0 .LBE55
     /tmp/cc72vfn8.s:970    .text:000000000000049c .LBB74
     /tmp/cc72vfn8.s:994    .text:00000000000004c8 .LBE74
GAS LISTING /tmp/cc72vfn8.s 			page 57


     /tmp/cc72vfn8.s:761    .text:00000000000003b0 .LBB57
     /tmp/cc72vfn8.s:796    .text:00000000000003dc .LBE57
     /tmp/cc72vfn8.s:972    .text:000000000000049c .LBB58
     /tmp/cc72vfn8.s:992    .text:00000000000004c8 .LBE58
     /tmp/cc72vfn8.s:811    .text:00000000000003f0 .LBB60
     /tmp/cc72vfn8.s:939    .text:0000000000000478 .LBE60
     /tmp/cc72vfn8.s:958    .text:000000000000048c .LBB73
     /tmp/cc72vfn8.s:969    .text:000000000000049c .LBE73
     /tmp/cc72vfn8.s:1013   .text:00000000000004e4 .LBB75
     /tmp/cc72vfn8.s:1191   .text:0000000000000550 .LBE75
     /tmp/cc72vfn8.s:1199   .text:0000000000000554 .LBB84
     /tmp/cc72vfn8.s:1311   .text:00000000000005fc .LBE84
     /tmp/cc72vfn8.s:375    .gcc_except_table:0000000000000000 .LLSDA33

UNDEFINED SYMBOLS
_Z8userMainv
_ZN5Riscv14supervisorTrapEv
_ZN3PCB10initializeEv
_ZN8KConsole10initializeEv
_Z7kmallocm
_ZN3PCBnwEm
_ZN3PCBC1EPFvPvES0_S0_m
_ZN3PCB5startEv
_ZN3PCB10isFinishedEv
thread_dispatch
_Z11printStringPKc
_ZN3PCB10consolePCBE
_ZN3PCBdlEPv
_Unwind_Resume
__gxx_personality_v0
_Z7myTestsv
_ZN3PCB7runningE
_ZN3PCB10savedRegA4E
_Z15trapPrintStringPKc
thread_exit
CONSOLE_STATUS
CONSOLE_TX_DATA
_ZN8KConsole11pendingGetcE
plic_claim
plic_complete
_ZN3PCB16timeSliceCounterE
_ZN12SleepPCBList13tryToWakePCBsEv
_ZN3PCB8dispatchEv
_ZN8KConsole17putCharacterInputEc
_ZN8KConsole18putCharacterOutputEc
_ZN15MemoryAllocator15memAllocHandlerEv
_ZN15MemoryAllocator14memFreeHandlerEv
_ZN3PCB20threadMakePCBHandlerEv
_ZN3PCB19threadCreateHandlerEv
_ZN3PCB18threadStartHandlerEv
_ZN3PCB21threadDispatchHandlerEv
_ZN3PCB17threadExitHandlerEv
_ZN3PCB18threadSleepHandlerEv
_ZN10KSemaphore14semOpenHandlerEv
_ZN10KSemaphore14semWaitHandlerEv
_ZN10KSemaphore16semSignalHandlerEv
_ZN10KSemaphore15semCloseHandlerEv
GAS LISTING /tmp/cc72vfn8.s 			page 58


_ZN8KConsole11getcHandlerEv
_ZN8KConsole11putcHandlerEv
_ZN8KConsole14getCharHandlerEv
