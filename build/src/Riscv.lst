GAS LISTING /tmp/ccQmPygT.s 			page 1


   1              		.file	"Riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv15userMainWrapperEPv
   9              	_ZN5Riscv15userMainWrapperEPv:
  10              	.LFB33:
  11              		.file 1 "src/Riscv.cpp"
   1:src/Riscv.cpp **** //
   2:src/Riscv.cpp **** // Created by os on 4/27/22.
   3:src/Riscv.cpp **** //
   4:src/Riscv.cpp **** 
   5:src/Riscv.cpp **** #include "../h/Riscv.hpp"
   6:src/Riscv.cpp **** #include "../h/MemoryAllocator.hpp"
   7:src/Riscv.cpp **** #include "../h/PCB.hpp"
   8:src/Riscv.cpp **** #include "../h/syscall_cpp.hpp"
   9:src/Riscv.cpp **** #include "../h/SleepPCBList.hpp"
  10:src/Riscv.cpp **** #include "../h/KConsole.hpp"
  11:src/Riscv.cpp **** #include "../h/Tests.hpp"
  12:src/Riscv.cpp **** #include "../test/userMain.hpp"
  13:src/Riscv.cpp **** 
  14:src/Riscv.cpp **** uint64 Riscv::totalTime = 0;
  15:src/Riscv.cpp **** 
  16:src/Riscv.cpp **** void Riscv::initSystem()
  17:src/Riscv.cpp **** {
  18:src/Riscv.cpp ****     w_stvec((uint64)&Riscv::supervisorTrap);
  19:src/Riscv.cpp ****     PCB::initialize();
  20:src/Riscv.cpp ****     KConsole::initialize();
  21:src/Riscv.cpp **** }
  22:src/Riscv.cpp **** 
  23:src/Riscv.cpp **** void Riscv::endSystem()
  24:src/Riscv.cpp **** {
  25:src/Riscv.cpp ****     //todo
  26:src/Riscv.cpp ****     Riscv::disableInterrupts();
  27:src/Riscv.cpp **** }
  28:src/Riscv.cpp **** 
  29:src/Riscv.cpp **** void Riscv::enableInterrupts() {
  30:src/Riscv.cpp ****     ms_sstatus(Riscv::SSTATUS_SIE);
  31:src/Riscv.cpp **** }
  32:src/Riscv.cpp **** 
  33:src/Riscv.cpp **** void Riscv::disableInterrupts()
  34:src/Riscv.cpp **** {
  35:src/Riscv.cpp ****     mc_sstatus(Riscv::SSTATUS_SIE);
  36:src/Riscv.cpp **** }
  37:src/Riscv.cpp **** 
  38:src/Riscv.cpp **** void Riscv::popSppSpie()
  39:src/Riscv.cpp **** {
  40:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
  41:src/Riscv.cpp ****     __asm__ volatile ("sret");
  42:src/Riscv.cpp **** }
  43:src/Riscv.cpp **** 
  44:src/Riscv.cpp **** void Riscv::handleSupervisorTrap()
  45:src/Riscv.cpp **** {
  46:src/Riscv.cpp ****     __asm__ volatile("mv %0, a4" : "=r"(PCB::savedRegA4));
  47:src/Riscv.cpp ****     __asm__ volatile("csrr %0, sscratch":"=r"(PCB::running->sscratch));
GAS LISTING /tmp/ccQmPygT.s 			page 2


  48:src/Riscv.cpp **** 
  49:src/Riscv.cpp ****     uint64 scause = Riscv::r_scause();
  50:src/Riscv.cpp **** 
  51:src/Riscv.cpp ****     switch(scause)
  52:src/Riscv.cpp ****     {
  53:src/Riscv.cpp ****         case timerInterrupt:
  54:src/Riscv.cpp ****         {
  55:src/Riscv.cpp ****             uint64 volatile sepc = Riscv::r_sepc();
  56:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
  57:src/Riscv.cpp ****             mc_sip(Riscv::SIP_SSIP);
  58:src/Riscv.cpp ****             //Riscv::printString("timerInterrupt\n");
  59:src/Riscv.cpp ****             //static uint64 total = 0;
  60:src/Riscv.cpp ****             totalTime++;
  61:src/Riscv.cpp ****             //printInt(totalTime);
  62:src/Riscv.cpp **** 
  63:src/Riscv.cpp ****             PCB::timeSliceCounter++;
  64:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
  65:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
  66:src/Riscv.cpp ****             {
  67:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
  68:src/Riscv.cpp ****                 PCB::dispatch();
  69:src/Riscv.cpp ****             }
  70:src/Riscv.cpp **** 
  71:src/Riscv.cpp ****             Riscv::w_sstatus(sstatus);
  72:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
  73:src/Riscv.cpp **** 
  74:src/Riscv.cpp ****             break;
  75:src/Riscv.cpp ****         }
  76:src/Riscv.cpp ****         case hwInterrupt: // todo
  77:src/Riscv.cpp ****         {
  78:src/Riscv.cpp ****             uint64 x = CONSOLE_STATUS;
  79:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0"::"r"(x));
  80:src/Riscv.cpp ****             __asm__ volatile("lb a1, 0(a0)");
  81:src/Riscv.cpp ****             uint64 operation;
  82:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" :  "=r"(operation));
  83:src/Riscv.cpp ****             if(operation & KConsole::STATUS_READ_MASK)
  84:src/Riscv.cpp ****             {
  85:src/Riscv.cpp ****                 x = CONSOLE_TX_DATA;
  86:src/Riscv.cpp ****                 __asm__ volatile("mv a0, %0"::"r"(x));
  87:src/Riscv.cpp ****                 __asm__ volatile("lb a1,0(a0)");
  88:src/Riscv.cpp ****                 char c;
  89:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" :  "=r"(c));
  90:src/Riscv.cpp ****                 //putCharacterOutput(c);
  91:src/Riscv.cpp **** 
  92:src/Riscv.cpp ****                 if(KConsole::pendingGetc > 0)
  93:src/Riscv.cpp ****                 {
  94:src/Riscv.cpp ****                     KConsole::pendingGetc--;
  95:src/Riscv.cpp ****                     KConsole::putCharacterInput(c);
  96:src/Riscv.cpp ****                     KConsole::putCharacterOutput(c);
  97:src/Riscv.cpp ****                 }
  98:src/Riscv.cpp ****             }
  99:src/Riscv.cpp **** 
 100:src/Riscv.cpp ****             plic_complete(plic_claim());
 101:src/Riscv.cpp **** 
 102:src/Riscv.cpp ****             break;
 103:src/Riscv.cpp ****         }
 104:src/Riscv.cpp ****         case operationInterrupt: // todo
GAS LISTING /tmp/ccQmPygT.s 			page 3


 105:src/Riscv.cpp ****         {
 106:src/Riscv.cpp ****             break;
 107:src/Riscv.cpp ****         }
 108:src/Riscv.cpp ****         case addrReadInterrupt: // todo
 109:src/Riscv.cpp ****         {
 110:src/Riscv.cpp ****             break;
 111:src/Riscv.cpp ****         }
 112:src/Riscv.cpp ****         case addrWriteInterrupt: // todo
 113:src/Riscv.cpp ****         {
 114:src/Riscv.cpp ****             break;
 115:src/Riscv.cpp ****         }
 116:src/Riscv.cpp ****         case ecallSystemInterupt:
 117:src/Riscv.cpp ****         case ecallUserInterrupt:
 118:src/Riscv.cpp ****         {
 119:src/Riscv.cpp ****             uint64 operation;
 120:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
 121:src/Riscv.cpp **** 
 122:src/Riscv.cpp ****             uint64 volatile sepc = Riscv::r_sepc() + 4;
 123:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 124:src/Riscv.cpp **** 
 125:src/Riscv.cpp ****             switch(operation)
 126:src/Riscv.cpp ****             {
 127:src/Riscv.cpp ****                 case MemoryAllocator::MEM_ALLOC:
 128:src/Riscv.cpp ****                     MemoryAllocator::memAllocHandler();
 129:src/Riscv.cpp ****                     break;
 130:src/Riscv.cpp ****                 case MemoryAllocator::MEM_FREE:
 131:src/Riscv.cpp ****                     MemoryAllocator::memFreeHandler();
 132:src/Riscv.cpp ****                     break;
 133:src/Riscv.cpp ****                 case PCB::THREAD_MAKE_PCB:
 134:src/Riscv.cpp ****                     PCB::threadMakePCBHandler();
 135:src/Riscv.cpp ****                     break;
 136:src/Riscv.cpp ****                 case PCB::THREAD_CREATE:
 137:src/Riscv.cpp ****                     PCB::threadCreateHandler();
 138:src/Riscv.cpp ****                     break;
 139:src/Riscv.cpp ****                 case PCB::THREAD_START:
 140:src/Riscv.cpp ****                     PCB::threadStartHandler();
 141:src/Riscv.cpp ****                     break;
 142:src/Riscv.cpp ****                 case PCB::THREAD_DISPATCH:
 143:src/Riscv.cpp ****                     PCB::threadDispatchHandler();
 144:src/Riscv.cpp ****                     break;
 145:src/Riscv.cpp ****                 case PCB::THREAD_EXIT:
 146:src/Riscv.cpp ****                     PCB::threadExitHandler();
 147:src/Riscv.cpp ****                     break;
 148:src/Riscv.cpp ****                 case PCB::TIME_SLEEP:
 149:src/Riscv.cpp ****                     PCB::threadSleepHandler();
 150:src/Riscv.cpp ****                     break;
 151:src/Riscv.cpp ****                 case KSemaphore::SEM_OPEN:
 152:src/Riscv.cpp ****                     KSemaphore::semOpenHandler();
 153:src/Riscv.cpp ****                     break;
 154:src/Riscv.cpp ****                 case KSemaphore::SEM_WAIT:
 155:src/Riscv.cpp ****                     KSemaphore::semWaitHandler();
 156:src/Riscv.cpp ****                     break;
 157:src/Riscv.cpp ****                 case KSemaphore::SEM_SIGNAL:
 158:src/Riscv.cpp ****                     KSemaphore::semSignalHandler();
 159:src/Riscv.cpp ****                     break;
 160:src/Riscv.cpp ****                 case KSemaphore::SEM_CLOSE:
 161:src/Riscv.cpp ****                     KSemaphore::semCloseHandler();
GAS LISTING /tmp/ccQmPygT.s 			page 4


 162:src/Riscv.cpp ****                     break;
 163:src/Riscv.cpp ****                 case KConsole::CONSOLE_GETC:
 164:src/Riscv.cpp ****                     KConsole::getcHandler();
 165:src/Riscv.cpp ****                     break;
 166:src/Riscv.cpp ****                 case KConsole::CONSOLE_PUTC:
 167:src/Riscv.cpp ****                     KConsole::putcHandler();
 168:src/Riscv.cpp ****                     break;
 169:src/Riscv.cpp ****             }
 170:src/Riscv.cpp **** 
 171:src/Riscv.cpp ****             Riscv::w_sstatus(sstatus);
 172:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 173:src/Riscv.cpp **** 
 174:src/Riscv.cpp ****             break;
 175:src/Riscv.cpp ****         }
 176:src/Riscv.cpp ****     }
 177:src/Riscv.cpp **** }
 178:src/Riscv.cpp **** 
 179:src/Riscv.cpp **** void Riscv::kernelMain()
 180:src/Riscv.cpp **** {
 181:src/Riscv.cpp ****     initSystem();
 182:src/Riscv.cpp **** 
 183:src/Riscv.cpp ****     enableInterrupts();
 184:src/Riscv.cpp **** 
 185:src/Riscv.cpp ****     PCB* userPCB = new PCB(&Riscv::userMainWrapper, 0, kmalloc(DEFAULT_STACK_SIZE), DEFAULT_TIME_SL
 186:src/Riscv.cpp ****     //PCB* userPCB = new PCB(&Riscv::myTestsWrapper, 0, kmalloc(DEFAULT_STACK_SIZE), DEFAULT_TIME_S
 187:src/Riscv.cpp ****     userPCB->start();
 188:src/Riscv.cpp ****     while(!userPCB->isFinished())
 189:src/Riscv.cpp ****     {
 190:src/Riscv.cpp ****         thread_dispatch();
 191:src/Riscv.cpp ****     }
 192:src/Riscv.cpp **** 
 193:src/Riscv.cpp ****     disableInterrupts();
 194:src/Riscv.cpp **** 
 195:src/Riscv.cpp ****     endSystem();
 196:src/Riscv.cpp **** 
 197:src/Riscv.cpp ****     ::printString("End...\n");
 198:src/Riscv.cpp **** }
 199:src/Riscv.cpp **** 
 200:src/Riscv.cpp **** void Riscv::userMainWrapper(void* )
 201:src/Riscv.cpp **** {
  12              		.loc 1 201 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23341100 		sd	ra,8(sp)
  17 0008 23308100 		sd	s0,0(sp)
  18              		.cfi_offset 1, -8
  19              		.cfi_offset 8, -16
  20 000c 13040101 		addi	s0,sp,16
  21              		.cfi_def_cfa 8, 0
 202:src/Riscv.cpp ****     userMain();
  22              		.loc 1 202 5
  23              		.loc 1 202 13 is_stmt 0
  24 0010 97000000 		call	_Z8userMainv@plt
  24      E7800000 
  25              	.LVL0:
 203:src/Riscv.cpp **** }
GAS LISTING /tmp/ccQmPygT.s 			page 5


  26              		.loc 1 203 1
  27 0018 83308100 		ld	ra,8(sp)
  28              		.cfi_restore 1
  29 001c 03340100 		ld	s0,0(sp)
  30              		.cfi_restore 8
  31              		.cfi_def_cfa 2, 16
  32 0020 13010101 		addi	sp,sp,16
  33              		.cfi_def_cfa_offset 0
  34 0024 67800000 		jr	ra
  35              		.cfi_endproc
  36              	.LFE33:
  38              		.align	2
  39              		.globl	_ZN5Riscv10initSystemEv
  41              	_ZN5Riscv10initSystemEv:
  42              	.LFB26:
  17:src/Riscv.cpp ****     w_stvec((uint64)&Riscv::supervisorTrap);
  43              		.loc 1 17 1 is_stmt 1
  44              		.cfi_startproc
  45 0028 130101FF 		addi	sp,sp,-16
  46              		.cfi_def_cfa_offset 16
  47 002c 23341100 		sd	ra,8(sp)
  48 0030 23308100 		sd	s0,0(sp)
  49              		.cfi_offset 1, -8
  50              		.cfi_offset 8, -16
  51 0034 13040101 		addi	s0,sp,16
  52              		.cfi_def_cfa 8, 0
  18:src/Riscv.cpp ****     PCB::initialize();
  53              		.loc 1 18 5
  18:src/Riscv.cpp ****     PCB::initialize();
  54              		.loc 1 18 12 is_stmt 0
  55 0038 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
  55      83B70700 
  56              	.LVL1:
  57              	.LBB37:
  58              	.LBB38:
  59              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 4/27/22.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_0_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_0_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** #include "../test/printing.hpp"
  10:src/../h/Riscv.hpp **** 
  11:src/../h/Riscv.hpp **** class Riscv
  12:src/../h/Riscv.hpp **** {
  13:src/../h/Riscv.hpp **** public:
  14:src/../h/Riscv.hpp ****     static void kernelMain();
  15:src/../h/Riscv.hpp **** 
  16:src/../h/Riscv.hpp ****     static void initSystem();
  17:src/../h/Riscv.hpp ****     static void endSystem();
  18:src/../h/Riscv.hpp **** 
  19:src/../h/Riscv.hpp ****     static void userMainWrapper(void* p);
  20:src/../h/Riscv.hpp **** 
  21:src/../h/Riscv.hpp ****     static void enableInterrupts();
GAS LISTING /tmp/ccQmPygT.s 			page 6


  22:src/../h/Riscv.hpp **** 
  23:src/../h/Riscv.hpp ****     static void disableTimerInterrupts();
  24:src/../h/Riscv.hpp **** 
  25:src/../h/Riscv.hpp ****     static void disableInterrupts();
  26:src/../h/Riscv.hpp **** 
  27:src/../h/Riscv.hpp ****     static void idleRiscv(void* arg);
  28:src/../h/Riscv.hpp **** 
  29:src/../h/Riscv.hpp ****     static void pushRegisters();
  30:src/../h/Riscv.hpp ****     static void popRegisters();
  31:src/../h/Riscv.hpp **** 
  32:src/../h/Riscv.hpp ****     static uint64 r_scause();
  33:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  34:src/../h/Riscv.hpp **** 
  35:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  36:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
  37:src/../h/Riscv.hpp **** 
  38:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  39:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  40:src/../h/Riscv.hpp **** 
  41:src/../h/Riscv.hpp ****     static uint64 r_stval();
  42:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  43:src/../h/Riscv.hpp **** 
  44:src/../h/Riscv.hpp ****     enum BitMaskSip
  45:src/../h/Riscv.hpp ****     {
  46:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  47:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  48:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9),
  49:src/../h/Riscv.hpp ****     };
  50:src/../h/Riscv.hpp **** 
  51:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  52:src/../h/Riscv.hpp **** 
  53:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  54:src/../h/Riscv.hpp **** 
  55:src/../h/Riscv.hpp ****     static uint64 r_sip();
  56:src/../h/Riscv.hpp **** 
  57:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  58:src/../h/Riscv.hpp **** 
  59:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  60:src/../h/Riscv.hpp ****     {
  61:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  62:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  63:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  64:src/../h/Riscv.hpp ****     };
  65:src/../h/Riscv.hpp **** 
  66:src/../h/Riscv.hpp ****     static void w_a0_sscratch();
  67:src/../h/Riscv.hpp **** 
  68:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  69:src/../h/Riscv.hpp **** 
  70:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  71:src/../h/Riscv.hpp **** 
  72:src/../h/Riscv.hpp ****     static void mc_sie(uint64 mask);
  73:src/../h/Riscv.hpp **** 
  74:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  75:src/../h/Riscv.hpp **** 
  76:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  77:src/../h/Riscv.hpp **** 
  78:src/../h/Riscv.hpp ****     static uint64 r_sie();
GAS LISTING /tmp/ccQmPygT.s 			page 7


  79:src/../h/Riscv.hpp ****     static void w_sie(uint64 sie);
  80:src/../h/Riscv.hpp ****     static void popSppSpie();
  81:src/../h/Riscv.hpp **** 
  82:src/../h/Riscv.hpp ****     static void supervisorTrap();
  83:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  84:src/../h/Riscv.hpp **** 
  85:src/../h/Riscv.hpp ****     static void myTestsWrapper(void* );
  86:src/../h/Riscv.hpp **** 
  87:src/../h/Riscv.hpp ****     static const uint64 bntOne = 1UL << 63;;
  88:src/../h/Riscv.hpp ****     static const uint64 bntZero = 0UL;
  89:src/../h/Riscv.hpp ****     static const uint64 timerInterrupt = bntOne + 1UL;
  90:src/../h/Riscv.hpp ****     static const uint64 hwInterrupt = bntOne + 9UL;
  91:src/../h/Riscv.hpp ****     static const uint64 operationInterrupt = bntZero + 2UL;
  92:src/../h/Riscv.hpp ****     static const uint64 addrReadInterrupt = bntZero + 5UL;
  93:src/../h/Riscv.hpp ****     static const uint64 addrWriteInterrupt = bntZero + 7UL;
  94:src/../h/Riscv.hpp ****     static const uint64 ecallUserInterrupt = bntZero + 8UL;
  95:src/../h/Riscv.hpp ****     static const uint64 ecallSystemInterupt = bntZero + 9UL;
  96:src/../h/Riscv.hpp **** 
  97:src/../h/Riscv.hpp ****     static uint64 totalTime;
  98:src/../h/Riscv.hpp **** };
  99:src/../h/Riscv.hpp **** 
 100:src/../h/Riscv.hpp **** inline void Riscv::mc_sie(uint64 mask)
 101:src/../h/Riscv.hpp **** {
 102:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sie, %0" : :"r"(mask));
 103:src/../h/Riscv.hpp **** }
 104:src/../h/Riscv.hpp **** 
 105:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause() {
 106:src/../h/Riscv.hpp ****     uint64 volatile scause;
 107:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
 108:src/../h/Riscv.hpp ****     return scause;
 109:src/../h/Riscv.hpp **** }
 110:src/../h/Riscv.hpp **** 
 111:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
 112:src/../h/Riscv.hpp ****     __asm__ volatile("csrw scause, %0" : :"r"(scause));
 113:src/../h/Riscv.hpp **** }
 114:src/../h/Riscv.hpp **** 
 115:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc() {
 116:src/../h/Riscv.hpp ****     uint64 volatile sepc;
 117:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 118:src/../h/Riscv.hpp ****     return sepc;
 119:src/../h/Riscv.hpp **** }
 120:src/../h/Riscv.hpp **** 
 121:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
 122:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sepc, %0" : :"r"(sepc));
 123:src/../h/Riscv.hpp **** }
 124:src/../h/Riscv.hpp **** 
 125:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec() {
 126:src/../h/Riscv.hpp ****     uint64 volatile stvec;
 127:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, stvec" : "=r"(stvec));
 128:src/../h/Riscv.hpp ****     return stvec;
 129:src/../h/Riscv.hpp **** }
 130:src/../h/Riscv.hpp **** 
 131:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 132:src/../h/Riscv.hpp ****     __asm__ volatile("csrw stvec, %0" : :"r"(stvec));
  60              		.loc 2 132 5 is_stmt 1
  61              		.loc 2 132 53 is_stmt 0
  62              	#APP
GAS LISTING /tmp/ccQmPygT.s 			page 8


  63              	# 132 "src/../h/Riscv.hpp" 1
 133              	}
  64              		csrw stvec, a5
  65              	# 0 "" 2
  66              	.LVL2:
  67              	#NO_APP
  68              	.LBE38:
  69              	.LBE37:
  19:src/Riscv.cpp ****     KConsole::initialize();
  70              		.loc 1 19 5 is_stmt 1
  19:src/Riscv.cpp ****     KConsole::initialize();
  71              		.loc 1 19 20 is_stmt 0
  72 0044 97000000 		call	_ZN3PCB10initializeEv@plt
  72      E7800000 
  73              	.LVL3:
  20:src/Riscv.cpp **** }
  74              		.loc 1 20 5 is_stmt 1
  20:src/Riscv.cpp **** }
  75              		.loc 1 20 25 is_stmt 0
  76 004c 97000000 		call	_ZN8KConsole10initializeEv@plt
  76      E7800000 
  77              	.LVL4:
  21:src/Riscv.cpp **** 
  78              		.loc 1 21 1
  79 0054 83308100 		ld	ra,8(sp)
  80              		.cfi_restore 1
  81 0058 03340100 		ld	s0,0(sp)
  82              		.cfi_restore 8
  83              		.cfi_def_cfa 2, 16
  84 005c 13010101 		addi	sp,sp,16
  85              		.cfi_def_cfa_offset 0
  86 0060 67800000 		jr	ra
  87              		.cfi_endproc
  88              	.LFE26:
  90              		.align	2
  91              		.globl	_ZN5Riscv16enableInterruptsEv
  93              	_ZN5Riscv16enableInterruptsEv:
  94              	.LFB28:
  29:src/Riscv.cpp ****     ms_sstatus(Riscv::SSTATUS_SIE);
  95              		.loc 1 29 32 is_stmt 1
  96              		.cfi_startproc
  97 0064 130101FF 		addi	sp,sp,-16
  98              		.cfi_def_cfa_offset 16
  99 0068 23348100 		sd	s0,8(sp)
 100              		.cfi_offset 8, -8
 101 006c 13040101 		addi	s0,sp,16
 102              		.cfi_def_cfa 8, 0
  30:src/Riscv.cpp **** }
 103              		.loc 1 30 5
 104              	.LVL5:
 105              	.LBB39:
 106              	.LBB40:
 134:src/../h/Riscv.hpp **** 
 135:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stval() {
 136:src/../h/Riscv.hpp ****     uint64 volatile stval;
 137:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, stval" : "=r"(stval));
 138:src/../h/Riscv.hpp ****     return stval;
GAS LISTING /tmp/ccQmPygT.s 			page 9


 139:src/../h/Riscv.hpp **** }
 140:src/../h/Riscv.hpp **** 
 141:src/../h/Riscv.hpp **** inline void Riscv::w_sie(uint64 sie)
 142:src/../h/Riscv.hpp **** {
 143:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sie, %0" : :"r"(sie));
 144:src/../h/Riscv.hpp **** }
 145:src/../h/Riscv.hpp **** 
 146:src/../h/Riscv.hpp **** inline void Riscv::w_stval(uint64 stval) {
 147:src/../h/Riscv.hpp ****     __asm__ volatile("csrw stval, %0" : :"r"(stval));
 148:src/../h/Riscv.hpp **** }
 149:src/../h/Riscv.hpp **** 
 150:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 151:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sip, %0" : :"r"(mask));
 152:src/../h/Riscv.hpp **** }
 153:src/../h/Riscv.hpp **** 
 154:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 155:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sip, %0" : :"r"(mask));
 156:src/../h/Riscv.hpp **** }
 157:src/../h/Riscv.hpp **** 
 158:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sie()
 159:src/../h/Riscv.hpp **** {
 160:src/../h/Riscv.hpp ****     uint64 volatile sie;
 161:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sip" : "=r"(sie));
 162:src/../h/Riscv.hpp ****     return sie;
 163:src/../h/Riscv.hpp **** }
 164:src/../h/Riscv.hpp **** 
 165:src/../h/Riscv.hpp **** 
 166:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip() {
 167:src/../h/Riscv.hpp ****     uint64 volatile sip;
 168:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sip" : "=r"(sip));
 169:src/../h/Riscv.hpp ****     return sip;
 170:src/../h/Riscv.hpp **** }
 171:src/../h/Riscv.hpp **** 
 172:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 173:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sip, %0" : :"r"(sip));
 174:src/../h/Riscv.hpp **** }
 175:src/../h/Riscv.hpp **** 
 176:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 177:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sstatus, %0" : :"r"(mask));
 107              		.loc 2 177 5
 108              		.loc 2 177 54 is_stmt 0
 109 0070 93072000 		li	a5,2
 110              	#APP
 111              	# 177 "src/../h/Riscv.hpp" 1
 178              	}
 112              		csrs sstatus, a5
 113              	# 0 "" 2
 114              	.LVL6:
 115              	#NO_APP
 116              	.LBE40:
 117              	.LBE39:
  31:src/Riscv.cpp **** 
 118              		.loc 1 31 1
 119 0078 03348100 		ld	s0,8(sp)
 120              		.cfi_restore 8
 121              		.cfi_def_cfa 2, 16
 122 007c 13010101 		addi	sp,sp,16
GAS LISTING /tmp/ccQmPygT.s 			page 10


 123              		.cfi_def_cfa_offset 0
 124 0080 67800000 		jr	ra
 125              		.cfi_endproc
 126              	.LFE28:
 128              		.align	2
 129              		.globl	_ZN5Riscv17disableInterruptsEv
 131              	_ZN5Riscv17disableInterruptsEv:
 132              	.LFB29:
  34:src/Riscv.cpp ****     mc_sstatus(Riscv::SSTATUS_SIE);
 133              		.loc 1 34 1 is_stmt 1
 134              		.cfi_startproc
 135 0084 130101FF 		addi	sp,sp,-16
 136              		.cfi_def_cfa_offset 16
 137 0088 23348100 		sd	s0,8(sp)
 138              		.cfi_offset 8, -8
 139 008c 13040101 		addi	s0,sp,16
 140              		.cfi_def_cfa 8, 0
  35:src/Riscv.cpp **** }
 141              		.loc 1 35 5
 142              	.LVL7:
 143              	.LBB41:
 144              	.LBB42:
 179:src/../h/Riscv.hpp **** 
 180:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 181:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sstatus, %0" : :"r"(mask));
 145              		.loc 2 181 5
 146              		.loc 2 181 54 is_stmt 0
 147 0090 93072000 		li	a5,2
 148              	#APP
 149              	# 181 "src/../h/Riscv.hpp" 1
 182              	}
 150              		csrc sstatus, a5
 151              	# 0 "" 2
 152              	.LVL8:
 153              	#NO_APP
 154              	.LBE42:
 155              	.LBE41:
  36:src/Riscv.cpp **** 
 156              		.loc 1 36 1
 157 0098 03348100 		ld	s0,8(sp)
 158              		.cfi_restore 8
 159              		.cfi_def_cfa 2, 16
 160 009c 13010101 		addi	sp,sp,16
 161              		.cfi_def_cfa_offset 0
 162 00a0 67800000 		jr	ra
 163              		.cfi_endproc
 164              	.LFE29:
 166              		.align	2
 167              		.globl	_ZN5Riscv9endSystemEv
 169              	_ZN5Riscv9endSystemEv:
 170              	.LFB27:
  24:src/Riscv.cpp ****     //todo
 171              		.loc 1 24 1 is_stmt 1
 172              		.cfi_startproc
 173 00a4 130101FF 		addi	sp,sp,-16
 174              		.cfi_def_cfa_offset 16
 175 00a8 23341100 		sd	ra,8(sp)
GAS LISTING /tmp/ccQmPygT.s 			page 11


 176 00ac 23308100 		sd	s0,0(sp)
 177              		.cfi_offset 1, -8
 178              		.cfi_offset 8, -16
 179 00b0 13040101 		addi	s0,sp,16
 180              		.cfi_def_cfa 8, 0
  26:src/Riscv.cpp **** }
 181              		.loc 1 26 5
  26:src/Riscv.cpp **** }
 182              		.loc 1 26 29 is_stmt 0
 183 00b4 97000000 		call	_ZN5Riscv17disableInterruptsEv
 183      E7800000 
 184              	.LVL9:
  27:src/Riscv.cpp **** 
 185              		.loc 1 27 1
 186 00bc 83308100 		ld	ra,8(sp)
 187              		.cfi_restore 1
 188 00c0 03340100 		ld	s0,0(sp)
 189              		.cfi_restore 8
 190              		.cfi_def_cfa 2, 16
 191 00c4 13010101 		addi	sp,sp,16
 192              		.cfi_def_cfa_offset 0
 193 00c8 67800000 		jr	ra
 194              		.cfi_endproc
 195              	.LFE27:
 197              		.align	2
 198              		.globl	_ZN5Riscv10popSppSpieEv
 200              	_ZN5Riscv10popSppSpieEv:
 201              	.LFB30:
  39:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
 202              		.loc 1 39 1 is_stmt 1
 203              		.cfi_startproc
 204 00cc 130101FF 		addi	sp,sp,-16
 205              		.cfi_def_cfa_offset 16
 206 00d0 23348100 		sd	s0,8(sp)
 207              		.cfi_offset 8, -8
 208 00d4 13040101 		addi	s0,sp,16
 209              		.cfi_def_cfa 8, 0
  40:src/Riscv.cpp ****     __asm__ volatile ("sret");
 210              		.loc 1 40 5
  40:src/Riscv.cpp ****     __asm__ volatile ("sret");
 211              		.loc 1 40 39 is_stmt 0
 212              	#APP
 213              	# 40 "src/Riscv.cpp" 1
  41:src/Riscv.cpp **** }
 214              		csrw sepc, ra
 215              	# 0 "" 2
 216              		.loc 1 41 5 is_stmt 1
  41:src/Riscv.cpp **** }
 217              		.loc 1 41 30 is_stmt 0
 218              	# 41 "src/Riscv.cpp" 1
  42:src/Riscv.cpp **** 
 219              		sret
 220              	# 0 "" 2
 221              		.loc 1 42 1
 222              	#NO_APP
 223 00e0 03348100 		ld	s0,8(sp)
 224              		.cfi_restore 8
GAS LISTING /tmp/ccQmPygT.s 			page 12


 225              		.cfi_def_cfa 2, 16
 226 00e4 13010101 		addi	sp,sp,16
 227              		.cfi_def_cfa_offset 0
 228 00e8 67800000 		jr	ra
 229              		.cfi_endproc
 230              	.LFE30:
 232              		.align	2
 233              		.globl	_ZN5Riscv20handleSupervisorTrapEv
 235              	_ZN5Riscv20handleSupervisorTrapEv:
 236              	.LFB31:
  45:src/Riscv.cpp ****     __asm__ volatile("mv %0, a4" : "=r"(PCB::savedRegA4));
 237              		.loc 1 45 1 is_stmt 1
 238              		.cfi_startproc
 239 00ec 130101F9 		addi	sp,sp,-112
 240              		.cfi_def_cfa_offset 112
 241 00f0 23341106 		sd	ra,104(sp)
 242 00f4 23308106 		sd	s0,96(sp)
 243 00f8 233C9104 		sd	s1,88(sp)
 244              		.cfi_offset 1, -8
 245              		.cfi_offset 8, -16
 246              		.cfi_offset 9, -24
 247 00fc 13040107 		addi	s0,sp,112
 248              		.cfi_def_cfa 8, 0
  46:src/Riscv.cpp ****     __asm__ volatile("csrr %0, sscratch":"=r"(PCB::running->sscratch));
 249              		.loc 1 46 5
  46:src/Riscv.cpp ****     __asm__ volatile("csrr %0, sscratch":"=r"(PCB::running->sscratch));
 250              		.loc 1 46 58 is_stmt 0
 251              	#APP
 252              	# 46 "src/Riscv.cpp" 1
 253              		mv a4, a4
 254              	# 0 "" 2
 255              	#NO_APP
 256 0104 97070000 		la	a5,_ZN3PCB10savedRegA4E
 256      83B70700 
 257 010c 23B0E700 		sd	a4,0(a5)
  47:src/Riscv.cpp **** 
 258              		.loc 1 47 5 is_stmt 1
  47:src/Riscv.cpp **** 
 259              		.loc 1 47 61 is_stmt 0
 260 0110 97070000 		la	a5,_ZN3PCB7runningE
 260      83B70700 
 261 0118 83B70700 		ld	a5,0(a5)
  47:src/Riscv.cpp **** 
 262              		.loc 1 47 71
 263              	#APP
 264              	# 47 "src/Riscv.cpp" 1
 265              		csrr a4, sscratch
 266              	# 0 "" 2
 267              	#NO_APP
 268 0120 23B8E700 		sd	a4,16(a5)
  49:src/Riscv.cpp **** 
 269              		.loc 1 49 5 is_stmt 1
 270              	.LBB43:
 271              	.LBB44:
 106:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
 272              		.loc 2 106 5
 107:src/../h/Riscv.hpp ****     return scause;
GAS LISTING /tmp/ccQmPygT.s 			page 13


 273              		.loc 2 107 5
 107:src/../h/Riscv.hpp ****     return scause;
 274              		.loc 2 107 55 is_stmt 0
 275              	#APP
 276              	# 107 "src/../h/Riscv.hpp" 1
 277              		csrr a5, scause
 278              	# 0 "" 2
 279              	#NO_APP
 280 0128 233CF4FA 		sd	a5,-72(s0)
 108:src/../h/Riscv.hpp **** }
 281              		.loc 2 108 5 is_stmt 1
 108:src/../h/Riscv.hpp **** }
 282              		.loc 2 108 12 is_stmt 0
 283 012c 833784FB 		ld	a5,-72(s0)
 284              	.LVL10:
 285              	.LBE44:
 286              	.LBE43:
  51:src/Riscv.cpp ****     {
 287              		.loc 1 51 5 is_stmt 1
 288              	.LBB45:
 289 0130 1307F0FF 		li	a4,-1
 290 0134 1317F703 		slli	a4,a4,63
 291 0138 13071700 		addi	a4,a4,1
 292 013c 638EE70C 		beq	a5,a4,.L14
 293 0140 1307F0FF 		li	a4,-1
 294 0144 1317F703 		slli	a4,a4,63
 295 0148 13071700 		addi	a4,a4,1
 296 014c 636EF704 		bgtu	a5,a4,.L15
 297 0150 938787FF 		addi	a5,a5,-8
 298              	.LVL11:
 299 0154 13071000 		li	a4,1
 300 0158 636CF718 		bgtu	a5,a4,.L13
 301              	.LBE45:
 116:src/Riscv.cpp ****         case ecallUserInterrupt:
 302              		.loc 1 116 9
 117:src/Riscv.cpp ****         {
 303              		.loc 1 117 9
 118:src/Riscv.cpp ****             uint64 operation;
 304              		.loc 1 118 9
 305              	.LBB76:
 306              	.LBB46:
 119:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
 307              		.loc 1 119 13
 120:src/Riscv.cpp **** 
 308              		.loc 1 120 13
 120:src/Riscv.cpp **** 
 309              		.loc 1 120 61 is_stmt 0
 310              	#APP
 311              	# 120 "src/Riscv.cpp" 1
 312              		mv a5, a0
 313              	# 0 "" 2
 314              	.LVL12:
 122:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 315              		.loc 1 122 13 is_stmt 1
 316              	#NO_APP
 317              	.LBB47:
 318              	.LBB48:
GAS LISTING /tmp/ccQmPygT.s 			page 14


 116:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 319              		.loc 2 116 5
 117:src/../h/Riscv.hpp ****     return sepc;
 320              		.loc 2 117 5
 117:src/../h/Riscv.hpp ****     return sepc;
 321              		.loc 2 117 51 is_stmt 0
 322              	#APP
 323              	# 117 "src/../h/Riscv.hpp" 1
 324              		csrr a4, sepc
 325              	# 0 "" 2
 326              	#NO_APP
 327 0164 233CE4FC 		sd	a4,-40(s0)
 118:src/../h/Riscv.hpp **** }
 328              		.loc 2 118 5 is_stmt 1
 118:src/../h/Riscv.hpp **** }
 329              		.loc 2 118 12 is_stmt 0
 330 0168 033784FD 		ld	a4,-40(s0)
 331              	.LBE48:
 332              	.LBE47:
 122:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 333              		.loc 1 122 52
 334 016c 13074700 		addi	a4,a4,4
 122:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 335              		.loc 1 122 54
 336 0170 2334E4FA 		sd	a4,-88(s0)
 123:src/Riscv.cpp **** 
 337              		.loc 1 123 13 is_stmt 1
 338              	.LBB49:
 339              	.LBB50:
 183:src/../h/Riscv.hpp **** 
 184:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sstatus() {
 185:src/../h/Riscv.hpp ****     uint64 volatile sstatus;
 340              		.loc 2 185 5
 186:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 341              		.loc 2 186 5
 342              		.loc 2 186 57 is_stmt 0
 343              	#APP
 344              	# 186 "src/../h/Riscv.hpp" 1
 187              	    return sstatus;
 345              		csrr a4, sstatus
 346              	# 0 "" 2
 347              	#NO_APP
 348 0178 2338E4FC 		sd	a4,-48(s0)
 349              		.loc 2 187 5 is_stmt 1
 350              		.loc 2 187 12 is_stmt 0
 351 017c 033704FD 		ld	a4,-48(s0)
 352              	.LBE50:
 353              	.LBE49:
 123:src/Riscv.cpp **** 
 354              		.loc 1 123 56
 355 0180 2338E4FA 		sd	a4,-80(s0)
 125:src/Riscv.cpp ****             {
 356              		.loc 1 125 13 is_stmt 1
 357 0184 13072004 		li	a4,66
 358 0188 636CF714 		bgtu	a5,a4,.L21
 359 018c 93972700 		slli	a5,a5,2
 360              	.LVL13:
GAS LISTING /tmp/ccQmPygT.s 			page 15


 361 0190 17070000 		lla	a4,.L23
 361      13070700 
 362 0198 B387E700 		add	a5,a5,a4
 363 019c 83A70700 		lw	a5,0(a5)
 364 01a0 B387E700 		add	a5,a5,a4
 365 01a4 67800700 		jr	a5
 366              		.section	.rodata
 367              		.align	2
 368              		.align	2
 369              	.L23:
 370 0000 00000000 		.word	.L21-.L23
 371 0004 00000000 		.word	.L36-.L23
 372 0008 00000000 		.word	.L35-.L23
 373 000c 00000000 		.word	.L21-.L23
 374 0010 00000000 		.word	.L21-.L23
 375 0014 00000000 		.word	.L21-.L23
 376 0018 00000000 		.word	.L21-.L23
 377 001c 00000000 		.word	.L21-.L23
 378 0020 00000000 		.word	.L21-.L23
 379 0024 00000000 		.word	.L21-.L23
 380 0028 00000000 		.word	.L21-.L23
 381 002c 00000000 		.word	.L21-.L23
 382 0030 00000000 		.word	.L21-.L23
 383 0034 00000000 		.word	.L21-.L23
 384 0038 00000000 		.word	.L21-.L23
 385 003c 00000000 		.word	.L21-.L23
 386 0040 00000000 		.word	.L21-.L23
 387 0044 00000000 		.word	.L34-.L23
 388 0048 00000000 		.word	.L33-.L23
 389 004c 00000000 		.word	.L32-.L23
 390 0050 00000000 		.word	.L31-.L23
 391 0054 00000000 		.word	.L30-.L23
 392 0058 00000000 		.word	.L21-.L23
 393 005c 00000000 		.word	.L21-.L23
 394 0060 00000000 		.word	.L21-.L23
 395 0064 00000000 		.word	.L21-.L23
 396 0068 00000000 		.word	.L21-.L23
 397 006c 00000000 		.word	.L21-.L23
 398 0070 00000000 		.word	.L21-.L23
 399 0074 00000000 		.word	.L21-.L23
 400 0078 00000000 		.word	.L21-.L23
 401 007c 00000000 		.word	.L21-.L23
 402 0080 00000000 		.word	.L21-.L23
 403 0084 00000000 		.word	.L29-.L23
 404 0088 00000000 		.word	.L28-.L23
 405 008c 00000000 		.word	.L27-.L23
 406 0090 00000000 		.word	.L26-.L23
 407 0094 00000000 		.word	.L21-.L23
 408 0098 00000000 		.word	.L21-.L23
 409 009c 00000000 		.word	.L21-.L23
 410 00a0 00000000 		.word	.L21-.L23
 411 00a4 00000000 		.word	.L21-.L23
 412 00a8 00000000 		.word	.L21-.L23
 413 00ac 00000000 		.word	.L21-.L23
 414 00b0 00000000 		.word	.L21-.L23
 415 00b4 00000000 		.word	.L21-.L23
 416 00b8 00000000 		.word	.L21-.L23
GAS LISTING /tmp/ccQmPygT.s 			page 16


 417 00bc 00000000 		.word	.L21-.L23
 418 00c0 00000000 		.word	.L21-.L23
 419 00c4 00000000 		.word	.L25-.L23
 420 00c8 00000000 		.word	.L21-.L23
 421 00cc 00000000 		.word	.L21-.L23
 422 00d0 00000000 		.word	.L21-.L23
 423 00d4 00000000 		.word	.L21-.L23
 424 00d8 00000000 		.word	.L21-.L23
 425 00dc 00000000 		.word	.L21-.L23
 426 00e0 00000000 		.word	.L21-.L23
 427 00e4 00000000 		.word	.L21-.L23
 428 00e8 00000000 		.word	.L21-.L23
 429 00ec 00000000 		.word	.L21-.L23
 430 00f0 00000000 		.word	.L21-.L23
 431 00f4 00000000 		.word	.L21-.L23
 432 00f8 00000000 		.word	.L21-.L23
 433 00fc 00000000 		.word	.L21-.L23
 434 0100 00000000 		.word	.L21-.L23
 435 0104 00000000 		.word	.L24-.L23
 436 0108 00000000 		.word	.L22-.L23
 437              		.text
 438              	.LVL14:
 439              	.L15:
 440              	.LBE46:
  51:src/Riscv.cpp ****     {
 441              		.loc 1 51 5 is_stmt 0
 442 01a8 1307F0FF 		li	a4,-1
 443 01ac 1317F703 		slli	a4,a4,63
 444 01b0 13079700 		addi	a4,a4,9
 445 01b4 639EE712 		bne	a5,a4,.L13
 446              	.LBE76:
  76:src/Riscv.cpp ****         {
 447              		.loc 1 76 9 is_stmt 1
  77:src/Riscv.cpp ****             uint64 x = CONSOLE_STATUS;
 448              		.loc 1 77 9
 449              	.LBB77:
 450              	.LBB55:
  78:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0"::"r"(x));
 451              		.loc 1 78 13
  78:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0"::"r"(x));
 452              		.loc 1 78 20 is_stmt 0
 453 01b8 97070000 		la	a5,CONSOLE_STATUS
 453      83B70700 
 454              	.LVL15:
 455 01c0 83B70700 		ld	a5,0(a5)
 456              	.LVL16:
  79:src/Riscv.cpp ****             __asm__ volatile("lb a1, 0(a0)");
 457              		.loc 1 79 13 is_stmt 1
  79:src/Riscv.cpp ****             __asm__ volatile("lb a1, 0(a0)");
 458              		.loc 1 79 50 is_stmt 0
 459              	#APP
 460              	# 79 "src/Riscv.cpp" 1
  80:src/Riscv.cpp ****             uint64 operation;
 461              		mv a0, a5
 462              	# 0 "" 2
 463              		.loc 1 80 13 is_stmt 1
  80:src/Riscv.cpp ****             uint64 operation;
GAS LISTING /tmp/ccQmPygT.s 			page 17


 464              		.loc 1 80 45 is_stmt 0
 465              	# 80 "src/Riscv.cpp" 1
  81:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" :  "=r"(operation));
 466              		lb a1, 0(a0)
 467              	# 0 "" 2
 468              		.loc 1 81 13 is_stmt 1
  82:src/Riscv.cpp ****             if(operation & KConsole::STATUS_READ_MASK)
 469              		.loc 1 82 13
  82:src/Riscv.cpp ****             if(operation & KConsole::STATUS_READ_MASK)
 470              		.loc 1 82 61 is_stmt 0
 471              	# 82 "src/Riscv.cpp" 1
 472              		mv a5, a1
 473              	# 0 "" 2
 474              	.LVL17:
  83:src/Riscv.cpp ****             {
 475              		.loc 1 83 13 is_stmt 1
 476              	#NO_APP
 477              	.LBB56:
  83:src/Riscv.cpp ****             {
 478              		.loc 1 83 26 is_stmt 0
 479 01d0 93F71700 		andi	a5,a5,1
 480              	.LVL18:
  83:src/Riscv.cpp ****             {
 481              		.loc 1 83 13
 482 01d4 63880702 		beqz	a5,.L20
 483              	.LBB57:
  85:src/Riscv.cpp ****                 __asm__ volatile("mv a0, %0"::"r"(x));
 484              		.loc 1 85 17 is_stmt 1
  85:src/Riscv.cpp ****                 __asm__ volatile("mv a0, %0"::"r"(x));
 485              		.loc 1 85 19 is_stmt 0
 486 01d8 97070000 		la	a5,CONSOLE_TX_DATA
 486      83B70700 
 487 01e0 83B70700 		ld	a5,0(a5)
 488              	.LVL19:
  86:src/Riscv.cpp ****                 __asm__ volatile("lb a1,0(a0)");
 489              		.loc 1 86 17 is_stmt 1
  86:src/Riscv.cpp ****                 __asm__ volatile("lb a1,0(a0)");
 490              		.loc 1 86 54 is_stmt 0
 491              	#APP
 492              	# 86 "src/Riscv.cpp" 1
  87:src/Riscv.cpp ****                 char c;
 493              		mv a0, a5
 494              	# 0 "" 2
 495              		.loc 1 87 17 is_stmt 1
  87:src/Riscv.cpp ****                 char c;
 496              		.loc 1 87 48 is_stmt 0
 497              	# 87 "src/Riscv.cpp" 1
  88:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" :  "=r"(c));
 498              		lb a1,0(a0)
 499              	# 0 "" 2
 500              		.loc 1 88 17 is_stmt 1
  89:src/Riscv.cpp ****                 //putCharacterOutput(c);
 501              		.loc 1 89 17
  89:src/Riscv.cpp ****                 //putCharacterOutput(c);
 502              		.loc 1 89 57 is_stmt 0
 503              	# 89 "src/Riscv.cpp" 1
 504              		mv a0, a1
GAS LISTING /tmp/ccQmPygT.s 			page 18


 505              	# 0 "" 2
 506              	#NO_APP
 507 01f0 9374F50F 		andi	s1,a0,0xff
 508              	.LVL20:
  92:src/Riscv.cpp ****                 {
 509              		.loc 1 92 17 is_stmt 1
  92:src/Riscv.cpp ****                 {
 510              		.loc 1 92 42 is_stmt 0
 511 01f4 97070000 		la	a5,_ZN8KConsole11pendingGetcE
 511      83B70700 
 512              	.LVL21:
 513 01fc 83B70700 		ld	a5,0(a5)
  92:src/Riscv.cpp ****                 {
 514              		.loc 1 92 17
 515 0200 6396070A 		bnez	a5,.L39
 516              	.LVL22:
 517              	.L20:
 518              	.LBE57:
 519              	.LBE56:
 100:src/Riscv.cpp **** 
 520              		.loc 1 100 13 is_stmt 1
 100:src/Riscv.cpp **** 
 521              		.loc 1 100 26 is_stmt 0
 522 0204 97000000 		call	plic_claim@plt
 522      E7800000 
 523              	.LVL23:
 524 020c 97000000 		call	plic_complete@plt
 524      E7800000 
 525              	.LVL24:
 102:src/Riscv.cpp ****         }
 526              		.loc 1 102 13 is_stmt 1
 527 0214 6F00C00D 		j	.L13
 528              	.LVL25:
 529              	.L14:
 530              	.LBE55:
 531              	.LBE77:
  53:src/Riscv.cpp ****         {
 532              		.loc 1 53 9
  54:src/Riscv.cpp ****             uint64 volatile sepc = Riscv::r_sepc();
 533              		.loc 1 54 9
 534              	.LBB78:
 535              	.LBB60:
  55:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 536              		.loc 1 55 13
 537              	.LBB61:
 538              	.LBB62:
 116:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 539              		.loc 2 116 5
 117:src/../h/Riscv.hpp ****     return sepc;
 540              		.loc 2 117 5
 117:src/../h/Riscv.hpp ****     return sepc;
 541              		.loc 2 117 51 is_stmt 0
 542              	#APP
 543              	# 117 "src/../h/Riscv.hpp" 1
 544              		csrr a5, sepc
 545              	# 0 "" 2
 546              	.LVL26:
GAS LISTING /tmp/ccQmPygT.s 			page 19


 547              	#NO_APP
 548 021c 2334F4FC 		sd	a5,-56(s0)
 118:src/../h/Riscv.hpp **** }
 549              		.loc 2 118 5 is_stmt 1
 118:src/../h/Riscv.hpp **** }
 550              		.loc 2 118 12 is_stmt 0
 551 0220 833784FC 		ld	a5,-56(s0)
 552              	.LBE62:
 553              	.LBE61:
  55:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 554              		.loc 1 55 50
 555 0224 233CF4F8 		sd	a5,-104(s0)
  56:src/Riscv.cpp ****             mc_sip(Riscv::SIP_SSIP);
 556              		.loc 1 56 13 is_stmt 1
 557              	.LBB63:
 558              	.LBB64:
 185:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 559              		.loc 2 185 5
 186:src/../h/Riscv.hpp ****     return sstatus;
 560              		.loc 2 186 5
 186:src/../h/Riscv.hpp ****     return sstatus;
 561              		.loc 2 186 57 is_stmt 0
 562              	#APP
 563              	# 186 "src/../h/Riscv.hpp" 1
 564              		csrr a5, sstatus
 565              	# 0 "" 2
 566              	#NO_APP
 567 022c 2330F4FC 		sd	a5,-64(s0)
 568              		.loc 2 187 5 is_stmt 1
 569              		.loc 2 187 12 is_stmt 0
 570 0230 833704FC 		ld	a5,-64(s0)
 571              	.LBE64:
 572              	.LBE63:
  56:src/Riscv.cpp ****             mc_sip(Riscv::SIP_SSIP);
 573              		.loc 1 56 56
 574 0234 2330F4FA 		sd	a5,-96(s0)
  57:src/Riscv.cpp ****             //Riscv::printString("timerInterrupt\n");
 575              		.loc 1 57 13 is_stmt 1
 576              	.LVL27:
 577              	.LBB65:
 578              	.LBB66:
 155:src/../h/Riscv.hpp **** }
 579              		.loc 2 155 5
 155:src/../h/Riscv.hpp **** }
 580              		.loc 2 155 50 is_stmt 0
 581 0238 93072000 		li	a5,2
 582              	#APP
 583              	# 155 "src/../h/Riscv.hpp" 1
 584              		csrc sip, a5
 585              	# 0 "" 2
 586              	.LVL28:
 587              	#NO_APP
 588              	.LBE66:
 589              	.LBE65:
  60:src/Riscv.cpp ****             //printInt(totalTime);
 590              		.loc 1 60 13 is_stmt 1
  60:src/Riscv.cpp ****             //printInt(totalTime);
GAS LISTING /tmp/ccQmPygT.s 			page 20


 591              		.loc 1 60 22 is_stmt 0
 592 0240 17070000 		lla	a4,.LANCHOR0
 592      13070700 
 593 0248 83370700 		ld	a5,0(a4)
 594 024c 93871700 		addi	a5,a5,1
 595 0250 2330F700 		sd	a5,0(a4)
  63:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
 596              		.loc 1 63 13 is_stmt 1
  63:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
 597              		.loc 1 63 34 is_stmt 0
 598 0254 97040000 		la	s1,_ZN3PCB16timeSliceCounterE
 598      83B40400 
 599 025c 83B70400 		ld	a5,0(s1)
 600 0260 93871700 		addi	a5,a5,1
 601 0264 23B0F400 		sd	a5,0(s1)
  64:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
 602              		.loc 1 64 13 is_stmt 1
  64:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
 603              		.loc 1 64 40 is_stmt 0
 604 0268 97000000 		call	_ZN12SleepPCBList13tryToWakePCBsEv@plt
 604      E7800000 
 605              	.LVL29:
  65:src/Riscv.cpp ****             {
 606              		.loc 1 65 13 is_stmt 1
  65:src/Riscv.cpp ****             {
 607              		.loc 1 65 68 is_stmt 0
 608 0270 97070000 		la	a5,_ZN3PCB7runningE
 608      83B70700 
 609 0278 83B70700 		ld	a5,0(a5)
 610              	.LVL30:
 611              	.LBB67:
 612              	.LBB68:
 613              		.file 3 "src/../h/PCB.hpp"
   1:src/../h/PCB.hpp **** //
   2:src/../h/PCB.hpp **** // Created by os on 4/27/22.
   3:src/../h/PCB.hpp **** //
   4:src/../h/PCB.hpp **** 
   5:src/../h/PCB.hpp **** #ifndef PROJECT_BASE_V1_0_PCB_HPP
   6:src/../h/PCB.hpp **** #define PROJECT_BASE_V1_0_PCB_HPP
   7:src/../h/PCB.hpp **** 
   8:src/../h/PCB.hpp **** #include "../lib/hw.h"
   9:src/../h/PCB.hpp **** #include "Scheduler.hpp"
  10:src/../h/PCB.hpp **** #include "Riscv.hpp"
  11:src/../h/PCB.hpp **** 
  12:src/../h/PCB.hpp **** class PCB
  13:src/../h/PCB.hpp **** {
  14:src/../h/PCB.hpp **** public:
  15:src/../h/PCB.hpp ****     static uint64 savedRegA4;
  16:src/../h/PCB.hpp **** 
  17:src/../h/PCB.hpp ****     using Body = void (*)(void*);
  18:src/../h/PCB.hpp **** 
  19:src/../h/PCB.hpp ****     PCB(Body body,  void* args, void* stack_space, uint64 timeSlice);
  20:src/../h/PCB.hpp ****     ~PCB();
  21:src/../h/PCB.hpp **** 
  22:src/../h/PCB.hpp ****     void start();
  23:src/../h/PCB.hpp ****     static void dispatch();
  24:src/../h/PCB.hpp ****     static void sleep(time_t);
GAS LISTING /tmp/ccQmPygT.s 			page 21


  25:src/../h/PCB.hpp **** 
  26:src/../h/PCB.hpp ****     static PCB* running;
  27:src/../h/PCB.hpp **** 
  28:src/../h/PCB.hpp ****     static uint64 timeSliceCounter;
  29:src/../h/PCB.hpp ****     uint64 getTimeSlice() { return timeSlice;}
 614              		.loc 3 29 29 is_stmt 1
 615              		.loc 3 29 36 is_stmt 0
 616 027c 83B78701 		ld	a5,24(a5)
 617              	.LVL31:
 618              	.LBE68:
 619              	.LBE67:
  65:src/Riscv.cpp ****             {
 620              		.loc 1 65 39
 621 0280 03B70400 		ld	a4,0(s1)
  65:src/Riscv.cpp ****             {
 622              		.loc 1 65 13
 623 0284 637CF700 		bgeu	a4,a5,.L40
 624              	.L19:
  71:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 625              		.loc 1 71 13 is_stmt 1
  71:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 626              		.loc 1 71 29 is_stmt 0
 627 0288 833704FA 		ld	a5,-96(s0)
 628              	.LVL32:
 629              	.LBB69:
 630              	.LBB70:
 188:src/../h/Riscv.hpp **** }
 189:src/../h/Riscv.hpp **** 
 190:src/../h/Riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus) {
 191:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sstatus, %0" : :"r"(sstatus));
 631              		.loc 2 191 5 is_stmt 1
 632              		.loc 2 191 57 is_stmt 0
 633              	#APP
 634              	# 191 "src/../h/Riscv.hpp" 1
 192              	}
 635              		csrw sstatus, a5
 636              	# 0 "" 2
 637              	.LVL33:
 638              	#NO_APP
 639              	.LBE70:
 640              	.LBE69:
  72:src/Riscv.cpp **** 
 641              		.loc 1 72 13 is_stmt 1
  72:src/Riscv.cpp **** 
 642              		.loc 1 72 26 is_stmt 0
 643 0290 833784F9 		ld	a5,-104(s0)
 644              	.LVL34:
 645              	.LBB71:
 646              	.LBB72:
 122:src/../h/Riscv.hpp **** }
 647              		.loc 2 122 5 is_stmt 1
 122:src/../h/Riscv.hpp **** }
 648              		.loc 2 122 51 is_stmt 0
 649              	#APP
 650              	# 122 "src/../h/Riscv.hpp" 1
 123:src/../h/Riscv.hpp **** 
 651              		csrw sepc, a5
GAS LISTING /tmp/ccQmPygT.s 			page 22


 652              	# 0 "" 2
 653              		.loc 2 123 1
 654              	#NO_APP
 655 0298 6F008005 		j	.L13
 656              	.LVL35:
 657              	.L40:
 658              	.LBE72:
 659              	.LBE71:
  67:src/Riscv.cpp ****                 PCB::dispatch();
 660              		.loc 1 67 17 is_stmt 1
  67:src/Riscv.cpp ****                 PCB::dispatch();
 661              		.loc 1 67 39 is_stmt 0
 662 029c 23B00400 		sd	zero,0(s1)
  68:src/Riscv.cpp ****             }
 663              		.loc 1 68 17 is_stmt 1
  68:src/Riscv.cpp ****             }
 664              		.loc 1 68 30 is_stmt 0
 665 02a0 97000000 		call	_ZN3PCB8dispatchEv@plt
 665      E7800000 
 666              	.LVL36:
 667 02a8 6FF01FFE 		j	.L19
 668              	.LVL37:
 669              	.L39:
 670              	.LBE60:
 671              	.LBB73:
 672              	.LBB59:
 673              	.LBB58:
  94:src/Riscv.cpp ****                     KConsole::putCharacterInput(c);
 674              		.loc 1 94 21 is_stmt 1
  94:src/Riscv.cpp ****                     KConsole::putCharacterInput(c);
 675              		.loc 1 94 42 is_stmt 0
 676 02ac 9387F7FF 		addi	a5,a5,-1
 677 02b0 17070000 		la	a4,_ZN8KConsole11pendingGetcE
 677      03370700 
 678 02b8 2330F700 		sd	a5,0(a4)
  95:src/Riscv.cpp ****                     KConsole::putCharacterOutput(c);
 679              		.loc 1 95 21 is_stmt 1
  95:src/Riscv.cpp ****                     KConsole::putCharacterOutput(c);
 680              		.loc 1 95 48 is_stmt 0
 681 02bc 13850400 		mv	a0,s1
 682              	.LVL38:
 683 02c0 97000000 		call	_ZN8KConsole17putCharacterInputEc@plt
 683      E7800000 
 684              	.LVL39:
  96:src/Riscv.cpp ****                 }
 685              		.loc 1 96 21 is_stmt 1
  96:src/Riscv.cpp ****                 }
 686              		.loc 1 96 49 is_stmt 0
 687 02c8 13850400 		mv	a0,s1
 688 02cc 97000000 		call	_ZN8KConsole18putCharacterOutputEc@plt
 688      E7800000 
 689              	.LVL40:
 690 02d4 6FF01FF3 		j	.L20
 691              	.LVL41:
 692              	.L36:
 693              	.LBE58:
 694              	.LBE59:
GAS LISTING /tmp/ccQmPygT.s 			page 23


 695              	.LBE73:
 696              	.LBB74:
 127:src/Riscv.cpp ****                     MemoryAllocator::memAllocHandler();
 697              		.loc 1 127 17 is_stmt 1
 128:src/Riscv.cpp ****                     break;
 698              		.loc 1 128 21
 128:src/Riscv.cpp ****                     break;
 699              		.loc 1 128 53 is_stmt 0
 700 02d8 97000000 		call	_ZN15MemoryAllocator15memAllocHandlerEv@plt
 700      E7800000 
 701              	.LVL42:
 129:src/Riscv.cpp ****                 case MemoryAllocator::MEM_FREE:
 702              		.loc 1 129 21 is_stmt 1
 703              	.L21:
 171:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 704              		.loc 1 171 13
 171:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 705              		.loc 1 171 29 is_stmt 0
 706 02e0 833704FB 		ld	a5,-80(s0)
 707              	.LVL43:
 708              	.LBB51:
 709              	.LBB52:
 191:src/../h/Riscv.hpp **** }
 710              		.loc 2 191 5 is_stmt 1
 191:src/../h/Riscv.hpp **** }
 711              		.loc 2 191 57 is_stmt 0
 712              	#APP
 713              	# 191 "src/../h/Riscv.hpp" 1
 714              		csrw sstatus, a5
 715              	# 0 "" 2
 716              	.LVL44:
 717              	#NO_APP
 718              	.LBE52:
 719              	.LBE51:
 172:src/Riscv.cpp **** 
 720              		.loc 1 172 13 is_stmt 1
 172:src/Riscv.cpp **** 
 721              		.loc 1 172 26 is_stmt 0
 722 02e8 833784FA 		ld	a5,-88(s0)
 723              	.LVL45:
 724              	.LBB53:
 725              	.LBB54:
 122:src/../h/Riscv.hpp **** }
 726              		.loc 2 122 5 is_stmt 1
 122:src/../h/Riscv.hpp **** }
 727              		.loc 2 122 51 is_stmt 0
 728              	#APP
 729              	# 122 "src/../h/Riscv.hpp" 1
 730              		csrw sepc, a5
 731              	# 0 "" 2
 732              	.LVL46:
 733              	#NO_APP
 734              	.L13:
 735              	.LBE54:
 736              	.LBE53:
 737              	.LBE74:
 738              	.LBE78:
GAS LISTING /tmp/ccQmPygT.s 			page 24


 177:src/Riscv.cpp **** 
 739              		.loc 1 177 1
 740 02f0 83308106 		ld	ra,104(sp)
 741              		.cfi_remember_state
 742              		.cfi_restore 1
 743 02f4 03340106 		ld	s0,96(sp)
 744              		.cfi_restore 8
 745              		.cfi_def_cfa 2, 112
 746 02f8 83348105 		ld	s1,88(sp)
 747              		.cfi_restore 9
 748 02fc 13010107 		addi	sp,sp,112
 749              		.cfi_def_cfa_offset 0
 750 0300 67800000 		jr	ra
 751              	.L35:
 752              		.cfi_restore_state
 753              	.LBB79:
 754              	.LBB75:
 130:src/Riscv.cpp ****                     MemoryAllocator::memFreeHandler();
 755              		.loc 1 130 17 is_stmt 1
 131:src/Riscv.cpp ****                     break;
 756              		.loc 1 131 21
 131:src/Riscv.cpp ****                     break;
 757              		.loc 1 131 52 is_stmt 0
 758 0304 97000000 		call	_ZN15MemoryAllocator14memFreeHandlerEv@plt
 758      E7800000 
 759              	.LVL47:
 132:src/Riscv.cpp ****                 case PCB::THREAD_MAKE_PCB:
 760              		.loc 1 132 21 is_stmt 1
 761 030c 6FF05FFD 		j	.L21
 762              	.L31:
 133:src/Riscv.cpp ****                     PCB::threadMakePCBHandler();
 763              		.loc 1 133 17
 134:src/Riscv.cpp ****                     break;
 764              		.loc 1 134 21
 134:src/Riscv.cpp ****                     break;
 765              		.loc 1 134 46 is_stmt 0
 766 0310 97000000 		call	_ZN3PCB20threadMakePCBHandlerEv@plt
 766      E7800000 
 767              	.LVL48:
 135:src/Riscv.cpp ****                 case PCB::THREAD_CREATE:
 768              		.loc 1 135 21 is_stmt 1
 769 0318 6FF09FFC 		j	.L21
 770              	.L34:
 136:src/Riscv.cpp ****                     PCB::threadCreateHandler();
 771              		.loc 1 136 17
 137:src/Riscv.cpp ****                     break;
 772              		.loc 1 137 21
 137:src/Riscv.cpp ****                     break;
 773              		.loc 1 137 45 is_stmt 0
 774 031c 97000000 		call	_ZN3PCB19threadCreateHandlerEv@plt
 774      E7800000 
 775              	.LVL49:
 138:src/Riscv.cpp ****                 case PCB::THREAD_START:
 776              		.loc 1 138 21 is_stmt 1
 777 0324 6FF0DFFB 		j	.L21
 778              	.L30:
 139:src/Riscv.cpp ****                     PCB::threadStartHandler();
GAS LISTING /tmp/ccQmPygT.s 			page 25


 779              		.loc 1 139 17
 140:src/Riscv.cpp ****                     break;
 780              		.loc 1 140 21
 140:src/Riscv.cpp ****                     break;
 781              		.loc 1 140 44 is_stmt 0
 782 0328 97000000 		call	_ZN3PCB18threadStartHandlerEv@plt
 782      E7800000 
 783              	.LVL50:
 141:src/Riscv.cpp ****                 case PCB::THREAD_DISPATCH:
 784              		.loc 1 141 21 is_stmt 1
 785 0330 6FF01FFB 		j	.L21
 786              	.L32:
 142:src/Riscv.cpp ****                     PCB::threadDispatchHandler();
 787              		.loc 1 142 17
 143:src/Riscv.cpp ****                     break;
 788              		.loc 1 143 21
 143:src/Riscv.cpp ****                     break;
 789              		.loc 1 143 47 is_stmt 0
 790 0334 97000000 		call	_ZN3PCB21threadDispatchHandlerEv@plt
 790      E7800000 
 791              	.LVL51:
 144:src/Riscv.cpp ****                 case PCB::THREAD_EXIT:
 792              		.loc 1 144 21 is_stmt 1
 793 033c 6FF05FFA 		j	.L21
 794              	.L33:
 145:src/Riscv.cpp ****                     PCB::threadExitHandler();
 795              		.loc 1 145 17
 146:src/Riscv.cpp ****                     break;
 796              		.loc 1 146 21
 146:src/Riscv.cpp ****                     break;
 797              		.loc 1 146 43 is_stmt 0
 798 0340 97000000 		call	_ZN3PCB17threadExitHandlerEv@plt
 798      E7800000 
 799              	.LVL52:
 147:src/Riscv.cpp ****                 case PCB::TIME_SLEEP:
 800              		.loc 1 147 21 is_stmt 1
 801 0348 6FF09FF9 		j	.L21
 802              	.L25:
 148:src/Riscv.cpp ****                     PCB::threadSleepHandler();
 803              		.loc 1 148 17
 149:src/Riscv.cpp ****                     break;
 804              		.loc 1 149 21
 149:src/Riscv.cpp ****                     break;
 805              		.loc 1 149 44 is_stmt 0
 806 034c 97000000 		call	_ZN3PCB18threadSleepHandlerEv@plt
 806      E7800000 
 807              	.LVL53:
 150:src/Riscv.cpp ****                 case KSemaphore::SEM_OPEN:
 808              		.loc 1 150 21 is_stmt 1
 809 0354 6FF0DFF8 		j	.L21
 810              	.L29:
 151:src/Riscv.cpp ****                     KSemaphore::semOpenHandler();
 811              		.loc 1 151 17
 152:src/Riscv.cpp ****                     break;
 812              		.loc 1 152 21
 152:src/Riscv.cpp ****                     break;
 813              		.loc 1 152 47 is_stmt 0
GAS LISTING /tmp/ccQmPygT.s 			page 26


 814 0358 97000000 		call	_ZN10KSemaphore14semOpenHandlerEv@plt
 814      E7800000 
 815              	.LVL54:
 153:src/Riscv.cpp ****                 case KSemaphore::SEM_WAIT:
 816              		.loc 1 153 21 is_stmt 1
 817 0360 6FF01FF8 		j	.L21
 818              	.L27:
 154:src/Riscv.cpp ****                     KSemaphore::semWaitHandler();
 819              		.loc 1 154 17
 155:src/Riscv.cpp ****                     break;
 820              		.loc 1 155 21
 155:src/Riscv.cpp ****                     break;
 821              		.loc 1 155 47 is_stmt 0
 822 0364 97000000 		call	_ZN10KSemaphore14semWaitHandlerEv@plt
 822      E7800000 
 823              	.LVL55:
 156:src/Riscv.cpp ****                 case KSemaphore::SEM_SIGNAL:
 824              		.loc 1 156 21 is_stmt 1
 825 036c 6FF05FF7 		j	.L21
 826              	.L26:
 157:src/Riscv.cpp ****                     KSemaphore::semSignalHandler();
 827              		.loc 1 157 17
 158:src/Riscv.cpp ****                     break;
 828              		.loc 1 158 21
 158:src/Riscv.cpp ****                     break;
 829              		.loc 1 158 49 is_stmt 0
 830 0370 97000000 		call	_ZN10KSemaphore16semSignalHandlerEv@plt
 830      E7800000 
 831              	.LVL56:
 159:src/Riscv.cpp ****                 case KSemaphore::SEM_CLOSE:
 832              		.loc 1 159 21 is_stmt 1
 833 0378 6FF09FF6 		j	.L21
 834              	.L28:
 160:src/Riscv.cpp ****                     KSemaphore::semCloseHandler();
 835              		.loc 1 160 17
 161:src/Riscv.cpp ****                     break;
 836              		.loc 1 161 21
 161:src/Riscv.cpp ****                     break;
 837              		.loc 1 161 48 is_stmt 0
 838 037c 97000000 		call	_ZN10KSemaphore15semCloseHandlerEv@plt
 838      E7800000 
 839              	.LVL57:
 162:src/Riscv.cpp ****                 case KConsole::CONSOLE_GETC:
 840              		.loc 1 162 21 is_stmt 1
 841 0384 6FF0DFF5 		j	.L21
 842              	.L24:
 163:src/Riscv.cpp ****                     KConsole::getcHandler();
 843              		.loc 1 163 17
 164:src/Riscv.cpp ****                     break;
 844              		.loc 1 164 21
 164:src/Riscv.cpp ****                     break;
 845              		.loc 1 164 42 is_stmt 0
 846 0388 97000000 		call	_ZN8KConsole11getcHandlerEv@plt
 846      E7800000 
 847              	.LVL58:
 165:src/Riscv.cpp ****                 case KConsole::CONSOLE_PUTC:
 848              		.loc 1 165 21 is_stmt 1
GAS LISTING /tmp/ccQmPygT.s 			page 27


 849 0390 6FF01FF5 		j	.L21
 850              	.L22:
 166:src/Riscv.cpp ****                     KConsole::putcHandler();
 851              		.loc 1 166 17
 167:src/Riscv.cpp ****                     break;
 852              		.loc 1 167 21
 167:src/Riscv.cpp ****                     break;
 853              		.loc 1 167 42 is_stmt 0
 854 0394 97000000 		call	_ZN8KConsole11putcHandlerEv@plt
 854      E7800000 
 855              	.LVL59:
 168:src/Riscv.cpp ****             }
 856              		.loc 1 168 21 is_stmt 1
 857 039c 6FF05FF4 		j	.L21
 858              	.LBE75:
 859              	.LBE79:
 860              		.cfi_endproc
 861              	.LFE31:
 863              		.section	.rodata.str1.8,"aMS",@progbits,1
 864              		.align	3
 865              	.LC0:
 866 0000 456E642E 		.string	"End...\n"
 866      2E2E0A00 
 867              		.text
 868              		.align	2
 869              		.globl	_ZN5Riscv10kernelMainEv
 871              	_ZN5Riscv10kernelMainEv:
 872              	.LFB32:
 180:src/Riscv.cpp ****     initSystem();
 873              		.loc 1 180 1
 874              		.cfi_startproc
 875              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 876              		.cfi_lsda 0x1b,.LLSDA32
 877 03a0 130101FE 		addi	sp,sp,-32
 878              		.cfi_def_cfa_offset 32
 879 03a4 233C1100 		sd	ra,24(sp)
 880 03a8 23388100 		sd	s0,16(sp)
 881 03ac 23349100 		sd	s1,8(sp)
 882 03b0 23302101 		sd	s2,0(sp)
 883              		.cfi_offset 1, -8
 884              		.cfi_offset 8, -16
 885              		.cfi_offset 9, -24
 886              		.cfi_offset 18, -32
 887 03b4 13040102 		addi	s0,sp,32
 888              		.cfi_def_cfa 8, 0
 181:src/Riscv.cpp **** 
 889              		.loc 1 181 5
 890              	.LEHB0:
 181:src/Riscv.cpp **** 
 891              		.loc 1 181 15 is_stmt 0
 892 03b8 97000000 		call	_ZN5Riscv10initSystemEv
 892      E7800000 
 893              	.LVL60:
 183:src/Riscv.cpp **** 
 894              		.loc 1 183 5 is_stmt 1
 183:src/Riscv.cpp **** 
 895              		.loc 1 183 21 is_stmt 0
GAS LISTING /tmp/ccQmPygT.s 			page 28


 896 03c0 97000000 		call	_ZN5Riscv16enableInterruptsEv
 896      E7800000 
 897              	.LVL61:
 185:src/Riscv.cpp ****     //PCB* userPCB = new PCB(&Riscv::myTestsWrapper, 0, kmalloc(DEFAULT_STACK_SIZE), DEFAULT_TIME_S
 898              		.loc 1 185 5 is_stmt 1
 185:src/Riscv.cpp ****     //PCB* userPCB = new PCB(&Riscv::myTestsWrapper, 0, kmalloc(DEFAULT_STACK_SIZE), DEFAULT_TIME_S
 899              		.loc 1 185 63 is_stmt 0
 900 03c8 37150000 		li	a0,4096
 901 03cc 97000000 		call	_Z7kmallocm@plt
 901      E7800000 
 902              	.LVL62:
 903 03d4 13090500 		mv	s2,a0
 185:src/Riscv.cpp ****     //PCB* userPCB = new PCB(&Riscv::myTestsWrapper, 0, kmalloc(DEFAULT_STACK_SIZE), DEFAULT_TIME_S
 904              		.loc 1 185 103
 905 03d8 13058005 		li	a0,88
 906 03dc 97000000 		call	_ZN3PCBnwEm@plt
 906      E7800000 
 907              	.LVL63:
 908              	.LEHE0:
 909 03e4 93040500 		mv	s1,a0
 910 03e8 13072000 		li	a4,2
 911 03ec 93060900 		mv	a3,s2
 912 03f0 13060000 		li	a2,0
 913 03f4 97050000 		lla	a1,_ZN5Riscv15userMainWrapperEPv
 913      93850500 
 914              	.LEHB1:
 915 03fc 97000000 		call	_ZN3PCBC1EPFvPvES0_S0_m@plt
 915      E7800000 
 916              	.LVL64:
 917              	.LEHE1:
 187:src/Riscv.cpp ****     while(!userPCB->isFinished())
 918              		.loc 1 187 5 is_stmt 1 discriminator 2
 187:src/Riscv.cpp ****     while(!userPCB->isFinished())
 919              		.loc 1 187 19 is_stmt 0 discriminator 2
 920 0404 13850400 		mv	a0,s1
 921              	.LEHB2:
 922 0408 97000000 		call	_ZN3PCB5startEv@plt
 922      E7800000 
 923              	.LVL65:
 924              	.L43:
 188:src/Riscv.cpp ****     {
 925              		.loc 1 188 5 is_stmt 1
 188:src/Riscv.cpp ****     {
 926              		.loc 1 188 11
 188:src/Riscv.cpp ****     {
 927              		.loc 1 188 31 is_stmt 0
 928 0410 13850400 		mv	a0,s1
 929 0414 97000000 		call	_ZN3PCB10isFinishedEv@plt
 929      E7800000 
 930              	.LVL66:
 188:src/Riscv.cpp ****     {
 931              		.loc 1 188 11
 932 041c 63180500 		bnez	a0,.L42
 190:src/Riscv.cpp ****     }
 933              		.loc 1 190 9 is_stmt 1
 190:src/Riscv.cpp ****     }
 934              		.loc 1 190 24 is_stmt 0
GAS LISTING /tmp/ccQmPygT.s 			page 29


 935 0420 97000000 		call	thread_dispatch@plt
 935      E7800000 
 936              	.LVL67:
 188:src/Riscv.cpp ****     {
 937              		.loc 1 188 5
 938 0428 6FF09FFE 		j	.L43
 939              	.L42:
 193:src/Riscv.cpp **** 
 940              		.loc 1 193 5 is_stmt 1
 193:src/Riscv.cpp **** 
 941              		.loc 1 193 22 is_stmt 0
 942 042c 97000000 		call	_ZN5Riscv17disableInterruptsEv
 942      E7800000 
 943              	.LVL68:
 195:src/Riscv.cpp **** 
 944              		.loc 1 195 5 is_stmt 1
 195:src/Riscv.cpp **** 
 945              		.loc 1 195 14 is_stmt 0
 946 0434 97000000 		call	_ZN5Riscv9endSystemEv
 946      E7800000 
 947              	.LVL69:
 197:src/Riscv.cpp **** }
 948              		.loc 1 197 5 is_stmt 1
 197:src/Riscv.cpp **** }
 949              		.loc 1 197 18 is_stmt 0
 950 043c 17050000 		lla	a0,.LC0
 950      13050500 
 951 0444 97000000 		call	_Z11printStringPKc@plt
 951      E7800000 
 952              	.LVL70:
 953              	.LEHE2:
 198:src/Riscv.cpp **** 
 954              		.loc 1 198 1
 955 044c 83308101 		ld	ra,24(sp)
 956              		.cfi_remember_state
 957              		.cfi_restore 1
 958 0450 03340101 		ld	s0,16(sp)
 959              		.cfi_restore 8
 960              		.cfi_def_cfa 2, 32
 961 0454 83348100 		ld	s1,8(sp)
 962              		.cfi_restore 9
 963              	.LVL71:
 964 0458 03390100 		ld	s2,0(sp)
 965              		.cfi_restore 18
 966 045c 13010102 		addi	sp,sp,32
 967              		.cfi_def_cfa_offset 0
 968 0460 67800000 		jr	ra
 969              	.L45:
 970              		.cfi_restore_state
 971 0464 13090500 		mv	s2,a0
 185:src/Riscv.cpp ****     //PCB* userPCB = new PCB(&Riscv::myTestsWrapper, 0, kmalloc(DEFAULT_STACK_SIZE), DEFAULT_TIME_S
 972              		.loc 1 185 103
 973 0468 13850400 		mv	a0,s1
 974 046c 97000000 		call	_ZN3PCBdlEPv@plt
 974      E7800000 
 975              	.LVL72:
 976 0474 13050900 		mv	a0,s2
GAS LISTING /tmp/ccQmPygT.s 			page 30


 977              	.LEHB3:
 978 0478 97000000 		call	_Unwind_Resume@plt
 978      E7800000 
 979              	.LVL73:
 980              	.LEHE3:
 981              		.cfi_endproc
 982              	.LFE32:
 983              		.globl	__gxx_personality_v0
 984              		.section	.gcc_except_table,"a",@progbits
 985              	.LLSDA32:
 986 0000 FF       		.byte	0xff
 987 0001 FF       		.byte	0xff
 988 0002 03       		.byte	0x3
 989 0003 34       		.byte	0x34
 990 0004 00000000 		.4byte	.LEHB0-.LFB32
 991 0008 00000000 		.4byte	.LEHE0-.LEHB0
 992 000c 00000000 		.4byte	0
 993 0010 00       		.byte	0
 994 0011 00000000 		.4byte	.LEHB1-.LFB32
 995 0015 00000000 		.4byte	.LEHE1-.LEHB1
 996 0019 00000000 		.4byte	.L45-.LFB32
 997 001d 00       		.byte	0
 998 001e 00000000 		.4byte	.LEHB2-.LFB32
 999 0022 00000000 		.4byte	.LEHE2-.LEHB2
 1000 0026 00000000 		.4byte	0
 1001 002a 00       		.byte	0
 1002 002b 00000000 		.4byte	.LEHB3-.LFB32
 1003 002f 00000000 		.4byte	.LEHE3-.LEHB3
 1004 0033 00000000 		.4byte	0
 1005 0037 00       		.byte	0
 1006              		.text
 1008              		.align	2
 1009              		.globl	_ZN5Riscv14myTestsWrapperEPv
 1011              	_ZN5Riscv14myTestsWrapperEPv:
 1012              	.LFB34:
 204:src/Riscv.cpp **** 
 205:src/Riscv.cpp **** void Riscv::myTestsWrapper(void* p)
 206:src/Riscv.cpp **** {
 1013              		.loc 1 206 1 is_stmt 1
 1014              		.cfi_startproc
 1015              	.LVL74:
 1016 0480 130101FF 		addi	sp,sp,-16
 1017              		.cfi_def_cfa_offset 16
 1018 0484 23341100 		sd	ra,8(sp)
 1019 0488 23308100 		sd	s0,0(sp)
 1020              		.cfi_offset 1, -8
 1021              		.cfi_offset 8, -16
 1022 048c 13040101 		addi	s0,sp,16
 1023              		.cfi_def_cfa 8, 0
 207:src/Riscv.cpp ****     myTests();
 1024              		.loc 1 207 5
 1025              		.loc 1 207 12 is_stmt 0
 1026 0490 97000000 		call	_Z7myTestsv@plt
 1026      E7800000 
 1027              	.LVL75:
 208:src/Riscv.cpp **** }
 1028              		.loc 1 208 1
GAS LISTING /tmp/ccQmPygT.s 			page 31


 1029 0498 83308100 		ld	ra,8(sp)
 1030              		.cfi_restore 1
 1031 049c 03340100 		ld	s0,0(sp)
 1032              		.cfi_restore 8
 1033              		.cfi_def_cfa 2, 16
 1034 04a0 13010101 		addi	sp,sp,16
 1035              		.cfi_def_cfa_offset 0
 1036 04a4 67800000 		jr	ra
 1037              		.cfi_endproc
 1038              	.LFE34:
 1040              		.align	2
 1041              		.globl	_ZN5Riscv22disableTimerInterruptsEv
 1043              	_ZN5Riscv22disableTimerInterruptsEv:
 1044              	.LFB35:
 209:src/Riscv.cpp **** 
 210:src/Riscv.cpp **** void Riscv::disableTimerInterrupts()
 211:src/Riscv.cpp **** {
 1045              		.loc 1 211 1 is_stmt 1
 1046              		.cfi_startproc
 1047 04a8 130101FF 		addi	sp,sp,-16
 1048              		.cfi_def_cfa_offset 16
 1049 04ac 23348100 		sd	s0,8(sp)
 1050              		.cfi_offset 8, -8
 1051 04b0 13040101 		addi	s0,sp,16
 1052              		.cfi_def_cfa 8, 0
 212:src/Riscv.cpp ****     //uint64 x = 0x200;
 213:src/Riscv.cpp ****     //__asm__ volatile("csrs sie, %0"::"r"(x));
 214:src/Riscv.cpp ****     uint64 x = 0x2;
 1053              		.loc 1 214 5
 1054              	.LVL76:
 215:src/Riscv.cpp ****     __asm__ volatile("csrc sie, %0"::"r"(x));
 1055              		.loc 1 215 5
 1056              		.loc 1 215 45 is_stmt 0
 1057 04b4 93072000 		li	a5,2
 1058              	#APP
 1059              	# 215 "src/Riscv.cpp" 1
 216              	}
 1060              		csrc sie, a5
 1061              	# 0 "" 2
 1062              		.loc 1 216 1
 1063              	#NO_APP
 1064 04bc 03348100 		ld	s0,8(sp)
 1065              		.cfi_restore 8
 1066              		.cfi_def_cfa 2, 16
 1067 04c0 13010101 		addi	sp,sp,16
 1068              		.cfi_def_cfa_offset 0
 1069 04c4 67800000 		jr	ra
 1070              		.cfi_endproc
 1071              	.LFE35:
 1073              		.align	2
 1074              		.globl	_ZN5Riscv9idleRiscvEPv
 1076              	_ZN5Riscv9idleRiscvEPv:
 1077              	.LFB36:
 217:src/Riscv.cpp **** 
 218:src/Riscv.cpp **** void Riscv::idleRiscv(void* p)
 219:src/Riscv.cpp **** {
 1078              		.loc 1 219 1 is_stmt 1
GAS LISTING /tmp/ccQmPygT.s 			page 32


 1079              		.cfi_startproc
 1080              	.LVL77:
 1081 04c8 130101FF 		addi	sp,sp,-16
 1082              		.cfi_def_cfa_offset 16
 1083 04cc 23348100 		sd	s0,8(sp)
 1084              		.cfi_offset 8, -8
 1085 04d0 13040101 		addi	s0,sp,16
 1086              		.cfi_def_cfa 8, 0
 1087              	.L53:
 220:src/Riscv.cpp ****     while(true)
 1088              		.loc 1 220 5 discriminator 1
 1089              		.loc 1 220 5 discriminator 1
 1090 04d4 6F000000 		j	.L53
 1091              		.cfi_endproc
 1092              	.LFE36:
 1094              		.align	2
 1095              		.globl	_ZN5Riscv13w_a0_sscratchEv
 1097              	_ZN5Riscv13w_a0_sscratchEv:
 1098              	.LFB37:
 221:src/Riscv.cpp ****     {
 222:src/Riscv.cpp **** 
 223:src/Riscv.cpp ****     }
 224:src/Riscv.cpp **** }
 225:src/Riscv.cpp **** 
 226:src/Riscv.cpp **** void Riscv::w_a0_sscratch()
 227:src/Riscv.cpp **** {
 1099              		.loc 1 227 1
 1100              		.cfi_startproc
 1101 04d8 130101FF 		addi	sp,sp,-16
 1102              		.cfi_def_cfa_offset 16
 1103 04dc 23348100 		sd	s0,8(sp)
 1104              		.cfi_offset 8, -8
 1105 04e0 13040101 		addi	s0,sp,16
 1106              		.cfi_def_cfa 8, 0
 228:src/Riscv.cpp ****     uint64 a1Temp;
 1107              		.loc 1 228 5
 229:src/Riscv.cpp ****     __asm__ volatile("mv %0, a1":"=r"(a1Temp));
 1108              		.loc 1 229 5
 1109              		.loc 1 229 47 is_stmt 0
 1110              	#APP
 1111              	# 229 "src/Riscv.cpp" 1
 230              	    __asm__ volatile("mv a1, %0"::"r"(PCB::running->sscratch));
 1112              		mv a5, a1
 1113              	# 0 "" 2
 1114              	.LVL78:
 1115              		.loc 1 230 5 is_stmt 1
 1116              		.loc 1 230 53 is_stmt 0
 1117              	#NO_APP
 1118 04e8 17070000 		la	a4,_ZN3PCB7runningE
 1118      03370700 
 1119 04f0 03370700 		ld	a4,0(a4)
 1120 04f4 03370701 		ld	a4,16(a4)
 1121              		.loc 1 230 63
 1122              	#APP
 1123              	# 230 "src/Riscv.cpp" 1
 231              	    //__asm__ volatile("csrr a1, sscratch");
 232:src/Riscv.cpp ****     __asm__ volatile("sd a0, 80(a1)");
GAS LISTING /tmp/ccQmPygT.s 			page 33


 1124              		mv a1, a4
 1125              	# 0 "" 2
 1126              		.loc 1 232 5 is_stmt 1
 1127              		.loc 1 232 38 is_stmt 0
 1128              	# 232 "src/Riscv.cpp" 1
 233              	    __asm__ volatile("mv a1,%0"::"r"(a1Temp));
 1129              		sd a0, 80(a1)
 1130              	# 0 "" 2
 1131              		.loc 1 233 5 is_stmt 1
 1132              		.loc 1 233 46 is_stmt 0
 1133              	# 233 "src/Riscv.cpp" 1
 234              	}
 1134              		mv a1,a5
 1135              	# 0 "" 2
 1136              		.loc 1 234 1
 1137              	#NO_APP
 1138 0504 03348100 		ld	s0,8(sp)
 1139              		.cfi_restore 8
 1140              		.cfi_def_cfa 2, 16
 1141 0508 13010101 		addi	sp,sp,16
 1142              		.cfi_def_cfa_offset 0
 1143 050c 67800000 		jr	ra
 1144              		.cfi_endproc
 1145              	.LFE37:
 1147              		.globl	_ZN5Riscv9totalTimeE
 1148              		.bss
 1149              		.align	3
 1150              		.set	.LANCHOR0,. + 0
 1153              	_ZN5Riscv9totalTimeE:
 1154 0000 00000000 		.zero	8
 1154      00000000 
 1155              		.text
 1156              	.Letext0:
 1157              		.file 4 "src/../h/../lib/hw.h"
 1158              		.file 5 "src/../h/MemoryAllocator.hpp"
 1159              		.file 6 "src/../h/KSemaphore.hpp"
 1160              		.file 7 "src/../h/SleepPCBList.hpp"
 1161              		.file 8 "src/../h/KConsole.hpp"
 1162              		.file 9 "src/../h/Tests.hpp"
 1163              		.file 10 "src/../test/userMain.hpp"
 1164              		.file 11 "src/../h/../test/../h/syscall_c.h"
 1165              		.file 12 "src/../h/../test/printing.hpp"
 5699              		.align	3
 5702              	DW.ref.__gxx_personality_v0:
 5703 0000 00000000 		.dword	__gxx_personality_v0
 5703      00000000 
 5704              		.ident	"GCC: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0"
 5705              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/ccQmPygT.s 			page 34


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Riscv.cpp
     /tmp/ccQmPygT.s:9      .text:0000000000000000 _ZN5Riscv15userMainWrapperEPv
     /tmp/ccQmPygT.s:13     .text:0000000000000000 .L0 
     /tmp/ccQmPygT.s:14     .text:0000000000000000 .L0 
     /tmp/ccQmPygT.s:15     .text:0000000000000004 .L0 
     /tmp/ccQmPygT.s:18     .text:000000000000000c .L0 
     /tmp/ccQmPygT.s:19     .text:000000000000000c .L0 
     /tmp/ccQmPygT.s:21     .text:0000000000000010 .L0 
     /tmp/ccQmPygT.s:23     .text:0000000000000010 .L0 
     /tmp/ccQmPygT.s:24     .text:0000000000000010 .L0 
     /tmp/ccQmPygT.s:27     .text:0000000000000018 .L0 
     /tmp/ccQmPygT.s:28     .text:000000000000001c .L0 
     /tmp/ccQmPygT.s:30     .text:0000000000000020 .L0 
     /tmp/ccQmPygT.s:31     .text:0000000000000020 .L0 
     /tmp/ccQmPygT.s:33     .text:0000000000000024 .L0 
     /tmp/ccQmPygT.s:35     .text:0000000000000028 .L0 
     /tmp/ccQmPygT.s:41     .text:0000000000000028 _ZN5Riscv10initSystemEv
     /tmp/ccQmPygT.s:44     .text:0000000000000028 .L0 
     /tmp/ccQmPygT.s:45     .text:0000000000000028 .L0 
     /tmp/ccQmPygT.s:46     .text:000000000000002c .L0 
     /tmp/ccQmPygT.s:49     .text:0000000000000034 .L0 
     /tmp/ccQmPygT.s:50     .text:0000000000000034 .L0 
     /tmp/ccQmPygT.s:52     .text:0000000000000038 .L0 
     /tmp/ccQmPygT.s:54     .text:0000000000000038 .L0 
     /tmp/ccQmPygT.s:55     .text:0000000000000038 .L0 
     /tmp/ccQmPygT.s:61     .text:0000000000000040 .L0 
  src/../h/Riscv.hpp:132    .text:0000000000000040 .L0 
     /tmp/ccQmPygT.s:71     .text:0000000000000044 .L0 
     /tmp/ccQmPygT.s:72     .text:0000000000000044 .L0 
     /tmp/ccQmPygT.s:75     .text:000000000000004c .L0 
     /tmp/ccQmPygT.s:76     .text:000000000000004c .L0 
     /tmp/ccQmPygT.s:79     .text:0000000000000054 .L0 
     /tmp/ccQmPygT.s:80     .text:0000000000000058 .L0 
     /tmp/ccQmPygT.s:82     .text:000000000000005c .L0 
     /tmp/ccQmPygT.s:83     .text:000000000000005c .L0 
     /tmp/ccQmPygT.s:85     .text:0000000000000060 .L0 
     /tmp/ccQmPygT.s:87     .text:0000000000000064 .L0 
     /tmp/ccQmPygT.s:93     .text:0000000000000064 _ZN5Riscv16enableInterruptsEv
     /tmp/ccQmPygT.s:96     .text:0000000000000064 .L0 
     /tmp/ccQmPygT.s:97     .text:0000000000000064 .L0 
     /tmp/ccQmPygT.s:98     .text:0000000000000068 .L0 
     /tmp/ccQmPygT.s:100    .text:000000000000006c .L0 
     /tmp/ccQmPygT.s:102    .text:0000000000000070 .L0 
     /tmp/ccQmPygT.s:107    .text:0000000000000070 .L0 
     /tmp/ccQmPygT.s:108    .text:0000000000000070 .L0 
     /tmp/ccQmPygT.s:109    .text:0000000000000070 .L0 
     /tmp/ccQmPygT.s:119    .text:0000000000000078 .L0 
     /tmp/ccQmPygT.s:120    .text:000000000000007c .L0 
     /tmp/ccQmPygT.s:121    .text:000000000000007c .L0 
     /tmp/ccQmPygT.s:123    .text:0000000000000080 .L0 
     /tmp/ccQmPygT.s:125    .text:0000000000000084 .L0 
     /tmp/ccQmPygT.s:131    .text:0000000000000084 _ZN5Riscv17disableInterruptsEv
     /tmp/ccQmPygT.s:134    .text:0000000000000084 .L0 
     /tmp/ccQmPygT.s:135    .text:0000000000000084 .L0 
     /tmp/ccQmPygT.s:136    .text:0000000000000088 .L0 
     /tmp/ccQmPygT.s:138    .text:000000000000008c .L0 
GAS LISTING /tmp/ccQmPygT.s 			page 35


     /tmp/ccQmPygT.s:140    .text:0000000000000090 .L0 
     /tmp/ccQmPygT.s:145    .text:0000000000000090 .L0 
     /tmp/ccQmPygT.s:146    .text:0000000000000090 .L0 
     /tmp/ccQmPygT.s:147    .text:0000000000000090 .L0 
     /tmp/ccQmPygT.s:157    .text:0000000000000098 .L0 
     /tmp/ccQmPygT.s:158    .text:000000000000009c .L0 
     /tmp/ccQmPygT.s:159    .text:000000000000009c .L0 
     /tmp/ccQmPygT.s:161    .text:00000000000000a0 .L0 
     /tmp/ccQmPygT.s:163    .text:00000000000000a4 .L0 
     /tmp/ccQmPygT.s:169    .text:00000000000000a4 _ZN5Riscv9endSystemEv
     /tmp/ccQmPygT.s:172    .text:00000000000000a4 .L0 
     /tmp/ccQmPygT.s:173    .text:00000000000000a4 .L0 
     /tmp/ccQmPygT.s:174    .text:00000000000000a8 .L0 
     /tmp/ccQmPygT.s:177    .text:00000000000000b0 .L0 
     /tmp/ccQmPygT.s:178    .text:00000000000000b0 .L0 
     /tmp/ccQmPygT.s:180    .text:00000000000000b4 .L0 
     /tmp/ccQmPygT.s:182    .text:00000000000000b4 .L0 
     /tmp/ccQmPygT.s:183    .text:00000000000000b4 .L0 
     /tmp/ccQmPygT.s:186    .text:00000000000000bc .L0 
     /tmp/ccQmPygT.s:187    .text:00000000000000c0 .L0 
     /tmp/ccQmPygT.s:189    .text:00000000000000c4 .L0 
     /tmp/ccQmPygT.s:190    .text:00000000000000c4 .L0 
     /tmp/ccQmPygT.s:192    .text:00000000000000c8 .L0 
     /tmp/ccQmPygT.s:194    .text:00000000000000cc .L0 
     /tmp/ccQmPygT.s:200    .text:00000000000000cc _ZN5Riscv10popSppSpieEv
     /tmp/ccQmPygT.s:203    .text:00000000000000cc .L0 
     /tmp/ccQmPygT.s:204    .text:00000000000000cc .L0 
     /tmp/ccQmPygT.s:205    .text:00000000000000d0 .L0 
     /tmp/ccQmPygT.s:207    .text:00000000000000d4 .L0 
     /tmp/ccQmPygT.s:209    .text:00000000000000d8 .L0 
     /tmp/ccQmPygT.s:211    .text:00000000000000d8 .L0 
       src/Riscv.cpp:40     .text:00000000000000d8 .L0 
     /tmp/ccQmPygT.s:217    .text:00000000000000dc .L0 
       src/Riscv.cpp:41     .text:00000000000000dc .L0 
     /tmp/ccQmPygT.s:223    .text:00000000000000e0 .L0 
     /tmp/ccQmPygT.s:224    .text:00000000000000e4 .L0 
     /tmp/ccQmPygT.s:225    .text:00000000000000e4 .L0 
     /tmp/ccQmPygT.s:227    .text:00000000000000e8 .L0 
     /tmp/ccQmPygT.s:229    .text:00000000000000ec .L0 
     /tmp/ccQmPygT.s:235    .text:00000000000000ec _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccQmPygT.s:238    .text:00000000000000ec .L0 
     /tmp/ccQmPygT.s:239    .text:00000000000000ec .L0 
     /tmp/ccQmPygT.s:240    .text:00000000000000f0 .L0 
     /tmp/ccQmPygT.s:244    .text:00000000000000fc .L0 
     /tmp/ccQmPygT.s:245    .text:00000000000000fc .L0 
     /tmp/ccQmPygT.s:246    .text:00000000000000fc .L0 
     /tmp/ccQmPygT.s:248    .text:0000000000000100 .L0 
     /tmp/ccQmPygT.s:250    .text:0000000000000100 .L0 
       src/Riscv.cpp:46     .text:0000000000000100 .L0 
     /tmp/ccQmPygT.s:259    .text:0000000000000110 .L0 
     /tmp/ccQmPygT.s:260    .text:0000000000000110 .L0 
       src/Riscv.cpp:47     .text:000000000000011c .L0 
     /tmp/ccQmPygT.s:272    .text:0000000000000124 .L0 
     /tmp/ccQmPygT.s:273    .text:0000000000000124 .L0 
     /tmp/ccQmPygT.s:274    .text:0000000000000124 .L0 
  src/../h/Riscv.hpp:107    .text:0000000000000124 .L0 
     /tmp/ccQmPygT.s:282    .text:000000000000012c .L0 
GAS LISTING /tmp/ccQmPygT.s 			page 36


     /tmp/ccQmPygT.s:283    .text:000000000000012c .L0 
     /tmp/ccQmPygT.s:289    .text:0000000000000130 .L0 
     /tmp/ccQmPygT.s:303    .text:000000000000015c .L0 
     /tmp/ccQmPygT.s:304    .text:000000000000015c .L0 
     /tmp/ccQmPygT.s:307    .text:000000000000015c .L0 
     /tmp/ccQmPygT.s:308    .text:000000000000015c .L0 
     /tmp/ccQmPygT.s:309    .text:000000000000015c .L0 
       src/Riscv.cpp:120    .text:000000000000015c .L0 
     /tmp/ccQmPygT.s:319    .text:0000000000000160 .L0 
     /tmp/ccQmPygT.s:320    .text:0000000000000160 .L0 
     /tmp/ccQmPygT.s:321    .text:0000000000000160 .L0 
  src/../h/Riscv.hpp:117    .text:0000000000000160 .L0 
     /tmp/ccQmPygT.s:329    .text:0000000000000168 .L0 
     /tmp/ccQmPygT.s:330    .text:0000000000000168 .L0 
     /tmp/ccQmPygT.s:334    .text:000000000000016c .L0 
     /tmp/ccQmPygT.s:336    .text:0000000000000170 .L0 
     /tmp/ccQmPygT.s:340    .text:0000000000000174 .L0 
     /tmp/ccQmPygT.s:341    .text:0000000000000174 .L0 
     /tmp/ccQmPygT.s:342    .text:0000000000000174 .L0 
  src/../h/Riscv.hpp:186    .text:0000000000000174 .L0 
     /tmp/ccQmPygT.s:350    .text:000000000000017c .L0 
     /tmp/ccQmPygT.s:351    .text:000000000000017c .L0 
     /tmp/ccQmPygT.s:355    .text:0000000000000180 .L0 
     /tmp/ccQmPygT.s:357    .text:0000000000000184 .L0 
     /tmp/ccQmPygT.s:442    .text:00000000000001a8 .L0 
     /tmp/ccQmPygT.s:448    .text:00000000000001b8 .L0 
     /tmp/ccQmPygT.s:451    .text:00000000000001b8 .L0 
     /tmp/ccQmPygT.s:452    .text:00000000000001b8 .L0 
     /tmp/ccQmPygT.s:453    .text:00000000000001b8 .L0 
     /tmp/ccQmPygT.s:458    .text:00000000000001c4 .L0 
       src/Riscv.cpp:79     .text:00000000000001c4 .L0 
     /tmp/ccQmPygT.s:464    .text:00000000000001c8 .L0 
       src/Riscv.cpp:80     .text:00000000000001c8 .L0 
     /tmp/ccQmPygT.s:469    .text:00000000000001cc .L0 
     /tmp/ccQmPygT.s:470    .text:00000000000001cc .L0 
       src/Riscv.cpp:82     .text:00000000000001cc .L0 
     /tmp/ccQmPygT.s:478    .text:00000000000001d0 .L0 
     /tmp/ccQmPygT.s:479    .text:00000000000001d0 .L0 
     /tmp/ccQmPygT.s:482    .text:00000000000001d4 .L0 
     /tmp/ccQmPygT.s:485    .text:00000000000001d8 .L0 
     /tmp/ccQmPygT.s:486    .text:00000000000001d8 .L0 
     /tmp/ccQmPygT.s:490    .text:00000000000001e4 .L0 
       src/Riscv.cpp:86     .text:00000000000001e4 .L0 
     /tmp/ccQmPygT.s:496    .text:00000000000001e8 .L0 
       src/Riscv.cpp:87     .text:00000000000001e8 .L0 
     /tmp/ccQmPygT.s:501    .text:00000000000001ec .L0 
     /tmp/ccQmPygT.s:502    .text:00000000000001ec .L0 
       src/Riscv.cpp:89     .text:00000000000001ec .L0 
     /tmp/ccQmPygT.s:510    .text:00000000000001f4 .L0 
     /tmp/ccQmPygT.s:511    .text:00000000000001f4 .L0 
     /tmp/ccQmPygT.s:515    .text:0000000000000200 .L0 
     /tmp/ccQmPygT.s:521    .text:0000000000000204 .L0 
     /tmp/ccQmPygT.s:522    .text:0000000000000204 .L0 
     /tmp/ccQmPygT.s:527    .text:0000000000000214 .L0 
     /tmp/ccQmPygT.s:533    .text:0000000000000218 .L0 
     /tmp/ccQmPygT.s:536    .text:0000000000000218 .L0 
     /tmp/ccQmPygT.s:539    .text:0000000000000218 .L0 
GAS LISTING /tmp/ccQmPygT.s 			page 37


     /tmp/ccQmPygT.s:540    .text:0000000000000218 .L0 
     /tmp/ccQmPygT.s:541    .text:0000000000000218 .L0 
  src/../h/Riscv.hpp:117    .text:0000000000000218 .L0 
     /tmp/ccQmPygT.s:550    .text:0000000000000220 .L0 
     /tmp/ccQmPygT.s:551    .text:0000000000000220 .L0 
     /tmp/ccQmPygT.s:555    .text:0000000000000224 .L0 
     /tmp/ccQmPygT.s:559    .text:0000000000000228 .L0 
     /tmp/ccQmPygT.s:560    .text:0000000000000228 .L0 
     /tmp/ccQmPygT.s:561    .text:0000000000000228 .L0 
  src/../h/Riscv.hpp:186    .text:0000000000000228 .L0 
     /tmp/ccQmPygT.s:569    .text:0000000000000230 .L0 
     /tmp/ccQmPygT.s:570    .text:0000000000000230 .L0 
     /tmp/ccQmPygT.s:574    .text:0000000000000234 .L0 
     /tmp/ccQmPygT.s:579    .text:0000000000000238 .L0 
     /tmp/ccQmPygT.s:580    .text:0000000000000238 .L0 
     /tmp/ccQmPygT.s:581    .text:0000000000000238 .L0 
     /tmp/ccQmPygT.s:591    .text:0000000000000240 .L0 
     /tmp/ccQmPygT.s:592    .text:0000000000000240 .L0 
     /tmp/ccQmPygT.s:597    .text:0000000000000254 .L0 
     /tmp/ccQmPygT.s:598    .text:0000000000000254 .L0 
     /tmp/ccQmPygT.s:603    .text:0000000000000268 .L0 
     /tmp/ccQmPygT.s:604    .text:0000000000000268 .L0 
     /tmp/ccQmPygT.s:607    .text:0000000000000270 .L0 
     /tmp/ccQmPygT.s:608    .text:0000000000000270 .L0 
     /tmp/ccQmPygT.s:615    .text:000000000000027c .L0 
     /tmp/ccQmPygT.s:616    .text:000000000000027c .L0 
     /tmp/ccQmPygT.s:621    .text:0000000000000280 .L0 
     /tmp/ccQmPygT.s:623    .text:0000000000000284 .L0 
     /tmp/ccQmPygT.s:626    .text:0000000000000288 .L0 
     /tmp/ccQmPygT.s:627    .text:0000000000000288 .L0 
     /tmp/ccQmPygT.s:632    .text:000000000000028c .L0 
  src/../h/Riscv.hpp:191    .text:000000000000028c .L0 
     /tmp/ccQmPygT.s:642    .text:0000000000000290 .L0 
     /tmp/ccQmPygT.s:643    .text:0000000000000290 .L0 
     /tmp/ccQmPygT.s:648    .text:0000000000000294 .L0 
  src/../h/Riscv.hpp:122    .text:0000000000000294 .L0 
     /tmp/ccQmPygT.s:655    .text:0000000000000298 .L0 
     /tmp/ccQmPygT.s:661    .text:000000000000029c .L0 
     /tmp/ccQmPygT.s:662    .text:000000000000029c .L0 
     /tmp/ccQmPygT.s:664    .text:00000000000002a0 .L0 
     /tmp/ccQmPygT.s:665    .text:00000000000002a0 .L0 
     /tmp/ccQmPygT.s:675    .text:00000000000002ac .L0 
     /tmp/ccQmPygT.s:676    .text:00000000000002ac .L0 
     /tmp/ccQmPygT.s:680    .text:00000000000002bc .L0 
     /tmp/ccQmPygT.s:681    .text:00000000000002bc .L0 
     /tmp/ccQmPygT.s:686    .text:00000000000002c8 .L0 
     /tmp/ccQmPygT.s:687    .text:00000000000002c8 .L0 
     /tmp/ccQmPygT.s:698    .text:00000000000002d8 .L0 
     /tmp/ccQmPygT.s:699    .text:00000000000002d8 .L0 
     /tmp/ccQmPygT.s:700    .text:00000000000002d8 .L0 
     /tmp/ccQmPygT.s:704    .text:00000000000002e0 .L0 
     /tmp/ccQmPygT.s:705    .text:00000000000002e0 .L0 
     /tmp/ccQmPygT.s:706    .text:00000000000002e0 .L0 
     /tmp/ccQmPygT.s:711    .text:00000000000002e4 .L0 
  src/../h/Riscv.hpp:191    .text:00000000000002e4 .L0 
     /tmp/ccQmPygT.s:721    .text:00000000000002e8 .L0 
     /tmp/ccQmPygT.s:722    .text:00000000000002e8 .L0 
GAS LISTING /tmp/ccQmPygT.s 			page 38


     /tmp/ccQmPygT.s:727    .text:00000000000002ec .L0 
  src/../h/Riscv.hpp:122    .text:00000000000002ec .L0 
     /tmp/ccQmPygT.s:740    .text:00000000000002f0 .L0 
     /tmp/ccQmPygT.s:741    .text:00000000000002f4 .L0 
     /tmp/ccQmPygT.s:742    .text:00000000000002f4 .L0 
     /tmp/ccQmPygT.s:744    .text:00000000000002f8 .L0 
     /tmp/ccQmPygT.s:745    .text:00000000000002f8 .L0 
     /tmp/ccQmPygT.s:747    .text:00000000000002fc .L0 
     /tmp/ccQmPygT.s:749    .text:0000000000000300 .L0 
     /tmp/ccQmPygT.s:752    .text:0000000000000304 .L0 
     /tmp/ccQmPygT.s:756    .text:0000000000000304 .L0 
     /tmp/ccQmPygT.s:757    .text:0000000000000304 .L0 
     /tmp/ccQmPygT.s:758    .text:0000000000000304 .L0 
     /tmp/ccQmPygT.s:761    .text:000000000000030c .L0 
     /tmp/ccQmPygT.s:764    .text:0000000000000310 .L0 
     /tmp/ccQmPygT.s:765    .text:0000000000000310 .L0 
     /tmp/ccQmPygT.s:766    .text:0000000000000310 .L0 
     /tmp/ccQmPygT.s:769    .text:0000000000000318 .L0 
     /tmp/ccQmPygT.s:772    .text:000000000000031c .L0 
     /tmp/ccQmPygT.s:773    .text:000000000000031c .L0 
     /tmp/ccQmPygT.s:774    .text:000000000000031c .L0 
     /tmp/ccQmPygT.s:777    .text:0000000000000324 .L0 
     /tmp/ccQmPygT.s:780    .text:0000000000000328 .L0 
     /tmp/ccQmPygT.s:781    .text:0000000000000328 .L0 
     /tmp/ccQmPygT.s:782    .text:0000000000000328 .L0 
     /tmp/ccQmPygT.s:785    .text:0000000000000330 .L0 
     /tmp/ccQmPygT.s:788    .text:0000000000000334 .L0 
     /tmp/ccQmPygT.s:789    .text:0000000000000334 .L0 
     /tmp/ccQmPygT.s:790    .text:0000000000000334 .L0 
     /tmp/ccQmPygT.s:793    .text:000000000000033c .L0 
     /tmp/ccQmPygT.s:796    .text:0000000000000340 .L0 
     /tmp/ccQmPygT.s:797    .text:0000000000000340 .L0 
     /tmp/ccQmPygT.s:798    .text:0000000000000340 .L0 
     /tmp/ccQmPygT.s:801    .text:0000000000000348 .L0 
     /tmp/ccQmPygT.s:804    .text:000000000000034c .L0 
     /tmp/ccQmPygT.s:805    .text:000000000000034c .L0 
     /tmp/ccQmPygT.s:806    .text:000000000000034c .L0 
     /tmp/ccQmPygT.s:809    .text:0000000000000354 .L0 
     /tmp/ccQmPygT.s:812    .text:0000000000000358 .L0 
     /tmp/ccQmPygT.s:813    .text:0000000000000358 .L0 
     /tmp/ccQmPygT.s:814    .text:0000000000000358 .L0 
     /tmp/ccQmPygT.s:817    .text:0000000000000360 .L0 
     /tmp/ccQmPygT.s:820    .text:0000000000000364 .L0 
     /tmp/ccQmPygT.s:821    .text:0000000000000364 .L0 
     /tmp/ccQmPygT.s:822    .text:0000000000000364 .L0 
     /tmp/ccQmPygT.s:825    .text:000000000000036c .L0 
     /tmp/ccQmPygT.s:828    .text:0000000000000370 .L0 
     /tmp/ccQmPygT.s:829    .text:0000000000000370 .L0 
     /tmp/ccQmPygT.s:830    .text:0000000000000370 .L0 
     /tmp/ccQmPygT.s:833    .text:0000000000000378 .L0 
     /tmp/ccQmPygT.s:836    .text:000000000000037c .L0 
     /tmp/ccQmPygT.s:837    .text:000000000000037c .L0 
     /tmp/ccQmPygT.s:838    .text:000000000000037c .L0 
     /tmp/ccQmPygT.s:841    .text:0000000000000384 .L0 
     /tmp/ccQmPygT.s:844    .text:0000000000000388 .L0 
     /tmp/ccQmPygT.s:845    .text:0000000000000388 .L0 
     /tmp/ccQmPygT.s:846    .text:0000000000000388 .L0 
GAS LISTING /tmp/ccQmPygT.s 			page 39


     /tmp/ccQmPygT.s:849    .text:0000000000000390 .L0 
     /tmp/ccQmPygT.s:852    .text:0000000000000394 .L0 
     /tmp/ccQmPygT.s:853    .text:0000000000000394 .L0 
     /tmp/ccQmPygT.s:854    .text:0000000000000394 .L0 
     /tmp/ccQmPygT.s:857    .text:000000000000039c .L0 
     /tmp/ccQmPygT.s:860    .text:00000000000003a0 .L0 
     /tmp/ccQmPygT.s:871    .text:00000000000003a0 _ZN5Riscv10kernelMainEv
     /tmp/ccQmPygT.s:874    .text:00000000000003a0 .L0 
     /tmp/ccQmPygT.s:5702   .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/ccQmPygT.s:877    .text:00000000000003a0 .L0 
     /tmp/ccQmPygT.s:878    .text:00000000000003a4 .L0 
     /tmp/ccQmPygT.s:883    .text:00000000000003b4 .L0 
     /tmp/ccQmPygT.s:884    .text:00000000000003b4 .L0 
     /tmp/ccQmPygT.s:885    .text:00000000000003b4 .L0 
     /tmp/ccQmPygT.s:886    .text:00000000000003b4 .L0 
     /tmp/ccQmPygT.s:888    .text:00000000000003b8 .L0 
     /tmp/ccQmPygT.s:891    .text:00000000000003b8 .L0 
     /tmp/ccQmPygT.s:892    .text:00000000000003b8 .L0 
     /tmp/ccQmPygT.s:895    .text:00000000000003c0 .L0 
     /tmp/ccQmPygT.s:896    .text:00000000000003c0 .L0 
     /tmp/ccQmPygT.s:899    .text:00000000000003c8 .L0 
     /tmp/ccQmPygT.s:900    .text:00000000000003c8 .L0 
     /tmp/ccQmPygT.s:905    .text:00000000000003d8 .L0 
     /tmp/ccQmPygT.s:919    .text:0000000000000404 .L0 
     /tmp/ccQmPygT.s:920    .text:0000000000000404 .L0 
     /tmp/ccQmPygT.s:926    .text:0000000000000410 .L0 
     /tmp/ccQmPygT.s:927    .text:0000000000000410 .L0 
     /tmp/ccQmPygT.s:928    .text:0000000000000410 .L0 
     /tmp/ccQmPygT.s:932    .text:000000000000041c .L0 
     /tmp/ccQmPygT.s:934    .text:0000000000000420 .L0 
     /tmp/ccQmPygT.s:935    .text:0000000000000420 .L0 
     /tmp/ccQmPygT.s:938    .text:0000000000000428 .L0 
     /tmp/ccQmPygT.s:941    .text:000000000000042c .L0 
     /tmp/ccQmPygT.s:942    .text:000000000000042c .L0 
     /tmp/ccQmPygT.s:945    .text:0000000000000434 .L0 
     /tmp/ccQmPygT.s:946    .text:0000000000000434 .L0 
     /tmp/ccQmPygT.s:949    .text:000000000000043c .L0 
     /tmp/ccQmPygT.s:950    .text:000000000000043c .L0 
     /tmp/ccQmPygT.s:955    .text:000000000000044c .L0 
     /tmp/ccQmPygT.s:956    .text:0000000000000450 .L0 
     /tmp/ccQmPygT.s:957    .text:0000000000000450 .L0 
     /tmp/ccQmPygT.s:959    .text:0000000000000454 .L0 
     /tmp/ccQmPygT.s:960    .text:0000000000000454 .L0 
     /tmp/ccQmPygT.s:962    .text:0000000000000458 .L0 
     /tmp/ccQmPygT.s:965    .text:000000000000045c .L0 
     /tmp/ccQmPygT.s:967    .text:0000000000000460 .L0 
     /tmp/ccQmPygT.s:970    .text:0000000000000464 .L0 
     /tmp/ccQmPygT.s:973    .text:0000000000000468 .L0 
     /tmp/ccQmPygT.s:981    .text:0000000000000480 .L0 
     /tmp/ccQmPygT.s:1011   .text:0000000000000480 _ZN5Riscv14myTestsWrapperEPv
     /tmp/ccQmPygT.s:1014   .text:0000000000000480 .L0 
     /tmp/ccQmPygT.s:1016   .text:0000000000000480 .L0 
     /tmp/ccQmPygT.s:1017   .text:0000000000000484 .L0 
     /tmp/ccQmPygT.s:1020   .text:000000000000048c .L0 
     /tmp/ccQmPygT.s:1021   .text:000000000000048c .L0 
     /tmp/ccQmPygT.s:1023   .text:0000000000000490 .L0 
     /tmp/ccQmPygT.s:1025   .text:0000000000000490 .L0 
GAS LISTING /tmp/ccQmPygT.s 			page 40


     /tmp/ccQmPygT.s:1026   .text:0000000000000490 .L0 
     /tmp/ccQmPygT.s:1029   .text:0000000000000498 .L0 
     /tmp/ccQmPygT.s:1030   .text:000000000000049c .L0 
     /tmp/ccQmPygT.s:1032   .text:00000000000004a0 .L0 
     /tmp/ccQmPygT.s:1033   .text:00000000000004a0 .L0 
     /tmp/ccQmPygT.s:1035   .text:00000000000004a4 .L0 
     /tmp/ccQmPygT.s:1037   .text:00000000000004a8 .L0 
     /tmp/ccQmPygT.s:1043   .text:00000000000004a8 _ZN5Riscv22disableTimerInterruptsEv
     /tmp/ccQmPygT.s:1046   .text:00000000000004a8 .L0 
     /tmp/ccQmPygT.s:1047   .text:00000000000004a8 .L0 
     /tmp/ccQmPygT.s:1048   .text:00000000000004ac .L0 
     /tmp/ccQmPygT.s:1050   .text:00000000000004b0 .L0 
     /tmp/ccQmPygT.s:1052   .text:00000000000004b4 .L0 
     /tmp/ccQmPygT.s:1055   .text:00000000000004b4 .L0 
     /tmp/ccQmPygT.s:1056   .text:00000000000004b4 .L0 
     /tmp/ccQmPygT.s:1057   .text:00000000000004b4 .L0 
     /tmp/ccQmPygT.s:1064   .text:00000000000004bc .L0 
     /tmp/ccQmPygT.s:1065   .text:00000000000004c0 .L0 
     /tmp/ccQmPygT.s:1066   .text:00000000000004c0 .L0 
     /tmp/ccQmPygT.s:1068   .text:00000000000004c4 .L0 
     /tmp/ccQmPygT.s:1070   .text:00000000000004c8 .L0 
     /tmp/ccQmPygT.s:1076   .text:00000000000004c8 _ZN5Riscv9idleRiscvEPv
     /tmp/ccQmPygT.s:1079   .text:00000000000004c8 .L0 
     /tmp/ccQmPygT.s:1081   .text:00000000000004c8 .L0 
     /tmp/ccQmPygT.s:1082   .text:00000000000004cc .L0 
     /tmp/ccQmPygT.s:1084   .text:00000000000004d0 .L0 
     /tmp/ccQmPygT.s:1086   .text:00000000000004d4 .L0 
     /tmp/ccQmPygT.s:1089   .text:00000000000004d4 .L0 
     /tmp/ccQmPygT.s:1090   .text:00000000000004d4 .L0 
     /tmp/ccQmPygT.s:1091   .text:00000000000004d8 .L0 
     /tmp/ccQmPygT.s:1097   .text:00000000000004d8 _ZN5Riscv13w_a0_sscratchEv
     /tmp/ccQmPygT.s:1100   .text:00000000000004d8 .L0 
     /tmp/ccQmPygT.s:1101   .text:00000000000004d8 .L0 
     /tmp/ccQmPygT.s:1102   .text:00000000000004dc .L0 
     /tmp/ccQmPygT.s:1104   .text:00000000000004e0 .L0 
     /tmp/ccQmPygT.s:1106   .text:00000000000004e4 .L0 
     /tmp/ccQmPygT.s:1108   .text:00000000000004e4 .L0 
     /tmp/ccQmPygT.s:1109   .text:00000000000004e4 .L0 
       src/Riscv.cpp:229    .text:00000000000004e4 .L0 
     /tmp/ccQmPygT.s:1116   .text:00000000000004e8 .L0 
     /tmp/ccQmPygT.s:1118   .text:00000000000004e8 .L0 
       src/Riscv.cpp:230    .text:00000000000004f8 .L0 
     /tmp/ccQmPygT.s:1127   .text:00000000000004fc .L0 
       src/Riscv.cpp:232    .text:00000000000004fc .L0 
     /tmp/ccQmPygT.s:1132   .text:0000000000000500 .L0 
       src/Riscv.cpp:233    .text:0000000000000500 .L0 
     /tmp/ccQmPygT.s:1138   .text:0000000000000504 .L0 
     /tmp/ccQmPygT.s:1139   .text:0000000000000508 .L0 
     /tmp/ccQmPygT.s:1140   .text:0000000000000508 .L0 
     /tmp/ccQmPygT.s:1142   .text:000000000000050c .L0 
     /tmp/ccQmPygT.s:1144   .text:0000000000000510 .L0 
     /tmp/ccQmPygT.s:1153   .bss:0000000000000000 _ZN5Riscv9totalTimeE
     /tmp/ccQmPygT.s:1150   .bss:0000000000000000 .LANCHOR0
     /tmp/ccQmPygT.s:1166   .text:0000000000000510 .L0 
     /tmp/ccQmPygT.s:55     .text:0000000000000038 .L0 
     /tmp/ccQmPygT.s:256    .text:0000000000000104 .L0 
     /tmp/ccQmPygT.s:260    .text:0000000000000110 .L0 
GAS LISTING /tmp/ccQmPygT.s 			page 41


     /tmp/ccQmPygT.s:369    .rodata:0000000000000000 .L23
     /tmp/ccQmPygT.s:361    .text:0000000000000190 .L0 
     /tmp/ccQmPygT.s:453    .text:00000000000001b8 .L0 
     /tmp/ccQmPygT.s:486    .text:00000000000001d8 .L0 
     /tmp/ccQmPygT.s:511    .text:00000000000001f4 .L0 
     /tmp/ccQmPygT.s:592    .text:0000000000000240 .L0 
     /tmp/ccQmPygT.s:598    .text:0000000000000254 .L0 
     /tmp/ccQmPygT.s:608    .text:0000000000000270 .L0 
     /tmp/ccQmPygT.s:677    .text:00000000000002b0 .L0 
     /tmp/ccQmPygT.s:913    .text:00000000000003f4 .L0 
     /tmp/ccQmPygT.s:865    .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccQmPygT.s:950    .text:000000000000043c .L0 
     /tmp/ccQmPygT.s:1118   .text:00000000000004e8 .L0 
     /tmp/ccQmPygT.s:529    .text:0000000000000218 .L14
     /tmp/ccQmPygT.s:439    .text:00000000000001a8 .L15
     /tmp/ccQmPygT.s:734    .text:00000000000002f0 .L13
     /tmp/ccQmPygT.s:703    .text:00000000000002e0 .L21
     /tmp/ccQmPygT.s:517    .text:0000000000000204 .L20
     /tmp/ccQmPygT.s:669    .text:00000000000002ac .L39
     /tmp/ccQmPygT.s:657    .text:000000000000029c .L40
     /tmp/ccQmPygT.s:624    .text:0000000000000288 .L19
     /tmp/ccQmPygT.s:939    .text:000000000000042c .L42
     /tmp/ccQmPygT.s:924    .text:0000000000000410 .L43
     /tmp/ccQmPygT.s:1087   .text:00000000000004d4 .L53
     /tmp/ccQmPygT.s:692    .text:00000000000002d8 .L36
     /tmp/ccQmPygT.s:751    .text:0000000000000304 .L35
     /tmp/ccQmPygT.s:770    .text:000000000000031c .L34
     /tmp/ccQmPygT.s:794    .text:0000000000000340 .L33
     /tmp/ccQmPygT.s:786    .text:0000000000000334 .L32
     /tmp/ccQmPygT.s:762    .text:0000000000000310 .L31
     /tmp/ccQmPygT.s:778    .text:0000000000000328 .L30
     /tmp/ccQmPygT.s:810    .text:0000000000000358 .L29
     /tmp/ccQmPygT.s:834    .text:000000000000037c .L28
     /tmp/ccQmPygT.s:818    .text:0000000000000364 .L27
     /tmp/ccQmPygT.s:826    .text:0000000000000370 .L26
     /tmp/ccQmPygT.s:802    .text:000000000000034c .L25
     /tmp/ccQmPygT.s:842    .text:0000000000000388 .L24
     /tmp/ccQmPygT.s:850    .text:0000000000000394 .L22
     /tmp/ccQmPygT.s:890    .text:00000000000003b8 .LEHB0
     /tmp/ccQmPygT.s:872    .text:00000000000003a0 .LFB32
     /tmp/ccQmPygT.s:908    .text:00000000000003e4 .LEHE0
     /tmp/ccQmPygT.s:914    .text:00000000000003fc .LEHB1
     /tmp/ccQmPygT.s:917    .text:0000000000000404 .LEHE1
     /tmp/ccQmPygT.s:969    .text:0000000000000464 .L45
     /tmp/ccQmPygT.s:921    .text:0000000000000408 .LEHB2
     /tmp/ccQmPygT.s:953    .text:000000000000044c .LEHE2
     /tmp/ccQmPygT.s:977    .text:0000000000000478 .LEHB3
     /tmp/ccQmPygT.s:980    .text:0000000000000480 .LEHE3
     /tmp/ccQmPygT.s:3722   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccQmPygT.s:5136   .debug_str:0000000000000292 .LASF303
     /tmp/ccQmPygT.s:5172   .debug_str:0000000000000468 .LASF304
     /tmp/ccQmPygT.s:5586   .debug_str:00000000000011e8 .LASF305
     /tmp/ccQmPygT.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccQmPygT.s:1156   .text:0000000000000510 .Letext0
     /tmp/ccQmPygT.s:5068   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccQmPygT.s:5286   .debug_str:0000000000000838 .LASF0
     /tmp/ccQmPygT.s:5328   .debug_str:000000000000098e .LASF1
GAS LISTING /tmp/ccQmPygT.s 			page 42


     /tmp/ccQmPygT.s:5478   .debug_str:0000000000000eb4 .LASF2
     /tmp/ccQmPygT.s:5496   .debug_str:0000000000000f40 .LASF4
     /tmp/ccQmPygT.s:5306   .debug_str:00000000000008e0 .LASF3
     /tmp/ccQmPygT.s:5094   .debug_str:00000000000000f1 .LASF5
     /tmp/ccQmPygT.s:5440   .debug_str:0000000000000d8f .LASF6
     /tmp/ccQmPygT.s:5430   .debug_str:0000000000000d46 .LASF7
     /tmp/ccQmPygT.s:5318   .debug_str:0000000000000955 .LASF8
     /tmp/ccQmPygT.s:5248   .debug_str:00000000000006e2 .LASF9
     /tmp/ccQmPygT.s:5260   .debug_str:0000000000000754 .LASF10
     /tmp/ccQmPygT.s:5156   .debug_str:00000000000003fa .LASF11
     /tmp/ccQmPygT.s:5236   .debug_str:000000000000069e .LASF12
     /tmp/ccQmPygT.s:5174   .debug_str:0000000000000476 .LASF13
     /tmp/ccQmPygT.s:5154   .debug_str:00000000000003ea .LASF14
     /tmp/ccQmPygT.s:5546   .debug_str:00000000000010e4 .LASF15
     /tmp/ccQmPygT.s:5216   .debug_str:00000000000005cd .LASF16
     /tmp/ccQmPygT.s:5530   .debug_str:000000000000102f .LASF17
     /tmp/ccQmPygT.s:5630   .debug_str:000000000000134e .LASF103
     /tmp/ccQmPygT.s:5456   .debug_str:0000000000000e17 .LASF21
     /tmp/ccQmPygT.s:5338   .debug_str:00000000000009d1 .LASF18
     /tmp/ccQmPygT.s:5224   .debug_str:000000000000061a .LASF19
     /tmp/ccQmPygT.s:5650   .debug_str:00000000000013fc .LASF20
     /tmp/ccQmPygT.s:5616   .debug_str:00000000000012d0 .LASF22
     /tmp/ccQmPygT.s:5230   .debug_str:000000000000065a .LASF23
     /tmp/ccQmPygT.s:5572   .debug_str:000000000000117d .LASF24
     /tmp/ccQmPygT.s:5190   .debug_str:0000000000000503 .LASF25
     /tmp/ccQmPygT.s:5280   .debug_str:000000000000080f .LASF26
     /tmp/ccQmPygT.s:5534   .debug_str:0000000000001054 .LASF28
     /tmp/ccQmPygT.s:5386   .debug_str:0000000000000bb0 .LASF27
     /tmp/ccQmPygT.s:5366   .debug_str:0000000000000aef .LASF29
     /tmp/ccQmPygT.s:5212   .debug_str:00000000000005b0 .LASF30
     /tmp/ccQmPygT.s:5082   .debug_str:000000000000005b .LASF31
     /tmp/ccQmPygT.s:5368   .debug_str:0000000000000b07 .LASF38
     /tmp/ccQmPygT.s:5622   .debug_str:00000000000012fa .LASF40
     /tmp/ccQmPygT.s:5150   .debug_str:00000000000003c6 .LASF32
     /tmp/ccQmPygT.s:5344   .debug_str:0000000000000a0e .LASF33
     /tmp/ccQmPygT.s:5206   .debug_str:000000000000055f .LASF34
     /tmp/ccQmPygT.s:5162   .debug_str:0000000000000417 .LASF35
     /tmp/ccQmPygT.s:5298   .debug_str:000000000000089e .LASF36
     /tmp/ccQmPygT.s:5180   .debug_str:00000000000004bc .LASF37
     /tmp/ccQmPygT.s:5126   .debug_str:000000000000024f .LASF39
     /tmp/ccQmPygT.s:5250   .debug_str:00000000000006f2 .LASF41
     /tmp/ccQmPygT.s:5506   .debug_str:0000000000000f71 .LASF42
     /tmp/ccQmPygT.s:5222   .debug_str:00000000000005ff .LASF43
     /tmp/ccQmPygT.s:5292   .debug_str:0000000000000877 .LASF44
     /tmp/ccQmPygT.s:5642   .debug_str:00000000000013b4 .LASF45
     /tmp/ccQmPygT.s:5610   .debug_str:00000000000012af .LASF48
     /tmp/ccQmPygT.s:5598   .debug_str:0000000000001254 .LASF50
     /tmp/ccQmPygT.s:5474   .debug_str:0000000000000ea0 .LASF46
     /tmp/ccQmPygT.s:5410   .debug_str:0000000000000c8a .LASF47
     /tmp/ccQmPygT.s:5446   .debug_str:0000000000000da9 .LASF49
     /tmp/ccQmPygT.s:5452   .debug_str:0000000000000df0 .LASF51
     /tmp/ccQmPygT.s:5400   .debug_str:0000000000000c1b .LASF52
     /tmp/ccQmPygT.s:5320   .debug_str:0000000000000968 .LASF53
     /tmp/ccQmPygT.s:5644   .debug_str:00000000000013ce .LASF54
     /tmp/ccQmPygT.s:5580   .debug_str:00000000000011a7 .LASF55
     /tmp/ccQmPygT.s:5394   .debug_str:0000000000000beb .LASF56
     /tmp/ccQmPygT.s:5408   .debug_str:0000000000000c76 .LASF57
GAS LISTING /tmp/ccQmPygT.s 			page 43


     /tmp/ccQmPygT.s:5380   .debug_str:0000000000000b71 .LASF58
     /tmp/ccQmPygT.s:5454   .debug_str:0000000000000e03 .LASF59
     /tmp/ccQmPygT.s:5688   .debug_str:0000000000001525 .LASF60
     /tmp/ccQmPygT.s:5296   .debug_str:000000000000088a .LASF61
     /tmp/ccQmPygT.s:5542   .debug_str:00000000000010bb .LASF62
     /tmp/ccQmPygT.s:5500   .debug_str:0000000000000f4f .LASF63
     /tmp/ccQmPygT.s:5502   .debug_str:0000000000000f62 .LASF64
     /tmp/ccQmPygT.s:5210   .debug_str:000000000000059d .LASF65
     /tmp/ccQmPygT.s:5204   .debug_str:0000000000000559 .LASF66
     /tmp/ccQmPygT.s:5100   .debug_str:0000000000000124 .LASF67
     /tmp/ccQmPygT.s:5294   .debug_str:0000000000000884 .LASF68
     /tmp/ccQmPygT.s:5194   .debug_str:0000000000000522 .LASF69
     /tmp/ccQmPygT.s:5142   .debug_str:0000000000000372 .LASF70
     /tmp/ccQmPygT.s:5508   .debug_str:0000000000000f7f .LASF71
     /tmp/ccQmPygT.s:5096   .debug_str:00000000000000f8 .LASF72
     /tmp/ccQmPygT.s:5484   .debug_str:0000000000000ed1 .LASF73
     /tmp/ccQmPygT.s:5476   .debug_str:0000000000000ea9 .LASF74
     /tmp/ccQmPygT.s:5678   .debug_str:00000000000014cc .LASF75
     /tmp/ccQmPygT.s:5482   .debug_str:0000000000000eca .LASF76
     /tmp/ccQmPygT.s:5152   .debug_str:00000000000003d7 .LASF77
     /tmp/ccQmPygT.s:5632   .debug_str:0000000000001354 .LASF78
     /tmp/ccQmPygT.s:5656   .debug_str:000000000000141a .LASF79
     /tmp/ccQmPygT.s:5624   .debug_str:0000000000001318 .LASF80
     /tmp/ccQmPygT.s:5370   .debug_str:0000000000000b17 .LASF81
     /tmp/ccQmPygT.s:5464   .debug_str:0000000000000e63 .LASF82
     /tmp/ccQmPygT.s:5270   .debug_str:00000000000007d1 .LASF83
     /tmp/ccQmPygT.s:5278   .debug_str:0000000000000809 .LASF84
     /tmp/ccQmPygT.s:5184   .debug_str:00000000000004e0 .LASF85
     /tmp/ccQmPygT.s:5274   .debug_str:00000000000007e9 .LASF86
     /tmp/ccQmPygT.s:5282   .debug_str:000000000000081a .LASF87
     /tmp/ccQmPygT.s:5604   .debug_str:000000000000127c .LASF88
     /tmp/ccQmPygT.s:5258   .debug_str:0000000000000738 .LASF89
     /tmp/ccQmPygT.s:5434   .debug_str:0000000000000d61 .LASF90
     /tmp/ccQmPygT.s:5314   .debug_str:0000000000000927 .LASF91
     /tmp/ccQmPygT.s:5122   .debug_str:000000000000022d .LASF92
     /tmp/ccQmPygT.s:5360   .debug_str:0000000000000ab1 .LASF93
     /tmp/ccQmPygT.s:5466   .debug_str:0000000000000e69 .LASF94
     /tmp/ccQmPygT.s:5088   .debug_str:00000000000000a7 .LASF95
     /tmp/ccQmPygT.s:5128   .debug_str:0000000000000259 .LASF96
     /tmp/ccQmPygT.s:5602   .debug_str:0000000000001270 .LASF97
     /tmp/ccQmPygT.s:5130   .debug_str:0000000000000268 .LASF98
     /tmp/ccQmPygT.s:5384   .debug_str:0000000000000b9e .LASF99
     /tmp/ccQmPygT.s:5262   .debug_str:0000000000000762 .LASF100
     /tmp/ccQmPygT.s:5304   .debug_str:00000000000008cd .LASF101
     /tmp/ccQmPygT.s:5148   .debug_str:00000000000003b2 .LASF102
     /tmp/ccQmPygT.s:5566   .debug_str:0000000000001159 .LASF138
     /tmp/ccQmPygT.s:5422   .debug_str:0000000000000cfa .LASF104
     /tmp/ccQmPygT.s:5518   .debug_str:0000000000000fd1 .LASF140
     /tmp/ccQmPygT.s:5326   .debug_str:0000000000000989 .LASF105
     /tmp/ccQmPygT.s:5158   .debug_str:0000000000000409 .LASF106
     /tmp/ccQmPygT.s:5244   .debug_str:00000000000006cc .LASF107
     /tmp/ccQmPygT.s:5330   .debug_str:00000000000009a1 .LASF108
     /tmp/ccQmPygT.s:5336   .debug_str:00000000000009be .LASF109
     /tmp/ccQmPygT.s:5242   .debug_str:00000000000006c3 .LASF110
     /tmp/ccQmPygT.s:5692   .debug_str:000000000000154b .LASF111
     /tmp/ccQmPygT.s:5374   .debug_str:0000000000000b3a .LASF112
     /tmp/ccQmPygT.s:5098   .debug_str:0000000000000103 .LASF114
GAS LISTING /tmp/ccQmPygT.s 			page 44


     /tmp/ccQmPygT.s:5554   .debug_str:000000000000111a .LASF113
     /tmp/ccQmPygT.s:5376   .debug_str:0000000000000b44 .LASF115
     /tmp/ccQmPygT.s:5620   .debug_str:00000000000012ef .LASF116
     /tmp/ccQmPygT.s:5584   .debug_str:00000000000011c5 .LASF117
     /tmp/ccQmPygT.s:5548   .debug_str:00000000000010f0 .LASF118
     /tmp/ccQmPygT.s:5090   .debug_str:00000000000000af .LASF119
     /tmp/ccQmPygT.s:5636   .debug_str:0000000000001363 .LASF120
     /tmp/ccQmPygT.s:5086   .debug_str:0000000000000079 .LASF121
     /tmp/ccQmPygT.s:5560   .debug_str:0000000000001133 .LASF122
     /tmp/ccQmPygT.s:5268   .debug_str:00000000000007a2 .LASF123
     /tmp/ccQmPygT.s:5076   .debug_str:000000000000002b .LASF124
     /tmp/ccQmPygT.s:5412   .debug_str:0000000000000c9f .LASF125
     /tmp/ccQmPygT.s:5218   .debug_str:00000000000005e3 .LASF126
     /tmp/ccQmPygT.s:5640   .debug_str:000000000000138c .LASF127
     /tmp/ccQmPygT.s:5532   .debug_str:0000000000001045 .LASF128
     /tmp/ccQmPygT.s:5208   .debug_str:0000000000000576 .LASF129
     /tmp/ccQmPygT.s:5564   .debug_str:0000000000001153 .LASF130
     /tmp/ccQmPygT.s:5146   .debug_str:00000000000003ac .LASF131
     /tmp/ccQmPygT.s:5516   .debug_str:0000000000000fc9 .LASF132
     /tmp/ccQmPygT.s:5164   .debug_str:000000000000043b .LASF133
     /tmp/ccQmPygT.s:5132   .debug_str:000000000000027b .LASF134
     /tmp/ccQmPygT.s:5432   .debug_str:0000000000000d59 .LASF135
     /tmp/ccQmPygT.s:5324   .debug_str:0000000000000980 .LASF136
     /tmp/ccQmPygT.s:5498   .debug_str:0000000000000f47 .LASF201
     /tmp/ccQmPygT.s:5272   .debug_str:00000000000007e3 .LASF137
     /tmp/ccQmPygT.s:5592   .debug_str:0000000000001232 .LASF139
     /tmp/ccQmPygT.s:5390   .debug_str:0000000000000bca .LASF306
     /tmp/ccQmPygT.s:5416   .debug_str:0000000000000cd9 .LASF141
     /tmp/ccQmPygT.s:5634   .debug_str:000000000000135e .LASF142
     /tmp/ccQmPygT.s:5674   .debug_str:0000000000001497 .LASF143
     /tmp/ccQmPygT.s:5668   .debug_str:000000000000146e .LASF144
     /tmp/ccQmPygT.s:5578   .debug_str:0000000000001197 .LASF145
     /tmp/ccQmPygT.s:5198   .debug_str:0000000000000545 .LASF146
     /tmp/ccQmPygT.s:5106   .debug_str:000000000000017d .LASF147
     /tmp/ccQmPygT.s:5334   .debug_str:00000000000009b8 .LASF148
     /tmp/ccQmPygT.s:5418   .debug_str:0000000000000cde .LASF149
     /tmp/ccQmPygT.s:5570   .debug_str:0000000000001175 .LASF150
     /tmp/ccQmPygT.s:5196   .debug_str:0000000000000534 .LASF151
     /tmp/ccQmPygT.s:5364   .debug_str:0000000000000ae2 .LASF156
     /tmp/ccQmPygT.s:5346   .debug_str:0000000000000a2c .LASF158
     /tmp/ccQmPygT.s:5682   .debug_str:00000000000014f9 .LASF152
     /tmp/ccQmPygT.s:5240   .debug_str:00000000000006b7 .LASF153
     /tmp/ccQmPygT.s:5288   .debug_str:0000000000000845 .LASF154
     /tmp/ccQmPygT.s:5300   .debug_str:00000000000008b0 .LASF155
     /tmp/ccQmPygT.s:5510   .debug_str:0000000000000f9a .LASF157
     /tmp/ccQmPygT.s:5192   .debug_str:000000000000050f .LASF159
     /tmp/ccQmPygT.s:5490   .debug_str:0000000000000f08 .LASF160
     /tmp/ccQmPygT.s:5538   .debug_str:000000000000108c .LASF161
     /tmp/ccQmPygT.s:5388   .debug_str:0000000000000bbb .LASF162
     /tmp/ccQmPygT.s:5078   .debug_str:000000000000003c .LASF163
     /tmp/ccQmPygT.s:5654   .debug_str:000000000000140b .LASF164
     /tmp/ccQmPygT.s:5426   .debug_str:0000000000000d18 .LASF165
     /tmp/ccQmPygT.s:5528   .debug_str:0000000000001021 .LASF166
     /tmp/ccQmPygT.s:5444   .debug_str:0000000000000d9d .LASF167
     /tmp/ccQmPygT.s:5072   .debug_str:000000000000000f .LASF168
     /tmp/ccQmPygT.s:5406   .debug_str:0000000000000c66 .LASF169
     /tmp/ccQmPygT.s:5470   .debug_str:0000000000000e7a .LASF170
GAS LISTING /tmp/ccQmPygT.s 			page 45


     /tmp/ccQmPygT.s:5660   .debug_str:000000000000143c .LASF171
     /tmp/ccQmPygT.s:5308   .debug_str:00000000000008f2 .LASF172
     /tmp/ccQmPygT.s:5522   .debug_str:0000000000000ff4 .LASF173
     /tmp/ccQmPygT.s:5672   .debug_str:0000000000001481 .LASF174
     /tmp/ccQmPygT.s:5556   .debug_str:0000000000001123 .LASF175
     /tmp/ccQmPygT.s:5524   .debug_str:0000000000000fff .LASF176
     /tmp/ccQmPygT.s:5504   .debug_str:0000000000000f69 .LASF177
     /tmp/ccQmPygT.s:5428   .debug_str:0000000000000d32 .LASF178
     /tmp/ccQmPygT.s:5398   .debug_str:0000000000000bfc .LASF179
     /tmp/ccQmPygT.s:5178   .debug_str:00000000000004aa .LASF180
     /tmp/ccQmPygT.s:5450   .debug_str:0000000000000dd3 .LASF181
     /tmp/ccQmPygT.s:5694   .debug_str:0000000000001555 .LASF182
     /tmp/ccQmPygT.s:5402   .debug_str:0000000000000c22 .LASF183
     /tmp/ccQmPygT.s:5488   .debug_str:0000000000000ef5 .LASF184
     /tmp/ccQmPygT.s:5512   .debug_str:0000000000000fa3 .LASF185
     /tmp/ccQmPygT.s:5614   .debug_str:00000000000012bd .LASF186
     /tmp/ccQmPygT.s:5690   .debug_str:000000000000152d .LASF187
     /tmp/ccQmPygT.s:5680   .debug_str:00000000000014e4 .LASF188
     /tmp/ccQmPygT.s:5536   .debug_str:000000000000106c .LASF189
     /tmp/ccQmPygT.s:5494   .debug_str:0000000000000f37 .LASF190
     /tmp/ccQmPygT.s:5582   .debug_str:00000000000011bb .LASF191
     /tmp/ccQmPygT.s:5420   .debug_str:0000000000000cee .LASF192
     /tmp/ccQmPygT.s:5666   .debug_str:0000000000001460 .LASF193
     /tmp/ccQmPygT.s:5116   .debug_str:00000000000001d8 .LASF195
     /tmp/ccQmPygT.s:5120   .debug_str:0000000000000218 .LASF194
     /tmp/ccQmPygT.s:5144   .debug_str:0000000000000380 .LASF196
     /tmp/ccQmPygT.s:5684   .debug_str:0000000000001506 .LASF307
     /tmp/ccQmPygT.s:5140   .debug_str:0000000000000361 .LASF308
     /tmp/ccQmPygT.s:5080   .debug_str:0000000000000056 .LASF197
     /tmp/ccQmPygT.s:5612   .debug_str:00000000000012b8 .LASF198
     /tmp/ccQmPygT.s:5352   .debug_str:0000000000000a69 .LASF199
     /tmp/ccQmPygT.s:5202   .debug_str:0000000000000553 .LASF200
     /tmp/ccQmPygT.s:5596   .debug_str:000000000000124c .LASF202
     /tmp/ccQmPygT.s:5358   .debug_str:0000000000000aac .LASF203
     /tmp/ccQmPygT.s:5460   .debug_str:0000000000000e36 .LASF204
     /tmp/ccQmPygT.s:5256   .debug_str:0000000000000724 .LASF205
     /tmp/ccQmPygT.s:5112   .debug_str:00000000000001c7 .LASF206
     /tmp/ccQmPygT.s:5458   .debug_str:0000000000000e22 .LASF207
     /tmp/ccQmPygT.s:5200   .debug_str:000000000000054e .LASF208
     /tmp/ccQmPygT.s:5520   .debug_str:0000000000000fdd .LASF209
     /tmp/ccQmPygT.s:5550   .debug_str:000000000000110b .LASF210
     /tmp/ccQmPygT.s:5472   .debug_str:0000000000000e87 .LASF211
     /tmp/ccQmPygT.s:5074   .debug_str:000000000000001f .LASF212
     /tmp/ccQmPygT.s:5486   .debug_str:0000000000000ee9 .LASF213
     /tmp/ccQmPygT.s:5362   .debug_str:0000000000000ace .LASF214
     /tmp/ccQmPygT.s:5276   .debug_str:00000000000007f4 .LASF215
     /tmp/ccQmPygT.s:5160   .debug_str:000000000000040e .LASF216
     /tmp/ccQmPygT.s:5168   .debug_str:0000000000000453 .LASF217
     /tmp/ccQmPygT.s:5392   .debug_str:0000000000000be2 .LASF218
     /tmp/ccQmPygT.s:5562   .debug_str:0000000000001148 .LASF219
     /tmp/ccQmPygT.s:5070   .debug_str:0000000000000000 .LASF220
     /tmp/ccQmPygT.s:5266   .debug_str:0000000000000780 .LASF221
     /tmp/ccQmPygT.s:5594   .debug_str:000000000000123d .LASF222
     /tmp/ccQmPygT.s:5544   .debug_str:00000000000010c2 .LASF223
     /tmp/ccQmPygT.s:5354   .debug_str:0000000000000a71 .LASF224
     /tmp/ccQmPygT.s:5176   .debug_str:0000000000000486 .LASF225
     /tmp/ccQmPygT.s:5414   .debug_str:0000000000000cc9 .LASF226
GAS LISTING /tmp/ccQmPygT.s 			page 46


     /tmp/ccQmPygT.s:5448   .debug_str:0000000000000db0 .LASF227
     /tmp/ccQmPygT.s:5332   .debug_str:00000000000009af .LASF228
     /tmp/ccQmPygT.s:5284   .debug_str:0000000000000832 .LASF229
     /tmp/ccQmPygT.s:5686   .debug_str:000000000000150d .LASF230
     /tmp/ccQmPygT.s:5084   .debug_str:0000000000000071 .LASF231
     /tmp/ccQmPygT.s:5350   .debug_str:0000000000000a4f .LASF232
     /tmp/ccQmPygT.s:5302   .debug_str:00000000000008bd .LASF233
     /tmp/ccQmPygT.s:5404   .debug_str:0000000000000c43 .LASF234
     /tmp/ccQmPygT.s:5638   .debug_str:0000000000001379 .LASF235
     /tmp/ccQmPygT.s:5492   .debug_str:0000000000000f11 .LASF236
     /tmp/ccQmPygT.s:5670   .debug_str:0000000000001474 .LASF237
     /tmp/ccQmPygT.s:5104   .debug_str:0000000000000159 .LASF238
     /tmp/ccQmPygT.s:5558   .debug_str:000000000000112e .LASF239
     /tmp/ccQmPygT.s:5648   .debug_str:00000000000013ef .LASF240
     /tmp/ccQmPygT.s:5438   .debug_str:0000000000000d7f .LASF241
     /tmp/ccQmPygT.s:5590   .debug_str:0000000000001220 .LASF242
     /tmp/ccQmPygT.s:5232   .debug_str:0000000000000666 .LASF243
     /tmp/ccQmPygT.s:5134   .debug_str:0000000000000284 .LASF244
     /tmp/ccQmPygT.s:5102   .debug_str:0000000000000136 .LASF245
     /tmp/ccQmPygT.s:5396   .debug_str:0000000000000bf3 .LASF246
     /tmp/ccQmPygT.s:5182   .debug_str:00000000000004db .LASF247
     /tmp/ccQmPygT.s:5322   .debug_str:000000000000097b .LASF248
     /tmp/ccQmPygT.s:5238   .debug_str:00000000000006ad .LASF249
     /tmp/ccQmPygT.s:5662   .debug_str:0000000000001447 .LASF250
     /tmp/ccQmPygT.s:5170   .debug_str:000000000000045d .LASF251
     /tmp/ccQmPygT.s:5264   .debug_str:0000000000000775 .LASF252
     /tmp/ccQmPygT.s:5424   .debug_str:0000000000000d0a .LASF253
     /tmp/ccQmPygT.s:5252   .debug_str:0000000000000709 .LASF254
     /tmp/ccQmPygT.s:5226   .debug_str:0000000000000623 .LASF255
     /tmp/ccQmPygT.s:5552   .debug_str:0000000000001112 .LASF256
     /tmp/ccQmPygT.s:5382   .debug_str:0000000000000b79 .LASF257
     /tmp/ccQmPygT.s:5576   .debug_str:000000000000118f .LASF258
     /tmp/ccQmPygT.s:5626   .debug_str:0000000000001322 .LASF259
     /tmp/ccQmPygT.s:5378   .debug_str:0000000000000b65 .LASF260
     /tmp/ccQmPygT.s:5608   .debug_str:000000000000129d .LASF261
     /tmp/ccQmPygT.s:5290   .debug_str:0000000000000855 .LASF262
     /tmp/ccQmPygT.s:5606   .debug_str:000000000000128b .LASF263
     /tmp/ccQmPygT.s:5462   .debug_str:0000000000000e41 .LASF264
     /tmp/ccQmPygT.s:5124   .debug_str:000000000000023c .LASF265
     /tmp/ccQmPygT.s:5138   .debug_str:000000000000033e .LASF266
     /tmp/ccQmPygT.s:5214   .debug_str:00000000000005ba .LASF267
     /tmp/ccQmPygT.s:5228   .debug_str:0000000000000637 .LASF268
     /tmp/ccQmPygT.s:5108   .debug_str:0000000000000190 .LASF269
     /tmp/ccQmPygT.s:5646   .debug_str:00000000000013d6 .LASF270
     /tmp/ccQmPygT.s:5356   .debug_str:0000000000000a82 .LASF271
     /tmp/ccQmPygT.s:5340   .debug_str:00000000000009da .LASF272
     /tmp/ccQmPygT.s:5676   .debug_str:00000000000014a3 .LASF273
     /tmp/ccQmPygT.s:5316   .debug_str:0000000000000949 .LASF274
     /tmp/ccQmPygT.s:5310   .debug_str:00000000000008ff .LASF275
     /tmp/ccQmPygT.s:5234   .debug_str:000000000000068d .LASF276
     /tmp/ccQmPygT.s:5568   .debug_str:0000000000001163 .LASF277
     /tmp/ccQmPygT.s:5246   .debug_str:00000000000006d5 .LASF278
     /tmp/ccQmPygT.s:5092   .debug_str:00000000000000e4 .LASF279
     /tmp/ccQmPygT.s:5312   .debug_str:000000000000091b .LASF280
     /tmp/ccQmPygT.s:5342   .debug_str:00000000000009f2 .LASF281
     /tmp/ccQmPygT.s:5526   .debug_str:0000000000001015 .LASF282
     /tmp/ccQmPygT.s:5110   .debug_str:00000000000001ab .LASF283
GAS LISTING /tmp/ccQmPygT.s 			page 47


     /tmp/ccQmPygT.s:5588   .debug_str:000000000000120b .LASF309
     /tmp/ccQmPygT.s:1098   .text:00000000000004d8 .LFB37
     /tmp/ccQmPygT.s:1145   .text:0000000000000510 .LFE37
     /tmp/ccQmPygT.s:5600   .debug_str:0000000000001269 .LASF284
     /tmp/ccQmPygT.s:1077   .text:00000000000004c8 .LFB36
     /tmp/ccQmPygT.s:1092   .text:00000000000004d8 .LFE36
     /tmp/ccQmPygT.s:1044   .text:00000000000004a8 .LFB35
     /tmp/ccQmPygT.s:1071   .text:00000000000004c8 .LFE35
     /tmp/ccQmPygT.s:1012   .text:0000000000000480 .LFB34
     /tmp/ccQmPygT.s:1038   .text:00000000000004a8 .LFE34
     /tmp/ccQmPygT.s:4892   .debug_loc:0000000000000000 .LLST14
     /tmp/ccQmPygT.s:1027   .text:0000000000000498 .LVL75
     /tmp/ccQmPygT.s:10     .text:0000000000000000 .LFB33
     /tmp/ccQmPygT.s:36     .text:0000000000000028 .LFE33
     /tmp/ccQmPygT.s:25     .text:0000000000000018 .LVL0
     /tmp/ccQmPygT.s:982    .text:0000000000000480 .LFE32
     /tmp/ccQmPygT.s:5254   .debug_str:000000000000071c .LASF285
     /tmp/ccQmPygT.s:4906   .debug_loc:0000000000000039 .LLST13
     /tmp/ccQmPygT.s:893    .text:00000000000003c0 .LVL60
     /tmp/ccQmPygT.s:897    .text:00000000000003c8 .LVL61
     /tmp/ccQmPygT.s:902    .text:00000000000003d4 .LVL62
     /tmp/ccQmPygT.s:907    .text:00000000000003e4 .LVL63
     /tmp/ccQmPygT.s:916    .text:0000000000000404 .LVL64
     /tmp/ccQmPygT.s:923    .text:0000000000000410 .LVL65
     /tmp/ccQmPygT.s:930    .text:000000000000041c .LVL66
     /tmp/ccQmPygT.s:936    .text:0000000000000428 .LVL67
     /tmp/ccQmPygT.s:943    .text:0000000000000434 .LVL68
     /tmp/ccQmPygT.s:947    .text:000000000000043c .LVL69
     /tmp/ccQmPygT.s:952    .text:000000000000044c .LVL70
     /tmp/ccQmPygT.s:975    .text:0000000000000474 .LVL72
     /tmp/ccQmPygT.s:979    .text:0000000000000480 .LVL73
     /tmp/ccQmPygT.s:236    .text:00000000000000ec .LFB31
     /tmp/ccQmPygT.s:861    .text:00000000000003a0 .LFE31
     /tmp/ccQmPygT.s:5442   .debug_str:0000000000000d96 .LASF286
     /tmp/ccQmPygT.s:4913   .debug_loc:000000000000005c .LLST2
     /tmp/ccQmPygT.s:535    .text:0000000000000218 .LBB60
     /tmp/ccQmPygT.s:670    .text:00000000000002ac .LBE60
     /tmp/ccQmPygT.s:5574   .debug_str:000000000000118a .LASF287
     /tmp/ccQmPygT.s:5514   .debug_str:0000000000000fc1 .LASF288
     /tmp/ccQmPygT.s:537    .text:0000000000000218 .LBB61
     /tmp/ccQmPygT.s:553    .text:0000000000000224 .LBE61
     /tmp/ccQmPygT.s:557    .text:0000000000000228 .LBB63
     /tmp/ccQmPygT.s:572    .text:0000000000000234 .LBE63
     /tmp/ccQmPygT.s:577    .text:0000000000000238 .LBB65
     /tmp/ccQmPygT.s:589    .text:0000000000000240 .LBE65
     /tmp/ccQmPygT.s:4934   .debug_loc:00000000000000ba .LLST9
     /tmp/ccQmPygT.s:611    .text:000000000000027c .LBB67
     /tmp/ccQmPygT.s:619    .text:0000000000000280 .LBE67
     /tmp/ccQmPygT.s:4942   .debug_loc:00000000000000de .LLST10
     /tmp/ccQmPygT.s:629    .text:000000000000028c .LBB69
     /tmp/ccQmPygT.s:640    .text:0000000000000290 .LBE69
     /tmp/ccQmPygT.s:4949   .debug_loc:0000000000000101 .LLST11
     /tmp/ccQmPygT.s:645    .text:0000000000000294 .LBB71
     /tmp/ccQmPygT.s:659    .text:000000000000029c .LBE71
     /tmp/ccQmPygT.s:4956   .debug_loc:0000000000000124 .LLST12
     /tmp/ccQmPygT.s:605    .text:0000000000000270 .LVL29
     /tmp/ccQmPygT.s:666    .text:00000000000002a8 .LVL36
GAS LISTING /tmp/ccQmPygT.s 			page 48


     /tmp/ccQmPygT.s:5046   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccQmPygT.s:4963   .debug_loc:0000000000000147 .LLST6
     /tmp/ccQmPygT.s:5468   .debug_str:0000000000000e70 .LASF289
     /tmp/ccQmPygT.s:4974   .debug_loc:000000000000017d .LLST7
     /tmp/ccQmPygT.s:4981   .debug_loc:00000000000001a0 .LLST8
     /tmp/ccQmPygT.s:684    .text:00000000000002c8 .LVL39
     /tmp/ccQmPygT.s:689    .text:00000000000002d4 .LVL40
     /tmp/ccQmPygT.s:523    .text:000000000000020c .LVL23
     /tmp/ccQmPygT.s:525    .text:0000000000000214 .LVL24
     /tmp/ccQmPygT.s:4996   .debug_loc:00000000000001e9 .LLST3
     /tmp/ccQmPygT.s:317    .text:0000000000000160 .LBB47
     /tmp/ccQmPygT.s:332    .text:000000000000016c .LBE47
     /tmp/ccQmPygT.s:338    .text:0000000000000174 .LBB49
     /tmp/ccQmPygT.s:353    .text:0000000000000180 .LBE49
     /tmp/ccQmPygT.s:708    .text:00000000000002e4 .LBB51
     /tmp/ccQmPygT.s:719    .text:00000000000002e8 .LBE51
     /tmp/ccQmPygT.s:5003   .debug_loc:000000000000020c .LLST4
     /tmp/ccQmPygT.s:724    .text:00000000000002ec .LBB53
     /tmp/ccQmPygT.s:736    .text:00000000000002f0 .LBE53
     /tmp/ccQmPygT.s:5010   .debug_loc:000000000000022f .LLST5
     /tmp/ccQmPygT.s:701    .text:00000000000002e0 .LVL42
     /tmp/ccQmPygT.s:759    .text:000000000000030c .LVL47
     /tmp/ccQmPygT.s:767    .text:0000000000000318 .LVL48
     /tmp/ccQmPygT.s:775    .text:0000000000000324 .LVL49
     /tmp/ccQmPygT.s:783    .text:0000000000000330 .LVL50
     /tmp/ccQmPygT.s:791    .text:000000000000033c .LVL51
     /tmp/ccQmPygT.s:799    .text:0000000000000348 .LVL52
     /tmp/ccQmPygT.s:807    .text:0000000000000354 .LVL53
     /tmp/ccQmPygT.s:815    .text:0000000000000360 .LVL54
     /tmp/ccQmPygT.s:823    .text:000000000000036c .LVL55
     /tmp/ccQmPygT.s:831    .text:0000000000000378 .LVL56
     /tmp/ccQmPygT.s:839    .text:0000000000000384 .LVL57
     /tmp/ccQmPygT.s:847    .text:0000000000000390 .LVL58
     /tmp/ccQmPygT.s:855    .text:000000000000039c .LVL59
     /tmp/ccQmPygT.s:270    .text:0000000000000124 .LBB43
     /tmp/ccQmPygT.s:286    .text:0000000000000130 .LBE43
     /tmp/ccQmPygT.s:201    .text:00000000000000cc .LFB30
     /tmp/ccQmPygT.s:230    .text:00000000000000ec .LFE30
     /tmp/ccQmPygT.s:132    .text:0000000000000084 .LFB29
     /tmp/ccQmPygT.s:164    .text:00000000000000a4 .LFE29
     /tmp/ccQmPygT.s:143    .text:0000000000000090 .LBB41
     /tmp/ccQmPygT.s:155    .text:0000000000000098 .LBE41
     /tmp/ccQmPygT.s:5017   .debug_loc:0000000000000252 .LLST1
     /tmp/ccQmPygT.s:94     .text:0000000000000064 .LFB28
     /tmp/ccQmPygT.s:126    .text:0000000000000084 .LFE28
     /tmp/ccQmPygT.s:105    .text:0000000000000070 .LBB39
     /tmp/ccQmPygT.s:117    .text:0000000000000078 .LBE39
     /tmp/ccQmPygT.s:5025   .debug_loc:0000000000000276 .LLST0
     /tmp/ccQmPygT.s:170    .text:00000000000000a4 .LFB27
     /tmp/ccQmPygT.s:195    .text:00000000000000cc .LFE27
     /tmp/ccQmPygT.s:184    .text:00000000000000bc .LVL9
     /tmp/ccQmPygT.s:42     .text:0000000000000028 .LFB26
     /tmp/ccQmPygT.s:88     .text:0000000000000064 .LFE26
     /tmp/ccQmPygT.s:57     .text:0000000000000040 .LBB37
     /tmp/ccQmPygT.s:69     .text:0000000000000044 .LBE37
     /tmp/ccQmPygT.s:73     .text:000000000000004c .LVL3
     /tmp/ccQmPygT.s:77     .text:0000000000000054 .LVL4
GAS LISTING /tmp/ccQmPygT.s 			page 49


     /tmp/ccQmPygT.s:5188   .debug_str:00000000000004fe .LASF310
     /tmp/ccQmPygT.s:5114   .debug_str:00000000000001d3 .LASF290
     /tmp/ccQmPygT.s:5652   .debug_str:0000000000001405 .LASF291
     /tmp/ccQmPygT.s:5220   .debug_str:00000000000005f3 .LASF292
     /tmp/ccQmPygT.s:5480   .debug_str:0000000000000ec2 .LASF294
     /tmp/ccQmPygT.s:5372   .debug_str:0000000000000b2d .LASF293
     /tmp/ccQmPygT.s:5436   .debug_str:0000000000000d76 .LASF295
     /tmp/ccQmPygT.s:5186   .debug_str:00000000000004f2 .LASF296
     /tmp/ccQmPygT.s:5628   .debug_str:0000000000001346 .LASF297
     /tmp/ccQmPygT.s:5618   .debug_str:00000000000012df .LASF298
     /tmp/ccQmPygT.s:5540   .debug_str:00000000000010a8 .LASF299
     /tmp/ccQmPygT.s:5658   .debug_str:0000000000001430 .LASF300
     /tmp/ccQmPygT.s:5664   .debug_str:0000000000001451 .LASF311
     /tmp/ccQmPygT.s:5118   .debug_str:0000000000000200 .LASF312
     /tmp/ccQmPygT.s:5348   .debug_str:0000000000000a44 .LASF301
     /tmp/ccQmPygT.s:5166   .debug_str:0000000000000445 .LASF302
     /tmp/ccQmPygT.s:1015   .text:0000000000000480 .LVL74
     /tmp/ccQmPygT.s:963    .text:0000000000000458 .LVL71
     /tmp/ccQmPygT.s:284    .text:0000000000000130 .LVL10
     /tmp/ccQmPygT.s:298    .text:0000000000000154 .LVL11
     /tmp/ccQmPygT.s:314    .text:0000000000000160 .LVL12
     /tmp/ccQmPygT.s:438    .text:00000000000001a8 .LVL14
     /tmp/ccQmPygT.s:454    .text:00000000000001c0 .LVL15
     /tmp/ccQmPygT.s:528    .text:0000000000000218 .LVL25
     /tmp/ccQmPygT.s:546    .text:000000000000021c .LVL26
     /tmp/ccQmPygT.s:576    .text:0000000000000238 .LVL27
     /tmp/ccQmPygT.s:586    .text:0000000000000240 .LVL28
     /tmp/ccQmPygT.s:610    .text:000000000000027c .LVL30
     /tmp/ccQmPygT.s:617    .text:0000000000000280 .LVL31
     /tmp/ccQmPygT.s:628    .text:000000000000028c .LVL32
     /tmp/ccQmPygT.s:637    .text:0000000000000290 .LVL33
     /tmp/ccQmPygT.s:644    .text:0000000000000294 .LVL34
     /tmp/ccQmPygT.s:656    .text:000000000000029c .LVL35
     /tmp/ccQmPygT.s:456    .text:00000000000001c4 .LVL16
     /tmp/ccQmPygT.s:474    .text:00000000000001d0 .LVL17
     /tmp/ccQmPygT.s:488    .text:00000000000001e4 .LVL19
     /tmp/ccQmPygT.s:512    .text:00000000000001fc .LVL21
     /tmp/ccQmPygT.s:480    .text:00000000000001d4 .LVL18
     /tmp/ccQmPygT.s:508    .text:00000000000001f4 .LVL20
     /tmp/ccQmPygT.s:516    .text:0000000000000204 .LVL22
     /tmp/ccQmPygT.s:668    .text:00000000000002ac .LVL37
     /tmp/ccQmPygT.s:682    .text:00000000000002c0 .LVL38
     /tmp/ccQmPygT.s:691    .text:00000000000002d8 .LVL41
     /tmp/ccQmPygT.s:360    .text:0000000000000190 .LVL13
     /tmp/ccQmPygT.s:707    .text:00000000000002e4 .LVL43
     /tmp/ccQmPygT.s:716    .text:00000000000002e8 .LVL44
     /tmp/ccQmPygT.s:723    .text:00000000000002ec .LVL45
     /tmp/ccQmPygT.s:732    .text:00000000000002f0 .LVL46
     /tmp/ccQmPygT.s:142    .text:0000000000000090 .LVL7
     /tmp/ccQmPygT.s:152    .text:0000000000000098 .LVL8
     /tmp/ccQmPygT.s:104    .text:0000000000000070 .LVL5
     /tmp/ccQmPygT.s:114    .text:0000000000000078 .LVL6
     /tmp/ccQmPygT.s:1167   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccQmPygT.s:306    .text:000000000000015c .LBB46
     /tmp/ccQmPygT.s:440    .text:00000000000001a8 .LBE46
     /tmp/ccQmPygT.s:696    .text:00000000000002d8 .LBB74
     /tmp/ccQmPygT.s:737    .text:00000000000002f0 .LBE74
GAS LISTING /tmp/ccQmPygT.s 			page 50


     /tmp/ccQmPygT.s:754    .text:0000000000000304 .LBB75
     /tmp/ccQmPygT.s:858    .text:00000000000003a0 .LBE75
     /tmp/ccQmPygT.s:450    .text:00000000000001b8 .LBB55
     /tmp/ccQmPygT.s:530    .text:0000000000000218 .LBE55
     /tmp/ccQmPygT.s:671    .text:00000000000002ac .LBB73
     /tmp/ccQmPygT.s:695    .text:00000000000002d8 .LBE73
     /tmp/ccQmPygT.s:483    .text:00000000000001d8 .LBB57
     /tmp/ccQmPygT.s:518    .text:0000000000000204 .LBE57
     /tmp/ccQmPygT.s:673    .text:00000000000002ac .LBB58
     /tmp/ccQmPygT.s:693    .text:00000000000002d8 .LBE58
     /tmp/ccQmPygT.s:985    .gcc_except_table:0000000000000000 .LLSDA32

UNDEFINED SYMBOLS
_Z8userMainv
_ZN5Riscv14supervisorTrapEv
_ZN3PCB10initializeEv
_ZN8KConsole10initializeEv
_ZN3PCB10savedRegA4E
_ZN3PCB7runningE
CONSOLE_STATUS
CONSOLE_TX_DATA
_ZN8KConsole11pendingGetcE
plic_claim
plic_complete
_ZN3PCB16timeSliceCounterE
_ZN12SleepPCBList13tryToWakePCBsEv
_ZN3PCB8dispatchEv
_ZN8KConsole17putCharacterInputEc
_ZN8KConsole18putCharacterOutputEc
_ZN15MemoryAllocator15memAllocHandlerEv
_ZN15MemoryAllocator14memFreeHandlerEv
_ZN3PCB20threadMakePCBHandlerEv
_ZN3PCB19threadCreateHandlerEv
_ZN3PCB18threadStartHandlerEv
_ZN3PCB21threadDispatchHandlerEv
_ZN3PCB17threadExitHandlerEv
_ZN3PCB18threadSleepHandlerEv
_ZN10KSemaphore14semOpenHandlerEv
_ZN10KSemaphore14semWaitHandlerEv
_ZN10KSemaphore16semSignalHandlerEv
_ZN10KSemaphore15semCloseHandlerEv
_ZN8KConsole11getcHandlerEv
_ZN8KConsole11putcHandlerEv
_Z7kmallocm
_ZN3PCBnwEm
_ZN3PCBC1EPFvPvES0_S0_m
_ZN3PCB5startEv
_ZN3PCB10isFinishedEv
thread_dispatch
_Z11printStringPKc
_ZN3PCBdlEPv
_Unwind_Resume
__gxx_personality_v0
_Z7myTestsv
