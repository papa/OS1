GAS LISTING /tmp/cc0Vska2.s 			page 1


   1              		.file	"Riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10initSystemEv
   9              	_ZN5Riscv10initSystemEv:
  10              	.LFB23:
  11              		.file 1 "src/Riscv.cpp"
   1:src/Riscv.cpp **** //
   2:src/Riscv.cpp **** // Created by os on 4/27/22.
   3:src/Riscv.cpp **** //
   4:src/Riscv.cpp **** 
   5:src/Riscv.cpp **** #include "../h/Riscv.hpp"
   6:src/Riscv.cpp **** #include "../h/MemoryAllocator.hpp"
   7:src/Riscv.cpp **** #include "../h/PCB.hpp"
   8:src/Riscv.cpp **** #include "../lib/console.h"
   9:src/Riscv.cpp **** #include "../h/syscall_cpp.hpp"
  10:src/Riscv.cpp **** #include "../h/SleepPCBList.hpp"
  11:src/Riscv.cpp **** #include "../h/KConsole.hpp"
  12:src/Riscv.cpp **** #include "../h/Tests.hpp"
  13:src/Riscv.cpp **** #include "../test/userMain.hpp"
  14:src/Riscv.cpp **** 
  15:src/Riscv.cpp **** void Riscv::initSystem()
  16:src/Riscv.cpp **** {
  12              		.loc 1 16 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23341100 		sd	ra,8(sp)
  17 0008 23308100 		sd	s0,0(sp)
  18              		.cfi_offset 1, -8
  19              		.cfi_offset 8, -16
  20 000c 13040101 		addi	s0,sp,16
  21              		.cfi_def_cfa 8, 0
  17:src/Riscv.cpp ****     w_stvec((uint64)&Riscv::supervisorTrap);
  22              		.loc 1 17 5
  23              		.loc 1 17 12 is_stmt 0
  24 0010 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
  24      83B70700 
  25              	.LVL0:
  26              	.LBB84:
  27              	.LBB85:
  28              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 4/27/22.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_0_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_0_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** class Riscv
  11:src/../h/Riscv.hpp **** {
  12:src/../h/Riscv.hpp **** private:
GAS LISTING /tmp/cc0Vska2.s 			page 2


  13:src/../h/Riscv.hpp **** 
  14:src/../h/Riscv.hpp **** public:
  15:src/../h/Riscv.hpp ****     static void kernelMain();
  16:src/../h/Riscv.hpp **** 
  17:src/../h/Riscv.hpp ****     static void initSystem();
  18:src/../h/Riscv.hpp ****     static void endSystem();
  19:src/../h/Riscv.hpp **** 
  20:src/../h/Riscv.hpp ****     static void userMainWrapper(void* p);
  21:src/../h/Riscv.hpp **** 
  22:src/../h/Riscv.hpp ****     static void enableInterrupts();
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp ****     static void disableInterrupts();
  25:src/../h/Riscv.hpp **** 
  26:src/../h/Riscv.hpp ****     static void printString(char const *string);
  27:src/../h/Riscv.hpp **** 
  28:src/../h/Riscv.hpp ****     static void printInteger(uint64 num);
  29:src/../h/Riscv.hpp **** 
  30:src/../h/Riscv.hpp ****     static void pushRegisters();
  31:src/../h/Riscv.hpp ****     static void popRegisters();
  32:src/../h/Riscv.hpp **** 
  33:src/../h/Riscv.hpp ****     static uint64 r_scause();
  34:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  35:src/../h/Riscv.hpp **** 
  36:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  37:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
  38:src/../h/Riscv.hpp **** 
  39:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  40:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  41:src/../h/Riscv.hpp **** 
  42:src/../h/Riscv.hpp ****     static uint64 r_stval();
  43:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  44:src/../h/Riscv.hpp **** 
  45:src/../h/Riscv.hpp ****     enum BitMaskSip
  46:src/../h/Riscv.hpp ****     {
  47:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  48:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  49:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9),
  50:src/../h/Riscv.hpp ****     };
  51:src/../h/Riscv.hpp **** 
  52:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  53:src/../h/Riscv.hpp **** 
  54:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  55:src/../h/Riscv.hpp **** 
  56:src/../h/Riscv.hpp ****     static uint64 r_sip();
  57:src/../h/Riscv.hpp **** 
  58:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  59:src/../h/Riscv.hpp **** 
  60:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  61:src/../h/Riscv.hpp ****     {
  62:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  63:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  64:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  65:src/../h/Riscv.hpp ****     };
  66:src/../h/Riscv.hpp **** 
  67:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  68:src/../h/Riscv.hpp **** 
  69:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
GAS LISTING /tmp/cc0Vska2.s 			page 3


  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  72:src/../h/Riscv.hpp **** 
  73:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  74:src/../h/Riscv.hpp **** 
  75:src/../h/Riscv.hpp ****     static void popSppSpie();
  76:src/../h/Riscv.hpp **** 
  77:src/../h/Riscv.hpp ****     static void supervisorTrap();
  78:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  79:src/../h/Riscv.hpp **** 
  80:src/../h/Riscv.hpp ****     static const uint64 bntOne = 1UL << 63;;
  81:src/../h/Riscv.hpp ****     static const uint64 bntZero = 0UL;
  82:src/../h/Riscv.hpp ****     static const uint64 timerInterrupt = bntOne + 1UL;
  83:src/../h/Riscv.hpp ****     static const uint64 hwInterrupt = bntOne + 9UL;
  84:src/../h/Riscv.hpp ****     static const uint64 operationInterrupt = bntZero + 2UL;
  85:src/../h/Riscv.hpp ****     static const uint64 addrReadInterrupt = bntZero + 5UL;
  86:src/../h/Riscv.hpp ****     static const uint64 addrWriteInterrupt = bntZero + 7UL;
  87:src/../h/Riscv.hpp ****     static const uint64 ecallUserInterrupt = bntZero + 8UL;
  88:src/../h/Riscv.hpp ****     static const uint64 ecallSystemInterupt = bntZero + 9UL;
  89:src/../h/Riscv.hpp **** };
  90:src/../h/Riscv.hpp **** 
  91:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause() {
  92:src/../h/Riscv.hpp ****     uint64 volatile scause;
  93:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
  94:src/../h/Riscv.hpp ****     return scause;
  95:src/../h/Riscv.hpp **** }
  96:src/../h/Riscv.hpp **** 
  97:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
  98:src/../h/Riscv.hpp ****     __asm__ volatile("csrw scause, %0" : :"r"(scause));
  99:src/../h/Riscv.hpp **** }
 100:src/../h/Riscv.hpp **** 
 101:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc() {
 102:src/../h/Riscv.hpp ****     uint64 volatile sepc;
 103:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 104:src/../h/Riscv.hpp ****     return sepc;
 105:src/../h/Riscv.hpp **** }
 106:src/../h/Riscv.hpp **** 
 107:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
 108:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sepc, %0" : :"r"(sepc));
 109:src/../h/Riscv.hpp **** }
 110:src/../h/Riscv.hpp **** 
 111:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec() {
 112:src/../h/Riscv.hpp ****     uint64 volatile stvec;
 113:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, stvec" : "=r"(stvec));
 114:src/../h/Riscv.hpp ****     return stvec;
 115:src/../h/Riscv.hpp **** }
 116:src/../h/Riscv.hpp **** 
 117:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 118:src/../h/Riscv.hpp ****     __asm__ volatile("csrw stvec, %0" : :"r"(stvec));
  29              		.loc 2 118 5 is_stmt 1
  30              		.loc 2 118 53 is_stmt 0
  31              	#APP
  32              	# 118 "src/../h/Riscv.hpp" 1
 119              	}
  33              		csrw stvec, a5
  34              	# 0 "" 2
  35              	.LVL1:
GAS LISTING /tmp/cc0Vska2.s 			page 4


  36              	#NO_APP
  37              	.LBE85:
  38              	.LBE84:
  18:src/Riscv.cpp ****     PCB::initialize();
  39              		.loc 1 18 5 is_stmt 1
  40              		.loc 1 18 20 is_stmt 0
  41 001c 97000000 		call	_ZN3PCB10initializeEv@plt
  41      E7800000 
  42              	.LVL2:
  19:src/Riscv.cpp ****     KConsole::initialize();
  43              		.loc 1 19 5 is_stmt 1
  44              		.loc 1 19 25 is_stmt 0
  45 0024 97000000 		call	_ZN8KConsole10initializeEv@plt
  45      E7800000 
  46              	.LVL3:
  20:src/Riscv.cpp **** }
  47              		.loc 1 20 1
  48 002c 83308100 		ld	ra,8(sp)
  49              		.cfi_restore 1
  50 0030 03340100 		ld	s0,0(sp)
  51              		.cfi_restore 8
  52              		.cfi_def_cfa 2, 16
  53 0034 13010101 		addi	sp,sp,16
  54              		.cfi_def_cfa_offset 0
  55 0038 67800000 		jr	ra
  56              		.cfi_endproc
  57              	.LFE23:
  59              		.align	2
  60              		.globl	_ZN5Riscv16enableInterruptsEv
  62              	_ZN5Riscv16enableInterruptsEv:
  63              	.LFB25:
  21:src/Riscv.cpp **** 
  22:src/Riscv.cpp **** void Riscv::endSystem()
  23:src/Riscv.cpp **** {
  24:src/Riscv.cpp ****     //todo
  25:src/Riscv.cpp ****     Riscv::disableInterrupts();
  26:src/Riscv.cpp **** }
  27:src/Riscv.cpp **** 
  28:src/Riscv.cpp **** 
  29:src/Riscv.cpp **** void Riscv::enableInterrupts() {
  64              		.loc 1 29 32 is_stmt 1
  65              		.cfi_startproc
  66 003c 130101FF 		addi	sp,sp,-16
  67              		.cfi_def_cfa_offset 16
  68 0040 23348100 		sd	s0,8(sp)
  69              		.cfi_offset 8, -8
  70 0044 13040101 		addi	s0,sp,16
  71              		.cfi_def_cfa 8, 0
  30:src/Riscv.cpp ****     ms_sstatus(Riscv::SSTATUS_SIE);
  72              		.loc 1 30 5
  73              	.LVL4:
  74              	.LBB86:
  75              	.LBB87:
 120:src/../h/Riscv.hpp **** 
 121:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stval() {
 122:src/../h/Riscv.hpp ****     uint64 volatile stval;
 123:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, stval" : "=r"(stval));
GAS LISTING /tmp/cc0Vska2.s 			page 5


 124:src/../h/Riscv.hpp ****     return stval;
 125:src/../h/Riscv.hpp **** }
 126:src/../h/Riscv.hpp **** 
 127:src/../h/Riscv.hpp **** inline void Riscv::w_stval(uint64 stval) {
 128:src/../h/Riscv.hpp ****     __asm__ volatile("csrw stval, %0" : :"r"(stval));
 129:src/../h/Riscv.hpp **** }
 130:src/../h/Riscv.hpp **** 
 131:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 132:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sip, %0" : :"r"(mask));
 133:src/../h/Riscv.hpp **** }
 134:src/../h/Riscv.hpp **** 
 135:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 136:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sip, %0" : :"r"(mask));
 137:src/../h/Riscv.hpp **** }
 138:src/../h/Riscv.hpp **** 
 139:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip() {
 140:src/../h/Riscv.hpp ****     uint64 volatile sip;
 141:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sip" : "=r"(sip));
 142:src/../h/Riscv.hpp ****     return sip;
 143:src/../h/Riscv.hpp **** }
 144:src/../h/Riscv.hpp **** 
 145:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 146:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sip, %0" : :"r"(sip));
 147:src/../h/Riscv.hpp **** }
 148:src/../h/Riscv.hpp **** 
 149:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 150:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sstatus, %0" : :"r"(mask));
  76              		.loc 2 150 5
  77              		.loc 2 150 54 is_stmt 0
  78 0048 93072000 		li	a5,2
  79              	#APP
  80              	# 150 "src/../h/Riscv.hpp" 1
 151              	}
  81              		csrs sstatus, a5
  82              	# 0 "" 2
  83              	.LVL5:
  84              	#NO_APP
  85              	.LBE87:
  86              	.LBE86:
  31:src/Riscv.cpp **** }
  87              		.loc 1 31 1
  88 0050 03348100 		ld	s0,8(sp)
  89              		.cfi_restore 8
  90              		.cfi_def_cfa 2, 16
  91 0054 13010101 		addi	sp,sp,16
  92              		.cfi_def_cfa_offset 0
  93 0058 67800000 		jr	ra
  94              		.cfi_endproc
  95              	.LFE25:
  97              		.align	2
  98              		.globl	_ZN5Riscv17disableInterruptsEv
 100              	_ZN5Riscv17disableInterruptsEv:
 101              	.LFB26:
  32:src/Riscv.cpp **** 
  33:src/Riscv.cpp **** void Riscv::disableInterrupts()
  34:src/Riscv.cpp **** {
 102              		.loc 1 34 1 is_stmt 1
GAS LISTING /tmp/cc0Vska2.s 			page 6


 103              		.cfi_startproc
 104 005c 130101FF 		addi	sp,sp,-16
 105              		.cfi_def_cfa_offset 16
 106 0060 23348100 		sd	s0,8(sp)
 107              		.cfi_offset 8, -8
 108 0064 13040101 		addi	s0,sp,16
 109              		.cfi_def_cfa 8, 0
  35:src/Riscv.cpp ****     mc_sstatus(Riscv::SSTATUS_SIE);
 110              		.loc 1 35 5
 111              	.LVL6:
 112              	.LBB88:
 113              	.LBB89:
 152:src/../h/Riscv.hpp **** 
 153:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 154:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sstatus, %0" : :"r"(mask));
 114              		.loc 2 154 5
 115              		.loc 2 154 54 is_stmt 0
 116 0068 93072000 		li	a5,2
 117              	#APP
 118              	# 154 "src/../h/Riscv.hpp" 1
 155              	}
 119              		csrc sstatus, a5
 120              	# 0 "" 2
 121              	.LVL7:
 122              	#NO_APP
 123              	.LBE89:
 124              	.LBE88:
  36:src/Riscv.cpp **** }
 125              		.loc 1 36 1
 126 0070 03348100 		ld	s0,8(sp)
 127              		.cfi_restore 8
 128              		.cfi_def_cfa 2, 16
 129 0074 13010101 		addi	sp,sp,16
 130              		.cfi_def_cfa_offset 0
 131 0078 67800000 		jr	ra
 132              		.cfi_endproc
 133              	.LFE26:
 135              		.align	2
 136              		.globl	_ZN5Riscv9endSystemEv
 138              	_ZN5Riscv9endSystemEv:
 139              	.LFB24:
  23:src/Riscv.cpp ****     //todo
 140              		.loc 1 23 1 is_stmt 1
 141              		.cfi_startproc
 142 007c 130101FF 		addi	sp,sp,-16
 143              		.cfi_def_cfa_offset 16
 144 0080 23341100 		sd	ra,8(sp)
 145 0084 23308100 		sd	s0,0(sp)
 146              		.cfi_offset 1, -8
 147              		.cfi_offset 8, -16
 148 0088 13040101 		addi	s0,sp,16
 149              		.cfi_def_cfa 8, 0
  25:src/Riscv.cpp **** }
 150              		.loc 1 25 5
  25:src/Riscv.cpp **** }
 151              		.loc 1 25 29 is_stmt 0
 152 008c 97000000 		call	_ZN5Riscv17disableInterruptsEv
GAS LISTING /tmp/cc0Vska2.s 			page 7


 152      E7800000 
 153              	.LVL8:
  26:src/Riscv.cpp **** 
 154              		.loc 1 26 1
 155 0094 83308100 		ld	ra,8(sp)
 156              		.cfi_restore 1
 157 0098 03340100 		ld	s0,0(sp)
 158              		.cfi_restore 8
 159              		.cfi_def_cfa 2, 16
 160 009c 13010101 		addi	sp,sp,16
 161              		.cfi_def_cfa_offset 0
 162 00a0 67800000 		jr	ra
 163              		.cfi_endproc
 164              	.LFE24:
 166              		.align	2
 167              		.globl	_ZN5Riscv10popSppSpieEv
 169              	_ZN5Riscv10popSppSpieEv:
 170              	.LFB27:
  37:src/Riscv.cpp **** 
  38:src/Riscv.cpp **** void Riscv::popSppSpie()
  39:src/Riscv.cpp **** {
 171              		.loc 1 39 1 is_stmt 1
 172              		.cfi_startproc
 173 00a4 130101FF 		addi	sp,sp,-16
 174              		.cfi_def_cfa_offset 16
 175 00a8 23348100 		sd	s0,8(sp)
 176              		.cfi_offset 8, -8
 177 00ac 13040101 		addi	s0,sp,16
 178              		.cfi_def_cfa 8, 0
  40:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
 179              		.loc 1 40 5
 180              		.loc 1 40 39 is_stmt 0
 181              	#APP
 182              	# 40 "src/Riscv.cpp" 1
  41              	    __asm__ volatile ("sret");
 183              		csrw sepc, ra
 184              	# 0 "" 2
 185              		.loc 1 41 5 is_stmt 1
 186              		.loc 1 41 30 is_stmt 0
 187              	# 41 "src/Riscv.cpp" 1
  42              	}
 188              		sret
 189              	# 0 "" 2
 190              		.loc 1 42 1
 191              	#NO_APP
 192 00b8 03348100 		ld	s0,8(sp)
 193              		.cfi_restore 8
 194              		.cfi_def_cfa 2, 16
 195 00bc 13010101 		addi	sp,sp,16
 196              		.cfi_def_cfa_offset 0
 197 00c0 67800000 		jr	ra
 198              		.cfi_endproc
 199              	.LFE27:
 201              		.align	2
 202              		.globl	_ZN5Riscv11printStringEPKc
 204              	_ZN5Riscv11printStringEPKc:
 205              	.LFB28:
GAS LISTING /tmp/cc0Vska2.s 			page 8


  43:src/Riscv.cpp **** 
  44:src/Riscv.cpp **** void Riscv::printString(const char *string)
  45:src/Riscv.cpp **** {
 206              		.loc 1 45 1 is_stmt 1
 207              		.cfi_startproc
 208              	.LVL9:
 209 00c4 130101FD 		addi	sp,sp,-48
 210              		.cfi_def_cfa_offset 48
 211 00c8 23341102 		sd	ra,40(sp)
 212 00cc 23308102 		sd	s0,32(sp)
 213 00d0 233C9100 		sd	s1,24(sp)
 214 00d4 23382101 		sd	s2,16(sp)
 215              		.cfi_offset 1, -8
 216              		.cfi_offset 8, -16
 217              		.cfi_offset 9, -24
 218              		.cfi_offset 18, -32
 219 00d8 13040103 		addi	s0,sp,48
 220              		.cfi_def_cfa 8, 0
 221 00dc 93040500 		mv	s1,a0
  46:src/Riscv.cpp ****     uint64 sstatus = r_sstatus();
 222              		.loc 1 46 5
 223              	.LBB90:
 224              	.LBB91:
 156:src/../h/Riscv.hpp **** 
 157:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sstatus() {
 158:src/../h/Riscv.hpp ****     uint64 volatile sstatus;
 225              		.loc 2 158 5
 159:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 226              		.loc 2 159 5
 227              		.loc 2 159 57 is_stmt 0
 228              	#APP
 229              	# 159 "src/../h/Riscv.hpp" 1
 160              	    return sstatus;
 230              		csrr a5, sstatus
 231              	# 0 "" 2
 232              	#NO_APP
 233 00e4 233CF4FC 		sd	a5,-40(s0)
 234              		.loc 2 160 5 is_stmt 1
 235              		.loc 2 160 12 is_stmt 0
 236 00e8 033984FD 		ld	s2,-40(s0)
 237              	.LVL10:
 238              	.LBE91:
 239              	.LBE90:
  47:src/Riscv.cpp ****     mc_sstatus(SSTATUS_SIE);
 240              		.loc 1 47 5 is_stmt 1
 241              	.LBB92:
 242              	.LBB93:
 154:src/../h/Riscv.hpp **** }
 243              		.loc 2 154 5
 154:src/../h/Riscv.hpp **** }
 244              		.loc 2 154 54 is_stmt 0
 245 00ec 93072000 		li	a5,2
 246              	#APP
 247              	# 154 "src/../h/Riscv.hpp" 1
 248              		csrc sstatus, a5
 249              	# 0 "" 2
 250              	.LVL11:
GAS LISTING /tmp/cc0Vska2.s 			page 9


 251              	#NO_APP
 252              	.L13:
 253              	.LBE93:
 254              	.LBE92:
  48:src/Riscv.cpp ****     while (*string != '\0')
 255              		.loc 1 48 5 is_stmt 1
 256              		.loc 1 48 20
 257              		.loc 1 48 12 is_stmt 0
 258 00f4 03C50400 		lbu	a0,0(s1)
 259              		.loc 1 48 20
 260 00f8 630A0500 		beqz	a0,.L12
  49:src/Riscv.cpp ****     {
  50:src/Riscv.cpp ****         __putc(*string);
 261              		.loc 1 50 9 is_stmt 1
 262              		.loc 1 50 15 is_stmt 0
 263 00fc 97000000 		call	__putc@plt
 263      E7800000 
 264              	.LVL12:
  51:src/Riscv.cpp ****         string++;
 265              		.loc 1 51 9 is_stmt 1
 266              		.loc 1 51 15 is_stmt 0
 267 0104 93841400 		addi	s1,s1,1
 268              	.LVL13:
  48:src/Riscv.cpp ****     while (*string != '\0')
 269              		.loc 1 48 5
 270 0108 6FF0DFFE 		j	.L13
 271              	.L12:
  52:src/Riscv.cpp ****     }
  53:src/Riscv.cpp ****     ms_sstatus(sstatus & SSTATUS_SIE ? SSTATUS_SIE : 0);
 272              		.loc 1 53 5 is_stmt 1
 273              		.loc 1 53 38 is_stmt 0
 274 010c 1B090900 		sext.w	s2,s2
 275              	.LVL14:
 276              		.loc 1 53 15
 277 0110 13792900 		andi	s2,s2,2
 278 0114 1B090900 		sext.w	s2,s2
 279              	.LVL15:
 280              	.LBB94:
 281              	.LBB95:
 150:src/../h/Riscv.hpp **** }
 282              		.loc 2 150 5 is_stmt 1
 150:src/../h/Riscv.hpp **** }
 283              		.loc 2 150 54 is_stmt 0
 284              	#APP
 285              	# 150 "src/../h/Riscv.hpp" 1
 286              		csrs sstatus, s2
 287              	# 0 "" 2
 288              	.LVL16:
 289              	#NO_APP
 290              	.LBE95:
 291              	.LBE94:
  54:src/Riscv.cpp **** }
 292              		.loc 1 54 1
 293 011c 83308102 		ld	ra,40(sp)
 294              		.cfi_restore 1
 295 0120 03340102 		ld	s0,32(sp)
 296              		.cfi_restore 8
GAS LISTING /tmp/cc0Vska2.s 			page 10


 297              		.cfi_def_cfa 2, 48
 298 0124 83348101 		ld	s1,24(sp)
 299              		.cfi_restore 9
 300              	.LVL17:
 301 0128 03390101 		ld	s2,16(sp)
 302              		.cfi_restore 18
 303 012c 13010103 		addi	sp,sp,48
 304              		.cfi_def_cfa_offset 0
 305 0130 67800000 		jr	ra
 306              		.cfi_endproc
 307              	.LFE28:
 309              		.align	2
 310              		.globl	_ZN5Riscv12printIntegerEm
 312              	_ZN5Riscv12printIntegerEm:
 313              	.LFB29:
  55:src/Riscv.cpp **** 
  56:src/Riscv.cpp **** void Riscv::printInteger(uint64 num)
  57:src/Riscv.cpp **** {
 314              		.loc 1 57 1 is_stmt 1
 315              		.cfi_startproc
 316              	.LVL18:
 317 0134 130101FC 		addi	sp,sp,-64
 318              		.cfi_def_cfa_offset 64
 319 0138 233C1102 		sd	ra,56(sp)
 320 013c 23388102 		sd	s0,48(sp)
 321 0140 23349102 		sd	s1,40(sp)
 322 0144 23302103 		sd	s2,32(sp)
 323              		.cfi_offset 1, -8
 324              		.cfi_offset 8, -16
 325              		.cfi_offset 9, -24
 326              		.cfi_offset 18, -32
 327 0148 13040104 		addi	s0,sp,64
 328              		.cfi_def_cfa 8, 0
  58:src/Riscv.cpp ****     uint64 sstatus = r_sstatus();
 329              		.loc 1 58 5
 330              	.LBB96:
 331              	.LBB97:
 158:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 332              		.loc 2 158 5
 159:src/../h/Riscv.hpp ****     return sstatus;
 333              		.loc 2 159 5
 159:src/../h/Riscv.hpp ****     return sstatus;
 334              		.loc 2 159 57 is_stmt 0
 335              	#APP
 336              	# 159 "src/../h/Riscv.hpp" 1
 337              		csrr a5, sstatus
 338              	# 0 "" 2
 339              	#NO_APP
 340 0150 2334F4FC 		sd	a5,-56(s0)
 341              		.loc 2 160 5 is_stmt 1
 342              		.loc 2 160 12 is_stmt 0
 343 0154 033984FC 		ld	s2,-56(s0)
 344              	.LVL19:
 345              	.LBE97:
 346              	.LBE96:
  59:src/Riscv.cpp ****     mc_sstatus(SSTATUS_SIE);
 347              		.loc 1 59 5 is_stmt 1
GAS LISTING /tmp/cc0Vska2.s 			page 11


 348              	.LBB98:
 349              	.LBB99:
 154:src/../h/Riscv.hpp **** }
 350              		.loc 2 154 5
 154:src/../h/Riscv.hpp **** }
 351              		.loc 2 154 54 is_stmt 0
 352 0158 93072000 		li	a5,2
 353              	#APP
 354              	# 154 "src/../h/Riscv.hpp" 1
 355              		csrc sstatus, a5
 356              	# 0 "" 2
 357              	.LVL20:
 358              	#NO_APP
 359              	.LBE99:
 360              	.LBE98:
  60:src/Riscv.cpp ****     static char digits[] = "0123456789";
 361              		.loc 1 60 5 is_stmt 1
  61:src/Riscv.cpp ****     char buf[16];
 362              		.loc 1 61 5
  62:src/Riscv.cpp ****     int i, neg;
 363              		.loc 1 62 5
  63:src/Riscv.cpp ****     uint x;
 364              		.loc 1 63 5
  64:src/Riscv.cpp **** 
  65:src/Riscv.cpp ****     neg = 0;
 365              		.loc 1 65 5
  66:src/Riscv.cpp ****     if(num < 0)
 366              		.loc 1 66 5
  67:src/Riscv.cpp ****     {
  68:src/Riscv.cpp ****         neg = 1;
  69:src/Riscv.cpp ****         x = -num;
  70:src/Riscv.cpp ****     }
  71:src/Riscv.cpp ****     else
  72:src/Riscv.cpp ****         x = num;
 367              		.loc 1 72 9
 368              		.loc 1 72 11 is_stmt 0
 369 0160 1B050500 		sext.w	a0,a0
 370              	.LVL21:
  73:src/Riscv.cpp **** 
  74:src/Riscv.cpp ****     i = 0;
 371              		.loc 1 74 5 is_stmt 1
 372              		.loc 1 74 7 is_stmt 0
 373 0164 93040000 		li	s1,0
 374              	.LVL22:
 375              	.L16:
  75:src/Riscv.cpp ****     do
 376              		.loc 1 75 5 is_stmt 1
  76:src/Riscv.cpp ****     {
  77:src/Riscv.cpp ****         buf[i++] = digits[x%10];
 377              		.loc 1 77 9
 378              		.loc 1 77 28 is_stmt 0
 379 0168 1306A000 		li	a2,10
 380 016c 3B77C502 		remuw	a4,a0,a2
 381              	.LVL23:
 382              		.loc 1 77 31
 383 0170 93160702 		slli	a3,a4,32
 384 0174 93D60602 		srli	a3,a3,32
GAS LISTING /tmp/cc0Vska2.s 			page 12


 385 0178 17070000 		lla	a4,.LANCHOR0
 385      13070700 
 386 0180 3307D700 		add	a4,a4,a3
 387 0184 03470700 		lbu	a4,0(a4)
 388              		.loc 1 77 18
 389 0188 930604FE 		addi	a3,s0,-32
 390 018c B3879600 		add	a5,a3,s1
 391 0190 9B841400 		addiw	s1,s1,1
 392              	.LVL24:
 393 0194 2388E7FE 		sb	a4,-16(a5)
  78:src/Riscv.cpp ****     }while((x/=10) != 0);
 394              		.loc 1 78 20 is_stmt 1
 395 0198 1B070500 		sext.w	a4,a0
 396              		.loc 1 78 14 is_stmt 0
 397 019c 3B55C502 		divuw	a0,a0,a2
 398              	.LVL25:
 399              		.loc 1 78 20
 400 01a0 93079000 		li	a5,9
 401 01a4 E3E2E7FC 		bgtu	a4,a5,.L16
 402              	.LVL26:
 403              	.L18:
  79:src/Riscv.cpp ****     if(neg)
  80:src/Riscv.cpp ****         buf[i++] = '-';
  81:src/Riscv.cpp **** 
  82:src/Riscv.cpp ****     while(--i >= 0)
 404              		.loc 1 82 5 is_stmt 1
 405              		.loc 1 82 15
 406 01a8 9B84F4FF 		addiw	s1,s1,-1
 407              	.LVL27:
 408 01ac 63CE0400 		bltz	s1,.L17
  83:src/Riscv.cpp ****         __putc(buf[i]);
 409              		.loc 1 83 9
 410              		.loc 1 83 15 is_stmt 0
 411 01b0 930704FE 		addi	a5,s0,-32
 412 01b4 B3879700 		add	a5,a5,s1
 413 01b8 03C507FF 		lbu	a0,-16(a5)
 414 01bc 97000000 		call	__putc@plt
 414      E7800000 
 415              	.LVL28:
 416 01c4 6FF05FFE 		j	.L18
 417              	.L17:
  84:src/Riscv.cpp **** 
  85:src/Riscv.cpp ****     __putc('\n');
 418              		.loc 1 85 5 is_stmt 1
 419              		.loc 1 85 11 is_stmt 0
 420 01c8 1305A000 		li	a0,10
 421 01cc 97000000 		call	__putc@plt
 421      E7800000 
 422              	.LVL29:
  86:src/Riscv.cpp **** 
  87:src/Riscv.cpp ****     ms_sstatus(sstatus & SSTATUS_SIE ? SSTATUS_SIE : 0);
 423              		.loc 1 87 5 is_stmt 1
 424              		.loc 1 87 38 is_stmt 0
 425 01d4 1B090900 		sext.w	s2,s2
 426              	.LVL30:
 427              		.loc 1 87 15
 428 01d8 13792900 		andi	s2,s2,2
GAS LISTING /tmp/cc0Vska2.s 			page 13


 429 01dc 1B090900 		sext.w	s2,s2
 430              	.LVL31:
 431              	.LBB100:
 432              	.LBB101:
 150:src/../h/Riscv.hpp **** }
 433              		.loc 2 150 5 is_stmt 1
 150:src/../h/Riscv.hpp **** }
 434              		.loc 2 150 54 is_stmt 0
 435              	#APP
 436              	# 150 "src/../h/Riscv.hpp" 1
 437              		csrs sstatus, s2
 438              	# 0 "" 2
 439              	.LVL32:
 440              	#NO_APP
 441              	.LBE101:
 442              	.LBE100:
  88:src/Riscv.cpp **** }
 443              		.loc 1 88 1
 444 01e4 83308103 		ld	ra,56(sp)
 445              		.cfi_restore 1
 446 01e8 03340103 		ld	s0,48(sp)
 447              		.cfi_restore 8
 448              		.cfi_def_cfa 2, 64
 449 01ec 83348102 		ld	s1,40(sp)
 450              		.cfi_restore 9
 451 01f0 03390102 		ld	s2,32(sp)
 452              		.cfi_restore 18
 453 01f4 13010104 		addi	sp,sp,64
 454              		.cfi_def_cfa_offset 0
 455 01f8 67800000 		jr	ra
 456              		.cfi_endproc
 457              	.LFE29:
 459              		.section	.rodata.str1.8,"aMS",@progbits,1
 460              		.align	3
 461              	.LC0:
 462 0000 45786974 		.string	"Exiting thread...\n"
 462      696E6720 
 462      74687265 
 462      61642E2E 
 462      2E0A00
 463              		.text
 464              		.align	2
 465              		.globl	_ZN5Riscv20handleSupervisorTrapEv
 467              	_ZN5Riscv20handleSupervisorTrapEv:
 468              	.LFB30:
  89:src/Riscv.cpp **** 
  90:src/Riscv.cpp **** void Riscv::handleSupervisorTrap()
  91:src/Riscv.cpp **** {
 469              		.loc 1 91 1 is_stmt 1
 470              		.cfi_startproc
 471              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 472              		.cfi_lsda 0x1b,.LLSDA30
 473 01fc 130101F3 		addi	sp,sp,-208
 474              		.cfi_def_cfa_offset 208
 475 0200 2334110C 		sd	ra,200(sp)
 476 0204 2330810C 		sd	s0,192(sp)
 477 0208 233C910A 		sd	s1,184(sp)
GAS LISTING /tmp/cc0Vska2.s 			page 14


 478 020c 2338210B 		sd	s2,176(sp)
 479 0210 2334310B 		sd	s3,168(sp)
 480 0214 2330410B 		sd	s4,160(sp)
 481 0218 233C5109 		sd	s5,152(sp)
 482              		.cfi_offset 1, -8
 483              		.cfi_offset 8, -16
 484              		.cfi_offset 9, -24
 485              		.cfi_offset 18, -32
 486              		.cfi_offset 19, -40
 487              		.cfi_offset 20, -48
 488              		.cfi_offset 21, -56
 489 021c 1304010D 		addi	s0,sp,208
 490              		.cfi_def_cfa 8, 0
  92:src/Riscv.cpp ****     uint64 a4;
 491              		.loc 1 92 5
  93:src/Riscv.cpp ****     __asm__ volatile("mv %0, a4" : "=r"(a4));
 492              		.loc 1 93 5
 493              		.loc 1 93 45 is_stmt 0
 494              	#APP
 495              	# 93 "src/Riscv.cpp" 1
  94              	
 496              		mv s1, a4
 497              	# 0 "" 2
 498              	.LVL33:
  95:src/Riscv.cpp ****     uint64 scause = Riscv::r_scause();
 499              		.loc 1 95 5 is_stmt 1
 500              	#NO_APP
 501              	.LBB102:
 502              	.LBB103:
  92:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
 503              		.loc 2 92 5
  93:src/../h/Riscv.hpp ****     return scause;
 504              		.loc 2 93 5
  93:src/../h/Riscv.hpp ****     return scause;
 505              		.loc 2 93 55 is_stmt 0
 506              	#APP
 507              	# 93 "src/../h/Riscv.hpp" 1
 508              		csrr a5, scause
 509              	# 0 "" 2
 510              	#NO_APP
 511 0228 2330F4F8 		sd	a5,-128(s0)
  94:src/../h/Riscv.hpp **** }
 512              		.loc 2 94 5 is_stmt 1
  94:src/../h/Riscv.hpp **** }
 513              		.loc 2 94 12 is_stmt 0
 514 022c 833704F8 		ld	a5,-128(s0)
 515              	.LVL34:
 516              	.LBE103:
 517              	.LBE102:
  96:src/Riscv.cpp **** 
  97:src/Riscv.cpp ****     switch(scause)
 518              		.loc 1 97 5 is_stmt 1
 519              	.LBB104:
 520 0230 1307F0FF 		li	a4,-1
 521 0234 1317F703 		slli	a4,a4,63
 522 0238 13071700 		addi	a4,a4,1
 523 023c 638AE70E 		beq	a5,a4,.L21
GAS LISTING /tmp/cc0Vska2.s 			page 15


 524 0240 1307F0FF 		li	a4,-1
 525 0244 1317F703 		slli	a4,a4,63
 526 0248 13071700 		addi	a4,a4,1
 527 024c 6364F70A 		bgtu	a5,a4,.L22
 528 0250 938787FF 		addi	a5,a5,-8
 529              	.LVL35:
 530 0254 13071000 		li	a4,1
 531 0258 636AF70A 		bgtu	a5,a4,.L20
 532              	.LBB105:
  98:src/Riscv.cpp ****     {
  99:src/Riscv.cpp **** 
 100:src/Riscv.cpp ****         case timerInterrupt:
 101:src/Riscv.cpp **** 
 102:src/Riscv.cpp ****             Riscv::mc_sip(Riscv::SIP_SSIP);
 103:src/Riscv.cpp ****             //Riscv::printString("timerInterrupt\n");
 104:src/Riscv.cpp ****             static uint64 total = 0;
 105:src/Riscv.cpp ****             total++;
 106:src/Riscv.cpp ****             //Riscv::printInteger(total);
 107:src/Riscv.cpp **** 
 108:src/Riscv.cpp ****             PCB::timeSliceCounter++;
 109:src/Riscv.cpp **** 
 110:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
 111:src/Riscv.cpp **** 
 112:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
 113:src/Riscv.cpp ****             {
 114:src/Riscv.cpp ****                 volatile uint64 sepc = Riscv::r_sepc();
 115:src/Riscv.cpp ****                 volatile uint64 sstatus = Riscv::r_sstatus();
 116:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 117:src/Riscv.cpp ****                 PCB::dispatch();
 118:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 119:src/Riscv.cpp ****                 Riscv::w_sepc(sepc);
 120:src/Riscv.cpp ****             }
 121:src/Riscv.cpp **** 
 122:src/Riscv.cpp ****             return;
 123:src/Riscv.cpp **** 
 124:src/Riscv.cpp ****         case hwInterrupt: // todo
 125:src/Riscv.cpp **** 
 126:src/Riscv.cpp ****             //Riscv::printString("Hardware interrupt...\n");
 127:src/Riscv.cpp ****             console_handler();
 128:src/Riscv.cpp ****             break;
 129:src/Riscv.cpp **** 
 130:src/Riscv.cpp ****         case operationInterrupt: // todo
 131:src/Riscv.cpp ****             break;
 132:src/Riscv.cpp **** 
 133:src/Riscv.cpp ****         case addrReadInterrupt: // todo
 134:src/Riscv.cpp ****             break;
 135:src/Riscv.cpp **** 
 136:src/Riscv.cpp ****         case addrWriteInterrupt: // todo
 137:src/Riscv.cpp ****             break;
 138:src/Riscv.cpp **** 
 139:src/Riscv.cpp ****         case ecallSystemInterupt:
 533              		.loc 1 139 9
 140:src/Riscv.cpp ****         case ecallUserInterrupt:
 534              		.loc 1 140 9
 141:src/Riscv.cpp **** 
 142:src/Riscv.cpp ****             uint64 operation;
 535              		.loc 1 142 13
GAS LISTING /tmp/cc0Vska2.s 			page 16


 143:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
 536              		.loc 1 143 13
 537              		.loc 1 143 61 is_stmt 0
 538              	#APP
 539              	# 143 "src/Riscv.cpp" 1
 144              	
 540              		mv a5, a0
 541              	# 0 "" 2
 542              	.LVL36:
 145:src/Riscv.cpp ****             volatile uint64 sepc = Riscv::r_sepc();
 543              		.loc 1 145 13 is_stmt 1
 544              	#NO_APP
 545              	.LBB106:
 546              	.LBB107:
 102:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 547              		.loc 2 102 5
 103:src/../h/Riscv.hpp ****     return sepc;
 548              		.loc 2 103 5
 103:src/../h/Riscv.hpp ****     return sepc;
 549              		.loc 2 103 51 is_stmt 0
 550              	#APP
 551              	# 103 "src/../h/Riscv.hpp" 1
 552              		csrr a4, sepc
 553              	# 0 "" 2
 554              	#NO_APP
 555 0264 233CE4F8 		sd	a4,-104(s0)
 104:src/../h/Riscv.hpp **** }
 556              		.loc 2 104 5 is_stmt 1
 104:src/../h/Riscv.hpp **** }
 557              		.loc 2 104 12 is_stmt 0
 558 0268 033784F9 		ld	a4,-104(s0)
 559              	.LBE107:
 560              	.LBE106:
 561              		.loc 1 145 50
 562 026c 2334E4F4 		sd	a4,-184(s0)
 146:src/Riscv.cpp ****             sepc+=4;
 563              		.loc 1 146 13 is_stmt 1
 564              		.loc 1 146 17 is_stmt 0
 565 0270 033784F4 		ld	a4,-184(s0)
 566 0274 13074700 		addi	a4,a4,4
 567 0278 2334E4F4 		sd	a4,-184(s0)
 147:src/Riscv.cpp **** 
 148:src/Riscv.cpp ****             if(operation == MemoryAllocator::MEM_ALLOC)
 568              		.loc 1 148 13 is_stmt 1
 569              	.LBB108:
 570 027c 13071000 		li	a4,1
 571 0280 6380E714 		beq	a5,a4,.L45
 572              	.LBE108:
 573              	.LBE105:
 574              	.LBE104:
 149:src/Riscv.cpp ****             {
 150:src/Riscv.cpp ****                 size_t size;
 151:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(size));
 152:src/Riscv.cpp ****                 size*=MEM_BLOCK_SIZE;
 153:src/Riscv.cpp ****                 void* allocatedAddr = kmalloc(size);
 154:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : : "r"((uint64)allocatedAddr));
 155:src/Riscv.cpp ****             }
GAS LISTING /tmp/cc0Vska2.s 			page 17


 156:src/Riscv.cpp ****             else if(operation == MemoryAllocator::MEM_FREE)
 575              		.loc 1 156 18
 576              	.LBB243:
 577              	.LBB231:
 578              	.LBB203:
 579              	.LBB109:
 580 0284 13072000 		li	a4,2
 581 0288 638CE714 		beq	a5,a4,.L46
 582              	.LBE109:
 583              	.LBE203:
 584              	.LBE231:
 585              	.LBE243:
 157:src/Riscv.cpp ****             {
 158:src/Riscv.cpp ****                 uint64 addr = 0;
 159:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(addr));
 160:src/Riscv.cpp ****                 uint64 retval = kfree((void*)addr);
 161:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 162:src/Riscv.cpp ****             }
 163:src/Riscv.cpp ****             else if(operation == PCB::THREAD_CREATE)
 586              		.loc 1 163 18
 587              	.LBB244:
 588              	.LBB232:
 589              	.LBB204:
 590              	.LBB192:
 591              	.LBB110:
 592 028c 13071001 		li	a4,17
 593 0290 6382E716 		beq	a5,a4,.L47
 594              	.LBE110:
 595              	.LBE192:
 596              	.LBE204:
 597              	.LBE232:
 598              	.LBE244:
 164:src/Riscv.cpp ****             {
 165:src/Riscv.cpp ****                 uint64 start_routine;
 166:src/Riscv.cpp ****                 uint64 args;
 167:src/Riscv.cpp ****                 PCB** threadHandle;
 168:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(threadHandle));
 169:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(start_routine));
 170:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a3" : "=r"(args));
 171:src/Riscv.cpp ****                 //todo
 172:src/Riscv.cpp ****                 //uint64 stack_space;
 173:src/Riscv.cpp ****                 //__asm__ volatile("mv %0, a4" : "=r"(stack_space));
 174:src/Riscv.cpp **** 
 175:src/Riscv.cpp ****                 PCB* newPCB = new PCB((void (*)(void*))start_routine, (void*)args, (void*)a4, DEFAU
 176:src/Riscv.cpp **** 
 177:src/Riscv.cpp ****                 (*threadHandle) = newPCB;
 178:src/Riscv.cpp **** 
 179:src/Riscv.cpp ****                 if(newPCB == 0)
 180:src/Riscv.cpp ****                     __asm__ volatile("li a0, 0xffffffffffffffff");
 181:src/Riscv.cpp ****                 else
 182:src/Riscv.cpp ****                     __asm__ volatile("li a0, 0");
 183:src/Riscv.cpp ****             }
 184:src/Riscv.cpp ****             else if(operation == PCB::THREAD_DISPATCH)
 599              		.loc 1 184 18
 600              	.LBB245:
 601              	.LBB233:
 602              	.LBB205:
GAS LISTING /tmp/cc0Vska2.s 			page 18


 603              	.LBB193:
 604              	.LBB182:
 605              	.LBB111:
 606 0294 13073001 		li	a4,19
 607 0298 6384E71A 		beq	a5,a4,.L48
 608              	.LBE111:
 609              	.LBE182:
 610              	.LBE193:
 611              	.LBE205:
 612              	.LBE233:
 613              	.LBE245:
 185:src/Riscv.cpp ****             {
 186:src/Riscv.cpp ****                 volatile uint64 sstatus = Riscv::r_sstatus();
 187:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 188:src/Riscv.cpp ****                 PCB::dispatch();
 189:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 190:src/Riscv.cpp ****             }
 191:src/Riscv.cpp ****             else if(operation == PCB::THREAD_EXIT)
 614              		.loc 1 191 18
 615              	.LBB246:
 616              	.LBB234:
 617              	.LBB206:
 618              	.LBB194:
 619              	.LBB183:
 620              	.LBB171:
 621              	.LBB112:
 622 029c 13072001 		li	a4,18
 623 02a0 6388E71C 		beq	a5,a4,.L49
 624              	.LBE112:
 625              	.LBE171:
 626              	.LBE183:
 627              	.LBE194:
 628              	.LBE206:
 629              	.LBE234:
 630              	.LBE246:
 192:src/Riscv.cpp ****             {
 193:src/Riscv.cpp ****                 Riscv::printString("Exiting thread...\n");
 194:src/Riscv.cpp ****                 volatile uint64 sstatus = Riscv::r_sstatus();
 195:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 196:src/Riscv.cpp ****                 PCB::running->setState(PCB::EXITING);
 197:src/Riscv.cpp ****                 PCB::running->setState(PCB::FINISHED);
 198:src/Riscv.cpp ****                 PCB::dispatch();
 199:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 200:src/Riscv.cpp ****                 __asm__ volatile("li a0, 0");
 201:src/Riscv.cpp ****             }
 202:src/Riscv.cpp ****             else if(operation == PCB::TIME_SLEEP)
 631              		.loc 1 202 18
 632              	.LBB247:
 633              	.LBB235:
 634              	.LBB207:
 635              	.LBB195:
 636              	.LBB184:
 637              	.LBB172:
 638              	.LBB158:
 639              	.LBB113:
 640 02a4 13071003 		li	a4,49
 641 02a8 6380E722 		beq	a5,a4,.L50
GAS LISTING /tmp/cc0Vska2.s 			page 19


 642              	.LBE113:
 643              	.LBE158:
 644              	.LBE172:
 645              	.LBE184:
 646              	.LBE195:
 647              	.LBE207:
 648              	.LBE235:
 649              	.LBE247:
 203:src/Riscv.cpp ****             {
 204:src/Riscv.cpp ****                 uint64 time;
 205:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(time));
 206:src/Riscv.cpp ****                 volatile uint64 sstatus = Riscv::r_sstatus();
 207:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 208:src/Riscv.cpp ****                 PCB::running->setTimeToSleep(time);
 209:src/Riscv.cpp ****                 SleepPCBList::insertSleepingPCB();
 210:src/Riscv.cpp ****                 PCB::dispatch();
 211:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 212:src/Riscv.cpp ****                 __asm__ volatile("li a0, 0x0");
 213:src/Riscv.cpp ****             }
 214:src/Riscv.cpp ****             else if(operation == KSemaphore::SEM_OPEN)
 650              		.loc 1 214 18
 651              	.LBB248:
 652              	.LBB236:
 653              	.LBB208:
 654              	.LBB196:
 655              	.LBB185:
 656              	.LBB173:
 657              	.LBB159:
 658              	.LBB144:
 659              	.LBB114:
 660 02ac 13071002 		li	a4,33
 661 02b0 6384E726 		beq	a5,a4,.L51
 662              	.LBE114:
 663              	.LBE144:
 664              	.LBE159:
 665              	.LBE173:
 666              	.LBE185:
 667              	.LBE196:
 668              	.LBE208:
 669              	.LBE236:
 670              	.LBE248:
 215:src/Riscv.cpp ****             {
 216:src/Riscv.cpp ****                 uint64 val;
 217:src/Riscv.cpp ****                 KSemaphore** semaphoreHandle;
 218:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(semaphoreHandle));
 219:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(val));
 220:src/Riscv.cpp **** 
 221:src/Riscv.cpp ****                 KSemaphore* newSem = new KSemaphore(val);
 222:src/Riscv.cpp **** 
 223:src/Riscv.cpp ****                 (*semaphoreHandle) = newSem;
 224:src/Riscv.cpp **** 
 225:src/Riscv.cpp ****                 if(newSem == 0)
 226:src/Riscv.cpp ****                         __asm__ volatile("li a0, 0xffffffffffffffff");
 227:src/Riscv.cpp ****                 else
 228:src/Riscv.cpp ****                         __asm__ volatile("li a0, 0");
 229:src/Riscv.cpp **** 
 230:src/Riscv.cpp ****             }
GAS LISTING /tmp/cc0Vska2.s 			page 20


 231:src/Riscv.cpp ****             else if(operation == KSemaphore::SEM_WAIT)
 671              		.loc 1 231 18
 672              	.LBB249:
 673              	.LBB237:
 674              	.LBB209:
 675              	.LBB197:
 676              	.LBB186:
 677              	.LBB174:
 678              	.LBB160:
 679              	.LBB145:
 680              	.LBB132:
 681              	.LBB115:
 682 02b4 13073002 		li	a4,35
 683 02b8 638EE728 		beq	a5,a4,.L52
 684              	.LBE115:
 685              	.LBE132:
 686              	.LBE145:
 687              	.LBE160:
 688              	.LBE174:
 689              	.LBE186:
 690              	.LBE197:
 691              	.LBE209:
 692              	.LBE237:
 693              	.LBE249:
 232:src/Riscv.cpp ****             {
 233:src/Riscv.cpp ****                 volatile uint64 sstatus = Riscv::r_sstatus();
 234:src/Riscv.cpp ****                 KSemaphore* kSem;
 235:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(kSem));
 236:src/Riscv.cpp ****                 volatile uint64 retval = kSem->wait();
 237:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 238:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 239:src/Riscv.cpp ****             }
 240:src/Riscv.cpp ****             else if(operation == KSemaphore::SEM_SIGNAL)
 694              		.loc 1 240 18
 695              	.LBB250:
 696              	.LBB238:
 697              	.LBB210:
 698              	.LBB198:
 699              	.LBB187:
 700              	.LBB175:
 701              	.LBB161:
 702              	.LBB146:
 703              	.LBB133:
 704              	.LBB127:
 705              	.LBB116:
 706 02bc 13074002 		li	a4,36
 707 02c0 6384E72C 		beq	a5,a4,.L53
 708              	.LBE116:
 709              	.LBE127:
 710              	.LBE133:
 711              	.LBE146:
 712              	.LBE161:
 713              	.LBE175:
 714              	.LBE187:
 715              	.LBE198:
 716              	.LBE210:
 717              	.LBE238:
GAS LISTING /tmp/cc0Vska2.s 			page 21


 718              	.LBE250:
 241:src/Riscv.cpp ****             {
 242:src/Riscv.cpp ****                 KSemaphore* kSem;
 243:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(kSem));
 244:src/Riscv.cpp ****                 volatile uint64 retval = kSem->signal();
 245:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 246:src/Riscv.cpp ****             }
 247:src/Riscv.cpp ****             else if(operation == KSemaphore::SEM_CLOSE)
 719              		.loc 1 247 18
 720              	.LBB251:
 721              	.LBB239:
 722              	.LBB211:
 723              	.LBB199:
 724              	.LBB188:
 725              	.LBB176:
 726              	.LBB162:
 727              	.LBB147:
 728              	.LBB134:
 729              	.LBB128:
 730              	.LBB120:
 731              	.LBB117:
 732 02c4 13072002 		li	a4,34
 733 02c8 6396E710 		bne	a5,a4,.L27
 734              	.LBB118:
 248:src/Riscv.cpp ****             {
 249:src/Riscv.cpp ****                 KSemaphore* kSem;
 735              		.loc 1 249 17
 250:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(kSem));
 736              		.loc 1 250 17
 737              		.loc 1 250 59 is_stmt 0
 738              	#APP
 739              	# 250 "src/Riscv.cpp" 1
 251              	                delete kSem;
 740              		mv s1, a1
 741              	# 0 "" 2
 742              	.LVL37:
 743              		.loc 1 251 17 is_stmt 1
 744              		.loc 1 251 28 is_stmt 0
 745              	#NO_APP
 746 02d0 638E0400 		beqz	s1,.L38
 747              		.loc 1 251 24 discriminator 1
 748 02d4 13850400 		mv	a0,s1
 749 02d8 97000000 		call	_ZN10KSemaphoreD1Ev@plt
 749      E7800000 
 750              	.LVL38:
 751 02e0 13850400 		mv	a0,s1
 752              	.LEHB0:
 753 02e4 97000000 		call	_ZN10KSemaphoredlEPv@plt
 753      E7800000 
 754              	.LVL39:
 755              	.L38:
 252:src/Riscv.cpp ****                 __asm__ volatile("li a0, 0");
 756              		.loc 1 252 17 is_stmt 1
 757              		.loc 1 252 45 is_stmt 0
 758              	#APP
 759              	# 252 "src/Riscv.cpp" 1
 253              	            }
GAS LISTING /tmp/cc0Vska2.s 			page 22


 760              		li a0, 0
 761              	# 0 "" 2
 762              	#NO_APP
 763              	.LBE118:
 764 02f0 6F00400E 		j	.L27
 765              	.LVL40:
 766              	.L22:
 767              	.LBE117:
 768              	.LBE120:
 769              	.LBE128:
 770              	.LBE134:
 771              	.LBE147:
 772              	.LBE162:
 773              	.LBE176:
 774              	.LBE188:
 775              	.LBE199:
 776              	.LBE211:
 777              	.LBE239:
  97:src/Riscv.cpp ****     {
 778              		.loc 1 97 5
 779 02f4 1307F0FF 		li	a4,-1
 780 02f8 1317F703 		slli	a4,a4,63
 781 02fc 13079700 		addi	a4,a4,9
 782 0300 6396E700 		bne	a5,a4,.L20
 783              	.LBB240:
 124:src/Riscv.cpp **** 
 784              		.loc 1 124 9 is_stmt 1
 127:src/Riscv.cpp ****             break;
 785              		.loc 1 127 13
 127:src/Riscv.cpp ****             break;
 786              		.loc 1 127 28 is_stmt 0
 787 0304 97000000 		call	console_handler@plt
 787      E7800000 
 788              	.LVL41:
 128:src/Riscv.cpp **** 
 789              		.loc 1 128 13 is_stmt 1
 790              	.L20:
 791              	.LBE240:
 792              	.LBE251:
 254:src/Riscv.cpp ****             else if(operation == KConsole::CONSOLE_GETC)
 255:src/Riscv.cpp ****             {
 256:src/Riscv.cpp ****                 //todo
 257:src/Riscv.cpp ****             }
 258:src/Riscv.cpp ****             else if(operation == KConsole::CONSOLE_PUTC)
 259:src/Riscv.cpp ****             {
 260:src/Riscv.cpp ****                 //todo
 261:src/Riscv.cpp ****             }
 262:src/Riscv.cpp **** 
 263:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 264:src/Riscv.cpp **** 
 265:src/Riscv.cpp ****             return;
 266:src/Riscv.cpp ****     }
 267:src/Riscv.cpp **** }
 793              		.loc 1 267 1 is_stmt 0
 794 030c 8330810C 		ld	ra,200(sp)
 795              		.cfi_remember_state
 796              		.cfi_restore 1
GAS LISTING /tmp/cc0Vska2.s 			page 23


 797 0310 0334010C 		ld	s0,192(sp)
 798              		.cfi_restore 8
 799              		.cfi_def_cfa 2, 208
 800 0314 8334810B 		ld	s1,184(sp)
 801              		.cfi_restore 9
 802 0318 0339010B 		ld	s2,176(sp)
 803              		.cfi_restore 18
 804 031c 8339810A 		ld	s3,168(sp)
 805              		.cfi_restore 19
 806 0320 033A010A 		ld	s4,160(sp)
 807              		.cfi_restore 20
 808 0324 833A8109 		ld	s5,152(sp)
 809              		.cfi_restore 21
 810 0328 1301010D 		addi	sp,sp,208
 811              		.cfi_def_cfa_offset 0
 812 032c 67800000 		jr	ra
 813              	.LVL42:
 814              	.L21:
 815              		.cfi_restore_state
 816              	.LBB252:
 817              	.LBB241:
 100:src/Riscv.cpp **** 
 818              		.loc 1 100 9 is_stmt 1
 102:src/Riscv.cpp ****             //Riscv::printString("timerInterrupt\n");
 819              		.loc 1 102 13
 820              	.LBB212:
 821              	.LBB213:
 136:src/../h/Riscv.hpp **** }
 822              		.loc 2 136 5
 136:src/../h/Riscv.hpp **** }
 823              		.loc 2 136 50 is_stmt 0
 824 0330 93072000 		li	a5,2
 825              	.LVL43:
 826              	#APP
 827              	# 136 "src/../h/Riscv.hpp" 1
 828              		csrc sip, a5
 829              	# 0 "" 2
 830              	.LVL44:
 831              	#NO_APP
 832              	.LBE213:
 833              	.LBE212:
 104:src/Riscv.cpp ****             total++;
 834              		.loc 1 104 13 is_stmt 1
 105:src/Riscv.cpp ****             //Riscv::printInteger(total);
 835              		.loc 1 105 13
 105:src/Riscv.cpp ****             //Riscv::printInteger(total);
 836              		.loc 1 105 18 is_stmt 0
 837 0338 17070000 		lla	a4,.LANCHOR1
 837      13070700 
 838 0340 83370700 		ld	a5,0(a4)
 839 0344 93871700 		addi	a5,a5,1
 840 0348 2330F700 		sd	a5,0(a4)
 108:src/Riscv.cpp **** 
 841              		.loc 1 108 13 is_stmt 1
 108:src/Riscv.cpp **** 
 842              		.loc 1 108 34 is_stmt 0
 843 034c 97040000 		la	s1,_ZN3PCB16timeSliceCounterE
GAS LISTING /tmp/cc0Vska2.s 			page 24


 843      83B40400 
 844              	.LVL45:
 845 0354 83B70400 		ld	a5,0(s1)
 846 0358 93871700 		addi	a5,a5,1
 847 035c 23B0F400 		sd	a5,0(s1)
 110:src/Riscv.cpp **** 
 848              		.loc 1 110 13 is_stmt 1
 110:src/Riscv.cpp **** 
 849              		.loc 1 110 40 is_stmt 0
 850 0360 97000000 		call	_ZN12SleepPCBList13tryToWakePCBsEv@plt
 850      E7800000 
 851              	.LVL46:
 112:src/Riscv.cpp ****             {
 852              		.loc 1 112 13 is_stmt 1
 853              	.LBB214:
 112:src/Riscv.cpp ****             {
 854              		.loc 1 112 68 is_stmt 0
 855 0368 97070000 		la	a5,_ZN3PCB7runningE
 855      83B70700 
 856 0370 83B70700 		ld	a5,0(a5)
 857              	.LVL47:
 858              	.LBB215:
 859              	.LBB216:
 860              		.file 3 "src/../h/PCB.hpp"
   1:src/../h/PCB.hpp **** //
   2:src/../h/PCB.hpp **** // Created by os on 4/27/22.
   3:src/../h/PCB.hpp **** //
   4:src/../h/PCB.hpp **** 
   5:src/../h/PCB.hpp **** #ifndef PROJECT_BASE_V1_0_PCB_HPP
   6:src/../h/PCB.hpp **** #define PROJECT_BASE_V1_0_PCB_HPP
   7:src/../h/PCB.hpp **** 
   8:src/../h/PCB.hpp **** #include "../lib/hw.h"
   9:src/../h/PCB.hpp **** #include "Scheduler.hpp"
  10:src/../h/PCB.hpp **** #include "Riscv.hpp"
  11:src/../h/PCB.hpp **** 
  12:src/../h/PCB.hpp **** class PCB
  13:src/../h/PCB.hpp **** {
  14:src/../h/PCB.hpp **** public:
  15:src/../h/PCB.hpp ****     using Body = void (*)(void*);
  16:src/../h/PCB.hpp **** 
  17:src/../h/PCB.hpp ****     PCB(Body body,  void* args, void* stack_space, uint64 timeSlice);
  18:src/../h/PCB.hpp ****     ~PCB();
  19:src/../h/PCB.hpp **** 
  20:src/../h/PCB.hpp ****     void start();
  21:src/../h/PCB.hpp ****     static void dispatch();
  22:src/../h/PCB.hpp ****     static void sleep(time_t);
  23:src/../h/PCB.hpp **** 
  24:src/../h/PCB.hpp ****     static PCB* running;
  25:src/../h/PCB.hpp **** 
  26:src/../h/PCB.hpp ****     static uint64 timeSliceCounter;
  27:src/../h/PCB.hpp ****     uint64 getTimeSlice() { return timeSlice;}
 861              		.loc 3 27 29 is_stmt 1
 862              		.loc 3 27 36 is_stmt 0
 863 0374 83B70701 		ld	a5,16(a5)
 864              	.LVL48:
 865              	.LBE216:
 866              	.LBE215:
GAS LISTING /tmp/cc0Vska2.s 			page 25


 112:src/Riscv.cpp ****             {
 867              		.loc 1 112 39
 868 0378 03B70400 		ld	a4,0(s1)
 112:src/Riscv.cpp ****             {
 869              		.loc 1 112 13
 870 037c E368F7F8 		bltu	a4,a5,.L20
 871              	.LBB217:
 114:src/Riscv.cpp ****                 volatile uint64 sstatus = Riscv::r_sstatus();
 872              		.loc 1 114 17 is_stmt 1
 873              	.LBB218:
 874              	.LBB219:
 102:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 875              		.loc 2 102 5
 103:src/../h/Riscv.hpp ****     return sepc;
 876              		.loc 2 103 5
 103:src/../h/Riscv.hpp ****     return sepc;
 877              		.loc 2 103 51 is_stmt 0
 878              	#APP
 879              	# 103 "src/../h/Riscv.hpp" 1
 880              		csrr a5, sepc
 881              	# 0 "" 2
 882              	#NO_APP
 883 0384 2338F4F8 		sd	a5,-112(s0)
 104:src/../h/Riscv.hpp **** }
 884              		.loc 2 104 5 is_stmt 1
 104:src/../h/Riscv.hpp **** }
 885              		.loc 2 104 12 is_stmt 0
 886 0388 833704F9 		ld	a5,-112(s0)
 887              	.LBE219:
 888              	.LBE218:
 114:src/Riscv.cpp ****                 volatile uint64 sstatus = Riscv::r_sstatus();
 889              		.loc 1 114 54
 890 038c 233CF4F2 		sd	a5,-200(s0)
 115:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 891              		.loc 1 115 17 is_stmt 1
 892              	.LBB220:
 893              	.LBB221:
 158:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 894              		.loc 2 158 5
 159:src/../h/Riscv.hpp ****     return sstatus;
 895              		.loc 2 159 5
 159:src/../h/Riscv.hpp ****     return sstatus;
 896              		.loc 2 159 57 is_stmt 0
 897              	#APP
 898              	# 159 "src/../h/Riscv.hpp" 1
 899              		csrr a5, sstatus
 900              	# 0 "" 2
 901              	#NO_APP
 902 0394 2334F4F8 		sd	a5,-120(s0)
 903              		.loc 2 160 5 is_stmt 1
 904              		.loc 2 160 12 is_stmt 0
 905 0398 833784F8 		ld	a5,-120(s0)
 906              	.LBE221:
 907              	.LBE220:
 115:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 908              		.loc 1 115 60
 909 039c 2330F4F4 		sd	a5,-192(s0)
GAS LISTING /tmp/cc0Vska2.s 			page 26


 116:src/Riscv.cpp ****                 PCB::dispatch();
 910              		.loc 1 116 17 is_stmt 1
 116:src/Riscv.cpp ****                 PCB::dispatch();
 911              		.loc 1 116 39 is_stmt 0
 912 03a0 23B00400 		sd	zero,0(s1)
 117:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 913              		.loc 1 117 17 is_stmt 1
 117:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 914              		.loc 1 117 30 is_stmt 0
 915 03a4 97000000 		call	_ZN3PCB8dispatchEv@plt
 915      E7800000 
 916              	.LVL49:
 118:src/Riscv.cpp ****                 Riscv::w_sepc(sepc);
 917              		.loc 1 118 17 is_stmt 1
 118:src/Riscv.cpp ****                 Riscv::w_sepc(sepc);
 918              		.loc 1 118 33 is_stmt 0
 919 03ac 833704F4 		ld	a5,-192(s0)
 920              	.LVL50:
 921              	.LBB222:
 922              	.LBB223:
 161:src/../h/Riscv.hpp **** }
 162:src/../h/Riscv.hpp **** 
 163:src/../h/Riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus) {
 164:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sstatus, %0" : :"r"(sstatus));
 923              		.loc 2 164 5 is_stmt 1
 924              		.loc 2 164 57 is_stmt 0
 925              	#APP
 926              	# 164 "src/../h/Riscv.hpp" 1
 165              	}
 927              		csrw sstatus, a5
 928              	# 0 "" 2
 929              	.LVL51:
 930              	#NO_APP
 931              	.LBE223:
 932              	.LBE222:
 119:src/Riscv.cpp ****             }
 933              		.loc 1 119 17 is_stmt 1
 119:src/Riscv.cpp ****             }
 934              		.loc 1 119 30 is_stmt 0
 935 03b4 833784F3 		ld	a5,-200(s0)
 936              	.LVL52:
 937              	.LBB224:
 938              	.LBB225:
 108:src/../h/Riscv.hpp **** }
 939              		.loc 2 108 5 is_stmt 1
 108:src/../h/Riscv.hpp **** }
 940              		.loc 2 108 51 is_stmt 0
 941              	#APP
 942              	# 108 "src/../h/Riscv.hpp" 1
 109:src/../h/Riscv.hpp **** 
 943              		csrw sepc, a5
 944              	# 0 "" 2
 945              		.loc 2 109 1
 946              	#NO_APP
 947 03bc 6FF01FF5 		j	.L20
 948              	.LVL53:
 949              	.L45:
GAS LISTING /tmp/cc0Vska2.s 			page 27


 950              	.LBE225:
 951              	.LBE224:
 952              	.LBE217:
 953              	.LBE214:
 954              	.LBB226:
 955              	.LBB200:
 150:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(size));
 956              		.loc 1 150 17 is_stmt 1
 151:src/Riscv.cpp ****                 size*=MEM_BLOCK_SIZE;
 957              		.loc 1 151 17
 151:src/Riscv.cpp ****                 size*=MEM_BLOCK_SIZE;
 958              		.loc 1 151 59 is_stmt 0
 959              	#APP
 960              	# 151 "src/Riscv.cpp" 1
 961              		mv a0, a1
 962              	# 0 "" 2
 963              	.LVL54:
 152:src/Riscv.cpp ****                 void* allocatedAddr = kmalloc(size);
 964              		.loc 1 152 17 is_stmt 1
 153:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : : "r"((uint64)allocatedAddr));
 965              		.loc 1 153 17
 153:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : : "r"((uint64)allocatedAddr));
 966              		.loc 1 153 46 is_stmt 0
 967              	#NO_APP
 968 03c4 13156500 		slli	a0,a0,6
 969              	.LVL55:
 970 03c8 97000000 		call	_Z7kmallocm@plt
 970      E7800000 
 971              	.LVL56:
 154:src/Riscv.cpp ****             }
 972              		.loc 1 154 17 is_stmt 1
 154:src/Riscv.cpp ****             }
 973              		.loc 1 154 76 is_stmt 0
 974              	#APP
 975              	# 154 "src/Riscv.cpp" 1
 976              		mv a0,a0
 977              	# 0 "" 2
 978              	.LVL57:
 979              	#NO_APP
 980              	.L27:
 981              	.LBE200:
 982              	.LBE226:
 263:src/Riscv.cpp **** 
 983              		.loc 1 263 13 is_stmt 1
 263:src/Riscv.cpp **** 
 984              		.loc 1 263 26 is_stmt 0
 985 03d4 833784F4 		ld	a5,-184(s0)
 986              	.LVL58:
 987              	.LBB227:
 988              	.LBB228:
 108:src/../h/Riscv.hpp **** }
 989              		.loc 2 108 5 is_stmt 1
 108:src/../h/Riscv.hpp **** }
 990              		.loc 2 108 51 is_stmt 0
 991              	#APP
 992              	# 108 "src/../h/Riscv.hpp" 1
 993              		csrw sepc, a5
GAS LISTING /tmp/cc0Vska2.s 			page 28


 994              	# 0 "" 2
 995              	.LVL59:
 109:src/../h/Riscv.hpp **** 
 996              		.loc 2 109 1
 997              	#NO_APP
 998 03dc 6FF01FF3 		j	.L20
 999              	.LVL60:
 1000              	.L46:
 1001              	.LBE228:
 1002              	.LBE227:
 1003              	.LBB229:
 1004              	.LBB201:
 1005              	.LBB189:
 158:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(addr));
 1006              		.loc 1 158 17 is_stmt 1
 159:src/Riscv.cpp ****                 uint64 retval = kfree((void*)addr);
 1007              		.loc 1 159 17
 159:src/Riscv.cpp ****                 uint64 retval = kfree((void*)addr);
 1008              		.loc 1 159 59 is_stmt 0
 1009              	#APP
 1010              	# 159 "src/Riscv.cpp" 1
 1011              		mv a0, a1
 1012              	# 0 "" 2
 1013              	.LVL61:
 160:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 1014              		.loc 1 160 17 is_stmt 1
 160:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 1015              		.loc 1 160 38 is_stmt 0
 1016              	#NO_APP
 1017 03e4 97000000 		call	_Z5kfreePv@plt
 1017      E7800000 
 1018              	.LVL62:
 161:src/Riscv.cpp ****             }
 1019              		.loc 1 161 17 is_stmt 1
 161:src/Riscv.cpp ****             }
 1020              		.loc 1 161 60 is_stmt 0
 1021              	#APP
 1022              	# 161 "src/Riscv.cpp" 1
 1023              		mv a0,a0
 1024              	# 0 "" 2
 1025              	#NO_APP
 1026              	.LBE189:
 1027 03f0 6FF05FFE 		j	.L27
 1028              	.LVL63:
 1029              	.L47:
 1030              	.LBB190:
 1031              	.LBB177:
 165:src/Riscv.cpp ****                 uint64 args;
 1032              		.loc 1 165 17 is_stmt 1
 166:src/Riscv.cpp ****                 PCB** threadHandle;
 1033              		.loc 1 166 17
 167:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(threadHandle));
 1034              		.loc 1 167 17
 168:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(start_routine));
 1035              		.loc 1 168 17
 168:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(start_routine));
 1036              		.loc 1 168 67 is_stmt 0
GAS LISTING /tmp/cc0Vska2.s 			page 29


 1037              	#APP
 1038              	# 168 "src/Riscv.cpp" 1
 1039              		mv s3, a1
 1040              	# 0 "" 2
 1041              	.LVL64:
 169:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a3" : "=r"(args));
 1042              		.loc 1 169 17 is_stmt 1
 169:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a3" : "=r"(args));
 1043              		.loc 1 169 68 is_stmt 0
 1044              	# 169 "src/Riscv.cpp" 1
 1045              		mv s4, a2
 1046              	# 0 "" 2
 1047              	.LVL65:
 170:src/Riscv.cpp ****                 //todo
 1048              		.loc 1 170 17 is_stmt 1
 170:src/Riscv.cpp ****                 //todo
 1049              		.loc 1 170 59 is_stmt 0
 1050              	# 170 "src/Riscv.cpp" 1
 1051              		mv s5, a3
 1052              	# 0 "" 2
 1053              	.LVL66:
 175:src/Riscv.cpp **** 
 1054              		.loc 1 175 17 is_stmt 1
 175:src/Riscv.cpp **** 
 1055              		.loc 1 175 113 is_stmt 0
 1056              	#NO_APP
 1057 0400 13050005 		li	a0,80
 1058 0404 97000000 		call	_ZN3PCBnwEm@plt
 1058      E7800000 
 1059              	.LVL67:
 1060              	.LEHE0:
 1061 040c 13090500 		mv	s2,a0
 1062 0410 13072000 		li	a4,2
 1063 0414 93860400 		mv	a3,s1
 1064 0418 13860A00 		mv	a2,s5
 1065 041c 93050A00 		mv	a1,s4
 1066              	.LEHB1:
 1067 0420 97000000 		call	_ZN3PCBC1EPFvPvES0_S0_m@plt
 1067      E7800000 
 1068              	.LVL68:
 1069              	.LEHE1:
 177:src/Riscv.cpp **** 
 1070              		.loc 1 177 17 is_stmt 1 discriminator 2
 177:src/Riscv.cpp **** 
 1071              		.loc 1 177 33 is_stmt 0 discriminator 2
 1072 0428 23B02901 		sd	s2,0(s3)
 179:src/Riscv.cpp ****                     __asm__ volatile("li a0, 0xffffffffffffffff");
 1073              		.loc 1 179 17 is_stmt 1 discriminator 2
 1074 042c 63060900 		beqz	s2,.L54
 182:src/Riscv.cpp ****             }
 1075              		.loc 1 182 21
 182:src/Riscv.cpp ****             }
 1076              		.loc 1 182 49 is_stmt 0
 1077              	#APP
 1078              	# 182 "src/Riscv.cpp" 1
 1079              		li a0, 0
 1080              	# 0 "" 2
GAS LISTING /tmp/cc0Vska2.s 			page 30


 1081              	#NO_APP
 1082 0434 6FF01FFA 		j	.L27
 1083              	.L54:
 180:src/Riscv.cpp ****                 else
 1084              		.loc 1 180 21 is_stmt 1
 180:src/Riscv.cpp ****                 else
 1085              		.loc 1 180 66 is_stmt 0
 1086              	#APP
 1087              	# 180 "src/Riscv.cpp" 1
 1088              		li a0, 0xffffffffffffffff
 1089              	# 0 "" 2
 1090              	#NO_APP
 1091 043c 6FF09FF9 		j	.L27
 1092              	.LVL69:
 1093              	.L48:
 1094              	.LBE177:
 1095              	.LBB178:
 1096              	.LBB163:
 186:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 1097              		.loc 1 186 17 is_stmt 1
 1098              	.LBB164:
 1099              	.LBB165:
 158:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 1100              		.loc 2 158 5
 159:src/../h/Riscv.hpp ****     return sstatus;
 1101              		.loc 2 159 5
 159:src/../h/Riscv.hpp ****     return sstatus;
 1102              		.loc 2 159 57 is_stmt 0
 1103              	#APP
 1104              	# 159 "src/../h/Riscv.hpp" 1
 1105              		csrr a5, sstatus
 1106              	# 0 "" 2
 1107              	.LVL70:
 1108              	#NO_APP
 1109 0444 2330F4FA 		sd	a5,-96(s0)
 160:src/../h/Riscv.hpp **** }
 1110              		.loc 2 160 5 is_stmt 1
 160:src/../h/Riscv.hpp **** }
 1111              		.loc 2 160 12 is_stmt 0
 1112 0448 833704FA 		ld	a5,-96(s0)
 1113              	.LBE165:
 1114              	.LBE164:
 186:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 1115              		.loc 1 186 60
 1116 044c 2338F4F4 		sd	a5,-176(s0)
 187:src/Riscv.cpp ****                 PCB::dispatch();
 1117              		.loc 1 187 17 is_stmt 1
 187:src/Riscv.cpp ****                 PCB::dispatch();
 1118              		.loc 1 187 39 is_stmt 0
 1119 0450 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 1119      83B70700 
 1120 0458 23B00700 		sd	zero,0(a5)
 188:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1121              		.loc 1 188 17 is_stmt 1
 1122              	.LEHB2:
 188:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1123              		.loc 1 188 30 is_stmt 0
GAS LISTING /tmp/cc0Vska2.s 			page 31


 1124 045c 97000000 		call	_ZN3PCB8dispatchEv@plt
 1124      E7800000 
 1125              	.LVL71:
 189:src/Riscv.cpp ****             }
 1126              		.loc 1 189 17 is_stmt 1
 189:src/Riscv.cpp ****             }
 1127              		.loc 1 189 33 is_stmt 0
 1128 0464 833704F5 		ld	a5,-176(s0)
 1129              	.LVL72:
 1130              	.LBB166:
 1131              	.LBB167:
 164:src/../h/Riscv.hpp **** }
 1132              		.loc 2 164 5 is_stmt 1
 164:src/../h/Riscv.hpp **** }
 1133              		.loc 2 164 57 is_stmt 0
 1134              	#APP
 1135              	# 164 "src/../h/Riscv.hpp" 1
 1136              		csrw sstatus, a5
 1137              	# 0 "" 2
 1138              		.loc 2 165 1
 1139              	#NO_APP
 1140 046c 6FF09FF6 		j	.L27
 1141              	.LVL73:
 1142              	.L49:
 1143              	.LBE167:
 1144              	.LBE166:
 1145              	.LBE163:
 1146              	.LBB168:
 1147              	.LBB148:
 193:src/Riscv.cpp ****                 volatile uint64 sstatus = Riscv::r_sstatus();
 1148              		.loc 1 193 17 is_stmt 1
 193:src/Riscv.cpp ****                 volatile uint64 sstatus = Riscv::r_sstatus();
 1149              		.loc 1 193 35 is_stmt 0
 1150 0470 17050000 		lla	a0,.LC0
 1150      13050500 
 1151 0478 97000000 		call	_ZN5Riscv11printStringEPKc
 1151      E7800000 
 1152              	.LVL74:
 194:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 1153              		.loc 1 194 17 is_stmt 1
 1154              	.LBB149:
 1155              	.LBB150:
 158:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 1156              		.loc 2 158 5
 159:src/../h/Riscv.hpp ****     return sstatus;
 1157              		.loc 2 159 5
 159:src/../h/Riscv.hpp ****     return sstatus;
 1158              		.loc 2 159 57 is_stmt 0
 1159              	#APP
 1160              	# 159 "src/../h/Riscv.hpp" 1
 1161              		csrr a5, sstatus
 1162              	# 0 "" 2
 1163              	#NO_APP
 1164 0484 2334F4FA 		sd	a5,-88(s0)
 160:src/../h/Riscv.hpp **** }
 1165              		.loc 2 160 5 is_stmt 1
 160:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/cc0Vska2.s 			page 32


 1166              		.loc 2 160 12 is_stmt 0
 1167 0488 833784FA 		ld	a5,-88(s0)
 1168              	.LBE150:
 1169              	.LBE149:
 194:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 1170              		.loc 1 194 60
 1171 048c 233CF4F4 		sd	a5,-168(s0)
 195:src/Riscv.cpp ****                 PCB::running->setState(PCB::EXITING);
 1172              		.loc 1 195 17 is_stmt 1
 195:src/Riscv.cpp ****                 PCB::running->setState(PCB::EXITING);
 1173              		.loc 1 195 39 is_stmt 0
 1174 0490 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 1174      83B70700 
 1175 0498 23B00700 		sd	zero,0(a5)
 196:src/Riscv.cpp ****                 PCB::running->setState(PCB::FINISHED);
 1176              		.loc 1 196 17 is_stmt 1
 196:src/Riscv.cpp ****                 PCB::running->setState(PCB::FINISHED);
 1177              		.loc 1 196 39 is_stmt 0
 1178 049c 97070000 		la	a5,_ZN3PCB7runningE
 1178      83B70700 
 1179 04a4 83B70700 		ld	a5,0(a5)
 1180              	.LVL75:
 1181              	.LBE148:
 1182              	.LBE168:
 1183              	.LBE178:
 1184              	.LBE190:
 1185              	.LBE201:
 1186              	.LBE229:
 1187              	.LBE241:
 1188              	.LBE252:
  28:src/../h/PCB.hpp **** 
  29:src/../h/PCB.hpp ****     void* operator new(size_t size);
  30:src/../h/PCB.hpp ****     void operator delete(void *p);
  31:src/../h/PCB.hpp **** 
  32:src/../h/PCB.hpp ****     enum State{READY, RUNNING, SUSPENDED, FINISHED, EXITING, SLEEPING};
  33:src/../h/PCB.hpp ****     State getState() {return state;}
  34:src/../h/PCB.hpp ****     void setState(State s) {state = s;}
 1189              		.loc 3 34 29 is_stmt 1
 1190              	.LBB253:
 1191              	.LBB242:
 1192              	.LBB230:
 1193              	.LBB202:
 1194              	.LBB191:
 1195              	.LBB179:
 1196              	.LBB169:
 1197              	.LBB155:
 197:src/Riscv.cpp ****                 PCB::dispatch();
 1198              		.loc 1 197 17
 1199              	.LBB151:
 1200              	.LBB152:
 1201              		.loc 3 34 29
 1202              		.loc 3 34 35 is_stmt 0
 1203 04a8 13073000 		li	a4,3
 1204 04ac 23ACE702 		sw	a4,56(a5)
 1205              	.LVL76:
 1206              	.LBE152:
 1207              	.LBE151:
GAS LISTING /tmp/cc0Vska2.s 			page 33


 198:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1208              		.loc 1 198 17 is_stmt 1
 198:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1209              		.loc 1 198 30 is_stmt 0
 1210 04b0 97000000 		call	_ZN3PCB8dispatchEv@plt
 1210      E7800000 
 1211              	.LVL77:
 199:src/Riscv.cpp ****                 __asm__ volatile("li a0, 0");
 1212              		.loc 1 199 17 is_stmt 1
 199:src/Riscv.cpp ****                 __asm__ volatile("li a0, 0");
 1213              		.loc 1 199 33 is_stmt 0
 1214 04b8 833784F5 		ld	a5,-168(s0)
 1215              	.LVL78:
 1216              	.LBB153:
 1217              	.LBB154:
 164:src/../h/Riscv.hpp **** }
 1218              		.loc 2 164 5 is_stmt 1
 164:src/../h/Riscv.hpp **** }
 1219              		.loc 2 164 57 is_stmt 0
 1220              	#APP
 1221              	# 164 "src/../h/Riscv.hpp" 1
 1222              		csrw sstatus, a5
 1223              	# 0 "" 2
 1224              	.LVL79:
 1225              	#NO_APP
 1226              	.LBE154:
 1227              	.LBE153:
 200:src/Riscv.cpp ****             }
 1228              		.loc 1 200 17 is_stmt 1
 200:src/Riscv.cpp ****             }
 1229              		.loc 1 200 45 is_stmt 0
 1230              	#APP
 1231              	# 200 "src/Riscv.cpp" 1
 1232              		li a0, 0
 1233              	# 0 "" 2
 1234              	#NO_APP
 1235              	.LBE155:
 1236 04c4 6FF01FF1 		j	.L27
 1237              	.LVL80:
 1238              	.L50:
 1239              	.LBB156:
 1240              	.LBB135:
 204:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(time));
 1241              		.loc 1 204 17 is_stmt 1
 205:src/Riscv.cpp ****                 volatile uint64 sstatus = Riscv::r_sstatus();
 1242              		.loc 1 205 17
 205:src/Riscv.cpp ****                 volatile uint64 sstatus = Riscv::r_sstatus();
 1243              		.loc 1 205 59 is_stmt 0
 1244              	#APP
 1245              	# 205 "src/Riscv.cpp" 1
 1246              		mv a4, a1
 1247              	# 0 "" 2
 1248              	.LVL81:
 206:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 1249              		.loc 1 206 17 is_stmt 1
 1250              	#NO_APP
 1251              	.LBB136:
GAS LISTING /tmp/cc0Vska2.s 			page 34


 1252              	.LBB137:
 158:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 1253              		.loc 2 158 5
 159:src/../h/Riscv.hpp ****     return sstatus;
 1254              		.loc 2 159 5
 159:src/../h/Riscv.hpp ****     return sstatus;
 1255              		.loc 2 159 57 is_stmt 0
 1256              	#APP
 1257              	# 159 "src/../h/Riscv.hpp" 1
 1258              		csrr a5, sstatus
 1259              	# 0 "" 2
 1260              	.LVL82:
 1261              	#NO_APP
 1262 04d0 2338F4FA 		sd	a5,-80(s0)
 160:src/../h/Riscv.hpp **** }
 1263              		.loc 2 160 5 is_stmt 1
 160:src/../h/Riscv.hpp **** }
 1264              		.loc 2 160 12 is_stmt 0
 1265 04d4 833704FB 		ld	a5,-80(s0)
 1266              	.LBE137:
 1267              	.LBE136:
 206:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 1268              		.loc 1 206 60
 1269 04d8 2330F4F6 		sd	a5,-160(s0)
 207:src/Riscv.cpp ****                 PCB::running->setTimeToSleep(time);
 1270              		.loc 1 207 17 is_stmt 1
 207:src/Riscv.cpp ****                 PCB::running->setTimeToSleep(time);
 1271              		.loc 1 207 39 is_stmt 0
 1272 04dc 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 1272      83B70700 
 1273 04e4 23B00700 		sd	zero,0(a5)
 208:src/Riscv.cpp ****                 SleepPCBList::insertSleepingPCB();
 1274              		.loc 1 208 17 is_stmt 1
 208:src/Riscv.cpp ****                 SleepPCBList::insertSleepingPCB();
 1275              		.loc 1 208 45 is_stmt 0
 1276 04e8 97070000 		la	a5,_ZN3PCB7runningE
 1276      83B70700 
 1277 04f0 83B70700 		ld	a5,0(a5)
 1278              	.LVL83:
 1279              	.LBB138:
 1280              	.LBB139:
  35:src/../h/PCB.hpp ****     void setTimeToSleep(uint64 time) {timeToSleep = time;}
 1281              		.loc 3 35 39 is_stmt 1
 1282              		.loc 3 35 51 is_stmt 0
 1283 04f4 23BCE700 		sd	a4,24(a5)
 1284              	.LVL84:
 1285              	.LBE139:
 1286              	.LBE138:
 209:src/Riscv.cpp ****                 PCB::dispatch();
 1287              		.loc 1 209 17 is_stmt 1
 209:src/Riscv.cpp ****                 PCB::dispatch();
 1288              		.loc 1 209 48 is_stmt 0
 1289 04f8 97000000 		call	_ZN12SleepPCBList17insertSleepingPCBEv@plt
 1289      E7800000 
 1290              	.LVL85:
 210:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1291              		.loc 1 210 17 is_stmt 1
GAS LISTING /tmp/cc0Vska2.s 			page 35


 210:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1292              		.loc 1 210 30 is_stmt 0
 1293 0500 97000000 		call	_ZN3PCB8dispatchEv@plt
 1293      E7800000 
 1294              	.LVL86:
 211:src/Riscv.cpp ****                 __asm__ volatile("li a0, 0x0");
 1295              		.loc 1 211 17 is_stmt 1
 211:src/Riscv.cpp ****                 __asm__ volatile("li a0, 0x0");
 1296              		.loc 1 211 33 is_stmt 0
 1297 0508 833704F6 		ld	a5,-160(s0)
 1298              	.LVL87:
 1299              	.LBB140:
 1300              	.LBB141:
 164:src/../h/Riscv.hpp **** }
 1301              		.loc 2 164 5 is_stmt 1
 164:src/../h/Riscv.hpp **** }
 1302              		.loc 2 164 57 is_stmt 0
 1303              	#APP
 1304              	# 164 "src/../h/Riscv.hpp" 1
 1305              		csrw sstatus, a5
 1306              	# 0 "" 2
 1307              	.LVL88:
 1308              	#NO_APP
 1309              	.LBE141:
 1310              	.LBE140:
 212:src/Riscv.cpp ****             }
 1311              		.loc 1 212 17 is_stmt 1
 212:src/Riscv.cpp ****             }
 1312              		.loc 1 212 47 is_stmt 0
 1313              	#APP
 1314              	# 212 "src/Riscv.cpp" 1
 1315              		li a0, 0x0
 1316              	# 0 "" 2
 1317              	#NO_APP
 1318              	.LBE135:
 1319 0514 6FF01FEC 		j	.L27
 1320              	.LVL89:
 1321              	.L51:
 1322              	.LBB142:
 1323              	.LBB129:
 216:src/Riscv.cpp ****                 KSemaphore** semaphoreHandle;
 1324              		.loc 1 216 17 is_stmt 1
 217:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(semaphoreHandle));
 1325              		.loc 1 217 17
 218:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(val));
 1326              		.loc 1 218 17
 218:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(val));
 1327              		.loc 1 218 70 is_stmt 0
 1328              	#APP
 1329              	# 218 "src/Riscv.cpp" 1
 1330              		mv s2, a1
 1331              	# 0 "" 2
 1332              	.LVL90:
 219:src/Riscv.cpp **** 
 1333              		.loc 1 219 17 is_stmt 1
 219:src/Riscv.cpp **** 
 1334              		.loc 1 219 58 is_stmt 0
GAS LISTING /tmp/cc0Vska2.s 			page 36


 1335              	# 219 "src/Riscv.cpp" 1
 1336              		mv s3, a2
 1337              	# 0 "" 2
 1338              	.LVL91:
 221:src/Riscv.cpp **** 
 1339              		.loc 1 221 17 is_stmt 1
 221:src/Riscv.cpp **** 
 1340              		.loc 1 221 56 is_stmt 0
 1341              	#NO_APP
 1342 0520 13058001 		li	a0,24
 1343 0524 97000000 		call	_ZN10KSemaphorenwEm@plt
 1343      E7800000 
 1344              	.LVL92:
 1345              	.LEHE2:
 1346 052c 93040500 		mv	s1,a0
 1347              	.LVL93:
 1348 0530 9B850900 		sext.w	a1,s3
 1349              	.LEHB3:
 1350 0534 97000000 		call	_ZN10KSemaphoreC1Ei@plt
 1350      E7800000 
 1351              	.LVL94:
 1352              	.LEHE3:
 223:src/Riscv.cpp **** 
 1353              		.loc 1 223 17 is_stmt 1 discriminator 2
 223:src/Riscv.cpp **** 
 1354              		.loc 1 223 36 is_stmt 0 discriminator 2
 1355 053c 23309900 		sd	s1,0(s2)
 225:src/Riscv.cpp ****                         __asm__ volatile("li a0, 0xffffffffffffffff");
 1356              		.loc 1 225 17 is_stmt 1 discriminator 2
 1357 0540 63860400 		beqz	s1,.L55
 228:src/Riscv.cpp **** 
 1358              		.loc 1 228 25
 228:src/Riscv.cpp **** 
 1359              		.loc 1 228 53 is_stmt 0
 1360              	#APP
 1361              	# 228 "src/Riscv.cpp" 1
 1362              		li a0, 0
 1363              	# 0 "" 2
 1364              	#NO_APP
 1365 0548 6FF0DFE8 		j	.L27
 1366              	.L55:
 226:src/Riscv.cpp ****                 else
 1367              		.loc 1 226 25 is_stmt 1
 226:src/Riscv.cpp ****                 else
 1368              		.loc 1 226 70 is_stmt 0
 1369              	#APP
 1370              	# 226 "src/Riscv.cpp" 1
 1371              		li a0, 0xffffffffffffffff
 1372              	# 0 "" 2
 1373              	#NO_APP
 1374 0550 6FF05FE8 		j	.L27
 1375              	.LVL95:
 1376              	.L52:
 1377              	.LBE129:
 1378              	.LBB130:
 1379              	.LBB121:
 233:src/Riscv.cpp ****                 KSemaphore* kSem;
GAS LISTING /tmp/cc0Vska2.s 			page 37


 1380              		.loc 1 233 17 is_stmt 1
 1381              	.LBB122:
 1382              	.LBB123:
 158:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 1383              		.loc 2 158 5
 159:src/../h/Riscv.hpp ****     return sstatus;
 1384              		.loc 2 159 5
 159:src/../h/Riscv.hpp ****     return sstatus;
 1385              		.loc 2 159 57 is_stmt 0
 1386              	#APP
 1387              	# 159 "src/../h/Riscv.hpp" 1
 1388              		csrr a5, sstatus
 1389              	# 0 "" 2
 1390              	.LVL96:
 1391              	#NO_APP
 1392 0558 233CF4FA 		sd	a5,-72(s0)
 160:src/../h/Riscv.hpp **** }
 1393              		.loc 2 160 5 is_stmt 1
 160:src/../h/Riscv.hpp **** }
 1394              		.loc 2 160 12 is_stmt 0
 1395 055c 833784FB 		ld	a5,-72(s0)
 1396              	.LBE123:
 1397              	.LBE122:
 233:src/Riscv.cpp ****                 KSemaphore* kSem;
 1398              		.loc 1 233 60
 1399 0560 2334F4F6 		sd	a5,-152(s0)
 234:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(kSem));
 1400              		.loc 1 234 17 is_stmt 1
 235:src/Riscv.cpp ****                 volatile uint64 retval = kSem->wait();
 1401              		.loc 1 235 17
 235:src/Riscv.cpp ****                 volatile uint64 retval = kSem->wait();
 1402              		.loc 1 235 59 is_stmt 0
 1403              	#APP
 1404              	# 235 "src/Riscv.cpp" 1
 1405              		mv a0, a1
 1406              	# 0 "" 2
 1407              	.LVL97:
 236:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1408              		.loc 1 236 17 is_stmt 1
 1409              	.LEHB4:
 236:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1410              		.loc 1 236 52 is_stmt 0
 1411              	#NO_APP
 1412 0568 97000000 		call	_ZN10KSemaphore4waitEv@plt
 1412      E7800000 
 1413              	.LVL98:
 236:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1414              		.loc 1 236 53
 1415 0570 2338A4F6 		sd	a0,-144(s0)
 237:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 1416              		.loc 1 237 17 is_stmt 1
 237:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 1417              		.loc 1 237 33 is_stmt 0
 1418 0574 833784F6 		ld	a5,-152(s0)
 1419              	.LVL99:
 1420              	.LBB124:
 1421              	.LBB125:
GAS LISTING /tmp/cc0Vska2.s 			page 38


 164:src/../h/Riscv.hpp **** }
 1422              		.loc 2 164 5 is_stmt 1
 164:src/../h/Riscv.hpp **** }
 1423              		.loc 2 164 57 is_stmt 0
 1424              	#APP
 1425              	# 164 "src/../h/Riscv.hpp" 1
 1426              		csrw sstatus, a5
 1427              	# 0 "" 2
 1428              	.LVL100:
 1429              	#NO_APP
 1430              	.LBE125:
 1431              	.LBE124:
 238:src/Riscv.cpp ****             }
 1432              		.loc 1 238 17 is_stmt 1
 238:src/Riscv.cpp ****             }
 1433              		.loc 1 238 52 is_stmt 0
 1434 057c 833704F7 		ld	a5,-144(s0)
 238:src/Riscv.cpp ****             }
 1435              		.loc 1 238 60
 1436              	#APP
 1437              	# 238 "src/Riscv.cpp" 1
 1438              		mv a0,a5
 1439              	# 0 "" 2
 1440              	#NO_APP
 1441              	.LBE121:
 1442 0584 6FF01FE5 		j	.L27
 1443              	.LVL101:
 1444              	.L53:
 1445              	.LBB126:
 1446              	.LBB119:
 242:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(kSem));
 1447              		.loc 1 242 17 is_stmt 1
 243:src/Riscv.cpp ****                 volatile uint64 retval = kSem->signal();
 1448              		.loc 1 243 17
 243:src/Riscv.cpp ****                 volatile uint64 retval = kSem->signal();
 1449              		.loc 1 243 59 is_stmt 0
 1450              	#APP
 1451              	# 243 "src/Riscv.cpp" 1
 1452              		mv a0, a1
 1453              	# 0 "" 2
 1454              	.LVL102:
 244:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 1455              		.loc 1 244 17 is_stmt 1
 244:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 1456              		.loc 1 244 54 is_stmt 0
 1457              	#NO_APP
 1458 058c 97000000 		call	_ZN10KSemaphore6signalEv@plt
 1458      E7800000 
 1459              	.LVL103:
 1460              	.LEHE4:
 244:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 1461              		.loc 1 244 55
 1462 0594 233CA4F6 		sd	a0,-136(s0)
 245:src/Riscv.cpp ****             }
 1463              		.loc 1 245 17 is_stmt 1
 245:src/Riscv.cpp ****             }
 1464              		.loc 1 245 52 is_stmt 0
GAS LISTING /tmp/cc0Vska2.s 			page 39


 1465 0598 833784F7 		ld	a5,-136(s0)
 245:src/Riscv.cpp ****             }
 1466              		.loc 1 245 60
 1467              	#APP
 1468              	# 245 "src/Riscv.cpp" 1
 1469              		mv a0,a5
 1470              	# 0 "" 2
 1471              	#NO_APP
 1472              	.LBE119:
 1473 05a0 6FF05FE3 		j	.L27
 1474              	.LVL104:
 1475              	.L41:
 1476 05a4 93040500 		mv	s1,a0
 1477              	.LVL105:
 1478              	.LBE126:
 1479              	.LBE130:
 1480              	.LBE142:
 1481              	.LBE156:
 1482              	.LBE169:
 1483              	.LBE179:
 1484              	.LBB180:
 175:src/Riscv.cpp **** 
 1485              		.loc 1 175 113
 1486 05a8 13050900 		mv	a0,s2
 1487 05ac 97000000 		call	_ZN3PCBdlEPv@plt
 1487      E7800000 
 1488              	.LVL106:
 1489 05b4 13850400 		mv	a0,s1
 1490              	.LEHB5:
 1491 05b8 97000000 		call	_Unwind_Resume@plt
 1491      E7800000 
 1492              	.LVL107:
 1493              	.LEHE5:
 1494              	.L42:
 1495 05c0 13090500 		mv	s2,a0
 1496              	.LVL108:
 1497              	.LBE180:
 1498              	.LBB181:
 1499              	.LBB170:
 1500              	.LBB157:
 1501              	.LBB143:
 1502              	.LBB131:
 221:src/Riscv.cpp **** 
 1503              		.loc 1 221 56
 1504 05c4 13850400 		mv	a0,s1
 1505 05c8 97000000 		call	_ZN10KSemaphoredlEPv@plt
 1505      E7800000 
 1506              	.LVL109:
 1507 05d0 13050900 		mv	a0,s2
 1508              	.LEHB6:
 1509 05d4 97000000 		call	_Unwind_Resume@plt
 1509      E7800000 
 1510              	.LVL110:
 1511              	.LEHE6:
 1512              	.LBE131:
 1513              	.LBE143:
 1514              	.LBE157:
GAS LISTING /tmp/cc0Vska2.s 			page 40


 1515              	.LBE170:
 1516              	.LBE181:
 1517              	.LBE191:
 1518              	.LBE202:
 1519              	.LBE230:
 1520              	.LBE242:
 1521              	.LBE253:
 1522              		.cfi_endproc
 1523              	.LFE30:
 1524              		.globl	__gxx_personality_v0
 1525              		.section	.gcc_except_table,"a",@progbits
 1526              	.LLSDA30:
 1527 0000 FF       		.byte	0xff
 1528 0001 FF       		.byte	0xff
 1529 0002 03       		.byte	0x3
 1530 0003 5B       		.byte	0x5b
 1531 0004 00000000 		.4byte	.LEHB0-.LFB30
 1532 0008 00000000 		.4byte	.LEHE0-.LEHB0
 1533 000c 00000000 		.4byte	0
 1534 0010 00       		.byte	0
 1535 0011 00000000 		.4byte	.LEHB1-.LFB30
 1536 0015 00000000 		.4byte	.LEHE1-.LEHB1
 1537 0019 00000000 		.4byte	.L41-.LFB30
 1538 001d 00       		.byte	0
 1539 001e 00000000 		.4byte	.LEHB2-.LFB30
 1540 0022 00000000 		.4byte	.LEHE2-.LEHB2
 1541 0026 00000000 		.4byte	0
 1542 002a 00       		.byte	0
 1543 002b 00000000 		.4byte	.LEHB3-.LFB30
 1544 002f 00000000 		.4byte	.LEHE3-.LEHB3
 1545 0033 00000000 		.4byte	.L42-.LFB30
 1546 0037 00       		.byte	0
 1547 0038 00000000 		.4byte	.LEHB4-.LFB30
 1548 003c 00000000 		.4byte	.LEHE4-.LEHB4
 1549 0040 00000000 		.4byte	0
 1550 0044 00       		.byte	0
 1551 0045 00000000 		.4byte	.LEHB5-.LFB30
 1552 0049 00000000 		.4byte	.LEHE5-.LEHB5
 1553 004d 00000000 		.4byte	0
 1554 0051 00       		.byte	0
 1555 0052 00000000 		.4byte	.LEHB6-.LFB30
 1556 0056 00000000 		.4byte	.LEHE6-.LEHB6
 1557 005a 00000000 		.4byte	0
 1558 005e 00       		.byte	0
 1559              		.text
 1561              		.section	.rodata.str1.8
 1562 0013 00000000 		.align	3
 1562      00
 1563              	.LC1:
 1564 0018 456E642E 		.string	"End..."
 1564      2E2E00
 1565              		.text
 1566              		.align	2
 1567              		.globl	_ZN5Riscv10kernelMainEv
 1569              	_ZN5Riscv10kernelMainEv:
 1570              	.LFB31:
 268:src/Riscv.cpp **** 
GAS LISTING /tmp/cc0Vska2.s 			page 41


 269:src/Riscv.cpp **** void Riscv::kernelMain()
 270:src/Riscv.cpp **** {
 1571              		.loc 1 270 1 is_stmt 1
 1572              		.cfi_startproc
 1573 05dc 130101FF 		addi	sp,sp,-16
 1574              		.cfi_def_cfa_offset 16
 1575 05e0 23341100 		sd	ra,8(sp)
 1576 05e4 23308100 		sd	s0,0(sp)
 1577              		.cfi_offset 1, -8
 1578              		.cfi_offset 8, -16
 1579 05e8 13040101 		addi	s0,sp,16
 1580              		.cfi_def_cfa 8, 0
 271:src/Riscv.cpp ****     initSystem();
 1581              		.loc 1 271 5
 1582              		.loc 1 271 15 is_stmt 0
 1583 05ec 97000000 		call	_ZN5Riscv10initSystemEv
 1583      E7800000 
 1584              	.LVL111:
 272:src/Riscv.cpp **** 
 273:src/Riscv.cpp ****     enableInterrupts();
 1585              		.loc 1 273 5 is_stmt 1
 1586              		.loc 1 273 21 is_stmt 0
 1587 05f4 97000000 		call	_ZN5Riscv16enableInterruptsEv
 1587      E7800000 
 1588              	.LVL112:
 274:src/Riscv.cpp **** 
 275:src/Riscv.cpp ****     //PCB* userPCB = new PCB(&Riscv::userMainWrapper, 0, kmalloc(DEFAULT_STACK_SIZE), DEFAULT_TIME_
 276:src/Riscv.cpp **** 
 277:src/Riscv.cpp ****     //while(userPCB->getState() != PCB::FINISHED)
 278:src/Riscv.cpp ****     //{
 279:src/Riscv.cpp ****     //    thread_dispatch();
 280:src/Riscv.cpp ****     //}
 281:src/Riscv.cpp **** 
 282:src/Riscv.cpp ****     myTests();
 1589              		.loc 1 282 5 is_stmt 1
 1590              		.loc 1 282 12 is_stmt 0
 1591 05fc 97000000 		call	_Z7myTestsv@plt
 1591      E7800000 
 1592              	.LVL113:
 283:src/Riscv.cpp **** 
 284:src/Riscv.cpp ****     disableInterrupts();
 1593              		.loc 1 284 5 is_stmt 1
 1594              		.loc 1 284 22 is_stmt 0
 1595 0604 97000000 		call	_ZN5Riscv17disableInterruptsEv
 1595      E7800000 
 1596              	.LVL114:
 285:src/Riscv.cpp **** 
 286:src/Riscv.cpp ****     endSystem();
 1597              		.loc 1 286 5 is_stmt 1
 1598              		.loc 1 286 14 is_stmt 0
 1599 060c 97000000 		call	_ZN5Riscv9endSystemEv
 1599      E7800000 
 1600              	.LVL115:
 287:src/Riscv.cpp **** 
 288:src/Riscv.cpp ****     Riscv::printString("End...");
 1601              		.loc 1 288 5 is_stmt 1
 1602              		.loc 1 288 23 is_stmt 0
GAS LISTING /tmp/cc0Vska2.s 			page 42


 1603 0614 17050000 		lla	a0,.LC1
 1603      13050500 
 1604 061c 97000000 		call	_ZN5Riscv11printStringEPKc
 1604      E7800000 
 1605              	.LVL116:
 289:src/Riscv.cpp **** }
 1606              		.loc 1 289 1
 1607 0624 83308100 		ld	ra,8(sp)
 1608              		.cfi_restore 1
 1609 0628 03340100 		ld	s0,0(sp)
 1610              		.cfi_restore 8
 1611              		.cfi_def_cfa 2, 16
 1612 062c 13010101 		addi	sp,sp,16
 1613              		.cfi_def_cfa_offset 0
 1614 0630 67800000 		jr	ra
 1615              		.cfi_endproc
 1616              	.LFE31:
 1618              		.align	2
 1619              		.globl	_ZN5Riscv15userMainWrapperEPv
 1621              	_ZN5Riscv15userMainWrapperEPv:
 1622              	.LFB32:
 290:src/Riscv.cpp **** 
 291:src/Riscv.cpp **** void Riscv::userMainWrapper(void* ) {
 1623              		.loc 1 291 37 is_stmt 1
 1624              		.cfi_startproc
 1625 0634 130101FF 		addi	sp,sp,-16
 1626              		.cfi_def_cfa_offset 16
 1627 0638 23341100 		sd	ra,8(sp)
 1628 063c 23308100 		sd	s0,0(sp)
 1629              		.cfi_offset 1, -8
 1630              		.cfi_offset 8, -16
 1631 0640 13040101 		addi	s0,sp,16
 1632              		.cfi_def_cfa 8, 0
 292:src/Riscv.cpp ****     userMain();
 1633              		.loc 1 292 5
 1634              		.loc 1 292 13 is_stmt 0
 1635 0644 97000000 		call	_Z8userMainv@plt
 1635      E7800000 
 1636              	.LVL117:
 293:src/Riscv.cpp **** }
 1637              		.loc 1 293 1
 1638 064c 83308100 		ld	ra,8(sp)
 1639              		.cfi_restore 1
 1640 0650 03340100 		ld	s0,0(sp)
 1641              		.cfi_restore 8
 1642              		.cfi_def_cfa 2, 16
 1643 0654 13010101 		addi	sp,sp,16
 1644              		.cfi_def_cfa_offset 0
 1645 0658 67800000 		jr	ra
 1646              		.cfi_endproc
 1647              	.LFE32:
 1649              		.section	.rodata
 1650              		.align	3
 1651              		.set	.LANCHOR0,. + 0
 1654              	_ZZN5Riscv12printIntegerEmE6digits:
 1655 0000 30313233 		.string	"0123456789"
 1655      34353637 
GAS LISTING /tmp/cc0Vska2.s 			page 43


 1655      383900
 1656              		.bss
 1657              		.align	3
 1658              		.set	.LANCHOR1,. + 0
 1661              	_ZZN5Riscv20handleSupervisorTrapEvE5total:
 1662 0000 00000000 		.zero	8
 1662      00000000 
 1663              		.text
 1664              	.Letext0:
 1665              		.file 4 "src/../h/../lib/hw.h"
 1666              		.file 5 "src/../h/KSemaphore.hpp"
 1667              		.file 6 "src/../h/SleepPCBList.hpp"
 1668              		.file 7 "src/../h/KConsole.hpp"
 1669              		.file 8 "src/../test/userMain.hpp"
 1670              		.file 9 "src/../h/Tests.hpp"
 1671              		.file 10 "src/../h/MemoryAllocator.hpp"
 1672              		.file 11 "src/../lib/console.h"
 6546              		.align	3
 6549              	DW.ref.__gxx_personality_v0:
 6550 0000 00000000 		.dword	__gxx_personality_v0
 6550      00000000 
 6551              		.ident	"GCC: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0"
 6552              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/cc0Vska2.s 			page 44


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Riscv.cpp
     /tmp/cc0Vska2.s:9      .text:0000000000000000 _ZN5Riscv10initSystemEv
     /tmp/cc0Vska2.s:13     .text:0000000000000000 .L0 
     /tmp/cc0Vska2.s:14     .text:0000000000000000 .L0 
     /tmp/cc0Vska2.s:15     .text:0000000000000004 .L0 
     /tmp/cc0Vska2.s:18     .text:000000000000000c .L0 
     /tmp/cc0Vska2.s:19     .text:000000000000000c .L0 
     /tmp/cc0Vska2.s:21     .text:0000000000000010 .L0 
     /tmp/cc0Vska2.s:23     .text:0000000000000010 .L0 
     /tmp/cc0Vska2.s:24     .text:0000000000000010 .L0 
     /tmp/cc0Vska2.s:30     .text:0000000000000018 .L0 
  src/../h/Riscv.hpp:118    .text:0000000000000018 .L0 
     /tmp/cc0Vska2.s:40     .text:000000000000001c .L0 
     /tmp/cc0Vska2.s:41     .text:000000000000001c .L0 
     /tmp/cc0Vska2.s:44     .text:0000000000000024 .L0 
     /tmp/cc0Vska2.s:45     .text:0000000000000024 .L0 
     /tmp/cc0Vska2.s:48     .text:000000000000002c .L0 
     /tmp/cc0Vska2.s:49     .text:0000000000000030 .L0 
     /tmp/cc0Vska2.s:51     .text:0000000000000034 .L0 
     /tmp/cc0Vska2.s:52     .text:0000000000000034 .L0 
     /tmp/cc0Vska2.s:54     .text:0000000000000038 .L0 
     /tmp/cc0Vska2.s:56     .text:000000000000003c .L0 
     /tmp/cc0Vska2.s:62     .text:000000000000003c _ZN5Riscv16enableInterruptsEv
     /tmp/cc0Vska2.s:65     .text:000000000000003c .L0 
     /tmp/cc0Vska2.s:66     .text:000000000000003c .L0 
     /tmp/cc0Vska2.s:67     .text:0000000000000040 .L0 
     /tmp/cc0Vska2.s:69     .text:0000000000000044 .L0 
     /tmp/cc0Vska2.s:71     .text:0000000000000048 .L0 
     /tmp/cc0Vska2.s:76     .text:0000000000000048 .L0 
     /tmp/cc0Vska2.s:77     .text:0000000000000048 .L0 
     /tmp/cc0Vska2.s:78     .text:0000000000000048 .L0 
     /tmp/cc0Vska2.s:88     .text:0000000000000050 .L0 
     /tmp/cc0Vska2.s:89     .text:0000000000000054 .L0 
     /tmp/cc0Vska2.s:90     .text:0000000000000054 .L0 
     /tmp/cc0Vska2.s:92     .text:0000000000000058 .L0 
     /tmp/cc0Vska2.s:94     .text:000000000000005c .L0 
     /tmp/cc0Vska2.s:100    .text:000000000000005c _ZN5Riscv17disableInterruptsEv
     /tmp/cc0Vska2.s:103    .text:000000000000005c .L0 
     /tmp/cc0Vska2.s:104    .text:000000000000005c .L0 
     /tmp/cc0Vska2.s:105    .text:0000000000000060 .L0 
     /tmp/cc0Vska2.s:107    .text:0000000000000064 .L0 
     /tmp/cc0Vska2.s:109    .text:0000000000000068 .L0 
     /tmp/cc0Vska2.s:114    .text:0000000000000068 .L0 
     /tmp/cc0Vska2.s:115    .text:0000000000000068 .L0 
     /tmp/cc0Vska2.s:116    .text:0000000000000068 .L0 
     /tmp/cc0Vska2.s:126    .text:0000000000000070 .L0 
     /tmp/cc0Vska2.s:127    .text:0000000000000074 .L0 
     /tmp/cc0Vska2.s:128    .text:0000000000000074 .L0 
     /tmp/cc0Vska2.s:130    .text:0000000000000078 .L0 
     /tmp/cc0Vska2.s:132    .text:000000000000007c .L0 
     /tmp/cc0Vska2.s:138    .text:000000000000007c _ZN5Riscv9endSystemEv
     /tmp/cc0Vska2.s:141    .text:000000000000007c .L0 
     /tmp/cc0Vska2.s:142    .text:000000000000007c .L0 
     /tmp/cc0Vska2.s:143    .text:0000000000000080 .L0 
     /tmp/cc0Vska2.s:146    .text:0000000000000088 .L0 
     /tmp/cc0Vska2.s:147    .text:0000000000000088 .L0 
GAS LISTING /tmp/cc0Vska2.s 			page 45


     /tmp/cc0Vska2.s:149    .text:000000000000008c .L0 
     /tmp/cc0Vska2.s:151    .text:000000000000008c .L0 
     /tmp/cc0Vska2.s:152    .text:000000000000008c .L0 
     /tmp/cc0Vska2.s:155    .text:0000000000000094 .L0 
     /tmp/cc0Vska2.s:156    .text:0000000000000098 .L0 
     /tmp/cc0Vska2.s:158    .text:000000000000009c .L0 
     /tmp/cc0Vska2.s:159    .text:000000000000009c .L0 
     /tmp/cc0Vska2.s:161    .text:00000000000000a0 .L0 
     /tmp/cc0Vska2.s:163    .text:00000000000000a4 .L0 
     /tmp/cc0Vska2.s:169    .text:00000000000000a4 _ZN5Riscv10popSppSpieEv
     /tmp/cc0Vska2.s:172    .text:00000000000000a4 .L0 
     /tmp/cc0Vska2.s:173    .text:00000000000000a4 .L0 
     /tmp/cc0Vska2.s:174    .text:00000000000000a8 .L0 
     /tmp/cc0Vska2.s:176    .text:00000000000000ac .L0 
     /tmp/cc0Vska2.s:178    .text:00000000000000b0 .L0 
     /tmp/cc0Vska2.s:180    .text:00000000000000b0 .L0 
       src/Riscv.cpp:40     .text:00000000000000b0 .L0 
     /tmp/cc0Vska2.s:186    .text:00000000000000b4 .L0 
       src/Riscv.cpp:41     .text:00000000000000b4 .L0 
     /tmp/cc0Vska2.s:192    .text:00000000000000b8 .L0 
     /tmp/cc0Vska2.s:193    .text:00000000000000bc .L0 
     /tmp/cc0Vska2.s:194    .text:00000000000000bc .L0 
     /tmp/cc0Vska2.s:196    .text:00000000000000c0 .L0 
     /tmp/cc0Vska2.s:198    .text:00000000000000c4 .L0 
     /tmp/cc0Vska2.s:204    .text:00000000000000c4 _ZN5Riscv11printStringEPKc
     /tmp/cc0Vska2.s:207    .text:00000000000000c4 .L0 
     /tmp/cc0Vska2.s:209    .text:00000000000000c4 .L0 
     /tmp/cc0Vska2.s:210    .text:00000000000000c8 .L0 
     /tmp/cc0Vska2.s:215    .text:00000000000000d8 .L0 
     /tmp/cc0Vska2.s:216    .text:00000000000000d8 .L0 
     /tmp/cc0Vska2.s:217    .text:00000000000000d8 .L0 
     /tmp/cc0Vska2.s:218    .text:00000000000000d8 .L0 
     /tmp/cc0Vska2.s:220    .text:00000000000000dc .L0 
     /tmp/cc0Vska2.s:225    .text:00000000000000e0 .L0 
     /tmp/cc0Vska2.s:226    .text:00000000000000e0 .L0 
     /tmp/cc0Vska2.s:227    .text:00000000000000e0 .L0 
  src/../h/Riscv.hpp:159    .text:00000000000000e0 .L0 
     /tmp/cc0Vska2.s:235    .text:00000000000000e8 .L0 
     /tmp/cc0Vska2.s:236    .text:00000000000000e8 .L0 
     /tmp/cc0Vska2.s:243    .text:00000000000000ec .L0 
     /tmp/cc0Vska2.s:244    .text:00000000000000ec .L0 
     /tmp/cc0Vska2.s:245    .text:00000000000000ec .L0 
     /tmp/cc0Vska2.s:256    .text:00000000000000f4 .L0 
     /tmp/cc0Vska2.s:257    .text:00000000000000f4 .L0 
     /tmp/cc0Vska2.s:258    .text:00000000000000f4 .L0 
     /tmp/cc0Vska2.s:260    .text:00000000000000f8 .L0 
     /tmp/cc0Vska2.s:262    .text:00000000000000fc .L0 
     /tmp/cc0Vska2.s:263    .text:00000000000000fc .L0 
     /tmp/cc0Vska2.s:266    .text:0000000000000104 .L0 
     /tmp/cc0Vska2.s:267    .text:0000000000000104 .L0 
     /tmp/cc0Vska2.s:270    .text:0000000000000108 .L0 
     /tmp/cc0Vska2.s:273    .text:000000000000010c .L0 
     /tmp/cc0Vska2.s:274    .text:000000000000010c .L0 
     /tmp/cc0Vska2.s:277    .text:0000000000000110 .L0 
     /tmp/cc0Vska2.s:283    .text:0000000000000118 .L0 
  src/../h/Riscv.hpp:150    .text:0000000000000118 .L0 
     /tmp/cc0Vska2.s:293    .text:000000000000011c .L0 
GAS LISTING /tmp/cc0Vska2.s 			page 46


     /tmp/cc0Vska2.s:294    .text:0000000000000120 .L0 
     /tmp/cc0Vska2.s:296    .text:0000000000000124 .L0 
     /tmp/cc0Vska2.s:297    .text:0000000000000124 .L0 
     /tmp/cc0Vska2.s:299    .text:0000000000000128 .L0 
     /tmp/cc0Vska2.s:302    .text:000000000000012c .L0 
     /tmp/cc0Vska2.s:304    .text:0000000000000130 .L0 
     /tmp/cc0Vska2.s:306    .text:0000000000000134 .L0 
     /tmp/cc0Vska2.s:312    .text:0000000000000134 _ZN5Riscv12printIntegerEm
     /tmp/cc0Vska2.s:315    .text:0000000000000134 .L0 
     /tmp/cc0Vska2.s:317    .text:0000000000000134 .L0 
     /tmp/cc0Vska2.s:318    .text:0000000000000138 .L0 
     /tmp/cc0Vska2.s:323    .text:0000000000000148 .L0 
     /tmp/cc0Vska2.s:324    .text:0000000000000148 .L0 
     /tmp/cc0Vska2.s:325    .text:0000000000000148 .L0 
     /tmp/cc0Vska2.s:326    .text:0000000000000148 .L0 
     /tmp/cc0Vska2.s:328    .text:000000000000014c .L0 
     /tmp/cc0Vska2.s:332    .text:000000000000014c .L0 
     /tmp/cc0Vska2.s:333    .text:000000000000014c .L0 
     /tmp/cc0Vska2.s:334    .text:000000000000014c .L0 
  src/../h/Riscv.hpp:159    .text:000000000000014c .L0 
     /tmp/cc0Vska2.s:342    .text:0000000000000154 .L0 
     /tmp/cc0Vska2.s:343    .text:0000000000000154 .L0 
     /tmp/cc0Vska2.s:350    .text:0000000000000158 .L0 
     /tmp/cc0Vska2.s:351    .text:0000000000000158 .L0 
     /tmp/cc0Vska2.s:352    .text:0000000000000158 .L0 
     /tmp/cc0Vska2.s:362    .text:0000000000000160 .L0 
     /tmp/cc0Vska2.s:363    .text:0000000000000160 .L0 
     /tmp/cc0Vska2.s:364    .text:0000000000000160 .L0 
     /tmp/cc0Vska2.s:365    .text:0000000000000160 .L0 
     /tmp/cc0Vska2.s:366    .text:0000000000000160 .L0 
     /tmp/cc0Vska2.s:367    .text:0000000000000160 .L0 
     /tmp/cc0Vska2.s:368    .text:0000000000000160 .L0 
     /tmp/cc0Vska2.s:369    .text:0000000000000160 .L0 
     /tmp/cc0Vska2.s:372    .text:0000000000000164 .L0 
     /tmp/cc0Vska2.s:373    .text:0000000000000164 .L0 
     /tmp/cc0Vska2.s:377    .text:0000000000000168 .L0 
     /tmp/cc0Vska2.s:378    .text:0000000000000168 .L0 
     /tmp/cc0Vska2.s:379    .text:0000000000000168 .L0 
     /tmp/cc0Vska2.s:383    .text:0000000000000170 .L0 
     /tmp/cc0Vska2.s:389    .text:0000000000000188 .L0 
     /tmp/cc0Vska2.s:395    .text:0000000000000198 .L0 
     /tmp/cc0Vska2.s:397    .text:000000000000019c .L0 
     /tmp/cc0Vska2.s:400    .text:00000000000001a0 .L0 
     /tmp/cc0Vska2.s:405    .text:00000000000001a8 .L0 
     /tmp/cc0Vska2.s:406    .text:00000000000001a8 .L0 
     /tmp/cc0Vska2.s:410    .text:00000000000001b0 .L0 
     /tmp/cc0Vska2.s:411    .text:00000000000001b0 .L0 
     /tmp/cc0Vska2.s:419    .text:00000000000001c8 .L0 
     /tmp/cc0Vska2.s:420    .text:00000000000001c8 .L0 
     /tmp/cc0Vska2.s:424    .text:00000000000001d4 .L0 
     /tmp/cc0Vska2.s:425    .text:00000000000001d4 .L0 
     /tmp/cc0Vska2.s:428    .text:00000000000001d8 .L0 
     /tmp/cc0Vska2.s:434    .text:00000000000001e0 .L0 
  src/../h/Riscv.hpp:150    .text:00000000000001e0 .L0 
     /tmp/cc0Vska2.s:444    .text:00000000000001e4 .L0 
     /tmp/cc0Vska2.s:445    .text:00000000000001e8 .L0 
     /tmp/cc0Vska2.s:447    .text:00000000000001ec .L0 
GAS LISTING /tmp/cc0Vska2.s 			page 47


     /tmp/cc0Vska2.s:448    .text:00000000000001ec .L0 
     /tmp/cc0Vska2.s:450    .text:00000000000001f0 .L0 
     /tmp/cc0Vska2.s:452    .text:00000000000001f4 .L0 
     /tmp/cc0Vska2.s:454    .text:00000000000001f8 .L0 
     /tmp/cc0Vska2.s:456    .text:00000000000001fc .L0 
     /tmp/cc0Vska2.s:467    .text:00000000000001fc _ZN5Riscv20handleSupervisorTrapEv
     /tmp/cc0Vska2.s:470    .text:00000000000001fc .L0 
     /tmp/cc0Vska2.s:6549   .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/cc0Vska2.s:473    .text:00000000000001fc .L0 
     /tmp/cc0Vska2.s:474    .text:0000000000000200 .L0 
     /tmp/cc0Vska2.s:482    .text:000000000000021c .L0 
     /tmp/cc0Vska2.s:483    .text:000000000000021c .L0 
     /tmp/cc0Vska2.s:484    .text:000000000000021c .L0 
     /tmp/cc0Vska2.s:485    .text:000000000000021c .L0 
     /tmp/cc0Vska2.s:486    .text:000000000000021c .L0 
     /tmp/cc0Vska2.s:487    .text:000000000000021c .L0 
     /tmp/cc0Vska2.s:488    .text:000000000000021c .L0 
     /tmp/cc0Vska2.s:490    .text:0000000000000220 .L0 
     /tmp/cc0Vska2.s:492    .text:0000000000000220 .L0 
     /tmp/cc0Vska2.s:493    .text:0000000000000220 .L0 
       src/Riscv.cpp:93     .text:0000000000000220 .L0 
     /tmp/cc0Vska2.s:503    .text:0000000000000224 .L0 
     /tmp/cc0Vska2.s:504    .text:0000000000000224 .L0 
     /tmp/cc0Vska2.s:505    .text:0000000000000224 .L0 
  src/../h/Riscv.hpp:93     .text:0000000000000224 .L0 
     /tmp/cc0Vska2.s:513    .text:000000000000022c .L0 
     /tmp/cc0Vska2.s:514    .text:000000000000022c .L0 
     /tmp/cc0Vska2.s:520    .text:0000000000000230 .L0 
     /tmp/cc0Vska2.s:534    .text:000000000000025c .L0 
     /tmp/cc0Vska2.s:535    .text:000000000000025c .L0 
     /tmp/cc0Vska2.s:536    .text:000000000000025c .L0 
     /tmp/cc0Vska2.s:537    .text:000000000000025c .L0 
       src/Riscv.cpp:143    .text:000000000000025c .L0 
     /tmp/cc0Vska2.s:547    .text:0000000000000260 .L0 
     /tmp/cc0Vska2.s:548    .text:0000000000000260 .L0 
     /tmp/cc0Vska2.s:549    .text:0000000000000260 .L0 
  src/../h/Riscv.hpp:103    .text:0000000000000260 .L0 
     /tmp/cc0Vska2.s:557    .text:0000000000000268 .L0 
     /tmp/cc0Vska2.s:558    .text:0000000000000268 .L0 
     /tmp/cc0Vska2.s:562    .text:000000000000026c .L0 
     /tmp/cc0Vska2.s:564    .text:0000000000000270 .L0 
     /tmp/cc0Vska2.s:565    .text:0000000000000270 .L0 
     /tmp/cc0Vska2.s:570    .text:000000000000027c .L0 
     /tmp/cc0Vska2.s:580    .text:0000000000000284 .L0 
     /tmp/cc0Vska2.s:592    .text:000000000000028c .L0 
     /tmp/cc0Vska2.s:606    .text:0000000000000294 .L0 
     /tmp/cc0Vska2.s:622    .text:000000000000029c .L0 
     /tmp/cc0Vska2.s:640    .text:00000000000002a4 .L0 
     /tmp/cc0Vska2.s:660    .text:00000000000002ac .L0 
     /tmp/cc0Vska2.s:682    .text:00000000000002b4 .L0 
     /tmp/cc0Vska2.s:706    .text:00000000000002bc .L0 
     /tmp/cc0Vska2.s:732    .text:00000000000002c4 .L0 
     /tmp/cc0Vska2.s:736    .text:00000000000002cc .L0 
     /tmp/cc0Vska2.s:737    .text:00000000000002cc .L0 
       src/Riscv.cpp:250    .text:00000000000002cc .L0 
     /tmp/cc0Vska2.s:744    .text:00000000000002d0 .L0 
     /tmp/cc0Vska2.s:746    .text:00000000000002d0 .L0 
GAS LISTING /tmp/cc0Vska2.s 			page 48


     /tmp/cc0Vska2.s:748    .text:00000000000002d4 .L0 
     /tmp/cc0Vska2.s:757    .text:00000000000002ec .L0 
       src/Riscv.cpp:252    .text:00000000000002ec .L0 
     /tmp/cc0Vska2.s:779    .text:00000000000002f4 .L0 
     /tmp/cc0Vska2.s:785    .text:0000000000000304 .L0 
     /tmp/cc0Vska2.s:786    .text:0000000000000304 .L0 
     /tmp/cc0Vska2.s:787    .text:0000000000000304 .L0 
     /tmp/cc0Vska2.s:793    .text:000000000000030c .L0 
     /tmp/cc0Vska2.s:794    .text:000000000000030c .L0 
     /tmp/cc0Vska2.s:795    .text:0000000000000310 .L0 
     /tmp/cc0Vska2.s:796    .text:0000000000000310 .L0 
     /tmp/cc0Vska2.s:798    .text:0000000000000314 .L0 
     /tmp/cc0Vska2.s:799    .text:0000000000000314 .L0 
     /tmp/cc0Vska2.s:801    .text:0000000000000318 .L0 
     /tmp/cc0Vska2.s:803    .text:000000000000031c .L0 
     /tmp/cc0Vska2.s:805    .text:0000000000000320 .L0 
     /tmp/cc0Vska2.s:807    .text:0000000000000324 .L0 
     /tmp/cc0Vska2.s:809    .text:0000000000000328 .L0 
     /tmp/cc0Vska2.s:811    .text:000000000000032c .L0 
     /tmp/cc0Vska2.s:815    .text:0000000000000330 .L0 
     /tmp/cc0Vska2.s:819    .text:0000000000000330 .L0 
     /tmp/cc0Vska2.s:822    .text:0000000000000330 .L0 
     /tmp/cc0Vska2.s:823    .text:0000000000000330 .L0 
     /tmp/cc0Vska2.s:824    .text:0000000000000330 .L0 
     /tmp/cc0Vska2.s:835    .text:0000000000000338 .L0 
     /tmp/cc0Vska2.s:836    .text:0000000000000338 .L0 
     /tmp/cc0Vska2.s:837    .text:0000000000000338 .L0 
     /tmp/cc0Vska2.s:842    .text:000000000000034c .L0 
     /tmp/cc0Vska2.s:843    .text:000000000000034c .L0 
     /tmp/cc0Vska2.s:849    .text:0000000000000360 .L0 
     /tmp/cc0Vska2.s:850    .text:0000000000000360 .L0 
     /tmp/cc0Vska2.s:854    .text:0000000000000368 .L0 
     /tmp/cc0Vska2.s:855    .text:0000000000000368 .L0 
     /tmp/cc0Vska2.s:862    .text:0000000000000374 .L0 
     /tmp/cc0Vska2.s:863    .text:0000000000000374 .L0 
     /tmp/cc0Vska2.s:868    .text:0000000000000378 .L0 
     /tmp/cc0Vska2.s:870    .text:000000000000037c .L0 
     /tmp/cc0Vska2.s:875    .text:0000000000000380 .L0 
     /tmp/cc0Vska2.s:876    .text:0000000000000380 .L0 
     /tmp/cc0Vska2.s:877    .text:0000000000000380 .L0 
  src/../h/Riscv.hpp:103    .text:0000000000000380 .L0 
     /tmp/cc0Vska2.s:885    .text:0000000000000388 .L0 
     /tmp/cc0Vska2.s:886    .text:0000000000000388 .L0 
     /tmp/cc0Vska2.s:890    .text:000000000000038c .L0 
     /tmp/cc0Vska2.s:894    .text:0000000000000390 .L0 
     /tmp/cc0Vska2.s:895    .text:0000000000000390 .L0 
     /tmp/cc0Vska2.s:896    .text:0000000000000390 .L0 
  src/../h/Riscv.hpp:159    .text:0000000000000390 .L0 
     /tmp/cc0Vska2.s:904    .text:0000000000000398 .L0 
     /tmp/cc0Vska2.s:905    .text:0000000000000398 .L0 
     /tmp/cc0Vska2.s:909    .text:000000000000039c .L0 
     /tmp/cc0Vska2.s:911    .text:00000000000003a0 .L0 
     /tmp/cc0Vska2.s:912    .text:00000000000003a0 .L0 
     /tmp/cc0Vska2.s:914    .text:00000000000003a4 .L0 
     /tmp/cc0Vska2.s:915    .text:00000000000003a4 .L0 
     /tmp/cc0Vska2.s:918    .text:00000000000003ac .L0 
     /tmp/cc0Vska2.s:919    .text:00000000000003ac .L0 
GAS LISTING /tmp/cc0Vska2.s 			page 49


     /tmp/cc0Vska2.s:924    .text:00000000000003b0 .L0 
  src/../h/Riscv.hpp:164    .text:00000000000003b0 .L0 
     /tmp/cc0Vska2.s:934    .text:00000000000003b4 .L0 
     /tmp/cc0Vska2.s:935    .text:00000000000003b4 .L0 
     /tmp/cc0Vska2.s:940    .text:00000000000003b8 .L0 
  src/../h/Riscv.hpp:108    .text:00000000000003b8 .L0 
     /tmp/cc0Vska2.s:947    .text:00000000000003bc .L0 
     /tmp/cc0Vska2.s:957    .text:00000000000003c0 .L0 
     /tmp/cc0Vska2.s:958    .text:00000000000003c0 .L0 
       src/Riscv.cpp:151    .text:00000000000003c0 .L0 
     /tmp/cc0Vska2.s:965    .text:00000000000003c4 .L0 
     /tmp/cc0Vska2.s:966    .text:00000000000003c4 .L0 
     /tmp/cc0Vska2.s:968    .text:00000000000003c4 .L0 
     /tmp/cc0Vska2.s:973    .text:00000000000003d0 .L0 
       src/Riscv.cpp:154    .text:00000000000003d0 .L0 
     /tmp/cc0Vska2.s:984    .text:00000000000003d4 .L0 
     /tmp/cc0Vska2.s:985    .text:00000000000003d4 .L0 
     /tmp/cc0Vska2.s:990    .text:00000000000003d8 .L0 
  src/../h/Riscv.hpp:108    .text:00000000000003d8 .L0 
     /tmp/cc0Vska2.s:998    .text:00000000000003dc .L0 
     /tmp/cc0Vska2.s:1007   .text:00000000000003e0 .L0 
     /tmp/cc0Vska2.s:1008   .text:00000000000003e0 .L0 
       src/Riscv.cpp:159    .text:00000000000003e0 .L0 
     /tmp/cc0Vska2.s:1015   .text:00000000000003e4 .L0 
     /tmp/cc0Vska2.s:1017   .text:00000000000003e4 .L0 
     /tmp/cc0Vska2.s:1020   .text:00000000000003ec .L0 
       src/Riscv.cpp:161    .text:00000000000003ec .L0 
     /tmp/cc0Vska2.s:1033   .text:00000000000003f4 .L0 
     /tmp/cc0Vska2.s:1034   .text:00000000000003f4 .L0 
     /tmp/cc0Vska2.s:1035   .text:00000000000003f4 .L0 
     /tmp/cc0Vska2.s:1036   .text:00000000000003f4 .L0 
       src/Riscv.cpp:168    .text:00000000000003f4 .L0 
     /tmp/cc0Vska2.s:1043   .text:00000000000003f8 .L0 
       src/Riscv.cpp:169    .text:00000000000003f8 .L0 
     /tmp/cc0Vska2.s:1049   .text:00000000000003fc .L0 
       src/Riscv.cpp:170    .text:00000000000003fc .L0 
     /tmp/cc0Vska2.s:1055   .text:0000000000000400 .L0 
     /tmp/cc0Vska2.s:1057   .text:0000000000000400 .L0 
     /tmp/cc0Vska2.s:1071   .text:0000000000000428 .L0 
     /tmp/cc0Vska2.s:1072   .text:0000000000000428 .L0 
     /tmp/cc0Vska2.s:1074   .text:000000000000042c .L0 
     /tmp/cc0Vska2.s:1076   .text:0000000000000430 .L0 
       src/Riscv.cpp:182    .text:0000000000000430 .L0 
     /tmp/cc0Vska2.s:1085   .text:0000000000000438 .L0 
       src/Riscv.cpp:180    .text:0000000000000438 .L0 
     /tmp/cc0Vska2.s:1100   .text:0000000000000440 .L0 
     /tmp/cc0Vska2.s:1101   .text:0000000000000440 .L0 
     /tmp/cc0Vska2.s:1102   .text:0000000000000440 .L0 
  src/../h/Riscv.hpp:159    .text:0000000000000440 .L0 
     /tmp/cc0Vska2.s:1111   .text:0000000000000448 .L0 
     /tmp/cc0Vska2.s:1112   .text:0000000000000448 .L0 
     /tmp/cc0Vska2.s:1116   .text:000000000000044c .L0 
     /tmp/cc0Vska2.s:1118   .text:0000000000000450 .L0 
     /tmp/cc0Vska2.s:1119   .text:0000000000000450 .L0 
     /tmp/cc0Vska2.s:1123   .text:000000000000045c .L0 
     /tmp/cc0Vska2.s:1124   .text:000000000000045c .L0 
     /tmp/cc0Vska2.s:1127   .text:0000000000000464 .L0 
GAS LISTING /tmp/cc0Vska2.s 			page 50


     /tmp/cc0Vska2.s:1128   .text:0000000000000464 .L0 
     /tmp/cc0Vska2.s:1133   .text:0000000000000468 .L0 
  src/../h/Riscv.hpp:164    .text:0000000000000468 .L0 
     /tmp/cc0Vska2.s:1140   .text:000000000000046c .L0 
     /tmp/cc0Vska2.s:1149   .text:0000000000000470 .L0 
     /tmp/cc0Vska2.s:1150   .text:0000000000000470 .L0 
     /tmp/cc0Vska2.s:1156   .text:0000000000000480 .L0 
     /tmp/cc0Vska2.s:1157   .text:0000000000000480 .L0 
     /tmp/cc0Vska2.s:1158   .text:0000000000000480 .L0 
  src/../h/Riscv.hpp:159    .text:0000000000000480 .L0 
     /tmp/cc0Vska2.s:1166   .text:0000000000000488 .L0 
     /tmp/cc0Vska2.s:1167   .text:0000000000000488 .L0 
     /tmp/cc0Vska2.s:1171   .text:000000000000048c .L0 
     /tmp/cc0Vska2.s:1173   .text:0000000000000490 .L0 
     /tmp/cc0Vska2.s:1174   .text:0000000000000490 .L0 
     /tmp/cc0Vska2.s:1177   .text:000000000000049c .L0 
     /tmp/cc0Vska2.s:1178   .text:000000000000049c .L0 
     /tmp/cc0Vska2.s:1198   .text:00000000000004a8 .L0 
     /tmp/cc0Vska2.s:1201   .text:00000000000004a8 .L0 
     /tmp/cc0Vska2.s:1202   .text:00000000000004a8 .L0 
     /tmp/cc0Vska2.s:1203   .text:00000000000004a8 .L0 
     /tmp/cc0Vska2.s:1209   .text:00000000000004b0 .L0 
     /tmp/cc0Vska2.s:1210   .text:00000000000004b0 .L0 
     /tmp/cc0Vska2.s:1213   .text:00000000000004b8 .L0 
     /tmp/cc0Vska2.s:1214   .text:00000000000004b8 .L0 
     /tmp/cc0Vska2.s:1219   .text:00000000000004bc .L0 
  src/../h/Riscv.hpp:164    .text:00000000000004bc .L0 
     /tmp/cc0Vska2.s:1229   .text:00000000000004c0 .L0 
       src/Riscv.cpp:200    .text:00000000000004c0 .L0 
     /tmp/cc0Vska2.s:1242   .text:00000000000004c8 .L0 
     /tmp/cc0Vska2.s:1243   .text:00000000000004c8 .L0 
       src/Riscv.cpp:205    .text:00000000000004c8 .L0 
     /tmp/cc0Vska2.s:1253   .text:00000000000004cc .L0 
     /tmp/cc0Vska2.s:1254   .text:00000000000004cc .L0 
     /tmp/cc0Vska2.s:1255   .text:00000000000004cc .L0 
  src/../h/Riscv.hpp:159    .text:00000000000004cc .L0 
     /tmp/cc0Vska2.s:1264   .text:00000000000004d4 .L0 
     /tmp/cc0Vska2.s:1265   .text:00000000000004d4 .L0 
     /tmp/cc0Vska2.s:1269   .text:00000000000004d8 .L0 
     /tmp/cc0Vska2.s:1271   .text:00000000000004dc .L0 
     /tmp/cc0Vska2.s:1272   .text:00000000000004dc .L0 
     /tmp/cc0Vska2.s:1275   .text:00000000000004e8 .L0 
     /tmp/cc0Vska2.s:1276   .text:00000000000004e8 .L0 
     /tmp/cc0Vska2.s:1282   .text:00000000000004f4 .L0 
     /tmp/cc0Vska2.s:1283   .text:00000000000004f4 .L0 
     /tmp/cc0Vska2.s:1288   .text:00000000000004f8 .L0 
     /tmp/cc0Vska2.s:1289   .text:00000000000004f8 .L0 
     /tmp/cc0Vska2.s:1292   .text:0000000000000500 .L0 
     /tmp/cc0Vska2.s:1293   .text:0000000000000500 .L0 
     /tmp/cc0Vska2.s:1296   .text:0000000000000508 .L0 
     /tmp/cc0Vska2.s:1297   .text:0000000000000508 .L0 
     /tmp/cc0Vska2.s:1302   .text:000000000000050c .L0 
  src/../h/Riscv.hpp:164    .text:000000000000050c .L0 
     /tmp/cc0Vska2.s:1312   .text:0000000000000510 .L0 
       src/Riscv.cpp:212    .text:0000000000000510 .L0 
     /tmp/cc0Vska2.s:1325   .text:0000000000000518 .L0 
     /tmp/cc0Vska2.s:1326   .text:0000000000000518 .L0 
GAS LISTING /tmp/cc0Vska2.s 			page 51


     /tmp/cc0Vska2.s:1327   .text:0000000000000518 .L0 
       src/Riscv.cpp:218    .text:0000000000000518 .L0 
     /tmp/cc0Vska2.s:1334   .text:000000000000051c .L0 
       src/Riscv.cpp:219    .text:000000000000051c .L0 
     /tmp/cc0Vska2.s:1340   .text:0000000000000520 .L0 
     /tmp/cc0Vska2.s:1342   .text:0000000000000520 .L0 
     /tmp/cc0Vska2.s:1354   .text:000000000000053c .L0 
     /tmp/cc0Vska2.s:1355   .text:000000000000053c .L0 
     /tmp/cc0Vska2.s:1357   .text:0000000000000540 .L0 
     /tmp/cc0Vska2.s:1359   .text:0000000000000544 .L0 
       src/Riscv.cpp:228    .text:0000000000000544 .L0 
     /tmp/cc0Vska2.s:1368   .text:000000000000054c .L0 
       src/Riscv.cpp:226    .text:000000000000054c .L0 
     /tmp/cc0Vska2.s:1383   .text:0000000000000554 .L0 
     /tmp/cc0Vska2.s:1384   .text:0000000000000554 .L0 
     /tmp/cc0Vska2.s:1385   .text:0000000000000554 .L0 
  src/../h/Riscv.hpp:159    .text:0000000000000554 .L0 
     /tmp/cc0Vska2.s:1394   .text:000000000000055c .L0 
     /tmp/cc0Vska2.s:1395   .text:000000000000055c .L0 
     /tmp/cc0Vska2.s:1399   .text:0000000000000560 .L0 
     /tmp/cc0Vska2.s:1401   .text:0000000000000564 .L0 
     /tmp/cc0Vska2.s:1402   .text:0000000000000564 .L0 
       src/Riscv.cpp:235    .text:0000000000000564 .L0 
     /tmp/cc0Vska2.s:1410   .text:0000000000000568 .L0 
     /tmp/cc0Vska2.s:1412   .text:0000000000000568 .L0 
     /tmp/cc0Vska2.s:1415   .text:0000000000000570 .L0 
     /tmp/cc0Vska2.s:1417   .text:0000000000000574 .L0 
     /tmp/cc0Vska2.s:1418   .text:0000000000000574 .L0 
     /tmp/cc0Vska2.s:1423   .text:0000000000000578 .L0 
  src/../h/Riscv.hpp:164    .text:0000000000000578 .L0 
     /tmp/cc0Vska2.s:1433   .text:000000000000057c .L0 
     /tmp/cc0Vska2.s:1434   .text:000000000000057c .L0 
       src/Riscv.cpp:238    .text:0000000000000580 .L0 
     /tmp/cc0Vska2.s:1448   .text:0000000000000588 .L0 
     /tmp/cc0Vska2.s:1449   .text:0000000000000588 .L0 
       src/Riscv.cpp:243    .text:0000000000000588 .L0 
     /tmp/cc0Vska2.s:1456   .text:000000000000058c .L0 
     /tmp/cc0Vska2.s:1458   .text:000000000000058c .L0 
     /tmp/cc0Vska2.s:1462   .text:0000000000000594 .L0 
     /tmp/cc0Vska2.s:1464   .text:0000000000000598 .L0 
     /tmp/cc0Vska2.s:1465   .text:0000000000000598 .L0 
       src/Riscv.cpp:245    .text:000000000000059c .L0 
     /tmp/cc0Vska2.s:1486   .text:00000000000005a8 .L0 
     /tmp/cc0Vska2.s:1504   .text:00000000000005c4 .L0 
     /tmp/cc0Vska2.s:1522   .text:00000000000005dc .L0 
     /tmp/cc0Vska2.s:1569   .text:00000000000005dc _ZN5Riscv10kernelMainEv
     /tmp/cc0Vska2.s:1572   .text:00000000000005dc .L0 
     /tmp/cc0Vska2.s:1573   .text:00000000000005dc .L0 
     /tmp/cc0Vska2.s:1574   .text:00000000000005e0 .L0 
     /tmp/cc0Vska2.s:1577   .text:00000000000005e8 .L0 
     /tmp/cc0Vska2.s:1578   .text:00000000000005e8 .L0 
     /tmp/cc0Vska2.s:1580   .text:00000000000005ec .L0 
     /tmp/cc0Vska2.s:1582   .text:00000000000005ec .L0 
     /tmp/cc0Vska2.s:1583   .text:00000000000005ec .L0 
     /tmp/cc0Vska2.s:1586   .text:00000000000005f4 .L0 
     /tmp/cc0Vska2.s:1587   .text:00000000000005f4 .L0 
     /tmp/cc0Vska2.s:1590   .text:00000000000005fc .L0 
GAS LISTING /tmp/cc0Vska2.s 			page 52


     /tmp/cc0Vska2.s:1591   .text:00000000000005fc .L0 
     /tmp/cc0Vska2.s:1594   .text:0000000000000604 .L0 
     /tmp/cc0Vska2.s:1595   .text:0000000000000604 .L0 
     /tmp/cc0Vska2.s:1598   .text:000000000000060c .L0 
     /tmp/cc0Vska2.s:1599   .text:000000000000060c .L0 
     /tmp/cc0Vska2.s:1602   .text:0000000000000614 .L0 
     /tmp/cc0Vska2.s:1603   .text:0000000000000614 .L0 
     /tmp/cc0Vska2.s:1607   .text:0000000000000624 .L0 
     /tmp/cc0Vska2.s:1608   .text:0000000000000628 .L0 
     /tmp/cc0Vska2.s:1610   .text:000000000000062c .L0 
     /tmp/cc0Vska2.s:1611   .text:000000000000062c .L0 
     /tmp/cc0Vska2.s:1613   .text:0000000000000630 .L0 
     /tmp/cc0Vska2.s:1615   .text:0000000000000634 .L0 
     /tmp/cc0Vska2.s:1621   .text:0000000000000634 _ZN5Riscv15userMainWrapperEPv
     /tmp/cc0Vska2.s:1624   .text:0000000000000634 .L0 
     /tmp/cc0Vska2.s:1625   .text:0000000000000634 .L0 
     /tmp/cc0Vska2.s:1626   .text:0000000000000638 .L0 
     /tmp/cc0Vska2.s:1629   .text:0000000000000640 .L0 
     /tmp/cc0Vska2.s:1630   .text:0000000000000640 .L0 
     /tmp/cc0Vska2.s:1632   .text:0000000000000644 .L0 
     /tmp/cc0Vska2.s:1634   .text:0000000000000644 .L0 
     /tmp/cc0Vska2.s:1635   .text:0000000000000644 .L0 
     /tmp/cc0Vska2.s:1638   .text:000000000000064c .L0 
     /tmp/cc0Vska2.s:1639   .text:0000000000000650 .L0 
     /tmp/cc0Vska2.s:1641   .text:0000000000000654 .L0 
     /tmp/cc0Vska2.s:1642   .text:0000000000000654 .L0 
     /tmp/cc0Vska2.s:1644   .text:0000000000000658 .L0 
     /tmp/cc0Vska2.s:1646   .text:000000000000065c .L0 
     /tmp/cc0Vska2.s:1651   .rodata:0000000000000000 .LANCHOR0
     /tmp/cc0Vska2.s:1654   .rodata:0000000000000000 _ZZN5Riscv12printIntegerEmE6digits
     /tmp/cc0Vska2.s:1658   .bss:0000000000000000 .LANCHOR1
     /tmp/cc0Vska2.s:1661   .bss:0000000000000000 _ZZN5Riscv20handleSupervisorTrapEvE5total
     /tmp/cc0Vska2.s:1673   .text:000000000000065c .L0 
     /tmp/cc0Vska2.s:24     .text:0000000000000010 .L0 
     /tmp/cc0Vska2.s:385    .text:0000000000000178 .L0 
     /tmp/cc0Vska2.s:837    .text:0000000000000338 .L0 
     /tmp/cc0Vska2.s:843    .text:000000000000034c .L0 
     /tmp/cc0Vska2.s:855    .text:0000000000000368 .L0 
     /tmp/cc0Vska2.s:1119   .text:0000000000000450 .L0 
     /tmp/cc0Vska2.s:461    .rodata.str1.8:0000000000000000 .LC0
     /tmp/cc0Vska2.s:1150   .text:0000000000000470 .L0 
     /tmp/cc0Vska2.s:1174   .text:0000000000000490 .L0 
     /tmp/cc0Vska2.s:1178   .text:000000000000049c .L0 
     /tmp/cc0Vska2.s:1272   .text:00000000000004dc .L0 
     /tmp/cc0Vska2.s:1276   .text:00000000000004e8 .L0 
     /tmp/cc0Vska2.s:1563   .rodata.str1.8:0000000000000018 .LC1
     /tmp/cc0Vska2.s:1603   .text:0000000000000614 .L0 
     /tmp/cc0Vska2.s:271    .text:000000000000010c .L12
     /tmp/cc0Vska2.s:252    .text:00000000000000f4 .L13
     /tmp/cc0Vska2.s:375    .text:0000000000000168 .L16
     /tmp/cc0Vska2.s:417    .text:00000000000001c8 .L17
     /tmp/cc0Vska2.s:403    .text:00000000000001a8 .L18
     /tmp/cc0Vska2.s:814    .text:0000000000000330 .L21
     /tmp/cc0Vska2.s:766    .text:00000000000002f4 .L22
     /tmp/cc0Vska2.s:790    .text:000000000000030c .L20
     /tmp/cc0Vska2.s:949    .text:00000000000003c0 .L45
     /tmp/cc0Vska2.s:1000   .text:00000000000003e0 .L46
GAS LISTING /tmp/cc0Vska2.s 			page 53


     /tmp/cc0Vska2.s:1029   .text:00000000000003f4 .L47
     /tmp/cc0Vska2.s:1093   .text:0000000000000440 .L48
     /tmp/cc0Vska2.s:1142   .text:0000000000000470 .L49
     /tmp/cc0Vska2.s:1238   .text:00000000000004c8 .L50
     /tmp/cc0Vska2.s:1321   .text:0000000000000518 .L51
     /tmp/cc0Vska2.s:1376   .text:0000000000000554 .L52
     /tmp/cc0Vska2.s:1444   .text:0000000000000588 .L53
     /tmp/cc0Vska2.s:980    .text:00000000000003d4 .L27
     /tmp/cc0Vska2.s:755    .text:00000000000002ec .L38
     /tmp/cc0Vska2.s:1083   .text:0000000000000438 .L54
     /tmp/cc0Vska2.s:1366   .text:000000000000054c .L55
     /tmp/cc0Vska2.s:752    .text:00000000000002e4 .LEHB0
     /tmp/cc0Vska2.s:468    .text:00000000000001fc .LFB30
     /tmp/cc0Vska2.s:1060   .text:000000000000040c .LEHE0
     /tmp/cc0Vska2.s:1066   .text:0000000000000420 .LEHB1
     /tmp/cc0Vska2.s:1069   .text:0000000000000428 .LEHE1
     /tmp/cc0Vska2.s:1475   .text:00000000000005a4 .L41
     /tmp/cc0Vska2.s:1122   .text:000000000000045c .LEHB2
     /tmp/cc0Vska2.s:1345   .text:000000000000052c .LEHE2
     /tmp/cc0Vska2.s:1349   .text:0000000000000534 .LEHB3
     /tmp/cc0Vska2.s:1352   .text:000000000000053c .LEHE3
     /tmp/cc0Vska2.s:1494   .text:00000000000005c0 .L42
     /tmp/cc0Vska2.s:1409   .text:0000000000000568 .LEHB4
     /tmp/cc0Vska2.s:1460   .text:0000000000000594 .LEHE4
     /tmp/cc0Vska2.s:1490   .text:00000000000005b8 .LEHB5
     /tmp/cc0Vska2.s:1493   .text:00000000000005c0 .LEHE5
     /tmp/cc0Vska2.s:1508   .text:00000000000005d4 .LEHB6
     /tmp/cc0Vska2.s:1511   .text:00000000000005dc .LEHE6
     /tmp/cc0Vska2.s:4314   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cc0Vska2.s:6087   .debug_str:00000000000001e3 .LASF246
     /tmp/cc0Vska2.s:6117   .debug_str:0000000000000379 .LASF247
     /tmp/cc0Vska2.s:6453   .debug_str:0000000000000d4a .LASF248
     /tmp/cc0Vska2.s:5      .text:0000000000000000 .Ltext0
     /tmp/cc0Vska2.s:1664   .text:000000000000065c .Letext0
     /tmp/cc0Vska2.s:6031   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cc0Vska2.s:6211   .debug_str:0000000000000647 .LASF0
     /tmp/cc0Vska2.s:6363   .debug_str:0000000000000aeb .LASF3
     /tmp/cc0Vska2.s:6249   .debug_str:0000000000000787 .LASF1
     /tmp/cc0Vska2.s:6375   .debug_str:0000000000000b32 .LASF2
     /tmp/cc0Vska2.s:6391   .debug_str:0000000000000bb2 .LASF4
     /tmp/cc0Vska2.s:6229   .debug_str:00000000000006d4 .LASF5
     /tmp/cc0Vska2.s:6051   .debug_str:000000000000007b .LASF6
     /tmp/cc0Vska2.s:6345   .debug_str:0000000000000a72 .LASF7
     /tmp/cc0Vska2.s:6333   .debug_str:0000000000000a27 .LASF8
     /tmp/cc0Vska2.s:6239   .debug_str:000000000000074e .LASF9
     /tmp/cc0Vska2.s:6183   .debug_str:0000000000000574 .LASF10
     /tmp/cc0Vska2.s:6191   .debug_str:00000000000005c4 .LASF11
     /tmp/cc0Vska2.s:6103   .debug_str:000000000000032a .LASF12
     /tmp/cc0Vska2.s:6173   .debug_str:000000000000053c .LASF13
     /tmp/cc0Vska2.s:6119   .debug_str:0000000000000387 .LASF14
     /tmp/cc0Vska2.s:6101   .debug_str:000000000000031a .LASF15
     /tmp/cc0Vska2.s:6425   .debug_str:0000000000000cb6 .LASF16
     /tmp/cc0Vska2.s:6155   .debug_str:0000000000000476 .LASF17
     /tmp/cc0Vska2.s:6415   .debug_str:0000000000000c5e .LASF18
     /tmp/cc0Vska2.s:6489   .debug_str:0000000000000e51 .LASF95
     /tmp/cc0Vska2.s:6357   .debug_str:0000000000000ac1 .LASF22
     /tmp/cc0Vska2.s:6255   .debug_str:00000000000007a9 .LASF19
GAS LISTING /tmp/cc0Vska2.s 			page 54


     /tmp/cc0Vska2.s:6163   .debug_str:00000000000004cc .LASF20
     /tmp/cc0Vska2.s:6505   .debug_str:0000000000000ec9 .LASF21
     /tmp/cc0Vska2.s:6475   .debug_str:0000000000000de4 .LASF23
     /tmp/cc0Vska2.s:6167   .debug_str:00000000000004f8 .LASF24
     /tmp/cc0Vska2.s:6443   .debug_str:0000000000000d0a .LASF25
     /tmp/cc0Vska2.s:6133   .debug_str:00000000000003e9 .LASF26
     /tmp/cc0Vska2.s:6205   .debug_str:000000000000061e .LASF27
     /tmp/cc0Vska2.s:6417   .debug_str:0000000000000c74 .LASF29
     /tmp/cc0Vska2.s:6299   .debug_str:0000000000000927 .LASF28
     /tmp/cc0Vska2.s:6279   .debug_str:0000000000000874 .LASF30
     /tmp/cc0Vska2.s:6151   .debug_str:0000000000000459 .LASF31
     /tmp/cc0Vska2.s:6043   .debug_str:0000000000000048 .LASF32
     /tmp/cc0Vska2.s:6281   .debug_str:000000000000088c .LASF37
     /tmp/cc0Vska2.s:6479   .debug_str:0000000000000df8 .LASF39
     /tmp/cc0Vska2.s:6099   .debug_str:0000000000000309 .LASF33
     /tmp/cc0Vska2.s:6261   .debug_str:00000000000007e5 .LASF34
     /tmp/cc0Vska2.s:6223   .debug_str:00000000000006ad .LASF35
     /tmp/cc0Vska2.s:6123   .debug_str:000000000000039e .LASF36
     /tmp/cc0Vska2.s:6513   .debug_str:0000000000000efd .LASF38
     /tmp/cc0Vska2.s:6063   .debug_str:00000000000000f9 .LASF40
     /tmp/cc0Vska2.s:6343   .debug_str:0000000000000a65 .LASF41
     /tmp/cc0Vska2.s:6067   .debug_str:0000000000000121 .LASF42
     /tmp/cc0Vska2.s:6401   .debug_str:0000000000000bfe .LASF43
     /tmp/cc0Vska2.s:6161   .debug_str:00000000000004b1 .LASF44
     /tmp/cc0Vska2.s:6217   .debug_str:0000000000000686 .LASF45
     /tmp/cc0Vska2.s:6497   .debug_str:0000000000000e81 .LASF46
     /tmp/cc0Vska2.s:6471   .debug_str:0000000000000dd6 .LASF49
     /tmp/cc0Vska2.s:6459   .debug_str:0000000000000d7c .LASF51
     /tmp/cc0Vska2.s:6371   .debug_str:0000000000000b1e .LASF47
     /tmp/cc0Vska2.s:6315   .debug_str:000000000000098e .LASF48
     /tmp/cc0Vska2.s:6351   .debug_str:0000000000000a93 .LASF50
     /tmp/cc0Vska2.s:6353   .debug_str:0000000000000a9a .LASF52
     /tmp/cc0Vska2.s:6311   .debug_str:0000000000000973 .LASF53
     /tmp/cc0Vska2.s:6241   .debug_str:0000000000000761 .LASF54
     /tmp/cc0Vska2.s:6499   .debug_str:0000000000000e9b .LASF55
     /tmp/cc0Vska2.s:6449   .debug_str:0000000000000d2c .LASF56
     /tmp/cc0Vska2.s:6307   .debug_str:0000000000000962 .LASF57
     /tmp/cc0Vska2.s:6313   .debug_str:000000000000097a .LASF58
     /tmp/cc0Vska2.s:6291   .debug_str:00000000000008e3 .LASF59
     /tmp/cc0Vska2.s:6355   .debug_str:0000000000000aad .LASF60
     /tmp/cc0Vska2.s:6541   .debug_str:0000000000000fc2 .LASF61
     /tmp/cc0Vska2.s:6221   .debug_str:0000000000000699 .LASF62
     /tmp/cc0Vska2.s:6421   .debug_str:0000000000000ca8 .LASF63
     /tmp/cc0Vska2.s:6395   .debug_str:0000000000000bdc .LASF64
     /tmp/cc0Vska2.s:6397   .debug_str:0000000000000bef .LASF65
     /tmp/cc0Vska2.s:6109   .debug_str:0000000000000347 .LASF66
     /tmp/cc0Vska2.s:6145   .debug_str:000000000000042e .LASF67
     /tmp/cc0Vska2.s:6055   .debug_str:000000000000008d .LASF68
     /tmp/cc0Vska2.s:6219   .debug_str:0000000000000693 .LASF69
     /tmp/cc0Vska2.s:6137   .debug_str:0000000000000408 .LASF70
     /tmp/cc0Vska2.s:6053   .debug_str:0000000000000082 .LASF71
     /tmp/cc0Vska2.s:6381   .debug_str:0000000000000b54 .LASF72
     /tmp/cc0Vska2.s:6373   .debug_str:0000000000000b27 .LASF73
     /tmp/cc0Vska2.s:6529   .debug_str:0000000000000f63 .LASF74
     /tmp/cc0Vska2.s:6491   .debug_str:0000000000000e57 .LASF75
     /tmp/cc0Vska2.s:6511   .debug_str:0000000000000ee7 .LASF76
     /tmp/cc0Vska2.s:6481   .debug_str:0000000000000e16 .LASF77
GAS LISTING /tmp/cc0Vska2.s 			page 55


     /tmp/cc0Vska2.s:6283   .debug_str:000000000000089c .LASF78
     /tmp/cc0Vska2.s:6199   .debug_str:00000000000005f8 .LASF79
     /tmp/cc0Vska2.s:6207   .debug_str:0000000000000629 .LASF80
     /tmp/cc0Vska2.s:6463   .debug_str:0000000000000d9d .LASF81
     /tmp/cc0Vska2.s:6189   .debug_str:00000000000005a8 .LASF82
     /tmp/cc0Vska2.s:6339   .debug_str:0000000000000a47 .LASF83
     /tmp/cc0Vska2.s:6237   .debug_str:000000000000072c .LASF84
     /tmp/cc0Vska2.s:6367   .debug_str:0000000000000b12 .LASF85
     /tmp/cc0Vska2.s:6047   .debug_str:0000000000000066 .LASF86
     /tmp/cc0Vska2.s:6079   .debug_str:00000000000001aa .LASF87
     /tmp/cc0Vska2.s:6461   .debug_str:0000000000000d91 .LASF88
     /tmp/cc0Vska2.s:6081   .debug_str:00000000000001b9 .LASF89
     /tmp/cc0Vska2.s:6295   .debug_str:0000000000000910 .LASF90
     /tmp/cc0Vska2.s:6193   .debug_str:00000000000005d2 .LASF91
     /tmp/cc0Vska2.s:6147   .debug_str:0000000000000434 .LASF92
     /tmp/cc0Vska2.s:6097   .debug_str:00000000000002f5 .LASF93
     /tmp/cc0Vska2.s:6437   .debug_str:0000000000000cf7 .LASF94
     /tmp/cc0Vska2.s:6439   .debug_str:0000000000000cfc .LASF96
     /tmp/cc0Vska2.s:6095   .debug_str:00000000000002ef .LASF97
     /tmp/cc0Vska2.s:6407   .debug_str:0000000000000c26 .LASF98
     /tmp/cc0Vska2.s:6111   .debug_str:000000000000035a .LASF99
     /tmp/cc0Vska2.s:6083   .debug_str:00000000000001cc .LASF100
     /tmp/cc0Vska2.s:6335   .debug_str:0000000000000a3a .LASF101
     /tmp/cc0Vska2.s:6245   .debug_str:0000000000000779 .LASF102
     /tmp/cc0Vska2.s:6433   .debug_str:0000000000000ce4 .LASF148
     /tmp/cc0Vska2.s:6201   .debug_str:0000000000000603 .LASF103
     /tmp/cc0Vska2.s:6303   .debug_str:0000000000000941 .LASF249
     /tmp/cc0Vska2.s:6319   .debug_str:00000000000009aa .LASF250
     /tmp/cc0Vska2.s:6247   .debug_str:0000000000000782 .LASF104
     /tmp/cc0Vska2.s:6527   .debug_str:0000000000000f57 .LASF106
     /tmp/cc0Vska2.s:6523   .debug_str:0000000000000f3b .LASF105
     /tmp/cc0Vska2.s:6447   .debug_str:0000000000000d1c .LASF107
     /tmp/cc0Vska2.s:6139   .debug_str:000000000000041a .LASF108
     /tmp/cc0Vska2.s:6061   .debug_str:00000000000000e6 .LASF109
     /tmp/cc0Vska2.s:6253   .debug_str:00000000000007a3 .LASF110
     /tmp/cc0Vska2.s:6321   .debug_str:00000000000009af .LASF111
     /tmp/cc0Vska2.s:6441   .debug_str:0000000000000d02 .LASF112
     /tmp/cc0Vska2.s:6403   .debug_str:0000000000000c0c .LASF113
     /tmp/cc0Vska2.s:6277   .debug_str:0000000000000867 .LASF118
     /tmp/cc0Vska2.s:6263   .debug_str:0000000000000803 .LASF120
     /tmp/cc0Vska2.s:6533   .debug_str:0000000000000f8b .LASF114
     /tmp/cc0Vska2.s:6177   .debug_str:0000000000000555 .LASF115
     /tmp/cc0Vska2.s:6213   .debug_str:0000000000000654 .LASF116
     /tmp/cc0Vska2.s:6225   .debug_str:00000000000006bf .LASF117
     /tmp/cc0Vska2.s:6405   .debug_str:0000000000000c1d .LASF119
     /tmp/cc0Vska2.s:6135   .debug_str:00000000000003f5 .LASF121
     /tmp/cc0Vska2.s:6385   .debug_str:0000000000000b78 .LASF122
     /tmp/cc0Vska2.s:6419   .debug_str:0000000000000c8c .LASF123
     /tmp/cc0Vska2.s:6301   .debug_str:0000000000000932 .LASF124
     /tmp/cc0Vska2.s:6039   .debug_str:0000000000000029 .LASF125
     /tmp/cc0Vska2.s:6509   .debug_str:0000000000000ed8 .LASF126
     /tmp/cc0Vska2.s:6329   .debug_str:0000000000000a06 .LASF127
     /tmp/cc0Vska2.s:6413   .debug_str:0000000000000c50 .LASF128
     /tmp/cc0Vska2.s:6349   .debug_str:0000000000000a87 .LASF129
     /tmp/cc0Vska2.s:6035   .debug_str:000000000000000d .LASF130
     /tmp/cc0Vska2.s:6515   .debug_str:0000000000000f09 .LASF131
     /tmp/cc0Vska2.s:6231   .debug_str:00000000000006e6 .LASF136
GAS LISTING /tmp/cc0Vska2.s 			page 56


     /tmp/cc0Vska2.s:6411   .debug_str:0000000000000c45 .LASF132
     /tmp/cc0Vska2.s:6525   .debug_str:0000000000000f41 .LASF133
     /tmp/cc0Vska2.s:6435   .debug_str:0000000000000cec .LASF134
     /tmp/cc0Vska2.s:6127   .debug_str:00000000000003c2 .LASF135
     /tmp/cc0Vska2.s:6399   .debug_str:0000000000000bf6 .LASF137
     /tmp/cc0Vska2.s:6451   .debug_str:0000000000000d40 .LASF138
     /tmp/cc0Vska2.s:6323   .debug_str:00000000000009bf .LASF139
     /tmp/cc0Vska2.s:6521   .debug_str:0000000000000f2d .LASF140
     /tmp/cc0Vska2.s:6073   .debug_str:0000000000000168 .LASF142
     /tmp/cc0Vska2.s:6071   .debug_str:0000000000000153 .LASF141
     /tmp/cc0Vska2.s:6093   .debug_str:00000000000002c3 .LASF143
     /tmp/cc0Vska2.s:6537   .debug_str:0000000000000fa3 .LASF251
     /tmp/cc0Vska2.s:6091   .debug_str:00000000000002b2 .LASF252
     /tmp/cc0Vska2.s:6041   .debug_str:0000000000000043 .LASF144
     /tmp/cc0Vska2.s:6473   .debug_str:0000000000000ddf .LASF145
     /tmp/cc0Vska2.s:6267   .debug_str:0000000000000835 .LASF146
     /tmp/cc0Vska2.s:6143   .debug_str:0000000000000428 .LASF147
     /tmp/cc0Vska2.s:6457   .debug_str:0000000000000d74 .LASF149
     /tmp/cc0Vska2.s:6273   .debug_str:000000000000084e .LASF150
     /tmp/cc0Vska2.s:6361   .debug_str:0000000000000ae0 .LASF151
     /tmp/cc0Vska2.s:6187   .debug_str:0000000000000594 .LASF152
     /tmp/cc0Vska2.s:6379   .debug_str:0000000000000b48 .LASF153
     /tmp/cc0Vska2.s:6359   .debug_str:0000000000000acc .LASF154
     /tmp/cc0Vska2.s:6141   .debug_str:0000000000000423 .LASF155
     /tmp/cc0Vska2.s:6409   .debug_str:0000000000000c2e .LASF156
     /tmp/cc0Vska2.s:6429   .debug_str:0000000000000cd5 .LASF157
     /tmp/cc0Vska2.s:6157   .debug_str:000000000000048c .LASF158
     /tmp/cc0Vska2.s:6037   .debug_str:000000000000001d .LASF159
     /tmp/cc0Vska2.s:6383   .debug_str:0000000000000b6c .LASF160
     /tmp/cc0Vska2.s:6275   .debug_str:0000000000000853 .LASF161
     /tmp/cc0Vska2.s:6203   .debug_str:0000000000000609 .LASF162
     /tmp/cc0Vska2.s:6107   .debug_str:000000000000033e .LASF163
     /tmp/cc0Vska2.s:6113   .debug_str:0000000000000364 .LASF164
     /tmp/cc0Vska2.s:6305   .debug_str:0000000000000959 .LASF165
     /tmp/cc0Vska2.s:6389   .debug_str:0000000000000ba7 .LASF166
     /tmp/cc0Vska2.s:6251   .debug_str:000000000000079a .LASF167
     /tmp/cc0Vska2.s:6209   .debug_str:0000000000000641 .LASF168
     /tmp/cc0Vska2.s:6539   .debug_str:0000000000000faa .LASF169
     /tmp/cc0Vska2.s:6045   .debug_str:000000000000005e .LASF170
     /tmp/cc0Vska2.s:6265   .debug_str:000000000000081b .LASF171
     /tmp/cc0Vska2.s:6531   .debug_str:0000000000000f7b .LASF172
     /tmp/cc0Vska2.s:6393   .debug_str:0000000000000bb9 .LASF173
     /tmp/cc0Vska2.s:6427   .debug_str:0000000000000cc2 .LASF174
     /tmp/cc0Vska2.s:6387   .debug_str:0000000000000b81 .LASF175
     /tmp/cc0Vska2.s:6033   .debug_str:0000000000000000 .LASF176
     /tmp/cc0Vska2.s:6059   .debug_str:00000000000000c2 .LASF177
     /tmp/cc0Vska2.s:6503   .debug_str:0000000000000ebc .LASF178
     /tmp/cc0Vska2.s:6289   .debug_str:00000000000008d3 .LASF179
     /tmp/cc0Vska2.s:6149   .debug_str:0000000000000447 .LASF180
     /tmp/cc0Vska2.s:6169   .debug_str:0000000000000504 .LASF181
     /tmp/cc0Vska2.s:6085   .debug_str:00000000000001d5 .LASF182
     /tmp/cc0Vska2.s:6057   .debug_str:000000000000009f .LASF183
     /tmp/cc0Vska2.s:6309   .debug_str:000000000000096a .LASF184
     /tmp/cc0Vska2.s:6125   .debug_str:00000000000003bd .LASF185
     /tmp/cc0Vska2.s:6105   .debug_str:0000000000000339 .LASF186
     /tmp/cc0Vska2.s:6243   .debug_str:0000000000000774 .LASF187
     /tmp/cc0Vska2.s:6175   .debug_str:000000000000054b .LASF188
GAS LISTING /tmp/cc0Vska2.s 			page 57


     /tmp/cc0Vska2.s:6517   .debug_str:0000000000000f14 .LASF189
     /tmp/cc0Vska2.s:6115   .debug_str:000000000000036e .LASF190
     /tmp/cc0Vska2.s:6195   .debug_str:00000000000005e5 .LASF191
     /tmp/cc0Vska2.s:6325   .debug_str:00000000000009cb .LASF192
     /tmp/cc0Vska2.s:6287   .debug_str:00000000000008bf .LASF193
     /tmp/cc0Vska2.s:6431   .debug_str:0000000000000cdc .LASF194
     /tmp/cc0Vska2.s:6293   .debug_str:00000000000008eb .LASF195
     /tmp/cc0Vska2.s:6227   .debug_str:00000000000006cc .LASF196
     /tmp/cc0Vska2.s:6483   .debug_str:0000000000000e20 .LASF197
     /tmp/cc0Vska2.s:6467   .debug_str:0000000000000dbe .LASF198
     /tmp/cc0Vska2.s:6215   .debug_str:0000000000000664 .LASF199
     /tmp/cc0Vska2.s:6465   .debug_str:0000000000000dac .LASF200
     /tmp/cc0Vska2.s:6365   .debug_str:0000000000000af0 .LASF201
     /tmp/cc0Vska2.s:6077   .debug_str:0000000000000197 .LASF202
     /tmp/cc0Vska2.s:6089   .debug_str:000000000000028f .LASF203
     /tmp/cc0Vska2.s:6153   .debug_str:0000000000000463 .LASF204
     /tmp/cc0Vska2.s:6165   .debug_str:00000000000004d5 .LASF205
     /tmp/cc0Vska2.s:6257   .debug_str:00000000000007b2 .LASF206
     /tmp/cc0Vska2.s:6501   .debug_str:0000000000000ea3 .LASF207
     /tmp/cc0Vska2.s:6233   .debug_str:00000000000006f3 .LASF208
     /tmp/cc0Vska2.s:6259   .debug_str:00000000000007cd .LASF209
     /tmp/cc0Vska2.s:6327   .debug_str:00000000000009de .LASF210
     /tmp/cc0Vska2.s:6171   .debug_str:000000000000052b .LASF211
     /tmp/cc0Vska2.s:6493   .debug_str:0000000000000e61 .LASF212
     /tmp/cc0Vska2.s:6181   .debug_str:0000000000000567 .LASF213
     /tmp/cc0Vska2.s:6049   .debug_str:000000000000006e .LASF214
     /tmp/cc0Vska2.s:1622   .text:0000000000000634 .LFB32
     /tmp/cc0Vska2.s:1647   .text:000000000000065c .LFE32
     /tmp/cc0Vska2.s:1636   .text:000000000000064c .LVL117
     /tmp/cc0Vska2.s:1570   .text:00000000000005dc .LFB31
     /tmp/cc0Vska2.s:1616   .text:0000000000000634 .LFE31
     /tmp/cc0Vska2.s:1584   .text:00000000000005f4 .LVL111
     /tmp/cc0Vska2.s:1588   .text:00000000000005fc .LVL112
     /tmp/cc0Vska2.s:1592   .text:0000000000000604 .LVL113
     /tmp/cc0Vska2.s:1596   .text:000000000000060c .LVL114
     /tmp/cc0Vska2.s:1600   .text:0000000000000614 .LVL115
     /tmp/cc0Vska2.s:1605   .text:0000000000000624 .LVL116
     /tmp/cc0Vska2.s:1523   .text:00000000000005dc .LFE30
     /tmp/cc0Vska2.s:5519   .debug_loc:0000000000000000 .LLST12
     /tmp/cc0Vska2.s:6121   .debug_str:0000000000000397 .LASF215
     /tmp/cc0Vska2.s:5546   .debug_loc:0000000000000082 .LLST13
     /tmp/cc0Vska2.s:5983   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/cc0Vska2.s:6469   .debug_str:0000000000000dd0 .LASF216
     /tmp/cc0Vska2.s:6271   .debug_str:0000000000000844 .LASF217
     /tmp/cc0Vska2.s:5567   .debug_loc:00000000000000e0 .LLST14
     /tmp/cc0Vska2.s:6445   .debug_str:0000000000000d17 .LASF218
     /tmp/cc0Vska2.s:871    .text:0000000000000380 .LBB217
     /tmp/cc0Vska2.s:952    .text:00000000000003c0 .LBE217
     /tmp/cc0Vska2.s:6197   .debug_str:00000000000005f0 .LASF219
     /tmp/cc0Vska2.s:873    .text:0000000000000380 .LBB218
     /tmp/cc0Vska2.s:888    .text:000000000000038c .LBE218
     /tmp/cc0Vska2.s:892    .text:0000000000000390 .LBB220
     /tmp/cc0Vska2.s:907    .text:000000000000039c .LBE220
     /tmp/cc0Vska2.s:921    .text:00000000000003b0 .LBB222
     /tmp/cc0Vska2.s:932    .text:00000000000003b4 .LBE222
     /tmp/cc0Vska2.s:5610   .debug_loc:00000000000001ae .LLST40
     /tmp/cc0Vska2.s:937    .text:00000000000003b8 .LBB224
GAS LISTING /tmp/cc0Vska2.s 			page 58


     /tmp/cc0Vska2.s:951    .text:00000000000003c0 .LBE224
     /tmp/cc0Vska2.s:5617   .debug_loc:00000000000001d1 .LLST41
     /tmp/cc0Vska2.s:916    .text:00000000000003ac .LVL49
     /tmp/cc0Vska2.s:955    .text:00000000000003c0 .LBB200
     /tmp/cc0Vska2.s:981    .text:00000000000003d4 .LBE200
     /tmp/cc0Vska2.s:6297   .debug_str:0000000000000922 .LASF220
     /tmp/cc0Vska2.s:5624   .debug_loc:00000000000001f4 .LLST36
     /tmp/cc0Vska2.s:6495   .debug_str:0000000000000e73 .LASF221
     /tmp/cc0Vska2.s:5639   .debug_loc:000000000000022e .LLST37
     /tmp/cc0Vska2.s:971    .text:00000000000003d0 .LVL56
     /tmp/cc0Vska2.s:1005   .text:00000000000003e0 .LBB189
     /tmp/cc0Vska2.s:1026   .text:00000000000003f0 .LBE189
     /tmp/cc0Vska2.s:6369   .debug_str:0000000000000b19 .LASF222
     /tmp/cc0Vska2.s:5646   .debug_loc:0000000000000251 .LLST34
     /tmp/cc0Vska2.s:6075   .debug_str:0000000000000190 .LASF223
     /tmp/cc0Vska2.s:5658   .debug_loc:0000000000000288 .LLST35
     /tmp/cc0Vska2.s:1018   .text:00000000000003ec .LVL62
     /tmp/cc0Vska2.s:6347   .debug_str:0000000000000a79 .LASF224
     /tmp/cc0Vska2.s:5665   .debug_loc:00000000000002ab .LLST30
     /tmp/cc0Vska2.s:5676   .debug_loc:00000000000002e1 .LLST31
     /tmp/cc0Vska2.s:6065   .debug_str:0000000000000114 .LASF225
     /tmp/cc0Vska2.s:5687   .debug_loc:0000000000000317 .LLST32
     /tmp/cc0Vska2.s:6317   .debug_str:00000000000009a3 .LASF226
     /tmp/cc0Vska2.s:5698   .debug_loc:000000000000034d .LLST33
     /tmp/cc0Vska2.s:1059   .text:000000000000040c .LVL67
     /tmp/cc0Vska2.s:1068   .text:0000000000000428 .LVL68
     /tmp/cc0Vska2.s:1488   .text:00000000000005b4 .LVL106
     /tmp/cc0Vska2.s:1096   .text:0000000000000440 .LBB163
     /tmp/cc0Vska2.s:1145   .text:0000000000000470 .LBE163
     /tmp/cc0Vska2.s:1098   .text:0000000000000440 .LBB164
     /tmp/cc0Vska2.s:1114   .text:000000000000044c .LBE164
     /tmp/cc0Vska2.s:1130   .text:0000000000000468 .LBB166
     /tmp/cc0Vska2.s:1144   .text:0000000000000470 .LBE166
     /tmp/cc0Vska2.s:5705   .debug_loc:0000000000000370 .LLST29
     /tmp/cc0Vska2.s:1125   .text:0000000000000464 .LVL71
     /tmp/cc0Vska2.s:1154   .text:0000000000000480 .LBB149
     /tmp/cc0Vska2.s:1169   .text:000000000000048c .LBE149
     /tmp/cc0Vska2.s:1199   .text:00000000000004a8 .LBB151
     /tmp/cc0Vska2.s:1207   .text:00000000000004b0 .LBE151
     /tmp/cc0Vska2.s:5712   .debug_loc:0000000000000393 .LLST26
     /tmp/cc0Vska2.s:5720   .debug_loc:00000000000003b7 .LLST27
     /tmp/cc0Vska2.s:1216   .text:00000000000004bc .LBB153
     /tmp/cc0Vska2.s:1227   .text:00000000000004c0 .LBE153
     /tmp/cc0Vska2.s:5727   .debug_loc:00000000000003da .LLST28
     /tmp/cc0Vska2.s:1152   .text:0000000000000480 .LVL74
     /tmp/cc0Vska2.s:1211   .text:00000000000004b8 .LVL77
     /tmp/cc0Vska2.s:1240   .text:00000000000004c8 .LBB135
     /tmp/cc0Vska2.s:1318   .text:0000000000000514 .LBE135
     /tmp/cc0Vska2.s:6337   .debug_str:0000000000000a42 .LASF227
     /tmp/cc0Vska2.s:5734   .debug_loc:00000000000003fd .LLST22
     /tmp/cc0Vska2.s:1251   .text:00000000000004cc .LBB136
     /tmp/cc0Vska2.s:1267   .text:00000000000004d8 .LBE136
     /tmp/cc0Vska2.s:1279   .text:00000000000004f4 .LBB138
     /tmp/cc0Vska2.s:1286   .text:00000000000004f8 .LBE138
     /tmp/cc0Vska2.s:5741   .debug_loc:0000000000000420 .LLST23
     /tmp/cc0Vska2.s:5748   .debug_loc:0000000000000443 .LLST24
     /tmp/cc0Vska2.s:1299   .text:000000000000050c .LBB140
GAS LISTING /tmp/cc0Vska2.s 			page 59


     /tmp/cc0Vska2.s:1310   .text:0000000000000510 .LBE140
     /tmp/cc0Vska2.s:5755   .debug_loc:0000000000000466 .LLST25
     /tmp/cc0Vska2.s:1290   .text:0000000000000500 .LVL85
     /tmp/cc0Vska2.s:1294   .text:0000000000000508 .LVL86
     /tmp/cc0Vska2.s:5762   .debug_loc:0000000000000489 .LLST19
     /tmp/cc0Vska2.s:6235   .debug_str:000000000000071c .LASF228
     /tmp/cc0Vska2.s:5773   .debug_loc:00000000000004bf .LLST20
     /tmp/cc0Vska2.s:6331   .debug_str:0000000000000a20 .LASF229
     /tmp/cc0Vska2.s:5784   .debug_loc:00000000000004f5 .LLST21
     /tmp/cc0Vska2.s:1344   .text:000000000000052c .LVL92
     /tmp/cc0Vska2.s:1351   .text:000000000000053c .LVL94
     /tmp/cc0Vska2.s:1506   .text:00000000000005d0 .LVL109
     /tmp/cc0Vska2.s:1379   .text:0000000000000554 .LBB121
     /tmp/cc0Vska2.s:1441   .text:0000000000000584 .LBE121
     /tmp/cc0Vska2.s:6487   .debug_str:0000000000000e4c .LASF230
     /tmp/cc0Vska2.s:5791   .debug_loc:0000000000000518 .LLST17
     /tmp/cc0Vska2.s:1381   .text:0000000000000554 .LBB122
     /tmp/cc0Vska2.s:1397   .text:0000000000000560 .LBE122
     /tmp/cc0Vska2.s:1420   .text:0000000000000578 .LBB124
     /tmp/cc0Vska2.s:1431   .text:000000000000057c .LBE124
     /tmp/cc0Vska2.s:5798   .debug_loc:000000000000053b .LLST18
     /tmp/cc0Vska2.s:1413   .text:0000000000000570 .LVL98
     /tmp/cc0Vska2.s:1446   .text:0000000000000588 .LBB119
     /tmp/cc0Vska2.s:1472   .text:00000000000005a0 .LBE119
     /tmp/cc0Vska2.s:5805   .debug_loc:000000000000055e .LLST16
     /tmp/cc0Vska2.s:1459   .text:0000000000000594 .LVL103
     /tmp/cc0Vska2.s:734    .text:00000000000002cc .LBB118
     /tmp/cc0Vska2.s:763    .text:00000000000002f0 .LBE118
     /tmp/cc0Vska2.s:5812   .debug_loc:0000000000000581 .LLST15
     /tmp/cc0Vska2.s:750    .text:00000000000002e0 .LVL38
     /tmp/cc0Vska2.s:754    .text:00000000000002ec .LVL39
     /tmp/cc0Vska2.s:545    .text:0000000000000260 .LBB106
     /tmp/cc0Vska2.s:560    .text:000000000000026c .LBE106
     /tmp/cc0Vska2.s:820    .text:0000000000000330 .LBB212
     /tmp/cc0Vska2.s:833    .text:0000000000000338 .LBE212
     /tmp/cc0Vska2.s:5819   .debug_loc:00000000000005a4 .LLST38
     /tmp/cc0Vska2.s:858    .text:0000000000000374 .LBB215
     /tmp/cc0Vska2.s:866    .text:0000000000000378 .LBE215
     /tmp/cc0Vska2.s:5827   .debug_loc:00000000000005c8 .LLST39
     /tmp/cc0Vska2.s:987    .text:00000000000003d8 .LBB227
     /tmp/cc0Vska2.s:1002   .text:00000000000003e0 .LBE227
     /tmp/cc0Vska2.s:5834   .debug_loc:00000000000005eb .LLST42
     /tmp/cc0Vska2.s:788    .text:000000000000030c .LVL41
     /tmp/cc0Vska2.s:851    .text:0000000000000368 .LVL46
     /tmp/cc0Vska2.s:501    .text:0000000000000224 .LBB102
     /tmp/cc0Vska2.s:517    .text:0000000000000230 .LBE102
     /tmp/cc0Vska2.s:1492   .text:00000000000005c0 .LVL107
     /tmp/cc0Vska2.s:1510   .text:00000000000005dc .LVL110
     /tmp/cc0Vska2.s:313    .text:0000000000000134 .LFB29
     /tmp/cc0Vska2.s:457    .text:00000000000001fc .LFE29
     /tmp/cc0Vska2.s:5841   .debug_loc:000000000000060e .LLST6
     /tmp/cc0Vska2.s:5855   .debug_loc:0000000000000647 .LLST7
     /tmp/cc0Vska2.s:6455   .debug_str:0000000000000d6d .LASF231
     /tmp/cc0Vska2.s:5862   .debug_loc:000000000000066a .LLST8
     /tmp/cc0Vska2.s:5884   .debug_loc:00000000000006c9 .LLST9
     /tmp/cc0Vska2.s:330    .text:000000000000014c .LBB96
     /tmp/cc0Vska2.s:346    .text:0000000000000158 .LBE96
GAS LISTING /tmp/cc0Vska2.s 			page 60


     /tmp/cc0Vska2.s:348    .text:0000000000000158 .LBB98
     /tmp/cc0Vska2.s:360    .text:0000000000000160 .LBE98
     /tmp/cc0Vska2.s:5906   .debug_loc:000000000000070a .LLST10
     /tmp/cc0Vska2.s:431    .text:00000000000001e0 .LBB100
     /tmp/cc0Vska2.s:442    .text:00000000000001e4 .LBE100
     /tmp/cc0Vska2.s:5914   .debug_loc:000000000000072e .LLST11
     /tmp/cc0Vska2.s:415    .text:00000000000001c4 .LVL28
     /tmp/cc0Vska2.s:422    .text:00000000000001d4 .LVL29
     /tmp/cc0Vska2.s:205    .text:00000000000000c4 .LFB28
     /tmp/cc0Vska2.s:307    .text:0000000000000134 .LFE28
     /tmp/cc0Vska2.s:6423   .debug_str:0000000000000caf .LASF232
     /tmp/cc0Vska2.s:5921   .debug_loc:0000000000000751 .LLST2
     /tmp/cc0Vska2.s:5932   .debug_loc:0000000000000787 .LLST3
     /tmp/cc0Vska2.s:223    .text:00000000000000e0 .LBB90
     /tmp/cc0Vska2.s:239    .text:00000000000000ec .LBE90
     /tmp/cc0Vska2.s:241    .text:00000000000000ec .LBB92
     /tmp/cc0Vska2.s:254    .text:00000000000000f4 .LBE92
     /tmp/cc0Vska2.s:5939   .debug_loc:00000000000007aa .LLST4
     /tmp/cc0Vska2.s:280    .text:0000000000000118 .LBB94
     /tmp/cc0Vska2.s:291    .text:000000000000011c .LBE94
     /tmp/cc0Vska2.s:5947   .debug_loc:00000000000007ce .LLST5
     /tmp/cc0Vska2.s:264    .text:0000000000000104 .LVL12
     /tmp/cc0Vska2.s:170    .text:00000000000000a4 .LFB27
     /tmp/cc0Vska2.s:199    .text:00000000000000c4 .LFE27
     /tmp/cc0Vska2.s:101    .text:000000000000005c .LFB26
     /tmp/cc0Vska2.s:133    .text:000000000000007c .LFE26
     /tmp/cc0Vska2.s:112    .text:0000000000000068 .LBB88
     /tmp/cc0Vska2.s:124    .text:0000000000000070 .LBE88
     /tmp/cc0Vska2.s:5954   .debug_loc:00000000000007f1 .LLST1
     /tmp/cc0Vska2.s:63     .text:000000000000003c .LFB25
     /tmp/cc0Vska2.s:95     .text:000000000000005c .LFE25
     /tmp/cc0Vska2.s:74     .text:0000000000000048 .LBB86
     /tmp/cc0Vska2.s:86     .text:0000000000000050 .LBE86
     /tmp/cc0Vska2.s:5962   .debug_loc:0000000000000815 .LLST0
     /tmp/cc0Vska2.s:139    .text:000000000000007c .LFB24
     /tmp/cc0Vska2.s:164    .text:00000000000000a4 .LFE24
     /tmp/cc0Vska2.s:153    .text:0000000000000094 .LVL8
     /tmp/cc0Vska2.s:10     .text:0000000000000000 .LFB23
     /tmp/cc0Vska2.s:57     .text:000000000000003c .LFE23
     /tmp/cc0Vska2.s:26     .text:0000000000000018 .LBB84
     /tmp/cc0Vska2.s:38     .text:000000000000001c .LBE84
     /tmp/cc0Vska2.s:42     .text:0000000000000024 .LVL2
     /tmp/cc0Vska2.s:46     .text:000000000000002c .LVL3
     /tmp/cc0Vska2.s:6131   .debug_str:00000000000003e4 .LASF233
     /tmp/cc0Vska2.s:6477   .debug_str:0000000000000df3 .LASF234
     /tmp/cc0Vska2.s:6507   .debug_str:0000000000000ed2 .LASF235
     /tmp/cc0Vska2.s:6285   .debug_str:00000000000008b2 .LASF236
     /tmp/cc0Vska2.s:6341   .debug_str:0000000000000a5c .LASF238
     /tmp/cc0Vska2.s:6159   .debug_str:00000000000004a5 .LASF237
     /tmp/cc0Vska2.s:6377   .debug_str:0000000000000b40 .LASF239
     /tmp/cc0Vska2.s:6129   .debug_str:00000000000003d8 .LASF240
     /tmp/cc0Vska2.s:6485   .debug_str:0000000000000e44 .LASF241
     /tmp/cc0Vska2.s:6535   .debug_str:0000000000000f98 .LASF242
     /tmp/cc0Vska2.s:6179   .debug_str:0000000000000561 .LASF243
     /tmp/cc0Vska2.s:6185   .debug_str:0000000000000584 .LASF244
     /tmp/cc0Vska2.s:6519   .debug_str:0000000000000f1e .LASF253
     /tmp/cc0Vska2.s:6069   .debug_str:000000000000013b .LASF254
GAS LISTING /tmp/cc0Vska2.s 			page 61


     /tmp/cc0Vska2.s:6269   .debug_str:000000000000083d .LASF245
     /tmp/cc0Vska2.s:498    .text:0000000000000224 .LVL33
     /tmp/cc0Vska2.s:742    .text:00000000000002d0 .LVL37
     /tmp/cc0Vska2.s:765    .text:00000000000002f4 .LVL40
     /tmp/cc0Vska2.s:813    .text:0000000000000330 .LVL42
     /tmp/cc0Vska2.s:844    .text:0000000000000354 .LVL45
     /tmp/cc0Vska2.s:948    .text:00000000000003c0 .LVL53
     /tmp/cc0Vska2.s:978    .text:00000000000003d4 .LVL57
     /tmp/cc0Vska2.s:999    .text:00000000000003e0 .LVL60
     /tmp/cc0Vska2.s:1347   .text:0000000000000530 .LVL93
     /tmp/cc0Vska2.s:1375   .text:0000000000000554 .LVL95
     /tmp/cc0Vska2.s:1477   .text:00000000000005a8 .LVL105
     /tmp/cc0Vska2.s:515    .text:0000000000000230 .LVL34
     /tmp/cc0Vska2.s:529    .text:0000000000000254 .LVL35
     /tmp/cc0Vska2.s:542    .text:0000000000000260 .LVL36
     /tmp/cc0Vska2.s:825    .text:0000000000000334 .LVL43
     /tmp/cc0Vska2.s:1028   .text:00000000000003f4 .LVL63
     /tmp/cc0Vska2.s:1092   .text:0000000000000440 .LVL69
     /tmp/cc0Vska2.s:1107   .text:0000000000000444 .LVL70
     /tmp/cc0Vska2.s:1141   .text:0000000000000470 .LVL73
     /tmp/cc0Vska2.s:1237   .text:00000000000004c8 .LVL80
     /tmp/cc0Vska2.s:1260   .text:00000000000004d0 .LVL82
     /tmp/cc0Vska2.s:1320   .text:0000000000000518 .LVL89
     /tmp/cc0Vska2.s:1390   .text:0000000000000558 .LVL96
     /tmp/cc0Vska2.s:1443   .text:0000000000000588 .LVL101
     /tmp/cc0Vska2.s:920    .text:00000000000003b0 .LVL50
     /tmp/cc0Vska2.s:929    .text:00000000000003b4 .LVL51
     /tmp/cc0Vska2.s:936    .text:00000000000003b8 .LVL52
     /tmp/cc0Vska2.s:963    .text:00000000000003c4 .LVL54
     /tmp/cc0Vska2.s:969    .text:00000000000003c8 .LVL55
     /tmp/cc0Vska2.s:1013   .text:00000000000003e4 .LVL61
     /tmp/cc0Vska2.s:1047   .text:00000000000003fc .LVL65
     /tmp/cc0Vska2.s:1474   .text:00000000000005a4 .LVL104
     /tmp/cc0Vska2.s:1053   .text:0000000000000400 .LVL66
     /tmp/cc0Vska2.s:1041   .text:00000000000003f8 .LVL64
     /tmp/cc0Vska2.s:1129   .text:0000000000000468 .LVL72
     /tmp/cc0Vska2.s:1180   .text:00000000000004a8 .LVL75
     /tmp/cc0Vska2.s:1205   .text:00000000000004b0 .LVL76
     /tmp/cc0Vska2.s:1215   .text:00000000000004bc .LVL78
     /tmp/cc0Vska2.s:1224   .text:00000000000004c0 .LVL79
     /tmp/cc0Vska2.s:1248   .text:00000000000004cc .LVL81
     /tmp/cc0Vska2.s:1278   .text:00000000000004f4 .LVL83
     /tmp/cc0Vska2.s:1284   .text:00000000000004f8 .LVL84
     /tmp/cc0Vska2.s:1298   .text:000000000000050c .LVL87
     /tmp/cc0Vska2.s:1307   .text:0000000000000510 .LVL88
     /tmp/cc0Vska2.s:1338   .text:0000000000000520 .LVL91
     /tmp/cc0Vska2.s:1332   .text:000000000000051c .LVL90
     /tmp/cc0Vska2.s:1496   .text:00000000000005c4 .LVL108
     /tmp/cc0Vska2.s:1407   .text:0000000000000568 .LVL97
     /tmp/cc0Vska2.s:1419   .text:0000000000000578 .LVL99
     /tmp/cc0Vska2.s:1428   .text:000000000000057c .LVL100
     /tmp/cc0Vska2.s:1454   .text:000000000000058c .LVL102
     /tmp/cc0Vska2.s:830    .text:0000000000000338 .LVL44
     /tmp/cc0Vska2.s:857    .text:0000000000000374 .LVL47
     /tmp/cc0Vska2.s:864    .text:0000000000000378 .LVL48
     /tmp/cc0Vska2.s:986    .text:00000000000003d8 .LVL58
     /tmp/cc0Vska2.s:995    .text:00000000000003dc .LVL59
GAS LISTING /tmp/cc0Vska2.s 			page 62


     /tmp/cc0Vska2.s:316    .text:0000000000000134 .LVL18
     /tmp/cc0Vska2.s:370    .text:0000000000000164 .LVL21
     /tmp/cc0Vska2.s:344    .text:0000000000000158 .LVL19
     /tmp/cc0Vska2.s:426    .text:00000000000001d8 .LVL30
     /tmp/cc0Vska2.s:374    .text:0000000000000168 .LVL22
     /tmp/cc0Vska2.s:381    .text:0000000000000170 .LVL23
     /tmp/cc0Vska2.s:392    .text:0000000000000194 .LVL24
     /tmp/cc0Vska2.s:402    .text:00000000000001a8 .LVL26
     /tmp/cc0Vska2.s:407    .text:00000000000001ac .LVL27
     /tmp/cc0Vska2.s:398    .text:00000000000001a0 .LVL25
     /tmp/cc0Vska2.s:357    .text:0000000000000160 .LVL20
     /tmp/cc0Vska2.s:430    .text:00000000000001e0 .LVL31
     /tmp/cc0Vska2.s:439    .text:00000000000001e4 .LVL32
     /tmp/cc0Vska2.s:208    .text:00000000000000c4 .LVL9
     /tmp/cc0Vska2.s:250    .text:00000000000000f4 .LVL11
     /tmp/cc0Vska2.s:300    .text:0000000000000128 .LVL17
     /tmp/cc0Vska2.s:237    .text:00000000000000ec .LVL10
     /tmp/cc0Vska2.s:275    .text:0000000000000110 .LVL14
     /tmp/cc0Vska2.s:279    .text:0000000000000118 .LVL15
     /tmp/cc0Vska2.s:288    .text:000000000000011c .LVL16
     /tmp/cc0Vska2.s:111    .text:0000000000000068 .LVL6
     /tmp/cc0Vska2.s:121    .text:0000000000000070 .LVL7
     /tmp/cc0Vska2.s:73     .text:0000000000000048 .LVL4
     /tmp/cc0Vska2.s:83     .text:0000000000000050 .LVL5
     /tmp/cc0Vska2.s:1674   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/cc0Vska2.s:532    .text:000000000000025c .LBB105
     /tmp/cc0Vska2.s:573    .text:0000000000000284 .LBE105
     /tmp/cc0Vska2.s:577    .text:0000000000000284 .LBB231
     /tmp/cc0Vska2.s:584    .text:000000000000028c .LBE231
     /tmp/cc0Vska2.s:588    .text:000000000000028c .LBB232
     /tmp/cc0Vska2.s:597    .text:0000000000000294 .LBE232
     /tmp/cc0Vska2.s:601    .text:0000000000000294 .LBB233
     /tmp/cc0Vska2.s:612    .text:000000000000029c .LBE233
     /tmp/cc0Vska2.s:616    .text:000000000000029c .LBB234
     /tmp/cc0Vska2.s:629    .text:00000000000002a4 .LBE234
     /tmp/cc0Vska2.s:633    .text:00000000000002a4 .LBB235
     /tmp/cc0Vska2.s:648    .text:00000000000002ac .LBE235
     /tmp/cc0Vska2.s:652    .text:00000000000002ac .LBB236
     /tmp/cc0Vska2.s:669    .text:00000000000002b4 .LBE236
     /tmp/cc0Vska2.s:673    .text:00000000000002b4 .LBB237
     /tmp/cc0Vska2.s:692    .text:00000000000002bc .LBE237
     /tmp/cc0Vska2.s:696    .text:00000000000002bc .LBB238
     /tmp/cc0Vska2.s:717    .text:00000000000002c4 .LBE238
     /tmp/cc0Vska2.s:721    .text:00000000000002c4 .LBB239
     /tmp/cc0Vska2.s:777    .text:00000000000002f4 .LBE239
     /tmp/cc0Vska2.s:783    .text:0000000000000304 .LBB240
     /tmp/cc0Vska2.s:791    .text:000000000000030c .LBE240
     /tmp/cc0Vska2.s:817    .text:0000000000000330 .LBB241
     /tmp/cc0Vska2.s:1187   .text:00000000000004a8 .LBE241
     /tmp/cc0Vska2.s:1191   .text:00000000000004a8 .LBB242
     /tmp/cc0Vska2.s:1520   .text:00000000000005dc .LBE242
     /tmp/cc0Vska2.s:1323   .text:0000000000000518 .LBB129
     /tmp/cc0Vska2.s:1377   .text:0000000000000554 .LBE129
     /tmp/cc0Vska2.s:1502   .text:00000000000005c4 .LBB131
     /tmp/cc0Vska2.s:1512   .text:00000000000005dc .LBE131
     /tmp/cc0Vska2.s:1147   .text:0000000000000470 .LBB148
     /tmp/cc0Vska2.s:1181   .text:00000000000004a8 .LBE148
GAS LISTING /tmp/cc0Vska2.s 			page 63


     /tmp/cc0Vska2.s:1197   .text:00000000000004a8 .LBB155
     /tmp/cc0Vska2.s:1235   .text:00000000000004c4 .LBE155
     /tmp/cc0Vska2.s:1031   .text:00000000000003f4 .LBB177
     /tmp/cc0Vska2.s:1094   .text:0000000000000440 .LBE177
     /tmp/cc0Vska2.s:1484   .text:00000000000005a8 .LBB180
     /tmp/cc0Vska2.s:1497   .text:00000000000005c4 .LBE180
     /tmp/cc0Vska2.s:1526   .gcc_except_table:0000000000000000 .LLSDA30

UNDEFINED SYMBOLS
_ZN5Riscv14supervisorTrapEv
_ZN3PCB10initializeEv
_ZN8KConsole10initializeEv
__putc
_ZN10KSemaphoreD1Ev
_ZN10KSemaphoredlEPv
console_handler
_ZN3PCB16timeSliceCounterE
_ZN12SleepPCBList13tryToWakePCBsEv
_ZN3PCB7runningE
_ZN3PCB8dispatchEv
_Z7kmallocm
_Z5kfreePv
_ZN3PCBnwEm
_ZN3PCBC1EPFvPvES0_S0_m
_ZN12SleepPCBList17insertSleepingPCBEv
_ZN10KSemaphorenwEm
_ZN10KSemaphoreC1Ei
_ZN10KSemaphore4waitEv
_ZN10KSemaphore6signalEv
_ZN3PCBdlEPv
_Unwind_Resume
__gxx_personality_v0
_Z7myTestsv
_Z8userMainv
