GAS LISTING /tmp/ccgWpG8G.s 			page 1


   1              		.file	"Riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10initSystemEv
   9              	_ZN5Riscv10initSystemEv:
  10              	.LFB23:
  11              		.file 1 "src/Riscv.cpp"
   1:src/Riscv.cpp **** //
   2:src/Riscv.cpp **** // Created by os on 4/27/22.
   3:src/Riscv.cpp **** //
   4:src/Riscv.cpp **** 
   5:src/Riscv.cpp **** #include "../h/Riscv.hpp"
   6:src/Riscv.cpp **** #include "../h/MemoryAllocator.hpp"
   7:src/Riscv.cpp **** #include "../h/PCB.hpp"
   8:src/Riscv.cpp **** #include "../lib/console.h"
   9:src/Riscv.cpp **** #include "../h/syscall_cpp.hpp"
  10:src/Riscv.cpp **** #include "../h/SleepPCBList.hpp"
  11:src/Riscv.cpp **** 
  12:src/Riscv.cpp **** //todo
  13:src/Riscv.cpp **** //sta sve treba da se odradi ovde
  14:src/Riscv.cpp **** void Riscv::initSystem()
  15:src/Riscv.cpp **** {
  12              		.loc 1 15 1
  13              		.cfi_startproc
  14              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
  15              		.cfi_lsda 0x1b,.LLSDA23
  16 0000 130101FE 		addi	sp,sp,-32
  17              		.cfi_def_cfa_offset 32
  18 0004 233C1100 		sd	ra,24(sp)
  19 0008 23388100 		sd	s0,16(sp)
  20 000c 23349100 		sd	s1,8(sp)
  21 0010 23302101 		sd	s2,0(sp)
  22              		.cfi_offset 1, -8
  23              		.cfi_offset 8, -16
  24              		.cfi_offset 9, -24
  25              		.cfi_offset 18, -32
  26 0014 13040102 		addi	s0,sp,32
  27              		.cfi_def_cfa 8, 0
  16:src/Riscv.cpp ****     w_stvec((uint64)&Riscv::supervisorTrap);
  28              		.loc 1 16 5
  29              		.loc 1 16 12 is_stmt 0
  30 0018 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
  30      83B70700 
  31              	.LVL0:
  32              	.LBB82:
  33              	.LBB83:
  34              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 4/27/22.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_0_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_0_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/ccgWpG8G.s 			page 2


   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** class Riscv
  11:src/../h/Riscv.hpp **** {
  12:src/../h/Riscv.hpp **** private:
  13:src/../h/Riscv.hpp **** 
  14:src/../h/Riscv.hpp **** public:
  15:src/../h/Riscv.hpp ****     static void initSystem();
  16:src/../h/Riscv.hpp ****     static void endSystem();
  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp ****     static void enableInterrupts();
  19:src/../h/Riscv.hpp **** 
  20:src/../h/Riscv.hpp ****     static void disableInterrupts();
  21:src/../h/Riscv.hpp **** 
  22:src/../h/Riscv.hpp ****     static void printString(char const *string);
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp ****     static void printInteger(uint64 num);
  25:src/../h/Riscv.hpp **** 
  26:src/../h/Riscv.hpp ****     static void pushRegisters();
  27:src/../h/Riscv.hpp ****     static void popRegisters();
  28:src/../h/Riscv.hpp **** 
  29:src/../h/Riscv.hpp ****     static uint64 r_scause();
  30:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  31:src/../h/Riscv.hpp **** 
  32:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  33:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
  34:src/../h/Riscv.hpp **** 
  35:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  36:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  37:src/../h/Riscv.hpp **** 
  38:src/../h/Riscv.hpp ****     static uint64 r_stval();
  39:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  40:src/../h/Riscv.hpp **** 
  41:src/../h/Riscv.hpp ****     enum BitMaskSip
  42:src/../h/Riscv.hpp ****     {
  43:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  44:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  45:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9),
  46:src/../h/Riscv.hpp ****     };
  47:src/../h/Riscv.hpp **** 
  48:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  49:src/../h/Riscv.hpp **** 
  50:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  51:src/../h/Riscv.hpp **** 
  52:src/../h/Riscv.hpp ****     static uint64 r_sip();
  53:src/../h/Riscv.hpp **** 
  54:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  55:src/../h/Riscv.hpp **** 
  56:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  57:src/../h/Riscv.hpp ****     {
  58:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  59:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  60:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  61:src/../h/Riscv.hpp ****     };
  62:src/../h/Riscv.hpp **** 
  63:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  64:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/ccgWpG8G.s 			page 3


  65:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  66:src/../h/Riscv.hpp **** 
  67:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  68:src/../h/Riscv.hpp **** 
  69:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp ****     static void popSppSpie();
  72:src/../h/Riscv.hpp **** 
  73:src/../h/Riscv.hpp ****     static void supervisorTrap();
  74:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  75:src/../h/Riscv.hpp **** 
  76:src/../h/Riscv.hpp ****     static const uint64 bntOne = 1UL << 63;;
  77:src/../h/Riscv.hpp ****     static const uint64 bntZero = 0UL;
  78:src/../h/Riscv.hpp ****     static const uint64 timerInterrupt = bntOne + 1UL;
  79:src/../h/Riscv.hpp ****     static const uint64 hwInterrupt = bntOne + 9UL;
  80:src/../h/Riscv.hpp ****     static const uint64 operationInterrupt = bntZero + 2UL;
  81:src/../h/Riscv.hpp ****     static const uint64 addrReadInterrupt = bntZero + 5UL;
  82:src/../h/Riscv.hpp ****     static const uint64 addrWriteInterrupt = bntZero + 7UL;
  83:src/../h/Riscv.hpp ****     static const uint64 ecallUserInterrupt = bntZero + 8UL;
  84:src/../h/Riscv.hpp ****     static const uint64 ecallSystemInterupt = bntZero + 9UL;
  85:src/../h/Riscv.hpp **** };
  86:src/../h/Riscv.hpp **** 
  87:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause() {
  88:src/../h/Riscv.hpp ****     uint64 volatile scause;
  89:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
  90:src/../h/Riscv.hpp ****     return scause;
  91:src/../h/Riscv.hpp **** }
  92:src/../h/Riscv.hpp **** 
  93:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
  94:src/../h/Riscv.hpp ****     __asm__ volatile("csrw scause, %0" : :"r"(scause));
  95:src/../h/Riscv.hpp **** }
  96:src/../h/Riscv.hpp **** 
  97:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc() {
  98:src/../h/Riscv.hpp ****     uint64 volatile sepc;
  99:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 100:src/../h/Riscv.hpp ****     return sepc;
 101:src/../h/Riscv.hpp **** }
 102:src/../h/Riscv.hpp **** 
 103:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
 104:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sepc, %0" : :"r"(sepc));
 105:src/../h/Riscv.hpp **** }
 106:src/../h/Riscv.hpp **** 
 107:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec() {
 108:src/../h/Riscv.hpp ****     uint64 volatile stvec;
 109:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, stvec" : "=r"(stvec));
 110:src/../h/Riscv.hpp ****     return stvec;
 111:src/../h/Riscv.hpp **** }
 112:src/../h/Riscv.hpp **** 
 113:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 114:src/../h/Riscv.hpp ****     __asm__ volatile("csrw stvec, %0" : :"r"(stvec));
  35              		.loc 2 114 5 is_stmt 1
  36              		.loc 2 114 53 is_stmt 0
  37              	#APP
  38              	# 114 "src/../h/Riscv.hpp" 1
 115              	}
  39              		csrw stvec, a5
  40              	# 0 "" 2
GAS LISTING /tmp/ccgWpG8G.s 			page 4


  41              	.LVL1:
  42              	#NO_APP
  43              	.LBE83:
  44              	.LBE82:
  17:src/Riscv.cpp ****     Thread* t = new Thread(0, 0);
  45              		.loc 1 17 5 is_stmt 1
  46              		.loc 1 17 32 is_stmt 0
  47 0024 13050002 		li	a0,32
  48              	.LEHB0:
  49 0028 97000000 		call	_Znwm@plt
  49      E7800000 
  50              	.LVL2:
  51              	.LEHE0:
  52 0030 93040500 		mv	s1,a0
  53 0034 13060000 		li	a2,0
  54 0038 93050000 		li	a1,0
  55              	.LEHB1:
  56 003c 97000000 		call	_ZN6ThreadC1EPFvPvES0_@plt
  56      E7800000 
  57              	.LVL3:
  58              	.LEHE1:
  18:src/Riscv.cpp ****     t->start();
  59              		.loc 1 18 5 is_stmt 1 discriminator 2
  60              		.loc 1 18 13 is_stmt 0 discriminator 2
  61 0044 13850400 		mv	a0,s1
  62              	.LEHB2:
  63 0048 97000000 		call	_ZN6Thread5startEv@plt
  63      E7800000 
  64              	.LVL4:
  19:src/Riscv.cpp ****     PCB::running = Scheduler::get();
  65              		.loc 1 19 5 is_stmt 1 discriminator 2
  66              		.loc 1 19 34 is_stmt 0 discriminator 2
  67 0050 97000000 		call	_ZN9Scheduler3getEv@plt
  67      E7800000 
  68              	.LVL5:
  69              	.LEHE2:
  70              		.loc 1 19 18 discriminator 2
  71 0058 97070000 		la	a5,_ZN3PCB7runningE
  71      83B70700 
  72 0060 23B0A700 		sd	a0,0(a5)
  20:src/Riscv.cpp ****     PCB::running->setState(PCB::RUNNING);
  73              		.loc 1 20 5 is_stmt 1 discriminator 2
  74              	.LVL6:
  75              	.LBB84:
  76              	.LBB85:
  77              		.file 3 "src/../h/PCB.hpp"
   1:src/../h/PCB.hpp **** //
   2:src/../h/PCB.hpp **** // Created by os on 4/27/22.
   3:src/../h/PCB.hpp **** //
   4:src/../h/PCB.hpp **** 
   5:src/../h/PCB.hpp **** #ifndef PROJECT_BASE_V1_0_PCB_HPP
   6:src/../h/PCB.hpp **** #define PROJECT_BASE_V1_0_PCB_HPP
   7:src/../h/PCB.hpp **** 
   8:src/../h/PCB.hpp **** #include "../lib/hw.h"
   9:src/../h/PCB.hpp **** #include "Scheduler.hpp"
  10:src/../h/PCB.hpp **** #include "Riscv.hpp"
  11:src/../h/PCB.hpp **** 
GAS LISTING /tmp/ccgWpG8G.s 			page 5


  12:src/../h/PCB.hpp **** class PCB
  13:src/../h/PCB.hpp **** {
  14:src/../h/PCB.hpp **** public:
  15:src/../h/PCB.hpp ****     using Body = void (*)(void*);
  16:src/../h/PCB.hpp **** 
  17:src/../h/PCB.hpp ****     PCB(Body body,  void* args, void* stack_space, uint64 timeSlice);
  18:src/../h/PCB.hpp ****     ~PCB();
  19:src/../h/PCB.hpp **** 
  20:src/../h/PCB.hpp ****     void start();
  21:src/../h/PCB.hpp ****     static void dispatch();
  22:src/../h/PCB.hpp ****     static void sleep(time_t);
  23:src/../h/PCB.hpp **** 
  24:src/../h/PCB.hpp ****     static PCB* running;
  25:src/../h/PCB.hpp ****     static PCB* exitingPCB;
  26:src/../h/PCB.hpp **** 
  27:src/../h/PCB.hpp ****     static uint64 timeSliceCounter;
  28:src/../h/PCB.hpp ****     uint64 getTimeSlice() { return timeSlice;}
  29:src/../h/PCB.hpp **** 
  30:src/../h/PCB.hpp ****     void* operator new(size_t size);
  31:src/../h/PCB.hpp ****     void operator delete(void *p);
  32:src/../h/PCB.hpp **** 
  33:src/../h/PCB.hpp ****     enum State{READY, RUNNING, SUSPENDED, FINISHED, EXITING, SLEEPING};
  34:src/../h/PCB.hpp ****     State getState() {return state;}
  35:src/../h/PCB.hpp ****     void setState(State s) {state = s;}
  78              		.loc 3 35 29 discriminator 2
  79              		.loc 3 35 35 is_stmt 0 discriminator 2
  80 0064 93071000 		li	a5,1
  81 0068 2328F502 		sw	a5,48(a0)
  82              	.LVL7:
  83              	.LBE85:
  84              	.LBE84:
  21:src/Riscv.cpp **** }
  85              		.loc 1 21 1 discriminator 2
  86 006c 83308101 		ld	ra,24(sp)
  87              		.cfi_remember_state
  88              		.cfi_restore 1
  89 0070 03340101 		ld	s0,16(sp)
  90              		.cfi_restore 8
  91              		.cfi_def_cfa 2, 32
  92 0074 83348100 		ld	s1,8(sp)
  93              		.cfi_restore 9
  94              	.LVL8:
  95 0078 03390100 		ld	s2,0(sp)
  96              		.cfi_restore 18
  97 007c 13010102 		addi	sp,sp,32
  98              		.cfi_def_cfa_offset 0
  99 0080 67800000 		jr	ra
 100              	.L3:
 101              		.cfi_restore_state
 102 0084 13090500 		mv	s2,a0
  17:src/Riscv.cpp ****     t->start();
 103              		.loc 1 17 32
 104 0088 13850400 		mv	a0,s1
 105 008c 97000000 		call	_ZdlPv@plt
 105      E7800000 
 106              	.LVL9:
 107 0094 13050900 		mv	a0,s2
GAS LISTING /tmp/ccgWpG8G.s 			page 6


 108              	.LEHB3:
 109 0098 97000000 		call	_Unwind_Resume@plt
 109      E7800000 
 110              	.LVL10:
 111              	.LEHE3:
 112              		.cfi_endproc
 113              	.LFE23:
 114              		.globl	__gxx_personality_v0
 115              		.section	.gcc_except_table,"a",@progbits
 116              	.LLSDA23:
 117 0000 FF       		.byte	0xff
 118 0001 FF       		.byte	0xff
 119 0002 03       		.byte	0x3
 120 0003 34       		.byte	0x34
 121 0004 00000000 		.4byte	.LEHB0-.LFB23
 122 0008 00000000 		.4byte	.LEHE0-.LEHB0
 123 000c 00000000 		.4byte	0
 124 0010 00       		.byte	0
 125 0011 00000000 		.4byte	.LEHB1-.LFB23
 126 0015 00000000 		.4byte	.LEHE1-.LEHB1
 127 0019 00000000 		.4byte	.L3-.LFB23
 128 001d 00       		.byte	0
 129 001e 00000000 		.4byte	.LEHB2-.LFB23
 130 0022 00000000 		.4byte	.LEHE2-.LEHB2
 131 0026 00000000 		.4byte	0
 132 002a 00       		.byte	0
 133 002b 00000000 		.4byte	.LEHB3-.LFB23
 134 002f 00000000 		.4byte	.LEHE3-.LEHB3
 135 0033 00000000 		.4byte	0
 136 0037 00       		.byte	0
 137              		.text
 139              		.align	2
 140              		.globl	_ZN5Riscv16enableInterruptsEv
 142              	_ZN5Riscv16enableInterruptsEv:
 143              	.LFB25:
  22:src/Riscv.cpp **** 
  23:src/Riscv.cpp **** void Riscv::endSystem() {
  24:src/Riscv.cpp ****     //todo
  25:src/Riscv.cpp ****     //da li treba jos nesto da se ocisti
  26:src/Riscv.cpp ****     Riscv::disableInterrupts();
  27:src/Riscv.cpp **** }
  28:src/Riscv.cpp **** 
  29:src/Riscv.cpp **** 
  30:src/Riscv.cpp **** void Riscv::enableInterrupts() {
 144              		.loc 1 30 32 is_stmt 1
 145              		.cfi_startproc
 146 00a0 130101FF 		addi	sp,sp,-16
 147              		.cfi_def_cfa_offset 16
 148 00a4 23348100 		sd	s0,8(sp)
 149              		.cfi_offset 8, -8
 150 00a8 13040101 		addi	s0,sp,16
 151              		.cfi_def_cfa 8, 0
  31:src/Riscv.cpp ****     ms_sstatus(Riscv::SSTATUS_SIE);
 152              		.loc 1 31 5
 153              	.LVL11:
 154              	.LBB86:
 155              	.LBB87:
GAS LISTING /tmp/ccgWpG8G.s 			page 7


 116:src/../h/Riscv.hpp **** 
 117:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stval() {
 118:src/../h/Riscv.hpp ****     uint64 volatile stval;
 119:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, stval" : "=r"(stval));
 120:src/../h/Riscv.hpp ****     return stval;
 121:src/../h/Riscv.hpp **** }
 122:src/../h/Riscv.hpp **** 
 123:src/../h/Riscv.hpp **** inline void Riscv::w_stval(uint64 stval) {
 124:src/../h/Riscv.hpp ****     __asm__ volatile("csrw stval, %0" : :"r"(stval));
 125:src/../h/Riscv.hpp **** }
 126:src/../h/Riscv.hpp **** 
 127:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 128:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sip, %0" : :"r"(mask));
 129:src/../h/Riscv.hpp **** }
 130:src/../h/Riscv.hpp **** 
 131:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 132:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sip, %0" : :"r"(mask));
 133:src/../h/Riscv.hpp **** }
 134:src/../h/Riscv.hpp **** 
 135:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip() {
 136:src/../h/Riscv.hpp ****     uint64 volatile sip;
 137:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sip" : "=r"(sip));
 138:src/../h/Riscv.hpp ****     return sip;
 139:src/../h/Riscv.hpp **** }
 140:src/../h/Riscv.hpp **** 
 141:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 142:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sip, %0" : :"r"(sip));
 143:src/../h/Riscv.hpp **** }
 144:src/../h/Riscv.hpp **** 
 145:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 146:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sstatus, %0" : :"r"(mask));
 156              		.loc 2 146 5
 157              		.loc 2 146 54 is_stmt 0
 158 00ac 93072000 		li	a5,2
 159              	#APP
 160              	# 146 "src/../h/Riscv.hpp" 1
 147              	}
 161              		csrs sstatus, a5
 162              	# 0 "" 2
 163              	.LVL12:
 164              	#NO_APP
 165              	.LBE87:
 166              	.LBE86:
  32:src/Riscv.cpp **** }
 167              		.loc 1 32 1
 168 00b4 03348100 		ld	s0,8(sp)
 169              		.cfi_restore 8
 170              		.cfi_def_cfa 2, 16
 171 00b8 13010101 		addi	sp,sp,16
 172              		.cfi_def_cfa_offset 0
 173 00bc 67800000 		jr	ra
 174              		.cfi_endproc
 175              	.LFE25:
 177              		.align	2
 178              		.globl	_ZN5Riscv17disableInterruptsEv
 180              	_ZN5Riscv17disableInterruptsEv:
 181              	.LFB26:
GAS LISTING /tmp/ccgWpG8G.s 			page 8


  33:src/Riscv.cpp **** 
  34:src/Riscv.cpp **** void Riscv::disableInterrupts()
  35:src/Riscv.cpp **** {
 182              		.loc 1 35 1 is_stmt 1
 183              		.cfi_startproc
 184 00c0 130101FF 		addi	sp,sp,-16
 185              		.cfi_def_cfa_offset 16
 186 00c4 23348100 		sd	s0,8(sp)
 187              		.cfi_offset 8, -8
 188 00c8 13040101 		addi	s0,sp,16
 189              		.cfi_def_cfa 8, 0
  36:src/Riscv.cpp ****     mc_sstatus(Riscv::SSTATUS_SIE);
 190              		.loc 1 36 5
 191              	.LVL13:
 192              	.LBB88:
 193              	.LBB89:
 148:src/../h/Riscv.hpp **** 
 149:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 150:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sstatus, %0" : :"r"(mask));
 194              		.loc 2 150 5
 195              		.loc 2 150 54 is_stmt 0
 196 00cc 93072000 		li	a5,2
 197              	#APP
 198              	# 150 "src/../h/Riscv.hpp" 1
 151              	}
 199              		csrc sstatus, a5
 200              	# 0 "" 2
 201              	.LVL14:
 202              	#NO_APP
 203              	.LBE89:
 204              	.LBE88:
  37:src/Riscv.cpp **** }
 205              		.loc 1 37 1
 206 00d4 03348100 		ld	s0,8(sp)
 207              		.cfi_restore 8
 208              		.cfi_def_cfa 2, 16
 209 00d8 13010101 		addi	sp,sp,16
 210              		.cfi_def_cfa_offset 0
 211 00dc 67800000 		jr	ra
 212              		.cfi_endproc
 213              	.LFE26:
 215              		.align	2
 216              		.globl	_ZN5Riscv9endSystemEv
 218              	_ZN5Riscv9endSystemEv:
 219              	.LFB24:
  23:src/Riscv.cpp ****     //todo
 220              		.loc 1 23 25 is_stmt 1
 221              		.cfi_startproc
 222 00e0 130101FF 		addi	sp,sp,-16
 223              		.cfi_def_cfa_offset 16
 224 00e4 23341100 		sd	ra,8(sp)
 225 00e8 23308100 		sd	s0,0(sp)
 226              		.cfi_offset 1, -8
 227              		.cfi_offset 8, -16
 228 00ec 13040101 		addi	s0,sp,16
 229              		.cfi_def_cfa 8, 0
  26:src/Riscv.cpp **** }
GAS LISTING /tmp/ccgWpG8G.s 			page 9


 230              		.loc 1 26 5
  26:src/Riscv.cpp **** }
 231              		.loc 1 26 29 is_stmt 0
 232 00f0 97000000 		call	_ZN5Riscv17disableInterruptsEv
 232      E7800000 
 233              	.LVL15:
  27:src/Riscv.cpp **** 
 234              		.loc 1 27 1
 235 00f8 83308100 		ld	ra,8(sp)
 236              		.cfi_restore 1
 237 00fc 03340100 		ld	s0,0(sp)
 238              		.cfi_restore 8
 239              		.cfi_def_cfa 2, 16
 240 0100 13010101 		addi	sp,sp,16
 241              		.cfi_def_cfa_offset 0
 242 0104 67800000 		jr	ra
 243              		.cfi_endproc
 244              	.LFE24:
 246              		.align	2
 247              		.globl	_ZN5Riscv10popSppSpieEv
 249              	_ZN5Riscv10popSppSpieEv:
 250              	.LFB27:
  38:src/Riscv.cpp **** 
  39:src/Riscv.cpp **** void Riscv::popSppSpie() {
 251              		.loc 1 39 26 is_stmt 1
 252              		.cfi_startproc
 253 0108 130101FF 		addi	sp,sp,-16
 254              		.cfi_def_cfa_offset 16
 255 010c 23348100 		sd	s0,8(sp)
 256              		.cfi_offset 8, -8
 257 0110 13040101 		addi	s0,sp,16
 258              		.cfi_def_cfa 8, 0
  40:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
 259              		.loc 1 40 5
 260              		.loc 1 40 39 is_stmt 0
 261              	#APP
 262              	# 40 "src/Riscv.cpp" 1
  41              	    __asm__ volatile ("sret");
 263              		csrw sepc, ra
 264              	# 0 "" 2
 265              		.loc 1 41 5 is_stmt 1
 266              		.loc 1 41 30 is_stmt 0
 267              	# 41 "src/Riscv.cpp" 1
  42              	}
 268              		sret
 269              	# 0 "" 2
 270              		.loc 1 42 1
 271              	#NO_APP
 272 011c 03348100 		ld	s0,8(sp)
 273              		.cfi_restore 8
 274              		.cfi_def_cfa 2, 16
 275 0120 13010101 		addi	sp,sp,16
 276              		.cfi_def_cfa_offset 0
 277 0124 67800000 		jr	ra
 278              		.cfi_endproc
 279              	.LFE27:
 281              		.align	2
GAS LISTING /tmp/ccgWpG8G.s 			page 10


 282              		.globl	_ZN5Riscv11printStringEPKc
 284              	_ZN5Riscv11printStringEPKc:
 285              	.LFB28:
  43:src/Riscv.cpp **** 
  44:src/Riscv.cpp **** void Riscv::printString(const char *string)
  45:src/Riscv.cpp **** {
 286              		.loc 1 45 1 is_stmt 1
 287              		.cfi_startproc
 288              	.LVL16:
 289 0128 130101FD 		addi	sp,sp,-48
 290              		.cfi_def_cfa_offset 48
 291 012c 23341102 		sd	ra,40(sp)
 292 0130 23308102 		sd	s0,32(sp)
 293 0134 233C9100 		sd	s1,24(sp)
 294 0138 23382101 		sd	s2,16(sp)
 295              		.cfi_offset 1, -8
 296              		.cfi_offset 8, -16
 297              		.cfi_offset 9, -24
 298              		.cfi_offset 18, -32
 299 013c 13040103 		addi	s0,sp,48
 300              		.cfi_def_cfa 8, 0
 301 0140 93040500 		mv	s1,a0
  46:src/Riscv.cpp ****     uint64 sstatus = r_sstatus();
 302              		.loc 1 46 5
 303              	.LBB90:
 304              	.LBB91:
 152:src/../h/Riscv.hpp **** 
 153:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sstatus() {
 154:src/../h/Riscv.hpp ****     uint64 volatile sstatus;
 305              		.loc 2 154 5
 155:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 306              		.loc 2 155 5
 307              		.loc 2 155 57 is_stmt 0
 308              	#APP
 309              	# 155 "src/../h/Riscv.hpp" 1
 156              	    return sstatus;
 310              		csrr a5, sstatus
 311              	# 0 "" 2
 312              	#NO_APP
 313 0148 233CF4FC 		sd	a5,-40(s0)
 314              		.loc 2 156 5 is_stmt 1
 315              		.loc 2 156 12 is_stmt 0
 316 014c 033984FD 		ld	s2,-40(s0)
 317              	.LVL17:
 318              	.LBE91:
 319              	.LBE90:
  47:src/Riscv.cpp ****     mc_sstatus(SSTATUS_SIE);
 320              		.loc 1 47 5 is_stmt 1
 321              	.LBB92:
 322              	.LBB93:
 150:src/../h/Riscv.hpp **** }
 323              		.loc 2 150 5
 150:src/../h/Riscv.hpp **** }
 324              		.loc 2 150 54 is_stmt 0
 325 0150 93072000 		li	a5,2
 326              	#APP
 327              	# 150 "src/../h/Riscv.hpp" 1
GAS LISTING /tmp/ccgWpG8G.s 			page 11


 328              		csrc sstatus, a5
 329              	# 0 "" 2
 330              	.LVL18:
 331              	#NO_APP
 332              	.L16:
 333              	.LBE93:
 334              	.LBE92:
  48:src/Riscv.cpp ****     while (*string != '\0')
 335              		.loc 1 48 5 is_stmt 1
 336              		.loc 1 48 20
 337              		.loc 1 48 12 is_stmt 0
 338 0158 03C50400 		lbu	a0,0(s1)
 339              		.loc 1 48 20
 340 015c 630A0500 		beqz	a0,.L15
  49:src/Riscv.cpp ****     {
  50:src/Riscv.cpp ****         __putc(*string);
 341              		.loc 1 50 9 is_stmt 1
 342              		.loc 1 50 15 is_stmt 0
 343 0160 97000000 		call	__putc@plt
 343      E7800000 
 344              	.LVL19:
  51:src/Riscv.cpp ****         string++;
 345              		.loc 1 51 9 is_stmt 1
 346              		.loc 1 51 15 is_stmt 0
 347 0168 93841400 		addi	s1,s1,1
 348              	.LVL20:
  48:src/Riscv.cpp ****     while (*string != '\0')
 349              		.loc 1 48 5
 350 016c 6FF0DFFE 		j	.L16
 351              	.L15:
  52:src/Riscv.cpp ****     }
  53:src/Riscv.cpp ****     ms_sstatus(sstatus & SSTATUS_SIE ? SSTATUS_SIE : 0);
 352              		.loc 1 53 5 is_stmt 1
 353              		.loc 1 53 38 is_stmt 0
 354 0170 1B090900 		sext.w	s2,s2
 355              	.LVL21:
 356              		.loc 1 53 15
 357 0174 13792900 		andi	s2,s2,2
 358 0178 1B090900 		sext.w	s2,s2
 359              	.LVL22:
 360              	.LBB94:
 361              	.LBB95:
 146:src/../h/Riscv.hpp **** }
 362              		.loc 2 146 5 is_stmt 1
 146:src/../h/Riscv.hpp **** }
 363              		.loc 2 146 54 is_stmt 0
 364              	#APP
 365              	# 146 "src/../h/Riscv.hpp" 1
 366              		csrs sstatus, s2
 367              	# 0 "" 2
 368              	.LVL23:
 369              	#NO_APP
 370              	.LBE95:
 371              	.LBE94:
  54:src/Riscv.cpp **** }
 372              		.loc 1 54 1
 373 0180 83308102 		ld	ra,40(sp)
GAS LISTING /tmp/ccgWpG8G.s 			page 12


 374              		.cfi_restore 1
 375 0184 03340102 		ld	s0,32(sp)
 376              		.cfi_restore 8
 377              		.cfi_def_cfa 2, 48
 378 0188 83348101 		ld	s1,24(sp)
 379              		.cfi_restore 9
 380              	.LVL24:
 381 018c 03390101 		ld	s2,16(sp)
 382              		.cfi_restore 18
 383 0190 13010103 		addi	sp,sp,48
 384              		.cfi_def_cfa_offset 0
 385 0194 67800000 		jr	ra
 386              		.cfi_endproc
 387              	.LFE28:
 389              		.align	2
 390              		.globl	_ZN5Riscv12printIntegerEm
 392              	_ZN5Riscv12printIntegerEm:
 393              	.LFB29:
  55:src/Riscv.cpp **** 
  56:src/Riscv.cpp **** void Riscv::printInteger(uint64 num)
  57:src/Riscv.cpp **** {
 394              		.loc 1 57 1 is_stmt 1
 395              		.cfi_startproc
 396              	.LVL25:
 397 0198 130101FC 		addi	sp,sp,-64
 398              		.cfi_def_cfa_offset 64
 399 019c 233C1102 		sd	ra,56(sp)
 400 01a0 23388102 		sd	s0,48(sp)
 401 01a4 23349102 		sd	s1,40(sp)
 402 01a8 23302103 		sd	s2,32(sp)
 403              		.cfi_offset 1, -8
 404              		.cfi_offset 8, -16
 405              		.cfi_offset 9, -24
 406              		.cfi_offset 18, -32
 407 01ac 13040104 		addi	s0,sp,64
 408              		.cfi_def_cfa 8, 0
  58:src/Riscv.cpp ****     uint64 sstatus = r_sstatus();
 409              		.loc 1 58 5
 410              	.LBB96:
 411              	.LBB97:
 154:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 412              		.loc 2 154 5
 155:src/../h/Riscv.hpp ****     return sstatus;
 413              		.loc 2 155 5
 155:src/../h/Riscv.hpp ****     return sstatus;
 414              		.loc 2 155 57 is_stmt 0
 415              	#APP
 416              	# 155 "src/../h/Riscv.hpp" 1
 417              		csrr a5, sstatus
 418              	# 0 "" 2
 419              	#NO_APP
 420 01b4 2334F4FC 		sd	a5,-56(s0)
 421              		.loc 2 156 5 is_stmt 1
 422              		.loc 2 156 12 is_stmt 0
 423 01b8 033984FC 		ld	s2,-56(s0)
 424              	.LVL26:
 425              	.LBE97:
GAS LISTING /tmp/ccgWpG8G.s 			page 13


 426              	.LBE96:
  59:src/Riscv.cpp ****     mc_sstatus(SSTATUS_SIE);
 427              		.loc 1 59 5 is_stmt 1
 428              	.LBB98:
 429              	.LBB99:
 150:src/../h/Riscv.hpp **** }
 430              		.loc 2 150 5
 150:src/../h/Riscv.hpp **** }
 431              		.loc 2 150 54 is_stmt 0
 432 01bc 93072000 		li	a5,2
 433              	#APP
 434              	# 150 "src/../h/Riscv.hpp" 1
 435              		csrc sstatus, a5
 436              	# 0 "" 2
 437              	.LVL27:
 438              	#NO_APP
 439              	.LBE99:
 440              	.LBE98:
  60:src/Riscv.cpp ****     static char digits[] = "0123456789";
 441              		.loc 1 60 5 is_stmt 1
  61:src/Riscv.cpp ****     char buf[16];
 442              		.loc 1 61 5
  62:src/Riscv.cpp ****     int i, neg;
 443              		.loc 1 62 5
  63:src/Riscv.cpp ****     uint x;
 444              		.loc 1 63 5
  64:src/Riscv.cpp **** 
  65:src/Riscv.cpp ****     neg = 0;
 445              		.loc 1 65 5
  66:src/Riscv.cpp ****     if(num < 0)
 446              		.loc 1 66 5
  67:src/Riscv.cpp ****     {
  68:src/Riscv.cpp ****         neg = 1;
  69:src/Riscv.cpp ****         x = -num;
  70:src/Riscv.cpp ****     }
  71:src/Riscv.cpp ****     else
  72:src/Riscv.cpp ****         x = num;
 447              		.loc 1 72 9
 448              		.loc 1 72 11 is_stmt 0
 449 01c4 1B050500 		sext.w	a0,a0
 450              	.LVL28:
  73:src/Riscv.cpp **** 
  74:src/Riscv.cpp ****     i = 0;
 451              		.loc 1 74 5 is_stmt 1
 452              		.loc 1 74 7 is_stmt 0
 453 01c8 93040000 		li	s1,0
 454              	.LVL29:
 455              	.L19:
  75:src/Riscv.cpp ****     do
 456              		.loc 1 75 5 is_stmt 1
  76:src/Riscv.cpp ****     {
  77:src/Riscv.cpp ****         buf[i++] = digits[x%10];
 457              		.loc 1 77 9
 458              		.loc 1 77 28 is_stmt 0
 459 01cc 1306A000 		li	a2,10
 460 01d0 3B77C502 		remuw	a4,a0,a2
 461              	.LVL30:
GAS LISTING /tmp/ccgWpG8G.s 			page 14


 462              		.loc 1 77 31
 463 01d4 93160702 		slli	a3,a4,32
 464 01d8 93D60602 		srli	a3,a3,32
 465 01dc 17070000 		lla	a4,.LANCHOR0
 465      13070700 
 466 01e4 3307D700 		add	a4,a4,a3
 467 01e8 03470700 		lbu	a4,0(a4)
 468              		.loc 1 77 18
 469 01ec 930604FE 		addi	a3,s0,-32
 470 01f0 B3879600 		add	a5,a3,s1
 471 01f4 9B841400 		addiw	s1,s1,1
 472              	.LVL31:
 473 01f8 2388E7FE 		sb	a4,-16(a5)
  78:src/Riscv.cpp ****     }while((x/=10) != 0);
 474              		.loc 1 78 20 is_stmt 1
 475 01fc 1B070500 		sext.w	a4,a0
 476              		.loc 1 78 14 is_stmt 0
 477 0200 3B55C502 		divuw	a0,a0,a2
 478              	.LVL32:
 479              		.loc 1 78 20
 480 0204 93079000 		li	a5,9
 481 0208 E3E2E7FC 		bgtu	a4,a5,.L19
 482              	.LVL33:
 483              	.L21:
  79:src/Riscv.cpp ****     if(neg)
  80:src/Riscv.cpp ****         buf[i++] = '-';
  81:src/Riscv.cpp **** 
  82:src/Riscv.cpp ****     while(--i >= 0)
 484              		.loc 1 82 5 is_stmt 1
 485              		.loc 1 82 15
 486 020c 9B84F4FF 		addiw	s1,s1,-1
 487              	.LVL34:
 488 0210 63CE0400 		bltz	s1,.L20
  83:src/Riscv.cpp ****         __putc(buf[i]);
 489              		.loc 1 83 9
 490              		.loc 1 83 15 is_stmt 0
 491 0214 930704FE 		addi	a5,s0,-32
 492 0218 B3879700 		add	a5,a5,s1
 493 021c 03C507FF 		lbu	a0,-16(a5)
 494 0220 97000000 		call	__putc@plt
 494      E7800000 
 495              	.LVL35:
 496 0228 6FF05FFE 		j	.L21
 497              	.L20:
  84:src/Riscv.cpp **** 
  85:src/Riscv.cpp ****     __putc('\n');
 498              		.loc 1 85 5 is_stmt 1
 499              		.loc 1 85 11 is_stmt 0
 500 022c 1305A000 		li	a0,10
 501 0230 97000000 		call	__putc@plt
 501      E7800000 
 502              	.LVL36:
  86:src/Riscv.cpp **** 
  87:src/Riscv.cpp ****     ms_sstatus(sstatus & SSTATUS_SIE ? SSTATUS_SIE : 0);
 503              		.loc 1 87 5 is_stmt 1
 504              		.loc 1 87 38 is_stmt 0
 505 0238 1B090900 		sext.w	s2,s2
GAS LISTING /tmp/ccgWpG8G.s 			page 15


 506              	.LVL37:
 507              		.loc 1 87 15
 508 023c 13792900 		andi	s2,s2,2
 509 0240 1B090900 		sext.w	s2,s2
 510              	.LVL38:
 511              	.LBB100:
 512              	.LBB101:
 146:src/../h/Riscv.hpp **** }
 513              		.loc 2 146 5 is_stmt 1
 146:src/../h/Riscv.hpp **** }
 514              		.loc 2 146 54 is_stmt 0
 515              	#APP
 516              	# 146 "src/../h/Riscv.hpp" 1
 517              		csrs sstatus, s2
 518              	# 0 "" 2
 519              	.LVL39:
 520              	#NO_APP
 521              	.LBE101:
 522              	.LBE100:
  88:src/Riscv.cpp **** }
 523              		.loc 1 88 1
 524 0248 83308103 		ld	ra,56(sp)
 525              		.cfi_restore 1
 526 024c 03340103 		ld	s0,48(sp)
 527              		.cfi_restore 8
 528              		.cfi_def_cfa 2, 64
 529 0250 83348102 		ld	s1,40(sp)
 530              		.cfi_restore 9
 531 0254 03390102 		ld	s2,32(sp)
 532              		.cfi_restore 18
 533 0258 13010104 		addi	sp,sp,64
 534              		.cfi_def_cfa_offset 0
 535 025c 67800000 		jr	ra
 536              		.cfi_endproc
 537              	.LFE29:
 539              		.align	2
 540              		.globl	_ZN5Riscv20handleSupervisorTrapEv
 542              	_ZN5Riscv20handleSupervisorTrapEv:
 543              	.LFB30:
  89:src/Riscv.cpp **** 
  90:src/Riscv.cpp **** void Riscv::handleSupervisorTrap()
  91:src/Riscv.cpp **** {
 544              		.loc 1 91 1 is_stmt 1
 545              		.cfi_startproc
 546              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 547              		.cfi_lsda 0x1b,.LLSDA30
 548 0260 130101F8 		addi	sp,sp,-128
 549              		.cfi_def_cfa_offset 128
 550 0264 233C1106 		sd	ra,120(sp)
 551 0268 23388106 		sd	s0,112(sp)
 552 026c 23349106 		sd	s1,104(sp)
 553 0270 23302107 		sd	s2,96(sp)
 554 0274 233C3105 		sd	s3,88(sp)
 555 0278 23384105 		sd	s4,80(sp)
 556 027c 23345105 		sd	s5,72(sp)
 557 0280 23306105 		sd	s6,64(sp)
 558              		.cfi_offset 1, -8
GAS LISTING /tmp/ccgWpG8G.s 			page 16


 559              		.cfi_offset 8, -16
 560              		.cfi_offset 9, -24
 561              		.cfi_offset 18, -32
 562              		.cfi_offset 19, -40
 563              		.cfi_offset 20, -48
 564              		.cfi_offset 21, -56
 565              		.cfi_offset 22, -64
 566 0284 13040108 		addi	s0,sp,128
 567              		.cfi_def_cfa 8, 0
  92:src/Riscv.cpp ****     uint64 a4;
 568              		.loc 1 92 5
  93:src/Riscv.cpp ****     __asm__ volatile("mv %0, a4" : "=r"(a4));
 569              		.loc 1 93 5
 570              		.loc 1 93 45 is_stmt 0
 571              	#APP
 572              	# 93 "src/Riscv.cpp" 1
  94              	
 573              		mv s2, a4
 574              	# 0 "" 2
 575              	.LVL40:
  95:src/Riscv.cpp ****     uint64 scause = Riscv::r_scause();
 576              		.loc 1 95 5 is_stmt 1
 577              	#NO_APP
 578              	.LBB102:
 579              	.LBB103:
  88:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
 580              		.loc 2 88 5
  89:src/../h/Riscv.hpp ****     return scause;
 581              		.loc 2 89 5
  89:src/../h/Riscv.hpp ****     return scause;
 582              		.loc 2 89 55 is_stmt 0
 583              	#APP
 584              	# 89 "src/../h/Riscv.hpp" 1
 585              		csrr a5, scause
 586              	# 0 "" 2
 587              	#NO_APP
 588 0290 2334F4F8 		sd	a5,-120(s0)
  90:src/../h/Riscv.hpp **** }
 589              		.loc 2 90 5 is_stmt 1
  90:src/../h/Riscv.hpp **** }
 590              		.loc 2 90 12 is_stmt 0
 591 0294 033784F8 		ld	a4,-120(s0)
 592              	.LVL41:
 593              	.LBE103:
 594              	.LBE102:
  96:src/Riscv.cpp **** 
  97:src/Riscv.cpp ****     switch(scause)
 595              		.loc 1 97 5 is_stmt 1
 596              	.LBB104:
 597 0298 93079000 		li	a5,9
 598 029c 63F4E708 		bleu	a4,a5,.L47
 599 02a0 9307F0FF 		li	a5,-1
 600 02a4 9397F703 		slli	a5,a5,63
 601 02a8 93871700 		addi	a5,a5,1
 602 02ac 6310F708 		bne	a4,a5,.L26
 603              	.LBB105:
  98:src/Riscv.cpp ****     {
GAS LISTING /tmp/ccgWpG8G.s 			page 17


  99:src/Riscv.cpp **** 
 100:src/Riscv.cpp ****         case timerInterrupt:
 604              		.loc 1 100 9
 101:src/Riscv.cpp **** 
 102:src/Riscv.cpp ****             Riscv::mc_sip(Riscv::SIP_SSIP);
 605              		.loc 1 102 13
 606              	.LVL42:
 607              	.LBB106:
 608              	.LBB107:
 132:src/../h/Riscv.hpp **** }
 609              		.loc 2 132 5
 132:src/../h/Riscv.hpp **** }
 610              		.loc 2 132 50 is_stmt 0
 611 02b0 93072000 		li	a5,2
 612              	#APP
 613              	# 132 "src/../h/Riscv.hpp" 1
 614              		csrc sip, a5
 615              	# 0 "" 2
 616              	.LVL43:
 617              	#NO_APP
 618              	.LBE107:
 619              	.LBE106:
 103:src/Riscv.cpp ****             //Riscv::printString("timerInterrupt\n");
 104:src/Riscv.cpp **** 
 105:src/Riscv.cpp ****             PCB::timeSliceCounter++;
 620              		.loc 1 105 13 is_stmt 1
 621              		.loc 1 105 34 is_stmt 0
 622 02b8 97040000 		la	s1,_ZN3PCB16timeSliceCounterE
 622      83B40400 
 623 02c0 83B70400 		ld	a5,0(s1)
 624 02c4 93871700 		addi	a5,a5,1
 625 02c8 23B0F400 		sd	a5,0(s1)
 106:src/Riscv.cpp **** 
 107:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
 626              		.loc 1 107 13 is_stmt 1
 627              	.LEHB4:
 628              		.loc 1 107 40 is_stmt 0
 629 02cc 97000000 		call	_ZN12SleepPCBList13tryToWakePCBsEv@plt
 629      E7800000 
 630              	.LVL44:
 108:src/Riscv.cpp **** 
 109:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
 631              		.loc 1 109 13 is_stmt 1
 632              	.LBB108:
 633              		.loc 1 109 68 is_stmt 0
 634 02d4 97070000 		la	a5,_ZN3PCB7runningE
 634      83B70700 
 635 02dc 83B70700 		ld	a5,0(a5)
 636              	.LVL45:
 637              	.LBB109:
 638              	.LBB110:
  28:src/../h/PCB.hpp **** 
 639              		.loc 3 28 29 is_stmt 1
  28:src/../h/PCB.hpp **** 
 640              		.loc 3 28 36 is_stmt 0
 641 02e0 83B78700 		ld	a5,8(a5)
 642              	.LVL46:
GAS LISTING /tmp/ccgWpG8G.s 			page 18


 643              	.LBE110:
 644              	.LBE109:
 645              		.loc 1 109 39
 646 02e4 03B70400 		ld	a4,0(s1)
 647              		.loc 1 109 13
 648 02e8 6366F704 		bltu	a4,a5,.L23
 649              	.LBB111:
 110:src/Riscv.cpp ****             {
 111:src/Riscv.cpp ****                 uint64 sepc = Riscv::r_sepc();
 650              		.loc 1 111 17 is_stmt 1
 651              	.LBB112:
 652              	.LBB113:
  98:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 653              		.loc 2 98 5
  99:src/../h/Riscv.hpp ****     return sepc;
 654              		.loc 2 99 5
  99:src/../h/Riscv.hpp ****     return sepc;
 655              		.loc 2 99 51 is_stmt 0
 656              	#APP
 657              	# 99 "src/../h/Riscv.hpp" 1
 658              		csrr a5, sepc
 659              	# 0 "" 2
 660              	#NO_APP
 661 02f0 233CF4F8 		sd	a5,-104(s0)
 100:src/../h/Riscv.hpp **** }
 662              		.loc 2 100 5 is_stmt 1
 100:src/../h/Riscv.hpp **** }
 663              		.loc 2 100 12 is_stmt 0
 664 02f4 833484F9 		ld	s1,-104(s0)
 665              	.LVL47:
 666              	.LBE113:
 667              	.LBE112:
 112:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 668              		.loc 1 112 17 is_stmt 1
 669              	.LBB114:
 670              	.LBB115:
 154:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 671              		.loc 2 154 5
 155:src/../h/Riscv.hpp ****     return sstatus;
 672              		.loc 2 155 5
 155:src/../h/Riscv.hpp ****     return sstatus;
 673              		.loc 2 155 57 is_stmt 0
 674              	#APP
 675              	# 155 "src/../h/Riscv.hpp" 1
 676              		csrr a5, sstatus
 677              	# 0 "" 2
 678              	#NO_APP
 679 02fc 2338F4F8 		sd	a5,-112(s0)
 680              		.loc 2 156 5 is_stmt 1
 681              		.loc 2 156 12 is_stmt 0
 682 0300 033904F9 		ld	s2,-112(s0)
 683              	.LVL48:
 684              	.LBE115:
 685              	.LBE114:
 113:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 686              		.loc 1 113 17 is_stmt 1
 687              		.loc 1 113 39 is_stmt 0
GAS LISTING /tmp/ccgWpG8G.s 			page 19


 688 0304 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 688      83B70700 
 689 030c 23B00700 		sd	zero,0(a5)
 114:src/Riscv.cpp ****                 PCB::dispatch();
 690              		.loc 1 114 17 is_stmt 1
 691              		.loc 1 114 30 is_stmt 0
 692 0310 97000000 		call	_ZN3PCB8dispatchEv@plt
 692      E7800000 
 693              	.LVL49:
 115:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 694              		.loc 1 115 17 is_stmt 1
 695              	.LBB116:
 696              	.LBB117:
 157:src/../h/Riscv.hpp **** }
 158:src/../h/Riscv.hpp **** 
 159:src/../h/Riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus) {
 160:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sstatus, %0" : :"r"(sstatus));
 697              		.loc 2 160 5
 698              		.loc 2 160 57 is_stmt 0
 699              	#APP
 700              	# 160 "src/../h/Riscv.hpp" 1
 161              	}
 701              		csrw sstatus, s2
 702              	# 0 "" 2
 703              	.LVL50:
 704              	#NO_APP
 705              	.LBE117:
 706              	.LBE116:
 116:src/Riscv.cpp ****                 Riscv::w_sepc(sepc);
 707              		.loc 1 116 17 is_stmt 1
 708              	.LBB118:
 709              	.LBB119:
 104:src/../h/Riscv.hpp **** }
 710              		.loc 2 104 5
 104:src/../h/Riscv.hpp **** }
 711              		.loc 2 104 51 is_stmt 0
 712              	#APP
 713              	# 104 "src/../h/Riscv.hpp" 1
 105:src/../h/Riscv.hpp **** 
 714              		csrw sepc, s1
 715              	# 0 "" 2
 716              		.loc 2 105 1
 717              	#NO_APP
 718 0320 6F004001 		j	.L23
 719              	.LVL51:
 720              	.L47:
 721              	.LBE119:
 722              	.LBE118:
 723              	.LBE111:
 724              	.LBE108:
 725              	.LBE105:
  97:src/Riscv.cpp ****     {
 726              		.loc 1 97 5
 727 0324 93078000 		li	a5,8
 728 0328 637AF702 		bgeu	a4,a5,.L48
 729              	.L26:
 730              	.LBE104:
GAS LISTING /tmp/ccgWpG8G.s 			page 20


 117:src/Riscv.cpp ****             }
 118:src/Riscv.cpp **** 
 119:src/Riscv.cpp ****             return;
 120:src/Riscv.cpp **** 
 121:src/Riscv.cpp ****         case hwInterrupt: // todo
 122:src/Riscv.cpp **** 
 123:src/Riscv.cpp ****             //Riscv::printString("Hardware interrupt...\n");
 124:src/Riscv.cpp **** 
 125:src/Riscv.cpp ****             break;
 126:src/Riscv.cpp **** 
 127:src/Riscv.cpp ****         case operationInterrupt: // todo
 128:src/Riscv.cpp ****             break;
 129:src/Riscv.cpp **** 
 130:src/Riscv.cpp ****         case addrReadInterrupt: // todo
 131:src/Riscv.cpp ****             break;
 132:src/Riscv.cpp **** 
 133:src/Riscv.cpp ****         case addrWriteInterrupt: // todo
 134:src/Riscv.cpp ****             break;
 135:src/Riscv.cpp **** 
 136:src/Riscv.cpp ****         case ecallSystemInterupt:
 137:src/Riscv.cpp ****         case ecallUserInterrupt:
 138:src/Riscv.cpp **** 
 139:src/Riscv.cpp ****             uint64 operation;
 140:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
 141:src/Riscv.cpp **** 
 142:src/Riscv.cpp ****             uint64 sepc = Riscv::r_sepc();
 143:src/Riscv.cpp ****             sepc+=4;
 144:src/Riscv.cpp **** 
 145:src/Riscv.cpp ****             if(operation == MemoryAllocator::MEM_ALLOC)
 146:src/Riscv.cpp ****             {
 147:src/Riscv.cpp ****                 size_t size;
 148:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(size));
 149:src/Riscv.cpp ****                 size*=MEM_BLOCK_SIZE;
 150:src/Riscv.cpp ****                 void* allocatedAddr = kmalloc(size);
 151:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : : "r"((uint64)allocatedAddr));
 152:src/Riscv.cpp ****             }
 153:src/Riscv.cpp ****             else if(operation == MemoryAllocator::MEM_FREE)
 154:src/Riscv.cpp ****             {
 155:src/Riscv.cpp ****                 uint64 addr = 0;
 156:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(addr));
 157:src/Riscv.cpp ****                 uint64 retval = kfree((void*)addr);
 158:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 159:src/Riscv.cpp ****             }
 160:src/Riscv.cpp ****             else if(operation == PCB::THREAD_CREATE)
 161:src/Riscv.cpp ****             {
 162:src/Riscv.cpp ****                 uint64 start_routine;
 163:src/Riscv.cpp ****                 uint64 args;
 164:src/Riscv.cpp ****                 PCB** threadHandle;
 165:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(threadHandle));
 166:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(start_routine));
 167:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a3" : "=r"(args));
 168:src/Riscv.cpp ****                 //todo
 169:src/Riscv.cpp ****                 //uint64 stack_space;
 170:src/Riscv.cpp ****                 //__asm__ volatile("mv %0, a4" : "=r"(stack_space));
 171:src/Riscv.cpp **** 
 172:src/Riscv.cpp ****                 PCB* newPCB = new PCB((void (*)(void*))start_routine, (void*)args, (void*)a4, DEFAU
 173:src/Riscv.cpp **** 
GAS LISTING /tmp/ccgWpG8G.s 			page 21


 174:src/Riscv.cpp ****                 (*threadHandle) = newPCB;
 175:src/Riscv.cpp **** 
 176:src/Riscv.cpp ****                 if(newPCB == 0)
 177:src/Riscv.cpp ****                     __asm__ volatile("li a0, 0xffffffffffffffff");
 178:src/Riscv.cpp ****                 else
 179:src/Riscv.cpp ****                     __asm__ volatile("li a0, 0");
 180:src/Riscv.cpp ****             }
 181:src/Riscv.cpp ****             else if(operation == PCB::THREAD_DISPATCH)
 182:src/Riscv.cpp ****             {
 183:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 184:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 185:src/Riscv.cpp ****                 PCB::dispatch();
 186:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 187:src/Riscv.cpp ****             }
 188:src/Riscv.cpp ****             else if(operation == PCB::THREAD_EXIT)
 189:src/Riscv.cpp ****             {
 190:src/Riscv.cpp ****                 if(PCB::running == 0)
 191:src/Riscv.cpp ****                 {
 192:src/Riscv.cpp ****                     __asm__ volatile("li a0, 0xffffffffffffffff");
 193:src/Riscv.cpp ****                     return;
 194:src/Riscv.cpp ****                 }
 195:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 196:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 197:src/Riscv.cpp ****                 PCB::running->setState(PCB::EXITING);
 198:src/Riscv.cpp ****                 PCB::running->setState(PCB::FINISHED);
 199:src/Riscv.cpp ****                 PCB::dispatch();
 200:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 201:src/Riscv.cpp ****             }
 202:src/Riscv.cpp ****             else if(operation == PCB::TIME_SLEEP)
 203:src/Riscv.cpp ****             {
 204:src/Riscv.cpp ****                 uint64 time;
 205:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(time));
 206:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 207:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 208:src/Riscv.cpp ****                 PCB::running->setTimeToSleep(time);
 209:src/Riscv.cpp ****                 SleepPCBList::insertSleepingPCB();
 210:src/Riscv.cpp ****                 PCB::dispatch();
 211:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 212:src/Riscv.cpp ****                 //todo
 213:src/Riscv.cpp ****                 //kad treba vratiti kod greske
 214:src/Riscv.cpp ****                 __asm__ volatile("li a0, 0x0");
 215:src/Riscv.cpp ****             }
 216:src/Riscv.cpp ****             else if(operation == KSemaphore::SEM_OPEN)
 217:src/Riscv.cpp ****             {
 218:src/Riscv.cpp ****                 uint64 val;
 219:src/Riscv.cpp ****                 KSemaphore** semaphoreHandle;
 220:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(semaphoreHandle));
 221:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(val));
 222:src/Riscv.cpp **** 
 223:src/Riscv.cpp ****                 KSemaphore* newSem = new KSemaphore(val);
 224:src/Riscv.cpp **** 
 225:src/Riscv.cpp ****                 (*semaphoreHandle) = newSem;
 226:src/Riscv.cpp **** 
 227:src/Riscv.cpp ****                 if(newSem == 0)
 228:src/Riscv.cpp ****                         __asm__ volatile("li a0, 0xffffffffffffffff");
 229:src/Riscv.cpp ****                 else
 230:src/Riscv.cpp ****                         __asm__ volatile("li a0, 0");
GAS LISTING /tmp/ccgWpG8G.s 			page 22


 231:src/Riscv.cpp **** 
 232:src/Riscv.cpp ****             }
 233:src/Riscv.cpp ****             else if(operation == KSemaphore::SEM_WAIT)
 234:src/Riscv.cpp ****             {
 235:src/Riscv.cpp ****                 //todo
 236:src/Riscv.cpp ****                 //negativna povratna vrednost sta i kako
 237:src/Riscv.cpp ****                 KSemaphore* kSem;
 238:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(kSem));
 239:src/Riscv.cpp ****                 uint64 retval = kSem->wait();
 240:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 241:src/Riscv.cpp ****             }
 242:src/Riscv.cpp ****             else if(operation == KSemaphore::SEM_SIGNAL)
 243:src/Riscv.cpp ****             {
 244:src/Riscv.cpp ****                 //todo
 245:src/Riscv.cpp ****                 //negativna povratna vrednost sta i kako
 246:src/Riscv.cpp ****                 KSemaphore* kSem;
 247:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(kSem));
 248:src/Riscv.cpp ****                 uint64 retval = kSem->signal();
 249:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 250:src/Riscv.cpp ****             }
 251:src/Riscv.cpp ****             else if(operation == KSemaphore::SEM_CLOSE)
 252:src/Riscv.cpp ****             {
 253:src/Riscv.cpp ****                 //todo
 254:src/Riscv.cpp ****                 //negativna povratna vrednost sta i kako
 255:src/Riscv.cpp ****                 KSemaphore* kSem;
 256:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(kSem));
 257:src/Riscv.cpp **** 
 258:src/Riscv.cpp ****                 delete kSem;
 259:src/Riscv.cpp **** 
 260:src/Riscv.cpp ****                 __asm__ volatile("li a0, 0");
 261:src/Riscv.cpp ****             }
 262:src/Riscv.cpp **** 
 263:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 264:src/Riscv.cpp **** 
 265:src/Riscv.cpp ****             return;
 266:src/Riscv.cpp ****     }
 267:src/Riscv.cpp **** 
 268:src/Riscv.cpp ****     console_handler();
 731              		.loc 1 268 5 is_stmt 1
 732              		.loc 1 268 20 is_stmt 0
 733 032c 97000000 		call	console_handler@plt
 733      E7800000 
 734              	.LVL52:
 735              	.L23:
 269:src/Riscv.cpp **** }
 736              		.loc 1 269 1
 737 0334 83308107 		ld	ra,120(sp)
 738              		.cfi_remember_state
 739              		.cfi_restore 1
 740 0338 03340107 		ld	s0,112(sp)
 741              		.cfi_restore 8
 742              		.cfi_def_cfa 2, 128
 743 033c 83348106 		ld	s1,104(sp)
 744              		.cfi_restore 9
 745 0340 03390106 		ld	s2,96(sp)
 746              		.cfi_restore 18
 747 0344 83398105 		ld	s3,88(sp)
GAS LISTING /tmp/ccgWpG8G.s 			page 23


 748              		.cfi_restore 19
 749 0348 033A0105 		ld	s4,80(sp)
 750              		.cfi_restore 20
 751 034c 833A8104 		ld	s5,72(sp)
 752              		.cfi_restore 21
 753 0350 033B0104 		ld	s6,64(sp)
 754              		.cfi_restore 22
 755 0354 13010108 		addi	sp,sp,128
 756              		.cfi_def_cfa_offset 0
 757 0358 67800000 		jr	ra
 758              	.LVL53:
 759              	.L48:
 760              		.cfi_restore_state
 761              	.LBB237:
 762              	.LBB226:
 136:src/Riscv.cpp ****         case ecallUserInterrupt:
 763              		.loc 1 136 9 is_stmt 1
 137:src/Riscv.cpp **** 
 764              		.loc 1 137 9
 139:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
 765              		.loc 1 139 13
 140:src/Riscv.cpp **** 
 766              		.loc 1 140 13
 140:src/Riscv.cpp **** 
 767              		.loc 1 140 61 is_stmt 0
 768              	#APP
 769              	# 140 "src/Riscv.cpp" 1
 770              		mv a5, a0
 771              	# 0 "" 2
 772              	.LVL54:
 142:src/Riscv.cpp ****             sepc+=4;
 773              		.loc 1 142 13 is_stmt 1
 774              	#NO_APP
 775              	.LBB120:
 776              	.LBB121:
  98:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 777              		.loc 2 98 5
  99:src/../h/Riscv.hpp ****     return sepc;
 778              		.loc 2 99 5
  99:src/../h/Riscv.hpp ****     return sepc;
 779              		.loc 2 99 51 is_stmt 0
 780              	#APP
 781              	# 99 "src/../h/Riscv.hpp" 1
 782              		csrr a4, sepc
 783              	# 0 "" 2
 784              	.LVL55:
 785              	#NO_APP
 786 0364 2330E4FA 		sd	a4,-96(s0)
 100:src/../h/Riscv.hpp **** }
 787              		.loc 2 100 5 is_stmt 1
 100:src/../h/Riscv.hpp **** }
 788              		.loc 2 100 12 is_stmt 0
 789 0368 033704FA 		ld	a4,-96(s0)
 790              	.LVL56:
 791              	.LBE121:
 792              	.LBE120:
 143:src/Riscv.cpp **** 
GAS LISTING /tmp/ccgWpG8G.s 			page 24


 793              		.loc 1 143 13 is_stmt 1
 143:src/Riscv.cpp **** 
 794              		.loc 1 143 17 is_stmt 0
 795 036c 93044700 		addi	s1,a4,4
 796              	.LVL57:
 145:src/Riscv.cpp ****             {
 797              		.loc 1 145 13 is_stmt 1
 798              	.LBB122:
 799 0370 13071000 		li	a4,1
 800 0374 638AE706 		beq	a5,a4,.L49
 801              	.LBE122:
 802              	.LBE226:
 803              	.LBE237:
 153:src/Riscv.cpp ****             {
 804              		.loc 1 153 18
 805              	.LBB238:
 806              	.LBB227:
 807              	.LBB213:
 808              	.LBB123:
 809 0378 13072000 		li	a4,2
 810 037c 6384E708 		beq	a5,a4,.L50
 811              	.LBE123:
 812              	.LBE213:
 813              	.LBE227:
 814              	.LBE238:
 160:src/Riscv.cpp ****             {
 815              		.loc 1 160 18
 816              	.LBB239:
 817              	.LBB228:
 818              	.LBB214:
 819              	.LBB202:
 820              	.LBB124:
 821 0380 13071001 		li	a4,17
 822 0384 638AE708 		beq	a5,a4,.L51
 823              	.LBE124:
 824              	.LBE202:
 825              	.LBE214:
 826              	.LBE228:
 827              	.LBE239:
 181:src/Riscv.cpp ****             {
 828              		.loc 1 181 18
 829              	.LBB240:
 830              	.LBB229:
 831              	.LBB215:
 832              	.LBB203:
 833              	.LBB192:
 834              	.LBB125:
 835 0388 13073001 		li	a4,19
 836 038c 638CE70C 		beq	a5,a4,.L52
 837              	.LBE125:
 838              	.LBE192:
 839              	.LBE203:
 840              	.LBE215:
 841              	.LBE229:
 842              	.LBE240:
 188:src/Riscv.cpp ****             {
 843              		.loc 1 188 18
GAS LISTING /tmp/ccgWpG8G.s 			page 25


 844              	.LBB241:
 845              	.LBB230:
 846              	.LBB216:
 847              	.LBB204:
 848              	.LBB193:
 849              	.LBB181:
 850              	.LBB126:
 851 0390 13072001 		li	a4,18
 852 0394 638CE70E 		beq	a5,a4,.L53
 853              	.LBE126:
 854              	.LBE181:
 855              	.LBE193:
 856              	.LBE204:
 857              	.LBE216:
 858              	.LBE230:
 859              	.LBE241:
 202:src/Riscv.cpp ****             {
 860              		.loc 1 202 18
 861              	.LBB242:
 862              	.LBB231:
 863              	.LBB217:
 864              	.LBB205:
 865              	.LBB194:
 866              	.LBB182:
 867              	.LBB168:
 868              	.LBB127:
 869 0398 13071003 		li	a4,49
 870 039c 6382E714 		beq	a5,a4,.L54
 871              	.LBE127:
 872              	.LBE168:
 873              	.LBE182:
 874              	.LBE194:
 875              	.LBE205:
 876              	.LBE217:
 877              	.LBE231:
 878              	.LBE242:
 216:src/Riscv.cpp ****             {
 879              		.loc 1 216 18
 880              	.LBB243:
 881              	.LBB232:
 882              	.LBB218:
 883              	.LBB206:
 884              	.LBB195:
 885              	.LBB183:
 886              	.LBB169:
 887              	.LBB154:
 888              	.LBB128:
 889 03a0 13071002 		li	a4,33
 890 03a4 6382E718 		beq	a5,a4,.L55
 891              	.LBE128:
 892              	.LBE154:
 893              	.LBE169:
 894              	.LBE183:
 895              	.LBE195:
 896              	.LBE206:
 897              	.LBE218:
 898              	.LBE232:
GAS LISTING /tmp/ccgWpG8G.s 			page 26


 899              	.LBE243:
 233:src/Riscv.cpp ****             {
 900              		.loc 1 233 18
 901              	.LBB244:
 902              	.LBB233:
 903              	.LBB219:
 904              	.LBB207:
 905              	.LBB196:
 906              	.LBB184:
 907              	.LBB170:
 908              	.LBB155:
 909              	.LBB142:
 910              	.LBB129:
 911 03a8 13073002 		li	a4,35
 912 03ac 638CE71A 		beq	a5,a4,.L56
 913              	.LBE129:
 914              	.LBE142:
 915              	.LBE155:
 916              	.LBE170:
 917              	.LBE184:
 918              	.LBE196:
 919              	.LBE207:
 920              	.LBE219:
 921              	.LBE233:
 922              	.LBE244:
 242:src/Riscv.cpp ****             {
 923              		.loc 1 242 18
 924              	.LBB245:
 925              	.LBB234:
 926              	.LBB220:
 927              	.LBB208:
 928              	.LBB197:
 929              	.LBB185:
 930              	.LBB171:
 931              	.LBB156:
 932              	.LBB143:
 933              	.LBB137:
 934              	.LBB130:
 935 03b0 13074002 		li	a4,36
 936 03b4 6382E71C 		beq	a5,a4,.L57
 937              	.LBE130:
 938              	.LBE137:
 939              	.LBE143:
 940              	.LBE156:
 941              	.LBE171:
 942              	.LBE185:
 943              	.LBE197:
 944              	.LBE208:
 945              	.LBE220:
 946              	.LBE234:
 947              	.LBE245:
 251:src/Riscv.cpp ****             {
 948              		.loc 1 251 18
 949              	.LBB246:
 950              	.LBB235:
 951              	.LBB221:
 952              	.LBB209:
GAS LISTING /tmp/ccgWpG8G.s 			page 27


 953              	.LBB198:
 954              	.LBB186:
 955              	.LBB172:
 956              	.LBB157:
 957              	.LBB144:
 958              	.LBB138:
 959              	.LBB134:
 960              	.LBB131:
 961 03b8 13072002 		li	a4,34
 962 03bc 6390E704 		bne	a5,a4,.L29
 963              	.LBB132:
 255:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(kSem));
 964              		.loc 1 255 17
 256:src/Riscv.cpp **** 
 965              		.loc 1 256 17
 256:src/Riscv.cpp **** 
 966              		.loc 1 256 59 is_stmt 0
 967              	#APP
 968              	# 256 "src/Riscv.cpp" 1
 969              		mv s2, a1
 970              	# 0 "" 2
 971              	.LVL58:
 258:src/Riscv.cpp **** 
 972              		.loc 1 258 17 is_stmt 1
 258:src/Riscv.cpp **** 
 973              		.loc 1 258 28 is_stmt 0
 974              	#NO_APP
 975 03c4 630E0900 		beqz	s2,.L41
 258:src/Riscv.cpp **** 
 976              		.loc 1 258 24 discriminator 1
 977 03c8 13050900 		mv	a0,s2
 978 03cc 97000000 		call	_ZN10KSemaphoreD1Ev@plt
 978      E7800000 
 979              	.LVL59:
 980 03d4 13050900 		mv	a0,s2
 981 03d8 97000000 		call	_ZN10KSemaphoredlEPv@plt
 981      E7800000 
 982              	.LVL60:
 983              	.L41:
 260:src/Riscv.cpp ****             }
 984              		.loc 1 260 17 is_stmt 1
 260:src/Riscv.cpp ****             }
 985              		.loc 1 260 45 is_stmt 0
 986              	#APP
 987              	# 260 "src/Riscv.cpp" 1
 988              		li a0, 0
 989              	# 0 "" 2
 990              	#NO_APP
 991              	.LBE132:
 992 03e4 6F008001 		j	.L29
 993              	.LVL61:
 994              	.L49:
 995              	.LBE131:
 996              	.LBE134:
 997              	.LBE138:
 998              	.LBE144:
 999              	.LBE157:
GAS LISTING /tmp/ccgWpG8G.s 			page 28


 1000              	.LBE172:
 1001              	.LBE186:
 1002              	.LBE198:
 1003              	.LBE209:
 1004              	.LBB210:
 147:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(size));
 1005              		.loc 1 147 17 is_stmt 1
 148:src/Riscv.cpp ****                 size*=MEM_BLOCK_SIZE;
 1006              		.loc 1 148 17
 148:src/Riscv.cpp ****                 size*=MEM_BLOCK_SIZE;
 1007              		.loc 1 148 59 is_stmt 0
 1008              	#APP
 1009              	# 148 "src/Riscv.cpp" 1
 1010              		mv a0, a1
 1011              	# 0 "" 2
 1012              	.LVL62:
 149:src/Riscv.cpp ****                 void* allocatedAddr = kmalloc(size);
 1013              		.loc 1 149 17 is_stmt 1
 150:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : : "r"((uint64)allocatedAddr));
 1014              		.loc 1 150 17
 150:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : : "r"((uint64)allocatedAddr));
 1015              		.loc 1 150 46 is_stmt 0
 1016              	#NO_APP
 1017 03ec 13156500 		slli	a0,a0,6
 1018              	.LVL63:
 1019 03f0 97000000 		call	_Z7kmallocm@plt
 1019      E7800000 
 1020              	.LVL64:
 151:src/Riscv.cpp ****             }
 1021              		.loc 1 151 17 is_stmt 1
 151:src/Riscv.cpp ****             }
 1022              		.loc 1 151 76 is_stmt 0
 1023              	#APP
 1024              	# 151 "src/Riscv.cpp" 1
 1025              		mv a0,a0
 1026              	# 0 "" 2
 1027              	.LVL65:
 1028              	#NO_APP
 1029              	.L29:
 1030              	.LBE210:
 1031              	.LBE221:
 263:src/Riscv.cpp **** 
 1032              		.loc 1 263 13 is_stmt 1
 1033              	.LBB222:
 1034              	.LBB223:
 104:src/../h/Riscv.hpp **** }
 1035              		.loc 2 104 5
 104:src/../h/Riscv.hpp **** }
 1036              		.loc 2 104 51 is_stmt 0
 1037              	#APP
 1038              	# 104 "src/../h/Riscv.hpp" 1
 105:src/../h/Riscv.hpp **** 
 1039              		csrw sepc, s1
 1040              	# 0 "" 2
 1041              		.loc 2 105 1
 1042              	#NO_APP
 1043 0400 6FF05FF3 		j	.L23
GAS LISTING /tmp/ccgWpG8G.s 			page 29


 1044              	.LVL66:
 1045              	.L50:
 1046              	.LBE223:
 1047              	.LBE222:
 1048              	.LBB224:
 1049              	.LBB211:
 1050              	.LBB199:
 155:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(addr));
 1051              		.loc 1 155 17 is_stmt 1
 156:src/Riscv.cpp ****                 uint64 retval = kfree((void*)addr);
 1052              		.loc 1 156 17
 156:src/Riscv.cpp ****                 uint64 retval = kfree((void*)addr);
 1053              		.loc 1 156 59 is_stmt 0
 1054              	#APP
 1055              	# 156 "src/Riscv.cpp" 1
 1056              		mv a0, a1
 1057              	# 0 "" 2
 1058              	.LVL67:
 157:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 1059              		.loc 1 157 17 is_stmt 1
 157:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 1060              		.loc 1 157 38 is_stmt 0
 1061              	#NO_APP
 1062 0408 97000000 		call	_Z5kfreePv@plt
 1062      E7800000 
 1063              	.LVL68:
 158:src/Riscv.cpp ****             }
 1064              		.loc 1 158 17 is_stmt 1
 158:src/Riscv.cpp ****             }
 1065              		.loc 1 158 60 is_stmt 0
 1066              	#APP
 1067              	# 158 "src/Riscv.cpp" 1
 1068              		mv a0,a0
 1069              	# 0 "" 2
 1070              	#NO_APP
 1071              	.LBE199:
 1072 0414 6FF09FFE 		j	.L29
 1073              	.LVL69:
 1074              	.L51:
 1075              	.LBB200:
 1076              	.LBB187:
 162:src/Riscv.cpp ****                 uint64 args;
 1077              		.loc 1 162 17 is_stmt 1
 163:src/Riscv.cpp ****                 PCB** threadHandle;
 1078              		.loc 1 163 17
 164:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(threadHandle));
 1079              		.loc 1 164 17
 165:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(start_routine));
 1080              		.loc 1 165 17
 165:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(start_routine));
 1081              		.loc 1 165 67 is_stmt 0
 1082              	#APP
 1083              	# 165 "src/Riscv.cpp" 1
 1084              		mv s4, a1
 1085              	# 0 "" 2
 1086              	.LVL70:
 166:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a3" : "=r"(args));
GAS LISTING /tmp/ccgWpG8G.s 			page 30


 1087              		.loc 1 166 17 is_stmt 1
 166:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a3" : "=r"(args));
 1088              		.loc 1 166 68 is_stmt 0
 1089              	# 166 "src/Riscv.cpp" 1
 1090              		mv s5, a2
 1091              	# 0 "" 2
 1092              	.LVL71:
 167:src/Riscv.cpp ****                 //todo
 1093              		.loc 1 167 17 is_stmt 1
 167:src/Riscv.cpp ****                 //todo
 1094              		.loc 1 167 59 is_stmt 0
 1095              	# 167 "src/Riscv.cpp" 1
 1096              		mv s6, a3
 1097              	# 0 "" 2
 1098              	.LVL72:
 172:src/Riscv.cpp **** 
 1099              		.loc 1 172 17 is_stmt 1
 172:src/Riscv.cpp **** 
 1100              		.loc 1 172 113 is_stmt 0
 1101              	#NO_APP
 1102 0424 13050005 		li	a0,80
 1103 0428 97000000 		call	_ZN3PCBnwEm@plt
 1103      E7800000 
 1104              	.LVL73:
 1105              	.LEHE4:
 1106 0430 93090500 		mv	s3,a0
 1107 0434 13072000 		li	a4,2
 1108 0438 93060900 		mv	a3,s2
 1109 043c 13060B00 		mv	a2,s6
 1110 0440 93850A00 		mv	a1,s5
 1111              	.LEHB5:
 1112 0444 97000000 		call	_ZN3PCBC1EPFvPvES0_S0_m@plt
 1112      E7800000 
 1113              	.LVL74:
 1114              	.LEHE5:
 174:src/Riscv.cpp **** 
 1115              		.loc 1 174 17 is_stmt 1 discriminator 2
 174:src/Riscv.cpp **** 
 1116              		.loc 1 174 33 is_stmt 0 discriminator 2
 1117 044c 23303A01 		sd	s3,0(s4)
 176:src/Riscv.cpp ****                     __asm__ volatile("li a0, 0xffffffffffffffff");
 1118              		.loc 1 176 17 is_stmt 1 discriminator 2
 1119 0450 63860900 		beqz	s3,.L58
 179:src/Riscv.cpp ****             }
 1120              		.loc 1 179 21
 179:src/Riscv.cpp ****             }
 1121              		.loc 1 179 49 is_stmt 0
 1122              	#APP
 1123              	# 179 "src/Riscv.cpp" 1
 1124              		li a0, 0
 1125              	# 0 "" 2
 1126              	#NO_APP
 1127 0458 6FF05FFA 		j	.L29
 1128              	.L58:
 177:src/Riscv.cpp ****                 else
 1129              		.loc 1 177 21 is_stmt 1
 177:src/Riscv.cpp ****                 else
GAS LISTING /tmp/ccgWpG8G.s 			page 31


 1130              		.loc 1 177 66 is_stmt 0
 1131              	#APP
 1132              	# 177 "src/Riscv.cpp" 1
 1133              		li a0, 0xffffffffffffffff
 1134              	# 0 "" 2
 1135              	#NO_APP
 1136 0460 6FF0DFF9 		j	.L29
 1137              	.LVL75:
 1138              	.L52:
 1139              	.LBE187:
 1140              	.LBB188:
 1141              	.LBB173:
 183:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 1142              		.loc 1 183 17 is_stmt 1
 1143              	.LBB174:
 1144              	.LBB175:
 154:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 1145              		.loc 2 154 5
 155:src/../h/Riscv.hpp ****     return sstatus;
 1146              		.loc 2 155 5
 155:src/../h/Riscv.hpp ****     return sstatus;
 1147              		.loc 2 155 57 is_stmt 0
 1148              	#APP
 1149              	# 155 "src/../h/Riscv.hpp" 1
 1150              		csrr a5, sstatus
 1151              	# 0 "" 2
 1152              	.LVL76:
 1153              	#NO_APP
 1154 0468 2334F4FA 		sd	a5,-88(s0)
 156:src/../h/Riscv.hpp **** }
 1155              		.loc 2 156 5 is_stmt 1
 156:src/../h/Riscv.hpp **** }
 1156              		.loc 2 156 12 is_stmt 0
 1157 046c 033984FA 		ld	s2,-88(s0)
 1158              	.LVL77:
 1159              	.LBE175:
 1160              	.LBE174:
 184:src/Riscv.cpp ****                 PCB::dispatch();
 1161              		.loc 1 184 17 is_stmt 1
 184:src/Riscv.cpp ****                 PCB::dispatch();
 1162              		.loc 1 184 39 is_stmt 0
 1163 0470 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 1163      83B70700 
 1164 0478 23B00700 		sd	zero,0(a5)
 185:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1165              		.loc 1 185 17 is_stmt 1
 1166              	.LEHB6:
 185:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1167              		.loc 1 185 30 is_stmt 0
 1168 047c 97000000 		call	_ZN3PCB8dispatchEv@plt
 1168      E7800000 
 1169              	.LVL78:
 186:src/Riscv.cpp ****             }
 1170              		.loc 1 186 17 is_stmt 1
 1171              	.LBB176:
 1172              	.LBB177:
 160:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/ccgWpG8G.s 			page 32


 1173              		.loc 2 160 5
 160:src/../h/Riscv.hpp **** }
 1174              		.loc 2 160 57 is_stmt 0
 1175              	#APP
 1176              	# 160 "src/../h/Riscv.hpp" 1
 1177              		csrw sstatus, s2
 1178              	# 0 "" 2
 1179              		.loc 2 161 1
 1180              	#NO_APP
 1181 0488 6FF05FF7 		j	.L29
 1182              	.LVL79:
 1183              	.L53:
 1184              	.LBE177:
 1185              	.LBE176:
 1186              	.LBE173:
 1187              	.LBB178:
 1188              	.LBB158:
 190:src/Riscv.cpp ****                 {
 1189              		.loc 1 190 17 is_stmt 1
 190:src/Riscv.cpp ****                 {
 1190              		.loc 1 190 33 is_stmt 0
 1191 048c 97070000 		la	a5,_ZN3PCB7runningE
 1191      83B70700 
 1192              	.LVL80:
 1193 0494 83B70700 		ld	a5,0(a5)
 190:src/Riscv.cpp ****                 {
 1194              		.loc 1 190 17
 1195 0498 63800704 		beqz	a5,.L59
 195:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 1196              		.loc 1 195 17 is_stmt 1
 1197              	.LBB159:
 1198              	.LBB160:
 154:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 1199              		.loc 2 154 5
 155:src/../h/Riscv.hpp ****     return sstatus;
 1200              		.loc 2 155 5
 155:src/../h/Riscv.hpp ****     return sstatus;
 1201              		.loc 2 155 57 is_stmt 0
 1202              	#APP
 1203              	# 155 "src/../h/Riscv.hpp" 1
 1204              		csrr a5, sstatus
 1205              	# 0 "" 2
 1206              	#NO_APP
 1207 04a0 2338F4FA 		sd	a5,-80(s0)
 156:src/../h/Riscv.hpp **** }
 1208              		.loc 2 156 5 is_stmt 1
 156:src/../h/Riscv.hpp **** }
 1209              		.loc 2 156 12 is_stmt 0
 1210 04a4 033904FB 		ld	s2,-80(s0)
 1211              	.LVL81:
 1212              	.LBE160:
 1213              	.LBE159:
 196:src/Riscv.cpp ****                 PCB::running->setState(PCB::EXITING);
 1214              		.loc 1 196 17 is_stmt 1
 196:src/Riscv.cpp ****                 PCB::running->setState(PCB::EXITING);
 1215              		.loc 1 196 39 is_stmt 0
 1216 04a8 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
GAS LISTING /tmp/ccgWpG8G.s 			page 33


 1216      83B70700 
 1217 04b0 23B00700 		sd	zero,0(a5)
 197:src/Riscv.cpp ****                 PCB::running->setState(PCB::FINISHED);
 1218              		.loc 1 197 17 is_stmt 1
 197:src/Riscv.cpp ****                 PCB::running->setState(PCB::FINISHED);
 1219              		.loc 1 197 39 is_stmt 0
 1220 04b4 97070000 		la	a5,_ZN3PCB7runningE
 1220      83B70700 
 1221 04bc 83B70700 		ld	a5,0(a5)
 1222              	.LVL82:
 1223              	.LBE158:
 1224              	.LBE178:
 1225              	.LBE188:
 1226              	.LBE200:
 1227              	.LBE211:
 1228              	.LBE224:
 1229              	.LBE235:
 1230              	.LBE246:
 1231              		.loc 3 35 29 is_stmt 1
 1232              	.LBB247:
 1233              	.LBB236:
 1234              	.LBB225:
 1235              	.LBB212:
 1236              	.LBB201:
 1237              	.LBB189:
 1238              	.LBB179:
 1239              	.LBB165:
 198:src/Riscv.cpp ****                 PCB::dispatch();
 1240              		.loc 1 198 17
 1241              	.LBB161:
 1242              	.LBB162:
 1243              		.loc 3 35 29
 1244              		.loc 3 35 35 is_stmt 0
 1245 04c0 13073000 		li	a4,3
 1246 04c4 23A8E702 		sw	a4,48(a5)
 1247              	.LVL83:
 1248              	.LBE162:
 1249              	.LBE161:
 199:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1250              		.loc 1 199 17 is_stmt 1
 199:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1251              		.loc 1 199 30 is_stmt 0
 1252 04c8 97000000 		call	_ZN3PCB8dispatchEv@plt
 1252      E7800000 
 1253              	.LVL84:
 200:src/Riscv.cpp ****             }
 1254              		.loc 1 200 17 is_stmt 1
 1255              	.LBB163:
 1256              	.LBB164:
 160:src/../h/Riscv.hpp **** }
 1257              		.loc 2 160 5
 160:src/../h/Riscv.hpp **** }
 1258              		.loc 2 160 57 is_stmt 0
 1259              	#APP
 1260              	# 160 "src/../h/Riscv.hpp" 1
 1261              		csrw sstatus, s2
 1262              	# 0 "" 2
GAS LISTING /tmp/ccgWpG8G.s 			page 34


 1263              		.loc 2 161 1
 1264              	#NO_APP
 1265 04d4 6FF09FF2 		j	.L29
 1266              	.LVL85:
 1267              	.L59:
 1268              	.LBE164:
 1269              	.LBE163:
 192:src/Riscv.cpp ****                     return;
 1270              		.loc 1 192 21 is_stmt 1
 192:src/Riscv.cpp ****                     return;
 1271              		.loc 1 192 66 is_stmt 0
 1272              	#APP
 1273              	# 192 "src/Riscv.cpp" 1
 193:src/Riscv.cpp ****                 }
 1274              		li a0, 0xffffffffffffffff
 1275              	# 0 "" 2
 1276              		.loc 1 193 21 is_stmt 1
 1277              	#NO_APP
 1278 04dc 6FF09FE5 		j	.L23
 1279              	.LVL86:
 1280              	.L54:
 1281              	.LBE165:
 1282              	.LBB166:
 1283              	.LBB145:
 204:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(time));
 1284              		.loc 1 204 17
 205:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 1285              		.loc 1 205 17
 205:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 1286              		.loc 1 205 59 is_stmt 0
 1287              	#APP
 1288              	# 205 "src/Riscv.cpp" 1
 1289              		mv a4, a1
 1290              	# 0 "" 2
 1291              	.LVL87:
 206:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 1292              		.loc 1 206 17 is_stmt 1
 1293              	#NO_APP
 1294              	.LBB146:
 1295              	.LBB147:
 154:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 1296              		.loc 2 154 5
 155:src/../h/Riscv.hpp ****     return sstatus;
 1297              		.loc 2 155 5
 155:src/../h/Riscv.hpp ****     return sstatus;
 1298              		.loc 2 155 57 is_stmt 0
 1299              	#APP
 1300              	# 155 "src/../h/Riscv.hpp" 1
 1301              		csrr a5, sstatus
 1302              	# 0 "" 2
 1303              	.LVL88:
 1304              	#NO_APP
 1305 04e8 233CF4FA 		sd	a5,-72(s0)
 156:src/../h/Riscv.hpp **** }
 1306              		.loc 2 156 5 is_stmt 1
 156:src/../h/Riscv.hpp **** }
 1307              		.loc 2 156 12 is_stmt 0
GAS LISTING /tmp/ccgWpG8G.s 			page 35


 1308 04ec 033984FB 		ld	s2,-72(s0)
 1309              	.LVL89:
 1310              	.LBE147:
 1311              	.LBE146:
 207:src/Riscv.cpp ****                 PCB::running->setTimeToSleep(time);
 1312              		.loc 1 207 17 is_stmt 1
 207:src/Riscv.cpp ****                 PCB::running->setTimeToSleep(time);
 1313              		.loc 1 207 39 is_stmt 0
 1314 04f0 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 1314      83B70700 
 1315 04f8 23B00700 		sd	zero,0(a5)
 208:src/Riscv.cpp ****                 SleepPCBList::insertSleepingPCB();
 1316              		.loc 1 208 17 is_stmt 1
 208:src/Riscv.cpp ****                 SleepPCBList::insertSleepingPCB();
 1317              		.loc 1 208 45 is_stmt 0
 1318 04fc 97070000 		la	a5,_ZN3PCB7runningE
 1318      83B70700 
 1319 0504 83B70700 		ld	a5,0(a5)
 1320              	.LVL90:
 1321              	.LBB148:
 1322              	.LBB149:
  36:src/../h/PCB.hpp ****     void setTimeToSleep(uint64 time) {timeToSleep = time;}
 1323              		.loc 3 36 39 is_stmt 1
 1324              		.loc 3 36 51 is_stmt 0
 1325 0508 23B8E700 		sd	a4,16(a5)
 1326              	.LVL91:
 1327              	.LBE149:
 1328              	.LBE148:
 209:src/Riscv.cpp ****                 PCB::dispatch();
 1329              		.loc 1 209 17 is_stmt 1
 209:src/Riscv.cpp ****                 PCB::dispatch();
 1330              		.loc 1 209 48 is_stmt 0
 1331 050c 97000000 		call	_ZN12SleepPCBList17insertSleepingPCBEv@plt
 1331      E7800000 
 1332              	.LVL92:
 210:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1333              		.loc 1 210 17 is_stmt 1
 210:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1334              		.loc 1 210 30 is_stmt 0
 1335 0514 97000000 		call	_ZN3PCB8dispatchEv@plt
 1335      E7800000 
 1336              	.LVL93:
 211:src/Riscv.cpp ****                 //todo
 1337              		.loc 1 211 17 is_stmt 1
 1338              	.LBB150:
 1339              	.LBB151:
 160:src/../h/Riscv.hpp **** }
 1340              		.loc 2 160 5
 160:src/../h/Riscv.hpp **** }
 1341              		.loc 2 160 57 is_stmt 0
 1342              	#APP
 1343              	# 160 "src/../h/Riscv.hpp" 1
 1344              		csrw sstatus, s2
 1345              	# 0 "" 2
 1346              	.LVL94:
 1347              	#NO_APP
 1348              	.LBE151:
GAS LISTING /tmp/ccgWpG8G.s 			page 36


 1349              	.LBE150:
 214:src/Riscv.cpp ****             }
 1350              		.loc 1 214 17 is_stmt 1
 214:src/Riscv.cpp ****             }
 1351              		.loc 1 214 47 is_stmt 0
 1352              	#APP
 1353              	# 214 "src/Riscv.cpp" 1
 1354              		li a0, 0x0
 1355              	# 0 "" 2
 1356              	#NO_APP
 1357              	.LBE145:
 1358 0524 6FF09FED 		j	.L29
 1359              	.LVL95:
 1360              	.L55:
 1361              	.LBB152:
 1362              	.LBB139:
 218:src/Riscv.cpp ****                 KSemaphore** semaphoreHandle;
 1363              		.loc 1 218 17 is_stmt 1
 219:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(semaphoreHandle));
 1364              		.loc 1 219 17
 220:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(val));
 1365              		.loc 1 220 17
 220:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(val));
 1366              		.loc 1 220 70 is_stmt 0
 1367              	#APP
 1368              	# 220 "src/Riscv.cpp" 1
 1369              		mv s3, a1
 1370              	# 0 "" 2
 1371              	.LVL96:
 221:src/Riscv.cpp **** 
 1372              		.loc 1 221 17 is_stmt 1
 221:src/Riscv.cpp **** 
 1373              		.loc 1 221 58 is_stmt 0
 1374              	# 221 "src/Riscv.cpp" 1
 1375              		mv s4, a2
 1376              	# 0 "" 2
 1377              	.LVL97:
 223:src/Riscv.cpp **** 
 1378              		.loc 1 223 17 is_stmt 1
 223:src/Riscv.cpp **** 
 1379              		.loc 1 223 56 is_stmt 0
 1380              	#NO_APP
 1381 0530 13058001 		li	a0,24
 1382 0534 97000000 		call	_ZN10KSemaphorenwEm@plt
 1382      E7800000 
 1383              	.LVL98:
 1384              	.LEHE6:
 1385 053c 13090500 		mv	s2,a0
 1386              	.LVL99:
 1387 0540 9B050A00 		sext.w	a1,s4
 1388              	.LEHB7:
 1389 0544 97000000 		call	_ZN10KSemaphoreC1Ei@plt
 1389      E7800000 
 1390              	.LVL100:
 1391              	.LEHE7:
 225:src/Riscv.cpp **** 
 1392              		.loc 1 225 17 is_stmt 1 discriminator 2
GAS LISTING /tmp/ccgWpG8G.s 			page 37


 225:src/Riscv.cpp **** 
 1393              		.loc 1 225 36 is_stmt 0 discriminator 2
 1394 054c 23B02901 		sd	s2,0(s3)
 227:src/Riscv.cpp ****                         __asm__ volatile("li a0, 0xffffffffffffffff");
 1395              		.loc 1 227 17 is_stmt 1 discriminator 2
 1396 0550 63060900 		beqz	s2,.L60
 230:src/Riscv.cpp **** 
 1397              		.loc 1 230 25
 230:src/Riscv.cpp **** 
 1398              		.loc 1 230 53 is_stmt 0
 1399              	#APP
 1400              	# 230 "src/Riscv.cpp" 1
 1401              		li a0, 0
 1402              	# 0 "" 2
 1403              	#NO_APP
 1404 0558 6FF05FEA 		j	.L29
 1405              	.L60:
 228:src/Riscv.cpp ****                 else
 1406              		.loc 1 228 25 is_stmt 1
 228:src/Riscv.cpp ****                 else
 1407              		.loc 1 228 70 is_stmt 0
 1408              	#APP
 1409              	# 228 "src/Riscv.cpp" 1
 1410              		li a0, 0xffffffffffffffff
 1411              	# 0 "" 2
 1412              	#NO_APP
 1413 0560 6FF0DFE9 		j	.L29
 1414              	.LVL101:
 1415              	.L56:
 1416              	.LBE139:
 1417              	.LBB140:
 1418              	.LBB135:
 237:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(kSem));
 1419              		.loc 1 237 17 is_stmt 1
 238:src/Riscv.cpp ****                 uint64 retval = kSem->wait();
 1420              		.loc 1 238 17
 238:src/Riscv.cpp ****                 uint64 retval = kSem->wait();
 1421              		.loc 1 238 59 is_stmt 0
 1422              	#APP
 1423              	# 238 "src/Riscv.cpp" 1
 1424              		mv a0, a1
 1425              	# 0 "" 2
 1426              	.LVL102:
 239:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 1427              		.loc 1 239 17 is_stmt 1
 1428              	.LEHB8:
 239:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 1429              		.loc 1 239 43 is_stmt 0
 1430              	#NO_APP
 1431 0568 97000000 		call	_ZN10KSemaphore4waitEv@plt
 1431      E7800000 
 1432              	.LVL103:
 240:src/Riscv.cpp ****             }
 1433              		.loc 1 240 17 is_stmt 1
 240:src/Riscv.cpp ****             }
 1434              		.loc 1 240 60 is_stmt 0
 1435              	#APP
GAS LISTING /tmp/ccgWpG8G.s 			page 38


 1436              	# 240 "src/Riscv.cpp" 1
 1437              		mv a0,a0
 1438              	# 0 "" 2
 1439              	#NO_APP
 1440              	.LBE135:
 1441 0574 6FF09FE8 		j	.L29
 1442              	.LVL104:
 1443              	.L57:
 1444              	.LBB136:
 1445              	.LBB133:
 246:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(kSem));
 1446              		.loc 1 246 17 is_stmt 1
 247:src/Riscv.cpp ****                 uint64 retval = kSem->signal();
 1447              		.loc 1 247 17
 247:src/Riscv.cpp ****                 uint64 retval = kSem->signal();
 1448              		.loc 1 247 59 is_stmt 0
 1449              	#APP
 1450              	# 247 "src/Riscv.cpp" 1
 1451              		mv a0, a1
 1452              	# 0 "" 2
 1453              	.LVL105:
 248:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 1454              		.loc 1 248 17 is_stmt 1
 248:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 1455              		.loc 1 248 45 is_stmt 0
 1456              	#NO_APP
 1457 057c 97000000 		call	_ZN10KSemaphore6signalEv@plt
 1457      E7800000 
 1458              	.LVL106:
 1459              	.LEHE8:
 249:src/Riscv.cpp ****             }
 1460              		.loc 1 249 17 is_stmt 1
 249:src/Riscv.cpp ****             }
 1461              		.loc 1 249 60 is_stmt 0
 1462              	#APP
 1463              	# 249 "src/Riscv.cpp" 1
 1464              		mv a0,a0
 1465              	# 0 "" 2
 1466              	#NO_APP
 1467              	.LBE133:
 1468 0588 6FF05FE7 		j	.L29
 1469              	.LVL107:
 1470              	.L44:
 1471 058c 93040500 		mv	s1,a0
 1472              	.LVL108:
 1473              	.LBE136:
 1474              	.LBE140:
 1475              	.LBE152:
 1476              	.LBE166:
 1477              	.LBE179:
 1478              	.LBE189:
 1479              	.LBB190:
 172:src/Riscv.cpp **** 
 1480              		.loc 1 172 113
 1481 0590 13850900 		mv	a0,s3
 1482 0594 97000000 		call	_ZN3PCBdlEPv@plt
 1482      E7800000 
GAS LISTING /tmp/ccgWpG8G.s 			page 39


 1483              	.LVL109:
 1484 059c 13850400 		mv	a0,s1
 1485              	.LEHB9:
 1486 05a0 97000000 		call	_Unwind_Resume@plt
 1486      E7800000 
 1487              	.LVL110:
 1488              	.LEHE9:
 1489              	.L45:
 1490 05a8 93040500 		mv	s1,a0
 1491              	.LVL111:
 1492              	.LBE190:
 1493              	.LBB191:
 1494              	.LBB180:
 1495              	.LBB167:
 1496              	.LBB153:
 1497              	.LBB141:
 223:src/Riscv.cpp **** 
 1498              		.loc 1 223 56
 1499 05ac 13050900 		mv	a0,s2
 1500 05b0 97000000 		call	_ZN10KSemaphoredlEPv@plt
 1500      E7800000 
 1501              	.LVL112:
 1502 05b8 13850400 		mv	a0,s1
 1503              	.LEHB10:
 1504 05bc 97000000 		call	_Unwind_Resume@plt
 1504      E7800000 
 1505              	.LVL113:
 1506              	.LEHE10:
 1507              	.LBE141:
 1508              	.LBE153:
 1509              	.LBE167:
 1510              	.LBE180:
 1511              	.LBE191:
 1512              	.LBE201:
 1513              	.LBE212:
 1514              	.LBE225:
 1515              	.LBE236:
 1516              	.LBE247:
 1517              		.cfi_endproc
 1518              	.LFE30:
 1519              		.section	.gcc_except_table
 1520              	.LLSDA30:
 1521 0038 FF       		.byte	0xff
 1522 0039 FF       		.byte	0xff
 1523 003a 03       		.byte	0x3
 1524 003b 5B       		.byte	0x5b
 1525 003c 00000000 		.4byte	.LEHB4-.LFB30
 1526 0040 00000000 		.4byte	.LEHE4-.LEHB4
 1527 0044 00000000 		.4byte	0
 1528 0048 00       		.byte	0
 1529 0049 00000000 		.4byte	.LEHB5-.LFB30
 1530 004d 00000000 		.4byte	.LEHE5-.LEHB5
 1531 0051 00000000 		.4byte	.L44-.LFB30
 1532 0055 00       		.byte	0
 1533 0056 00000000 		.4byte	.LEHB6-.LFB30
 1534 005a 00000000 		.4byte	.LEHE6-.LEHB6
 1535 005e 00000000 		.4byte	0
GAS LISTING /tmp/ccgWpG8G.s 			page 40


 1536 0062 00       		.byte	0
 1537 0063 00000000 		.4byte	.LEHB7-.LFB30
 1538 0067 00000000 		.4byte	.LEHE7-.LEHB7
 1539 006b 00000000 		.4byte	.L45-.LFB30
 1540 006f 00       		.byte	0
 1541 0070 00000000 		.4byte	.LEHB8-.LFB30
 1542 0074 00000000 		.4byte	.LEHE8-.LEHB8
 1543 0078 00000000 		.4byte	0
 1544 007c 00       		.byte	0
 1545 007d 00000000 		.4byte	.LEHB9-.LFB30
 1546 0081 00000000 		.4byte	.LEHE9-.LEHB9
 1547 0085 00000000 		.4byte	0
 1548 0089 00       		.byte	0
 1549 008a 00000000 		.4byte	.LEHB10-.LFB30
 1550 008e 00000000 		.4byte	.LEHE10-.LEHB10
 1551 0092 00000000 		.4byte	0
 1552 0096 00       		.byte	0
 1553              		.text
 1555              		.section	.rodata
 1556              		.align	3
 1557              		.set	.LANCHOR0,. + 0
 1560              	_ZZN5Riscv12printIntegerEmE6digits:
 1561 0000 30313233 		.string	"0123456789"
 1561      34353637 
 1561      383900
 1562              		.text
 1563              	.Letext0:
 1564              		.file 4 "src/../h/../lib/hw.h"
 1565              		.file 5 "src/../h/Queue.hpp"
 1566              		.file 6 "src/../h/Scheduler.hpp"
 1567              		.file 7 "src/../h/KSemaphore.hpp"
 1568              		.file 8 "src/../h/SleepPCBList.hpp"
 1569              		.file 9 "src/../h/syscall_cpp.hpp"
 1570              		.file 10 "src/../h/MemoryAllocator.hpp"
 1571              		.file 11 "src/../lib/console.h"
 6464              		.align	3
 6467              	DW.ref.__gxx_personality_v0:
 6468 0000 00000000 		.dword	__gxx_personality_v0
 6468      00000000 
 6469              		.ident	"GCC: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0"
 6470              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/ccgWpG8G.s 			page 41


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Riscv.cpp
     /tmp/ccgWpG8G.s:9      .text:0000000000000000 _ZN5Riscv10initSystemEv
     /tmp/ccgWpG8G.s:13     .text:0000000000000000 .L0 
     /tmp/ccgWpG8G.s:6467   .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/ccgWpG8G.s:16     .text:0000000000000000 .L0 
     /tmp/ccgWpG8G.s:17     .text:0000000000000004 .L0 
     /tmp/ccgWpG8G.s:22     .text:0000000000000014 .L0 
     /tmp/ccgWpG8G.s:23     .text:0000000000000014 .L0 
     /tmp/ccgWpG8G.s:24     .text:0000000000000014 .L0 
     /tmp/ccgWpG8G.s:25     .text:0000000000000014 .L0 
     /tmp/ccgWpG8G.s:27     .text:0000000000000018 .L0 
     /tmp/ccgWpG8G.s:29     .text:0000000000000018 .L0 
     /tmp/ccgWpG8G.s:30     .text:0000000000000018 .L0 
     /tmp/ccgWpG8G.s:36     .text:0000000000000020 .L0 
  src/../h/Riscv.hpp:114    .text:0000000000000020 .L0 
     /tmp/ccgWpG8G.s:46     .text:0000000000000024 .L0 
     /tmp/ccgWpG8G.s:47     .text:0000000000000024 .L0 
     /tmp/ccgWpG8G.s:60     .text:0000000000000044 .L0 
     /tmp/ccgWpG8G.s:61     .text:0000000000000044 .L0 
     /tmp/ccgWpG8G.s:66     .text:0000000000000050 .L0 
     /tmp/ccgWpG8G.s:67     .text:0000000000000050 .L0 
     /tmp/ccgWpG8G.s:71     .text:0000000000000058 .L0 
     /tmp/ccgWpG8G.s:78     .text:0000000000000064 .L0 
     /tmp/ccgWpG8G.s:79     .text:0000000000000064 .L0 
     /tmp/ccgWpG8G.s:80     .text:0000000000000064 .L0 
     /tmp/ccgWpG8G.s:86     .text:000000000000006c .L0 
     /tmp/ccgWpG8G.s:87     .text:0000000000000070 .L0 
     /tmp/ccgWpG8G.s:88     .text:0000000000000070 .L0 
     /tmp/ccgWpG8G.s:90     .text:0000000000000074 .L0 
     /tmp/ccgWpG8G.s:91     .text:0000000000000074 .L0 
     /tmp/ccgWpG8G.s:93     .text:0000000000000078 .L0 
     /tmp/ccgWpG8G.s:96     .text:000000000000007c .L0 
     /tmp/ccgWpG8G.s:98     .text:0000000000000080 .L0 
     /tmp/ccgWpG8G.s:101    .text:0000000000000084 .L0 
     /tmp/ccgWpG8G.s:104    .text:0000000000000088 .L0 
     /tmp/ccgWpG8G.s:112    .text:00000000000000a0 .L0 
     /tmp/ccgWpG8G.s:142    .text:00000000000000a0 _ZN5Riscv16enableInterruptsEv
     /tmp/ccgWpG8G.s:145    .text:00000000000000a0 .L0 
     /tmp/ccgWpG8G.s:146    .text:00000000000000a0 .L0 
     /tmp/ccgWpG8G.s:147    .text:00000000000000a4 .L0 
     /tmp/ccgWpG8G.s:149    .text:00000000000000a8 .L0 
     /tmp/ccgWpG8G.s:151    .text:00000000000000ac .L0 
     /tmp/ccgWpG8G.s:156    .text:00000000000000ac .L0 
     /tmp/ccgWpG8G.s:157    .text:00000000000000ac .L0 
     /tmp/ccgWpG8G.s:158    .text:00000000000000ac .L0 
     /tmp/ccgWpG8G.s:168    .text:00000000000000b4 .L0 
     /tmp/ccgWpG8G.s:169    .text:00000000000000b8 .L0 
     /tmp/ccgWpG8G.s:170    .text:00000000000000b8 .L0 
     /tmp/ccgWpG8G.s:172    .text:00000000000000bc .L0 
     /tmp/ccgWpG8G.s:174    .text:00000000000000c0 .L0 
     /tmp/ccgWpG8G.s:180    .text:00000000000000c0 _ZN5Riscv17disableInterruptsEv
     /tmp/ccgWpG8G.s:183    .text:00000000000000c0 .L0 
     /tmp/ccgWpG8G.s:184    .text:00000000000000c0 .L0 
     /tmp/ccgWpG8G.s:185    .text:00000000000000c4 .L0 
     /tmp/ccgWpG8G.s:187    .text:00000000000000c8 .L0 
     /tmp/ccgWpG8G.s:189    .text:00000000000000cc .L0 
GAS LISTING /tmp/ccgWpG8G.s 			page 42


     /tmp/ccgWpG8G.s:194    .text:00000000000000cc .L0 
     /tmp/ccgWpG8G.s:195    .text:00000000000000cc .L0 
     /tmp/ccgWpG8G.s:196    .text:00000000000000cc .L0 
     /tmp/ccgWpG8G.s:206    .text:00000000000000d4 .L0 
     /tmp/ccgWpG8G.s:207    .text:00000000000000d8 .L0 
     /tmp/ccgWpG8G.s:208    .text:00000000000000d8 .L0 
     /tmp/ccgWpG8G.s:210    .text:00000000000000dc .L0 
     /tmp/ccgWpG8G.s:212    .text:00000000000000e0 .L0 
     /tmp/ccgWpG8G.s:218    .text:00000000000000e0 _ZN5Riscv9endSystemEv
     /tmp/ccgWpG8G.s:221    .text:00000000000000e0 .L0 
     /tmp/ccgWpG8G.s:222    .text:00000000000000e0 .L0 
     /tmp/ccgWpG8G.s:223    .text:00000000000000e4 .L0 
     /tmp/ccgWpG8G.s:226    .text:00000000000000ec .L0 
     /tmp/ccgWpG8G.s:227    .text:00000000000000ec .L0 
     /tmp/ccgWpG8G.s:229    .text:00000000000000f0 .L0 
     /tmp/ccgWpG8G.s:231    .text:00000000000000f0 .L0 
     /tmp/ccgWpG8G.s:232    .text:00000000000000f0 .L0 
     /tmp/ccgWpG8G.s:235    .text:00000000000000f8 .L0 
     /tmp/ccgWpG8G.s:236    .text:00000000000000fc .L0 
     /tmp/ccgWpG8G.s:238    .text:0000000000000100 .L0 
     /tmp/ccgWpG8G.s:239    .text:0000000000000100 .L0 
     /tmp/ccgWpG8G.s:241    .text:0000000000000104 .L0 
     /tmp/ccgWpG8G.s:243    .text:0000000000000108 .L0 
     /tmp/ccgWpG8G.s:249    .text:0000000000000108 _ZN5Riscv10popSppSpieEv
     /tmp/ccgWpG8G.s:252    .text:0000000000000108 .L0 
     /tmp/ccgWpG8G.s:253    .text:0000000000000108 .L0 
     /tmp/ccgWpG8G.s:254    .text:000000000000010c .L0 
     /tmp/ccgWpG8G.s:256    .text:0000000000000110 .L0 
     /tmp/ccgWpG8G.s:258    .text:0000000000000114 .L0 
     /tmp/ccgWpG8G.s:260    .text:0000000000000114 .L0 
       src/Riscv.cpp:40     .text:0000000000000114 .L0 
     /tmp/ccgWpG8G.s:266    .text:0000000000000118 .L0 
       src/Riscv.cpp:41     .text:0000000000000118 .L0 
     /tmp/ccgWpG8G.s:272    .text:000000000000011c .L0 
     /tmp/ccgWpG8G.s:273    .text:0000000000000120 .L0 
     /tmp/ccgWpG8G.s:274    .text:0000000000000120 .L0 
     /tmp/ccgWpG8G.s:276    .text:0000000000000124 .L0 
     /tmp/ccgWpG8G.s:278    .text:0000000000000128 .L0 
     /tmp/ccgWpG8G.s:284    .text:0000000000000128 _ZN5Riscv11printStringEPKc
     /tmp/ccgWpG8G.s:287    .text:0000000000000128 .L0 
     /tmp/ccgWpG8G.s:289    .text:0000000000000128 .L0 
     /tmp/ccgWpG8G.s:290    .text:000000000000012c .L0 
     /tmp/ccgWpG8G.s:295    .text:000000000000013c .L0 
     /tmp/ccgWpG8G.s:296    .text:000000000000013c .L0 
     /tmp/ccgWpG8G.s:297    .text:000000000000013c .L0 
     /tmp/ccgWpG8G.s:298    .text:000000000000013c .L0 
     /tmp/ccgWpG8G.s:300    .text:0000000000000140 .L0 
     /tmp/ccgWpG8G.s:305    .text:0000000000000144 .L0 
     /tmp/ccgWpG8G.s:306    .text:0000000000000144 .L0 
     /tmp/ccgWpG8G.s:307    .text:0000000000000144 .L0 
  src/../h/Riscv.hpp:155    .text:0000000000000144 .L0 
     /tmp/ccgWpG8G.s:315    .text:000000000000014c .L0 
     /tmp/ccgWpG8G.s:316    .text:000000000000014c .L0 
     /tmp/ccgWpG8G.s:323    .text:0000000000000150 .L0 
     /tmp/ccgWpG8G.s:324    .text:0000000000000150 .L0 
     /tmp/ccgWpG8G.s:325    .text:0000000000000150 .L0 
     /tmp/ccgWpG8G.s:336    .text:0000000000000158 .L0 
GAS LISTING /tmp/ccgWpG8G.s 			page 43


     /tmp/ccgWpG8G.s:337    .text:0000000000000158 .L0 
     /tmp/ccgWpG8G.s:338    .text:0000000000000158 .L0 
     /tmp/ccgWpG8G.s:340    .text:000000000000015c .L0 
     /tmp/ccgWpG8G.s:342    .text:0000000000000160 .L0 
     /tmp/ccgWpG8G.s:343    .text:0000000000000160 .L0 
     /tmp/ccgWpG8G.s:346    .text:0000000000000168 .L0 
     /tmp/ccgWpG8G.s:347    .text:0000000000000168 .L0 
     /tmp/ccgWpG8G.s:350    .text:000000000000016c .L0 
     /tmp/ccgWpG8G.s:353    .text:0000000000000170 .L0 
     /tmp/ccgWpG8G.s:354    .text:0000000000000170 .L0 
     /tmp/ccgWpG8G.s:357    .text:0000000000000174 .L0 
     /tmp/ccgWpG8G.s:363    .text:000000000000017c .L0 
  src/../h/Riscv.hpp:146    .text:000000000000017c .L0 
     /tmp/ccgWpG8G.s:373    .text:0000000000000180 .L0 
     /tmp/ccgWpG8G.s:374    .text:0000000000000184 .L0 
     /tmp/ccgWpG8G.s:376    .text:0000000000000188 .L0 
     /tmp/ccgWpG8G.s:377    .text:0000000000000188 .L0 
     /tmp/ccgWpG8G.s:379    .text:000000000000018c .L0 
     /tmp/ccgWpG8G.s:382    .text:0000000000000190 .L0 
     /tmp/ccgWpG8G.s:384    .text:0000000000000194 .L0 
     /tmp/ccgWpG8G.s:386    .text:0000000000000198 .L0 
     /tmp/ccgWpG8G.s:392    .text:0000000000000198 _ZN5Riscv12printIntegerEm
     /tmp/ccgWpG8G.s:395    .text:0000000000000198 .L0 
     /tmp/ccgWpG8G.s:397    .text:0000000000000198 .L0 
     /tmp/ccgWpG8G.s:398    .text:000000000000019c .L0 
     /tmp/ccgWpG8G.s:403    .text:00000000000001ac .L0 
     /tmp/ccgWpG8G.s:404    .text:00000000000001ac .L0 
     /tmp/ccgWpG8G.s:405    .text:00000000000001ac .L0 
     /tmp/ccgWpG8G.s:406    .text:00000000000001ac .L0 
     /tmp/ccgWpG8G.s:408    .text:00000000000001b0 .L0 
     /tmp/ccgWpG8G.s:412    .text:00000000000001b0 .L0 
     /tmp/ccgWpG8G.s:413    .text:00000000000001b0 .L0 
     /tmp/ccgWpG8G.s:414    .text:00000000000001b0 .L0 
  src/../h/Riscv.hpp:155    .text:00000000000001b0 .L0 
     /tmp/ccgWpG8G.s:422    .text:00000000000001b8 .L0 
     /tmp/ccgWpG8G.s:423    .text:00000000000001b8 .L0 
     /tmp/ccgWpG8G.s:430    .text:00000000000001bc .L0 
     /tmp/ccgWpG8G.s:431    .text:00000000000001bc .L0 
     /tmp/ccgWpG8G.s:432    .text:00000000000001bc .L0 
     /tmp/ccgWpG8G.s:442    .text:00000000000001c4 .L0 
     /tmp/ccgWpG8G.s:443    .text:00000000000001c4 .L0 
     /tmp/ccgWpG8G.s:444    .text:00000000000001c4 .L0 
     /tmp/ccgWpG8G.s:445    .text:00000000000001c4 .L0 
     /tmp/ccgWpG8G.s:446    .text:00000000000001c4 .L0 
     /tmp/ccgWpG8G.s:447    .text:00000000000001c4 .L0 
     /tmp/ccgWpG8G.s:448    .text:00000000000001c4 .L0 
     /tmp/ccgWpG8G.s:449    .text:00000000000001c4 .L0 
     /tmp/ccgWpG8G.s:452    .text:00000000000001c8 .L0 
     /tmp/ccgWpG8G.s:453    .text:00000000000001c8 .L0 
     /tmp/ccgWpG8G.s:457    .text:00000000000001cc .L0 
     /tmp/ccgWpG8G.s:458    .text:00000000000001cc .L0 
     /tmp/ccgWpG8G.s:459    .text:00000000000001cc .L0 
     /tmp/ccgWpG8G.s:463    .text:00000000000001d4 .L0 
     /tmp/ccgWpG8G.s:469    .text:00000000000001ec .L0 
     /tmp/ccgWpG8G.s:475    .text:00000000000001fc .L0 
     /tmp/ccgWpG8G.s:477    .text:0000000000000200 .L0 
     /tmp/ccgWpG8G.s:480    .text:0000000000000204 .L0 
GAS LISTING /tmp/ccgWpG8G.s 			page 44


     /tmp/ccgWpG8G.s:485    .text:000000000000020c .L0 
     /tmp/ccgWpG8G.s:486    .text:000000000000020c .L0 
     /tmp/ccgWpG8G.s:490    .text:0000000000000214 .L0 
     /tmp/ccgWpG8G.s:491    .text:0000000000000214 .L0 
     /tmp/ccgWpG8G.s:499    .text:000000000000022c .L0 
     /tmp/ccgWpG8G.s:500    .text:000000000000022c .L0 
     /tmp/ccgWpG8G.s:504    .text:0000000000000238 .L0 
     /tmp/ccgWpG8G.s:505    .text:0000000000000238 .L0 
     /tmp/ccgWpG8G.s:508    .text:000000000000023c .L0 
     /tmp/ccgWpG8G.s:514    .text:0000000000000244 .L0 
  src/../h/Riscv.hpp:146    .text:0000000000000244 .L0 
     /tmp/ccgWpG8G.s:524    .text:0000000000000248 .L0 
     /tmp/ccgWpG8G.s:525    .text:000000000000024c .L0 
     /tmp/ccgWpG8G.s:527    .text:0000000000000250 .L0 
     /tmp/ccgWpG8G.s:528    .text:0000000000000250 .L0 
     /tmp/ccgWpG8G.s:530    .text:0000000000000254 .L0 
     /tmp/ccgWpG8G.s:532    .text:0000000000000258 .L0 
     /tmp/ccgWpG8G.s:534    .text:000000000000025c .L0 
     /tmp/ccgWpG8G.s:536    .text:0000000000000260 .L0 
     /tmp/ccgWpG8G.s:542    .text:0000000000000260 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccgWpG8G.s:545    .text:0000000000000260 .L0 
     /tmp/ccgWpG8G.s:548    .text:0000000000000260 .L0 
     /tmp/ccgWpG8G.s:549    .text:0000000000000264 .L0 
     /tmp/ccgWpG8G.s:558    .text:0000000000000284 .L0 
     /tmp/ccgWpG8G.s:559    .text:0000000000000284 .L0 
     /tmp/ccgWpG8G.s:560    .text:0000000000000284 .L0 
     /tmp/ccgWpG8G.s:561    .text:0000000000000284 .L0 
     /tmp/ccgWpG8G.s:562    .text:0000000000000284 .L0 
     /tmp/ccgWpG8G.s:563    .text:0000000000000284 .L0 
     /tmp/ccgWpG8G.s:564    .text:0000000000000284 .L0 
     /tmp/ccgWpG8G.s:565    .text:0000000000000284 .L0 
     /tmp/ccgWpG8G.s:567    .text:0000000000000288 .L0 
     /tmp/ccgWpG8G.s:569    .text:0000000000000288 .L0 
     /tmp/ccgWpG8G.s:570    .text:0000000000000288 .L0 
       src/Riscv.cpp:93     .text:0000000000000288 .L0 
     /tmp/ccgWpG8G.s:580    .text:000000000000028c .L0 
     /tmp/ccgWpG8G.s:581    .text:000000000000028c .L0 
     /tmp/ccgWpG8G.s:582    .text:000000000000028c .L0 
  src/../h/Riscv.hpp:89     .text:000000000000028c .L0 
     /tmp/ccgWpG8G.s:590    .text:0000000000000294 .L0 
     /tmp/ccgWpG8G.s:591    .text:0000000000000294 .L0 
     /tmp/ccgWpG8G.s:597    .text:0000000000000298 .L0 
     /tmp/ccgWpG8G.s:605    .text:00000000000002b0 .L0 
     /tmp/ccgWpG8G.s:609    .text:00000000000002b0 .L0 
     /tmp/ccgWpG8G.s:610    .text:00000000000002b0 .L0 
     /tmp/ccgWpG8G.s:611    .text:00000000000002b0 .L0 
     /tmp/ccgWpG8G.s:621    .text:00000000000002b8 .L0 
     /tmp/ccgWpG8G.s:622    .text:00000000000002b8 .L0 
     /tmp/ccgWpG8G.s:628    .text:00000000000002cc .L0 
     /tmp/ccgWpG8G.s:629    .text:00000000000002cc .L0 
     /tmp/ccgWpG8G.s:633    .text:00000000000002d4 .L0 
     /tmp/ccgWpG8G.s:634    .text:00000000000002d4 .L0 
     /tmp/ccgWpG8G.s:640    .text:00000000000002e0 .L0 
     /tmp/ccgWpG8G.s:641    .text:00000000000002e0 .L0 
     /tmp/ccgWpG8G.s:646    .text:00000000000002e4 .L0 
     /tmp/ccgWpG8G.s:648    .text:00000000000002e8 .L0 
     /tmp/ccgWpG8G.s:653    .text:00000000000002ec .L0 
GAS LISTING /tmp/ccgWpG8G.s 			page 45


     /tmp/ccgWpG8G.s:654    .text:00000000000002ec .L0 
     /tmp/ccgWpG8G.s:655    .text:00000000000002ec .L0 
  src/../h/Riscv.hpp:99     .text:00000000000002ec .L0 
     /tmp/ccgWpG8G.s:663    .text:00000000000002f4 .L0 
     /tmp/ccgWpG8G.s:664    .text:00000000000002f4 .L0 
     /tmp/ccgWpG8G.s:671    .text:00000000000002f8 .L0 
     /tmp/ccgWpG8G.s:672    .text:00000000000002f8 .L0 
     /tmp/ccgWpG8G.s:673    .text:00000000000002f8 .L0 
  src/../h/Riscv.hpp:155    .text:00000000000002f8 .L0 
     /tmp/ccgWpG8G.s:681    .text:0000000000000300 .L0 
     /tmp/ccgWpG8G.s:682    .text:0000000000000300 .L0 
     /tmp/ccgWpG8G.s:687    .text:0000000000000304 .L0 
     /tmp/ccgWpG8G.s:688    .text:0000000000000304 .L0 
     /tmp/ccgWpG8G.s:691    .text:0000000000000310 .L0 
     /tmp/ccgWpG8G.s:692    .text:0000000000000310 .L0 
     /tmp/ccgWpG8G.s:697    .text:0000000000000318 .L0 
     /tmp/ccgWpG8G.s:698    .text:0000000000000318 .L0 
  src/../h/Riscv.hpp:160    .text:0000000000000318 .L0 
     /tmp/ccgWpG8G.s:710    .text:000000000000031c .L0 
     /tmp/ccgWpG8G.s:711    .text:000000000000031c .L0 
  src/../h/Riscv.hpp:104    .text:000000000000031c .L0 
     /tmp/ccgWpG8G.s:718    .text:0000000000000320 .L0 
     /tmp/ccgWpG8G.s:727    .text:0000000000000324 .L0 
     /tmp/ccgWpG8G.s:732    .text:000000000000032c .L0 
     /tmp/ccgWpG8G.s:733    .text:000000000000032c .L0 
     /tmp/ccgWpG8G.s:737    .text:0000000000000334 .L0 
     /tmp/ccgWpG8G.s:738    .text:0000000000000338 .L0 
     /tmp/ccgWpG8G.s:739    .text:0000000000000338 .L0 
     /tmp/ccgWpG8G.s:741    .text:000000000000033c .L0 
     /tmp/ccgWpG8G.s:742    .text:000000000000033c .L0 
     /tmp/ccgWpG8G.s:744    .text:0000000000000340 .L0 
     /tmp/ccgWpG8G.s:746    .text:0000000000000344 .L0 
     /tmp/ccgWpG8G.s:748    .text:0000000000000348 .L0 
     /tmp/ccgWpG8G.s:750    .text:000000000000034c .L0 
     /tmp/ccgWpG8G.s:752    .text:0000000000000350 .L0 
     /tmp/ccgWpG8G.s:754    .text:0000000000000354 .L0 
     /tmp/ccgWpG8G.s:756    .text:0000000000000358 .L0 
     /tmp/ccgWpG8G.s:760    .text:000000000000035c .L0 
     /tmp/ccgWpG8G.s:764    .text:000000000000035c .L0 
     /tmp/ccgWpG8G.s:765    .text:000000000000035c .L0 
     /tmp/ccgWpG8G.s:766    .text:000000000000035c .L0 
     /tmp/ccgWpG8G.s:767    .text:000000000000035c .L0 
       src/Riscv.cpp:140    .text:000000000000035c .L0 
     /tmp/ccgWpG8G.s:777    .text:0000000000000360 .L0 
     /tmp/ccgWpG8G.s:778    .text:0000000000000360 .L0 
     /tmp/ccgWpG8G.s:779    .text:0000000000000360 .L0 
  src/../h/Riscv.hpp:99     .text:0000000000000360 .L0 
     /tmp/ccgWpG8G.s:788    .text:0000000000000368 .L0 
     /tmp/ccgWpG8G.s:789    .text:0000000000000368 .L0 
     /tmp/ccgWpG8G.s:794    .text:000000000000036c .L0 
     /tmp/ccgWpG8G.s:795    .text:000000000000036c .L0 
     /tmp/ccgWpG8G.s:799    .text:0000000000000370 .L0 
     /tmp/ccgWpG8G.s:809    .text:0000000000000378 .L0 
     /tmp/ccgWpG8G.s:821    .text:0000000000000380 .L0 
     /tmp/ccgWpG8G.s:835    .text:0000000000000388 .L0 
     /tmp/ccgWpG8G.s:851    .text:0000000000000390 .L0 
     /tmp/ccgWpG8G.s:869    .text:0000000000000398 .L0 
GAS LISTING /tmp/ccgWpG8G.s 			page 46


     /tmp/ccgWpG8G.s:889    .text:00000000000003a0 .L0 
     /tmp/ccgWpG8G.s:911    .text:00000000000003a8 .L0 
     /tmp/ccgWpG8G.s:935    .text:00000000000003b0 .L0 
     /tmp/ccgWpG8G.s:961    .text:00000000000003b8 .L0 
     /tmp/ccgWpG8G.s:965    .text:00000000000003c0 .L0 
     /tmp/ccgWpG8G.s:966    .text:00000000000003c0 .L0 
       src/Riscv.cpp:256    .text:00000000000003c0 .L0 
     /tmp/ccgWpG8G.s:973    .text:00000000000003c4 .L0 
     /tmp/ccgWpG8G.s:975    .text:00000000000003c4 .L0 
     /tmp/ccgWpG8G.s:977    .text:00000000000003c8 .L0 
     /tmp/ccgWpG8G.s:985    .text:00000000000003e0 .L0 
       src/Riscv.cpp:260    .text:00000000000003e0 .L0 
     /tmp/ccgWpG8G.s:1006   .text:00000000000003e8 .L0 
     /tmp/ccgWpG8G.s:1007   .text:00000000000003e8 .L0 
       src/Riscv.cpp:148    .text:00000000000003e8 .L0 
     /tmp/ccgWpG8G.s:1014   .text:00000000000003ec .L0 
     /tmp/ccgWpG8G.s:1015   .text:00000000000003ec .L0 
     /tmp/ccgWpG8G.s:1017   .text:00000000000003ec .L0 
     /tmp/ccgWpG8G.s:1022   .text:00000000000003f8 .L0 
       src/Riscv.cpp:151    .text:00000000000003f8 .L0 
     /tmp/ccgWpG8G.s:1035   .text:00000000000003fc .L0 
     /tmp/ccgWpG8G.s:1036   .text:00000000000003fc .L0 
  src/../h/Riscv.hpp:104    .text:00000000000003fc .L0 
     /tmp/ccgWpG8G.s:1043   .text:0000000000000400 .L0 
     /tmp/ccgWpG8G.s:1052   .text:0000000000000404 .L0 
     /tmp/ccgWpG8G.s:1053   .text:0000000000000404 .L0 
       src/Riscv.cpp:156    .text:0000000000000404 .L0 
     /tmp/ccgWpG8G.s:1060   .text:0000000000000408 .L0 
     /tmp/ccgWpG8G.s:1062   .text:0000000000000408 .L0 
     /tmp/ccgWpG8G.s:1065   .text:0000000000000410 .L0 
       src/Riscv.cpp:158    .text:0000000000000410 .L0 
     /tmp/ccgWpG8G.s:1078   .text:0000000000000418 .L0 
     /tmp/ccgWpG8G.s:1079   .text:0000000000000418 .L0 
     /tmp/ccgWpG8G.s:1080   .text:0000000000000418 .L0 
     /tmp/ccgWpG8G.s:1081   .text:0000000000000418 .L0 
       src/Riscv.cpp:165    .text:0000000000000418 .L0 
     /tmp/ccgWpG8G.s:1088   .text:000000000000041c .L0 
       src/Riscv.cpp:166    .text:000000000000041c .L0 
     /tmp/ccgWpG8G.s:1094   .text:0000000000000420 .L0 
       src/Riscv.cpp:167    .text:0000000000000420 .L0 
     /tmp/ccgWpG8G.s:1100   .text:0000000000000424 .L0 
     /tmp/ccgWpG8G.s:1102   .text:0000000000000424 .L0 
     /tmp/ccgWpG8G.s:1116   .text:000000000000044c .L0 
     /tmp/ccgWpG8G.s:1117   .text:000000000000044c .L0 
     /tmp/ccgWpG8G.s:1119   .text:0000000000000450 .L0 
     /tmp/ccgWpG8G.s:1121   .text:0000000000000454 .L0 
       src/Riscv.cpp:179    .text:0000000000000454 .L0 
     /tmp/ccgWpG8G.s:1130   .text:000000000000045c .L0 
       src/Riscv.cpp:177    .text:000000000000045c .L0 
     /tmp/ccgWpG8G.s:1145   .text:0000000000000464 .L0 
     /tmp/ccgWpG8G.s:1146   .text:0000000000000464 .L0 
     /tmp/ccgWpG8G.s:1147   .text:0000000000000464 .L0 
  src/../h/Riscv.hpp:155    .text:0000000000000464 .L0 
     /tmp/ccgWpG8G.s:1156   .text:000000000000046c .L0 
     /tmp/ccgWpG8G.s:1157   .text:000000000000046c .L0 
     /tmp/ccgWpG8G.s:1162   .text:0000000000000470 .L0 
     /tmp/ccgWpG8G.s:1163   .text:0000000000000470 .L0 
GAS LISTING /tmp/ccgWpG8G.s 			page 47


     /tmp/ccgWpG8G.s:1167   .text:000000000000047c .L0 
     /tmp/ccgWpG8G.s:1168   .text:000000000000047c .L0 
     /tmp/ccgWpG8G.s:1173   .text:0000000000000484 .L0 
     /tmp/ccgWpG8G.s:1174   .text:0000000000000484 .L0 
  src/../h/Riscv.hpp:160    .text:0000000000000484 .L0 
     /tmp/ccgWpG8G.s:1181   .text:0000000000000488 .L0 
     /tmp/ccgWpG8G.s:1190   .text:000000000000048c .L0 
     /tmp/ccgWpG8G.s:1191   .text:000000000000048c .L0 
     /tmp/ccgWpG8G.s:1195   .text:0000000000000498 .L0 
     /tmp/ccgWpG8G.s:1199   .text:000000000000049c .L0 
     /tmp/ccgWpG8G.s:1200   .text:000000000000049c .L0 
     /tmp/ccgWpG8G.s:1201   .text:000000000000049c .L0 
  src/../h/Riscv.hpp:155    .text:000000000000049c .L0 
     /tmp/ccgWpG8G.s:1209   .text:00000000000004a4 .L0 
     /tmp/ccgWpG8G.s:1210   .text:00000000000004a4 .L0 
     /tmp/ccgWpG8G.s:1215   .text:00000000000004a8 .L0 
     /tmp/ccgWpG8G.s:1216   .text:00000000000004a8 .L0 
     /tmp/ccgWpG8G.s:1219   .text:00000000000004b4 .L0 
     /tmp/ccgWpG8G.s:1220   .text:00000000000004b4 .L0 
     /tmp/ccgWpG8G.s:1240   .text:00000000000004c0 .L0 
     /tmp/ccgWpG8G.s:1243   .text:00000000000004c0 .L0 
     /tmp/ccgWpG8G.s:1244   .text:00000000000004c0 .L0 
     /tmp/ccgWpG8G.s:1245   .text:00000000000004c0 .L0 
     /tmp/ccgWpG8G.s:1251   .text:00000000000004c8 .L0 
     /tmp/ccgWpG8G.s:1252   .text:00000000000004c8 .L0 
     /tmp/ccgWpG8G.s:1257   .text:00000000000004d0 .L0 
     /tmp/ccgWpG8G.s:1258   .text:00000000000004d0 .L0 
  src/../h/Riscv.hpp:160    .text:00000000000004d0 .L0 
     /tmp/ccgWpG8G.s:1265   .text:00000000000004d4 .L0 
     /tmp/ccgWpG8G.s:1271   .text:00000000000004d8 .L0 
       src/Riscv.cpp:192    .text:00000000000004d8 .L0 
     /tmp/ccgWpG8G.s:1278   .text:00000000000004dc .L0 
     /tmp/ccgWpG8G.s:1285   .text:00000000000004e0 .L0 
     /tmp/ccgWpG8G.s:1286   .text:00000000000004e0 .L0 
       src/Riscv.cpp:205    .text:00000000000004e0 .L0 
     /tmp/ccgWpG8G.s:1296   .text:00000000000004e4 .L0 
     /tmp/ccgWpG8G.s:1297   .text:00000000000004e4 .L0 
     /tmp/ccgWpG8G.s:1298   .text:00000000000004e4 .L0 
  src/../h/Riscv.hpp:155    .text:00000000000004e4 .L0 
     /tmp/ccgWpG8G.s:1307   .text:00000000000004ec .L0 
     /tmp/ccgWpG8G.s:1308   .text:00000000000004ec .L0 
     /tmp/ccgWpG8G.s:1313   .text:00000000000004f0 .L0 
     /tmp/ccgWpG8G.s:1314   .text:00000000000004f0 .L0 
     /tmp/ccgWpG8G.s:1317   .text:00000000000004fc .L0 
     /tmp/ccgWpG8G.s:1318   .text:00000000000004fc .L0 
     /tmp/ccgWpG8G.s:1324   .text:0000000000000508 .L0 
     /tmp/ccgWpG8G.s:1325   .text:0000000000000508 .L0 
     /tmp/ccgWpG8G.s:1330   .text:000000000000050c .L0 
     /tmp/ccgWpG8G.s:1331   .text:000000000000050c .L0 
     /tmp/ccgWpG8G.s:1334   .text:0000000000000514 .L0 
     /tmp/ccgWpG8G.s:1335   .text:0000000000000514 .L0 
     /tmp/ccgWpG8G.s:1340   .text:000000000000051c .L0 
     /tmp/ccgWpG8G.s:1341   .text:000000000000051c .L0 
  src/../h/Riscv.hpp:160    .text:000000000000051c .L0 
     /tmp/ccgWpG8G.s:1351   .text:0000000000000520 .L0 
       src/Riscv.cpp:214    .text:0000000000000520 .L0 
     /tmp/ccgWpG8G.s:1364   .text:0000000000000528 .L0 
GAS LISTING /tmp/ccgWpG8G.s 			page 48


     /tmp/ccgWpG8G.s:1365   .text:0000000000000528 .L0 
     /tmp/ccgWpG8G.s:1366   .text:0000000000000528 .L0 
       src/Riscv.cpp:220    .text:0000000000000528 .L0 
     /tmp/ccgWpG8G.s:1373   .text:000000000000052c .L0 
       src/Riscv.cpp:221    .text:000000000000052c .L0 
     /tmp/ccgWpG8G.s:1379   .text:0000000000000530 .L0 
     /tmp/ccgWpG8G.s:1381   .text:0000000000000530 .L0 
     /tmp/ccgWpG8G.s:1393   .text:000000000000054c .L0 
     /tmp/ccgWpG8G.s:1394   .text:000000000000054c .L0 
     /tmp/ccgWpG8G.s:1396   .text:0000000000000550 .L0 
     /tmp/ccgWpG8G.s:1398   .text:0000000000000554 .L0 
       src/Riscv.cpp:230    .text:0000000000000554 .L0 
     /tmp/ccgWpG8G.s:1407   .text:000000000000055c .L0 
       src/Riscv.cpp:228    .text:000000000000055c .L0 
     /tmp/ccgWpG8G.s:1420   .text:0000000000000564 .L0 
     /tmp/ccgWpG8G.s:1421   .text:0000000000000564 .L0 
       src/Riscv.cpp:238    .text:0000000000000564 .L0 
     /tmp/ccgWpG8G.s:1429   .text:0000000000000568 .L0 
     /tmp/ccgWpG8G.s:1431   .text:0000000000000568 .L0 
     /tmp/ccgWpG8G.s:1434   .text:0000000000000570 .L0 
       src/Riscv.cpp:240    .text:0000000000000570 .L0 
     /tmp/ccgWpG8G.s:1447   .text:0000000000000578 .L0 
     /tmp/ccgWpG8G.s:1448   .text:0000000000000578 .L0 
       src/Riscv.cpp:247    .text:0000000000000578 .L0 
     /tmp/ccgWpG8G.s:1455   .text:000000000000057c .L0 
     /tmp/ccgWpG8G.s:1457   .text:000000000000057c .L0 
     /tmp/ccgWpG8G.s:1461   .text:0000000000000584 .L0 
       src/Riscv.cpp:249    .text:0000000000000584 .L0 
     /tmp/ccgWpG8G.s:1481   .text:0000000000000590 .L0 
     /tmp/ccgWpG8G.s:1499   .text:00000000000005ac .L0 
     /tmp/ccgWpG8G.s:1517   .text:00000000000005c4 .L0 
     /tmp/ccgWpG8G.s:1557   .rodata:0000000000000000 .LANCHOR0
     /tmp/ccgWpG8G.s:1560   .rodata:0000000000000000 _ZZN5Riscv12printIntegerEmE6digits
     /tmp/ccgWpG8G.s:1572   .text:00000000000005c4 .L0 
     /tmp/ccgWpG8G.s:30     .text:0000000000000018 .L0 
     /tmp/ccgWpG8G.s:71     .text:0000000000000058 .L0 
     /tmp/ccgWpG8G.s:465    .text:00000000000001dc .L0 
     /tmp/ccgWpG8G.s:622    .text:00000000000002b8 .L0 
     /tmp/ccgWpG8G.s:634    .text:00000000000002d4 .L0 
     /tmp/ccgWpG8G.s:688    .text:0000000000000304 .L0 
     /tmp/ccgWpG8G.s:1163   .text:0000000000000470 .L0 
     /tmp/ccgWpG8G.s:1191   .text:000000000000048c .L0 
     /tmp/ccgWpG8G.s:1216   .text:00000000000004a8 .L0 
     /tmp/ccgWpG8G.s:1220   .text:00000000000004b4 .L0 
     /tmp/ccgWpG8G.s:1314   .text:00000000000004f0 .L0 
     /tmp/ccgWpG8G.s:1318   .text:00000000000004fc .L0 
     /tmp/ccgWpG8G.s:351    .text:0000000000000170 .L15
     /tmp/ccgWpG8G.s:332    .text:0000000000000158 .L16
     /tmp/ccgWpG8G.s:455    .text:00000000000001cc .L19
     /tmp/ccgWpG8G.s:497    .text:000000000000022c .L20
     /tmp/ccgWpG8G.s:483    .text:000000000000020c .L21
     /tmp/ccgWpG8G.s:720    .text:0000000000000324 .L47
     /tmp/ccgWpG8G.s:729    .text:000000000000032c .L26
     /tmp/ccgWpG8G.s:735    .text:0000000000000334 .L23
     /tmp/ccgWpG8G.s:759    .text:000000000000035c .L48
     /tmp/ccgWpG8G.s:994    .text:00000000000003e8 .L49
     /tmp/ccgWpG8G.s:1045   .text:0000000000000404 .L50
GAS LISTING /tmp/ccgWpG8G.s 			page 49


     /tmp/ccgWpG8G.s:1074   .text:0000000000000418 .L51
     /tmp/ccgWpG8G.s:1138   .text:0000000000000464 .L52
     /tmp/ccgWpG8G.s:1183   .text:000000000000048c .L53
     /tmp/ccgWpG8G.s:1280   .text:00000000000004e0 .L54
     /tmp/ccgWpG8G.s:1360   .text:0000000000000528 .L55
     /tmp/ccgWpG8G.s:1415   .text:0000000000000564 .L56
     /tmp/ccgWpG8G.s:1443   .text:0000000000000578 .L57
     /tmp/ccgWpG8G.s:1029   .text:00000000000003fc .L29
     /tmp/ccgWpG8G.s:983    .text:00000000000003e0 .L41
     /tmp/ccgWpG8G.s:1128   .text:000000000000045c .L58
     /tmp/ccgWpG8G.s:1267   .text:00000000000004d8 .L59
     /tmp/ccgWpG8G.s:1405   .text:000000000000055c .L60
     /tmp/ccgWpG8G.s:48     .text:0000000000000028 .LEHB0
     /tmp/ccgWpG8G.s:10     .text:0000000000000000 .LFB23
     /tmp/ccgWpG8G.s:51     .text:0000000000000030 .LEHE0
     /tmp/ccgWpG8G.s:55     .text:000000000000003c .LEHB1
     /tmp/ccgWpG8G.s:58     .text:0000000000000044 .LEHE1
     /tmp/ccgWpG8G.s:100    .text:0000000000000084 .L3
     /tmp/ccgWpG8G.s:62     .text:0000000000000048 .LEHB2
     /tmp/ccgWpG8G.s:69     .text:0000000000000058 .LEHE2
     /tmp/ccgWpG8G.s:108    .text:0000000000000098 .LEHB3
     /tmp/ccgWpG8G.s:111    .text:00000000000000a0 .LEHE3
     /tmp/ccgWpG8G.s:627    .text:00000000000002cc .LEHB4
     /tmp/ccgWpG8G.s:543    .text:0000000000000260 .LFB30
     /tmp/ccgWpG8G.s:1105   .text:0000000000000430 .LEHE4
     /tmp/ccgWpG8G.s:1111   .text:0000000000000444 .LEHB5
     /tmp/ccgWpG8G.s:1114   .text:000000000000044c .LEHE5
     /tmp/ccgWpG8G.s:1470   .text:000000000000058c .L44
     /tmp/ccgWpG8G.s:1166   .text:000000000000047c .LEHB6
     /tmp/ccgWpG8G.s:1384   .text:000000000000053c .LEHE6
     /tmp/ccgWpG8G.s:1388   .text:0000000000000544 .LEHB7
     /tmp/ccgWpG8G.s:1391   .text:000000000000054c .LEHE7
     /tmp/ccgWpG8G.s:1489   .text:00000000000005a8 .L45
     /tmp/ccgWpG8G.s:1428   .text:0000000000000568 .LEHB8
     /tmp/ccgWpG8G.s:1459   .text:0000000000000584 .LEHE8
     /tmp/ccgWpG8G.s:1485   .text:00000000000005a0 .LEHB9
     /tmp/ccgWpG8G.s:1488   .text:00000000000005a8 .LEHE9
     /tmp/ccgWpG8G.s:1503   .text:00000000000005bc .LEHB10
     /tmp/ccgWpG8G.s:1506   .text:00000000000005c4 .LEHE10
     /tmp/ccgWpG8G.s:4163   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccgWpG8G.s:6043   .debug_str:000000000000021c .LASF229
     /tmp/ccgWpG8G.s:6069   .debug_str:0000000000000384 .LASF230
     /tmp/ccgWpG8G.s:6371   .debug_str:0000000000000bcf .LASF231
     /tmp/ccgWpG8G.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccgWpG8G.s:1563   .text:00000000000005c4 .Letext0
     /tmp/ccgWpG8G.s:5979   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccgWpG8G.s:6157   .debug_str:0000000000000618 .LASF0
     /tmp/ccgWpG8G.s:6281   .debug_str:000000000000099b .LASF3
     /tmp/ccgWpG8G.s:6189   .debug_str:00000000000006fd .LASF1
     /tmp/ccgWpG8G.s:6291   .debug_str:00000000000009c0 .LASF2
     /tmp/ccgWpG8G.s:6307   .debug_str:0000000000000a44 .LASF4
     /tmp/ccgWpG8G.s:6173   .debug_str:0000000000000680 .LASF5
     /tmp/ccgWpG8G.s:5999   .debug_str:0000000000000086 .LASF6
     /tmp/ccgWpG8G.s:6265   .debug_str:0000000000000936 .LASF7
     /tmp/ccgWpG8G.s:6255   .debug_str:00000000000008f4 .LASF8
     /tmp/ccgWpG8G.s:6179   .debug_str:00000000000006c4 .LASF9
     /tmp/ccgWpG8G.s:6133   .debug_str:0000000000000551 .LASF10
GAS LISTING /tmp/ccgWpG8G.s 			page 50


     /tmp/ccgWpG8G.s:6141   .debug_str:00000000000005a1 .LASF11
     /tmp/ccgWpG8G.s:6057   .debug_str:0000000000000340 .LASF12
     /tmp/ccgWpG8G.s:6121   .debug_str:0000000000000507 .LASF13
     /tmp/ccgWpG8G.s:6071   .debug_str:0000000000000392 .LASF14
     /tmp/ccgWpG8G.s:6055   .debug_str:0000000000000330 .LASF15
     /tmp/ccgWpG8G.s:6341   .debug_str:0000000000000b3b .LASF16
     /tmp/ccgWpG8G.s:6105   .debug_str:0000000000000473 .LASF17
     /tmp/ccgWpG8G.s:6331   .debug_str:0000000000000af4 .LASF18
     /tmp/ccgWpG8G.s:6403   .debug_str:0000000000000c93 .LASF91
     /tmp/ccgWpG8G.s:6277   .debug_str:0000000000000985 .LASF22
     /tmp/ccgWpG8G.s:6197   .debug_str:0000000000000732 .LASF19
     /tmp/ccgWpG8G.s:6111   .debug_str:00000000000004bd .LASF20
     /tmp/ccgWpG8G.s:6421   .debug_str:0000000000000cf8 .LASF21
     /tmp/ccgWpG8G.s:6393   .debug_str:0000000000000c5d .LASF23
     /tmp/ccgWpG8G.s:6113   .debug_str:00000000000004c6 .LASF24
     /tmp/ccgWpG8G.s:6359   .debug_str:0000000000000b87 .LASF25
     /tmp/ccgWpG8G.s:6087   .debug_str:0000000000000404 .LASF26
     /tmp/ccgWpG8G.s:6227   .debug_str:000000000000082c .LASF27
     /tmp/ccgWpG8G.s:6217   .debug_str:00000000000007d4 .LASF29
     /tmp/ccgWpG8G.s:6103   .debug_str:0000000000000469 .LASF28
     /tmp/ccgWpG8G.s:5993   .debug_str:0000000000000060 .LASF30
     /tmp/ccgWpG8G.s:6053   .debug_str:000000000000031f .LASF31
     /tmp/ccgWpG8G.s:6201   .debug_str:0000000000000740 .LASF32
     /tmp/ccgWpG8G.s:6169   .debug_str:0000000000000661 .LASF33
     /tmp/ccgWpG8G.s:6077   .debug_str:00000000000003c5 .LASF34
     /tmp/ccgWpG8G.s:6431   .debug_str:0000000000000d33 .LASF35
     /tmp/ccgWpG8G.s:6015   .debug_str:0000000000000127 .LASF37
     /tmp/ccgWpG8G.s:6263   .debug_str:0000000000000929 .LASF36
     /tmp/ccgWpG8G.s:6021   .debug_str:0000000000000155 .LASF38
     /tmp/ccgWpG8G.s:6317   .debug_str:0000000000000a90 .LASF39
     /tmp/ccgWpG8G.s:6109   .debug_str:00000000000004a2 .LASF40
     /tmp/ccgWpG8G.s:6163   .debug_str:000000000000063a .LASF41
     /tmp/ccgWpG8G.s:6415   .debug_str:0000000000000cc9 .LASF42
     /tmp/ccgWpG8G.s:6387   .debug_str:0000000000000c49 .LASF45
     /tmp/ccgWpG8G.s:6379   .debug_str:0000000000000c07 .LASF47
     /tmp/ccgWpG8G.s:6287   .debug_str:00000000000009ac .LASF43
     /tmp/ccgWpG8G.s:6241   .debug_str:000000000000088a .LASF44
     /tmp/ccgWpG8G.s:6271   .debug_str:0000000000000957 .LASF46
     /tmp/ccgWpG8G.s:6273   .debug_str:000000000000095e .LASF48
     /tmp/ccgWpG8G.s:6237   .debug_str:000000000000086f .LASF49
     /tmp/ccgWpG8G.s:6181   .debug_str:00000000000006d7 .LASF50
     /tmp/ccgWpG8G.s:6417   .debug_str:0000000000000ce3 .LASF51
     /tmp/ccgWpG8G.s:6367   .debug_str:0000000000000bb1 .LASF52
     /tmp/ccgWpG8G.s:6235   .debug_str:0000000000000867 .LASF53
     /tmp/ccgWpG8G.s:6239   .debug_str:0000000000000876 .LASF54
     /tmp/ccgWpG8G.s:6223   .debug_str:0000000000000812 .LASF55
     /tmp/ccgWpG8G.s:6275   .debug_str:0000000000000971 .LASF56
     /tmp/ccgWpG8G.s:6459   .debug_str:0000000000000df5 .LASF57
     /tmp/ccgWpG8G.s:6167   .debug_str:000000000000064d .LASF58
     /tmp/ccgWpG8G.s:6337   .debug_str:0000000000000b2d .LASF59
     /tmp/ccgWpG8G.s:6311   .debug_str:0000000000000a6e .LASF60
     /tmp/ccgWpG8G.s:6313   .debug_str:0000000000000a81 .LASF61
     /tmp/ccgWpG8G.s:6063   .debug_str:000000000000035d .LASF62
     /tmp/ccgWpG8G.s:6099   .debug_str:0000000000000451 .LASF63
     /tmp/ccgWpG8G.s:6151   .debug_str:00000000000005e8 .LASF64
     /tmp/ccgWpG8G.s:6165   .debug_str:0000000000000647 .LASF65
     /tmp/ccgWpG8G.s:6091   .debug_str:0000000000000423 .LASF66
GAS LISTING /tmp/ccgWpG8G.s 			page 51


     /tmp/ccgWpG8G.s:6001   .debug_str:000000000000008d .LASF67
     /tmp/ccgWpG8G.s:6297   .debug_str:00000000000009e6 .LASF68
     /tmp/ccgWpG8G.s:6289   .debug_str:00000000000009b5 .LASF69
     /tmp/ccgWpG8G.s:6447   .debug_str:0000000000000d96 .LASF70
     /tmp/ccgWpG8G.s:6405   .debug_str:0000000000000c99 .LASF71
     /tmp/ccgWpG8G.s:6427   .debug_str:0000000000000d16 .LASF72
     /tmp/ccgWpG8G.s:6399   .debug_str:0000000000000c84 .LASF73
     /tmp/ccgWpG8G.s:6219   .debug_str:00000000000007ec .LASF74
     /tmp/ccgWpG8G.s:6145   .debug_str:00000000000005c2 .LASF75
     /tmp/ccgWpG8G.s:6153   .debug_str:00000000000005fa .LASF76
     /tmp/ccgWpG8G.s:6385   .debug_str:0000000000000c3a .LASF77
     /tmp/ccgWpG8G.s:6139   .debug_str:0000000000000585 .LASF78
     /tmp/ccgWpG8G.s:6261   .debug_str:0000000000000914 .LASF79
     /tmp/ccgWpG8G.s:6177   .debug_str:00000000000006a2 .LASF80
     /tmp/ccgWpG8G.s:6283   .debug_str:00000000000009a0 .LASF81
     /tmp/ccgWpG8G.s:5997   .debug_str:000000000000007e .LASF82
     /tmp/ccgWpG8G.s:6035   .debug_str:00000000000001e3 .LASF83
     /tmp/ccgWpG8G.s:6383   .debug_str:0000000000000c2e .LASF84
     /tmp/ccgWpG8G.s:6037   .debug_str:00000000000001f2 .LASF85
     /tmp/ccgWpG8G.s:6225   .debug_str:000000000000081a .LASF86
     /tmp/ccgWpG8G.s:6143   .debug_str:00000000000005af .LASF87
     /tmp/ccgWpG8G.s:6397   .debug_str:0000000000000c71 .LASF88
     /tmp/ccgWpG8G.s:6051   .debug_str:000000000000030b .LASF89
     /tmp/ccgWpG8G.s:6353   .debug_str:0000000000000b74 .LASF90
     /tmp/ccgWpG8G.s:6373   .debug_str:0000000000000bf2 .LASF92
     /tmp/ccgWpG8G.s:6391   .debug_str:0000000000000c58 .LASF95
     /tmp/ccgWpG8G.s:6183   .debug_str:00000000000006ea .LASF93
     /tmp/ccgWpG8G.s:6059   .debug_str:000000000000034f .LASF94
     /tmp/ccgWpG8G.s:6351   .debug_str:0000000000000b6e .LASF96
     /tmp/ccgWpG8G.s:6199   .debug_str:000000000000073b .LASF97
     /tmp/ccgWpG8G.s:6435   .debug_str:0000000000000d4a .LASF116
     /tmp/ccgWpG8G.s:6017   .debug_str:0000000000000142 .LASF99
     /tmp/ccgWpG8G.s:6075   .debug_str:00000000000003b3 .LASF101
     /tmp/ccgWpG8G.s:6161   .debug_str:0000000000000635 .LASF98
     /tmp/ccgWpG8G.s:6325   .debug_str:0000000000000ac9 .LASF103
     /tmp/ccgWpG8G.s:6187   .debug_str:00000000000006f8 .LASF100
     /tmp/ccgWpG8G.s:6209   .debug_str:0000000000000798 .LASF102
     /tmp/ccgWpG8G.s:6097   .debug_str:0000000000000443 .LASF104
     /tmp/ccgWpG8G.s:6429   .debug_str:0000000000000d2c .LASF105
     /tmp/ccgWpG8G.s:6031   .debug_str:00000000000001cb .LASF106
     /tmp/ccgWpG8G.s:6355   .debug_str:0000000000000b79 .LASF107
     /tmp/ccgWpG8G.s:6049   .debug_str:0000000000000305 .LASF108
     /tmp/ccgWpG8G.s:6327   .debug_str:0000000000000ade .LASF109
     /tmp/ccgWpG8G.s:6065   .debug_str:0000000000000370 .LASF110
     /tmp/ccgWpG8G.s:6039   .debug_str:0000000000000205 .LASF111
     /tmp/ccgWpG8G.s:6257   .debug_str:0000000000000907 .LASF112
     /tmp/ccgWpG8G.s:6185   .debug_str:00000000000006ef .LASF113
     /tmp/ccgWpG8G.s:6349   .debug_str:0000000000000b66 .LASF114
     /tmp/ccgWpG8G.s:6147   .debug_str:00000000000005cd .LASF115
     /tmp/ccgWpG8G.s:6231   .debug_str:0000000000000846 .LASF117
     /tmp/ccgWpG8G.s:6245   .debug_str:00000000000008a6 .LASF232
     /tmp/ccgWpG8G.s:6407   .debug_str:0000000000000ca3 .LASF118
     /tmp/ccgWpG8G.s:6445   .debug_str:0000000000000d8a .LASF119
     /tmp/ccgWpG8G.s:6439   .debug_str:0000000000000d69 .LASF120
     /tmp/ccgWpG8G.s:6365   .debug_str:0000000000000ba1 .LASF121
     /tmp/ccgWpG8G.s:6093   .debug_str:0000000000000435 .LASF122
     /tmp/ccgWpG8G.s:6013   .debug_str:0000000000000114 .LASF123
GAS LISTING /tmp/ccgWpG8G.s 			page 52


     /tmp/ccgWpG8G.s:6193   .debug_str:0000000000000719 .LASF124
     /tmp/ccgWpG8G.s:6249   .debug_str:00000000000008be .LASF125
     /tmp/ccgWpG8G.s:6357   .debug_str:0000000000000b7f .LASF126
     /tmp/ccgWpG8G.s:6409   .debug_str:0000000000000ca8 .LASF127
     /tmp/ccgWpG8G.s:6319   .debug_str:0000000000000a9e .LASF128
     /tmp/ccgWpG8G.s:6215   .debug_str:00000000000007c7 .LASF129
     /tmp/ccgWpG8G.s:6203   .debug_str:000000000000075e .LASF130
     /tmp/ccgWpG8G.s:6451   .debug_str:0000000000000dbe .LASF131
     /tmp/ccgWpG8G.s:6125   .debug_str:000000000000051e .LASF132
     /tmp/ccgWpG8G.s:6159   .debug_str:0000000000000625 .LASF133
     /tmp/ccgWpG8G.s:6171   .debug_str:0000000000000673 .LASF134
     /tmp/ccgWpG8G.s:6323   .debug_str:0000000000000ac0 .LASF135
     /tmp/ccgWpG8G.s:6089   .debug_str:0000000000000410 .LASF136
     /tmp/ccgWpG8G.s:6301   .debug_str:0000000000000a0a .LASF137
     /tmp/ccgWpG8G.s:6335   .debug_str:0000000000000b11 .LASF138
     /tmp/ccgWpG8G.s:6229   .debug_str:0000000000000837 .LASF139
     /tmp/ccgWpG8G.s:5987   .debug_str:0000000000000029 .LASF140
     /tmp/ccgWpG8G.s:6425   .debug_str:0000000000000d07 .LASF141
     /tmp/ccgWpG8G.s:6253   .debug_str:00000000000008da .LASF142
     /tmp/ccgWpG8G.s:6329   .debug_str:0000000000000ae6 .LASF143
     /tmp/ccgWpG8G.s:6269   .debug_str:000000000000094b .LASF144
     /tmp/ccgWpG8G.s:5983   .debug_str:000000000000000d .LASF145
     /tmp/ccgWpG8G.s:6433   .debug_str:0000000000000d3f .LASF146
     /tmp/ccgWpG8G.s:6315   .debug_str:0000000000000a88 .LASF175
     /tmp/ccgWpG8G.s:6369   .debug_str:0000000000000bc5 .LASF147
     /tmp/ccgWpG8G.s:6251   .debug_str:00000000000008ce .LASF148
     /tmp/ccgWpG8G.s:6081   .debug_str:00000000000003ea .LASF149
     /tmp/ccgWpG8G.s:6027   .debug_str:000000000000019c .LASF151
     /tmp/ccgWpG8G.s:6025   .debug_str:0000000000000187 .LASF150
     /tmp/ccgWpG8G.s:6047   .debug_str:00000000000002d9 .LASF152
     /tmp/ccgWpG8G.s:6455   .debug_str:0000000000000dd6 .LASF233
     /tmp/ccgWpG8G.s:6045   .debug_str:00000000000002c8 .LASF234
     /tmp/ccgWpG8G.s:5991   .debug_str:000000000000005b .LASF153
     /tmp/ccgWpG8G.s:6347   .debug_str:0000000000000b61 .LASF154
     /tmp/ccgWpG8G.s:6207   .debug_str:0000000000000790 .LASF155
     /tmp/ccgWpG8G.s:6079   .debug_str:00000000000003e4 .LASF156
     /tmp/ccgWpG8G.s:6377   .debug_str:0000000000000bff .LASF157
     /tmp/ccgWpG8G.s:6033   .debug_str:00000000000001d9 .LASF158
     /tmp/ccgWpG8G.s:6131   .debug_str:0000000000000547 .LASF159
     /tmp/ccgWpG8G.s:6005   .debug_str:00000000000000ac .LASF235
     /tmp/ccgWpG8G.s:6441   .debug_str:0000000000000d6f .LASF236
     /tmp/ccgWpG8G.s:6381   .debug_str:0000000000000c1c .LASF160
     /tmp/ccgWpG8G.s:6247   .debug_str:00000000000008ab .LASF161
     /tmp/ccgWpG8G.s:6361   .debug_str:0000000000000b94 .LASF162
     /tmp/ccgWpG8G.s:5989   .debug_str:0000000000000043 .LASF163
     /tmp/ccgWpG8G.s:6321   .debug_str:0000000000000aaf .LASF164
     /tmp/ccgWpG8G.s:6073   .debug_str:00000000000003a2 .LASF165
     /tmp/ccgWpG8G.s:6007   .debug_str:00000000000000c4 .LASF166
     /tmp/ccgWpG8G.s:6279   .debug_str:0000000000000990 .LASF167
     /tmp/ccgWpG8G.s:6137   .debug_str:0000000000000571 .LASF168
     /tmp/ccgWpG8G.s:6295   .debug_str:00000000000009da .LASF169
     /tmp/ccgWpG8G.s:6003   .debug_str:0000000000000098 .LASF170
     /tmp/ccgWpG8G.s:6095   .debug_str:000000000000043e .LASF171
     /tmp/ccgWpG8G.s:6129   .debug_str:0000000000000530 .LASF172
     /tmp/ccgWpG8G.s:6345   .debug_str:0000000000000b5a .LASF173
     /tmp/ccgWpG8G.s:6107   .debug_str:0000000000000489 .LASF174
     /tmp/ccgWpG8G.s:5985   .debug_str:000000000000001d .LASF176
GAS LISTING /tmp/ccgWpG8G.s 			page 53


     /tmp/ccgWpG8G.s:6299   .debug_str:00000000000009fe .LASF177
     /tmp/ccgWpG8G.s:6213   .debug_str:00000000000007b3 .LASF178
     /tmp/ccgWpG8G.s:6149   .debug_str:00000000000005d3 .LASF179
     /tmp/ccgWpG8G.s:6061   .debug_str:0000000000000354 .LASF180
     /tmp/ccgWpG8G.s:6067   .debug_str:000000000000037a .LASF181
     /tmp/ccgWpG8G.s:6233   .debug_str:000000000000085e .LASF182
     /tmp/ccgWpG8G.s:6305   .debug_str:0000000000000a39 .LASF183
     /tmp/ccgWpG8G.s:6191   .debug_str:0000000000000710 .LASF184
     /tmp/ccgWpG8G.s:6155   .debug_str:0000000000000612 .LASF185
     /tmp/ccgWpG8G.s:6457   .debug_str:0000000000000ddd .LASF186
     /tmp/ccgWpG8G.s:5995   .debug_str:0000000000000076 .LASF187
     /tmp/ccgWpG8G.s:6205   .debug_str:0000000000000776 .LASF188
     /tmp/ccgWpG8G.s:6449   .debug_str:0000000000000dae .LASF189
     /tmp/ccgWpG8G.s:6309   .debug_str:0000000000000a4b .LASF190
     /tmp/ccgWpG8G.s:6343   .debug_str:0000000000000b47 .LASF191
     /tmp/ccgWpG8G.s:6303   .debug_str:0000000000000a13 .LASF192
     /tmp/ccgWpG8G.s:5981   .debug_str:0000000000000000 .LASF193
     /tmp/ccgWpG8G.s:6011   .debug_str:00000000000000f0 .LASF194
     /tmp/ccgWpG8G.s:6419   .debug_str:0000000000000ceb .LASF195
     /tmp/ccgWpG8G.s:6221   .debug_str:0000000000000802 .LASF196
     /tmp/ccgWpG8G.s:6101   .debug_str:0000000000000457 .LASF197
     /tmp/ccgWpG8G.s:6115   .debug_str:00000000000004d2 .LASF198
     /tmp/ccgWpG8G.s:6041   .debug_str:000000000000020e .LASF199
     /tmp/ccgWpG8G.s:6009   .debug_str:00000000000000cd .LASF200
     /tmp/ccgWpG8G.s:1518   .text:00000000000005c4 .LFE30
     /tmp/ccgWpG8G.s:5384   .debug_loc:0000000000000000 .LLST15
     /tmp/ccgWpG8G.s:6333   .debug_str:0000000000000b0a .LASF201
     /tmp/ccgWpG8G.s:5423   .debug_loc:00000000000000bb .LLST16
     /tmp/ccgWpG8G.s:5933   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccgWpG8G.s:6211   .debug_str:00000000000007a9 .LASF202
     /tmp/ccgWpG8G.s:5438   .debug_loc:0000000000000104 .LLST17
     /tmp/ccgWpG8G.s:6363   .debug_str:0000000000000b9c .LASF203
     /tmp/ccgWpG8G.s:5481   .debug_loc:00000000000001d2 .LLST18
     /tmp/ccgWpG8G.s:649    .text:00000000000002ec .LBB111
     /tmp/ccgWpG8G.s:723    .text:0000000000000324 .LBE111
     /tmp/ccgWpG8G.s:5496   .debug_loc:000000000000021b .LLST21
     /tmp/ccgWpG8G.s:6411   .debug_str:0000000000000cb3 .LASF204
     /tmp/ccgWpG8G.s:5503   .debug_loc:000000000000023e .LLST22
     /tmp/ccgWpG8G.s:651    .text:00000000000002ec .LBB112
     /tmp/ccgWpG8G.s:667    .text:00000000000002f8 .LBE112
     /tmp/ccgWpG8G.s:669    .text:00000000000002f8 .LBB114
     /tmp/ccgWpG8G.s:685    .text:0000000000000304 .LBE114
     /tmp/ccgWpG8G.s:695    .text:0000000000000318 .LBB116
     /tmp/ccgWpG8G.s:706    .text:000000000000031c .LBE116
     /tmp/ccgWpG8G.s:5510   .debug_loc:0000000000000261 .LLST23
     /tmp/ccgWpG8G.s:708    .text:000000000000031c .LBB118
     /tmp/ccgWpG8G.s:722    .text:0000000000000324 .LBE118
     /tmp/ccgWpG8G.s:5517   .debug_loc:0000000000000284 .LLST24
     /tmp/ccgWpG8G.s:693    .text:0000000000000318 .LVL49
     /tmp/ccgWpG8G.s:1004   .text:00000000000003e8 .LBB210
     /tmp/ccgWpG8G.s:1030   .text:00000000000003fc .LBE210
     /tmp/ccgWpG8G.s:5524   .debug_loc:00000000000002a7 .LLST50
     /tmp/ccgWpG8G.s:6413   .debug_str:0000000000000cbb .LASF205
     /tmp/ccgWpG8G.s:5539   .debug_loc:00000000000002e1 .LLST51
     /tmp/ccgWpG8G.s:1020   .text:00000000000003f8 .LVL64
     /tmp/ccgWpG8G.s:1050   .text:0000000000000404 .LBB199
     /tmp/ccgWpG8G.s:1071   .text:0000000000000414 .LBE199
GAS LISTING /tmp/ccgWpG8G.s 			page 54


     /tmp/ccgWpG8G.s:6285   .debug_str:00000000000009a7 .LASF206
     /tmp/ccgWpG8G.s:5546   .debug_loc:0000000000000304 .LLST48
     /tmp/ccgWpG8G.s:6029   .debug_str:00000000000001c4 .LASF207
     /tmp/ccgWpG8G.s:5558   .debug_loc:000000000000033b .LLST49
     /tmp/ccgWpG8G.s:1063   .text:0000000000000410 .LVL68
     /tmp/ccgWpG8G.s:6267   .debug_str:000000000000093d .LASF208
     /tmp/ccgWpG8G.s:5565   .debug_loc:000000000000035e .LLST44
     /tmp/ccgWpG8G.s:5576   .debug_loc:0000000000000394 .LLST45
     /tmp/ccgWpG8G.s:6019   .debug_str:0000000000000148 .LASF209
     /tmp/ccgWpG8G.s:5587   .debug_loc:00000000000003ca .LLST46
     /tmp/ccgWpG8G.s:6119   .debug_str:0000000000000500 .LASF210
     /tmp/ccgWpG8G.s:5598   .debug_loc:0000000000000400 .LLST47
     /tmp/ccgWpG8G.s:1104   .text:0000000000000430 .LVL73
     /tmp/ccgWpG8G.s:1113   .text:000000000000044c .LVL74
     /tmp/ccgWpG8G.s:1483   .text:000000000000059c .LVL109
     /tmp/ccgWpG8G.s:1141   .text:0000000000000464 .LBB173
     /tmp/ccgWpG8G.s:1186   .text:000000000000048c .LBE173
     /tmp/ccgWpG8G.s:5605   .debug_loc:0000000000000423 .LLST42
     /tmp/ccgWpG8G.s:1143   .text:0000000000000464 .LBB174
     /tmp/ccgWpG8G.s:1160   .text:0000000000000470 .LBE174
     /tmp/ccgWpG8G.s:1171   .text:0000000000000484 .LBB176
     /tmp/ccgWpG8G.s:1185   .text:000000000000048c .LBE176
     /tmp/ccgWpG8G.s:5612   .debug_loc:0000000000000446 .LLST43
     /tmp/ccgWpG8G.s:1169   .text:0000000000000484 .LVL78
     /tmp/ccgWpG8G.s:5619   .debug_loc:0000000000000469 .LLST38
     /tmp/ccgWpG8G.s:1197   .text:000000000000049c .LBB159
     /tmp/ccgWpG8G.s:1213   .text:00000000000004a8 .LBE159
     /tmp/ccgWpG8G.s:1241   .text:00000000000004c0 .LBB161
     /tmp/ccgWpG8G.s:1249   .text:00000000000004c8 .LBE161
     /tmp/ccgWpG8G.s:5626   .debug_loc:000000000000048c .LLST39
     /tmp/ccgWpG8G.s:5634   .debug_loc:00000000000004b0 .LLST40
     /tmp/ccgWpG8G.s:1255   .text:00000000000004d0 .LBB163
     /tmp/ccgWpG8G.s:1269   .text:00000000000004d8 .LBE163
     /tmp/ccgWpG8G.s:5641   .debug_loc:00000000000004d3 .LLST41
     /tmp/ccgWpG8G.s:1253   .text:00000000000004d0 .LVL84
     /tmp/ccgWpG8G.s:1283   .text:00000000000004e0 .LBB145
     /tmp/ccgWpG8G.s:1357   .text:0000000000000524 .LBE145
     /tmp/ccgWpG8G.s:6259   .debug_str:000000000000090f .LASF211
     /tmp/ccgWpG8G.s:5648   .debug_loc:00000000000004f6 .LLST33
     /tmp/ccgWpG8G.s:5655   .debug_loc:0000000000000519 .LLST34
     /tmp/ccgWpG8G.s:1294   .text:00000000000004e4 .LBB146
     /tmp/ccgWpG8G.s:1311   .text:00000000000004f0 .LBE146
     /tmp/ccgWpG8G.s:1321   .text:0000000000000508 .LBB148
     /tmp/ccgWpG8G.s:1328   .text:000000000000050c .LBE148
     /tmp/ccgWpG8G.s:5662   .debug_loc:000000000000053c .LLST35
     /tmp/ccgWpG8G.s:5669   .debug_loc:000000000000055f .LLST36
     /tmp/ccgWpG8G.s:1338   .text:000000000000051c .LBB150
     /tmp/ccgWpG8G.s:1349   .text:0000000000000520 .LBE150
     /tmp/ccgWpG8G.s:5676   .debug_loc:0000000000000582 .LLST37
     /tmp/ccgWpG8G.s:1332   .text:0000000000000514 .LVL92
     /tmp/ccgWpG8G.s:1336   .text:000000000000051c .LVL93
     /tmp/ccgWpG8G.s:5683   .debug_loc:00000000000005a5 .LLST30
     /tmp/ccgWpG8G.s:6175   .debug_str:0000000000000692 .LASF212
     /tmp/ccgWpG8G.s:5694   .debug_loc:00000000000005db .LLST31
     /tmp/ccgWpG8G.s:6443   .debug_str:0000000000000d83 .LASF213
     /tmp/ccgWpG8G.s:5705   .debug_loc:0000000000000611 .LLST32
     /tmp/ccgWpG8G.s:1383   .text:000000000000053c .LVL98
GAS LISTING /tmp/ccgWpG8G.s 			page 55


     /tmp/ccgWpG8G.s:1390   .text:000000000000054c .LVL100
     /tmp/ccgWpG8G.s:1501   .text:00000000000005b8 .LVL112
     /tmp/ccgWpG8G.s:1418   .text:0000000000000564 .LBB135
     /tmp/ccgWpG8G.s:1440   .text:0000000000000574 .LBE135
     /tmp/ccgWpG8G.s:6401   .debug_str:0000000000000c8e .LASF214
     /tmp/ccgWpG8G.s:5712   .debug_loc:0000000000000634 .LLST28
     /tmp/ccgWpG8G.s:5719   .debug_loc:0000000000000657 .LLST29
     /tmp/ccgWpG8G.s:1432   .text:0000000000000570 .LVL103
     /tmp/ccgWpG8G.s:1445   .text:0000000000000578 .LBB133
     /tmp/ccgWpG8G.s:1467   .text:0000000000000588 .LBE133
     /tmp/ccgWpG8G.s:5726   .debug_loc:000000000000067a .LLST26
     /tmp/ccgWpG8G.s:5733   .debug_loc:000000000000069d .LLST27
     /tmp/ccgWpG8G.s:1458   .text:0000000000000584 .LVL106
     /tmp/ccgWpG8G.s:963    .text:00000000000003c0 .LBB132
     /tmp/ccgWpG8G.s:991    .text:00000000000003e4 .LBE132
     /tmp/ccgWpG8G.s:5740   .debug_loc:00000000000006c0 .LLST25
     /tmp/ccgWpG8G.s:979    .text:00000000000003d4 .LVL59
     /tmp/ccgWpG8G.s:982    .text:00000000000003e0 .LVL60
     /tmp/ccgWpG8G.s:607    .text:00000000000002b0 .LBB106
     /tmp/ccgWpG8G.s:619    .text:00000000000002b8 .LBE106
     /tmp/ccgWpG8G.s:5747   .debug_loc:00000000000006e3 .LLST19
     /tmp/ccgWpG8G.s:637    .text:00000000000002e0 .LBB109
     /tmp/ccgWpG8G.s:644    .text:00000000000002e4 .LBE109
     /tmp/ccgWpG8G.s:5755   .debug_loc:0000000000000707 .LLST20
     /tmp/ccgWpG8G.s:775    .text:0000000000000360 .LBB120
     /tmp/ccgWpG8G.s:792    .text:000000000000036c .LBE120
     /tmp/ccgWpG8G.s:1033   .text:00000000000003fc .LBB222
     /tmp/ccgWpG8G.s:1047   .text:0000000000000404 .LBE222
     /tmp/ccgWpG8G.s:5762   .debug_loc:000000000000072a .LLST52
     /tmp/ccgWpG8G.s:630    .text:00000000000002d4 .LVL44
     /tmp/ccgWpG8G.s:578    .text:000000000000028c .LBB102
     /tmp/ccgWpG8G.s:594    .text:0000000000000298 .LBE102
     /tmp/ccgWpG8G.s:734    .text:0000000000000334 .LVL52
     /tmp/ccgWpG8G.s:1487   .text:00000000000005a8 .LVL110
     /tmp/ccgWpG8G.s:1505   .text:00000000000005c4 .LVL113
     /tmp/ccgWpG8G.s:393    .text:0000000000000198 .LFB29
     /tmp/ccgWpG8G.s:537    .text:0000000000000260 .LFE29
     /tmp/ccgWpG8G.s:5769   .debug_loc:000000000000074d .LLST9
     /tmp/ccgWpG8G.s:5783   .debug_loc:0000000000000786 .LLST10
     /tmp/ccgWpG8G.s:6375   .debug_str:0000000000000bf8 .LASF215
     /tmp/ccgWpG8G.s:5790   .debug_loc:00000000000007a9 .LLST11
     /tmp/ccgWpG8G.s:5812   .debug_loc:0000000000000808 .LLST12
     /tmp/ccgWpG8G.s:410    .text:00000000000001b0 .LBB96
     /tmp/ccgWpG8G.s:426    .text:00000000000001bc .LBE96
     /tmp/ccgWpG8G.s:428    .text:00000000000001bc .LBB98
     /tmp/ccgWpG8G.s:440    .text:00000000000001c4 .LBE98
     /tmp/ccgWpG8G.s:5834   .debug_loc:0000000000000849 .LLST13
     /tmp/ccgWpG8G.s:511    .text:0000000000000244 .LBB100
     /tmp/ccgWpG8G.s:522    .text:0000000000000248 .LBE100
     /tmp/ccgWpG8G.s:5842   .debug_loc:000000000000086d .LLST14
     /tmp/ccgWpG8G.s:495    .text:0000000000000228 .LVL35
     /tmp/ccgWpG8G.s:502    .text:0000000000000238 .LVL36
     /tmp/ccgWpG8G.s:285    .text:0000000000000128 .LFB28
     /tmp/ccgWpG8G.s:387    .text:0000000000000198 .LFE28
     /tmp/ccgWpG8G.s:6339   .debug_str:0000000000000b34 .LASF216
     /tmp/ccgWpG8G.s:5849   .debug_loc:0000000000000890 .LLST5
     /tmp/ccgWpG8G.s:5860   .debug_loc:00000000000008c6 .LLST6
GAS LISTING /tmp/ccgWpG8G.s 			page 56


     /tmp/ccgWpG8G.s:303    .text:0000000000000144 .LBB90
     /tmp/ccgWpG8G.s:319    .text:0000000000000150 .LBE90
     /tmp/ccgWpG8G.s:321    .text:0000000000000150 .LBB92
     /tmp/ccgWpG8G.s:334    .text:0000000000000158 .LBE92
     /tmp/ccgWpG8G.s:5867   .debug_loc:00000000000008e9 .LLST7
     /tmp/ccgWpG8G.s:360    .text:000000000000017c .LBB94
     /tmp/ccgWpG8G.s:371    .text:0000000000000180 .LBE94
     /tmp/ccgWpG8G.s:5875   .debug_loc:000000000000090d .LLST8
     /tmp/ccgWpG8G.s:344    .text:0000000000000168 .LVL19
     /tmp/ccgWpG8G.s:250    .text:0000000000000108 .LFB27
     /tmp/ccgWpG8G.s:279    .text:0000000000000128 .LFE27
     /tmp/ccgWpG8G.s:181    .text:00000000000000c0 .LFB26
     /tmp/ccgWpG8G.s:213    .text:00000000000000e0 .LFE26
     /tmp/ccgWpG8G.s:192    .text:00000000000000cc .LBB88
     /tmp/ccgWpG8G.s:204    .text:00000000000000d4 .LBE88
     /tmp/ccgWpG8G.s:5882   .debug_loc:0000000000000930 .LLST4
     /tmp/ccgWpG8G.s:143    .text:00000000000000a0 .LFB25
     /tmp/ccgWpG8G.s:175    .text:00000000000000c0 .LFE25
     /tmp/ccgWpG8G.s:154    .text:00000000000000ac .LBB86
     /tmp/ccgWpG8G.s:166    .text:00000000000000b4 .LBE86
     /tmp/ccgWpG8G.s:5890   .debug_loc:0000000000000954 .LLST3
     /tmp/ccgWpG8G.s:219    .text:00000000000000e0 .LFB24
     /tmp/ccgWpG8G.s:244    .text:0000000000000108 .LFE24
     /tmp/ccgWpG8G.s:233    .text:00000000000000f8 .LVL15
     /tmp/ccgWpG8G.s:113    .text:00000000000000a0 .LFE23
     /tmp/ccgWpG8G.s:5898   .debug_loc:0000000000000978 .LLST0
     /tmp/ccgWpG8G.s:32     .text:0000000000000020 .LBB82
     /tmp/ccgWpG8G.s:44     .text:0000000000000024 .LBE82
     /tmp/ccgWpG8G.s:75     .text:0000000000000064 .LBB84
     /tmp/ccgWpG8G.s:84     .text:000000000000006c .LBE84
     /tmp/ccgWpG8G.s:5905   .debug_loc:000000000000099b .LLST1
     /tmp/ccgWpG8G.s:5913   .debug_loc:00000000000009bf .LLST2
     /tmp/ccgWpG8G.s:50     .text:0000000000000030 .LVL2
     /tmp/ccgWpG8G.s:57     .text:0000000000000044 .LVL3
     /tmp/ccgWpG8G.s:64     .text:0000000000000050 .LVL4
     /tmp/ccgWpG8G.s:68     .text:0000000000000058 .LVL5
     /tmp/ccgWpG8G.s:106    .text:0000000000000094 .LVL9
     /tmp/ccgWpG8G.s:110    .text:00000000000000a0 .LVL10
     /tmp/ccgWpG8G.s:6117   .debug_str:00000000000004f9 .LASF237
     /tmp/ccgWpG8G.s:6195   .debug_str:000000000000071f .LASF220
     /tmp/ccgWpG8G.s:6085   .debug_str:00000000000003ff .LASF217
     /tmp/ccgWpG8G.s:6395   .debug_str:0000000000000c6c .LASF218
     /tmp/ccgWpG8G.s:6423   .debug_str:0000000000000d01 .LASF219
     /tmp/ccgWpG8G.s:6293   .debug_str:00000000000009ce .LASF221
     /tmp/ccgWpG8G.s:6123   .debug_str:0000000000000516 .LASF222
     /tmp/ccgWpG8G.s:6453   .debug_str:0000000000000dcb .LASF223
     /tmp/ccgWpG8G.s:6127   .debug_str:000000000000052a .LASF224
     /tmp/ccgWpG8G.s:6135   .debug_str:0000000000000561 .LASF225
     /tmp/ccgWpG8G.s:6437   .debug_str:0000000000000d5a .LASF238
     /tmp/ccgWpG8G.s:6023   .debug_str:000000000000016f .LASF239
     /tmp/ccgWpG8G.s:6083   .debug_str:00000000000003f8 .LASF226
     /tmp/ccgWpG8G.s:6389   .debug_str:0000000000000c52 .LASF227
     /tmp/ccgWpG8G.s:6243   .debug_str:000000000000089f .LASF228
     /tmp/ccgWpG8G.s:575    .text:000000000000028c .LVL40
     /tmp/ccgWpG8G.s:683    .text:0000000000000304 .LVL48
     /tmp/ccgWpG8G.s:719    .text:0000000000000324 .LVL51
     /tmp/ccgWpG8G.s:758    .text:000000000000035c .LVL53
GAS LISTING /tmp/ccgWpG8G.s 			page 57


     /tmp/ccgWpG8G.s:971    .text:00000000000003c4 .LVL58
     /tmp/ccgWpG8G.s:993    .text:00000000000003e8 .LVL61
     /tmp/ccgWpG8G.s:1027   .text:00000000000003fc .LVL65
     /tmp/ccgWpG8G.s:1044   .text:0000000000000404 .LVL66
     /tmp/ccgWpG8G.s:1158   .text:0000000000000470 .LVL77
     /tmp/ccgWpG8G.s:1182   .text:000000000000048c .LVL79
     /tmp/ccgWpG8G.s:1211   .text:00000000000004a8 .LVL81
     /tmp/ccgWpG8G.s:1266   .text:00000000000004d8 .LVL85
     /tmp/ccgWpG8G.s:1309   .text:00000000000004f0 .LVL89
     /tmp/ccgWpG8G.s:1359   .text:0000000000000528 .LVL95
     /tmp/ccgWpG8G.s:1386   .text:0000000000000540 .LVL99
     /tmp/ccgWpG8G.s:1414   .text:0000000000000564 .LVL101
     /tmp/ccgWpG8G.s:592    .text:0000000000000298 .LVL41
     /tmp/ccgWpG8G.s:784    .text:0000000000000364 .LVL55
     /tmp/ccgWpG8G.s:772    .text:0000000000000360 .LVL54
     /tmp/ccgWpG8G.s:1073   .text:0000000000000418 .LVL69
     /tmp/ccgWpG8G.s:1137   .text:0000000000000464 .LVL75
     /tmp/ccgWpG8G.s:1152   .text:0000000000000468 .LVL76
     /tmp/ccgWpG8G.s:1192   .text:0000000000000494 .LVL80
     /tmp/ccgWpG8G.s:1279   .text:00000000000004e0 .LVL86
     /tmp/ccgWpG8G.s:1303   .text:00000000000004e8 .LVL88
     /tmp/ccgWpG8G.s:1442   .text:0000000000000578 .LVL104
     /tmp/ccgWpG8G.s:790    .text:000000000000036c .LVL56
     /tmp/ccgWpG8G.s:796    .text:0000000000000370 .LVL57
     /tmp/ccgWpG8G.s:1472   .text:0000000000000590 .LVL108
     /tmp/ccgWpG8G.s:1491   .text:00000000000005ac .LVL111
     /tmp/ccgWpG8G.s:665    .text:00000000000002f8 .LVL47
     /tmp/ccgWpG8G.s:703    .text:000000000000031c .LVL50
     /tmp/ccgWpG8G.s:1012   .text:00000000000003ec .LVL62
     /tmp/ccgWpG8G.s:1018   .text:00000000000003f0 .LVL63
     /tmp/ccgWpG8G.s:1058   .text:0000000000000408 .LVL67
     /tmp/ccgWpG8G.s:1092   .text:0000000000000420 .LVL71
     /tmp/ccgWpG8G.s:1469   .text:000000000000058c .LVL107
     /tmp/ccgWpG8G.s:1098   .text:0000000000000424 .LVL72
     /tmp/ccgWpG8G.s:1086   .text:000000000000041c .LVL70
     /tmp/ccgWpG8G.s:1222   .text:00000000000004c0 .LVL82
     /tmp/ccgWpG8G.s:1247   .text:00000000000004c8 .LVL83
     /tmp/ccgWpG8G.s:1291   .text:00000000000004e4 .LVL87
     /tmp/ccgWpG8G.s:1320   .text:0000000000000508 .LVL90
     /tmp/ccgWpG8G.s:1326   .text:000000000000050c .LVL91
     /tmp/ccgWpG8G.s:1346   .text:0000000000000520 .LVL94
     /tmp/ccgWpG8G.s:1377   .text:0000000000000530 .LVL97
     /tmp/ccgWpG8G.s:1371   .text:000000000000052c .LVL96
     /tmp/ccgWpG8G.s:1426   .text:0000000000000568 .LVL102
     /tmp/ccgWpG8G.s:1453   .text:000000000000057c .LVL105
     /tmp/ccgWpG8G.s:606    .text:00000000000002b0 .LVL42
     /tmp/ccgWpG8G.s:616    .text:00000000000002b8 .LVL43
     /tmp/ccgWpG8G.s:636    .text:00000000000002e0 .LVL45
     /tmp/ccgWpG8G.s:642    .text:00000000000002e4 .LVL46
     /tmp/ccgWpG8G.s:396    .text:0000000000000198 .LVL25
     /tmp/ccgWpG8G.s:450    .text:00000000000001c8 .LVL28
     /tmp/ccgWpG8G.s:424    .text:00000000000001bc .LVL26
     /tmp/ccgWpG8G.s:506    .text:000000000000023c .LVL37
     /tmp/ccgWpG8G.s:454    .text:00000000000001cc .LVL29
     /tmp/ccgWpG8G.s:461    .text:00000000000001d4 .LVL30
     /tmp/ccgWpG8G.s:472    .text:00000000000001f8 .LVL31
     /tmp/ccgWpG8G.s:482    .text:000000000000020c .LVL33
GAS LISTING /tmp/ccgWpG8G.s 			page 58


     /tmp/ccgWpG8G.s:487    .text:0000000000000210 .LVL34
     /tmp/ccgWpG8G.s:478    .text:0000000000000204 .LVL32
     /tmp/ccgWpG8G.s:437    .text:00000000000001c4 .LVL27
     /tmp/ccgWpG8G.s:510    .text:0000000000000244 .LVL38
     /tmp/ccgWpG8G.s:519    .text:0000000000000248 .LVL39
     /tmp/ccgWpG8G.s:288    .text:0000000000000128 .LVL16
     /tmp/ccgWpG8G.s:330    .text:0000000000000158 .LVL18
     /tmp/ccgWpG8G.s:380    .text:000000000000018c .LVL24
     /tmp/ccgWpG8G.s:317    .text:0000000000000150 .LVL17
     /tmp/ccgWpG8G.s:355    .text:0000000000000174 .LVL21
     /tmp/ccgWpG8G.s:359    .text:000000000000017c .LVL22
     /tmp/ccgWpG8G.s:368    .text:0000000000000180 .LVL23
     /tmp/ccgWpG8G.s:191    .text:00000000000000cc .LVL13
     /tmp/ccgWpG8G.s:201    .text:00000000000000d4 .LVL14
     /tmp/ccgWpG8G.s:153    .text:00000000000000ac .LVL11
     /tmp/ccgWpG8G.s:163    .text:00000000000000b4 .LVL12
     /tmp/ccgWpG8G.s:94     .text:0000000000000078 .LVL8
     /tmp/ccgWpG8G.s:74     .text:0000000000000064 .LVL6
     /tmp/ccgWpG8G.s:82     .text:000000000000006c .LVL7
     /tmp/ccgWpG8G.s:1573   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccgWpG8G.s:603    .text:00000000000002b0 .LBB105
     /tmp/ccgWpG8G.s:725    .text:0000000000000324 .LBE105
     /tmp/ccgWpG8G.s:762    .text:000000000000035c .LBB226
     /tmp/ccgWpG8G.s:802    .text:0000000000000378 .LBE226
     /tmp/ccgWpG8G.s:806    .text:0000000000000378 .LBB227
     /tmp/ccgWpG8G.s:813    .text:0000000000000380 .LBE227
     /tmp/ccgWpG8G.s:817    .text:0000000000000380 .LBB228
     /tmp/ccgWpG8G.s:826    .text:0000000000000388 .LBE228
     /tmp/ccgWpG8G.s:830    .text:0000000000000388 .LBB229
     /tmp/ccgWpG8G.s:841    .text:0000000000000390 .LBE229
     /tmp/ccgWpG8G.s:845    .text:0000000000000390 .LBB230
     /tmp/ccgWpG8G.s:858    .text:0000000000000398 .LBE230
     /tmp/ccgWpG8G.s:862    .text:0000000000000398 .LBB231
     /tmp/ccgWpG8G.s:877    .text:00000000000003a0 .LBE231
     /tmp/ccgWpG8G.s:881    .text:00000000000003a0 .LBB232
     /tmp/ccgWpG8G.s:898    .text:00000000000003a8 .LBE232
     /tmp/ccgWpG8G.s:902    .text:00000000000003a8 .LBB233
     /tmp/ccgWpG8G.s:921    .text:00000000000003b0 .LBE233
     /tmp/ccgWpG8G.s:925    .text:00000000000003b0 .LBB234
     /tmp/ccgWpG8G.s:946    .text:00000000000003b8 .LBE234
     /tmp/ccgWpG8G.s:950    .text:00000000000003b8 .LBB235
     /tmp/ccgWpG8G.s:1229   .text:00000000000004c0 .LBE235
     /tmp/ccgWpG8G.s:1233   .text:00000000000004c0 .LBB236
     /tmp/ccgWpG8G.s:1515   .text:00000000000005c4 .LBE236
     /tmp/ccgWpG8G.s:1362   .text:0000000000000528 .LBB139
     /tmp/ccgWpG8G.s:1416   .text:0000000000000564 .LBE139
     /tmp/ccgWpG8G.s:1497   .text:00000000000005ac .LBB141
     /tmp/ccgWpG8G.s:1507   .text:00000000000005c4 .LBE141
     /tmp/ccgWpG8G.s:1188   .text:000000000000048c .LBB158
     /tmp/ccgWpG8G.s:1223   .text:00000000000004c0 .LBE158
     /tmp/ccgWpG8G.s:1239   .text:00000000000004c0 .LBB165
     /tmp/ccgWpG8G.s:1281   .text:00000000000004e0 .LBE165
     /tmp/ccgWpG8G.s:1076   .text:0000000000000418 .LBB187
     /tmp/ccgWpG8G.s:1139   .text:0000000000000464 .LBE187
     /tmp/ccgWpG8G.s:1479   .text:0000000000000590 .LBB190
     /tmp/ccgWpG8G.s:1492   .text:00000000000005ac .LBE190
     /tmp/ccgWpG8G.s:116    .gcc_except_table:0000000000000000 .LLSDA23
GAS LISTING /tmp/ccgWpG8G.s 			page 59


     /tmp/ccgWpG8G.s:1520   .gcc_except_table:0000000000000038 .LLSDA30

UNDEFINED SYMBOLS
_ZN5Riscv14supervisorTrapEv
_Znwm
_ZN6ThreadC1EPFvPvES0_
_ZN6Thread5startEv
_ZN9Scheduler3getEv
_ZN3PCB7runningE
_ZdlPv
_Unwind_Resume
__gxx_personality_v0
__putc
_ZN3PCB16timeSliceCounterE
_ZN12SleepPCBList13tryToWakePCBsEv
_ZN3PCB8dispatchEv
console_handler
_ZN10KSemaphoreD1Ev
_ZN10KSemaphoredlEPv
_Z7kmallocm
_Z5kfreePv
_ZN3PCBnwEm
_ZN3PCBC1EPFvPvES0_S0_m
_ZN12SleepPCBList17insertSleepingPCBEv
_ZN10KSemaphorenwEm
_ZN10KSemaphoreC1Ei
_ZN10KSemaphore4waitEv
_ZN10KSemaphore6signalEv
_ZN3PCBdlEPv
