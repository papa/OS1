GAS LISTING /tmp/cctEHc8V.s 			page 1


   1              		.file	"Riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv14myTestsWrapperEPv
   9              	_ZN5Riscv14myTestsWrapperEPv:
  10              	.LFB35:
  11              		.file 1 "src/Riscv.cpp"
   1:src/Riscv.cpp **** //
   2:src/Riscv.cpp **** // Created by os on 4/27/22.
   3:src/Riscv.cpp **** //
   4:src/Riscv.cpp **** 
   5:src/Riscv.cpp **** #include "../h/Riscv.hpp"
   6:src/Riscv.cpp **** #include "../h/MemoryAllocator.hpp"
   7:src/Riscv.cpp **** #include "../h/PCB.hpp"
   8:src/Riscv.cpp **** #include "../h/syscall_cpp.hpp"
   9:src/Riscv.cpp **** #include "../h/SleepPCBList.hpp"
  10:src/Riscv.cpp **** #include "../h/KConsole.hpp"
  11:src/Riscv.cpp **** #include "../h/Tests.hpp"
  12:src/Riscv.cpp **** #include "../test/userMain.hpp"
  13:src/Riscv.cpp **** 
  14:src/Riscv.cpp **** uint64 Riscv::totalTime = 0;
  15:src/Riscv.cpp **** bool Riscv::finishSystem = false;
  16:src/Riscv.cpp **** 
  17:src/Riscv.cpp **** void Riscv::initSystem()
  18:src/Riscv.cpp **** {
  19:src/Riscv.cpp ****     w_stvec((uint64)&Riscv::supervisorTrap);
  20:src/Riscv.cpp ****     PCB::initialize();
  21:src/Riscv.cpp ****     KConsole::initialize();
  22:src/Riscv.cpp **** }
  23:src/Riscv.cpp **** 
  24:src/Riscv.cpp **** void Riscv::endSystem()
  25:src/Riscv.cpp **** {
  26:src/Riscv.cpp ****     //todo
  27:src/Riscv.cpp ****     Riscv::disableInterrupts();
  28:src/Riscv.cpp **** }
  29:src/Riscv.cpp **** 
  30:src/Riscv.cpp **** void Riscv::enableInterrupts() {
  31:src/Riscv.cpp ****     ms_sstatus(Riscv::SSTATUS_SIE);
  32:src/Riscv.cpp **** }
  33:src/Riscv.cpp **** 
  34:src/Riscv.cpp **** void Riscv::disableInterrupts()
  35:src/Riscv.cpp **** {
  36:src/Riscv.cpp ****     mc_sstatus(Riscv::SSTATUS_SIE);
  37:src/Riscv.cpp **** }
  38:src/Riscv.cpp **** 
  39:src/Riscv.cpp **** void Riscv::popSppSpie()
  40:src/Riscv.cpp **** {
  41:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
  42:src/Riscv.cpp ****     __asm__ volatile ("sret");
  43:src/Riscv.cpp **** }
  44:src/Riscv.cpp **** 
  45:src/Riscv.cpp **** void Riscv::handleSupervisorTrap()
  46:src/Riscv.cpp **** {
  47:src/Riscv.cpp ****     __asm__ volatile("mv %0, a4" : "=r"(PCB::savedRegA4));
GAS LISTING /tmp/cctEHc8V.s 			page 2


  48:src/Riscv.cpp ****     __asm__ volatile("csrr %0, sscratch":"=r"(PCB::running->sscratch));
  49:src/Riscv.cpp **** 
  50:src/Riscv.cpp ****     uint64 scause = Riscv::r_scause();
  51:src/Riscv.cpp **** 
  52:src/Riscv.cpp ****     switch(scause)
  53:src/Riscv.cpp ****     {
  54:src/Riscv.cpp ****         case timerInterrupt:
  55:src/Riscv.cpp ****         {
  56:src/Riscv.cpp ****             uint64 volatile sepc = Riscv::r_sepc();
  57:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
  58:src/Riscv.cpp ****             mc_sip(Riscv::SIP_SSIP);
  59:src/Riscv.cpp ****             //trapPrintString("timerInterrupt\n");
  60:src/Riscv.cpp ****             //static uint64 total = 0;
  61:src/Riscv.cpp ****             totalTime++;
  62:src/Riscv.cpp ****             //trapPrintInt(totalTime);
  63:src/Riscv.cpp **** 
  64:src/Riscv.cpp ****             PCB::timeSliceCounter++;
  65:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
  66:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
  67:src/Riscv.cpp ****             {
  68:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
  69:src/Riscv.cpp ****                 PCB::dispatch();
  70:src/Riscv.cpp ****             }
  71:src/Riscv.cpp **** 
  72:src/Riscv.cpp ****             Riscv::w_sstatus(sstatus);
  73:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
  74:src/Riscv.cpp ****             changePrivMode();
  75:src/Riscv.cpp ****             break;
  76:src/Riscv.cpp ****         }
  77:src/Riscv.cpp ****         case hwInterrupt:
  78:src/Riscv.cpp ****         {
  79:src/Riscv.cpp ****             uint64 x = CONSOLE_STATUS;
  80:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0"::"r"(x));
  81:src/Riscv.cpp ****             __asm__ volatile("lb a1, 0(a0)");
  82:src/Riscv.cpp ****             uint64 operation;
  83:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" :  "=r"(operation));
  84:src/Riscv.cpp ****             if(operation & KConsole::STATUS_READ_MASK)
  85:src/Riscv.cpp ****             {
  86:src/Riscv.cpp ****                 x = CONSOLE_TX_DATA;
  87:src/Riscv.cpp ****                 __asm__ volatile("mv a0, %0"::"r"(x));
  88:src/Riscv.cpp ****                 __asm__ volatile("lb a1,0(a0)");
  89:src/Riscv.cpp ****                 char c;
  90:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" :  "=r"(c));
  91:src/Riscv.cpp ****                 if(KConsole::pendingGetc > 0)
  92:src/Riscv.cpp ****                 {
  93:src/Riscv.cpp ****                     KConsole::pendingGetc--;
  94:src/Riscv.cpp ****                     KConsole::putCharacterInput(c);
  95:src/Riscv.cpp ****                     //KConsole::putCharacterOutput(c);
  96:src/Riscv.cpp ****                 }
  97:src/Riscv.cpp ****             }
  98:src/Riscv.cpp **** 
  99:src/Riscv.cpp ****             plic_complete(plic_claim());
 100:src/Riscv.cpp **** 
 101:src/Riscv.cpp ****             break;
 102:src/Riscv.cpp ****         }
 103:src/Riscv.cpp ****         case operationInterrupt: // todo
 104:src/Riscv.cpp ****         {
GAS LISTING /tmp/cctEHc8V.s 			page 3


 105:src/Riscv.cpp ****             trapPrintString("operation interrupt\n");
 106:src/Riscv.cpp ****             thread_exit();
 107:src/Riscv.cpp ****             break;
 108:src/Riscv.cpp ****         }
 109:src/Riscv.cpp ****         case addrReadInterrupt: // todo
 110:src/Riscv.cpp ****         {
 111:src/Riscv.cpp ****             trapPrintString("read interrupt\n");
 112:src/Riscv.cpp ****             thread_exit();
 113:src/Riscv.cpp ****             break;
 114:src/Riscv.cpp ****         }
 115:src/Riscv.cpp ****         case addrWriteInterrupt: // todo
 116:src/Riscv.cpp ****         {
 117:src/Riscv.cpp ****             trapPrintString("write interrupt\n");
 118:src/Riscv.cpp ****             thread_exit();
 119:src/Riscv.cpp ****             break;
 120:src/Riscv.cpp ****         }
 121:src/Riscv.cpp ****         case ecallSystemInterupt:
 122:src/Riscv.cpp ****         case ecallUserInterrupt:
 123:src/Riscv.cpp ****         {
 124:src/Riscv.cpp ****             uint64 operation;
 125:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
 126:src/Riscv.cpp **** 
 127:src/Riscv.cpp ****             uint64 volatile sepc = Riscv::r_sepc() + 4;
 128:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 129:src/Riscv.cpp **** 
 130:src/Riscv.cpp ****             switch(operation)
 131:src/Riscv.cpp ****             {
 132:src/Riscv.cpp ****                 case MemoryAllocator::MEM_ALLOC:
 133:src/Riscv.cpp ****                     MemoryAllocator::memAllocHandler();
 134:src/Riscv.cpp ****                     break;
 135:src/Riscv.cpp ****                 case MemoryAllocator::MEM_FREE:
 136:src/Riscv.cpp ****                     MemoryAllocator::memFreeHandler();
 137:src/Riscv.cpp ****                     break;
 138:src/Riscv.cpp ****                 case PCB::THREAD_MAKE_PCB:
 139:src/Riscv.cpp ****                     PCB::threadMakePCBHandler();
 140:src/Riscv.cpp ****                     break;
 141:src/Riscv.cpp ****                 case PCB::THREAD_CREATE:
 142:src/Riscv.cpp ****                     PCB::threadCreateHandler();
 143:src/Riscv.cpp ****                     break;
 144:src/Riscv.cpp ****                 case PCB::THREAD_START:
 145:src/Riscv.cpp ****                     PCB::threadStartHandler();
 146:src/Riscv.cpp ****                     break;
 147:src/Riscv.cpp ****                 case PCB::THREAD_DISPATCH:
 148:src/Riscv.cpp ****                     PCB::threadDispatchHandler();
 149:src/Riscv.cpp ****                     break;
 150:src/Riscv.cpp ****                 case PCB::THREAD_EXIT:
 151:src/Riscv.cpp ****                     PCB::threadExitHandler();
 152:src/Riscv.cpp ****                     break;
 153:src/Riscv.cpp ****                 case PCB::TIME_SLEEP:
 154:src/Riscv.cpp ****                     PCB::threadSleepHandler();
 155:src/Riscv.cpp ****                     break;
 156:src/Riscv.cpp ****                 case KSemaphore::SEM_OPEN:
 157:src/Riscv.cpp ****                     KSemaphore::semOpenHandler();
 158:src/Riscv.cpp ****                     break;
 159:src/Riscv.cpp ****                 case KSemaphore::SEM_WAIT:
 160:src/Riscv.cpp ****                     KSemaphore::semWaitHandler();
 161:src/Riscv.cpp ****                     break;
GAS LISTING /tmp/cctEHc8V.s 			page 4


 162:src/Riscv.cpp ****                 case KSemaphore::SEM_SIGNAL:
 163:src/Riscv.cpp ****                     KSemaphore::semSignalHandler();
 164:src/Riscv.cpp ****                     break;
 165:src/Riscv.cpp ****                 case KSemaphore::SEM_CLOSE:
 166:src/Riscv.cpp ****                     KSemaphore::semCloseHandler();
 167:src/Riscv.cpp ****                     break;
 168:src/Riscv.cpp ****                 case KConsole::CONSOLE_GETC:
 169:src/Riscv.cpp ****                     KConsole::getcHandler();
 170:src/Riscv.cpp ****                     break;
 171:src/Riscv.cpp ****                 case KConsole::CONSOLE_PUTC:
 172:src/Riscv.cpp ****                     KConsole::putcHandler();
 173:src/Riscv.cpp ****                     break;
 174:src/Riscv.cpp ****                 case KConsole::CONSOLE_GET_CHAR:
 175:src/Riscv.cpp ****                     KConsole::getCharHandler();
 176:src/Riscv.cpp ****                     break;
 177:src/Riscv.cpp ****             }
 178:src/Riscv.cpp **** 
 179:src/Riscv.cpp ****             Riscv::w_sstatus(sstatus);
 180:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 181:src/Riscv.cpp ****             changePrivMode();
 182:src/Riscv.cpp ****             break;
 183:src/Riscv.cpp ****         }
 184:src/Riscv.cpp ****     }
 185:src/Riscv.cpp **** }
 186:src/Riscv.cpp **** 
 187:src/Riscv.cpp **** void Riscv::kernelMain()
 188:src/Riscv.cpp **** {
 189:src/Riscv.cpp ****     initSystem();
 190:src/Riscv.cpp **** 
 191:src/Riscv.cpp ****     //PCB* userPCB = new PCB(&Riscv::userMainWrapper, 0, kmalloc(DEFAULT_STACK_SIZE), DEFAULT_TIME_
 192:src/Riscv.cpp ****     PCB* userPCB = new PCB(&Riscv::myTestsWrapper, 0, kmalloc(DEFAULT_STACK_SIZE), DEFAULT_TIME_SLI
 193:src/Riscv.cpp ****     userPCB->start();
 194:src/Riscv.cpp **** 
 195:src/Riscv.cpp ****     enableInterrupts();
 196:src/Riscv.cpp **** 
 197:src/Riscv.cpp ****     while(!userPCB->isFinished())
 198:src/Riscv.cpp ****     {
 199:src/Riscv.cpp ****         thread_dispatch();
 200:src/Riscv.cpp ****     }
 201:src/Riscv.cpp **** 
 202:src/Riscv.cpp ****     finishSystem = true;
 203:src/Riscv.cpp ****     ::printString("End...\n");
 204:src/Riscv.cpp ****     while(!PCB::consolePCB->isFinished())
 205:src/Riscv.cpp ****     {
 206:src/Riscv.cpp ****         thread_dispatch();
 207:src/Riscv.cpp ****     }
 208:src/Riscv.cpp ****     disableInterrupts();
 209:src/Riscv.cpp ****     endSystem();
 210:src/Riscv.cpp **** }
 211:src/Riscv.cpp **** 
 212:src/Riscv.cpp **** void Riscv::userMainWrapper(void* )
 213:src/Riscv.cpp **** {
 214:src/Riscv.cpp ****     userMain();
 215:src/Riscv.cpp **** }
 216:src/Riscv.cpp **** 
 217:src/Riscv.cpp **** void Riscv::myTestsWrapper(void* p)
 218:src/Riscv.cpp **** {
GAS LISTING /tmp/cctEHc8V.s 			page 5


  12              		.loc 1 218 1
  13              		.cfi_startproc
  14              	.LVL0:
  15 0000 130101FF 		addi	sp,sp,-16
  16              		.cfi_def_cfa_offset 16
  17 0004 23341100 		sd	ra,8(sp)
  18 0008 23308100 		sd	s0,0(sp)
  19              		.cfi_offset 1, -8
  20              		.cfi_offset 8, -16
  21 000c 13040101 		addi	s0,sp,16
  22              		.cfi_def_cfa 8, 0
 219:src/Riscv.cpp ****     myTests();
  23              		.loc 1 219 5
  24              		.loc 1 219 12 is_stmt 0
  25 0010 97000000 		call	_Z7myTestsv@plt
  25      E7800000 
  26              	.LVL1:
 220:src/Riscv.cpp **** }
  27              		.loc 1 220 1
  28 0018 83308100 		ld	ra,8(sp)
  29              		.cfi_restore 1
  30 001c 03340100 		ld	s0,0(sp)
  31              		.cfi_restore 8
  32              		.cfi_def_cfa 2, 16
  33 0020 13010101 		addi	sp,sp,16
  34              		.cfi_def_cfa_offset 0
  35 0024 67800000 		jr	ra
  36              		.cfi_endproc
  37              	.LFE35:
  39              		.align	2
  40              		.globl	_ZN5Riscv10initSystemEv
  42              	_ZN5Riscv10initSystemEv:
  43              	.LFB27:
  18:src/Riscv.cpp ****     w_stvec((uint64)&Riscv::supervisorTrap);
  44              		.loc 1 18 1 is_stmt 1
  45              		.cfi_startproc
  46 0028 130101FF 		addi	sp,sp,-16
  47              		.cfi_def_cfa_offset 16
  48 002c 23341100 		sd	ra,8(sp)
  49 0030 23308100 		sd	s0,0(sp)
  50              		.cfi_offset 1, -8
  51              		.cfi_offset 8, -16
  52 0034 13040101 		addi	s0,sp,16
  53              		.cfi_def_cfa 8, 0
  19:src/Riscv.cpp ****     PCB::initialize();
  54              		.loc 1 19 5
  19:src/Riscv.cpp ****     PCB::initialize();
  55              		.loc 1 19 12 is_stmt 0
  56 0038 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
  56      83B70700 
  57              	.LVL2:
  58              	.LBB41:
  59              	.LBB42:
  60              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 4/27/22.
   3:src/../h/Riscv.hpp **** //
GAS LISTING /tmp/cctEHc8V.s 			page 6


   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_0_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_0_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** #include "../test/printing.hpp"
  10:src/../h/Riscv.hpp **** 
  11:src/../h/Riscv.hpp **** class Riscv
  12:src/../h/Riscv.hpp **** {
  13:src/../h/Riscv.hpp **** public:
  14:src/../h/Riscv.hpp ****     static void kernelMain();
  15:src/../h/Riscv.hpp **** 
  16:src/../h/Riscv.hpp ****     static void changePrivMode();
  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp ****     static void initSystem();
  19:src/../h/Riscv.hpp ****     static void endSystem();
  20:src/../h/Riscv.hpp **** 
  21:src/../h/Riscv.hpp ****     static void userMainWrapper(void* p);
  22:src/../h/Riscv.hpp **** 
  23:src/../h/Riscv.hpp ****     static void enableInterrupts();
  24:src/../h/Riscv.hpp **** 
  25:src/../h/Riscv.hpp ****     static void disableTimerInterrupts();
  26:src/../h/Riscv.hpp **** 
  27:src/../h/Riscv.hpp ****     static void disableInterrupts();
  28:src/../h/Riscv.hpp **** 
  29:src/../h/Riscv.hpp ****     static void idleRiscv(void* arg);
  30:src/../h/Riscv.hpp **** 
  31:src/../h/Riscv.hpp ****     static void pushRegisters();
  32:src/../h/Riscv.hpp ****     static void popRegisters();
  33:src/../h/Riscv.hpp **** 
  34:src/../h/Riscv.hpp ****     static uint64 r_scause();
  35:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  36:src/../h/Riscv.hpp **** 
  37:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  38:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
  39:src/../h/Riscv.hpp **** 
  40:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  41:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  42:src/../h/Riscv.hpp **** 
  43:src/../h/Riscv.hpp ****     static uint64 r_stval();
  44:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  45:src/../h/Riscv.hpp **** 
  46:src/../h/Riscv.hpp ****     static bool finishSystem;
  47:src/../h/Riscv.hpp **** 
  48:src/../h/Riscv.hpp ****     enum BitMaskSip
  49:src/../h/Riscv.hpp ****     {
  50:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  51:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  52:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9),
  53:src/../h/Riscv.hpp ****     };
  54:src/../h/Riscv.hpp **** 
  55:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  56:src/../h/Riscv.hpp **** 
  57:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  58:src/../h/Riscv.hpp **** 
  59:src/../h/Riscv.hpp ****     static uint64 r_sip();
  60:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/cctEHc8V.s 			page 7


  61:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  62:src/../h/Riscv.hpp **** 
  63:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  64:src/../h/Riscv.hpp ****     {
  65:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  66:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  67:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  68:src/../h/Riscv.hpp ****     };
  69:src/../h/Riscv.hpp **** 
  70:src/../h/Riscv.hpp ****     static void w_a0_sscratch();
  71:src/../h/Riscv.hpp **** 
  72:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  73:src/../h/Riscv.hpp **** 
  74:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  75:src/../h/Riscv.hpp **** 
  76:src/../h/Riscv.hpp ****     static void mc_sie(uint64 mask);
  77:src/../h/Riscv.hpp **** 
  78:src/../h/Riscv.hpp ****     static void ms_sie(uint64 mask);
  79:src/../h/Riscv.hpp **** 
  80:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  81:src/../h/Riscv.hpp **** 
  82:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  83:src/../h/Riscv.hpp **** 
  84:src/../h/Riscv.hpp ****     static uint64 r_sie();
  85:src/../h/Riscv.hpp ****     static void w_sie(uint64 sie);
  86:src/../h/Riscv.hpp ****     static void popSppSpie();
  87:src/../h/Riscv.hpp **** 
  88:src/../h/Riscv.hpp ****     static void supervisorTrap();
  89:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  90:src/../h/Riscv.hpp **** 
  91:src/../h/Riscv.hpp ****     static void myTestsWrapper(void* );
  92:src/../h/Riscv.hpp **** 
  93:src/../h/Riscv.hpp ****     static const uint64 bntOne = 1UL << 63;;
  94:src/../h/Riscv.hpp ****     static const uint64 bntZero = 0UL;
  95:src/../h/Riscv.hpp ****     static const uint64 timerInterrupt = bntOne + 1UL;
  96:src/../h/Riscv.hpp ****     static const uint64 hwInterrupt = bntOne + 9UL;
  97:src/../h/Riscv.hpp ****     static const uint64 operationInterrupt = bntZero + 2UL;
  98:src/../h/Riscv.hpp ****     static const uint64 addrReadInterrupt = bntZero + 5UL;
  99:src/../h/Riscv.hpp ****     static const uint64 addrWriteInterrupt = bntZero + 7UL;
 100:src/../h/Riscv.hpp ****     static const uint64 ecallUserInterrupt = bntZero + 8UL;
 101:src/../h/Riscv.hpp ****     static const uint64 ecallSystemInterupt = bntZero + 9UL;
 102:src/../h/Riscv.hpp **** 
 103:src/../h/Riscv.hpp ****     static uint64 totalTime;
 104:src/../h/Riscv.hpp **** };
 105:src/../h/Riscv.hpp **** 
 106:src/../h/Riscv.hpp **** inline void Riscv::mc_sie(uint64 mask)
 107:src/../h/Riscv.hpp **** {
 108:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sie, %0" : :"r"(mask));
 109:src/../h/Riscv.hpp **** }
 110:src/../h/Riscv.hpp **** 
 111:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause() {
 112:src/../h/Riscv.hpp ****     uint64 volatile scause;
 113:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
 114:src/../h/Riscv.hpp ****     return scause;
 115:src/../h/Riscv.hpp **** }
 116:src/../h/Riscv.hpp **** 
 117:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
GAS LISTING /tmp/cctEHc8V.s 			page 8


 118:src/../h/Riscv.hpp ****     __asm__ volatile("csrw scause, %0" : :"r"(scause));
 119:src/../h/Riscv.hpp **** }
 120:src/../h/Riscv.hpp **** 
 121:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc() {
 122:src/../h/Riscv.hpp ****     uint64 volatile sepc;
 123:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 124:src/../h/Riscv.hpp ****     return sepc;
 125:src/../h/Riscv.hpp **** }
 126:src/../h/Riscv.hpp **** 
 127:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
 128:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sepc, %0" : :"r"(sepc));
 129:src/../h/Riscv.hpp **** }
 130:src/../h/Riscv.hpp **** 
 131:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec() {
 132:src/../h/Riscv.hpp ****     uint64 volatile stvec;
 133:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, stvec" : "=r"(stvec));
 134:src/../h/Riscv.hpp ****     return stvec;
 135:src/../h/Riscv.hpp **** }
 136:src/../h/Riscv.hpp **** 
 137:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 138:src/../h/Riscv.hpp ****     __asm__ volatile("csrw stvec, %0" : :"r"(stvec));
  61              		.loc 2 138 5 is_stmt 1
  62              		.loc 2 138 53 is_stmt 0
  63              	#APP
  64              	# 138 "src/../h/Riscv.hpp" 1
 139              	}
  65              		csrw stvec, a5
  66              	# 0 "" 2
  67              	.LVL3:
  68              	#NO_APP
  69              	.LBE42:
  70              	.LBE41:
  20:src/Riscv.cpp ****     KConsole::initialize();
  71              		.loc 1 20 5 is_stmt 1
  20:src/Riscv.cpp ****     KConsole::initialize();
  72              		.loc 1 20 20 is_stmt 0
  73 0044 97000000 		call	_ZN3PCB10initializeEv@plt
  73      E7800000 
  74              	.LVL4:
  21:src/Riscv.cpp **** }
  75              		.loc 1 21 5 is_stmt 1
  21:src/Riscv.cpp **** }
  76              		.loc 1 21 25 is_stmt 0
  77 004c 97000000 		call	_ZN8KConsole10initializeEv@plt
  77      E7800000 
  78              	.LVL5:
  22:src/Riscv.cpp **** 
  79              		.loc 1 22 1
  80 0054 83308100 		ld	ra,8(sp)
  81              		.cfi_restore 1
  82 0058 03340100 		ld	s0,0(sp)
  83              		.cfi_restore 8
  84              		.cfi_def_cfa 2, 16
  85 005c 13010101 		addi	sp,sp,16
  86              		.cfi_def_cfa_offset 0
  87 0060 67800000 		jr	ra
  88              		.cfi_endproc
GAS LISTING /tmp/cctEHc8V.s 			page 9


  89              	.LFE27:
  91              		.align	2
  92              		.globl	_ZN5Riscv16enableInterruptsEv
  94              	_ZN5Riscv16enableInterruptsEv:
  95              	.LFB29:
  30:src/Riscv.cpp ****     ms_sstatus(Riscv::SSTATUS_SIE);
  96              		.loc 1 30 32 is_stmt 1
  97              		.cfi_startproc
  98 0064 130101FF 		addi	sp,sp,-16
  99              		.cfi_def_cfa_offset 16
 100 0068 23348100 		sd	s0,8(sp)
 101              		.cfi_offset 8, -8
 102 006c 13040101 		addi	s0,sp,16
 103              		.cfi_def_cfa 8, 0
  31:src/Riscv.cpp **** }
 104              		.loc 1 31 5
 105              	.LVL6:
 106              	.LBB43:
 107              	.LBB44:
 140:src/../h/Riscv.hpp **** 
 141:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stval() {
 142:src/../h/Riscv.hpp ****     uint64 volatile stval;
 143:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, stval" : "=r"(stval));
 144:src/../h/Riscv.hpp ****     return stval;
 145:src/../h/Riscv.hpp **** }
 146:src/../h/Riscv.hpp **** 
 147:src/../h/Riscv.hpp **** inline void Riscv::w_sie(uint64 sie)
 148:src/../h/Riscv.hpp **** {
 149:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sie, %0" : :"r"(sie));
 150:src/../h/Riscv.hpp **** }
 151:src/../h/Riscv.hpp **** 
 152:src/../h/Riscv.hpp **** inline void Riscv::w_stval(uint64 stval) {
 153:src/../h/Riscv.hpp ****     __asm__ volatile("csrw stval, %0" : :"r"(stval));
 154:src/../h/Riscv.hpp **** }
 155:src/../h/Riscv.hpp **** 
 156:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 157:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sip, %0" : :"r"(mask));
 158:src/../h/Riscv.hpp **** }
 159:src/../h/Riscv.hpp **** 
 160:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 161:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sip, %0" : :"r"(mask));
 162:src/../h/Riscv.hpp **** }
 163:src/../h/Riscv.hpp **** 
 164:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sie()
 165:src/../h/Riscv.hpp **** {
 166:src/../h/Riscv.hpp ****     uint64 volatile sie;
 167:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sip" : "=r"(sie));
 168:src/../h/Riscv.hpp ****     return sie;
 169:src/../h/Riscv.hpp **** }
 170:src/../h/Riscv.hpp **** 
 171:src/../h/Riscv.hpp **** inline void Riscv::ms_sie(uint64 mask)
 172:src/../h/Riscv.hpp **** {
 173:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sie, %0" : :"r"(mask));
 174:src/../h/Riscv.hpp **** }
 175:src/../h/Riscv.hpp **** 
 176:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip() {
 177:src/../h/Riscv.hpp ****     uint64 volatile sip;
GAS LISTING /tmp/cctEHc8V.s 			page 10


 178:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sip" : "=r"(sip));
 179:src/../h/Riscv.hpp ****     return sip;
 180:src/../h/Riscv.hpp **** }
 181:src/../h/Riscv.hpp **** 
 182:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 183:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sip, %0" : :"r"(sip));
 184:src/../h/Riscv.hpp **** }
 185:src/../h/Riscv.hpp **** 
 186:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 187:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sstatus, %0" : :"r"(mask));
 108              		.loc 2 187 5
 109              		.loc 2 187 54 is_stmt 0
 110 0070 93072000 		li	a5,2
 111              	#APP
 112              	# 187 "src/../h/Riscv.hpp" 1
 188              	}
 113              		csrs sstatus, a5
 114              	# 0 "" 2
 115              	.LVL7:
 116              	#NO_APP
 117              	.LBE44:
 118              	.LBE43:
  32:src/Riscv.cpp **** 
 119              		.loc 1 32 1
 120 0078 03348100 		ld	s0,8(sp)
 121              		.cfi_restore 8
 122              		.cfi_def_cfa 2, 16
 123 007c 13010101 		addi	sp,sp,16
 124              		.cfi_def_cfa_offset 0
 125 0080 67800000 		jr	ra
 126              		.cfi_endproc
 127              	.LFE29:
 129              		.align	2
 130              		.globl	_ZN5Riscv17disableInterruptsEv
 132              	_ZN5Riscv17disableInterruptsEv:
 133              	.LFB30:
  35:src/Riscv.cpp ****     mc_sstatus(Riscv::SSTATUS_SIE);
 134              		.loc 1 35 1 is_stmt 1
 135              		.cfi_startproc
 136 0084 130101FF 		addi	sp,sp,-16
 137              		.cfi_def_cfa_offset 16
 138 0088 23348100 		sd	s0,8(sp)
 139              		.cfi_offset 8, -8
 140 008c 13040101 		addi	s0,sp,16
 141              		.cfi_def_cfa 8, 0
  36:src/Riscv.cpp **** }
 142              		.loc 1 36 5
 143              	.LVL8:
 144              	.LBB45:
 145              	.LBB46:
 189:src/../h/Riscv.hpp **** 
 190:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 191:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sstatus, %0" : :"r"(mask));
 146              		.loc 2 191 5
 147              		.loc 2 191 54 is_stmt 0
 148 0090 93072000 		li	a5,2
 149              	#APP
GAS LISTING /tmp/cctEHc8V.s 			page 11


 150              	# 191 "src/../h/Riscv.hpp" 1
 192              	}
 151              		csrc sstatus, a5
 152              	# 0 "" 2
 153              	.LVL9:
 154              	#NO_APP
 155              	.LBE46:
 156              	.LBE45:
  37:src/Riscv.cpp **** 
 157              		.loc 1 37 1
 158 0098 03348100 		ld	s0,8(sp)
 159              		.cfi_restore 8
 160              		.cfi_def_cfa 2, 16
 161 009c 13010101 		addi	sp,sp,16
 162              		.cfi_def_cfa_offset 0
 163 00a0 67800000 		jr	ra
 164              		.cfi_endproc
 165              	.LFE30:
 167              		.align	2
 168              		.globl	_ZN5Riscv9endSystemEv
 170              	_ZN5Riscv9endSystemEv:
 171              	.LFB28:
  25:src/Riscv.cpp ****     //todo
 172              		.loc 1 25 1 is_stmt 1
 173              		.cfi_startproc
 174 00a4 130101FF 		addi	sp,sp,-16
 175              		.cfi_def_cfa_offset 16
 176 00a8 23341100 		sd	ra,8(sp)
 177 00ac 23308100 		sd	s0,0(sp)
 178              		.cfi_offset 1, -8
 179              		.cfi_offset 8, -16
 180 00b0 13040101 		addi	s0,sp,16
 181              		.cfi_def_cfa 8, 0
  27:src/Riscv.cpp **** }
 182              		.loc 1 27 5
  27:src/Riscv.cpp **** }
 183              		.loc 1 27 29 is_stmt 0
 184 00b4 97000000 		call	_ZN5Riscv17disableInterruptsEv
 184      E7800000 
 185              	.LVL10:
  28:src/Riscv.cpp **** 
 186              		.loc 1 28 1
 187 00bc 83308100 		ld	ra,8(sp)
 188              		.cfi_restore 1
 189 00c0 03340100 		ld	s0,0(sp)
 190              		.cfi_restore 8
 191              		.cfi_def_cfa 2, 16
 192 00c4 13010101 		addi	sp,sp,16
 193              		.cfi_def_cfa_offset 0
 194 00c8 67800000 		jr	ra
 195              		.cfi_endproc
 196              	.LFE28:
 198              		.align	2
 199              		.globl	_ZN5Riscv10popSppSpieEv
 201              	_ZN5Riscv10popSppSpieEv:
 202              	.LFB31:
  40:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
GAS LISTING /tmp/cctEHc8V.s 			page 12


 203              		.loc 1 40 1 is_stmt 1
 204              		.cfi_startproc
 205 00cc 130101FF 		addi	sp,sp,-16
 206              		.cfi_def_cfa_offset 16
 207 00d0 23348100 		sd	s0,8(sp)
 208              		.cfi_offset 8, -8
 209 00d4 13040101 		addi	s0,sp,16
 210              		.cfi_def_cfa 8, 0
  41:src/Riscv.cpp ****     __asm__ volatile ("sret");
 211              		.loc 1 41 5
  41:src/Riscv.cpp ****     __asm__ volatile ("sret");
 212              		.loc 1 41 39 is_stmt 0
 213              	#APP
 214              	# 41 "src/Riscv.cpp" 1
  42:src/Riscv.cpp **** }
 215              		csrw sepc, ra
 216              	# 0 "" 2
 217              		.loc 1 42 5 is_stmt 1
  42:src/Riscv.cpp **** }
 218              		.loc 1 42 30 is_stmt 0
 219              	# 42 "src/Riscv.cpp" 1
  43:src/Riscv.cpp **** 
 220              		sret
 221              	# 0 "" 2
 222              		.loc 1 43 1
 223              	#NO_APP
 224 00e0 03348100 		ld	s0,8(sp)
 225              		.cfi_restore 8
 226              		.cfi_def_cfa 2, 16
 227 00e4 13010101 		addi	sp,sp,16
 228              		.cfi_def_cfa_offset 0
 229 00e8 67800000 		jr	ra
 230              		.cfi_endproc
 231              	.LFE31:
 233              		.section	.rodata.str1.8,"aMS",@progbits,1
 234              		.align	3
 235              	.LC0:
 236 0000 456E642E 		.string	"End...\n"
 236      2E2E0A00 
 237              		.text
 238              		.align	2
 239              		.globl	_ZN5Riscv10kernelMainEv
 241              	_ZN5Riscv10kernelMainEv:
 242              	.LFB33:
 188:src/Riscv.cpp ****     initSystem();
 243              		.loc 1 188 1 is_stmt 1
 244              		.cfi_startproc
 245              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 246              		.cfi_lsda 0x1b,.LLSDA33
 247 00ec 130101FE 		addi	sp,sp,-32
 248              		.cfi_def_cfa_offset 32
 249 00f0 233C1100 		sd	ra,24(sp)
 250 00f4 23388100 		sd	s0,16(sp)
 251 00f8 23349100 		sd	s1,8(sp)
 252 00fc 23302101 		sd	s2,0(sp)
 253              		.cfi_offset 1, -8
 254              		.cfi_offset 8, -16
GAS LISTING /tmp/cctEHc8V.s 			page 13


 255              		.cfi_offset 9, -24
 256              		.cfi_offset 18, -32
 257 0100 13040102 		addi	s0,sp,32
 258              		.cfi_def_cfa 8, 0
 189:src/Riscv.cpp **** 
 259              		.loc 1 189 5
 260              	.LEHB0:
 189:src/Riscv.cpp **** 
 261              		.loc 1 189 15 is_stmt 0
 262 0104 97000000 		call	_ZN5Riscv10initSystemEv
 262      E7800000 
 263              	.LVL11:
 192:src/Riscv.cpp ****     userPCB->start();
 264              		.loc 1 192 5 is_stmt 1
 192:src/Riscv.cpp ****     userPCB->start();
 265              		.loc 1 192 62 is_stmt 0
 266 010c 37150000 		li	a0,4096
 267 0110 97000000 		call	_Z7kmallocm@plt
 267      E7800000 
 268              	.LVL12:
 269 0118 13090500 		mv	s2,a0
 192:src/Riscv.cpp ****     userPCB->start();
 270              		.loc 1 192 102
 271 011c 13058005 		li	a0,88
 272 0120 97000000 		call	_ZN3PCBnwEm@plt
 272      E7800000 
 273              	.LVL13:
 274              	.LEHE0:
 275 0128 93040500 		mv	s1,a0
 276 012c 13072000 		li	a4,2
 277 0130 93060900 		mv	a3,s2
 278 0134 13060000 		li	a2,0
 279 0138 97050000 		lla	a1,_ZN5Riscv14myTestsWrapperEPv
 279      93850500 
 280              	.LEHB1:
 281 0140 97000000 		call	_ZN3PCBC1EPFvPvES0_S0_m@plt
 281      E7800000 
 282              	.LVL14:
 283              	.LEHE1:
 193:src/Riscv.cpp **** 
 284              		.loc 1 193 5 is_stmt 1 discriminator 2
 193:src/Riscv.cpp **** 
 285              		.loc 1 193 19 is_stmt 0 discriminator 2
 286 0148 13850400 		mv	a0,s1
 287              	.LEHB2:
 288 014c 97000000 		call	_ZN3PCB5startEv@plt
 288      E7800000 
 289              	.LVL15:
 195:src/Riscv.cpp **** 
 290              		.loc 1 195 5 is_stmt 1 discriminator 2
 195:src/Riscv.cpp **** 
 291              		.loc 1 195 21 is_stmt 0 discriminator 2
 292 0154 97000000 		call	_ZN5Riscv16enableInterruptsEv
 292      E7800000 
 293              	.LVL16:
 294              	.L15:
 197:src/Riscv.cpp ****     {
GAS LISTING /tmp/cctEHc8V.s 			page 14


 295              		.loc 1 197 5 is_stmt 1
 197:src/Riscv.cpp ****     {
 296              		.loc 1 197 11
 197:src/Riscv.cpp ****     {
 297              		.loc 1 197 31 is_stmt 0
 298 015c 13850400 		mv	a0,s1
 299 0160 97000000 		call	_ZN3PCB10isFinishedEv@plt
 299      E7800000 
 300              	.LVL17:
 197:src/Riscv.cpp ****     {
 301              		.loc 1 197 11
 302 0168 63180500 		bnez	a0,.L14
 199:src/Riscv.cpp ****     }
 303              		.loc 1 199 9 is_stmt 1
 199:src/Riscv.cpp ****     }
 304              		.loc 1 199 24 is_stmt 0
 305 016c 97000000 		call	thread_dispatch@plt
 305      E7800000 
 306              	.LVL18:
 197:src/Riscv.cpp ****     {
 307              		.loc 1 197 5
 308 0174 6FF09FFE 		j	.L15
 309              	.L14:
 202:src/Riscv.cpp ****     ::printString("End...\n");
 310              		.loc 1 202 5 is_stmt 1
 202:src/Riscv.cpp ****     ::printString("End...\n");
 311              		.loc 1 202 18 is_stmt 0
 312 0178 93071000 		li	a5,1
 313 017c 17070000 		sb	a5,.LANCHOR0,a4
 313      2300F700 
 203:src/Riscv.cpp ****     while(!PCB::consolePCB->isFinished())
 314              		.loc 1 203 5 is_stmt 1
 203:src/Riscv.cpp ****     while(!PCB::consolePCB->isFinished())
 315              		.loc 1 203 18 is_stmt 0
 316 0184 17050000 		lla	a0,.LC0
 316      13050500 
 317 018c 97000000 		call	_Z11printStringPKc@plt
 317      E7800000 
 318              	.LVL19:
 319              	.L17:
 204:src/Riscv.cpp ****     {
 320              		.loc 1 204 5 is_stmt 1
 204:src/Riscv.cpp ****     {
 321              		.loc 1 204 11
 204:src/Riscv.cpp ****     {
 322              		.loc 1 204 39 is_stmt 0
 323 0194 97070000 		la	a5,_ZN3PCB10consolePCBE
 323      83B70700 
 324 019c 03B50700 		ld	a0,0(a5)
 325 01a0 97000000 		call	_ZN3PCB10isFinishedEv@plt
 325      E7800000 
 326              	.LVL20:
 204:src/Riscv.cpp ****     {
 327              		.loc 1 204 11
 328 01a8 63180500 		bnez	a0,.L16
 206:src/Riscv.cpp ****     }
 329              		.loc 1 206 9 is_stmt 1
GAS LISTING /tmp/cctEHc8V.s 			page 15


 206:src/Riscv.cpp ****     }
 330              		.loc 1 206 24 is_stmt 0
 331 01ac 97000000 		call	thread_dispatch@plt
 331      E7800000 
 332              	.LVL21:
 333              	.LEHE2:
 204:src/Riscv.cpp ****     {
 334              		.loc 1 204 5
 335 01b4 6FF01FFE 		j	.L17
 336              	.L16:
 208:src/Riscv.cpp ****     endSystem();
 337              		.loc 1 208 5 is_stmt 1
 208:src/Riscv.cpp ****     endSystem();
 338              		.loc 1 208 22 is_stmt 0
 339 01b8 97000000 		call	_ZN5Riscv17disableInterruptsEv
 339      E7800000 
 340              	.LVL22:
 209:src/Riscv.cpp **** }
 341              		.loc 1 209 5 is_stmt 1
 209:src/Riscv.cpp **** }
 342              		.loc 1 209 14 is_stmt 0
 343 01c0 97000000 		call	_ZN5Riscv9endSystemEv
 343      E7800000 
 344              	.LVL23:
 210:src/Riscv.cpp **** 
 345              		.loc 1 210 1
 346 01c8 83308101 		ld	ra,24(sp)
 347              		.cfi_remember_state
 348              		.cfi_restore 1
 349 01cc 03340101 		ld	s0,16(sp)
 350              		.cfi_restore 8
 351              		.cfi_def_cfa 2, 32
 352 01d0 83348100 		ld	s1,8(sp)
 353              		.cfi_restore 9
 354              	.LVL24:
 355 01d4 03390100 		ld	s2,0(sp)
 356              		.cfi_restore 18
 357 01d8 13010102 		addi	sp,sp,32
 358              		.cfi_def_cfa_offset 0
 359 01dc 67800000 		jr	ra
 360              	.L19:
 361              		.cfi_restore_state
 362 01e0 13090500 		mv	s2,a0
 192:src/Riscv.cpp ****     userPCB->start();
 363              		.loc 1 192 102
 364 01e4 13850400 		mv	a0,s1
 365 01e8 97000000 		call	_ZN3PCBdlEPv@plt
 365      E7800000 
 366              	.LVL25:
 367 01f0 13050900 		mv	a0,s2
 368              	.LEHB3:
 369 01f4 97000000 		call	_Unwind_Resume@plt
 369      E7800000 
 370              	.LVL26:
 371              	.LEHE3:
 372              		.cfi_endproc
 373              	.LFE33:
GAS LISTING /tmp/cctEHc8V.s 			page 16


 374              		.globl	__gxx_personality_v0
 375              		.section	.gcc_except_table,"a",@progbits
 376              	.LLSDA33:
 377 0000 FF       		.byte	0xff
 378 0001 FF       		.byte	0xff
 379 0002 03       		.byte	0x3
 380 0003 34       		.byte	0x34
 381 0004 00000000 		.4byte	.LEHB0-.LFB33
 382 0008 00000000 		.4byte	.LEHE0-.LEHB0
 383 000c 00000000 		.4byte	0
 384 0010 00       		.byte	0
 385 0011 00000000 		.4byte	.LEHB1-.LFB33
 386 0015 00000000 		.4byte	.LEHE1-.LEHB1
 387 0019 00000000 		.4byte	.L19-.LFB33
 388 001d 00       		.byte	0
 389 001e 00000000 		.4byte	.LEHB2-.LFB33
 390 0022 00000000 		.4byte	.LEHE2-.LEHB2
 391 0026 00000000 		.4byte	0
 392 002a 00       		.byte	0
 393 002b 00000000 		.4byte	.LEHB3-.LFB33
 394 002f 00000000 		.4byte	.LEHE3-.LEHB3
 395 0033 00000000 		.4byte	0
 396 0037 00       		.byte	0
 397              		.text
 399              		.align	2
 400              		.globl	_ZN5Riscv15userMainWrapperEPv
 402              	_ZN5Riscv15userMainWrapperEPv:
 403              	.LFB34:
 213:src/Riscv.cpp ****     userMain();
 404              		.loc 1 213 1 is_stmt 1
 405              		.cfi_startproc
 406 01fc 130101FF 		addi	sp,sp,-16
 407              		.cfi_def_cfa_offset 16
 408 0200 23341100 		sd	ra,8(sp)
 409 0204 23308100 		sd	s0,0(sp)
 410              		.cfi_offset 1, -8
 411              		.cfi_offset 8, -16
 412 0208 13040101 		addi	s0,sp,16
 413              		.cfi_def_cfa 8, 0
 214:src/Riscv.cpp **** }
 414              		.loc 1 214 5
 214:src/Riscv.cpp **** }
 415              		.loc 1 214 13 is_stmt 0
 416 020c 97000000 		call	_Z8userMainv@plt
 416      E7800000 
 417              	.LVL27:
 215:src/Riscv.cpp **** 
 418              		.loc 1 215 1
 419 0214 83308100 		ld	ra,8(sp)
 420              		.cfi_restore 1
 421 0218 03340100 		ld	s0,0(sp)
 422              		.cfi_restore 8
 423              		.cfi_def_cfa 2, 16
 424 021c 13010101 		addi	sp,sp,16
 425              		.cfi_def_cfa_offset 0
 426 0220 67800000 		jr	ra
 427              		.cfi_endproc
GAS LISTING /tmp/cctEHc8V.s 			page 17


 428              	.LFE34:
 430              		.align	2
 431              		.globl	_ZN5Riscv22disableTimerInterruptsEv
 433              	_ZN5Riscv22disableTimerInterruptsEv:
 434              	.LFB36:
 221:src/Riscv.cpp **** 
 222:src/Riscv.cpp **** void Riscv::disableTimerInterrupts()
 223:src/Riscv.cpp **** {
 435              		.loc 1 223 1 is_stmt 1
 436              		.cfi_startproc
 437 0224 130101FF 		addi	sp,sp,-16
 438              		.cfi_def_cfa_offset 16
 439 0228 23348100 		sd	s0,8(sp)
 440              		.cfi_offset 8, -8
 441 022c 13040101 		addi	s0,sp,16
 442              		.cfi_def_cfa 8, 0
 224:src/Riscv.cpp ****     uint64 x = 0x2;
 443              		.loc 1 224 5
 444              	.LVL28:
 225:src/Riscv.cpp ****     __asm__ volatile("csrc sie, %0"::"r"(x));
 445              		.loc 1 225 5
 446              		.loc 1 225 45 is_stmt 0
 447 0230 93072000 		li	a5,2
 448              	#APP
 449              	# 225 "src/Riscv.cpp" 1
 226              	}
 450              		csrc sie, a5
 451              	# 0 "" 2
 452              		.loc 1 226 1
 453              	#NO_APP
 454 0238 03348100 		ld	s0,8(sp)
 455              		.cfi_restore 8
 456              		.cfi_def_cfa 2, 16
 457 023c 13010101 		addi	sp,sp,16
 458              		.cfi_def_cfa_offset 0
 459 0240 67800000 		jr	ra
 460              		.cfi_endproc
 461              	.LFE36:
 463              		.align	2
 464              		.globl	_ZN5Riscv9idleRiscvEPv
 466              	_ZN5Riscv9idleRiscvEPv:
 467              	.LFB37:
 227:src/Riscv.cpp **** 
 228:src/Riscv.cpp **** void Riscv::idleRiscv(void* p)
 229:src/Riscv.cpp **** {
 468              		.loc 1 229 1 is_stmt 1
 469              		.cfi_startproc
 470              	.LVL29:
 471 0244 130101FF 		addi	sp,sp,-16
 472              		.cfi_def_cfa_offset 16
 473 0248 23348100 		sd	s0,8(sp)
 474              		.cfi_offset 8, -8
 475 024c 13040101 		addi	s0,sp,16
 476              		.cfi_def_cfa 8, 0
 477              	.L27:
 230:src/Riscv.cpp ****     while(true)
 478              		.loc 1 230 5 discriminator 1
GAS LISTING /tmp/cctEHc8V.s 			page 18


 479              		.loc 1 230 5 discriminator 1
 480 0250 6F000000 		j	.L27
 481              		.cfi_endproc
 482              	.LFE37:
 484              		.align	2
 485              		.globl	_ZN5Riscv13w_a0_sscratchEv
 487              	_ZN5Riscv13w_a0_sscratchEv:
 488              	.LFB38:
 231:src/Riscv.cpp ****     {
 232:src/Riscv.cpp **** 
 233:src/Riscv.cpp ****     }
 234:src/Riscv.cpp **** }
 235:src/Riscv.cpp **** 
 236:src/Riscv.cpp **** void Riscv::w_a0_sscratch()
 237:src/Riscv.cpp **** {
 489              		.loc 1 237 1
 490              		.cfi_startproc
 491 0254 130101FF 		addi	sp,sp,-16
 492              		.cfi_def_cfa_offset 16
 493 0258 23348100 		sd	s0,8(sp)
 494              		.cfi_offset 8, -8
 495 025c 13040101 		addi	s0,sp,16
 496              		.cfi_def_cfa 8, 0
 238:src/Riscv.cpp ****     uint64 a1Temp;
 497              		.loc 1 238 5
 239:src/Riscv.cpp ****     __asm__ volatile("mv %0, a1":"=r"(a1Temp));
 498              		.loc 1 239 5
 499              		.loc 1 239 47 is_stmt 0
 500              	#APP
 501              	# 239 "src/Riscv.cpp" 1
 240              	    __asm__ volatile("mv a1, %0"::"r"(PCB::running->sscratch));
 502              		mv a5, a1
 503              	# 0 "" 2
 504              	.LVL30:
 505              		.loc 1 240 5 is_stmt 1
 506              		.loc 1 240 53 is_stmt 0
 507              	#NO_APP
 508 0264 17070000 		la	a4,_ZN3PCB7runningE
 508      03370700 
 509 026c 03370700 		ld	a4,0(a4)
 510 0270 03370701 		ld	a4,16(a4)
 511              		.loc 1 240 63
 512              	#APP
 513              	# 240 "src/Riscv.cpp" 1
 241              	    __asm__ volatile("sd a0, 80(a1)");
 514              		mv a1, a4
 515              	# 0 "" 2
 516              		.loc 1 241 5 is_stmt 1
 517              		.loc 1 241 38 is_stmt 0
 518              	# 241 "src/Riscv.cpp" 1
 242              	    __asm__ volatile("mv a1,%0"::"r"(a1Temp));
 519              		sd a0, 80(a1)
 520              	# 0 "" 2
 521              		.loc 1 242 5 is_stmt 1
 522              		.loc 1 242 46 is_stmt 0
 523              	# 242 "src/Riscv.cpp" 1
 243              	}
GAS LISTING /tmp/cctEHc8V.s 			page 19


 524              		mv a1,a5
 525              	# 0 "" 2
 526              		.loc 1 243 1
 527              	#NO_APP
 528 0280 03348100 		ld	s0,8(sp)
 529              		.cfi_restore 8
 530              		.cfi_def_cfa 2, 16
 531 0284 13010101 		addi	sp,sp,16
 532              		.cfi_def_cfa_offset 0
 533 0288 67800000 		jr	ra
 534              		.cfi_endproc
 535              	.LFE38:
 537              		.align	2
 538              		.globl	_ZN5Riscv14changePrivModeEv
 540              	_ZN5Riscv14changePrivModeEv:
 541              	.LFB39:
 244:src/Riscv.cpp **** 
 245:src/Riscv.cpp **** void Riscv::changePrivMode()
 246:src/Riscv.cpp **** {
 542              		.loc 1 246 1 is_stmt 1
 543              		.cfi_startproc
 544 028c 130101FF 		addi	sp,sp,-16
 545              		.cfi_def_cfa_offset 16
 546 0290 23348100 		sd	s0,8(sp)
 547              		.cfi_offset 8, -8
 548 0294 13040101 		addi	s0,sp,16
 549              		.cfi_def_cfa 8, 0
 247:src/Riscv.cpp ****     if(PCB::running->systemThread)
 550              		.loc 1 247 5
 551              		.loc 1 247 22 is_stmt 0
 552 0298 97070000 		la	a5,_ZN3PCB7runningE
 552      83B70700 
 553 02a0 83B70700 		ld	a5,0(a5)
 554 02a4 83C70700 		lbu	a5,0(a5)
 555              		.loc 1 247 5
 556 02a8 638C0700 		beqz	a5,.L32
 248:src/Riscv.cpp ****         Riscv::ms_sstatus(Riscv::SSTATUS_SPP);
 557              		.loc 1 248 9 is_stmt 1
 558              	.LVL31:
 559              	.LBB47:
 560              	.LBB48:
 187:src/../h/Riscv.hpp **** }
 561              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 562              		.loc 2 187 54 is_stmt 0
 563 02ac 93070010 		li	a5,256
 564              	#APP
 565              	# 187 "src/../h/Riscv.hpp" 1
 566              		csrs sstatus, a5
 567              	# 0 "" 2
 568              	.LVL32:
 569              	#NO_APP
 570              	.L31:
 571              	.LBE48:
 572              	.LBE47:
 249:src/Riscv.cpp ****     else
 250:src/Riscv.cpp ****         Riscv::mc_sstatus(Riscv::SSTATUS_SPP);
GAS LISTING /tmp/cctEHc8V.s 			page 20


 251:src/Riscv.cpp **** }
 573              		.loc 1 251 1
 574 02b4 03348100 		ld	s0,8(sp)
 575              		.cfi_remember_state
 576              		.cfi_restore 8
 577              		.cfi_def_cfa 2, 16
 578 02b8 13010101 		addi	sp,sp,16
 579              		.cfi_def_cfa_offset 0
 580 02bc 67800000 		jr	ra
 581              	.L32:
 582              		.cfi_restore_state
 250:src/Riscv.cpp **** }
 583              		.loc 1 250 9 is_stmt 1
 584              	.LVL33:
 585              	.LBB49:
 586              	.LBB50:
 191:src/../h/Riscv.hpp **** }
 587              		.loc 2 191 5
 191:src/../h/Riscv.hpp **** }
 588              		.loc 2 191 54 is_stmt 0
 589 02c0 93070010 		li	a5,256
 590              	#APP
 591              	# 191 "src/../h/Riscv.hpp" 1
 592              		csrc sstatus, a5
 593              	# 0 "" 2
 594              	.LVL34:
 595              	#NO_APP
 596              	.LBE50:
 597              	.LBE49:
 598              		.loc 1 251 1
 599 02c8 6FF0DFFE 		j	.L31
 600              		.cfi_endproc
 601              	.LFE39:
 603              		.section	.rodata.str1.8
 604              		.align	3
 605              	.LC1:
 606 0008 6F706572 		.string	"operation interrupt\n"
 606      6174696F 
 606      6E20696E 
 606      74657272 
 606      7570740A 
 607 001d 000000   		.align	3
 608              	.LC2:
 609 0020 72656164 		.string	"read interrupt\n"
 609      20696E74 
 609      65727275 
 609      70740A00 
 610              		.align	3
 611              	.LC3:
 612 0030 77726974 		.string	"write interrupt\n"
 612      6520696E 
 612      74657272 
 612      7570740A 
 612      00
 613              		.text
 614              		.align	2
 615              		.globl	_ZN5Riscv20handleSupervisorTrapEv
GAS LISTING /tmp/cctEHc8V.s 			page 21


 617              	_ZN5Riscv20handleSupervisorTrapEv:
 618              	.LFB32:
  46:src/Riscv.cpp ****     __asm__ volatile("mv %0, a4" : "=r"(PCB::savedRegA4));
 619              		.loc 1 46 1 is_stmt 1
 620              		.cfi_startproc
 621 02cc 130101F9 		addi	sp,sp,-112
 622              		.cfi_def_cfa_offset 112
 623 02d0 23341106 		sd	ra,104(sp)
 624 02d4 23308106 		sd	s0,96(sp)
 625 02d8 233C9104 		sd	s1,88(sp)
 626              		.cfi_offset 1, -8
 627              		.cfi_offset 8, -16
 628              		.cfi_offset 9, -24
 629 02dc 13040107 		addi	s0,sp,112
 630              		.cfi_def_cfa 8, 0
  47:src/Riscv.cpp ****     __asm__ volatile("csrr %0, sscratch":"=r"(PCB::running->sscratch));
 631              		.loc 1 47 5
  47:src/Riscv.cpp ****     __asm__ volatile("csrr %0, sscratch":"=r"(PCB::running->sscratch));
 632              		.loc 1 47 58 is_stmt 0
 633              	#APP
 634              	# 47 "src/Riscv.cpp" 1
 635              		mv a4, a4
 636              	# 0 "" 2
 637              	#NO_APP
 638 02e4 97070000 		la	a5,_ZN3PCB10savedRegA4E
 638      83B70700 
 639 02ec 23B0E700 		sd	a4,0(a5)
  48:src/Riscv.cpp **** 
 640              		.loc 1 48 5 is_stmt 1
  48:src/Riscv.cpp **** 
 641              		.loc 1 48 61 is_stmt 0
 642 02f0 97070000 		la	a5,_ZN3PCB7runningE
 642      83B70700 
 643 02f8 83B70700 		ld	a5,0(a5)
  48:src/Riscv.cpp **** 
 644              		.loc 1 48 71
 645              	#APP
 646              	# 48 "src/Riscv.cpp" 1
 647              		csrr a4, sscratch
 648              	# 0 "" 2
 649              	#NO_APP
 650 0300 23B8E700 		sd	a4,16(a5)
  50:src/Riscv.cpp **** 
 651              		.loc 1 50 5 is_stmt 1
 652              	.LBB51:
 653              	.LBB52:
 112:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
 654              		.loc 2 112 5
 113:src/../h/Riscv.hpp ****     return scause;
 655              		.loc 2 113 5
 113:src/../h/Riscv.hpp ****     return scause;
 656              		.loc 2 113 55 is_stmt 0
 657              	#APP
 658              	# 113 "src/../h/Riscv.hpp" 1
 659              		csrr a5, scause
 660              	# 0 "" 2
 661              	#NO_APP
GAS LISTING /tmp/cctEHc8V.s 			page 22


 662 0308 233CF4FA 		sd	a5,-72(s0)
 114:src/../h/Riscv.hpp **** }
 663              		.loc 2 114 5 is_stmt 1
 114:src/../h/Riscv.hpp **** }
 664              		.loc 2 114 12 is_stmt 0
 665 030c 833784FB 		ld	a5,-72(s0)
 666              	.LVL35:
 667              	.LBE52:
 668              	.LBE51:
  52:src/Riscv.cpp ****     {
 669              		.loc 1 52 5 is_stmt 1
 670              	.LBB53:
 671 0310 13079000 		li	a4,9
 672 0314 636EF704 		bgtu	a5,a4,.L36
 673 0318 13078000 		li	a4,8
 674 031c 63FCE71A 		bgeu	a5,a4,.L37
 675 0320 13075000 		li	a4,5
 676 0324 638AE718 		beq	a5,a4,.L38
 677 0328 13077000 		li	a4,7
 678 032c 6390E702 		bne	a5,a4,.L64
 679              	.LBB54:
 115:src/Riscv.cpp ****         {
 680              		.loc 1 115 9
 116:src/Riscv.cpp ****             trapPrintString("write interrupt\n");
 681              		.loc 1 116 9
 117:src/Riscv.cpp ****             thread_exit();
 682              		.loc 1 117 13
 117:src/Riscv.cpp ****             thread_exit();
 683              		.loc 1 117 28 is_stmt 0
 684 0330 17050000 		lla	a0,.LC3
 684      13050500 
 685 0338 97000000 		call	_Z15trapPrintStringPKc@plt
 685      E7800000 
 686              	.LVL36:
 118:src/Riscv.cpp ****             break;
 687              		.loc 1 118 13 is_stmt 1
 118:src/Riscv.cpp ****             break;
 688              		.loc 1 118 24 is_stmt 0
 689 0340 97000000 		call	thread_exit@plt
 689      E7800000 
 690              	.LVL37:
 119:src/Riscv.cpp ****         }
 691              		.loc 1 119 13 is_stmt 1
 692 0348 6F000013 		j	.L35
 693              	.LVL38:
 694              	.L64:
 695              	.LBE54:
  52:src/Riscv.cpp ****     {
 696              		.loc 1 52 5 is_stmt 0
 697 034c 13072000 		li	a4,2
 698 0350 6394E712 		bne	a5,a4,.L35
 699              	.LBB85:
 103:src/Riscv.cpp ****         {
 700              		.loc 1 103 9 is_stmt 1
 104:src/Riscv.cpp ****             trapPrintString("operation interrupt\n");
 701              		.loc 1 104 9
 105:src/Riscv.cpp ****             thread_exit();
GAS LISTING /tmp/cctEHc8V.s 			page 23


 702              		.loc 1 105 13
 105:src/Riscv.cpp ****             thread_exit();
 703              		.loc 1 105 28 is_stmt 0
 704 0354 17050000 		lla	a0,.LC1
 704      13050500 
 705 035c 97000000 		call	_Z15trapPrintStringPKc@plt
 705      E7800000 
 706              	.LVL39:
 106:src/Riscv.cpp ****             break;
 707              		.loc 1 106 13 is_stmt 1
 106:src/Riscv.cpp ****             break;
 708              		.loc 1 106 24 is_stmt 0
 709 0364 97000000 		call	thread_exit@plt
 709      E7800000 
 710              	.LVL40:
 107:src/Riscv.cpp ****         }
 711              		.loc 1 107 13 is_stmt 1
 712 036c 6F00C010 		j	.L35
 713              	.LVL41:
 714              	.L36:
 715              	.LBE85:
  52:src/Riscv.cpp ****     {
 716              		.loc 1 52 5 is_stmt 0
 717 0370 1307F0FF 		li	a4,-1
 718 0374 1317F703 		slli	a4,a4,63
 719 0378 13071700 		addi	a4,a4,1
 720 037c 638AE706 		beq	a5,a4,.L42
 721 0380 1307F0FF 		li	a4,-1
 722 0384 1317F703 		slli	a4,a4,63
 723 0388 13079700 		addi	a4,a4,9
 724 038c 6396E70E 		bne	a5,a4,.L35
 725              	.LBB86:
  77:src/Riscv.cpp ****         {
 726              		.loc 1 77 9 is_stmt 1
  78:src/Riscv.cpp ****             uint64 x = CONSOLE_STATUS;
 727              		.loc 1 78 9
 728              	.LBB55:
  79:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0"::"r"(x));
 729              		.loc 1 79 13
  79:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0"::"r"(x));
 730              		.loc 1 79 20 is_stmt 0
 731 0390 97070000 		la	a5,CONSOLE_STATUS
 731      83B70700 
 732              	.LVL42:
 733 0398 83B70700 		ld	a5,0(a5)
 734              	.LVL43:
  80:src/Riscv.cpp ****             __asm__ volatile("lb a1, 0(a0)");
 735              		.loc 1 80 13 is_stmt 1
  80:src/Riscv.cpp ****             __asm__ volatile("lb a1, 0(a0)");
 736              		.loc 1 80 50 is_stmt 0
 737              	#APP
 738              	# 80 "src/Riscv.cpp" 1
  81:src/Riscv.cpp ****             uint64 operation;
 739              		mv a0, a5
 740              	# 0 "" 2
 741              		.loc 1 81 13 is_stmt 1
  81:src/Riscv.cpp ****             uint64 operation;
GAS LISTING /tmp/cctEHc8V.s 			page 24


 742              		.loc 1 81 45 is_stmt 0
 743              	# 81 "src/Riscv.cpp" 1
  82:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" :  "=r"(operation));
 744              		lb a1, 0(a0)
 745              	# 0 "" 2
 746              		.loc 1 82 13 is_stmt 1
  83:src/Riscv.cpp ****             if(operation & KConsole::STATUS_READ_MASK)
 747              		.loc 1 83 13
  83:src/Riscv.cpp ****             if(operation & KConsole::STATUS_READ_MASK)
 748              		.loc 1 83 61 is_stmt 0
 749              	# 83 "src/Riscv.cpp" 1
 750              		mv a5, a1
 751              	# 0 "" 2
 752              	.LVL44:
  84:src/Riscv.cpp ****             {
 753              		.loc 1 84 13 is_stmt 1
 754              	#NO_APP
 755              	.LBB56:
  84:src/Riscv.cpp ****             {
 756              		.loc 1 84 26 is_stmt 0
 757 03a8 93F71700 		andi	a5,a5,1
 758              	.LVL45:
  84:src/Riscv.cpp ****             {
 759              		.loc 1 84 13
 760 03ac 63880702 		beqz	a5,.L45
 761              	.LBB57:
  86:src/Riscv.cpp ****                 __asm__ volatile("mv a0, %0"::"r"(x));
 762              		.loc 1 86 17 is_stmt 1
  86:src/Riscv.cpp ****                 __asm__ volatile("mv a0, %0"::"r"(x));
 763              		.loc 1 86 19 is_stmt 0
 764 03b0 97070000 		la	a5,CONSOLE_TX_DATA
 764      83B70700 
 765 03b8 83B70700 		ld	a5,0(a5)
 766              	.LVL46:
  87:src/Riscv.cpp ****                 __asm__ volatile("lb a1,0(a0)");
 767              		.loc 1 87 17 is_stmt 1
  87:src/Riscv.cpp ****                 __asm__ volatile("lb a1,0(a0)");
 768              		.loc 1 87 54 is_stmt 0
 769              	#APP
 770              	# 87 "src/Riscv.cpp" 1
  88:src/Riscv.cpp ****                 char c;
 771              		mv a0, a5
 772              	# 0 "" 2
 773              		.loc 1 88 17 is_stmt 1
  88:src/Riscv.cpp ****                 char c;
 774              		.loc 1 88 48 is_stmt 0
 775              	# 88 "src/Riscv.cpp" 1
  89:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" :  "=r"(c));
 776              		lb a1,0(a0)
 777              	# 0 "" 2
 778              		.loc 1 89 17 is_stmt 1
  90:src/Riscv.cpp ****                 if(KConsole::pendingGetc > 0)
 779              		.loc 1 90 17
  90:src/Riscv.cpp ****                 if(KConsole::pendingGetc > 0)
 780              		.loc 1 90 57 is_stmt 0
 781              	# 90 "src/Riscv.cpp" 1
 782              		mv a0, a1
GAS LISTING /tmp/cctEHc8V.s 			page 25


 783              	# 0 "" 2
 784              	#NO_APP
 785 03c8 1375F50F 		andi	a0,a0,0xff
 786              	.LVL47:
  91:src/Riscv.cpp ****                 {
 787              		.loc 1 91 17 is_stmt 1
  91:src/Riscv.cpp ****                 {
 788              		.loc 1 91 42 is_stmt 0
 789 03cc 97070000 		la	a5,_ZN8KConsole11pendingGetcE
 789      83B70700 
 790              	.LVL48:
 791 03d4 83B70700 		ld	a5,0(a5)
  91:src/Riscv.cpp ****                 {
 792              		.loc 1 91 17
 793 03d8 6392070C 		bnez	a5,.L65
 794              	.LVL49:
 795              	.L45:
 796              	.LBE57:
 797              	.LBE56:
  99:src/Riscv.cpp **** 
 798              		.loc 1 99 13 is_stmt 1
  99:src/Riscv.cpp **** 
 799              		.loc 1 99 26 is_stmt 0
 800 03dc 97000000 		call	plic_claim@plt
 800      E7800000 
 801              	.LVL50:
 802 03e4 97000000 		call	plic_complete@plt
 802      E7800000 
 803              	.LVL51:
 101:src/Riscv.cpp ****         }
 804              		.loc 1 101 13 is_stmt 1
 805 03ec 6F00C008 		j	.L35
 806              	.LVL52:
 807              	.L42:
 808              	.LBE55:
  54:src/Riscv.cpp ****         {
 809              		.loc 1 54 9
  55:src/Riscv.cpp ****             uint64 volatile sepc = Riscv::r_sepc();
 810              		.loc 1 55 9
 811              	.LBB60:
  56:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 812              		.loc 1 56 13
 813              	.LBB61:
 814              	.LBB62:
 122:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 815              		.loc 2 122 5
 123:src/../h/Riscv.hpp ****     return sepc;
 816              		.loc 2 123 5
 123:src/../h/Riscv.hpp ****     return sepc;
 817              		.loc 2 123 51 is_stmt 0
 818              	#APP
 819              	# 123 "src/../h/Riscv.hpp" 1
 820              		csrr a5, sepc
 821              	# 0 "" 2
 822              	.LVL53:
 823              	#NO_APP
 824 03f4 2334F4FC 		sd	a5,-56(s0)
GAS LISTING /tmp/cctEHc8V.s 			page 26


 124:src/../h/Riscv.hpp **** }
 825              		.loc 2 124 5 is_stmt 1
 124:src/../h/Riscv.hpp **** }
 826              		.loc 2 124 12 is_stmt 0
 827 03f8 833784FC 		ld	a5,-56(s0)
 828              	.LBE62:
 829              	.LBE61:
  56:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 830              		.loc 1 56 50
 831 03fc 233CF4F8 		sd	a5,-104(s0)
  57:src/Riscv.cpp ****             mc_sip(Riscv::SIP_SSIP);
 832              		.loc 1 57 13 is_stmt 1
 833              	.LBB63:
 834              	.LBB64:
 193:src/../h/Riscv.hpp **** 
 194:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sstatus() {
 195:src/../h/Riscv.hpp ****     uint64 volatile sstatus;
 835              		.loc 2 195 5
 196:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 836              		.loc 2 196 5
 837              		.loc 2 196 57 is_stmt 0
 838              	#APP
 839              	# 196 "src/../h/Riscv.hpp" 1
 197              	    return sstatus;
 840              		csrr a5, sstatus
 841              	# 0 "" 2
 842              	#NO_APP
 843 0404 2330F4FC 		sd	a5,-64(s0)
 844              		.loc 2 197 5 is_stmt 1
 845              		.loc 2 197 12 is_stmt 0
 846 0408 833704FC 		ld	a5,-64(s0)
 847              	.LBE64:
 848              	.LBE63:
  57:src/Riscv.cpp ****             mc_sip(Riscv::SIP_SSIP);
 849              		.loc 1 57 56
 850 040c 2330F4FA 		sd	a5,-96(s0)
  58:src/Riscv.cpp ****             //trapPrintString("timerInterrupt\n");
 851              		.loc 1 58 13 is_stmt 1
 852              	.LVL54:
 853              	.LBB65:
 854              	.LBB66:
 161:src/../h/Riscv.hpp **** }
 855              		.loc 2 161 5
 161:src/../h/Riscv.hpp **** }
 856              		.loc 2 161 50 is_stmt 0
 857 0410 93072000 		li	a5,2
 858              	#APP
 859              	# 161 "src/../h/Riscv.hpp" 1
 860              		csrc sip, a5
 861              	# 0 "" 2
 862              	.LVL55:
 863              	#NO_APP
 864              	.LBE66:
 865              	.LBE65:
  61:src/Riscv.cpp ****             //trapPrintInt(totalTime);
 866              		.loc 1 61 13 is_stmt 1
  61:src/Riscv.cpp ****             //trapPrintInt(totalTime);
GAS LISTING /tmp/cctEHc8V.s 			page 27


 867              		.loc 1 61 22 is_stmt 0
 868 0418 17070000 		lla	a4,.LANCHOR0
 868      13070700 
 869 0420 83378700 		ld	a5,8(a4)
 870 0424 93871700 		addi	a5,a5,1
 871 0428 2334F700 		sd	a5,8(a4)
  64:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
 872              		.loc 1 64 13 is_stmt 1
  64:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
 873              		.loc 1 64 34 is_stmt 0
 874 042c 97040000 		la	s1,_ZN3PCB16timeSliceCounterE
 874      83B40400 
 875 0434 83B70400 		ld	a5,0(s1)
 876 0438 93871700 		addi	a5,a5,1
 877 043c 23B0F400 		sd	a5,0(s1)
  65:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
 878              		.loc 1 65 13 is_stmt 1
  65:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
 879              		.loc 1 65 40 is_stmt 0
 880 0440 97000000 		call	_ZN12SleepPCBList13tryToWakePCBsEv@plt
 880      E7800000 
 881              	.LVL56:
  66:src/Riscv.cpp ****             {
 882              		.loc 1 66 13 is_stmt 1
  66:src/Riscv.cpp ****             {
 883              		.loc 1 66 68 is_stmt 0
 884 0448 97070000 		la	a5,_ZN3PCB7runningE
 884      83B70700 
 885 0450 83B70700 		ld	a5,0(a5)
 886              	.LVL57:
 887              	.LBB67:
 888              	.LBB68:
 889              		.file 3 "src/../h/PCB.hpp"
   1:src/../h/PCB.hpp **** //
   2:src/../h/PCB.hpp **** // Created by os on 4/27/22.
   3:src/../h/PCB.hpp **** //
   4:src/../h/PCB.hpp **** 
   5:src/../h/PCB.hpp **** #ifndef PROJECT_BASE_V1_0_PCB_HPP
   6:src/../h/PCB.hpp **** #define PROJECT_BASE_V1_0_PCB_HPP
   7:src/../h/PCB.hpp **** 
   8:src/../h/PCB.hpp **** #include "../lib/hw.h"
   9:src/../h/PCB.hpp **** #include "Scheduler.hpp"
  10:src/../h/PCB.hpp **** #include "Riscv.hpp"
  11:src/../h/PCB.hpp **** 
  12:src/../h/PCB.hpp **** class PCB
  13:src/../h/PCB.hpp **** {
  14:src/../h/PCB.hpp **** public:
  15:src/../h/PCB.hpp ****     static uint64 savedRegA4;
  16:src/../h/PCB.hpp **** 
  17:src/../h/PCB.hpp ****     using Body = void (*)(void*);
  18:src/../h/PCB.hpp **** 
  19:src/../h/PCB.hpp ****     PCB(Body body,  void* args, void* stack_space, uint64 timeSlice);
  20:src/../h/PCB.hpp ****     ~PCB();
  21:src/../h/PCB.hpp **** 
  22:src/../h/PCB.hpp ****     void start();
  23:src/../h/PCB.hpp ****     static void dispatch();
  24:src/../h/PCB.hpp ****     static void sleep(time_t);
GAS LISTING /tmp/cctEHc8V.s 			page 28


  25:src/../h/PCB.hpp **** 
  26:src/../h/PCB.hpp ****     static PCB* running;
  27:src/../h/PCB.hpp **** 
  28:src/../h/PCB.hpp ****     static uint64 timeSliceCounter;
  29:src/../h/PCB.hpp ****     uint64 getTimeSlice() { return timeSlice;}
 890              		.loc 3 29 29 is_stmt 1
 891              		.loc 3 29 36 is_stmt 0
 892 0454 83B78701 		ld	a5,24(a5)
 893              	.LVL58:
 894              	.LBE68:
 895              	.LBE67:
  66:src/Riscv.cpp ****             {
 896              		.loc 1 66 39
 897 0458 03B70400 		ld	a4,0(s1)
  66:src/Riscv.cpp ****             {
 898              		.loc 1 66 13
 899 045c 6378F702 		bgeu	a4,a5,.L66
 900              	.L44:
  72:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 901              		.loc 1 72 13 is_stmt 1
  72:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 902              		.loc 1 72 29 is_stmt 0
 903 0460 833704FA 		ld	a5,-96(s0)
 904              	.LVL59:
 905              	.LBB69:
 906              	.LBB70:
 198:src/../h/Riscv.hpp **** }
 199:src/../h/Riscv.hpp **** 
 200:src/../h/Riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus) {
 201:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sstatus, %0" : :"r"(sstatus));
 907              		.loc 2 201 5 is_stmt 1
 908              		.loc 2 201 57 is_stmt 0
 909              	#APP
 910              	# 201 "src/../h/Riscv.hpp" 1
 202              	}
 911              		csrw sstatus, a5
 912              	# 0 "" 2
 913              	.LVL60:
 914              	#NO_APP
 915              	.LBE70:
 916              	.LBE69:
  73:src/Riscv.cpp ****             changePrivMode();
 917              		.loc 1 73 13 is_stmt 1
  73:src/Riscv.cpp ****             changePrivMode();
 918              		.loc 1 73 26 is_stmt 0
 919 0468 833784F9 		ld	a5,-104(s0)
 920              	.LVL61:
 921              	.LBB71:
 922              	.LBB72:
 128:src/../h/Riscv.hpp **** }
 923              		.loc 2 128 5 is_stmt 1
 128:src/../h/Riscv.hpp **** }
 924              		.loc 2 128 51 is_stmt 0
 925              	#APP
 926              	# 128 "src/../h/Riscv.hpp" 1
 927              		csrw sepc, a5
 928              	# 0 "" 2
GAS LISTING /tmp/cctEHc8V.s 			page 29


 929              	.LVL62:
 930              	#NO_APP
 931              	.LBE72:
 932              	.LBE71:
  74:src/Riscv.cpp ****             break;
 933              		.loc 1 74 13 is_stmt 1
  74:src/Riscv.cpp ****             break;
 934              		.loc 1 74 27 is_stmt 0
 935 0470 97000000 		call	_ZN5Riscv14changePrivModeEv
 935      E7800000 
 936              	.LVL63:
  75:src/Riscv.cpp ****         }
 937              		.loc 1 75 13 is_stmt 1
 938              	.L35:
 939              	.LBE60:
 940              	.LBE86:
 941              	.LBE53:
 185:src/Riscv.cpp **** 
 942              		.loc 1 185 1 is_stmt 0
 943 0478 83308106 		ld	ra,104(sp)
 944              		.cfi_remember_state
 945              		.cfi_restore 1
 946 047c 03340106 		ld	s0,96(sp)
 947              		.cfi_restore 8
 948              		.cfi_def_cfa 2, 112
 949 0480 83348105 		ld	s1,88(sp)
 950              		.cfi_restore 9
 951 0484 13010107 		addi	sp,sp,112
 952              		.cfi_def_cfa_offset 0
 953 0488 67800000 		jr	ra
 954              	.L66:
 955              		.cfi_restore_state
 956              	.LBB89:
 957              	.LBB87:
 958              	.LBB73:
  68:src/Riscv.cpp ****                 PCB::dispatch();
 959              		.loc 1 68 17 is_stmt 1
  68:src/Riscv.cpp ****                 PCB::dispatch();
 960              		.loc 1 68 39 is_stmt 0
 961 048c 23B00400 		sd	zero,0(s1)
  69:src/Riscv.cpp ****             }
 962              		.loc 1 69 17 is_stmt 1
  69:src/Riscv.cpp ****             }
 963              		.loc 1 69 30 is_stmt 0
 964 0490 97000000 		call	_ZN3PCB8dispatchEv@plt
 964      E7800000 
 965              	.LVL64:
 966 0498 6FF09FFC 		j	.L44
 967              	.LVL65:
 968              	.L65:
 969              	.LBE73:
 970              	.LBB74:
 971              	.LBB59:
 972              	.LBB58:
  93:src/Riscv.cpp ****                     KConsole::putCharacterInput(c);
 973              		.loc 1 93 21 is_stmt 1
  93:src/Riscv.cpp ****                     KConsole::putCharacterInput(c);
GAS LISTING /tmp/cctEHc8V.s 			page 30


 974              		.loc 1 93 42 is_stmt 0
 975 049c 9387F7FF 		addi	a5,a5,-1
 976 04a0 17070000 		la	a4,_ZN8KConsole11pendingGetcE
 976      03370700 
 977 04a8 2330F700 		sd	a5,0(a4)
  94:src/Riscv.cpp ****                     //KConsole::putCharacterOutput(c);
 978              		.loc 1 94 21 is_stmt 1
  94:src/Riscv.cpp ****                     //KConsole::putCharacterOutput(c);
 979              		.loc 1 94 48 is_stmt 0
 980 04ac 97000000 		call	_ZN8KConsole17putCharacterInputEc@plt
 980      E7800000 
 981              	.LVL66:
 982 04b4 6FF09FF2 		j	.L45
 983              	.LVL67:
 984              	.L38:
 985              	.LBE58:
 986              	.LBE59:
 987              	.LBE74:
 109:src/Riscv.cpp ****         {
 988              		.loc 1 109 9 is_stmt 1
 110:src/Riscv.cpp ****             trapPrintString("read interrupt\n");
 989              		.loc 1 110 9
 111:src/Riscv.cpp ****             thread_exit();
 990              		.loc 1 111 13
 111:src/Riscv.cpp ****             thread_exit();
 991              		.loc 1 111 28 is_stmt 0
 992 04b8 17050000 		lla	a0,.LC2
 992      13050500 
 993 04c0 97000000 		call	_Z15trapPrintStringPKc@plt
 993      E7800000 
 994              	.LVL68:
 112:src/Riscv.cpp ****             break;
 995              		.loc 1 112 13 is_stmt 1
 112:src/Riscv.cpp ****             break;
 996              		.loc 1 112 24 is_stmt 0
 997 04c8 97000000 		call	thread_exit@plt
 997      E7800000 
 998              	.LVL69:
 113:src/Riscv.cpp ****         }
 999              		.loc 1 113 13 is_stmt 1
 1000 04d0 6FF09FFA 		j	.L35
 1001              	.LVL70:
 1002              	.L37:
 121:src/Riscv.cpp ****         case ecallUserInterrupt:
 1003              		.loc 1 121 9
 122:src/Riscv.cpp ****         {
 1004              		.loc 1 122 9
 123:src/Riscv.cpp ****             uint64 operation;
 1005              		.loc 1 123 9
 1006              	.LBB75:
 124:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
 1007              		.loc 1 124 13
 125:src/Riscv.cpp **** 
 1008              		.loc 1 125 13
 125:src/Riscv.cpp **** 
 1009              		.loc 1 125 61 is_stmt 0
 1010              	#APP
GAS LISTING /tmp/cctEHc8V.s 			page 31


 1011              	# 125 "src/Riscv.cpp" 1
 1012              		mv a5, a0
 1013              	# 0 "" 2
 1014              	.LVL71:
 127:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 1015              		.loc 1 127 13 is_stmt 1
 1016              	#NO_APP
 1017              	.LBB76:
 1018              	.LBB77:
 122:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 1019              		.loc 2 122 5
 123:src/../h/Riscv.hpp ****     return sepc;
 1020              		.loc 2 123 5
 123:src/../h/Riscv.hpp ****     return sepc;
 1021              		.loc 2 123 51 is_stmt 0
 1022              	#APP
 1023              	# 123 "src/../h/Riscv.hpp" 1
 1024              		csrr a4, sepc
 1025              	# 0 "" 2
 1026              	#NO_APP
 1027 04dc 233CE4FC 		sd	a4,-40(s0)
 124:src/../h/Riscv.hpp **** }
 1028              		.loc 2 124 5 is_stmt 1
 124:src/../h/Riscv.hpp **** }
 1029              		.loc 2 124 12 is_stmt 0
 1030 04e0 033784FD 		ld	a4,-40(s0)
 1031              	.LBE77:
 1032              	.LBE76:
 127:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 1033              		.loc 1 127 52
 1034 04e4 13074700 		addi	a4,a4,4
 127:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 1035              		.loc 1 127 54
 1036 04e8 2334E4FA 		sd	a4,-88(s0)
 128:src/Riscv.cpp **** 
 1037              		.loc 1 128 13 is_stmt 1
 1038              	.LBB78:
 1039              	.LBB79:
 195:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 1040              		.loc 2 195 5
 196:src/../h/Riscv.hpp ****     return sstatus;
 1041              		.loc 2 196 5
 196:src/../h/Riscv.hpp ****     return sstatus;
 1042              		.loc 2 196 57 is_stmt 0
 1043              	#APP
 1044              	# 196 "src/../h/Riscv.hpp" 1
 1045              		csrr a4, sstatus
 1046              	# 0 "" 2
 1047              	#NO_APP
 1048 04f0 2338E4FC 		sd	a4,-48(s0)
 197:src/../h/Riscv.hpp **** }
 1049              		.loc 2 197 5 is_stmt 1
 197:src/../h/Riscv.hpp **** }
 1050              		.loc 2 197 12 is_stmt 0
 1051 04f4 033704FD 		ld	a4,-48(s0)
 1052              	.LBE79:
 1053              	.LBE78:
GAS LISTING /tmp/cctEHc8V.s 			page 32


 128:src/Riscv.cpp **** 
 1054              		.loc 1 128 56
 1055 04f8 2338E4FA 		sd	a4,-80(s0)
 130:src/Riscv.cpp ****             {
 1056              		.loc 1 130 13 is_stmt 1
 1057 04fc 13073004 		li	a4,67
 1058 0500 6364F702 		bgtu	a5,a4,.L46
 1059 0504 93972700 		slli	a5,a5,2
 1060              	.LVL72:
 1061 0508 17070000 		lla	a4,.L48
 1061      13070700 
 1062 0510 B387E700 		add	a5,a5,a4
 1063 0514 83A70700 		lw	a5,0(a5)
 1064 0518 B387E700 		add	a5,a5,a4
 1065 051c 67800700 		jr	a5
 1066              		.section	.rodata
 1067              		.align	2
 1068              		.align	2
 1069              	.L48:
 1070 0000 00000000 		.word	.L46-.L48
 1071 0004 00000000 		.word	.L62-.L48
 1072 0008 00000000 		.word	.L61-.L48
 1073 000c 00000000 		.word	.L46-.L48
 1074 0010 00000000 		.word	.L46-.L48
 1075 0014 00000000 		.word	.L46-.L48
 1076 0018 00000000 		.word	.L46-.L48
 1077 001c 00000000 		.word	.L46-.L48
 1078 0020 00000000 		.word	.L46-.L48
 1079 0024 00000000 		.word	.L46-.L48
 1080 0028 00000000 		.word	.L46-.L48
 1081 002c 00000000 		.word	.L46-.L48
 1082 0030 00000000 		.word	.L46-.L48
 1083 0034 00000000 		.word	.L46-.L48
 1084 0038 00000000 		.word	.L46-.L48
 1085 003c 00000000 		.word	.L46-.L48
 1086 0040 00000000 		.word	.L46-.L48
 1087 0044 00000000 		.word	.L60-.L48
 1088 0048 00000000 		.word	.L59-.L48
 1089 004c 00000000 		.word	.L58-.L48
 1090 0050 00000000 		.word	.L57-.L48
 1091 0054 00000000 		.word	.L56-.L48
 1092 0058 00000000 		.word	.L46-.L48
 1093 005c 00000000 		.word	.L46-.L48
 1094 0060 00000000 		.word	.L46-.L48
 1095 0064 00000000 		.word	.L46-.L48
 1096 0068 00000000 		.word	.L46-.L48
 1097 006c 00000000 		.word	.L46-.L48
 1098 0070 00000000 		.word	.L46-.L48
 1099 0074 00000000 		.word	.L46-.L48
 1100 0078 00000000 		.word	.L46-.L48
 1101 007c 00000000 		.word	.L46-.L48
 1102 0080 00000000 		.word	.L46-.L48
 1103 0084 00000000 		.word	.L55-.L48
 1104 0088 00000000 		.word	.L54-.L48
 1105 008c 00000000 		.word	.L53-.L48
 1106 0090 00000000 		.word	.L52-.L48
 1107 0094 00000000 		.word	.L46-.L48
GAS LISTING /tmp/cctEHc8V.s 			page 33


 1108 0098 00000000 		.word	.L46-.L48
 1109 009c 00000000 		.word	.L46-.L48
 1110 00a0 00000000 		.word	.L46-.L48
 1111 00a4 00000000 		.word	.L46-.L48
 1112 00a8 00000000 		.word	.L46-.L48
 1113 00ac 00000000 		.word	.L46-.L48
 1114 00b0 00000000 		.word	.L46-.L48
 1115 00b4 00000000 		.word	.L46-.L48
 1116 00b8 00000000 		.word	.L46-.L48
 1117 00bc 00000000 		.word	.L46-.L48
 1118 00c0 00000000 		.word	.L46-.L48
 1119 00c4 00000000 		.word	.L51-.L48
 1120 00c8 00000000 		.word	.L46-.L48
 1121 00cc 00000000 		.word	.L46-.L48
 1122 00d0 00000000 		.word	.L46-.L48
 1123 00d4 00000000 		.word	.L46-.L48
 1124 00d8 00000000 		.word	.L46-.L48
 1125 00dc 00000000 		.word	.L46-.L48
 1126 00e0 00000000 		.word	.L46-.L48
 1127 00e4 00000000 		.word	.L46-.L48
 1128 00e8 00000000 		.word	.L46-.L48
 1129 00ec 00000000 		.word	.L46-.L48
 1130 00f0 00000000 		.word	.L46-.L48
 1131 00f4 00000000 		.word	.L46-.L48
 1132 00f8 00000000 		.word	.L46-.L48
 1133 00fc 00000000 		.word	.L46-.L48
 1134 0100 00000000 		.word	.L46-.L48
 1135 0104 00000000 		.word	.L50-.L48
 1136 0108 00000000 		.word	.L49-.L48
 1137 010c 00000000 		.word	.L47-.L48
 1138              		.text
 1139              	.L62:
 132:src/Riscv.cpp ****                     MemoryAllocator::memAllocHandler();
 1140              		.loc 1 132 17
 133:src/Riscv.cpp ****                     break;
 1141              		.loc 1 133 21
 133:src/Riscv.cpp ****                     break;
 1142              		.loc 1 133 53 is_stmt 0
 1143 0520 97000000 		call	_ZN15MemoryAllocator15memAllocHandlerEv@plt
 1143      E7800000 
 1144              	.LVL73:
 134:src/Riscv.cpp ****                 case MemoryAllocator::MEM_FREE:
 1145              		.loc 1 134 21 is_stmt 1
 1146              	.L46:
 179:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 1147              		.loc 1 179 13
 179:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 1148              		.loc 1 179 29 is_stmt 0
 1149 0528 833704FB 		ld	a5,-80(s0)
 1150              	.LVL74:
 1151              	.LBB80:
 1152              	.LBB81:
 201:src/../h/Riscv.hpp **** }
 1153              		.loc 2 201 5 is_stmt 1
 201:src/../h/Riscv.hpp **** }
 1154              		.loc 2 201 57 is_stmt 0
 1155              	#APP
GAS LISTING /tmp/cctEHc8V.s 			page 34


 1156              	# 201 "src/../h/Riscv.hpp" 1
 1157              		csrw sstatus, a5
 1158              	# 0 "" 2
 1159              	.LVL75:
 1160              	#NO_APP
 1161              	.LBE81:
 1162              	.LBE80:
 180:src/Riscv.cpp ****             changePrivMode();
 1163              		.loc 1 180 13 is_stmt 1
 180:src/Riscv.cpp ****             changePrivMode();
 1164              		.loc 1 180 26 is_stmt 0
 1165 0530 833784FA 		ld	a5,-88(s0)
 1166              	.LVL76:
 1167              	.LBB82:
 1168              	.LBB83:
 128:src/../h/Riscv.hpp **** }
 1169              		.loc 2 128 5 is_stmt 1
 128:src/../h/Riscv.hpp **** }
 1170              		.loc 2 128 51 is_stmt 0
 1171              	#APP
 1172              	# 128 "src/../h/Riscv.hpp" 1
 1173              		csrw sepc, a5
 1174              	# 0 "" 2
 1175              	.LVL77:
 1176              	#NO_APP
 1177              	.LBE83:
 1178              	.LBE82:
 181:src/Riscv.cpp ****             break;
 1179              		.loc 1 181 13 is_stmt 1
 181:src/Riscv.cpp ****             break;
 1180              		.loc 1 181 27 is_stmt 0
 1181 0538 97000000 		call	_ZN5Riscv14changePrivModeEv
 1181      E7800000 
 1182              	.LVL78:
 182:src/Riscv.cpp ****         }
 1183              		.loc 1 182 13 is_stmt 1
 1184              	.LBE75:
 1185              	.LBE87:
 1186              	.LBE89:
 185:src/Riscv.cpp **** 
 1187              		.loc 1 185 1 is_stmt 0
 1188 0540 6FF09FF3 		j	.L35
 1189              	.L61:
 1190              	.LBB90:
 1191              	.LBB88:
 1192              	.LBB84:
 135:src/Riscv.cpp ****                     MemoryAllocator::memFreeHandler();
 1193              		.loc 1 135 17 is_stmt 1
 136:src/Riscv.cpp ****                     break;
 1194              		.loc 1 136 21
 136:src/Riscv.cpp ****                     break;
 1195              		.loc 1 136 52 is_stmt 0
 1196 0544 97000000 		call	_ZN15MemoryAllocator14memFreeHandlerEv@plt
 1196      E7800000 
 1197              	.LVL79:
 137:src/Riscv.cpp ****                 case PCB::THREAD_MAKE_PCB:
 1198              		.loc 1 137 21 is_stmt 1
GAS LISTING /tmp/cctEHc8V.s 			page 35


 1199 054c 6FF0DFFD 		j	.L46
 1200              	.L57:
 138:src/Riscv.cpp ****                     PCB::threadMakePCBHandler();
 1201              		.loc 1 138 17
 139:src/Riscv.cpp ****                     break;
 1202              		.loc 1 139 21
 139:src/Riscv.cpp ****                     break;
 1203              		.loc 1 139 46 is_stmt 0
 1204 0550 97000000 		call	_ZN3PCB20threadMakePCBHandlerEv@plt
 1204      E7800000 
 1205              	.LVL80:
 140:src/Riscv.cpp ****                 case PCB::THREAD_CREATE:
 1206              		.loc 1 140 21 is_stmt 1
 1207 0558 6FF01FFD 		j	.L46
 1208              	.L60:
 141:src/Riscv.cpp ****                     PCB::threadCreateHandler();
 1209              		.loc 1 141 17
 142:src/Riscv.cpp ****                     break;
 1210              		.loc 1 142 21
 142:src/Riscv.cpp ****                     break;
 1211              		.loc 1 142 45 is_stmt 0
 1212 055c 97000000 		call	_ZN3PCB19threadCreateHandlerEv@plt
 1212      E7800000 
 1213              	.LVL81:
 143:src/Riscv.cpp ****                 case PCB::THREAD_START:
 1214              		.loc 1 143 21 is_stmt 1
 1215 0564 6FF05FFC 		j	.L46
 1216              	.L56:
 144:src/Riscv.cpp ****                     PCB::threadStartHandler();
 1217              		.loc 1 144 17
 145:src/Riscv.cpp ****                     break;
 1218              		.loc 1 145 21
 145:src/Riscv.cpp ****                     break;
 1219              		.loc 1 145 44 is_stmt 0
 1220 0568 97000000 		call	_ZN3PCB18threadStartHandlerEv@plt
 1220      E7800000 
 1221              	.LVL82:
 146:src/Riscv.cpp ****                 case PCB::THREAD_DISPATCH:
 1222              		.loc 1 146 21 is_stmt 1
 1223 0570 6FF09FFB 		j	.L46
 1224              	.L58:
 147:src/Riscv.cpp ****                     PCB::threadDispatchHandler();
 1225              		.loc 1 147 17
 148:src/Riscv.cpp ****                     break;
 1226              		.loc 1 148 21
 148:src/Riscv.cpp ****                     break;
 1227              		.loc 1 148 47 is_stmt 0
 1228 0574 97000000 		call	_ZN3PCB21threadDispatchHandlerEv@plt
 1228      E7800000 
 1229              	.LVL83:
 149:src/Riscv.cpp ****                 case PCB::THREAD_EXIT:
 1230              		.loc 1 149 21 is_stmt 1
 1231 057c 6FF0DFFA 		j	.L46
 1232              	.L59:
 150:src/Riscv.cpp ****                     PCB::threadExitHandler();
 1233              		.loc 1 150 17
 151:src/Riscv.cpp ****                     break;
GAS LISTING /tmp/cctEHc8V.s 			page 36


 1234              		.loc 1 151 21
 151:src/Riscv.cpp ****                     break;
 1235              		.loc 1 151 43 is_stmt 0
 1236 0580 97000000 		call	_ZN3PCB17threadExitHandlerEv@plt
 1236      E7800000 
 1237              	.LVL84:
 152:src/Riscv.cpp ****                 case PCB::TIME_SLEEP:
 1238              		.loc 1 152 21 is_stmt 1
 1239 0588 6FF01FFA 		j	.L46
 1240              	.L51:
 153:src/Riscv.cpp ****                     PCB::threadSleepHandler();
 1241              		.loc 1 153 17
 154:src/Riscv.cpp ****                     break;
 1242              		.loc 1 154 21
 154:src/Riscv.cpp ****                     break;
 1243              		.loc 1 154 44 is_stmt 0
 1244 058c 97000000 		call	_ZN3PCB18threadSleepHandlerEv@plt
 1244      E7800000 
 1245              	.LVL85:
 155:src/Riscv.cpp ****                 case KSemaphore::SEM_OPEN:
 1246              		.loc 1 155 21 is_stmt 1
 1247 0594 6FF05FF9 		j	.L46
 1248              	.L55:
 156:src/Riscv.cpp ****                     KSemaphore::semOpenHandler();
 1249              		.loc 1 156 17
 157:src/Riscv.cpp ****                     break;
 1250              		.loc 1 157 21
 157:src/Riscv.cpp ****                     break;
 1251              		.loc 1 157 47 is_stmt 0
 1252 0598 97000000 		call	_ZN10KSemaphore14semOpenHandlerEv@plt
 1252      E7800000 
 1253              	.LVL86:
 158:src/Riscv.cpp ****                 case KSemaphore::SEM_WAIT:
 1254              		.loc 1 158 21 is_stmt 1
 1255 05a0 6FF09FF8 		j	.L46
 1256              	.L53:
 159:src/Riscv.cpp ****                     KSemaphore::semWaitHandler();
 1257              		.loc 1 159 17
 160:src/Riscv.cpp ****                     break;
 1258              		.loc 1 160 21
 160:src/Riscv.cpp ****                     break;
 1259              		.loc 1 160 47 is_stmt 0
 1260 05a4 97000000 		call	_ZN10KSemaphore14semWaitHandlerEv@plt
 1260      E7800000 
 1261              	.LVL87:
 161:src/Riscv.cpp ****                 case KSemaphore::SEM_SIGNAL:
 1262              		.loc 1 161 21 is_stmt 1
 1263 05ac 6FF0DFF7 		j	.L46
 1264              	.L52:
 162:src/Riscv.cpp ****                     KSemaphore::semSignalHandler();
 1265              		.loc 1 162 17
 163:src/Riscv.cpp ****                     break;
 1266              		.loc 1 163 21
 163:src/Riscv.cpp ****                     break;
 1267              		.loc 1 163 49 is_stmt 0
 1268 05b0 97000000 		call	_ZN10KSemaphore16semSignalHandlerEv@plt
 1268      E7800000 
GAS LISTING /tmp/cctEHc8V.s 			page 37


 1269              	.LVL88:
 164:src/Riscv.cpp ****                 case KSemaphore::SEM_CLOSE:
 1270              		.loc 1 164 21 is_stmt 1
 1271 05b8 6FF01FF7 		j	.L46
 1272              	.L54:
 165:src/Riscv.cpp ****                     KSemaphore::semCloseHandler();
 1273              		.loc 1 165 17
 166:src/Riscv.cpp ****                     break;
 1274              		.loc 1 166 21
 166:src/Riscv.cpp ****                     break;
 1275              		.loc 1 166 48 is_stmt 0
 1276 05bc 97000000 		call	_ZN10KSemaphore15semCloseHandlerEv@plt
 1276      E7800000 
 1277              	.LVL89:
 167:src/Riscv.cpp ****                 case KConsole::CONSOLE_GETC:
 1278              		.loc 1 167 21 is_stmt 1
 1279 05c4 6FF05FF6 		j	.L46
 1280              	.L50:
 168:src/Riscv.cpp ****                     KConsole::getcHandler();
 1281              		.loc 1 168 17
 169:src/Riscv.cpp ****                     break;
 1282              		.loc 1 169 21
 169:src/Riscv.cpp ****                     break;
 1283              		.loc 1 169 42 is_stmt 0
 1284 05c8 97000000 		call	_ZN8KConsole11getcHandlerEv@plt
 1284      E7800000 
 1285              	.LVL90:
 170:src/Riscv.cpp ****                 case KConsole::CONSOLE_PUTC:
 1286              		.loc 1 170 21 is_stmt 1
 1287 05d0 6FF09FF5 		j	.L46
 1288              	.L49:
 171:src/Riscv.cpp ****                     KConsole::putcHandler();
 1289              		.loc 1 171 17
 172:src/Riscv.cpp ****                     break;
 1290              		.loc 1 172 21
 172:src/Riscv.cpp ****                     break;
 1291              		.loc 1 172 42 is_stmt 0
 1292 05d4 97000000 		call	_ZN8KConsole11putcHandlerEv@plt
 1292      E7800000 
 1293              	.LVL91:
 173:src/Riscv.cpp ****                 case KConsole::CONSOLE_GET_CHAR:
 1294              		.loc 1 173 21 is_stmt 1
 1295 05dc 6FF0DFF4 		j	.L46
 1296              	.L47:
 174:src/Riscv.cpp ****                     KConsole::getCharHandler();
 1297              		.loc 1 174 17
 175:src/Riscv.cpp ****                     break;
 1298              		.loc 1 175 21
 175:src/Riscv.cpp ****                     break;
 1299              		.loc 1 175 45 is_stmt 0
 1300 05e0 97000000 		call	_ZN8KConsole14getCharHandlerEv@plt
 1300      E7800000 
 1301              	.LVL92:
 176:src/Riscv.cpp ****             }
 1302              		.loc 1 176 21 is_stmt 1
 1303 05e8 6FF01FF4 		j	.L46
 1304              	.LBE84:
GAS LISTING /tmp/cctEHc8V.s 			page 38


 1305              	.LBE88:
 1306              	.LBE90:
 1307              		.cfi_endproc
 1308              	.LFE32:
 1310              		.globl	_ZN5Riscv12finishSystemE
 1311              		.globl	_ZN5Riscv9totalTimeE
 1312              		.bss
 1313              		.align	3
 1314              		.set	.LANCHOR0,. + 0
 1317              	_ZN5Riscv12finishSystemE:
 1318 0000 00       		.zero	1
 1319 0001 00000000 		.zero	7
 1319      000000
 1322              	_ZN5Riscv9totalTimeE:
 1323 0008 00000000 		.zero	8
 1323      00000000 
 1324              		.text
 1325              	.Letext0:
 1326              		.file 4 "src/../h/../lib/hw.h"
 1327              		.file 5 "src/../h/MemoryAllocator.hpp"
 1328              		.file 6 "src/../h/KSemaphore.hpp"
 1329              		.file 7 "src/../h/SleepPCBList.hpp"
 1330              		.file 8 "src/../h/KConsole.hpp"
 1331              		.file 9 "src/../h/Tests.hpp"
 1332              		.file 10 "src/../test/userMain.hpp"
 1333              		.file 11 "src/../h/../test/../h/syscall_c.h"
 1334              		.file 12 "src/../h/../test/printing.hpp"
 5993              		.align	3
 5996              	DW.ref.__gxx_personality_v0:
 5997 0000 00000000 		.dword	__gxx_personality_v0
 5997      00000000 
 5998              		.ident	"GCC: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0"
 5999              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/cctEHc8V.s 			page 39


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Riscv.cpp
     /tmp/cctEHc8V.s:9      .text:0000000000000000 _ZN5Riscv14myTestsWrapperEPv
     /tmp/cctEHc8V.s:13     .text:0000000000000000 .L0 
     /tmp/cctEHc8V.s:15     .text:0000000000000000 .L0 
     /tmp/cctEHc8V.s:16     .text:0000000000000004 .L0 
     /tmp/cctEHc8V.s:19     .text:000000000000000c .L0 
     /tmp/cctEHc8V.s:20     .text:000000000000000c .L0 
     /tmp/cctEHc8V.s:22     .text:0000000000000010 .L0 
     /tmp/cctEHc8V.s:24     .text:0000000000000010 .L0 
     /tmp/cctEHc8V.s:25     .text:0000000000000010 .L0 
     /tmp/cctEHc8V.s:28     .text:0000000000000018 .L0 
     /tmp/cctEHc8V.s:29     .text:000000000000001c .L0 
     /tmp/cctEHc8V.s:31     .text:0000000000000020 .L0 
     /tmp/cctEHc8V.s:32     .text:0000000000000020 .L0 
     /tmp/cctEHc8V.s:34     .text:0000000000000024 .L0 
     /tmp/cctEHc8V.s:36     .text:0000000000000028 .L0 
     /tmp/cctEHc8V.s:42     .text:0000000000000028 _ZN5Riscv10initSystemEv
     /tmp/cctEHc8V.s:45     .text:0000000000000028 .L0 
     /tmp/cctEHc8V.s:46     .text:0000000000000028 .L0 
     /tmp/cctEHc8V.s:47     .text:000000000000002c .L0 
     /tmp/cctEHc8V.s:50     .text:0000000000000034 .L0 
     /tmp/cctEHc8V.s:51     .text:0000000000000034 .L0 
     /tmp/cctEHc8V.s:53     .text:0000000000000038 .L0 
     /tmp/cctEHc8V.s:55     .text:0000000000000038 .L0 
     /tmp/cctEHc8V.s:56     .text:0000000000000038 .L0 
     /tmp/cctEHc8V.s:62     .text:0000000000000040 .L0 
  src/../h/Riscv.hpp:138    .text:0000000000000040 .L0 
     /tmp/cctEHc8V.s:72     .text:0000000000000044 .L0 
     /tmp/cctEHc8V.s:73     .text:0000000000000044 .L0 
     /tmp/cctEHc8V.s:76     .text:000000000000004c .L0 
     /tmp/cctEHc8V.s:77     .text:000000000000004c .L0 
     /tmp/cctEHc8V.s:80     .text:0000000000000054 .L0 
     /tmp/cctEHc8V.s:81     .text:0000000000000058 .L0 
     /tmp/cctEHc8V.s:83     .text:000000000000005c .L0 
     /tmp/cctEHc8V.s:84     .text:000000000000005c .L0 
     /tmp/cctEHc8V.s:86     .text:0000000000000060 .L0 
     /tmp/cctEHc8V.s:88     .text:0000000000000064 .L0 
     /tmp/cctEHc8V.s:94     .text:0000000000000064 _ZN5Riscv16enableInterruptsEv
     /tmp/cctEHc8V.s:97     .text:0000000000000064 .L0 
     /tmp/cctEHc8V.s:98     .text:0000000000000064 .L0 
     /tmp/cctEHc8V.s:99     .text:0000000000000068 .L0 
     /tmp/cctEHc8V.s:101    .text:000000000000006c .L0 
     /tmp/cctEHc8V.s:103    .text:0000000000000070 .L0 
     /tmp/cctEHc8V.s:108    .text:0000000000000070 .L0 
     /tmp/cctEHc8V.s:109    .text:0000000000000070 .L0 
     /tmp/cctEHc8V.s:110    .text:0000000000000070 .L0 
     /tmp/cctEHc8V.s:120    .text:0000000000000078 .L0 
     /tmp/cctEHc8V.s:121    .text:000000000000007c .L0 
     /tmp/cctEHc8V.s:122    .text:000000000000007c .L0 
     /tmp/cctEHc8V.s:124    .text:0000000000000080 .L0 
     /tmp/cctEHc8V.s:126    .text:0000000000000084 .L0 
     /tmp/cctEHc8V.s:132    .text:0000000000000084 _ZN5Riscv17disableInterruptsEv
     /tmp/cctEHc8V.s:135    .text:0000000000000084 .L0 
     /tmp/cctEHc8V.s:136    .text:0000000000000084 .L0 
     /tmp/cctEHc8V.s:137    .text:0000000000000088 .L0 
     /tmp/cctEHc8V.s:139    .text:000000000000008c .L0 
GAS LISTING /tmp/cctEHc8V.s 			page 40


     /tmp/cctEHc8V.s:141    .text:0000000000000090 .L0 
     /tmp/cctEHc8V.s:146    .text:0000000000000090 .L0 
     /tmp/cctEHc8V.s:147    .text:0000000000000090 .L0 
     /tmp/cctEHc8V.s:148    .text:0000000000000090 .L0 
     /tmp/cctEHc8V.s:158    .text:0000000000000098 .L0 
     /tmp/cctEHc8V.s:159    .text:000000000000009c .L0 
     /tmp/cctEHc8V.s:160    .text:000000000000009c .L0 
     /tmp/cctEHc8V.s:162    .text:00000000000000a0 .L0 
     /tmp/cctEHc8V.s:164    .text:00000000000000a4 .L0 
     /tmp/cctEHc8V.s:170    .text:00000000000000a4 _ZN5Riscv9endSystemEv
     /tmp/cctEHc8V.s:173    .text:00000000000000a4 .L0 
     /tmp/cctEHc8V.s:174    .text:00000000000000a4 .L0 
     /tmp/cctEHc8V.s:175    .text:00000000000000a8 .L0 
     /tmp/cctEHc8V.s:178    .text:00000000000000b0 .L0 
     /tmp/cctEHc8V.s:179    .text:00000000000000b0 .L0 
     /tmp/cctEHc8V.s:181    .text:00000000000000b4 .L0 
     /tmp/cctEHc8V.s:183    .text:00000000000000b4 .L0 
     /tmp/cctEHc8V.s:184    .text:00000000000000b4 .L0 
     /tmp/cctEHc8V.s:187    .text:00000000000000bc .L0 
     /tmp/cctEHc8V.s:188    .text:00000000000000c0 .L0 
     /tmp/cctEHc8V.s:190    .text:00000000000000c4 .L0 
     /tmp/cctEHc8V.s:191    .text:00000000000000c4 .L0 
     /tmp/cctEHc8V.s:193    .text:00000000000000c8 .L0 
     /tmp/cctEHc8V.s:195    .text:00000000000000cc .L0 
     /tmp/cctEHc8V.s:201    .text:00000000000000cc _ZN5Riscv10popSppSpieEv
     /tmp/cctEHc8V.s:204    .text:00000000000000cc .L0 
     /tmp/cctEHc8V.s:205    .text:00000000000000cc .L0 
     /tmp/cctEHc8V.s:206    .text:00000000000000d0 .L0 
     /tmp/cctEHc8V.s:208    .text:00000000000000d4 .L0 
     /tmp/cctEHc8V.s:210    .text:00000000000000d8 .L0 
     /tmp/cctEHc8V.s:212    .text:00000000000000d8 .L0 
       src/Riscv.cpp:41     .text:00000000000000d8 .L0 
     /tmp/cctEHc8V.s:218    .text:00000000000000dc .L0 
       src/Riscv.cpp:42     .text:00000000000000dc .L0 
     /tmp/cctEHc8V.s:224    .text:00000000000000e0 .L0 
     /tmp/cctEHc8V.s:225    .text:00000000000000e4 .L0 
     /tmp/cctEHc8V.s:226    .text:00000000000000e4 .L0 
     /tmp/cctEHc8V.s:228    .text:00000000000000e8 .L0 
     /tmp/cctEHc8V.s:230    .text:00000000000000ec .L0 
     /tmp/cctEHc8V.s:241    .text:00000000000000ec _ZN5Riscv10kernelMainEv
     /tmp/cctEHc8V.s:244    .text:00000000000000ec .L0 
     /tmp/cctEHc8V.s:5996   .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/cctEHc8V.s:247    .text:00000000000000ec .L0 
     /tmp/cctEHc8V.s:248    .text:00000000000000f0 .L0 
     /tmp/cctEHc8V.s:253    .text:0000000000000100 .L0 
     /tmp/cctEHc8V.s:254    .text:0000000000000100 .L0 
     /tmp/cctEHc8V.s:255    .text:0000000000000100 .L0 
     /tmp/cctEHc8V.s:256    .text:0000000000000100 .L0 
     /tmp/cctEHc8V.s:258    .text:0000000000000104 .L0 
     /tmp/cctEHc8V.s:261    .text:0000000000000104 .L0 
     /tmp/cctEHc8V.s:262    .text:0000000000000104 .L0 
     /tmp/cctEHc8V.s:265    .text:000000000000010c .L0 
     /tmp/cctEHc8V.s:266    .text:000000000000010c .L0 
     /tmp/cctEHc8V.s:271    .text:000000000000011c .L0 
     /tmp/cctEHc8V.s:285    .text:0000000000000148 .L0 
     /tmp/cctEHc8V.s:286    .text:0000000000000148 .L0 
     /tmp/cctEHc8V.s:291    .text:0000000000000154 .L0 
GAS LISTING /tmp/cctEHc8V.s 			page 41


     /tmp/cctEHc8V.s:292    .text:0000000000000154 .L0 
     /tmp/cctEHc8V.s:296    .text:000000000000015c .L0 
     /tmp/cctEHc8V.s:297    .text:000000000000015c .L0 
     /tmp/cctEHc8V.s:298    .text:000000000000015c .L0 
     /tmp/cctEHc8V.s:302    .text:0000000000000168 .L0 
     /tmp/cctEHc8V.s:304    .text:000000000000016c .L0 
     /tmp/cctEHc8V.s:305    .text:000000000000016c .L0 
     /tmp/cctEHc8V.s:308    .text:0000000000000174 .L0 
     /tmp/cctEHc8V.s:311    .text:0000000000000178 .L0 
     /tmp/cctEHc8V.s:312    .text:0000000000000178 .L0 
     /tmp/cctEHc8V.s:315    .text:0000000000000184 .L0 
     /tmp/cctEHc8V.s:316    .text:0000000000000184 .L0 
     /tmp/cctEHc8V.s:321    .text:0000000000000194 .L0 
     /tmp/cctEHc8V.s:322    .text:0000000000000194 .L0 
     /tmp/cctEHc8V.s:323    .text:0000000000000194 .L0 
     /tmp/cctEHc8V.s:328    .text:00000000000001a8 .L0 
     /tmp/cctEHc8V.s:330    .text:00000000000001ac .L0 
     /tmp/cctEHc8V.s:331    .text:00000000000001ac .L0 
     /tmp/cctEHc8V.s:335    .text:00000000000001b4 .L0 
     /tmp/cctEHc8V.s:338    .text:00000000000001b8 .L0 
     /tmp/cctEHc8V.s:339    .text:00000000000001b8 .L0 
     /tmp/cctEHc8V.s:342    .text:00000000000001c0 .L0 
     /tmp/cctEHc8V.s:343    .text:00000000000001c0 .L0 
     /tmp/cctEHc8V.s:346    .text:00000000000001c8 .L0 
     /tmp/cctEHc8V.s:347    .text:00000000000001cc .L0 
     /tmp/cctEHc8V.s:348    .text:00000000000001cc .L0 
     /tmp/cctEHc8V.s:350    .text:00000000000001d0 .L0 
     /tmp/cctEHc8V.s:351    .text:00000000000001d0 .L0 
     /tmp/cctEHc8V.s:353    .text:00000000000001d4 .L0 
     /tmp/cctEHc8V.s:356    .text:00000000000001d8 .L0 
     /tmp/cctEHc8V.s:358    .text:00000000000001dc .L0 
     /tmp/cctEHc8V.s:361    .text:00000000000001e0 .L0 
     /tmp/cctEHc8V.s:364    .text:00000000000001e4 .L0 
     /tmp/cctEHc8V.s:372    .text:00000000000001fc .L0 
     /tmp/cctEHc8V.s:402    .text:00000000000001fc _ZN5Riscv15userMainWrapperEPv
     /tmp/cctEHc8V.s:405    .text:00000000000001fc .L0 
     /tmp/cctEHc8V.s:406    .text:00000000000001fc .L0 
     /tmp/cctEHc8V.s:407    .text:0000000000000200 .L0 
     /tmp/cctEHc8V.s:410    .text:0000000000000208 .L0 
     /tmp/cctEHc8V.s:411    .text:0000000000000208 .L0 
     /tmp/cctEHc8V.s:413    .text:000000000000020c .L0 
     /tmp/cctEHc8V.s:415    .text:000000000000020c .L0 
     /tmp/cctEHc8V.s:416    .text:000000000000020c .L0 
     /tmp/cctEHc8V.s:419    .text:0000000000000214 .L0 
     /tmp/cctEHc8V.s:420    .text:0000000000000218 .L0 
     /tmp/cctEHc8V.s:422    .text:000000000000021c .L0 
     /tmp/cctEHc8V.s:423    .text:000000000000021c .L0 
     /tmp/cctEHc8V.s:425    .text:0000000000000220 .L0 
     /tmp/cctEHc8V.s:427    .text:0000000000000224 .L0 
     /tmp/cctEHc8V.s:433    .text:0000000000000224 _ZN5Riscv22disableTimerInterruptsEv
     /tmp/cctEHc8V.s:436    .text:0000000000000224 .L0 
     /tmp/cctEHc8V.s:437    .text:0000000000000224 .L0 
     /tmp/cctEHc8V.s:438    .text:0000000000000228 .L0 
     /tmp/cctEHc8V.s:440    .text:000000000000022c .L0 
     /tmp/cctEHc8V.s:442    .text:0000000000000230 .L0 
     /tmp/cctEHc8V.s:445    .text:0000000000000230 .L0 
     /tmp/cctEHc8V.s:446    .text:0000000000000230 .L0 
GAS LISTING /tmp/cctEHc8V.s 			page 42


     /tmp/cctEHc8V.s:447    .text:0000000000000230 .L0 
     /tmp/cctEHc8V.s:454    .text:0000000000000238 .L0 
     /tmp/cctEHc8V.s:455    .text:000000000000023c .L0 
     /tmp/cctEHc8V.s:456    .text:000000000000023c .L0 
     /tmp/cctEHc8V.s:458    .text:0000000000000240 .L0 
     /tmp/cctEHc8V.s:460    .text:0000000000000244 .L0 
     /tmp/cctEHc8V.s:466    .text:0000000000000244 _ZN5Riscv9idleRiscvEPv
     /tmp/cctEHc8V.s:469    .text:0000000000000244 .L0 
     /tmp/cctEHc8V.s:471    .text:0000000000000244 .L0 
     /tmp/cctEHc8V.s:472    .text:0000000000000248 .L0 
     /tmp/cctEHc8V.s:474    .text:000000000000024c .L0 
     /tmp/cctEHc8V.s:476    .text:0000000000000250 .L0 
     /tmp/cctEHc8V.s:479    .text:0000000000000250 .L0 
     /tmp/cctEHc8V.s:480    .text:0000000000000250 .L0 
     /tmp/cctEHc8V.s:481    .text:0000000000000254 .L0 
     /tmp/cctEHc8V.s:487    .text:0000000000000254 _ZN5Riscv13w_a0_sscratchEv
     /tmp/cctEHc8V.s:490    .text:0000000000000254 .L0 
     /tmp/cctEHc8V.s:491    .text:0000000000000254 .L0 
     /tmp/cctEHc8V.s:492    .text:0000000000000258 .L0 
     /tmp/cctEHc8V.s:494    .text:000000000000025c .L0 
     /tmp/cctEHc8V.s:496    .text:0000000000000260 .L0 
     /tmp/cctEHc8V.s:498    .text:0000000000000260 .L0 
     /tmp/cctEHc8V.s:499    .text:0000000000000260 .L0 
       src/Riscv.cpp:239    .text:0000000000000260 .L0 
     /tmp/cctEHc8V.s:506    .text:0000000000000264 .L0 
     /tmp/cctEHc8V.s:508    .text:0000000000000264 .L0 
       src/Riscv.cpp:240    .text:0000000000000274 .L0 
     /tmp/cctEHc8V.s:517    .text:0000000000000278 .L0 
       src/Riscv.cpp:241    .text:0000000000000278 .L0 
     /tmp/cctEHc8V.s:522    .text:000000000000027c .L0 
       src/Riscv.cpp:242    .text:000000000000027c .L0 
     /tmp/cctEHc8V.s:528    .text:0000000000000280 .L0 
     /tmp/cctEHc8V.s:529    .text:0000000000000284 .L0 
     /tmp/cctEHc8V.s:530    .text:0000000000000284 .L0 
     /tmp/cctEHc8V.s:532    .text:0000000000000288 .L0 
     /tmp/cctEHc8V.s:534    .text:000000000000028c .L0 
     /tmp/cctEHc8V.s:540    .text:000000000000028c _ZN5Riscv14changePrivModeEv
     /tmp/cctEHc8V.s:543    .text:000000000000028c .L0 
     /tmp/cctEHc8V.s:544    .text:000000000000028c .L0 
     /tmp/cctEHc8V.s:545    .text:0000000000000290 .L0 
     /tmp/cctEHc8V.s:547    .text:0000000000000294 .L0 
     /tmp/cctEHc8V.s:549    .text:0000000000000298 .L0 
     /tmp/cctEHc8V.s:551    .text:0000000000000298 .L0 
     /tmp/cctEHc8V.s:552    .text:0000000000000298 .L0 
     /tmp/cctEHc8V.s:556    .text:00000000000002a8 .L0 
     /tmp/cctEHc8V.s:561    .text:00000000000002ac .L0 
     /tmp/cctEHc8V.s:562    .text:00000000000002ac .L0 
     /tmp/cctEHc8V.s:563    .text:00000000000002ac .L0 
     /tmp/cctEHc8V.s:574    .text:00000000000002b4 .L0 
     /tmp/cctEHc8V.s:575    .text:00000000000002b8 .L0 
     /tmp/cctEHc8V.s:576    .text:00000000000002b8 .L0 
     /tmp/cctEHc8V.s:577    .text:00000000000002b8 .L0 
     /tmp/cctEHc8V.s:579    .text:00000000000002bc .L0 
     /tmp/cctEHc8V.s:582    .text:00000000000002c0 .L0 
     /tmp/cctEHc8V.s:587    .text:00000000000002c0 .L0 
     /tmp/cctEHc8V.s:588    .text:00000000000002c0 .L0 
     /tmp/cctEHc8V.s:589    .text:00000000000002c0 .L0 
GAS LISTING /tmp/cctEHc8V.s 			page 43


     /tmp/cctEHc8V.s:599    .text:00000000000002c8 .L0 
     /tmp/cctEHc8V.s:600    .text:00000000000002cc .L0 
     /tmp/cctEHc8V.s:617    .text:00000000000002cc _ZN5Riscv20handleSupervisorTrapEv
     /tmp/cctEHc8V.s:620    .text:00000000000002cc .L0 
     /tmp/cctEHc8V.s:621    .text:00000000000002cc .L0 
     /tmp/cctEHc8V.s:622    .text:00000000000002d0 .L0 
     /tmp/cctEHc8V.s:626    .text:00000000000002dc .L0 
     /tmp/cctEHc8V.s:627    .text:00000000000002dc .L0 
     /tmp/cctEHc8V.s:628    .text:00000000000002dc .L0 
     /tmp/cctEHc8V.s:630    .text:00000000000002e0 .L0 
     /tmp/cctEHc8V.s:632    .text:00000000000002e0 .L0 
       src/Riscv.cpp:47     .text:00000000000002e0 .L0 
     /tmp/cctEHc8V.s:641    .text:00000000000002f0 .L0 
     /tmp/cctEHc8V.s:642    .text:00000000000002f0 .L0 
       src/Riscv.cpp:48     .text:00000000000002fc .L0 
     /tmp/cctEHc8V.s:654    .text:0000000000000304 .L0 
     /tmp/cctEHc8V.s:655    .text:0000000000000304 .L0 
     /tmp/cctEHc8V.s:656    .text:0000000000000304 .L0 
  src/../h/Riscv.hpp:113    .text:0000000000000304 .L0 
     /tmp/cctEHc8V.s:664    .text:000000000000030c .L0 
     /tmp/cctEHc8V.s:665    .text:000000000000030c .L0 
     /tmp/cctEHc8V.s:671    .text:0000000000000310 .L0 
     /tmp/cctEHc8V.s:681    .text:0000000000000330 .L0 
     /tmp/cctEHc8V.s:682    .text:0000000000000330 .L0 
     /tmp/cctEHc8V.s:683    .text:0000000000000330 .L0 
     /tmp/cctEHc8V.s:684    .text:0000000000000330 .L0 
     /tmp/cctEHc8V.s:688    .text:0000000000000340 .L0 
     /tmp/cctEHc8V.s:689    .text:0000000000000340 .L0 
     /tmp/cctEHc8V.s:692    .text:0000000000000348 .L0 
     /tmp/cctEHc8V.s:697    .text:000000000000034c .L0 
     /tmp/cctEHc8V.s:701    .text:0000000000000354 .L0 
     /tmp/cctEHc8V.s:702    .text:0000000000000354 .L0 
     /tmp/cctEHc8V.s:703    .text:0000000000000354 .L0 
     /tmp/cctEHc8V.s:704    .text:0000000000000354 .L0 
     /tmp/cctEHc8V.s:708    .text:0000000000000364 .L0 
     /tmp/cctEHc8V.s:709    .text:0000000000000364 .L0 
     /tmp/cctEHc8V.s:712    .text:000000000000036c .L0 
     /tmp/cctEHc8V.s:717    .text:0000000000000370 .L0 
     /tmp/cctEHc8V.s:727    .text:0000000000000390 .L0 
     /tmp/cctEHc8V.s:729    .text:0000000000000390 .L0 
     /tmp/cctEHc8V.s:730    .text:0000000000000390 .L0 
     /tmp/cctEHc8V.s:731    .text:0000000000000390 .L0 
     /tmp/cctEHc8V.s:736    .text:000000000000039c .L0 
       src/Riscv.cpp:80     .text:000000000000039c .L0 
     /tmp/cctEHc8V.s:742    .text:00000000000003a0 .L0 
       src/Riscv.cpp:81     .text:00000000000003a0 .L0 
     /tmp/cctEHc8V.s:747    .text:00000000000003a4 .L0 
     /tmp/cctEHc8V.s:748    .text:00000000000003a4 .L0 
       src/Riscv.cpp:83     .text:00000000000003a4 .L0 
     /tmp/cctEHc8V.s:756    .text:00000000000003a8 .L0 
     /tmp/cctEHc8V.s:757    .text:00000000000003a8 .L0 
     /tmp/cctEHc8V.s:760    .text:00000000000003ac .L0 
     /tmp/cctEHc8V.s:763    .text:00000000000003b0 .L0 
     /tmp/cctEHc8V.s:764    .text:00000000000003b0 .L0 
     /tmp/cctEHc8V.s:768    .text:00000000000003bc .L0 
       src/Riscv.cpp:87     .text:00000000000003bc .L0 
     /tmp/cctEHc8V.s:774    .text:00000000000003c0 .L0 
GAS LISTING /tmp/cctEHc8V.s 			page 44


       src/Riscv.cpp:88     .text:00000000000003c0 .L0 
     /tmp/cctEHc8V.s:779    .text:00000000000003c4 .L0 
     /tmp/cctEHc8V.s:780    .text:00000000000003c4 .L0 
       src/Riscv.cpp:90     .text:00000000000003c4 .L0 
     /tmp/cctEHc8V.s:788    .text:00000000000003cc .L0 
     /tmp/cctEHc8V.s:789    .text:00000000000003cc .L0 
     /tmp/cctEHc8V.s:793    .text:00000000000003d8 .L0 
     /tmp/cctEHc8V.s:799    .text:00000000000003dc .L0 
     /tmp/cctEHc8V.s:800    .text:00000000000003dc .L0 
     /tmp/cctEHc8V.s:805    .text:00000000000003ec .L0 
     /tmp/cctEHc8V.s:810    .text:00000000000003f0 .L0 
     /tmp/cctEHc8V.s:812    .text:00000000000003f0 .L0 
     /tmp/cctEHc8V.s:815    .text:00000000000003f0 .L0 
     /tmp/cctEHc8V.s:816    .text:00000000000003f0 .L0 
     /tmp/cctEHc8V.s:817    .text:00000000000003f0 .L0 
  src/../h/Riscv.hpp:123    .text:00000000000003f0 .L0 
     /tmp/cctEHc8V.s:826    .text:00000000000003f8 .L0 
     /tmp/cctEHc8V.s:827    .text:00000000000003f8 .L0 
     /tmp/cctEHc8V.s:831    .text:00000000000003fc .L0 
     /tmp/cctEHc8V.s:835    .text:0000000000000400 .L0 
     /tmp/cctEHc8V.s:836    .text:0000000000000400 .L0 
     /tmp/cctEHc8V.s:837    .text:0000000000000400 .L0 
  src/../h/Riscv.hpp:196    .text:0000000000000400 .L0 
     /tmp/cctEHc8V.s:845    .text:0000000000000408 .L0 
     /tmp/cctEHc8V.s:846    .text:0000000000000408 .L0 
     /tmp/cctEHc8V.s:850    .text:000000000000040c .L0 
     /tmp/cctEHc8V.s:855    .text:0000000000000410 .L0 
     /tmp/cctEHc8V.s:856    .text:0000000000000410 .L0 
     /tmp/cctEHc8V.s:857    .text:0000000000000410 .L0 
     /tmp/cctEHc8V.s:867    .text:0000000000000418 .L0 
     /tmp/cctEHc8V.s:868    .text:0000000000000418 .L0 
     /tmp/cctEHc8V.s:873    .text:000000000000042c .L0 
     /tmp/cctEHc8V.s:874    .text:000000000000042c .L0 
     /tmp/cctEHc8V.s:879    .text:0000000000000440 .L0 
     /tmp/cctEHc8V.s:880    .text:0000000000000440 .L0 
     /tmp/cctEHc8V.s:883    .text:0000000000000448 .L0 
     /tmp/cctEHc8V.s:884    .text:0000000000000448 .L0 
     /tmp/cctEHc8V.s:891    .text:0000000000000454 .L0 
     /tmp/cctEHc8V.s:892    .text:0000000000000454 .L0 
     /tmp/cctEHc8V.s:897    .text:0000000000000458 .L0 
     /tmp/cctEHc8V.s:899    .text:000000000000045c .L0 
     /tmp/cctEHc8V.s:902    .text:0000000000000460 .L0 
     /tmp/cctEHc8V.s:903    .text:0000000000000460 .L0 
     /tmp/cctEHc8V.s:908    .text:0000000000000464 .L0 
  src/../h/Riscv.hpp:201    .text:0000000000000464 .L0 
     /tmp/cctEHc8V.s:918    .text:0000000000000468 .L0 
     /tmp/cctEHc8V.s:919    .text:0000000000000468 .L0 
     /tmp/cctEHc8V.s:924    .text:000000000000046c .L0 
  src/../h/Riscv.hpp:128    .text:000000000000046c .L0 
     /tmp/cctEHc8V.s:934    .text:0000000000000470 .L0 
     /tmp/cctEHc8V.s:935    .text:0000000000000470 .L0 
     /tmp/cctEHc8V.s:942    .text:0000000000000478 .L0 
     /tmp/cctEHc8V.s:943    .text:0000000000000478 .L0 
     /tmp/cctEHc8V.s:944    .text:000000000000047c .L0 
     /tmp/cctEHc8V.s:945    .text:000000000000047c .L0 
     /tmp/cctEHc8V.s:947    .text:0000000000000480 .L0 
     /tmp/cctEHc8V.s:948    .text:0000000000000480 .L0 
GAS LISTING /tmp/cctEHc8V.s 			page 45


     /tmp/cctEHc8V.s:950    .text:0000000000000484 .L0 
     /tmp/cctEHc8V.s:952    .text:0000000000000488 .L0 
     /tmp/cctEHc8V.s:955    .text:000000000000048c .L0 
     /tmp/cctEHc8V.s:960    .text:000000000000048c .L0 
     /tmp/cctEHc8V.s:961    .text:000000000000048c .L0 
     /tmp/cctEHc8V.s:963    .text:0000000000000490 .L0 
     /tmp/cctEHc8V.s:964    .text:0000000000000490 .L0 
     /tmp/cctEHc8V.s:974    .text:000000000000049c .L0 
     /tmp/cctEHc8V.s:975    .text:000000000000049c .L0 
     /tmp/cctEHc8V.s:979    .text:00000000000004ac .L0 
     /tmp/cctEHc8V.s:980    .text:00000000000004ac .L0 
     /tmp/cctEHc8V.s:989    .text:00000000000004b8 .L0 
     /tmp/cctEHc8V.s:990    .text:00000000000004b8 .L0 
     /tmp/cctEHc8V.s:991    .text:00000000000004b8 .L0 
     /tmp/cctEHc8V.s:992    .text:00000000000004b8 .L0 
     /tmp/cctEHc8V.s:996    .text:00000000000004c8 .L0 
     /tmp/cctEHc8V.s:997    .text:00000000000004c8 .L0 
     /tmp/cctEHc8V.s:1000   .text:00000000000004d0 .L0 
     /tmp/cctEHc8V.s:1004   .text:00000000000004d4 .L0 
     /tmp/cctEHc8V.s:1005   .text:00000000000004d4 .L0 
     /tmp/cctEHc8V.s:1007   .text:00000000000004d4 .L0 
     /tmp/cctEHc8V.s:1008   .text:00000000000004d4 .L0 
     /tmp/cctEHc8V.s:1009   .text:00000000000004d4 .L0 
       src/Riscv.cpp:125    .text:00000000000004d4 .L0 
     /tmp/cctEHc8V.s:1019   .text:00000000000004d8 .L0 
     /tmp/cctEHc8V.s:1020   .text:00000000000004d8 .L0 
     /tmp/cctEHc8V.s:1021   .text:00000000000004d8 .L0 
  src/../h/Riscv.hpp:123    .text:00000000000004d8 .L0 
     /tmp/cctEHc8V.s:1029   .text:00000000000004e0 .L0 
     /tmp/cctEHc8V.s:1030   .text:00000000000004e0 .L0 
     /tmp/cctEHc8V.s:1034   .text:00000000000004e4 .L0 
     /tmp/cctEHc8V.s:1036   .text:00000000000004e8 .L0 
     /tmp/cctEHc8V.s:1040   .text:00000000000004ec .L0 
     /tmp/cctEHc8V.s:1041   .text:00000000000004ec .L0 
     /tmp/cctEHc8V.s:1042   .text:00000000000004ec .L0 
  src/../h/Riscv.hpp:196    .text:00000000000004ec .L0 
     /tmp/cctEHc8V.s:1050   .text:00000000000004f4 .L0 
     /tmp/cctEHc8V.s:1051   .text:00000000000004f4 .L0 
     /tmp/cctEHc8V.s:1055   .text:00000000000004f8 .L0 
     /tmp/cctEHc8V.s:1057   .text:00000000000004fc .L0 
     /tmp/cctEHc8V.s:1141   .text:0000000000000520 .L0 
     /tmp/cctEHc8V.s:1142   .text:0000000000000520 .L0 
     /tmp/cctEHc8V.s:1143   .text:0000000000000520 .L0 
     /tmp/cctEHc8V.s:1147   .text:0000000000000528 .L0 
     /tmp/cctEHc8V.s:1148   .text:0000000000000528 .L0 
     /tmp/cctEHc8V.s:1149   .text:0000000000000528 .L0 
     /tmp/cctEHc8V.s:1154   .text:000000000000052c .L0 
  src/../h/Riscv.hpp:201    .text:000000000000052c .L0 
     /tmp/cctEHc8V.s:1164   .text:0000000000000530 .L0 
     /tmp/cctEHc8V.s:1165   .text:0000000000000530 .L0 
     /tmp/cctEHc8V.s:1170   .text:0000000000000534 .L0 
  src/../h/Riscv.hpp:128    .text:0000000000000534 .L0 
     /tmp/cctEHc8V.s:1180   .text:0000000000000538 .L0 
     /tmp/cctEHc8V.s:1181   .text:0000000000000538 .L0 
     /tmp/cctEHc8V.s:1187   .text:0000000000000540 .L0 
     /tmp/cctEHc8V.s:1188   .text:0000000000000540 .L0 
     /tmp/cctEHc8V.s:1194   .text:0000000000000544 .L0 
GAS LISTING /tmp/cctEHc8V.s 			page 46


     /tmp/cctEHc8V.s:1195   .text:0000000000000544 .L0 
     /tmp/cctEHc8V.s:1196   .text:0000000000000544 .L0 
     /tmp/cctEHc8V.s:1199   .text:000000000000054c .L0 
     /tmp/cctEHc8V.s:1202   .text:0000000000000550 .L0 
     /tmp/cctEHc8V.s:1203   .text:0000000000000550 .L0 
     /tmp/cctEHc8V.s:1204   .text:0000000000000550 .L0 
     /tmp/cctEHc8V.s:1207   .text:0000000000000558 .L0 
     /tmp/cctEHc8V.s:1210   .text:000000000000055c .L0 
     /tmp/cctEHc8V.s:1211   .text:000000000000055c .L0 
     /tmp/cctEHc8V.s:1212   .text:000000000000055c .L0 
     /tmp/cctEHc8V.s:1215   .text:0000000000000564 .L0 
     /tmp/cctEHc8V.s:1218   .text:0000000000000568 .L0 
     /tmp/cctEHc8V.s:1219   .text:0000000000000568 .L0 
     /tmp/cctEHc8V.s:1220   .text:0000000000000568 .L0 
     /tmp/cctEHc8V.s:1223   .text:0000000000000570 .L0 
     /tmp/cctEHc8V.s:1226   .text:0000000000000574 .L0 
     /tmp/cctEHc8V.s:1227   .text:0000000000000574 .L0 
     /tmp/cctEHc8V.s:1228   .text:0000000000000574 .L0 
     /tmp/cctEHc8V.s:1231   .text:000000000000057c .L0 
     /tmp/cctEHc8V.s:1234   .text:0000000000000580 .L0 
     /tmp/cctEHc8V.s:1235   .text:0000000000000580 .L0 
     /tmp/cctEHc8V.s:1236   .text:0000000000000580 .L0 
     /tmp/cctEHc8V.s:1239   .text:0000000000000588 .L0 
     /tmp/cctEHc8V.s:1242   .text:000000000000058c .L0 
     /tmp/cctEHc8V.s:1243   .text:000000000000058c .L0 
     /tmp/cctEHc8V.s:1244   .text:000000000000058c .L0 
     /tmp/cctEHc8V.s:1247   .text:0000000000000594 .L0 
     /tmp/cctEHc8V.s:1250   .text:0000000000000598 .L0 
     /tmp/cctEHc8V.s:1251   .text:0000000000000598 .L0 
     /tmp/cctEHc8V.s:1252   .text:0000000000000598 .L0 
     /tmp/cctEHc8V.s:1255   .text:00000000000005a0 .L0 
     /tmp/cctEHc8V.s:1258   .text:00000000000005a4 .L0 
     /tmp/cctEHc8V.s:1259   .text:00000000000005a4 .L0 
     /tmp/cctEHc8V.s:1260   .text:00000000000005a4 .L0 
     /tmp/cctEHc8V.s:1263   .text:00000000000005ac .L0 
     /tmp/cctEHc8V.s:1266   .text:00000000000005b0 .L0 
     /tmp/cctEHc8V.s:1267   .text:00000000000005b0 .L0 
     /tmp/cctEHc8V.s:1268   .text:00000000000005b0 .L0 
     /tmp/cctEHc8V.s:1271   .text:00000000000005b8 .L0 
     /tmp/cctEHc8V.s:1274   .text:00000000000005bc .L0 
     /tmp/cctEHc8V.s:1275   .text:00000000000005bc .L0 
     /tmp/cctEHc8V.s:1276   .text:00000000000005bc .L0 
     /tmp/cctEHc8V.s:1279   .text:00000000000005c4 .L0 
     /tmp/cctEHc8V.s:1282   .text:00000000000005c8 .L0 
     /tmp/cctEHc8V.s:1283   .text:00000000000005c8 .L0 
     /tmp/cctEHc8V.s:1284   .text:00000000000005c8 .L0 
     /tmp/cctEHc8V.s:1287   .text:00000000000005d0 .L0 
     /tmp/cctEHc8V.s:1290   .text:00000000000005d4 .L0 
     /tmp/cctEHc8V.s:1291   .text:00000000000005d4 .L0 
     /tmp/cctEHc8V.s:1292   .text:00000000000005d4 .L0 
     /tmp/cctEHc8V.s:1295   .text:00000000000005dc .L0 
     /tmp/cctEHc8V.s:1298   .text:00000000000005e0 .L0 
     /tmp/cctEHc8V.s:1299   .text:00000000000005e0 .L0 
     /tmp/cctEHc8V.s:1300   .text:00000000000005e0 .L0 
     /tmp/cctEHc8V.s:1303   .text:00000000000005e8 .L0 
     /tmp/cctEHc8V.s:1307   .text:00000000000005ec .L0 
     /tmp/cctEHc8V.s:1317   .bss:0000000000000000 _ZN5Riscv12finishSystemE
GAS LISTING /tmp/cctEHc8V.s 			page 47


     /tmp/cctEHc8V.s:1322   .bss:0000000000000008 _ZN5Riscv9totalTimeE
     /tmp/cctEHc8V.s:1314   .bss:0000000000000000 .LANCHOR0
     /tmp/cctEHc8V.s:1335   .text:00000000000005ec .L0 
     /tmp/cctEHc8V.s:56     .text:0000000000000038 .L0 
     /tmp/cctEHc8V.s:279    .text:0000000000000138 .L0 
     /tmp/cctEHc8V.s:313    .text:000000000000017c .L0 
     /tmp/cctEHc8V.s:235    .rodata.str1.8:0000000000000000 .LC0
     /tmp/cctEHc8V.s:316    .text:0000000000000184 .L0 
     /tmp/cctEHc8V.s:323    .text:0000000000000194 .L0 
     /tmp/cctEHc8V.s:508    .text:0000000000000264 .L0 
     /tmp/cctEHc8V.s:552    .text:0000000000000298 .L0 
     /tmp/cctEHc8V.s:638    .text:00000000000002e4 .L0 
     /tmp/cctEHc8V.s:642    .text:00000000000002f0 .L0 
     /tmp/cctEHc8V.s:611    .rodata.str1.8:0000000000000030 .LC3
     /tmp/cctEHc8V.s:684    .text:0000000000000330 .L0 
     /tmp/cctEHc8V.s:605    .rodata.str1.8:0000000000000008 .LC1
     /tmp/cctEHc8V.s:704    .text:0000000000000354 .L0 
     /tmp/cctEHc8V.s:731    .text:0000000000000390 .L0 
     /tmp/cctEHc8V.s:764    .text:00000000000003b0 .L0 
     /tmp/cctEHc8V.s:789    .text:00000000000003cc .L0 
     /tmp/cctEHc8V.s:868    .text:0000000000000418 .L0 
     /tmp/cctEHc8V.s:874    .text:000000000000042c .L0 
     /tmp/cctEHc8V.s:884    .text:0000000000000448 .L0 
     /tmp/cctEHc8V.s:976    .text:00000000000004a0 .L0 
     /tmp/cctEHc8V.s:608    .rodata.str1.8:0000000000000020 .LC2
     /tmp/cctEHc8V.s:992    .text:00000000000004b8 .L0 
     /tmp/cctEHc8V.s:1069   .rodata:0000000000000000 .L48
     /tmp/cctEHc8V.s:1061   .text:0000000000000508 .L0 
     /tmp/cctEHc8V.s:309    .text:0000000000000178 .L14
     /tmp/cctEHc8V.s:294    .text:000000000000015c .L15
     /tmp/cctEHc8V.s:336    .text:00000000000001b8 .L16
     /tmp/cctEHc8V.s:319    .text:0000000000000194 .L17
     /tmp/cctEHc8V.s:477    .text:0000000000000250 .L27
     /tmp/cctEHc8V.s:581    .text:00000000000002c0 .L32
     /tmp/cctEHc8V.s:570    .text:00000000000002b4 .L31
     /tmp/cctEHc8V.s:714    .text:0000000000000370 .L36
     /tmp/cctEHc8V.s:1002   .text:00000000000004d4 .L37
     /tmp/cctEHc8V.s:984    .text:00000000000004b8 .L38
     /tmp/cctEHc8V.s:694    .text:000000000000034c .L64
     /tmp/cctEHc8V.s:938    .text:0000000000000478 .L35
     /tmp/cctEHc8V.s:807    .text:00000000000003f0 .L42
     /tmp/cctEHc8V.s:795    .text:00000000000003dc .L45
     /tmp/cctEHc8V.s:968    .text:000000000000049c .L65
     /tmp/cctEHc8V.s:954    .text:000000000000048c .L66
     /tmp/cctEHc8V.s:900    .text:0000000000000460 .L44
     /tmp/cctEHc8V.s:1146   .text:0000000000000528 .L46
     /tmp/cctEHc8V.s:260    .text:0000000000000104 .LEHB0
     /tmp/cctEHc8V.s:242    .text:00000000000000ec .LFB33
     /tmp/cctEHc8V.s:274    .text:0000000000000128 .LEHE0
     /tmp/cctEHc8V.s:280    .text:0000000000000140 .LEHB1
     /tmp/cctEHc8V.s:283    .text:0000000000000148 .LEHE1
     /tmp/cctEHc8V.s:360    .text:00000000000001e0 .L19
     /tmp/cctEHc8V.s:287    .text:000000000000014c .LEHB2
     /tmp/cctEHc8V.s:333    .text:00000000000001b4 .LEHE2
     /tmp/cctEHc8V.s:368    .text:00000000000001f4 .LEHB3
     /tmp/cctEHc8V.s:371    .text:00000000000001fc .LEHE3
     /tmp/cctEHc8V.s:1139   .text:0000000000000520 .L62
GAS LISTING /tmp/cctEHc8V.s 			page 48


     /tmp/cctEHc8V.s:1189   .text:0000000000000544 .L61
     /tmp/cctEHc8V.s:1208   .text:000000000000055c .L60
     /tmp/cctEHc8V.s:1232   .text:0000000000000580 .L59
     /tmp/cctEHc8V.s:1224   .text:0000000000000574 .L58
     /tmp/cctEHc8V.s:1200   .text:0000000000000550 .L57
     /tmp/cctEHc8V.s:1216   .text:0000000000000568 .L56
     /tmp/cctEHc8V.s:1248   .text:0000000000000598 .L55
     /tmp/cctEHc8V.s:1272   .text:00000000000005bc .L54
     /tmp/cctEHc8V.s:1256   .text:00000000000005a4 .L53
     /tmp/cctEHc8V.s:1264   .text:00000000000005b0 .L52
     /tmp/cctEHc8V.s:1240   .text:000000000000058c .L51
     /tmp/cctEHc8V.s:1280   .text:00000000000005c8 .L50
     /tmp/cctEHc8V.s:1288   .text:00000000000005d4 .L49
     /tmp/cctEHc8V.s:1296   .text:00000000000005e0 .L47
     /tmp/cctEHc8V.s:3997   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cctEHc8V.s:5748   .debug_str:0000000000000db7 .LASF314
     /tmp/cctEHc8V.s:5378   .debug_str:00000000000000ef .LASF315
     /tmp/cctEHc8V.s:5380   .debug_str:00000000000000fd .LASF316
     /tmp/cctEHc8V.s:5      .text:0000000000000000 .Ltext0
     /tmp/cctEHc8V.s:1325   .text:00000000000005ec .Letext0
     /tmp/cctEHc8V.s:5342   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cctEHc8V.s:5388   .debug_str:000000000000015e .LASF0
     /tmp/cctEHc8V.s:5936   .debug_str:0000000000001437 .LASF1
     /tmp/cctEHc8V.s:5868   .debug_str:00000000000011df .LASF2
     /tmp/cctEHc8V.s:5826   .debug_str:00000000000010a0 .LASF4
     /tmp/cctEHc8V.s:5840   .debug_str:000000000000110a .LASF3
     /tmp/cctEHc8V.s:5536   .debug_str:00000000000006ef .LASF5
     /tmp/cctEHc8V.s:5628   .debug_str:00000000000009e2 .LASF6
     /tmp/cctEHc8V.s:5602   .debug_str:00000000000008fd .LASF7
     /tmp/cctEHc8V.s:5760   .debug_str:0000000000000eb2 .LASF8
     /tmp/cctEHc8V.s:5414   .debug_str:0000000000000239 .LASF9
     /tmp/cctEHc8V.s:5920   .debug_str:00000000000013b2 .LASF10
     /tmp/cctEHc8V.s:5542   .debug_str:0000000000000718 .LASF11
     /tmp/cctEHc8V.s:5468   .debug_str:000000000000044d .LASF12
     /tmp/cctEHc8V.s:5630   .debug_str:00000000000009e9 .LASF13
     /tmp/cctEHc8V.s:5548   .debug_str:000000000000073d .LASF14
     /tmp/cctEHc8V.s:5812   .debug_str:000000000000104f .LASF15
     /tmp/cctEHc8V.s:5552   .debug_str:0000000000000777 .LASF16
     /tmp/cctEHc8V.s:5518   .debug_str:0000000000000658 .LASF17
     /tmp/cctEHc8V.s:5450   .debug_str:0000000000000382 .LASF110
     /tmp/cctEHc8V.s:5562   .debug_str:00000000000007d4 .LASF21
     /tmp/cctEHc8V.s:5532   .debug_str:00000000000006d9 .LASF18
     /tmp/cctEHc8V.s:5786   .debug_str:0000000000000fa5 .LASF19
     /tmp/cctEHc8V.s:5822   .debug_str:000000000000108d .LASF20
     /tmp/cctEHc8V.s:5608   .debug_str:000000000000092a .LASF22
     /tmp/cctEHc8V.s:5914   .debug_str:000000000000135a .LASF23
     /tmp/cctEHc8V.s:5740   .debug_str:0000000000000d8d .LASF24
     /tmp/cctEHc8V.s:5564   .debug_str:00000000000007df .LASF25
     /tmp/cctEHc8V.s:5804   .debug_str:0000000000001015 .LASF26
     /tmp/cctEHc8V.s:5384   .debug_str:000000000000013e .LASF28
     /tmp/cctEHc8V.s:5660   .debug_str:0000000000000af5 .LASF27
     /tmp/cctEHc8V.s:5890   .debug_str:0000000000001289 .LASF29
     /tmp/cctEHc8V.s:5756   .debug_str:0000000000000ea2 .LASF30
     /tmp/cctEHc8V.s:5888   .debug_str:0000000000001271 .LASF31
     /tmp/cctEHc8V.s:5894   .debug_str:00000000000012ba .LASF32
     /tmp/cctEHc8V.s:5538   .debug_str:00000000000006f6 .LASF33
     /tmp/cctEHc8V.s:5496   .debug_str:0000000000000597 .LASF40
GAS LISTING /tmp/cctEHc8V.s 			page 49


     /tmp/cctEHc8V.s:5646   .debug_str:0000000000000a60 .LASF42
     /tmp/cctEHc8V.s:5988   .debug_str:000000000000160d .LASF34
     /tmp/cctEHc8V.s:5776   .debug_str:0000000000000f3d .LASF35
     /tmp/cctEHc8V.s:5398   .debug_str:00000000000001aa .LASF36
     /tmp/cctEHc8V.s:5918   .debug_str:000000000000138e .LASF37
     /tmp/cctEHc8V.s:5594   .debug_str:00000000000008d2 .LASF38
     /tmp/cctEHc8V.s:5644   .debug_str:0000000000000a41 .LASF39
     /tmp/cctEHc8V.s:5372   .debug_str:00000000000000c6 .LASF41
     /tmp/cctEHc8V.s:5814   .debug_str:000000000000105b .LASF43
     /tmp/cctEHc8V.s:5452   .debug_str:0000000000000388 .LASF44
     /tmp/cctEHc8V.s:5654   .debug_str:0000000000000abd .LASF45
     /tmp/cctEHc8V.s:5620   .debug_str:000000000000099a .LASF46
     /tmp/cctEHc8V.s:5886   .debug_str:0000000000001257 .LASF47
     /tmp/cctEHc8V.s:5960   .debug_str:0000000000001520 .LASF50
     /tmp/cctEHc8V.s:5912   .debug_str:0000000000001345 .LASF52
     /tmp/cctEHc8V.s:5800   .debug_str:0000000000001006 .LASF48
     /tmp/cctEHc8V.s:5408   .debug_str:0000000000000204 .LASF49
     /tmp/cctEHc8V.s:5490   .debug_str:000000000000054b .LASF51
     /tmp/cctEHc8V.s:5560   .debug_str:00000000000007c1 .LASF53
     /tmp/cctEHc8V.s:5530   .debug_str:00000000000006d2 .LASF54
     /tmp/cctEHc8V.s:5404   .debug_str:00000000000001e6 .LASF55
     /tmp/cctEHc8V.s:5940   .debug_str:0000000000001468 .LASF56
     /tmp/cctEHc8V.s:5810   .debug_str:000000000000103b .LASF57
     /tmp/cctEHc8V.s:5806   .debug_str:0000000000001020 .LASF58
     /tmp/cctEHc8V.s:5446   .debug_str:0000000000000364 .LASF59
     /tmp/cctEHc8V.s:5750   .debug_str:0000000000000e63 .LASF60
     /tmp/cctEHc8V.s:5346   .debug_str:000000000000000f .LASF61
     /tmp/cctEHc8V.s:5640   .debug_str:0000000000000a30 .LASF62
     /tmp/cctEHc8V.s:5610   .debug_str:0000000000000939 .LASF63
     /tmp/cctEHc8V.s:5896   .debug_str:00000000000012c4 .LASF107
     /tmp/cctEHc8V.s:5884   .debug_str:0000000000001250 .LASF64
     /tmp/cctEHc8V.s:5700   .debug_str:0000000000000c73 .LASF65
     /tmp/cctEHc8V.s:5604   .debug_str:0000000000000910 .LASF66
     /tmp/cctEHc8V.s:5866   .debug_str:00000000000011cc .LASF67
     /tmp/cctEHc8V.s:5670   .debug_str:0000000000000b8a .LASF68
     /tmp/cctEHc8V.s:5952   .debug_str:00000000000014db .LASF69
     /tmp/cctEHc8V.s:5842   .debug_str:000000000000111c .LASF70
     /tmp/cctEHc8V.s:5738   .debug_str:0000000000000d7b .LASF71
     /tmp/cctEHc8V.s:5978   .debug_str:00000000000015b6 .LASF72
     /tmp/cctEHc8V.s:5944   .debug_str:0000000000001484 .LASF73
     /tmp/cctEHc8V.s:5782   .debug_str:0000000000000f85 .LASF74
     /tmp/cctEHc8V.s:5464   .debug_str:0000000000000412 .LASF75
     /tmp/cctEHc8V.s:5406   .debug_str:00000000000001f9 .LASF76
     /tmp/cctEHc8V.s:5976   .debug_str:000000000000159e .LASF77
     /tmp/cctEHc8V.s:5598   .debug_str:00000000000008e9 .LASF78
     /tmp/cctEHc8V.s:5486   .debug_str:000000000000051e .LASF79
     /tmp/cctEHc8V.s:5870   .debug_str:00000000000011ed .LASF80
     /tmp/cctEHc8V.s:5574   .debug_str:0000000000000839 .LASF81
     /tmp/cctEHc8V.s:5546   .debug_str:0000000000000733 .LASF82
     /tmp/cctEHc8V.s:5506   .debug_str:00000000000005ec .LASF83
     /tmp/cctEHc8V.s:5824   .debug_str:0000000000001096 .LASF84
     /tmp/cctEHc8V.s:5616   .debug_str:0000000000000975 .LASF85
     /tmp/cctEHc8V.s:5582   .debug_str:000000000000088a .LASF86
     /tmp/cctEHc8V.s:5696   .debug_str:0000000000000c5c .LASF87
     /tmp/cctEHc8V.s:5834   .debug_str:00000000000010ee .LASF88
     /tmp/cctEHc8V.s:5516   .debug_str:0000000000000646 .LASF89
     /tmp/cctEHc8V.s:5764   .debug_str:0000000000000ee7 .LASF90
GAS LISTING /tmp/cctEHc8V.s 			page 50


     /tmp/cctEHc8V.s:5906   .debug_str:00000000000012fb .LASF91
     /tmp/cctEHc8V.s:5790   .debug_str:0000000000000fb9 .LASF92
     /tmp/cctEHc8V.s:5470   .debug_str:000000000000045c .LASF93
     /tmp/cctEHc8V.s:5392   .debug_str:0000000000000170 .LASF94
     /tmp/cctEHc8V.s:5762   .debug_str:0000000000000ec5 .LASF95
     /tmp/cctEHc8V.s:5968   .debug_str:0000000000001569 .LASF96
     /tmp/cctEHc8V.s:5394   .debug_str:0000000000000185 .LASF97
     /tmp/cctEHc8V.s:5360   .debug_str:0000000000000063 .LASF98
     /tmp/cctEHc8V.s:5864   .debug_str:00000000000011c4 .LASF99
     /tmp/cctEHc8V.s:5708   .debug_str:0000000000000ca5 .LASF100
     /tmp/cctEHc8V.s:5746   .debug_str:0000000000000dab .LASF101
     /tmp/cctEHc8V.s:5606   .debug_str:0000000000000917 .LASF102
     /tmp/cctEHc8V.s:5930   .debug_str:000000000000140a .LASF103
     /tmp/cctEHc8V.s:5362   .debug_str:000000000000006a .LASF104
     /tmp/cctEHc8V.s:5484   .debug_str:000000000000050b .LASF105
     /tmp/cctEHc8V.s:5434   .debug_str:0000000000000302 .LASF106
     /tmp/cctEHc8V.s:5838   .debug_str:0000000000001100 .LASF108
     /tmp/cctEHc8V.s:5658   .debug_str:0000000000000af0 .LASF109
     /tmp/cctEHc8V.s:5964   .debug_str:0000000000001539 .LASF111
     /tmp/cctEHc8V.s:5522   .debug_str:000000000000067e .LASF146
     /tmp/cctEHc8V.s:5682   .debug_str:0000000000000bd9 .LASF112
     /tmp/cctEHc8V.s:5390   .debug_str:000000000000016b .LASF113
     /tmp/cctEHc8V.s:5704   .debug_str:0000000000000c97 .LASF114
     /tmp/cctEHc8V.s:5718   .debug_str:0000000000000ce6 .LASF115
     /tmp/cctEHc8V.s:5694   .debug_str:0000000000000c49 .LASF116
     /tmp/cctEHc8V.s:5950   .debug_str:00000000000014d2 .LASF117
     /tmp/cctEHc8V.s:5514   .debug_str:000000000000063c .LASF118
     /tmp/cctEHc8V.s:5348   .debug_str:0000000000000023 .LASF119
     /tmp/cctEHc8V.s:5726   .debug_str:0000000000000d18 .LASF121
     /tmp/cctEHc8V.s:5352   .debug_str:0000000000000038 .LASF120
     /tmp/cctEHc8V.s:5420   .debug_str:000000000000026e .LASF122
     /tmp/cctEHc8V.s:5622   .debug_str:00000000000009a7 .LASF123
     /tmp/cctEHc8V.s:5528   .debug_str:00000000000006af .LASF124
     /tmp/cctEHc8V.s:5854   .debug_str:0000000000001171 .LASF125
     /tmp/cctEHc8V.s:5492   .debug_str:0000000000000552 .LASF126
     /tmp/cctEHc8V.s:5828   .debug_str:00000000000010a7 .LASF127
     /tmp/cctEHc8V.s:5460   .debug_str:00000000000003d5 .LASF128
     /tmp/cctEHc8V.s:5474   .debug_str:000000000000049b .LASF129
     /tmp/cctEHc8V.s:5752   .debug_str:0000000000000e6b .LASF130
     /tmp/cctEHc8V.s:5844   .debug_str:0000000000001122 .LASF131
     /tmp/cctEHc8V.s:5550   .debug_str:000000000000074d .LASF132
     /tmp/cctEHc8V.s:5962   .debug_str:0000000000001529 .LASF133
     /tmp/cctEHc8V.s:5986   .debug_str:00000000000015e5 .LASF134
     /tmp/cctEHc8V.s:5344   .debug_str:0000000000000000 .LASF135
     /tmp/cctEHc8V.s:5692   .debug_str:0000000000000c22 .LASF136
     /tmp/cctEHc8V.s:5418   .debug_str:0000000000000268 .LASF137
     /tmp/cctEHc8V.s:5652   .debug_str:0000000000000ab7 .LASF138
     /tmp/cctEHc8V.s:5712   .debug_str:0000000000000cbc .LASF139
     /tmp/cctEHc8V.s:5846   .debug_str:0000000000001133 .LASF140
     /tmp/cctEHc8V.s:5592   .debug_str:00000000000008c9 .LASF141
     /tmp/cctEHc8V.s:5576   .debug_str:000000000000084c .LASF142
     /tmp/cctEHc8V.s:5982   .debug_str:00000000000015d0 .LASF143
     /tmp/cctEHc8V.s:5754   .debug_str:0000000000000e9a .LASF208
     /tmp/cctEHc8V.s:5512   .debug_str:0000000000000636 .LASF144
     /tmp/cctEHc8V.s:5924   .debug_str:00000000000013c5 .LASF145
     /tmp/cctEHc8V.s:5656   .debug_str:0000000000000ad8 .LASF317
     /tmp/cctEHc8V.s:5922   .debug_str:00000000000013c0 .LASF147
GAS LISTING /tmp/cctEHc8V.s 			page 51


     /tmp/cctEHc8V.s:5554   .debug_str:000000000000078d .LASF148
     /tmp/cctEHc8V.s:5544   .debug_str:0000000000000727 .LASF149
     /tmp/cctEHc8V.s:5816   .debug_str:0000000000001072 .LASF150
     /tmp/cctEHc8V.s:5612   .debug_str:000000000000094d .LASF151
     /tmp/cctEHc8V.s:5638   .debug_str:0000000000000a27 .LASF152
     /tmp/cctEHc8V.s:5588   .debug_str:00000000000008ab .LASF153
     /tmp/cctEHc8V.s:5898   .debug_str:00000000000012d1 .LASF154
     /tmp/cctEHc8V.s:5438   .debug_str:000000000000031f .LASF155
     /tmp/cctEHc8V.s:5956   .debug_str:00000000000014fb .LASF156
     /tmp/cctEHc8V.s:5880   .debug_str:0000000000001233 .LASF157
     /tmp/cctEHc8V.s:5440   .debug_str:000000000000032f .LASF162
     /tmp/cctEHc8V.s:5614   .debug_str:000000000000095d .LASF164
     /tmp/cctEHc8V.s:5720   .debug_str:0000000000000cf4 .LASF158
     /tmp/cctEHc8V.s:5412   .debug_str:000000000000022d .LASF159
     /tmp/cctEHc8V.s:5714   .debug_str:0000000000000cc4 .LASF160
     /tmp/cctEHc8V.s:5774   .debug_str:0000000000000f30 .LASF161
     /tmp/cctEHc8V.s:5732   .debug_str:0000000000000d62 .LASF163
     /tmp/cctEHc8V.s:5428   .debug_str:00000000000002d3 .LASF165
     /tmp/cctEHc8V.s:5796   .debug_str:0000000000000feb .LASF166
     /tmp/cctEHc8V.s:5366   .debug_str:0000000000000095 .LASF167
     /tmp/cctEHc8V.s:5634   .debug_str:0000000000000a01 .LASF168
     /tmp/cctEHc8V.s:5572   .debug_str:000000000000081f .LASF169
     /tmp/cctEHc8V.s:5780   .debug_str:0000000000000f76 .LASF170
     /tmp/cctEHc8V.s:5666   .debug_str:0000000000000b4d .LASF171
     /tmp/cctEHc8V.s:5876   .debug_str:000000000000121d .LASF172
     /tmp/cctEHc8V.s:5882   .debug_str:0000000000001244 .LASF173
     /tmp/cctEHc8V.s:5794   .debug_str:0000000000000fdb .LASF174
     /tmp/cctEHc8V.s:5494   .debug_str:0000000000000587 .LASF175
     /tmp/cctEHc8V.s:5534   .debug_str:00000000000006e2 .LASF176
     /tmp/cctEHc8V.s:5350   .debug_str:000000000000002d .LASF177
     /tmp/cctEHc8V.s:5600   .debug_str:00000000000008f0 .LASF178
     /tmp/cctEHc8V.s:5788   .debug_str:0000000000000fae .LASF179
     /tmp/cctEHc8V.s:5900   .debug_str:00000000000012d7 .LASF180
     /tmp/cctEHc8V.s:5590   .debug_str:00000000000008be .LASF181
     /tmp/cctEHc8V.s:5400   .debug_str:00000000000001c1 .LASF182
     /tmp/cctEHc8V.s:5904   .debug_str:00000000000012f3 .LASF183
     /tmp/cctEHc8V.s:5690   .debug_str:0000000000000c0e .LASF184
     /tmp/cctEHc8V.s:5416   .debug_str:0000000000000249 .LASF185
     /tmp/cctEHc8V.s:5798   .debug_str:0000000000000ff4 .LASF186
     /tmp/cctEHc8V.s:5958   .debug_str:0000000000001503 .LASF187
     /tmp/cctEHc8V.s:5686   .debug_str:0000000000000beb .LASF188
     /tmp/cctEHc8V.s:5948   .debug_str:00000000000014b1 .LASF189
     /tmp/cctEHc8V.s:5476   .debug_str:00000000000004b0 .LASF190
     /tmp/cctEHc8V.s:5938   .debug_str:000000000000144a .LASF191
     /tmp/cctEHc8V.s:5808   .debug_str:0000000000001028 .LASF192
     /tmp/cctEHc8V.s:5382   .debug_str:0000000000000120 .LASF193
     /tmp/cctEHc8V.s:5892   .debug_str:00000000000012a5 .LASF194
     /tmp/cctEHc8V.s:5966   .debug_str:0000000000001549 .LASF195
     /tmp/cctEHc8V.s:5436   .debug_str:0000000000000316 .LASF196
     /tmp/cctEHc8V.s:5734   .debug_str:0000000000000d6b .LASF197
     /tmp/cctEHc8V.s:5448   .debug_str:0000000000000378 .LASF198
     /tmp/cctEHc8V.s:5856   .debug_str:000000000000118c .LASF199
     /tmp/cctEHc8V.s:5908   .debug_str:0000000000001313 .LASF200
     /tmp/cctEHc8V.s:5916   .debug_str:0000000000001366 .LASF202
     /tmp/cctEHc8V.s:5570   .debug_str:000000000000080a .LASF201
     /tmp/cctEHc8V.s:5422   .debug_str:000000000000028f .LASF203
     /tmp/cctEHc8V.s:5674   .debug_str:0000000000000b99 .LASF318
GAS LISTING /tmp/cctEHc8V.s 			page 52


     /tmp/cctEHc8V.s:5972   .debug_str:000000000000157f .LASF319
     /tmp/cctEHc8V.s:5852   .debug_str:000000000000116c .LASF204
     /tmp/cctEHc8V.s:5744   .debug_str:0000000000000da6 .LASF205
     /tmp/cctEHc8V.s:5396   .debug_str:00000000000001a2 .LASF206
     /tmp/cctEHc8V.s:5902   .debug_str:00000000000012ed .LASF207
     /tmp/cctEHc8V.s:5710   .debug_str:0000000000000cb4 .LASF209
     /tmp/cctEHc8V.s:5722   .debug_str:0000000000000d01 .LASF210
     /tmp/cctEHc8V.s:5504   .debug_str:00000000000005d8 .LASF211
     /tmp/cctEHc8V.s:5566   .debug_str:00000000000007eb .LASF212
     /tmp/cctEHc8V.s:5410   .debug_str:0000000000000219 .LASF213
     /tmp/cctEHc8V.s:5706   .debug_str:0000000000000ca0 .LASF214
     /tmp/cctEHc8V.s:5648   .debug_str:0000000000000a7e .LASF215
     /tmp/cctEHc8V.s:5374   .debug_str:00000000000000d0 .LASF216
     /tmp/cctEHc8V.s:5502   .debug_str:00000000000005bf .LASF217
     /tmp/cctEHc8V.s:5742   .debug_str:0000000000000d9a .LASF218
     /tmp/cctEHc8V.s:5860   .debug_str:00000000000011b0 .LASF219
     /tmp/cctEHc8V.s:5942   .debug_str:0000000000001470 .LASF220
     /tmp/cctEHc8V.s:5768   .debug_str:0000000000000efe .LASF221
     /tmp/cctEHc8V.s:5642   .debug_str:0000000000000a38 .LASF222
     /tmp/cctEHc8V.s:5818   .debug_str:0000000000001078 .LASF223
     /tmp/cctEHc8V.s:5676   .debug_str:0000000000000ba0 .LASF224
     /tmp/cctEHc8V.s:5820   .debug_str:0000000000001082 .LASF225
     /tmp/cctEHc8V.s:5402   .debug_str:00000000000001d7 .LASF226
     /tmp/cctEHc8V.s:5508   .debug_str:0000000000000602 .LASF227
     /tmp/cctEHc8V.s:5618   .debug_str:000000000000098b .LASF228
     /tmp/cctEHc8V.s:5728   .debug_str:0000000000000d39 .LASF229
     /tmp/cctEHc8V.s:5702   .debug_str:0000000000000c86 .LASF230
     /tmp/cctEHc8V.s:5624   .debug_str:00000000000009b2 .LASF231
     /tmp/cctEHc8V.s:5934   .debug_str:0000000000001427 .LASF232
     /tmp/cctEHc8V.s:5668   .debug_str:0000000000000b67 .LASF233
     /tmp/cctEHc8V.s:5432   .debug_str:00000000000002f9 .LASF234
     /tmp/cctEHc8V.s:5802   .debug_str:000000000000100f .LASF235
     /tmp/cctEHc8V.s:5376   .debug_str:00000000000000d7 .LASF236
     /tmp/cctEHc8V.s:5386   .debug_str:0000000000000156 .LASF237
     /tmp/cctEHc8V.s:5488   .debug_str:0000000000000531 .LASF238
     /tmp/cctEHc8V.s:5770   .debug_str:0000000000000f13 .LASF239
     /tmp/cctEHc8V.s:5466   .debug_str:000000000000042a .LASF240
     /tmp/cctEHc8V.s:5580   .debug_str:0000000000000877 .LASF241
     /tmp/cctEHc8V.s:5664   .debug_str:0000000000000b27 .LASF242
     /tmp/cctEHc8V.s:5848   .debug_str:000000000000113d .LASF243
     /tmp/cctEHc8V.s:5910   .debug_str:0000000000001321 .LASF244
     /tmp/cctEHc8V.s:5596   .debug_str:00000000000008e4 .LASF245
     /tmp/cctEHc8V.s:5688   .debug_str:0000000000000c01 .LASF246
     /tmp/cctEHc8V.s:5426   .debug_str:00000000000002c3 .LASF247
     /tmp/cctEHc8V.s:5946   .debug_str:000000000000149f .LASF248
     /tmp/cctEHc8V.s:5830   .debug_str:00000000000010bd .LASF249
     /tmp/cctEHc8V.s:5954   .debug_str:00000000000014ed .LASF250
     /tmp/cctEHc8V.s:5578   .debug_str:0000000000000854 .LASF251
     /tmp/cctEHc8V.s:5672   .debug_str:0000000000000b90 .LASF252
     /tmp/cctEHc8V.s:5568   .debug_str:00000000000007f7 .LASF253
     /tmp/cctEHc8V.s:5524   .debug_str:000000000000068a .LASF254
     /tmp/cctEHc8V.s:5368   .debug_str:00000000000000b1 .LASF255
     /tmp/cctEHc8V.s:5454   .debug_str:0000000000000396 .LASF256
     /tmp/cctEHc8V.s:5832   .debug_str:00000000000010e4 .LASF257
     /tmp/cctEHc8V.s:5370   .debug_str:00000000000000bb .LASF258
     /tmp/cctEHc8V.s:5354   .debug_str:0000000000000041 .LASF259
     /tmp/cctEHc8V.s:5500   .debug_str:00000000000005b3 .LASF260
GAS LISTING /tmp/cctEHc8V.s 			page 53


     /tmp/cctEHc8V.s:5874   .debug_str:0000000000001210 .LASF261
     /tmp/cctEHc8V.s:5498   .debug_str:00000000000005a7 .LASF262
     /tmp/cctEHc8V.s:5836   .debug_str:00000000000010f4 .LASF263
     /tmp/cctEHc8V.s:5456   .debug_str:00000000000003a1 .LASF264
     /tmp/cctEHc8V.s:5650   .debug_str:0000000000000a95 .LASF265
     /tmp/cctEHc8V.s:5584   .debug_str:0000000000000890 .LASF266
     /tmp/cctEHc8V.s:5850   .debug_str:000000000000114a .LASF267
     /tmp/cctEHc8V.s:5510   .debug_str:0000000000000624 .LASF268
     /tmp/cctEHc8V.s:5458   .debug_str:00000000000003b3 .LASF269
     /tmp/cctEHc8V.s:5558   .debug_str:00000000000007ae .LASF270
     /tmp/cctEHc8V.s:5472   .debug_str:0000000000000478 .LASF271
     /tmp/cctEHc8V.s:5430   .debug_str:00000000000002e6 .LASF272
     /tmp/cctEHc8V.s:5662   .debug_str:0000000000000b04 .LASF273
     /tmp/cctEHc8V.s:5778   .debug_str:0000000000000f5b .LASF274
     /tmp/cctEHc8V.s:5462   .debug_str:0000000000000403 .LASF275
     /tmp/cctEHc8V.s:5678   .debug_str:0000000000000ba9 .LASF276
     /tmp/cctEHc8V.s:5444   .debug_str:000000000000034b .LASF277
     /tmp/cctEHc8V.s:5928   .debug_str:00000000000013e0 .LASF278
     /tmp/cctEHc8V.s:5858   .debug_str:0000000000001198 .LASF279
     /tmp/cctEHc8V.s:5480   .debug_str:00000000000004c9 .LASF280
     /tmp/cctEHc8V.s:5526   .debug_str:000000000000069e .LASF281
     /tmp/cctEHc8V.s:5716   .debug_str:0000000000000cd4 .LASF282
     /tmp/cctEHc8V.s:5356   .debug_str:000000000000004c .LASF283
     /tmp/cctEHc8V.s:5684   .debug_str:0000000000000bde .LASF284
     /tmp/cctEHc8V.s:5680   .debug_str:0000000000000bc8 .LASF285
     /tmp/cctEHc8V.s:5980   .debug_str:00000000000015c4 .LASF286
     /tmp/cctEHc8V.s:5872   .debug_str:00000000000011f4 .LASF287
     /tmp/cctEHc8V.s:5984   .debug_str:00000000000015d9 .LASF288
     /tmp/cctEHc8V.s:5556   .debug_str:0000000000000792 .LASF289
     /tmp/cctEHc8V.s:5784   .debug_str:0000000000000f90 .LASF290
     /tmp/cctEHc8V.s:5482   .debug_str:00000000000004f2 .LASF291
     /tmp/cctEHc8V.s:541    .text:000000000000028c .LFB39
     /tmp/cctEHc8V.s:601    .text:00000000000002cc .LFE39
     /tmp/cctEHc8V.s:559    .text:00000000000002ac .LBB47
     /tmp/cctEHc8V.s:572    .text:00000000000002b4 .LBE47
     /tmp/cctEHc8V.s:5142   .debug_loc:0000000000000000 .LLST4
     /tmp/cctEHc8V.s:585    .text:00000000000002c0 .LBB49
     /tmp/cctEHc8V.s:597    .text:00000000000002c8 .LBE49
     /tmp/cctEHc8V.s:5151   .debug_loc:0000000000000026 .LLST5
     /tmp/cctEHc8V.s:488    .text:0000000000000254 .LFB38
     /tmp/cctEHc8V.s:535    .text:000000000000028c .LFE38
     /tmp/cctEHc8V.s:5970   .debug_str:0000000000001578 .LASF292
     /tmp/cctEHc8V.s:467    .text:0000000000000244 .LFB37
     /tmp/cctEHc8V.s:482    .text:0000000000000254 .LFE37
     /tmp/cctEHc8V.s:434    .text:0000000000000224 .LFB36
     /tmp/cctEHc8V.s:461    .text:0000000000000244 .LFE36
     /tmp/cctEHc8V.s:10     .text:0000000000000000 .LFB35
     /tmp/cctEHc8V.s:37     .text:0000000000000028 .LFE35
     /tmp/cctEHc8V.s:5160   .debug_loc:000000000000004c .LLST0
     /tmp/cctEHc8V.s:26     .text:0000000000000018 .LVL1
     /tmp/cctEHc8V.s:403    .text:00000000000001fc .LFB34
     /tmp/cctEHc8V.s:428    .text:0000000000000224 .LFE34
     /tmp/cctEHc8V.s:417    .text:0000000000000214 .LVL27
     /tmp/cctEHc8V.s:373    .text:00000000000001fc .LFE33
     /tmp/cctEHc8V.s:5424   .debug_str:00000000000002bb .LASF293
     /tmp/cctEHc8V.s:5174   .debug_loc:0000000000000085 .LLST3
     /tmp/cctEHc8V.s:263    .text:000000000000010c .LVL11
GAS LISTING /tmp/cctEHc8V.s 			page 54


     /tmp/cctEHc8V.s:268    .text:0000000000000118 .LVL12
     /tmp/cctEHc8V.s:273    .text:0000000000000128 .LVL13
     /tmp/cctEHc8V.s:282    .text:0000000000000148 .LVL14
     /tmp/cctEHc8V.s:289    .text:0000000000000154 .LVL15
     /tmp/cctEHc8V.s:293    .text:000000000000015c .LVL16
     /tmp/cctEHc8V.s:300    .text:0000000000000168 .LVL17
     /tmp/cctEHc8V.s:306    .text:0000000000000174 .LVL18
     /tmp/cctEHc8V.s:318    .text:0000000000000194 .LVL19
     /tmp/cctEHc8V.s:326    .text:00000000000001a8 .LVL20
     /tmp/cctEHc8V.s:332    .text:00000000000001b4 .LVL21
     /tmp/cctEHc8V.s:340    .text:00000000000001c0 .LVL22
     /tmp/cctEHc8V.s:344    .text:00000000000001c8 .LVL23
     /tmp/cctEHc8V.s:366    .text:00000000000001f0 .LVL25
     /tmp/cctEHc8V.s:370    .text:00000000000001fc .LVL26
     /tmp/cctEHc8V.s:618    .text:00000000000002cc .LFB32
     /tmp/cctEHc8V.s:1308   .text:00000000000005ec .LFE32
     /tmp/cctEHc8V.s:5730   .debug_str:0000000000000d5b .LASF294
     /tmp/cctEHc8V.s:5181   .debug_loc:00000000000000a8 .LLST6
     /tmp/cctEHc8V.s:5316   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/cctEHc8V.s:5758   .debug_str:0000000000000ead .LASF295
     /tmp/cctEHc8V.s:5632   .debug_str:00000000000009f9 .LASF296
     /tmp/cctEHc8V.s:813    .text:00000000000003f0 .LBB61
     /tmp/cctEHc8V.s:829    .text:00000000000003fc .LBE61
     /tmp/cctEHc8V.s:833    .text:0000000000000400 .LBB63
     /tmp/cctEHc8V.s:848    .text:000000000000040c .LBE63
     /tmp/cctEHc8V.s:853    .text:0000000000000410 .LBB65
     /tmp/cctEHc8V.s:865    .text:0000000000000418 .LBE65
     /tmp/cctEHc8V.s:5208   .debug_loc:000000000000012a .LLST10
     /tmp/cctEHc8V.s:887    .text:0000000000000454 .LBB67
     /tmp/cctEHc8V.s:895    .text:0000000000000458 .LBE67
     /tmp/cctEHc8V.s:5216   .debug_loc:000000000000014e .LLST11
     /tmp/cctEHc8V.s:905    .text:0000000000000464 .LBB69
     /tmp/cctEHc8V.s:916    .text:0000000000000468 .LBE69
     /tmp/cctEHc8V.s:5223   .debug_loc:0000000000000171 .LLST12
     /tmp/cctEHc8V.s:921    .text:000000000000046c .LBB71
     /tmp/cctEHc8V.s:932    .text:0000000000000470 .LBE71
     /tmp/cctEHc8V.s:5230   .debug_loc:0000000000000194 .LLST13
     /tmp/cctEHc8V.s:881    .text:0000000000000448 .LVL56
     /tmp/cctEHc8V.s:936    .text:0000000000000478 .LVL63
     /tmp/cctEHc8V.s:965    .text:0000000000000498 .LVL64
     /tmp/cctEHc8V.s:5237   .debug_loc:00000000000001b7 .LLST7
     /tmp/cctEHc8V.s:5358   .debug_str:0000000000000059 .LASF297
     /tmp/cctEHc8V.s:5248   .debug_loc:00000000000001ed .LLST8
     /tmp/cctEHc8V.s:5255   .debug_loc:0000000000000210 .LLST9
     /tmp/cctEHc8V.s:981    .text:00000000000004b4 .LVL66
     /tmp/cctEHc8V.s:801    .text:00000000000003e4 .LVL50
     /tmp/cctEHc8V.s:803    .text:00000000000003ec .LVL51
     /tmp/cctEHc8V.s:5266   .debug_loc:0000000000000246 .LLST14
     /tmp/cctEHc8V.s:1017   .text:00000000000004d8 .LBB76
     /tmp/cctEHc8V.s:1032   .text:00000000000004e4 .LBE76
     /tmp/cctEHc8V.s:1038   .text:00000000000004ec .LBB78
     /tmp/cctEHc8V.s:1053   .text:00000000000004f8 .LBE78
     /tmp/cctEHc8V.s:1151   .text:000000000000052c .LBB80
     /tmp/cctEHc8V.s:1162   .text:0000000000000530 .LBE80
     /tmp/cctEHc8V.s:5273   .debug_loc:0000000000000269 .LLST15
     /tmp/cctEHc8V.s:1167   .text:0000000000000534 .LBB82
     /tmp/cctEHc8V.s:1178   .text:0000000000000538 .LBE82
GAS LISTING /tmp/cctEHc8V.s 			page 55


     /tmp/cctEHc8V.s:5280   .debug_loc:000000000000028c .LLST16
     /tmp/cctEHc8V.s:1144   .text:0000000000000528 .LVL73
     /tmp/cctEHc8V.s:1182   .text:0000000000000540 .LVL78
     /tmp/cctEHc8V.s:1197   .text:000000000000054c .LVL79
     /tmp/cctEHc8V.s:1205   .text:0000000000000558 .LVL80
     /tmp/cctEHc8V.s:1213   .text:0000000000000564 .LVL81
     /tmp/cctEHc8V.s:1221   .text:0000000000000570 .LVL82
     /tmp/cctEHc8V.s:1229   .text:000000000000057c .LVL83
     /tmp/cctEHc8V.s:1237   .text:0000000000000588 .LVL84
     /tmp/cctEHc8V.s:1245   .text:0000000000000594 .LVL85
     /tmp/cctEHc8V.s:1253   .text:00000000000005a0 .LVL86
     /tmp/cctEHc8V.s:1261   .text:00000000000005ac .LVL87
     /tmp/cctEHc8V.s:1269   .text:00000000000005b8 .LVL88
     /tmp/cctEHc8V.s:1277   .text:00000000000005c4 .LVL89
     /tmp/cctEHc8V.s:1285   .text:00000000000005d0 .LVL90
     /tmp/cctEHc8V.s:1293   .text:00000000000005dc .LVL91
     /tmp/cctEHc8V.s:1301   .text:00000000000005e8 .LVL92
     /tmp/cctEHc8V.s:652    .text:0000000000000304 .LBB51
     /tmp/cctEHc8V.s:668    .text:0000000000000310 .LBE51
     /tmp/cctEHc8V.s:686    .text:0000000000000340 .LVL36
     /tmp/cctEHc8V.s:690    .text:0000000000000348 .LVL37
     /tmp/cctEHc8V.s:706    .text:0000000000000364 .LVL39
     /tmp/cctEHc8V.s:710    .text:000000000000036c .LVL40
     /tmp/cctEHc8V.s:994    .text:00000000000004c8 .LVL68
     /tmp/cctEHc8V.s:998    .text:00000000000004d0 .LVL69
     /tmp/cctEHc8V.s:202    .text:00000000000000cc .LFB31
     /tmp/cctEHc8V.s:231    .text:00000000000000ec .LFE31
     /tmp/cctEHc8V.s:133    .text:0000000000000084 .LFB30
     /tmp/cctEHc8V.s:165    .text:00000000000000a4 .LFE30
     /tmp/cctEHc8V.s:144    .text:0000000000000090 .LBB45
     /tmp/cctEHc8V.s:156    .text:0000000000000098 .LBE45
     /tmp/cctEHc8V.s:5287   .debug_loc:00000000000002af .LLST2
     /tmp/cctEHc8V.s:95     .text:0000000000000064 .LFB29
     /tmp/cctEHc8V.s:127    .text:0000000000000084 .LFE29
     /tmp/cctEHc8V.s:106    .text:0000000000000070 .LBB43
     /tmp/cctEHc8V.s:118    .text:0000000000000078 .LBE43
     /tmp/cctEHc8V.s:5295   .debug_loc:00000000000002d3 .LLST1
     /tmp/cctEHc8V.s:171    .text:00000000000000a4 .LFB28
     /tmp/cctEHc8V.s:196    .text:00000000000000cc .LFE28
     /tmp/cctEHc8V.s:185    .text:00000000000000bc .LVL10
     /tmp/cctEHc8V.s:43     .text:0000000000000028 .LFB27
     /tmp/cctEHc8V.s:89     .text:0000000000000064 .LFE27
     /tmp/cctEHc8V.s:58     .text:0000000000000040 .LBB41
     /tmp/cctEHc8V.s:70     .text:0000000000000044 .LBE41
     /tmp/cctEHc8V.s:74     .text:000000000000004c .LVL4
     /tmp/cctEHc8V.s:78     .text:0000000000000054 .LVL5
     /tmp/cctEHc8V.s:5736   .debug_str:0000000000000d76 .LASF320
     /tmp/cctEHc8V.s:5698   .debug_str:0000000000000c6e .LASF298
     /tmp/cctEHc8V.s:5478   .debug_str:00000000000004c3 .LASF299
     /tmp/cctEHc8V.s:5540   .debug_str:000000000000070c .LASF300
     /tmp/cctEHc8V.s:5862   .debug_str:00000000000011bc .LASF302
     /tmp/cctEHc8V.s:5772   .debug_str:0000000000000f23 .LASF301
     /tmp/cctEHc8V.s:5586   .debug_str:00000000000008a2 .LASF303
     /tmp/cctEHc8V.s:5724   .debug_str:0000000000000d0c .LASF304
     /tmp/cctEHc8V.s:5878   .debug_str:000000000000122b .LASF305
     /tmp/cctEHc8V.s:5520   .debug_str:000000000000066e .LASF306
     /tmp/cctEHc8V.s:5792   .debug_str:0000000000000fc8 .LASF307
GAS LISTING /tmp/cctEHc8V.s 			page 56


     /tmp/cctEHc8V.s:5766   .debug_str:0000000000000ef2 .LASF308
     /tmp/cctEHc8V.s:5442   .debug_str:000000000000033c .LASF321
     /tmp/cctEHc8V.s:5364   .debug_str:000000000000007d .LASF322
     /tmp/cctEHc8V.s:5932   .debug_str:000000000000141c .LASF309
     /tmp/cctEHc8V.s:5974   .debug_str:0000000000001590 .LASF310
     /tmp/cctEHc8V.s:5636   .debug_str:0000000000000a10 .LASF311
     /tmp/cctEHc8V.s:5926   .debug_str:00000000000013d0 .LASF312
     /tmp/cctEHc8V.s:5626   .debug_str:00000000000009d6 .LASF313
     /tmp/cctEHc8V.s:558    .text:00000000000002ac .LVL31
     /tmp/cctEHc8V.s:568    .text:00000000000002b4 .LVL32
     /tmp/cctEHc8V.s:584    .text:00000000000002c0 .LVL33
     /tmp/cctEHc8V.s:594    .text:00000000000002c8 .LVL34
     /tmp/cctEHc8V.s:14     .text:0000000000000000 .LVL0
     /tmp/cctEHc8V.s:354    .text:00000000000001d4 .LVL24
     /tmp/cctEHc8V.s:666    .text:0000000000000310 .LVL35
     /tmp/cctEHc8V.s:693    .text:000000000000034c .LVL38
     /tmp/cctEHc8V.s:713    .text:0000000000000370 .LVL41
     /tmp/cctEHc8V.s:732    .text:0000000000000398 .LVL42
     /tmp/cctEHc8V.s:806    .text:00000000000003f0 .LVL52
     /tmp/cctEHc8V.s:822    .text:00000000000003f4 .LVL53
     /tmp/cctEHc8V.s:983    .text:00000000000004b8 .LVL67
     /tmp/cctEHc8V.s:1001   .text:00000000000004d4 .LVL70
     /tmp/cctEHc8V.s:1014   .text:00000000000004d8 .LVL71
     /tmp/cctEHc8V.s:852    .text:0000000000000410 .LVL54
     /tmp/cctEHc8V.s:862    .text:0000000000000418 .LVL55
     /tmp/cctEHc8V.s:886    .text:0000000000000454 .LVL57
     /tmp/cctEHc8V.s:893    .text:0000000000000458 .LVL58
     /tmp/cctEHc8V.s:904    .text:0000000000000464 .LVL59
     /tmp/cctEHc8V.s:913    .text:0000000000000468 .LVL60
     /tmp/cctEHc8V.s:920    .text:000000000000046c .LVL61
     /tmp/cctEHc8V.s:929    .text:0000000000000470 .LVL62
     /tmp/cctEHc8V.s:734    .text:000000000000039c .LVL43
     /tmp/cctEHc8V.s:752    .text:00000000000003a8 .LVL44
     /tmp/cctEHc8V.s:766    .text:00000000000003bc .LVL46
     /tmp/cctEHc8V.s:790    .text:00000000000003d4 .LVL48
     /tmp/cctEHc8V.s:758    .text:00000000000003ac .LVL45
     /tmp/cctEHc8V.s:786    .text:00000000000003cc .LVL47
     /tmp/cctEHc8V.s:794    .text:00000000000003dc .LVL49
     /tmp/cctEHc8V.s:967    .text:000000000000049c .LVL65
     /tmp/cctEHc8V.s:1060   .text:0000000000000508 .LVL72
     /tmp/cctEHc8V.s:1150   .text:000000000000052c .LVL74
     /tmp/cctEHc8V.s:1159   .text:0000000000000530 .LVL75
     /tmp/cctEHc8V.s:1166   .text:0000000000000534 .LVL76
     /tmp/cctEHc8V.s:1175   .text:0000000000000538 .LVL77
     /tmp/cctEHc8V.s:143    .text:0000000000000090 .LVL8
     /tmp/cctEHc8V.s:153    .text:0000000000000098 .LVL9
     /tmp/cctEHc8V.s:105    .text:0000000000000070 .LVL6
     /tmp/cctEHc8V.s:115    .text:0000000000000078 .LVL7
     /tmp/cctEHc8V.s:1336   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/cctEHc8V.s:728    .text:0000000000000390 .LBB55
     /tmp/cctEHc8V.s:808    .text:00000000000003f0 .LBE55
     /tmp/cctEHc8V.s:970    .text:000000000000049c .LBB74
     /tmp/cctEHc8V.s:987    .text:00000000000004b8 .LBE74
     /tmp/cctEHc8V.s:761    .text:00000000000003b0 .LBB57
     /tmp/cctEHc8V.s:796    .text:00000000000003dc .LBE57
     /tmp/cctEHc8V.s:972    .text:000000000000049c .LBB58
     /tmp/cctEHc8V.s:985    .text:00000000000004b8 .LBE58
GAS LISTING /tmp/cctEHc8V.s 			page 57


     /tmp/cctEHc8V.s:811    .text:00000000000003f0 .LBB60
     /tmp/cctEHc8V.s:939    .text:0000000000000478 .LBE60
     /tmp/cctEHc8V.s:958    .text:000000000000048c .LBB73
     /tmp/cctEHc8V.s:969    .text:000000000000049c .LBE73
     /tmp/cctEHc8V.s:1006   .text:00000000000004d4 .LBB75
     /tmp/cctEHc8V.s:1184   .text:0000000000000540 .LBE75
     /tmp/cctEHc8V.s:1192   .text:0000000000000544 .LBB84
     /tmp/cctEHc8V.s:1304   .text:00000000000005ec .LBE84
     /tmp/cctEHc8V.s:376    .gcc_except_table:0000000000000000 .LLSDA33

UNDEFINED SYMBOLS
_Z7myTestsv
_ZN5Riscv14supervisorTrapEv
_ZN3PCB10initializeEv
_ZN8KConsole10initializeEv
_Z7kmallocm
_ZN3PCBnwEm
_ZN3PCBC1EPFvPvES0_S0_m
_ZN3PCB5startEv
_ZN3PCB10isFinishedEv
thread_dispatch
_Z11printStringPKc
_ZN3PCB10consolePCBE
_ZN3PCBdlEPv
_Unwind_Resume
__gxx_personality_v0
_Z8userMainv
_ZN3PCB7runningE
_ZN3PCB10savedRegA4E
_Z15trapPrintStringPKc
thread_exit
CONSOLE_STATUS
CONSOLE_TX_DATA
_ZN8KConsole11pendingGetcE
plic_claim
plic_complete
_ZN3PCB16timeSliceCounterE
_ZN12SleepPCBList13tryToWakePCBsEv
_ZN3PCB8dispatchEv
_ZN8KConsole17putCharacterInputEc
_ZN15MemoryAllocator15memAllocHandlerEv
_ZN15MemoryAllocator14memFreeHandlerEv
_ZN3PCB20threadMakePCBHandlerEv
_ZN3PCB19threadCreateHandlerEv
_ZN3PCB18threadStartHandlerEv
_ZN3PCB21threadDispatchHandlerEv
_ZN3PCB17threadExitHandlerEv
_ZN3PCB18threadSleepHandlerEv
_ZN10KSemaphore14semOpenHandlerEv
_ZN10KSemaphore14semWaitHandlerEv
_ZN10KSemaphore16semSignalHandlerEv
_ZN10KSemaphore15semCloseHandlerEv
_ZN8KConsole11getcHandlerEv
_ZN8KConsole11putcHandlerEv
_ZN8KConsole14getCharHandlerEv
