GAS LISTING /tmp/ccKnjL1x.s 			page 1


   1              		.file	"Riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10initSystemEv
   9              	_ZN5Riscv10initSystemEv:
  10              	.LFB25:
  11              		.file 1 "src/Riscv.cpp"
   1:src/Riscv.cpp **** //
   2:src/Riscv.cpp **** // Created by os on 4/27/22.
   3:src/Riscv.cpp **** //
   4:src/Riscv.cpp **** 
   5:src/Riscv.cpp **** #include "../h/Riscv.hpp"
   6:src/Riscv.cpp **** #include "../h/MemoryAllocator.hpp"
   7:src/Riscv.cpp **** #include "../h/PCB.hpp"
   8:src/Riscv.cpp **** #include "../lib/console.h"
   9:src/Riscv.cpp **** #include "../h/syscall_cpp.hpp"
  10:src/Riscv.cpp **** #include "../h/SleepPCBList.hpp"
  11:src/Riscv.cpp **** #include "../h/KConsole.hpp"
  12:src/Riscv.cpp **** #include "../h/Tests.hpp"
  13:src/Riscv.cpp **** #include "../test/userMain.hpp"
  14:src/Riscv.cpp **** 
  15:src/Riscv.cpp **** void Riscv::initSystem()
  16:src/Riscv.cpp **** {
  12              		.loc 1 16 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23341100 		sd	ra,8(sp)
  17 0008 23308100 		sd	s0,0(sp)
  18              		.cfi_offset 1, -8
  19              		.cfi_offset 8, -16
  20 000c 13040101 		addi	s0,sp,16
  21              		.cfi_def_cfa 8, 0
  17:src/Riscv.cpp ****     w_stvec((uint64)&Riscv::supervisorTrap);
  22              		.loc 1 17 5
  23              		.loc 1 17 12 is_stmt 0
  24 0010 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
  24      83B70700 
  25              	.LVL0:
  26              	.LBB46:
  27              	.LBB47:
  28              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 4/27/22.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_0_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_0_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** class Riscv
  11:src/../h/Riscv.hpp **** {
  12:src/../h/Riscv.hpp **** public:
GAS LISTING /tmp/ccKnjL1x.s 			page 2


  13:src/../h/Riscv.hpp ****     static void kernelMain();
  14:src/../h/Riscv.hpp **** 
  15:src/../h/Riscv.hpp ****     static void initSystem();
  16:src/../h/Riscv.hpp ****     static void endSystem();
  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp ****     static void userMainWrapper(void* p);
  19:src/../h/Riscv.hpp **** 
  20:src/../h/Riscv.hpp ****     static void enableInterrupts();
  21:src/../h/Riscv.hpp **** 
  22:src/../h/Riscv.hpp ****     static void disableInterrupts();
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp ****     static void printString(char const *string);
  25:src/../h/Riscv.hpp **** 
  26:src/../h/Riscv.hpp ****     static void printInteger(uint64 num);
  27:src/../h/Riscv.hpp **** 
  28:src/../h/Riscv.hpp ****     static void pushRegisters();
  29:src/../h/Riscv.hpp ****     static void popRegisters();
  30:src/../h/Riscv.hpp **** 
  31:src/../h/Riscv.hpp ****     static uint64 r_scause();
  32:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  33:src/../h/Riscv.hpp **** 
  34:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  35:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
  36:src/../h/Riscv.hpp **** 
  37:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  38:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  39:src/../h/Riscv.hpp **** 
  40:src/../h/Riscv.hpp ****     static uint64 r_stval();
  41:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  42:src/../h/Riscv.hpp **** 
  43:src/../h/Riscv.hpp ****     enum BitMaskSip
  44:src/../h/Riscv.hpp ****     {
  45:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  46:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  47:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9),
  48:src/../h/Riscv.hpp ****     };
  49:src/../h/Riscv.hpp **** 
  50:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  51:src/../h/Riscv.hpp **** 
  52:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  53:src/../h/Riscv.hpp **** 
  54:src/../h/Riscv.hpp ****     static uint64 r_sip();
  55:src/../h/Riscv.hpp **** 
  56:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  57:src/../h/Riscv.hpp **** 
  58:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  59:src/../h/Riscv.hpp ****     {
  60:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  61:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  62:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  63:src/../h/Riscv.hpp ****     };
  64:src/../h/Riscv.hpp **** 
  65:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  66:src/../h/Riscv.hpp **** 
  67:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  68:src/../h/Riscv.hpp **** 
  69:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
GAS LISTING /tmp/ccKnjL1x.s 			page 3


  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  72:src/../h/Riscv.hpp **** 
  73:src/../h/Riscv.hpp ****     static void popSppSpie();
  74:src/../h/Riscv.hpp **** 
  75:src/../h/Riscv.hpp ****     static void supervisorTrap();
  76:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  77:src/../h/Riscv.hpp **** 
  78:src/../h/Riscv.hpp ****     static const uint64 bntOne = 1UL << 63;;
  79:src/../h/Riscv.hpp ****     static const uint64 bntZero = 0UL;
  80:src/../h/Riscv.hpp ****     static const uint64 timerInterrupt = bntOne + 1UL;
  81:src/../h/Riscv.hpp ****     static const uint64 hwInterrupt = bntOne + 9UL;
  82:src/../h/Riscv.hpp ****     static const uint64 operationInterrupt = bntZero + 2UL;
  83:src/../h/Riscv.hpp ****     static const uint64 addrReadInterrupt = bntZero + 5UL;
  84:src/../h/Riscv.hpp ****     static const uint64 addrWriteInterrupt = bntZero + 7UL;
  85:src/../h/Riscv.hpp ****     static const uint64 ecallUserInterrupt = bntZero + 8UL;
  86:src/../h/Riscv.hpp ****     static const uint64 ecallSystemInterupt = bntZero + 9UL;
  87:src/../h/Riscv.hpp **** };
  88:src/../h/Riscv.hpp **** 
  89:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause() {
  90:src/../h/Riscv.hpp ****     uint64 volatile scause;
  91:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
  92:src/../h/Riscv.hpp ****     return scause;
  93:src/../h/Riscv.hpp **** }
  94:src/../h/Riscv.hpp **** 
  95:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
  96:src/../h/Riscv.hpp ****     __asm__ volatile("csrw scause, %0" : :"r"(scause));
  97:src/../h/Riscv.hpp **** }
  98:src/../h/Riscv.hpp **** 
  99:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc() {
 100:src/../h/Riscv.hpp ****     uint64 volatile sepc;
 101:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 102:src/../h/Riscv.hpp ****     return sepc;
 103:src/../h/Riscv.hpp **** }
 104:src/../h/Riscv.hpp **** 
 105:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
 106:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sepc, %0" : :"r"(sepc));
 107:src/../h/Riscv.hpp **** }
 108:src/../h/Riscv.hpp **** 
 109:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec() {
 110:src/../h/Riscv.hpp ****     uint64 volatile stvec;
 111:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, stvec" : "=r"(stvec));
 112:src/../h/Riscv.hpp ****     return stvec;
 113:src/../h/Riscv.hpp **** }
 114:src/../h/Riscv.hpp **** 
 115:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 116:src/../h/Riscv.hpp ****     __asm__ volatile("csrw stvec, %0" : :"r"(stvec));
  29              		.loc 2 116 5 is_stmt 1
  30              		.loc 2 116 53 is_stmt 0
  31              	#APP
  32              	# 116 "src/../h/Riscv.hpp" 1
 117              	}
  33              		csrw stvec, a5
  34              	# 0 "" 2
  35              	.LVL1:
  36              	#NO_APP
  37              	.LBE47:
GAS LISTING /tmp/ccKnjL1x.s 			page 4


  38              	.LBE46:
  18:src/Riscv.cpp ****     PCB::initialize();
  39              		.loc 1 18 5 is_stmt 1
  40              		.loc 1 18 20 is_stmt 0
  41 001c 97000000 		call	_ZN3PCB10initializeEv@plt
  41      E7800000 
  42              	.LVL2:
  19:src/Riscv.cpp ****     KConsole::initialize();
  43              		.loc 1 19 5 is_stmt 1
  44              		.loc 1 19 25 is_stmt 0
  45 0024 97000000 		call	_ZN8KConsole10initializeEv@plt
  45      E7800000 
  46              	.LVL3:
  20:src/Riscv.cpp **** }
  47              		.loc 1 20 1
  48 002c 83308100 		ld	ra,8(sp)
  49              		.cfi_restore 1
  50 0030 03340100 		ld	s0,0(sp)
  51              		.cfi_restore 8
  52              		.cfi_def_cfa 2, 16
  53 0034 13010101 		addi	sp,sp,16
  54              		.cfi_def_cfa_offset 0
  55 0038 67800000 		jr	ra
  56              		.cfi_endproc
  57              	.LFE25:
  59              		.align	2
  60              		.globl	_ZN5Riscv16enableInterruptsEv
  62              	_ZN5Riscv16enableInterruptsEv:
  63              	.LFB27:
  21:src/Riscv.cpp **** 
  22:src/Riscv.cpp **** void Riscv::endSystem()
  23:src/Riscv.cpp **** {
  24:src/Riscv.cpp ****     //todo
  25:src/Riscv.cpp ****     Riscv::disableInterrupts();
  26:src/Riscv.cpp **** }
  27:src/Riscv.cpp **** 
  28:src/Riscv.cpp **** 
  29:src/Riscv.cpp **** void Riscv::enableInterrupts() {
  64              		.loc 1 29 32 is_stmt 1
  65              		.cfi_startproc
  66 003c 130101FF 		addi	sp,sp,-16
  67              		.cfi_def_cfa_offset 16
  68 0040 23348100 		sd	s0,8(sp)
  69              		.cfi_offset 8, -8
  70 0044 13040101 		addi	s0,sp,16
  71              		.cfi_def_cfa 8, 0
  30:src/Riscv.cpp ****     ms_sstatus(Riscv::SSTATUS_SIE);
  72              		.loc 1 30 5
  73              	.LVL4:
  74              	.LBB48:
  75              	.LBB49:
 118:src/../h/Riscv.hpp **** 
 119:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stval() {
 120:src/../h/Riscv.hpp ****     uint64 volatile stval;
 121:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, stval" : "=r"(stval));
 122:src/../h/Riscv.hpp ****     return stval;
 123:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/ccKnjL1x.s 			page 5


 124:src/../h/Riscv.hpp **** 
 125:src/../h/Riscv.hpp **** inline void Riscv::w_stval(uint64 stval) {
 126:src/../h/Riscv.hpp ****     __asm__ volatile("csrw stval, %0" : :"r"(stval));
 127:src/../h/Riscv.hpp **** }
 128:src/../h/Riscv.hpp **** 
 129:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 130:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sip, %0" : :"r"(mask));
 131:src/../h/Riscv.hpp **** }
 132:src/../h/Riscv.hpp **** 
 133:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 134:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sip, %0" : :"r"(mask));
 135:src/../h/Riscv.hpp **** }
 136:src/../h/Riscv.hpp **** 
 137:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip() {
 138:src/../h/Riscv.hpp ****     uint64 volatile sip;
 139:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sip" : "=r"(sip));
 140:src/../h/Riscv.hpp ****     return sip;
 141:src/../h/Riscv.hpp **** }
 142:src/../h/Riscv.hpp **** 
 143:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 144:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sip, %0" : :"r"(sip));
 145:src/../h/Riscv.hpp **** }
 146:src/../h/Riscv.hpp **** 
 147:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 148:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sstatus, %0" : :"r"(mask));
  76              		.loc 2 148 5
  77              		.loc 2 148 54 is_stmt 0
  78 0048 93072000 		li	a5,2
  79              	#APP
  80              	# 148 "src/../h/Riscv.hpp" 1
 149              	}
  81              		csrs sstatus, a5
  82              	# 0 "" 2
  83              	.LVL5:
  84              	#NO_APP
  85              	.LBE49:
  86              	.LBE48:
  31:src/Riscv.cpp **** }
  87              		.loc 1 31 1
  88 0050 03348100 		ld	s0,8(sp)
  89              		.cfi_restore 8
  90              		.cfi_def_cfa 2, 16
  91 0054 13010101 		addi	sp,sp,16
  92              		.cfi_def_cfa_offset 0
  93 0058 67800000 		jr	ra
  94              		.cfi_endproc
  95              	.LFE27:
  97              		.align	2
  98              		.globl	_ZN5Riscv17disableInterruptsEv
 100              	_ZN5Riscv17disableInterruptsEv:
 101              	.LFB28:
  32:src/Riscv.cpp **** 
  33:src/Riscv.cpp **** void Riscv::disableInterrupts()
  34:src/Riscv.cpp **** {
 102              		.loc 1 34 1 is_stmt 1
 103              		.cfi_startproc
 104 005c 130101FF 		addi	sp,sp,-16
GAS LISTING /tmp/ccKnjL1x.s 			page 6


 105              		.cfi_def_cfa_offset 16
 106 0060 23348100 		sd	s0,8(sp)
 107              		.cfi_offset 8, -8
 108 0064 13040101 		addi	s0,sp,16
 109              		.cfi_def_cfa 8, 0
  35:src/Riscv.cpp ****     mc_sstatus(Riscv::SSTATUS_SIE);
 110              		.loc 1 35 5
 111              	.LVL6:
 112              	.LBB50:
 113              	.LBB51:
 150:src/../h/Riscv.hpp **** 
 151:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 152:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sstatus, %0" : :"r"(mask));
 114              		.loc 2 152 5
 115              		.loc 2 152 54 is_stmt 0
 116 0068 93072000 		li	a5,2
 117              	#APP
 118              	# 152 "src/../h/Riscv.hpp" 1
 153              	}
 119              		csrc sstatus, a5
 120              	# 0 "" 2
 121              	.LVL7:
 122              	#NO_APP
 123              	.LBE51:
 124              	.LBE50:
  36:src/Riscv.cpp **** }
 125              		.loc 1 36 1
 126 0070 03348100 		ld	s0,8(sp)
 127              		.cfi_restore 8
 128              		.cfi_def_cfa 2, 16
 129 0074 13010101 		addi	sp,sp,16
 130              		.cfi_def_cfa_offset 0
 131 0078 67800000 		jr	ra
 132              		.cfi_endproc
 133              	.LFE28:
 135              		.align	2
 136              		.globl	_ZN5Riscv9endSystemEv
 138              	_ZN5Riscv9endSystemEv:
 139              	.LFB26:
  23:src/Riscv.cpp ****     //todo
 140              		.loc 1 23 1 is_stmt 1
 141              		.cfi_startproc
 142 007c 130101FF 		addi	sp,sp,-16
 143              		.cfi_def_cfa_offset 16
 144 0080 23341100 		sd	ra,8(sp)
 145 0084 23308100 		sd	s0,0(sp)
 146              		.cfi_offset 1, -8
 147              		.cfi_offset 8, -16
 148 0088 13040101 		addi	s0,sp,16
 149              		.cfi_def_cfa 8, 0
  25:src/Riscv.cpp **** }
 150              		.loc 1 25 5
  25:src/Riscv.cpp **** }
 151              		.loc 1 25 29 is_stmt 0
 152 008c 97000000 		call	_ZN5Riscv17disableInterruptsEv
 152      E7800000 
 153              	.LVL8:
GAS LISTING /tmp/ccKnjL1x.s 			page 7


  26:src/Riscv.cpp **** 
 154              		.loc 1 26 1
 155 0094 83308100 		ld	ra,8(sp)
 156              		.cfi_restore 1
 157 0098 03340100 		ld	s0,0(sp)
 158              		.cfi_restore 8
 159              		.cfi_def_cfa 2, 16
 160 009c 13010101 		addi	sp,sp,16
 161              		.cfi_def_cfa_offset 0
 162 00a0 67800000 		jr	ra
 163              		.cfi_endproc
 164              	.LFE26:
 166              		.align	2
 167              		.globl	_ZN5Riscv10popSppSpieEv
 169              	_ZN5Riscv10popSppSpieEv:
 170              	.LFB29:
  37:src/Riscv.cpp **** 
  38:src/Riscv.cpp **** void Riscv::popSppSpie()
  39:src/Riscv.cpp **** {
 171              		.loc 1 39 1 is_stmt 1
 172              		.cfi_startproc
 173 00a4 130101FF 		addi	sp,sp,-16
 174              		.cfi_def_cfa_offset 16
 175 00a8 23348100 		sd	s0,8(sp)
 176              		.cfi_offset 8, -8
 177 00ac 13040101 		addi	s0,sp,16
 178              		.cfi_def_cfa 8, 0
  40:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
 179              		.loc 1 40 5
 180              		.loc 1 40 39 is_stmt 0
 181              	#APP
 182              	# 40 "src/Riscv.cpp" 1
  41              	    __asm__ volatile ("sret");
 183              		csrw sepc, ra
 184              	# 0 "" 2
 185              		.loc 1 41 5 is_stmt 1
 186              		.loc 1 41 30 is_stmt 0
 187              	# 41 "src/Riscv.cpp" 1
  42              	}
 188              		sret
 189              	# 0 "" 2
 190              		.loc 1 42 1
 191              	#NO_APP
 192 00b8 03348100 		ld	s0,8(sp)
 193              		.cfi_restore 8
 194              		.cfi_def_cfa 2, 16
 195 00bc 13010101 		addi	sp,sp,16
 196              		.cfi_def_cfa_offset 0
 197 00c0 67800000 		jr	ra
 198              		.cfi_endproc
 199              	.LFE29:
 201              		.align	2
 202              		.globl	_ZN5Riscv11printStringEPKc
 204              	_ZN5Riscv11printStringEPKc:
 205              	.LFB30:
  43:src/Riscv.cpp **** 
  44:src/Riscv.cpp **** void Riscv::printString(const char *string)
GAS LISTING /tmp/ccKnjL1x.s 			page 8


  45:src/Riscv.cpp **** {
 206              		.loc 1 45 1 is_stmt 1
 207              		.cfi_startproc
 208              	.LVL9:
 209 00c4 130101FD 		addi	sp,sp,-48
 210              		.cfi_def_cfa_offset 48
 211 00c8 23341102 		sd	ra,40(sp)
 212 00cc 23308102 		sd	s0,32(sp)
 213 00d0 233C9100 		sd	s1,24(sp)
 214 00d4 23382101 		sd	s2,16(sp)
 215              		.cfi_offset 1, -8
 216              		.cfi_offset 8, -16
 217              		.cfi_offset 9, -24
 218              		.cfi_offset 18, -32
 219 00d8 13040103 		addi	s0,sp,48
 220              		.cfi_def_cfa 8, 0
 221 00dc 93040500 		mv	s1,a0
  46:src/Riscv.cpp ****     uint64 sstatus = r_sstatus();
 222              		.loc 1 46 5
 223              	.LBB52:
 224              	.LBB53:
 154:src/../h/Riscv.hpp **** 
 155:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sstatus() {
 156:src/../h/Riscv.hpp ****     uint64 volatile sstatus;
 225              		.loc 2 156 5
 157:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 226              		.loc 2 157 5
 227              		.loc 2 157 57 is_stmt 0
 228              	#APP
 229              	# 157 "src/../h/Riscv.hpp" 1
 158              	    return sstatus;
 230              		csrr a5, sstatus
 231              	# 0 "" 2
 232              	#NO_APP
 233 00e4 233CF4FC 		sd	a5,-40(s0)
 234              		.loc 2 158 5 is_stmt 1
 235              		.loc 2 158 12 is_stmt 0
 236 00e8 033984FD 		ld	s2,-40(s0)
 237              	.LVL10:
 238              	.LBE53:
 239              	.LBE52:
  47:src/Riscv.cpp ****     mc_sstatus(SSTATUS_SIE);
 240              		.loc 1 47 5 is_stmt 1
 241              	.LBB54:
 242              	.LBB55:
 152:src/../h/Riscv.hpp **** }
 243              		.loc 2 152 5
 152:src/../h/Riscv.hpp **** }
 244              		.loc 2 152 54 is_stmt 0
 245 00ec 93072000 		li	a5,2
 246              	#APP
 247              	# 152 "src/../h/Riscv.hpp" 1
 248              		csrc sstatus, a5
 249              	# 0 "" 2
 250              	.LVL11:
 251              	#NO_APP
 252              	.L13:
GAS LISTING /tmp/ccKnjL1x.s 			page 9


 253              	.LBE55:
 254              	.LBE54:
  48:src/Riscv.cpp ****     while (*string != '\0')
 255              		.loc 1 48 5 is_stmt 1
 256              		.loc 1 48 20
 257              		.loc 1 48 12 is_stmt 0
 258 00f4 03C50400 		lbu	a0,0(s1)
 259              		.loc 1 48 20
 260 00f8 630A0500 		beqz	a0,.L12
  49:src/Riscv.cpp ****     {
  50:src/Riscv.cpp ****         __putc(*string);
 261              		.loc 1 50 9 is_stmt 1
 262              		.loc 1 50 15 is_stmt 0
 263 00fc 97000000 		call	__putc@plt
 263      E7800000 
 264              	.LVL12:
  51:src/Riscv.cpp ****         string++;
 265              		.loc 1 51 9 is_stmt 1
 266              		.loc 1 51 15 is_stmt 0
 267 0104 93841400 		addi	s1,s1,1
 268              	.LVL13:
  48:src/Riscv.cpp ****     while (*string != '\0')
 269              		.loc 1 48 5
 270 0108 6FF0DFFE 		j	.L13
 271              	.L12:
  52:src/Riscv.cpp ****     }
  53:src/Riscv.cpp ****     ms_sstatus(sstatus & SSTATUS_SIE ? SSTATUS_SIE : 0);
 272              		.loc 1 53 5 is_stmt 1
 273              		.loc 1 53 38 is_stmt 0
 274 010c 1B090900 		sext.w	s2,s2
 275              	.LVL14:
 276              		.loc 1 53 15
 277 0110 13792900 		andi	s2,s2,2
 278 0114 1B090900 		sext.w	s2,s2
 279              	.LVL15:
 280              	.LBB56:
 281              	.LBB57:
 148:src/../h/Riscv.hpp **** }
 282              		.loc 2 148 5 is_stmt 1
 148:src/../h/Riscv.hpp **** }
 283              		.loc 2 148 54 is_stmt 0
 284              	#APP
 285              	# 148 "src/../h/Riscv.hpp" 1
 286              		csrs sstatus, s2
 287              	# 0 "" 2
 288              	.LVL16:
 289              	#NO_APP
 290              	.LBE57:
 291              	.LBE56:
  54:src/Riscv.cpp **** }
 292              		.loc 1 54 1
 293 011c 83308102 		ld	ra,40(sp)
 294              		.cfi_restore 1
 295 0120 03340102 		ld	s0,32(sp)
 296              		.cfi_restore 8
 297              		.cfi_def_cfa 2, 48
 298 0124 83348101 		ld	s1,24(sp)
GAS LISTING /tmp/ccKnjL1x.s 			page 10


 299              		.cfi_restore 9
 300              	.LVL17:
 301 0128 03390101 		ld	s2,16(sp)
 302              		.cfi_restore 18
 303 012c 13010103 		addi	sp,sp,48
 304              		.cfi_def_cfa_offset 0
 305 0130 67800000 		jr	ra
 306              		.cfi_endproc
 307              	.LFE30:
 309              		.align	2
 310              		.globl	_ZN5Riscv12printIntegerEm
 312              	_ZN5Riscv12printIntegerEm:
 313              	.LFB31:
  55:src/Riscv.cpp **** 
  56:src/Riscv.cpp **** void Riscv::printInteger(uint64 num)
  57:src/Riscv.cpp **** {
 314              		.loc 1 57 1 is_stmt 1
 315              		.cfi_startproc
 316              	.LVL18:
 317 0134 130101FC 		addi	sp,sp,-64
 318              		.cfi_def_cfa_offset 64
 319 0138 233C1102 		sd	ra,56(sp)
 320 013c 23388102 		sd	s0,48(sp)
 321 0140 23349102 		sd	s1,40(sp)
 322 0144 23302103 		sd	s2,32(sp)
 323              		.cfi_offset 1, -8
 324              		.cfi_offset 8, -16
 325              		.cfi_offset 9, -24
 326              		.cfi_offset 18, -32
 327 0148 13040104 		addi	s0,sp,64
 328              		.cfi_def_cfa 8, 0
  58:src/Riscv.cpp ****     uint64 sstatus = r_sstatus();
 329              		.loc 1 58 5
 330              	.LBB58:
 331              	.LBB59:
 156:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 332              		.loc 2 156 5
 157:src/../h/Riscv.hpp ****     return sstatus;
 333              		.loc 2 157 5
 157:src/../h/Riscv.hpp ****     return sstatus;
 334              		.loc 2 157 57 is_stmt 0
 335              	#APP
 336              	# 157 "src/../h/Riscv.hpp" 1
 337              		csrr a5, sstatus
 338              	# 0 "" 2
 339              	#NO_APP
 340 0150 2334F4FC 		sd	a5,-56(s0)
 341              		.loc 2 158 5 is_stmt 1
 342              		.loc 2 158 12 is_stmt 0
 343 0154 033984FC 		ld	s2,-56(s0)
 344              	.LVL19:
 345              	.LBE59:
 346              	.LBE58:
  59:src/Riscv.cpp ****     mc_sstatus(SSTATUS_SIE);
 347              		.loc 1 59 5 is_stmt 1
 348              	.LBB60:
 349              	.LBB61:
GAS LISTING /tmp/ccKnjL1x.s 			page 11


 152:src/../h/Riscv.hpp **** }
 350              		.loc 2 152 5
 152:src/../h/Riscv.hpp **** }
 351              		.loc 2 152 54 is_stmt 0
 352 0158 93072000 		li	a5,2
 353              	#APP
 354              	# 152 "src/../h/Riscv.hpp" 1
 355              		csrc sstatus, a5
 356              	# 0 "" 2
 357              	.LVL20:
 358              	#NO_APP
 359              	.LBE61:
 360              	.LBE60:
  60:src/Riscv.cpp ****     static char digits[] = "0123456789";
 361              		.loc 1 60 5 is_stmt 1
  61:src/Riscv.cpp ****     char buf[16];
 362              		.loc 1 61 5
  62:src/Riscv.cpp ****     int i, neg;
 363              		.loc 1 62 5
  63:src/Riscv.cpp ****     uint x;
 364              		.loc 1 63 5
  64:src/Riscv.cpp **** 
  65:src/Riscv.cpp ****     neg = 0;
 365              		.loc 1 65 5
  66:src/Riscv.cpp ****     if(num < 0)
 366              		.loc 1 66 5
  67:src/Riscv.cpp ****     {
  68:src/Riscv.cpp ****         neg = 1;
  69:src/Riscv.cpp ****         x = -num;
  70:src/Riscv.cpp ****     }
  71:src/Riscv.cpp ****     else
  72:src/Riscv.cpp ****         x = num;
 367              		.loc 1 72 9
 368              		.loc 1 72 11 is_stmt 0
 369 0160 1B050500 		sext.w	a0,a0
 370              	.LVL21:
  73:src/Riscv.cpp **** 
  74:src/Riscv.cpp ****     i = 0;
 371              		.loc 1 74 5 is_stmt 1
 372              		.loc 1 74 7 is_stmt 0
 373 0164 93040000 		li	s1,0
 374              	.LVL22:
 375              	.L16:
  75:src/Riscv.cpp ****     do
 376              		.loc 1 75 5 is_stmt 1
  76:src/Riscv.cpp ****     {
  77:src/Riscv.cpp ****         buf[i++] = digits[x%10];
 377              		.loc 1 77 9
 378              		.loc 1 77 28 is_stmt 0
 379 0168 1306A000 		li	a2,10
 380 016c 3B77C502 		remuw	a4,a0,a2
 381              	.LVL23:
 382              		.loc 1 77 31
 383 0170 93160702 		slli	a3,a4,32
 384 0174 93D60602 		srli	a3,a3,32
 385 0178 17070000 		lla	a4,.LANCHOR0
 385      13070700 
GAS LISTING /tmp/ccKnjL1x.s 			page 12


 386 0180 3307D700 		add	a4,a4,a3
 387 0184 03470700 		lbu	a4,0(a4)
 388              		.loc 1 77 18
 389 0188 930604FE 		addi	a3,s0,-32
 390 018c B3879600 		add	a5,a3,s1
 391 0190 9B841400 		addiw	s1,s1,1
 392              	.LVL24:
 393 0194 2388E7FE 		sb	a4,-16(a5)
  78:src/Riscv.cpp ****     }while((x/=10) != 0);
 394              		.loc 1 78 20 is_stmt 1
 395 0198 1B070500 		sext.w	a4,a0
 396              		.loc 1 78 14 is_stmt 0
 397 019c 3B55C502 		divuw	a0,a0,a2
 398              	.LVL25:
 399              		.loc 1 78 20
 400 01a0 93079000 		li	a5,9
 401 01a4 E3E2E7FC 		bgtu	a4,a5,.L16
 402              	.LVL26:
 403              	.L18:
  79:src/Riscv.cpp ****     if(neg)
  80:src/Riscv.cpp ****         buf[i++] = '-';
  81:src/Riscv.cpp **** 
  82:src/Riscv.cpp ****     while(--i >= 0)
 404              		.loc 1 82 5 is_stmt 1
 405              		.loc 1 82 15
 406 01a8 9B84F4FF 		addiw	s1,s1,-1
 407              	.LVL27:
 408 01ac 63CE0400 		bltz	s1,.L17
  83:src/Riscv.cpp ****         __putc(buf[i]);
 409              		.loc 1 83 9
 410              		.loc 1 83 15 is_stmt 0
 411 01b0 930704FE 		addi	a5,s0,-32
 412 01b4 B3879700 		add	a5,a5,s1
 413 01b8 03C507FF 		lbu	a0,-16(a5)
 414 01bc 97000000 		call	__putc@plt
 414      E7800000 
 415              	.LVL28:
 416 01c4 6FF05FFE 		j	.L18
 417              	.L17:
  84:src/Riscv.cpp **** 
  85:src/Riscv.cpp ****     __putc('\n');
 418              		.loc 1 85 5 is_stmt 1
 419              		.loc 1 85 11 is_stmt 0
 420 01c8 1305A000 		li	a0,10
 421 01cc 97000000 		call	__putc@plt
 421      E7800000 
 422              	.LVL29:
  86:src/Riscv.cpp **** 
  87:src/Riscv.cpp ****     ms_sstatus(sstatus & SSTATUS_SIE ? SSTATUS_SIE : 0);
 423              		.loc 1 87 5 is_stmt 1
 424              		.loc 1 87 38 is_stmt 0
 425 01d4 1B090900 		sext.w	s2,s2
 426              	.LVL30:
 427              		.loc 1 87 15
 428 01d8 13792900 		andi	s2,s2,2
 429 01dc 1B090900 		sext.w	s2,s2
 430              	.LVL31:
GAS LISTING /tmp/ccKnjL1x.s 			page 13


 431              	.LBB62:
 432              	.LBB63:
 148:src/../h/Riscv.hpp **** }
 433              		.loc 2 148 5 is_stmt 1
 148:src/../h/Riscv.hpp **** }
 434              		.loc 2 148 54 is_stmt 0
 435              	#APP
 436              	# 148 "src/../h/Riscv.hpp" 1
 437              		csrs sstatus, s2
 438              	# 0 "" 2
 439              	.LVL32:
 440              	#NO_APP
 441              	.LBE63:
 442              	.LBE62:
  88:src/Riscv.cpp **** }
 443              		.loc 1 88 1
 444 01e4 83308103 		ld	ra,56(sp)
 445              		.cfi_restore 1
 446 01e8 03340103 		ld	s0,48(sp)
 447              		.cfi_restore 8
 448              		.cfi_def_cfa 2, 64
 449 01ec 83348102 		ld	s1,40(sp)
 450              		.cfi_restore 9
 451 01f0 03390102 		ld	s2,32(sp)
 452              		.cfi_restore 18
 453 01f4 13010104 		addi	sp,sp,64
 454              		.cfi_def_cfa_offset 0
 455 01f8 67800000 		jr	ra
 456              		.cfi_endproc
 457              	.LFE31:
 459              		.align	2
 460              		.globl	_ZN5Riscv20handleSupervisorTrapEv
 462              	_ZN5Riscv20handleSupervisorTrapEv:
 463              	.LFB32:
  89:src/Riscv.cpp **** 
  90:src/Riscv.cpp **** void Riscv::handleSupervisorTrap()
  91:src/Riscv.cpp **** {
 464              		.loc 1 91 1 is_stmt 1
 465              		.cfi_startproc
 466 01fc 130101F9 		addi	sp,sp,-112
 467              		.cfi_def_cfa_offset 112
 468 0200 23341106 		sd	ra,104(sp)
 469 0204 23308106 		sd	s0,96(sp)
 470 0208 233C9104 		sd	s1,88(sp)
 471              		.cfi_offset 1, -8
 472              		.cfi_offset 8, -16
 473              		.cfi_offset 9, -24
 474 020c 13040107 		addi	s0,sp,112
 475              		.cfi_def_cfa 8, 0
  92:src/Riscv.cpp ****     __asm__ volatile("mv %0, a4" : "=r"(PCB::savedRegA4));
 476              		.loc 1 92 5
 477              		.loc 1 92 58 is_stmt 0
 478              	#APP
 479              	# 92 "src/Riscv.cpp" 1
  93              	
 480              		mv a4, a4
 481              	# 0 "" 2
GAS LISTING /tmp/ccKnjL1x.s 			page 14


 482              	#NO_APP
 483 0214 97070000 		la	a5,_ZN3PCB10savedRegA4E
 483      83B70700 
 484 021c 23B0E700 		sd	a4,0(a5)
  94:src/Riscv.cpp ****     uint64 scause = Riscv::r_scause();
 485              		.loc 1 94 5 is_stmt 1
 486              	.LBB64:
 487              	.LBB65:
  90:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
 488              		.loc 2 90 5
  91:src/../h/Riscv.hpp ****     return scause;
 489              		.loc 2 91 5
  91:src/../h/Riscv.hpp ****     return scause;
 490              		.loc 2 91 55 is_stmt 0
 491              	#APP
 492              	# 91 "src/../h/Riscv.hpp" 1
 493              		csrr a5, scause
 494              	# 0 "" 2
 495              	#NO_APP
 496 0224 233CF4FA 		sd	a5,-72(s0)
  92:src/../h/Riscv.hpp **** }
 497              		.loc 2 92 5 is_stmt 1
  92:src/../h/Riscv.hpp **** }
 498              		.loc 2 92 12 is_stmt 0
 499 0228 833784FB 		ld	a5,-72(s0)
 500              	.LVL33:
 501              	.LBE65:
 502              	.LBE64:
  95:src/Riscv.cpp **** 
  96:src/Riscv.cpp ****     switch(scause)
 503              		.loc 1 96 5 is_stmt 1
 504              	.LBB66:
 505 022c 1307F0FF 		li	a4,-1
 506 0230 1317F703 		slli	a4,a4,63
 507 0234 13071700 		addi	a4,a4,1
 508 0238 6384E708 		beq	a5,a4,.L21
 509 023c 1307F0FF 		li	a4,-1
 510 0240 1317F703 		slli	a4,a4,63
 511 0244 13071700 		addi	a4,a4,1
 512 0248 636EF704 		bgtu	a5,a4,.L22
 513 024c 938787FF 		addi	a5,a5,-8
 514              	.LVL34:
 515 0250 13071000 		li	a4,1
 516 0254 6366F70E 		bgtu	a5,a4,.L20
 517              	.LBB67:
  97:src/Riscv.cpp ****     {
  98:src/Riscv.cpp ****         case timerInterrupt:
  99:src/Riscv.cpp ****         {
 100:src/Riscv.cpp ****             uint64 volatile sepc = Riscv::r_sepc();
 101:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 102:src/Riscv.cpp ****             mc_sip(Riscv::SIP_SSIP);
 103:src/Riscv.cpp ****             //Riscv::printString("timerInterrupt\n");
 104:src/Riscv.cpp ****             static uint64 total = 0;
 105:src/Riscv.cpp ****             total++;
 106:src/Riscv.cpp **** 
 107:src/Riscv.cpp ****             PCB::timeSliceCounter++;
 108:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
GAS LISTING /tmp/ccKnjL1x.s 			page 15


 109:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
 110:src/Riscv.cpp ****             {
 111:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 112:src/Riscv.cpp ****                 PCB::dispatch();
 113:src/Riscv.cpp ****             }
 114:src/Riscv.cpp **** 
 115:src/Riscv.cpp ****             Riscv::w_sstatus(sstatus);
 116:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 117:src/Riscv.cpp **** 
 118:src/Riscv.cpp ****             break;
 119:src/Riscv.cpp ****         }
 120:src/Riscv.cpp ****         case hwInterrupt: // todo
 121:src/Riscv.cpp ****         {
 122:src/Riscv.cpp ****             //Riscv::printString("Hardware interrupt...\n");
 123:src/Riscv.cpp ****             console_handler();
 124:src/Riscv.cpp ****             break;
 125:src/Riscv.cpp ****         }
 126:src/Riscv.cpp ****         case operationInterrupt: // todo
 127:src/Riscv.cpp ****         {
 128:src/Riscv.cpp ****             break;
 129:src/Riscv.cpp ****         }
 130:src/Riscv.cpp ****         case addrReadInterrupt: // todo
 131:src/Riscv.cpp ****         {
 132:src/Riscv.cpp ****             break;
 133:src/Riscv.cpp ****         }
 134:src/Riscv.cpp ****         case addrWriteInterrupt: // todo
 135:src/Riscv.cpp ****         {
 136:src/Riscv.cpp ****             break;
 137:src/Riscv.cpp ****         }
 138:src/Riscv.cpp ****         case ecallSystemInterupt:
 518              		.loc 1 138 9
 139:src/Riscv.cpp ****         case ecallUserInterrupt:
 519              		.loc 1 139 9
 140:src/Riscv.cpp ****         {
 520              		.loc 1 140 9
 521              	.LBB68:
 141:src/Riscv.cpp ****             uint64 operation;
 522              		.loc 1 141 13
 142:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
 523              		.loc 1 142 13
 524              		.loc 1 142 61 is_stmt 0
 525              	#APP
 526              	# 142 "src/Riscv.cpp" 1
 143              	
 527              		mv a5, a0
 528              	# 0 "" 2
 529              	.LVL35:
 144:src/Riscv.cpp ****             uint64 volatile sepc = Riscv::r_sepc() + 4;
 530              		.loc 1 144 13 is_stmt 1
 531              	#NO_APP
 532              	.LBB69:
 533              	.LBB70:
 100:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 534              		.loc 2 100 5
 101:src/../h/Riscv.hpp ****     return sepc;
 535              		.loc 2 101 5
 101:src/../h/Riscv.hpp ****     return sepc;
GAS LISTING /tmp/ccKnjL1x.s 			page 16


 536              		.loc 2 101 51 is_stmt 0
 537              	#APP
 538              	# 101 "src/../h/Riscv.hpp" 1
 539              		csrr a4, sepc
 540              	# 0 "" 2
 541              	#NO_APP
 542 0260 233CE4FC 		sd	a4,-40(s0)
 102:src/../h/Riscv.hpp **** }
 543              		.loc 2 102 5 is_stmt 1
 102:src/../h/Riscv.hpp **** }
 544              		.loc 2 102 12 is_stmt 0
 545 0264 033784FD 		ld	a4,-40(s0)
 546              	.LBE70:
 547              	.LBE69:
 548              		.loc 1 144 52
 549 0268 13074700 		addi	a4,a4,4
 550              		.loc 1 144 54
 551 026c 2334E4FA 		sd	a4,-88(s0)
 145:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 552              		.loc 1 145 13 is_stmt 1
 553              	.LBB71:
 554              	.LBB72:
 156:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 555              		.loc 2 156 5
 157:src/../h/Riscv.hpp ****     return sstatus;
 556              		.loc 2 157 5
 157:src/../h/Riscv.hpp ****     return sstatus;
 557              		.loc 2 157 57 is_stmt 0
 558              	#APP
 559              	# 157 "src/../h/Riscv.hpp" 1
 560              		csrr a4, sstatus
 561              	# 0 "" 2
 562              	#NO_APP
 563 0274 2338E4FC 		sd	a4,-48(s0)
 564              		.loc 2 158 5 is_stmt 1
 565              		.loc 2 158 12 is_stmt 0
 566 0278 033704FD 		ld	a4,-48(s0)
 567              	.LBE72:
 568              	.LBE71:
 569              		.loc 1 145 56
 570 027c 2338E4FA 		sd	a4,-80(s0)
 146:src/Riscv.cpp **** 
 147:src/Riscv.cpp ****             switch(operation)
 571              		.loc 1 147 13 is_stmt 1
 572 0280 13071003 		li	a4,49
 573 0284 6364F70E 		bgtu	a5,a4,.L27
 574 0288 93972700 		slli	a5,a5,2
 575              	.LVL36:
 576 028c 17070000 		lla	a4,.L29
 576      13070700 
 577 0294 B387E700 		add	a5,a5,a4
 578 0298 83A70700 		lw	a5,0(a5)
 579 029c B387E700 		add	a5,a5,a4
 580 02a0 67800700 		jr	a5
 581              		.section	.rodata
 582              		.align	2
 583              		.align	2
GAS LISTING /tmp/ccKnjL1x.s 			page 17


 584              	.L29:
 585 0000 00000000 		.word	.L27-.L29
 586 0004 00000000 		.word	.L40-.L29
 587 0008 00000000 		.word	.L39-.L29
 588 000c 00000000 		.word	.L27-.L29
 589 0010 00000000 		.word	.L27-.L29
 590 0014 00000000 		.word	.L27-.L29
 591 0018 00000000 		.word	.L27-.L29
 592 001c 00000000 		.word	.L27-.L29
 593 0020 00000000 		.word	.L27-.L29
 594 0024 00000000 		.word	.L27-.L29
 595 0028 00000000 		.word	.L27-.L29
 596 002c 00000000 		.word	.L27-.L29
 597 0030 00000000 		.word	.L27-.L29
 598 0034 00000000 		.word	.L27-.L29
 599 0038 00000000 		.word	.L27-.L29
 600 003c 00000000 		.word	.L27-.L29
 601 0040 00000000 		.word	.L27-.L29
 602 0044 00000000 		.word	.L38-.L29
 603 0048 00000000 		.word	.L37-.L29
 604 004c 00000000 		.word	.L36-.L29
 605 0050 00000000 		.word	.L35-.L29
 606 0054 00000000 		.word	.L34-.L29
 607 0058 00000000 		.word	.L27-.L29
 608 005c 00000000 		.word	.L27-.L29
 609 0060 00000000 		.word	.L27-.L29
 610 0064 00000000 		.word	.L27-.L29
 611 0068 00000000 		.word	.L27-.L29
 612 006c 00000000 		.word	.L27-.L29
 613 0070 00000000 		.word	.L27-.L29
 614 0074 00000000 		.word	.L27-.L29
 615 0078 00000000 		.word	.L27-.L29
 616 007c 00000000 		.word	.L27-.L29
 617 0080 00000000 		.word	.L27-.L29
 618 0084 00000000 		.word	.L33-.L29
 619 0088 00000000 		.word	.L32-.L29
 620 008c 00000000 		.word	.L31-.L29
 621 0090 00000000 		.word	.L30-.L29
 622 0094 00000000 		.word	.L27-.L29
 623 0098 00000000 		.word	.L27-.L29
 624 009c 00000000 		.word	.L27-.L29
 625 00a0 00000000 		.word	.L27-.L29
 626 00a4 00000000 		.word	.L27-.L29
 627 00a8 00000000 		.word	.L27-.L29
 628 00ac 00000000 		.word	.L27-.L29
 629 00b0 00000000 		.word	.L27-.L29
 630 00b4 00000000 		.word	.L27-.L29
 631 00b8 00000000 		.word	.L27-.L29
 632 00bc 00000000 		.word	.L27-.L29
 633 00c0 00000000 		.word	.L27-.L29
 634 00c4 00000000 		.word	.L28-.L29
 635              		.text
 636              	.LVL37:
 637              	.L22:
 638              	.LBE68:
 639              	.LBE67:
  96:src/Riscv.cpp ****     {
GAS LISTING /tmp/ccKnjL1x.s 			page 18


 640              		.loc 1 96 5 is_stmt 0
 641 02a4 1307F0FF 		li	a4,-1
 642 02a8 1317F703 		slli	a4,a4,63
 643 02ac 13079700 		addi	a4,a4,9
 644 02b0 6398E708 		bne	a5,a4,.L20
 645              	.LBB93:
 120:src/Riscv.cpp ****         {
 646              		.loc 1 120 9 is_stmt 1
 121:src/Riscv.cpp ****             //Riscv::printString("Hardware interrupt...\n");
 647              		.loc 1 121 9
 123:src/Riscv.cpp ****             break;
 648              		.loc 1 123 13
 123:src/Riscv.cpp ****             break;
 649              		.loc 1 123 28 is_stmt 0
 650 02b4 97000000 		call	console_handler@plt
 650      E7800000 
 651              	.LVL38:
 124:src/Riscv.cpp ****         }
 652              		.loc 1 124 13 is_stmt 1
 653 02bc 6F004008 		j	.L20
 654              	.LVL39:
 655              	.L21:
  98:src/Riscv.cpp ****         {
 656              		.loc 1 98 9
  99:src/Riscv.cpp ****             uint64 volatile sepc = Riscv::r_sepc();
 657              		.loc 1 99 9
 658              	.LBB77:
 100:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 659              		.loc 1 100 13
 660              	.LBB78:
 661              	.LBB79:
 100:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 662              		.loc 2 100 5
 101:src/../h/Riscv.hpp ****     return sepc;
 663              		.loc 2 101 5
 101:src/../h/Riscv.hpp ****     return sepc;
 664              		.loc 2 101 51 is_stmt 0
 665              	#APP
 666              	# 101 "src/../h/Riscv.hpp" 1
 667              		csrr a5, sepc
 668              	# 0 "" 2
 669              	.LVL40:
 670              	#NO_APP
 671 02c4 2334F4FC 		sd	a5,-56(s0)
 102:src/../h/Riscv.hpp **** }
 672              		.loc 2 102 5 is_stmt 1
 102:src/../h/Riscv.hpp **** }
 673              		.loc 2 102 12 is_stmt 0
 674 02c8 833784FC 		ld	a5,-56(s0)
 675              	.LBE79:
 676              	.LBE78:
 100:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 677              		.loc 1 100 50
 678 02cc 233CF4F8 		sd	a5,-104(s0)
 101:src/Riscv.cpp ****             mc_sip(Riscv::SIP_SSIP);
 679              		.loc 1 101 13 is_stmt 1
 680              	.LBB80:
GAS LISTING /tmp/ccKnjL1x.s 			page 19


 681              	.LBB81:
 156:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 682              		.loc 2 156 5
 157:src/../h/Riscv.hpp ****     return sstatus;
 683              		.loc 2 157 5
 157:src/../h/Riscv.hpp ****     return sstatus;
 684              		.loc 2 157 57 is_stmt 0
 685              	#APP
 686              	# 157 "src/../h/Riscv.hpp" 1
 687              		csrr a5, sstatus
 688              	# 0 "" 2
 689              	#NO_APP
 690 02d4 2330F4FC 		sd	a5,-64(s0)
 691              		.loc 2 158 5 is_stmt 1
 692              		.loc 2 158 12 is_stmt 0
 693 02d8 833704FC 		ld	a5,-64(s0)
 694              	.LBE81:
 695              	.LBE80:
 101:src/Riscv.cpp ****             mc_sip(Riscv::SIP_SSIP);
 696              		.loc 1 101 56
 697 02dc 2330F4FA 		sd	a5,-96(s0)
 102:src/Riscv.cpp ****             //Riscv::printString("timerInterrupt\n");
 698              		.loc 1 102 13 is_stmt 1
 699              	.LVL41:
 700              	.LBB82:
 701              	.LBB83:
 134:src/../h/Riscv.hpp **** }
 702              		.loc 2 134 5
 134:src/../h/Riscv.hpp **** }
 703              		.loc 2 134 50 is_stmt 0
 704 02e0 93072000 		li	a5,2
 705              	#APP
 706              	# 134 "src/../h/Riscv.hpp" 1
 707              		csrc sip, a5
 708              	# 0 "" 2
 709              	.LVL42:
 710              	#NO_APP
 711              	.LBE83:
 712              	.LBE82:
 104:src/Riscv.cpp ****             total++;
 713              		.loc 1 104 13 is_stmt 1
 105:src/Riscv.cpp **** 
 714              		.loc 1 105 13
 105:src/Riscv.cpp **** 
 715              		.loc 1 105 18 is_stmt 0
 716 02e8 17070000 		lla	a4,.LANCHOR1
 716      13070700 
 717 02f0 83370700 		ld	a5,0(a4)
 718 02f4 93871700 		addi	a5,a5,1
 719 02f8 2330F700 		sd	a5,0(a4)
 107:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
 720              		.loc 1 107 13 is_stmt 1
 107:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
 721              		.loc 1 107 34 is_stmt 0
 722 02fc 97040000 		la	s1,_ZN3PCB16timeSliceCounterE
 722      83B40400 
 723 0304 83B70400 		ld	a5,0(s1)
GAS LISTING /tmp/ccKnjL1x.s 			page 20


 724 0308 93871700 		addi	a5,a5,1
 725 030c 23B0F400 		sd	a5,0(s1)
 108:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
 726              		.loc 1 108 13 is_stmt 1
 108:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
 727              		.loc 1 108 40 is_stmt 0
 728 0310 97000000 		call	_ZN12SleepPCBList13tryToWakePCBsEv@plt
 728      E7800000 
 729              	.LVL43:
 109:src/Riscv.cpp ****             {
 730              		.loc 1 109 13 is_stmt 1
 109:src/Riscv.cpp ****             {
 731              		.loc 1 109 68 is_stmt 0
 732 0318 97070000 		la	a5,_ZN3PCB7runningE
 732      83B70700 
 733 0320 83B70700 		ld	a5,0(a5)
 734              	.LVL44:
 735              	.LBB84:
 736              	.LBB85:
 737              		.file 3 "src/../h/PCB.hpp"
   1:src/../h/PCB.hpp **** //
   2:src/../h/PCB.hpp **** // Created by os on 4/27/22.
   3:src/../h/PCB.hpp **** //
   4:src/../h/PCB.hpp **** 
   5:src/../h/PCB.hpp **** #ifndef PROJECT_BASE_V1_0_PCB_HPP
   6:src/../h/PCB.hpp **** #define PROJECT_BASE_V1_0_PCB_HPP
   7:src/../h/PCB.hpp **** 
   8:src/../h/PCB.hpp **** #include "../lib/hw.h"
   9:src/../h/PCB.hpp **** #include "Scheduler.hpp"
  10:src/../h/PCB.hpp **** #include "Riscv.hpp"
  11:src/../h/PCB.hpp **** 
  12:src/../h/PCB.hpp **** class PCB
  13:src/../h/PCB.hpp **** {
  14:src/../h/PCB.hpp **** public:
  15:src/../h/PCB.hpp ****     static uint64 savedRegA4;
  16:src/../h/PCB.hpp **** 
  17:src/../h/PCB.hpp ****     using Body = void (*)(void*);
  18:src/../h/PCB.hpp **** 
  19:src/../h/PCB.hpp ****     PCB(Body body,  void* args, void* stack_space, uint64 timeSlice);
  20:src/../h/PCB.hpp ****     ~PCB();
  21:src/../h/PCB.hpp **** 
  22:src/../h/PCB.hpp ****     void start();
  23:src/../h/PCB.hpp ****     static void dispatch();
  24:src/../h/PCB.hpp ****     static void sleep(time_t);
  25:src/../h/PCB.hpp **** 
  26:src/../h/PCB.hpp ****     static PCB* running;
  27:src/../h/PCB.hpp **** 
  28:src/../h/PCB.hpp ****     static uint64 timeSliceCounter;
  29:src/../h/PCB.hpp ****     uint64 getTimeSlice() { return timeSlice;}
 738              		.loc 3 29 29 is_stmt 1
 739              		.loc 3 29 36 is_stmt 0
 740 0324 83B70701 		ld	a5,16(a5)
 741              	.LVL45:
 742              	.LBE85:
 743              	.LBE84:
 109:src/Riscv.cpp ****             {
 744              		.loc 1 109 39
GAS LISTING /tmp/ccKnjL1x.s 			page 21


 745 0328 03B70400 		ld	a4,0(s1)
 109:src/Riscv.cpp ****             {
 746              		.loc 1 109 13
 747 032c 6374F702 		bgeu	a4,a5,.L43
 748              	.L26:
 115:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 749              		.loc 1 115 13 is_stmt 1
 115:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 750              		.loc 1 115 29 is_stmt 0
 751 0330 833704FA 		ld	a5,-96(s0)
 752              	.LVL46:
 753              	.LBB86:
 754              	.LBB87:
 159:src/../h/Riscv.hpp **** }
 160:src/../h/Riscv.hpp **** 
 161:src/../h/Riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus) {
 162:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sstatus, %0" : :"r"(sstatus));
 755              		.loc 2 162 5 is_stmt 1
 756              		.loc 2 162 57 is_stmt 0
 757              	#APP
 758              	# 162 "src/../h/Riscv.hpp" 1
 163              	}
 759              		csrw sstatus, a5
 760              	# 0 "" 2
 761              	.LVL47:
 762              	#NO_APP
 763              	.LBE87:
 764              	.LBE86:
 116:src/Riscv.cpp **** 
 765              		.loc 1 116 13 is_stmt 1
 116:src/Riscv.cpp **** 
 766              		.loc 1 116 26 is_stmt 0
 767 0338 833784F9 		ld	a5,-104(s0)
 768              	.LVL48:
 769              	.LBB88:
 770              	.LBB89:
 106:src/../h/Riscv.hpp **** }
 771              		.loc 2 106 5 is_stmt 1
 106:src/../h/Riscv.hpp **** }
 772              		.loc 2 106 51 is_stmt 0
 773              	#APP
 774              	# 106 "src/../h/Riscv.hpp" 1
 775              		csrw sepc, a5
 776              	# 0 "" 2
 777              	.LVL49:
 778              	#NO_APP
 779              	.L20:
 780              	.LBE89:
 781              	.LBE88:
 782              	.LBE77:
 783              	.LBE93:
 784              	.LBE66:
 148:src/Riscv.cpp ****             {
 149:src/Riscv.cpp ****                 case MemoryAllocator::MEM_ALLOC:
 150:src/Riscv.cpp ****                     MemoryAllocator::memAllocHandler();
 151:src/Riscv.cpp ****                     break;
 152:src/Riscv.cpp ****                 case MemoryAllocator::MEM_FREE:
GAS LISTING /tmp/ccKnjL1x.s 			page 22


 153:src/Riscv.cpp ****                     MemoryAllocator::memFreeHandler();
 154:src/Riscv.cpp ****                     break;
 155:src/Riscv.cpp ****                 case PCB::THREAD_MAKE_PCB:
 156:src/Riscv.cpp ****                     PCB::threadMakePCBHandler();
 157:src/Riscv.cpp ****                     break;
 158:src/Riscv.cpp ****                 case PCB::THREAD_CREATE:
 159:src/Riscv.cpp ****                     PCB::threadCreateHandler();
 160:src/Riscv.cpp ****                     break;
 161:src/Riscv.cpp ****                 case PCB::THREAD_START:
 162:src/Riscv.cpp ****                     PCB::threadStartHandler();
 163:src/Riscv.cpp ****                     break;
 164:src/Riscv.cpp ****                 case PCB::THREAD_DISPATCH:
 165:src/Riscv.cpp ****                     PCB::threadDispatchHandler();
 166:src/Riscv.cpp ****                     break;
 167:src/Riscv.cpp ****                 case PCB::THREAD_EXIT:
 168:src/Riscv.cpp ****                     PCB::threadExitHandler();
 169:src/Riscv.cpp ****                     break;
 170:src/Riscv.cpp ****                 case PCB::TIME_SLEEP:
 171:src/Riscv.cpp ****                     PCB::threadSleepHandler();
 172:src/Riscv.cpp ****                     break;
 173:src/Riscv.cpp ****                 case KSemaphore::SEM_OPEN:
 174:src/Riscv.cpp ****                     KSemaphore::semOpenHandler();
 175:src/Riscv.cpp ****                     break;
 176:src/Riscv.cpp ****                 case KSemaphore::SEM_WAIT:
 177:src/Riscv.cpp ****                     KSemaphore::semWaitHandler();
 178:src/Riscv.cpp ****                     break;
 179:src/Riscv.cpp ****                 case KSemaphore::SEM_SIGNAL:
 180:src/Riscv.cpp ****                     KSemaphore::semSignalHandler();
 181:src/Riscv.cpp ****                     break;
 182:src/Riscv.cpp ****                 case KSemaphore::SEM_CLOSE:
 183:src/Riscv.cpp ****                     KSemaphore::semCloseHandler();
 184:src/Riscv.cpp ****                     break;
 185:src/Riscv.cpp ****                 case KConsole::CONSOLE_GETC:
 186:src/Riscv.cpp ****                     //todo
 187:src/Riscv.cpp ****                     break;
 188:src/Riscv.cpp ****                 case KConsole::CONSOLE_PUTC:
 189:src/Riscv.cpp ****                     //todo
 190:src/Riscv.cpp ****                     break;
 191:src/Riscv.cpp ****             }
 192:src/Riscv.cpp **** 
 193:src/Riscv.cpp ****             Riscv::w_sstatus(sstatus);
 194:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 195:src/Riscv.cpp **** 
 196:src/Riscv.cpp ****             break;
 197:src/Riscv.cpp ****         }
 198:src/Riscv.cpp ****     }
 199:src/Riscv.cpp **** }
 785              		.loc 1 199 1
 786 0340 83308106 		ld	ra,104(sp)
 787              		.cfi_remember_state
 788              		.cfi_restore 1
 789 0344 03340106 		ld	s0,96(sp)
 790              		.cfi_restore 8
 791              		.cfi_def_cfa 2, 112
 792 0348 83348105 		ld	s1,88(sp)
 793              		.cfi_restore 9
 794 034c 13010107 		addi	sp,sp,112
GAS LISTING /tmp/ccKnjL1x.s 			page 23


 795              		.cfi_def_cfa_offset 0
 796 0350 67800000 		jr	ra
 797              	.L43:
 798              		.cfi_restore_state
 799              	.LBB96:
 800              	.LBB94:
 801              	.LBB90:
 111:src/Riscv.cpp ****                 PCB::dispatch();
 802              		.loc 1 111 17 is_stmt 1
 111:src/Riscv.cpp ****                 PCB::dispatch();
 803              		.loc 1 111 39 is_stmt 0
 804 0354 23B00400 		sd	zero,0(s1)
 112:src/Riscv.cpp ****             }
 805              		.loc 1 112 17 is_stmt 1
 112:src/Riscv.cpp ****             }
 806              		.loc 1 112 30 is_stmt 0
 807 0358 97000000 		call	_ZN3PCB8dispatchEv@plt
 807      E7800000 
 808              	.LVL50:
 809 0360 6FF01FFD 		j	.L26
 810              	.L40:
 811              	.LBE90:
 812              	.LBB91:
 149:src/Riscv.cpp ****                     MemoryAllocator::memAllocHandler();
 813              		.loc 1 149 17 is_stmt 1
 150:src/Riscv.cpp ****                     break;
 814              		.loc 1 150 21
 150:src/Riscv.cpp ****                     break;
 815              		.loc 1 150 53 is_stmt 0
 816 0364 97000000 		call	_ZN15MemoryAllocator15memAllocHandlerEv@plt
 816      E7800000 
 817              	.LVL51:
 151:src/Riscv.cpp ****                 case MemoryAllocator::MEM_FREE:
 818              		.loc 1 151 21 is_stmt 1
 819              	.L27:
 193:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 820              		.loc 1 193 13
 193:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 821              		.loc 1 193 29 is_stmt 0
 822 036c 833704FB 		ld	a5,-80(s0)
 823              	.LVL52:
 824              	.LBB73:
 825              	.LBB74:
 162:src/../h/Riscv.hpp **** }
 826              		.loc 2 162 5 is_stmt 1
 162:src/../h/Riscv.hpp **** }
 827              		.loc 2 162 57 is_stmt 0
 828              	#APP
 829              	# 162 "src/../h/Riscv.hpp" 1
 830              		csrw sstatus, a5
 831              	# 0 "" 2
 832              	.LVL53:
 833              	#NO_APP
 834              	.LBE74:
 835              	.LBE73:
 194:src/Riscv.cpp **** 
 836              		.loc 1 194 13 is_stmt 1
GAS LISTING /tmp/ccKnjL1x.s 			page 24


 194:src/Riscv.cpp **** 
 837              		.loc 1 194 26 is_stmt 0
 838 0374 833784FA 		ld	a5,-88(s0)
 839              	.LVL54:
 840              	.LBB75:
 841              	.LBB76:
 106:src/../h/Riscv.hpp **** }
 842              		.loc 2 106 5 is_stmt 1
 106:src/../h/Riscv.hpp **** }
 843              		.loc 2 106 51 is_stmt 0
 844              	#APP
 845              	# 106 "src/../h/Riscv.hpp" 1
 846              		csrw sepc, a5
 847              	# 0 "" 2
 848              	.LVL55:
 849              	#NO_APP
 850              	.LBE76:
 851              	.LBE75:
 852              	.LBE91:
 853              	.LBE94:
 854              	.LBE96:
 855              		.loc 1 199 1
 856 037c 6FF05FFC 		j	.L20
 857              	.L39:
 858              	.LBB97:
 859              	.LBB95:
 860              	.LBB92:
 152:src/Riscv.cpp ****                     MemoryAllocator::memFreeHandler();
 861              		.loc 1 152 17 is_stmt 1
 153:src/Riscv.cpp ****                     break;
 862              		.loc 1 153 21
 153:src/Riscv.cpp ****                     break;
 863              		.loc 1 153 52 is_stmt 0
 864 0380 97000000 		call	_ZN15MemoryAllocator14memFreeHandlerEv@plt
 864      E7800000 
 865              	.LVL56:
 154:src/Riscv.cpp ****                 case PCB::THREAD_MAKE_PCB:
 866              		.loc 1 154 21 is_stmt 1
 867 0388 6FF05FFE 		j	.L27
 868              	.L35:
 155:src/Riscv.cpp ****                     PCB::threadMakePCBHandler();
 869              		.loc 1 155 17
 156:src/Riscv.cpp ****                     break;
 870              		.loc 1 156 21
 156:src/Riscv.cpp ****                     break;
 871              		.loc 1 156 46 is_stmt 0
 872 038c 97000000 		call	_ZN3PCB20threadMakePCBHandlerEv@plt
 872      E7800000 
 873              	.LVL57:
 157:src/Riscv.cpp ****                 case PCB::THREAD_CREATE:
 874              		.loc 1 157 21 is_stmt 1
 875 0394 6FF09FFD 		j	.L27
 876              	.L38:
 158:src/Riscv.cpp ****                     PCB::threadCreateHandler();
 877              		.loc 1 158 17
 159:src/Riscv.cpp ****                     break;
 878              		.loc 1 159 21
GAS LISTING /tmp/ccKnjL1x.s 			page 25


 159:src/Riscv.cpp ****                     break;
 879              		.loc 1 159 45 is_stmt 0
 880 0398 97000000 		call	_ZN3PCB19threadCreateHandlerEv@plt
 880      E7800000 
 881              	.LVL58:
 160:src/Riscv.cpp ****                 case PCB::THREAD_START:
 882              		.loc 1 160 21 is_stmt 1
 883 03a0 6FF0DFFC 		j	.L27
 884              	.L34:
 161:src/Riscv.cpp ****                     PCB::threadStartHandler();
 885              		.loc 1 161 17
 162:src/Riscv.cpp ****                     break;
 886              		.loc 1 162 21
 162:src/Riscv.cpp ****                     break;
 887              		.loc 1 162 44 is_stmt 0
 888 03a4 97000000 		call	_ZN3PCB18threadStartHandlerEv@plt
 888      E7800000 
 889              	.LVL59:
 163:src/Riscv.cpp ****                 case PCB::THREAD_DISPATCH:
 890              		.loc 1 163 21 is_stmt 1
 891 03ac 6FF01FFC 		j	.L27
 892              	.L36:
 164:src/Riscv.cpp ****                     PCB::threadDispatchHandler();
 893              		.loc 1 164 17
 165:src/Riscv.cpp ****                     break;
 894              		.loc 1 165 21
 165:src/Riscv.cpp ****                     break;
 895              		.loc 1 165 47 is_stmt 0
 896 03b0 97000000 		call	_ZN3PCB21threadDispatchHandlerEv@plt
 896      E7800000 
 897              	.LVL60:
 166:src/Riscv.cpp ****                 case PCB::THREAD_EXIT:
 898              		.loc 1 166 21 is_stmt 1
 899 03b8 6FF05FFB 		j	.L27
 900              	.L37:
 167:src/Riscv.cpp ****                     PCB::threadExitHandler();
 901              		.loc 1 167 17
 168:src/Riscv.cpp ****                     break;
 902              		.loc 1 168 21
 168:src/Riscv.cpp ****                     break;
 903              		.loc 1 168 43 is_stmt 0
 904 03bc 97000000 		call	_ZN3PCB17threadExitHandlerEv@plt
 904      E7800000 
 905              	.LVL61:
 169:src/Riscv.cpp ****                 case PCB::TIME_SLEEP:
 906              		.loc 1 169 21 is_stmt 1
 907 03c4 6FF09FFA 		j	.L27
 908              	.L28:
 170:src/Riscv.cpp ****                     PCB::threadSleepHandler();
 909              		.loc 1 170 17
 171:src/Riscv.cpp ****                     break;
 910              		.loc 1 171 21
 171:src/Riscv.cpp ****                     break;
 911              		.loc 1 171 44 is_stmt 0
 912 03c8 97000000 		call	_ZN3PCB18threadSleepHandlerEv@plt
 912      E7800000 
 913              	.LVL62:
GAS LISTING /tmp/ccKnjL1x.s 			page 26


 172:src/Riscv.cpp ****                 case KSemaphore::SEM_OPEN:
 914              		.loc 1 172 21 is_stmt 1
 915 03d0 6FF0DFF9 		j	.L27
 916              	.L33:
 173:src/Riscv.cpp ****                     KSemaphore::semOpenHandler();
 917              		.loc 1 173 17
 174:src/Riscv.cpp ****                     break;
 918              		.loc 1 174 21
 174:src/Riscv.cpp ****                     break;
 919              		.loc 1 174 47 is_stmt 0
 920 03d4 97000000 		call	_ZN10KSemaphore14semOpenHandlerEv@plt
 920      E7800000 
 921              	.LVL63:
 175:src/Riscv.cpp ****                 case KSemaphore::SEM_WAIT:
 922              		.loc 1 175 21 is_stmt 1
 923 03dc 6FF01FF9 		j	.L27
 924              	.L31:
 176:src/Riscv.cpp ****                     KSemaphore::semWaitHandler();
 925              		.loc 1 176 17
 177:src/Riscv.cpp ****                     break;
 926              		.loc 1 177 21
 177:src/Riscv.cpp ****                     break;
 927              		.loc 1 177 47 is_stmt 0
 928 03e0 97000000 		call	_ZN10KSemaphore14semWaitHandlerEv@plt
 928      E7800000 
 929              	.LVL64:
 178:src/Riscv.cpp ****                 case KSemaphore::SEM_SIGNAL:
 930              		.loc 1 178 21 is_stmt 1
 931 03e8 6FF05FF8 		j	.L27
 932              	.L30:
 179:src/Riscv.cpp ****                     KSemaphore::semSignalHandler();
 933              		.loc 1 179 17
 180:src/Riscv.cpp ****                     break;
 934              		.loc 1 180 21
 180:src/Riscv.cpp ****                     break;
 935              		.loc 1 180 49 is_stmt 0
 936 03ec 97000000 		call	_ZN10KSemaphore16semSignalHandlerEv@plt
 936      E7800000 
 937              	.LVL65:
 181:src/Riscv.cpp ****                 case KSemaphore::SEM_CLOSE:
 938              		.loc 1 181 21 is_stmt 1
 939 03f4 6FF09FF7 		j	.L27
 940              	.L32:
 182:src/Riscv.cpp ****                     KSemaphore::semCloseHandler();
 941              		.loc 1 182 17
 183:src/Riscv.cpp ****                     break;
 942              		.loc 1 183 21
 183:src/Riscv.cpp ****                     break;
 943              		.loc 1 183 48 is_stmt 0
 944 03f8 97000000 		call	_ZN10KSemaphore15semCloseHandlerEv@plt
 944      E7800000 
 945              	.LVL66:
 184:src/Riscv.cpp ****                 case KConsole::CONSOLE_GETC:
 946              		.loc 1 184 21 is_stmt 1
 947 0400 6FF0DFF6 		j	.L27
 948              	.LBE92:
 949              	.LBE95:
GAS LISTING /tmp/ccKnjL1x.s 			page 27


 950              	.LBE97:
 951              		.cfi_endproc
 952              	.LFE32:
 954              		.section	.rodata.str1.8,"aMS",@progbits,1
 955              		.align	3
 956              	.LC0:
 957 0000 456E642E 		.string	"End..."
 957      2E2E00
 958              		.text
 959              		.align	2
 960              		.globl	_ZN5Riscv10kernelMainEv
 962              	_ZN5Riscv10kernelMainEv:
 963              	.LFB33:
 200:src/Riscv.cpp **** 
 201:src/Riscv.cpp **** void Riscv::kernelMain()
 202:src/Riscv.cpp **** {
 964              		.loc 1 202 1
 965              		.cfi_startproc
 966 0404 130101FF 		addi	sp,sp,-16
 967              		.cfi_def_cfa_offset 16
 968 0408 23341100 		sd	ra,8(sp)
 969 040c 23308100 		sd	s0,0(sp)
 970              		.cfi_offset 1, -8
 971              		.cfi_offset 8, -16
 972 0410 13040101 		addi	s0,sp,16
 973              		.cfi_def_cfa 8, 0
 203:src/Riscv.cpp ****     initSystem();
 974              		.loc 1 203 5
 975              		.loc 1 203 15 is_stmt 0
 976 0414 97000000 		call	_ZN5Riscv10initSystemEv
 976      E7800000 
 977              	.LVL67:
 204:src/Riscv.cpp **** 
 205:src/Riscv.cpp ****     //enableInterrupts();
 206:src/Riscv.cpp **** 
 207:src/Riscv.cpp ****     //PCB* userPCB = new PCB(&Riscv::userMainWrapper, 0, kmalloc(DEFAULT_STACK_SIZE), DEFAULT_TIME_
 208:src/Riscv.cpp ****     //userPCB->start();
 209:src/Riscv.cpp ****     //while(userPCB->getState() != PCB::FINISHED)
 210:src/Riscv.cpp ****     //{
 211:src/Riscv.cpp ****     //    thread_dispatch();
 212:src/Riscv.cpp ****     //}
 213:src/Riscv.cpp **** 
 214:src/Riscv.cpp ****     myTests();
 978              		.loc 1 214 5 is_stmt 1
 979              		.loc 1 214 12 is_stmt 0
 980 041c 97000000 		call	_Z7myTestsv@plt
 980      E7800000 
 981              	.LVL68:
 215:src/Riscv.cpp **** 
 216:src/Riscv.cpp ****     //disableInterrupts();
 217:src/Riscv.cpp **** 
 218:src/Riscv.cpp ****     endSystem();
 982              		.loc 1 218 5 is_stmt 1
 983              		.loc 1 218 14 is_stmt 0
 984 0424 97000000 		call	_ZN5Riscv9endSystemEv
 984      E7800000 
 985              	.LVL69:
GAS LISTING /tmp/ccKnjL1x.s 			page 28


 219:src/Riscv.cpp **** 
 220:src/Riscv.cpp ****     Riscv::printString("End...");
 986              		.loc 1 220 5 is_stmt 1
 987              		.loc 1 220 23 is_stmt 0
 988 042c 17050000 		lla	a0,.LC0
 988      13050500 
 989 0434 97000000 		call	_ZN5Riscv11printStringEPKc
 989      E7800000 
 990              	.LVL70:
 221:src/Riscv.cpp **** }
 991              		.loc 1 221 1
 992 043c 83308100 		ld	ra,8(sp)
 993              		.cfi_restore 1
 994 0440 03340100 		ld	s0,0(sp)
 995              		.cfi_restore 8
 996              		.cfi_def_cfa 2, 16
 997 0444 13010101 		addi	sp,sp,16
 998              		.cfi_def_cfa_offset 0
 999 0448 67800000 		jr	ra
 1000              		.cfi_endproc
 1001              	.LFE33:
 1003              		.align	2
 1004              		.globl	_ZN5Riscv15userMainWrapperEPv
 1006              	_ZN5Riscv15userMainWrapperEPv:
 1007              	.LFB34:
 222:src/Riscv.cpp **** 
 223:src/Riscv.cpp **** void Riscv::userMainWrapper(void* )
 224:src/Riscv.cpp **** {
 1008              		.loc 1 224 1 is_stmt 1
 1009              		.cfi_startproc
 1010 044c 130101FF 		addi	sp,sp,-16
 1011              		.cfi_def_cfa_offset 16
 1012 0450 23341100 		sd	ra,8(sp)
 1013 0454 23308100 		sd	s0,0(sp)
 1014              		.cfi_offset 1, -8
 1015              		.cfi_offset 8, -16
 1016 0458 13040101 		addi	s0,sp,16
 1017              		.cfi_def_cfa 8, 0
 225:src/Riscv.cpp ****     userMain();
 1018              		.loc 1 225 5
 1019              		.loc 1 225 13 is_stmt 0
 1020 045c 97000000 		call	_Z8userMainv@plt
 1020      E7800000 
 1021              	.LVL71:
 226:src/Riscv.cpp **** }
 1022              		.loc 1 226 1
 1023 0464 83308100 		ld	ra,8(sp)
 1024              		.cfi_restore 1
 1025 0468 03340100 		ld	s0,0(sp)
 1026              		.cfi_restore 8
 1027              		.cfi_def_cfa 2, 16
 1028 046c 13010101 		addi	sp,sp,16
 1029              		.cfi_def_cfa_offset 0
 1030 0470 67800000 		jr	ra
 1031              		.cfi_endproc
 1032              	.LFE34:
 1034              		.bss
GAS LISTING /tmp/ccKnjL1x.s 			page 29


 1035              		.align	3
 1036              		.set	.LANCHOR1,. + 0
 1039              	_ZZN5Riscv20handleSupervisorTrapEvE5total:
 1040 0000 00000000 		.zero	8
 1040      00000000 
 1041              		.section	.rodata
 1042              		.align	3
 1043              		.set	.LANCHOR0,. + 0
 1046              	_ZZN5Riscv12printIntegerEmE6digits:
 1047 00c8 30313233 		.string	"0123456789"
 1047      34353637 
 1047      383900
 1048              		.text
 1049              	.Letext0:
 1050              		.file 4 "src/../h/../lib/hw.h"
 1051              		.file 5 "src/../h/MemoryAllocator.hpp"
 1052              		.file 6 "src/../h/KSemaphore.hpp"
 1053              		.file 7 "src/../h/SleepPCBList.hpp"
 1054              		.file 8 "src/../h/KConsole.hpp"
 1055              		.file 9 "src/../test/userMain.hpp"
 1056              		.file 10 "src/../h/Tests.hpp"
 1057              		.file 11 "src/../lib/console.h"
GAS LISTING /tmp/ccKnjL1x.s 			page 30


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Riscv.cpp
     /tmp/ccKnjL1x.s:9      .text:0000000000000000 _ZN5Riscv10initSystemEv
     /tmp/ccKnjL1x.s:13     .text:0000000000000000 .L0 
     /tmp/ccKnjL1x.s:14     .text:0000000000000000 .L0 
     /tmp/ccKnjL1x.s:15     .text:0000000000000004 .L0 
     /tmp/ccKnjL1x.s:18     .text:000000000000000c .L0 
     /tmp/ccKnjL1x.s:19     .text:000000000000000c .L0 
     /tmp/ccKnjL1x.s:21     .text:0000000000000010 .L0 
     /tmp/ccKnjL1x.s:23     .text:0000000000000010 .L0 
     /tmp/ccKnjL1x.s:24     .text:0000000000000010 .L0 
     /tmp/ccKnjL1x.s:30     .text:0000000000000018 .L0 
  src/../h/Riscv.hpp:116    .text:0000000000000018 .L0 
     /tmp/ccKnjL1x.s:40     .text:000000000000001c .L0 
     /tmp/ccKnjL1x.s:41     .text:000000000000001c .L0 
     /tmp/ccKnjL1x.s:44     .text:0000000000000024 .L0 
     /tmp/ccKnjL1x.s:45     .text:0000000000000024 .L0 
     /tmp/ccKnjL1x.s:48     .text:000000000000002c .L0 
     /tmp/ccKnjL1x.s:49     .text:0000000000000030 .L0 
     /tmp/ccKnjL1x.s:51     .text:0000000000000034 .L0 
     /tmp/ccKnjL1x.s:52     .text:0000000000000034 .L0 
     /tmp/ccKnjL1x.s:54     .text:0000000000000038 .L0 
     /tmp/ccKnjL1x.s:56     .text:000000000000003c .L0 
     /tmp/ccKnjL1x.s:62     .text:000000000000003c _ZN5Riscv16enableInterruptsEv
     /tmp/ccKnjL1x.s:65     .text:000000000000003c .L0 
     /tmp/ccKnjL1x.s:66     .text:000000000000003c .L0 
     /tmp/ccKnjL1x.s:67     .text:0000000000000040 .L0 
     /tmp/ccKnjL1x.s:69     .text:0000000000000044 .L0 
     /tmp/ccKnjL1x.s:71     .text:0000000000000048 .L0 
     /tmp/ccKnjL1x.s:76     .text:0000000000000048 .L0 
     /tmp/ccKnjL1x.s:77     .text:0000000000000048 .L0 
     /tmp/ccKnjL1x.s:78     .text:0000000000000048 .L0 
     /tmp/ccKnjL1x.s:88     .text:0000000000000050 .L0 
     /tmp/ccKnjL1x.s:89     .text:0000000000000054 .L0 
     /tmp/ccKnjL1x.s:90     .text:0000000000000054 .L0 
     /tmp/ccKnjL1x.s:92     .text:0000000000000058 .L0 
     /tmp/ccKnjL1x.s:94     .text:000000000000005c .L0 
     /tmp/ccKnjL1x.s:100    .text:000000000000005c _ZN5Riscv17disableInterruptsEv
     /tmp/ccKnjL1x.s:103    .text:000000000000005c .L0 
     /tmp/ccKnjL1x.s:104    .text:000000000000005c .L0 
     /tmp/ccKnjL1x.s:105    .text:0000000000000060 .L0 
     /tmp/ccKnjL1x.s:107    .text:0000000000000064 .L0 
     /tmp/ccKnjL1x.s:109    .text:0000000000000068 .L0 
     /tmp/ccKnjL1x.s:114    .text:0000000000000068 .L0 
     /tmp/ccKnjL1x.s:115    .text:0000000000000068 .L0 
     /tmp/ccKnjL1x.s:116    .text:0000000000000068 .L0 
     /tmp/ccKnjL1x.s:126    .text:0000000000000070 .L0 
     /tmp/ccKnjL1x.s:127    .text:0000000000000074 .L0 
     /tmp/ccKnjL1x.s:128    .text:0000000000000074 .L0 
     /tmp/ccKnjL1x.s:130    .text:0000000000000078 .L0 
     /tmp/ccKnjL1x.s:132    .text:000000000000007c .L0 
     /tmp/ccKnjL1x.s:138    .text:000000000000007c _ZN5Riscv9endSystemEv
     /tmp/ccKnjL1x.s:141    .text:000000000000007c .L0 
     /tmp/ccKnjL1x.s:142    .text:000000000000007c .L0 
     /tmp/ccKnjL1x.s:143    .text:0000000000000080 .L0 
     /tmp/ccKnjL1x.s:146    .text:0000000000000088 .L0 
     /tmp/ccKnjL1x.s:147    .text:0000000000000088 .L0 
GAS LISTING /tmp/ccKnjL1x.s 			page 31


     /tmp/ccKnjL1x.s:149    .text:000000000000008c .L0 
     /tmp/ccKnjL1x.s:151    .text:000000000000008c .L0 
     /tmp/ccKnjL1x.s:152    .text:000000000000008c .L0 
     /tmp/ccKnjL1x.s:155    .text:0000000000000094 .L0 
     /tmp/ccKnjL1x.s:156    .text:0000000000000098 .L0 
     /tmp/ccKnjL1x.s:158    .text:000000000000009c .L0 
     /tmp/ccKnjL1x.s:159    .text:000000000000009c .L0 
     /tmp/ccKnjL1x.s:161    .text:00000000000000a0 .L0 
     /tmp/ccKnjL1x.s:163    .text:00000000000000a4 .L0 
     /tmp/ccKnjL1x.s:169    .text:00000000000000a4 _ZN5Riscv10popSppSpieEv
     /tmp/ccKnjL1x.s:172    .text:00000000000000a4 .L0 
     /tmp/ccKnjL1x.s:173    .text:00000000000000a4 .L0 
     /tmp/ccKnjL1x.s:174    .text:00000000000000a8 .L0 
     /tmp/ccKnjL1x.s:176    .text:00000000000000ac .L0 
     /tmp/ccKnjL1x.s:178    .text:00000000000000b0 .L0 
     /tmp/ccKnjL1x.s:180    .text:00000000000000b0 .L0 
       src/Riscv.cpp:40     .text:00000000000000b0 .L0 
     /tmp/ccKnjL1x.s:186    .text:00000000000000b4 .L0 
       src/Riscv.cpp:41     .text:00000000000000b4 .L0 
     /tmp/ccKnjL1x.s:192    .text:00000000000000b8 .L0 
     /tmp/ccKnjL1x.s:193    .text:00000000000000bc .L0 
     /tmp/ccKnjL1x.s:194    .text:00000000000000bc .L0 
     /tmp/ccKnjL1x.s:196    .text:00000000000000c0 .L0 
     /tmp/ccKnjL1x.s:198    .text:00000000000000c4 .L0 
     /tmp/ccKnjL1x.s:204    .text:00000000000000c4 _ZN5Riscv11printStringEPKc
     /tmp/ccKnjL1x.s:207    .text:00000000000000c4 .L0 
     /tmp/ccKnjL1x.s:209    .text:00000000000000c4 .L0 
     /tmp/ccKnjL1x.s:210    .text:00000000000000c8 .L0 
     /tmp/ccKnjL1x.s:215    .text:00000000000000d8 .L0 
     /tmp/ccKnjL1x.s:216    .text:00000000000000d8 .L0 
     /tmp/ccKnjL1x.s:217    .text:00000000000000d8 .L0 
     /tmp/ccKnjL1x.s:218    .text:00000000000000d8 .L0 
     /tmp/ccKnjL1x.s:220    .text:00000000000000dc .L0 
     /tmp/ccKnjL1x.s:225    .text:00000000000000e0 .L0 
     /tmp/ccKnjL1x.s:226    .text:00000000000000e0 .L0 
     /tmp/ccKnjL1x.s:227    .text:00000000000000e0 .L0 
  src/../h/Riscv.hpp:157    .text:00000000000000e0 .L0 
     /tmp/ccKnjL1x.s:235    .text:00000000000000e8 .L0 
     /tmp/ccKnjL1x.s:236    .text:00000000000000e8 .L0 
     /tmp/ccKnjL1x.s:243    .text:00000000000000ec .L0 
     /tmp/ccKnjL1x.s:244    .text:00000000000000ec .L0 
     /tmp/ccKnjL1x.s:245    .text:00000000000000ec .L0 
     /tmp/ccKnjL1x.s:256    .text:00000000000000f4 .L0 
     /tmp/ccKnjL1x.s:257    .text:00000000000000f4 .L0 
     /tmp/ccKnjL1x.s:258    .text:00000000000000f4 .L0 
     /tmp/ccKnjL1x.s:260    .text:00000000000000f8 .L0 
     /tmp/ccKnjL1x.s:262    .text:00000000000000fc .L0 
     /tmp/ccKnjL1x.s:263    .text:00000000000000fc .L0 
     /tmp/ccKnjL1x.s:266    .text:0000000000000104 .L0 
     /tmp/ccKnjL1x.s:267    .text:0000000000000104 .L0 
     /tmp/ccKnjL1x.s:270    .text:0000000000000108 .L0 
     /tmp/ccKnjL1x.s:273    .text:000000000000010c .L0 
     /tmp/ccKnjL1x.s:274    .text:000000000000010c .L0 
     /tmp/ccKnjL1x.s:277    .text:0000000000000110 .L0 
     /tmp/ccKnjL1x.s:283    .text:0000000000000118 .L0 
  src/../h/Riscv.hpp:148    .text:0000000000000118 .L0 
     /tmp/ccKnjL1x.s:293    .text:000000000000011c .L0 
GAS LISTING /tmp/ccKnjL1x.s 			page 32


     /tmp/ccKnjL1x.s:294    .text:0000000000000120 .L0 
     /tmp/ccKnjL1x.s:296    .text:0000000000000124 .L0 
     /tmp/ccKnjL1x.s:297    .text:0000000000000124 .L0 
     /tmp/ccKnjL1x.s:299    .text:0000000000000128 .L0 
     /tmp/ccKnjL1x.s:302    .text:000000000000012c .L0 
     /tmp/ccKnjL1x.s:304    .text:0000000000000130 .L0 
     /tmp/ccKnjL1x.s:306    .text:0000000000000134 .L0 
     /tmp/ccKnjL1x.s:312    .text:0000000000000134 _ZN5Riscv12printIntegerEm
     /tmp/ccKnjL1x.s:315    .text:0000000000000134 .L0 
     /tmp/ccKnjL1x.s:317    .text:0000000000000134 .L0 
     /tmp/ccKnjL1x.s:318    .text:0000000000000138 .L0 
     /tmp/ccKnjL1x.s:323    .text:0000000000000148 .L0 
     /tmp/ccKnjL1x.s:324    .text:0000000000000148 .L0 
     /tmp/ccKnjL1x.s:325    .text:0000000000000148 .L0 
     /tmp/ccKnjL1x.s:326    .text:0000000000000148 .L0 
     /tmp/ccKnjL1x.s:328    .text:000000000000014c .L0 
     /tmp/ccKnjL1x.s:332    .text:000000000000014c .L0 
     /tmp/ccKnjL1x.s:333    .text:000000000000014c .L0 
     /tmp/ccKnjL1x.s:334    .text:000000000000014c .L0 
  src/../h/Riscv.hpp:157    .text:000000000000014c .L0 
     /tmp/ccKnjL1x.s:342    .text:0000000000000154 .L0 
     /tmp/ccKnjL1x.s:343    .text:0000000000000154 .L0 
     /tmp/ccKnjL1x.s:350    .text:0000000000000158 .L0 
     /tmp/ccKnjL1x.s:351    .text:0000000000000158 .L0 
     /tmp/ccKnjL1x.s:352    .text:0000000000000158 .L0 
     /tmp/ccKnjL1x.s:362    .text:0000000000000160 .L0 
     /tmp/ccKnjL1x.s:363    .text:0000000000000160 .L0 
     /tmp/ccKnjL1x.s:364    .text:0000000000000160 .L0 
     /tmp/ccKnjL1x.s:365    .text:0000000000000160 .L0 
     /tmp/ccKnjL1x.s:366    .text:0000000000000160 .L0 
     /tmp/ccKnjL1x.s:367    .text:0000000000000160 .L0 
     /tmp/ccKnjL1x.s:368    .text:0000000000000160 .L0 
     /tmp/ccKnjL1x.s:369    .text:0000000000000160 .L0 
     /tmp/ccKnjL1x.s:372    .text:0000000000000164 .L0 
     /tmp/ccKnjL1x.s:373    .text:0000000000000164 .L0 
     /tmp/ccKnjL1x.s:377    .text:0000000000000168 .L0 
     /tmp/ccKnjL1x.s:378    .text:0000000000000168 .L0 
     /tmp/ccKnjL1x.s:379    .text:0000000000000168 .L0 
     /tmp/ccKnjL1x.s:383    .text:0000000000000170 .L0 
     /tmp/ccKnjL1x.s:389    .text:0000000000000188 .L0 
     /tmp/ccKnjL1x.s:395    .text:0000000000000198 .L0 
     /tmp/ccKnjL1x.s:397    .text:000000000000019c .L0 
     /tmp/ccKnjL1x.s:400    .text:00000000000001a0 .L0 
     /tmp/ccKnjL1x.s:405    .text:00000000000001a8 .L0 
     /tmp/ccKnjL1x.s:406    .text:00000000000001a8 .L0 
     /tmp/ccKnjL1x.s:410    .text:00000000000001b0 .L0 
     /tmp/ccKnjL1x.s:411    .text:00000000000001b0 .L0 
     /tmp/ccKnjL1x.s:419    .text:00000000000001c8 .L0 
     /tmp/ccKnjL1x.s:420    .text:00000000000001c8 .L0 
     /tmp/ccKnjL1x.s:424    .text:00000000000001d4 .L0 
     /tmp/ccKnjL1x.s:425    .text:00000000000001d4 .L0 
     /tmp/ccKnjL1x.s:428    .text:00000000000001d8 .L0 
     /tmp/ccKnjL1x.s:434    .text:00000000000001e0 .L0 
  src/../h/Riscv.hpp:148    .text:00000000000001e0 .L0 
     /tmp/ccKnjL1x.s:444    .text:00000000000001e4 .L0 
     /tmp/ccKnjL1x.s:445    .text:00000000000001e8 .L0 
     /tmp/ccKnjL1x.s:447    .text:00000000000001ec .L0 
GAS LISTING /tmp/ccKnjL1x.s 			page 33


     /tmp/ccKnjL1x.s:448    .text:00000000000001ec .L0 
     /tmp/ccKnjL1x.s:450    .text:00000000000001f0 .L0 
     /tmp/ccKnjL1x.s:452    .text:00000000000001f4 .L0 
     /tmp/ccKnjL1x.s:454    .text:00000000000001f8 .L0 
     /tmp/ccKnjL1x.s:456    .text:00000000000001fc .L0 
     /tmp/ccKnjL1x.s:462    .text:00000000000001fc _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccKnjL1x.s:465    .text:00000000000001fc .L0 
     /tmp/ccKnjL1x.s:466    .text:00000000000001fc .L0 
     /tmp/ccKnjL1x.s:467    .text:0000000000000200 .L0 
     /tmp/ccKnjL1x.s:471    .text:000000000000020c .L0 
     /tmp/ccKnjL1x.s:472    .text:000000000000020c .L0 
     /tmp/ccKnjL1x.s:473    .text:000000000000020c .L0 
     /tmp/ccKnjL1x.s:475    .text:0000000000000210 .L0 
     /tmp/ccKnjL1x.s:477    .text:0000000000000210 .L0 
       src/Riscv.cpp:92     .text:0000000000000210 .L0 
     /tmp/ccKnjL1x.s:488    .text:0000000000000220 .L0 
     /tmp/ccKnjL1x.s:489    .text:0000000000000220 .L0 
     /tmp/ccKnjL1x.s:490    .text:0000000000000220 .L0 
  src/../h/Riscv.hpp:91     .text:0000000000000220 .L0 
     /tmp/ccKnjL1x.s:498    .text:0000000000000228 .L0 
     /tmp/ccKnjL1x.s:499    .text:0000000000000228 .L0 
     /tmp/ccKnjL1x.s:505    .text:000000000000022c .L0 
     /tmp/ccKnjL1x.s:519    .text:0000000000000258 .L0 
     /tmp/ccKnjL1x.s:520    .text:0000000000000258 .L0 
     /tmp/ccKnjL1x.s:522    .text:0000000000000258 .L0 
     /tmp/ccKnjL1x.s:523    .text:0000000000000258 .L0 
     /tmp/ccKnjL1x.s:524    .text:0000000000000258 .L0 
       src/Riscv.cpp:142    .text:0000000000000258 .L0 
     /tmp/ccKnjL1x.s:534    .text:000000000000025c .L0 
     /tmp/ccKnjL1x.s:535    .text:000000000000025c .L0 
     /tmp/ccKnjL1x.s:536    .text:000000000000025c .L0 
  src/../h/Riscv.hpp:101    .text:000000000000025c .L0 
     /tmp/ccKnjL1x.s:544    .text:0000000000000264 .L0 
     /tmp/ccKnjL1x.s:545    .text:0000000000000264 .L0 
     /tmp/ccKnjL1x.s:549    .text:0000000000000268 .L0 
     /tmp/ccKnjL1x.s:551    .text:000000000000026c .L0 
     /tmp/ccKnjL1x.s:555    .text:0000000000000270 .L0 
     /tmp/ccKnjL1x.s:556    .text:0000000000000270 .L0 
     /tmp/ccKnjL1x.s:557    .text:0000000000000270 .L0 
  src/../h/Riscv.hpp:157    .text:0000000000000270 .L0 
     /tmp/ccKnjL1x.s:565    .text:0000000000000278 .L0 
     /tmp/ccKnjL1x.s:566    .text:0000000000000278 .L0 
     /tmp/ccKnjL1x.s:570    .text:000000000000027c .L0 
     /tmp/ccKnjL1x.s:572    .text:0000000000000280 .L0 
     /tmp/ccKnjL1x.s:641    .text:00000000000002a4 .L0 
     /tmp/ccKnjL1x.s:647    .text:00000000000002b4 .L0 
     /tmp/ccKnjL1x.s:648    .text:00000000000002b4 .L0 
     /tmp/ccKnjL1x.s:649    .text:00000000000002b4 .L0 
     /tmp/ccKnjL1x.s:650    .text:00000000000002b4 .L0 
     /tmp/ccKnjL1x.s:653    .text:00000000000002bc .L0 
     /tmp/ccKnjL1x.s:657    .text:00000000000002c0 .L0 
     /tmp/ccKnjL1x.s:659    .text:00000000000002c0 .L0 
     /tmp/ccKnjL1x.s:662    .text:00000000000002c0 .L0 
     /tmp/ccKnjL1x.s:663    .text:00000000000002c0 .L0 
     /tmp/ccKnjL1x.s:664    .text:00000000000002c0 .L0 
  src/../h/Riscv.hpp:101    .text:00000000000002c0 .L0 
     /tmp/ccKnjL1x.s:673    .text:00000000000002c8 .L0 
GAS LISTING /tmp/ccKnjL1x.s 			page 34


     /tmp/ccKnjL1x.s:674    .text:00000000000002c8 .L0 
     /tmp/ccKnjL1x.s:678    .text:00000000000002cc .L0 
     /tmp/ccKnjL1x.s:682    .text:00000000000002d0 .L0 
     /tmp/ccKnjL1x.s:683    .text:00000000000002d0 .L0 
     /tmp/ccKnjL1x.s:684    .text:00000000000002d0 .L0 
  src/../h/Riscv.hpp:157    .text:00000000000002d0 .L0 
     /tmp/ccKnjL1x.s:692    .text:00000000000002d8 .L0 
     /tmp/ccKnjL1x.s:693    .text:00000000000002d8 .L0 
     /tmp/ccKnjL1x.s:697    .text:00000000000002dc .L0 
     /tmp/ccKnjL1x.s:702    .text:00000000000002e0 .L0 
     /tmp/ccKnjL1x.s:703    .text:00000000000002e0 .L0 
     /tmp/ccKnjL1x.s:704    .text:00000000000002e0 .L0 
     /tmp/ccKnjL1x.s:714    .text:00000000000002e8 .L0 
     /tmp/ccKnjL1x.s:715    .text:00000000000002e8 .L0 
     /tmp/ccKnjL1x.s:716    .text:00000000000002e8 .L0 
     /tmp/ccKnjL1x.s:721    .text:00000000000002fc .L0 
     /tmp/ccKnjL1x.s:722    .text:00000000000002fc .L0 
     /tmp/ccKnjL1x.s:727    .text:0000000000000310 .L0 
     /tmp/ccKnjL1x.s:728    .text:0000000000000310 .L0 
     /tmp/ccKnjL1x.s:731    .text:0000000000000318 .L0 
     /tmp/ccKnjL1x.s:732    .text:0000000000000318 .L0 
     /tmp/ccKnjL1x.s:739    .text:0000000000000324 .L0 
     /tmp/ccKnjL1x.s:740    .text:0000000000000324 .L0 
     /tmp/ccKnjL1x.s:745    .text:0000000000000328 .L0 
     /tmp/ccKnjL1x.s:747    .text:000000000000032c .L0 
     /tmp/ccKnjL1x.s:750    .text:0000000000000330 .L0 
     /tmp/ccKnjL1x.s:751    .text:0000000000000330 .L0 
     /tmp/ccKnjL1x.s:756    .text:0000000000000334 .L0 
  src/../h/Riscv.hpp:162    .text:0000000000000334 .L0 
     /tmp/ccKnjL1x.s:766    .text:0000000000000338 .L0 
     /tmp/ccKnjL1x.s:767    .text:0000000000000338 .L0 
     /tmp/ccKnjL1x.s:772    .text:000000000000033c .L0 
  src/../h/Riscv.hpp:106    .text:000000000000033c .L0 
     /tmp/ccKnjL1x.s:786    .text:0000000000000340 .L0 
     /tmp/ccKnjL1x.s:787    .text:0000000000000344 .L0 
     /tmp/ccKnjL1x.s:788    .text:0000000000000344 .L0 
     /tmp/ccKnjL1x.s:790    .text:0000000000000348 .L0 
     /tmp/ccKnjL1x.s:791    .text:0000000000000348 .L0 
     /tmp/ccKnjL1x.s:793    .text:000000000000034c .L0 
     /tmp/ccKnjL1x.s:795    .text:0000000000000350 .L0 
     /tmp/ccKnjL1x.s:798    .text:0000000000000354 .L0 
     /tmp/ccKnjL1x.s:803    .text:0000000000000354 .L0 
     /tmp/ccKnjL1x.s:804    .text:0000000000000354 .L0 
     /tmp/ccKnjL1x.s:806    .text:0000000000000358 .L0 
     /tmp/ccKnjL1x.s:807    .text:0000000000000358 .L0 
     /tmp/ccKnjL1x.s:814    .text:0000000000000364 .L0 
     /tmp/ccKnjL1x.s:815    .text:0000000000000364 .L0 
     /tmp/ccKnjL1x.s:816    .text:0000000000000364 .L0 
     /tmp/ccKnjL1x.s:820    .text:000000000000036c .L0 
     /tmp/ccKnjL1x.s:821    .text:000000000000036c .L0 
     /tmp/ccKnjL1x.s:822    .text:000000000000036c .L0 
     /tmp/ccKnjL1x.s:827    .text:0000000000000370 .L0 
  src/../h/Riscv.hpp:162    .text:0000000000000370 .L0 
     /tmp/ccKnjL1x.s:837    .text:0000000000000374 .L0 
     /tmp/ccKnjL1x.s:838    .text:0000000000000374 .L0 
     /tmp/ccKnjL1x.s:843    .text:0000000000000378 .L0 
  src/../h/Riscv.hpp:106    .text:0000000000000378 .L0 
GAS LISTING /tmp/ccKnjL1x.s 			page 35


     /tmp/ccKnjL1x.s:856    .text:000000000000037c .L0 
     /tmp/ccKnjL1x.s:862    .text:0000000000000380 .L0 
     /tmp/ccKnjL1x.s:863    .text:0000000000000380 .L0 
     /tmp/ccKnjL1x.s:864    .text:0000000000000380 .L0 
     /tmp/ccKnjL1x.s:867    .text:0000000000000388 .L0 
     /tmp/ccKnjL1x.s:870    .text:000000000000038c .L0 
     /tmp/ccKnjL1x.s:871    .text:000000000000038c .L0 
     /tmp/ccKnjL1x.s:872    .text:000000000000038c .L0 
     /tmp/ccKnjL1x.s:875    .text:0000000000000394 .L0 
     /tmp/ccKnjL1x.s:878    .text:0000000000000398 .L0 
     /tmp/ccKnjL1x.s:879    .text:0000000000000398 .L0 
     /tmp/ccKnjL1x.s:880    .text:0000000000000398 .L0 
     /tmp/ccKnjL1x.s:883    .text:00000000000003a0 .L0 
     /tmp/ccKnjL1x.s:886    .text:00000000000003a4 .L0 
     /tmp/ccKnjL1x.s:887    .text:00000000000003a4 .L0 
     /tmp/ccKnjL1x.s:888    .text:00000000000003a4 .L0 
     /tmp/ccKnjL1x.s:891    .text:00000000000003ac .L0 
     /tmp/ccKnjL1x.s:894    .text:00000000000003b0 .L0 
     /tmp/ccKnjL1x.s:895    .text:00000000000003b0 .L0 
     /tmp/ccKnjL1x.s:896    .text:00000000000003b0 .L0 
     /tmp/ccKnjL1x.s:899    .text:00000000000003b8 .L0 
     /tmp/ccKnjL1x.s:902    .text:00000000000003bc .L0 
     /tmp/ccKnjL1x.s:903    .text:00000000000003bc .L0 
     /tmp/ccKnjL1x.s:904    .text:00000000000003bc .L0 
     /tmp/ccKnjL1x.s:907    .text:00000000000003c4 .L0 
     /tmp/ccKnjL1x.s:910    .text:00000000000003c8 .L0 
     /tmp/ccKnjL1x.s:911    .text:00000000000003c8 .L0 
     /tmp/ccKnjL1x.s:912    .text:00000000000003c8 .L0 
     /tmp/ccKnjL1x.s:915    .text:00000000000003d0 .L0 
     /tmp/ccKnjL1x.s:918    .text:00000000000003d4 .L0 
     /tmp/ccKnjL1x.s:919    .text:00000000000003d4 .L0 
     /tmp/ccKnjL1x.s:920    .text:00000000000003d4 .L0 
     /tmp/ccKnjL1x.s:923    .text:00000000000003dc .L0 
     /tmp/ccKnjL1x.s:926    .text:00000000000003e0 .L0 
     /tmp/ccKnjL1x.s:927    .text:00000000000003e0 .L0 
     /tmp/ccKnjL1x.s:928    .text:00000000000003e0 .L0 
     /tmp/ccKnjL1x.s:931    .text:00000000000003e8 .L0 
     /tmp/ccKnjL1x.s:934    .text:00000000000003ec .L0 
     /tmp/ccKnjL1x.s:935    .text:00000000000003ec .L0 
     /tmp/ccKnjL1x.s:936    .text:00000000000003ec .L0 
     /tmp/ccKnjL1x.s:939    .text:00000000000003f4 .L0 
     /tmp/ccKnjL1x.s:942    .text:00000000000003f8 .L0 
     /tmp/ccKnjL1x.s:943    .text:00000000000003f8 .L0 
     /tmp/ccKnjL1x.s:944    .text:00000000000003f8 .L0 
     /tmp/ccKnjL1x.s:947    .text:0000000000000400 .L0 
     /tmp/ccKnjL1x.s:951    .text:0000000000000404 .L0 
     /tmp/ccKnjL1x.s:962    .text:0000000000000404 _ZN5Riscv10kernelMainEv
     /tmp/ccKnjL1x.s:965    .text:0000000000000404 .L0 
     /tmp/ccKnjL1x.s:966    .text:0000000000000404 .L0 
     /tmp/ccKnjL1x.s:967    .text:0000000000000408 .L0 
     /tmp/ccKnjL1x.s:970    .text:0000000000000410 .L0 
     /tmp/ccKnjL1x.s:971    .text:0000000000000410 .L0 
     /tmp/ccKnjL1x.s:973    .text:0000000000000414 .L0 
     /tmp/ccKnjL1x.s:975    .text:0000000000000414 .L0 
     /tmp/ccKnjL1x.s:976    .text:0000000000000414 .L0 
     /tmp/ccKnjL1x.s:979    .text:000000000000041c .L0 
     /tmp/ccKnjL1x.s:980    .text:000000000000041c .L0 
GAS LISTING /tmp/ccKnjL1x.s 			page 36


     /tmp/ccKnjL1x.s:983    .text:0000000000000424 .L0 
     /tmp/ccKnjL1x.s:984    .text:0000000000000424 .L0 
     /tmp/ccKnjL1x.s:987    .text:000000000000042c .L0 
     /tmp/ccKnjL1x.s:988    .text:000000000000042c .L0 
     /tmp/ccKnjL1x.s:992    .text:000000000000043c .L0 
     /tmp/ccKnjL1x.s:993    .text:0000000000000440 .L0 
     /tmp/ccKnjL1x.s:995    .text:0000000000000444 .L0 
     /tmp/ccKnjL1x.s:996    .text:0000000000000444 .L0 
     /tmp/ccKnjL1x.s:998    .text:0000000000000448 .L0 
     /tmp/ccKnjL1x.s:1000   .text:000000000000044c .L0 
     /tmp/ccKnjL1x.s:1006   .text:000000000000044c _ZN5Riscv15userMainWrapperEPv
     /tmp/ccKnjL1x.s:1009   .text:000000000000044c .L0 
     /tmp/ccKnjL1x.s:1010   .text:000000000000044c .L0 
     /tmp/ccKnjL1x.s:1011   .text:0000000000000450 .L0 
     /tmp/ccKnjL1x.s:1014   .text:0000000000000458 .L0 
     /tmp/ccKnjL1x.s:1015   .text:0000000000000458 .L0 
     /tmp/ccKnjL1x.s:1017   .text:000000000000045c .L0 
     /tmp/ccKnjL1x.s:1019   .text:000000000000045c .L0 
     /tmp/ccKnjL1x.s:1020   .text:000000000000045c .L0 
     /tmp/ccKnjL1x.s:1023   .text:0000000000000464 .L0 
     /tmp/ccKnjL1x.s:1024   .text:0000000000000468 .L0 
     /tmp/ccKnjL1x.s:1026   .text:000000000000046c .L0 
     /tmp/ccKnjL1x.s:1027   .text:000000000000046c .L0 
     /tmp/ccKnjL1x.s:1029   .text:0000000000000470 .L0 
     /tmp/ccKnjL1x.s:1031   .text:0000000000000474 .L0 
     /tmp/ccKnjL1x.s:1036   .bss:0000000000000000 .LANCHOR1
     /tmp/ccKnjL1x.s:1039   .bss:0000000000000000 _ZZN5Riscv20handleSupervisorTrapEvE5total
     /tmp/ccKnjL1x.s:1043   .rodata:00000000000000c8 .LANCHOR0
     /tmp/ccKnjL1x.s:1046   .rodata:00000000000000c8 _ZZN5Riscv12printIntegerEmE6digits
     /tmp/ccKnjL1x.s:1058   .text:0000000000000474 .L0 
     /tmp/ccKnjL1x.s:24     .text:0000000000000010 .L0 
     /tmp/ccKnjL1x.s:385    .text:0000000000000178 .L0 
     /tmp/ccKnjL1x.s:483    .text:0000000000000214 .L0 
     /tmp/ccKnjL1x.s:584    .rodata:0000000000000000 .L29
     /tmp/ccKnjL1x.s:576    .text:000000000000028c .L0 
     /tmp/ccKnjL1x.s:716    .text:00000000000002e8 .L0 
     /tmp/ccKnjL1x.s:722    .text:00000000000002fc .L0 
     /tmp/ccKnjL1x.s:732    .text:0000000000000318 .L0 
     /tmp/ccKnjL1x.s:956    .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccKnjL1x.s:988    .text:000000000000042c .L0 
     /tmp/ccKnjL1x.s:271    .text:000000000000010c .L12
     /tmp/ccKnjL1x.s:252    .text:00000000000000f4 .L13
     /tmp/ccKnjL1x.s:375    .text:0000000000000168 .L16
     /tmp/ccKnjL1x.s:417    .text:00000000000001c8 .L17
     /tmp/ccKnjL1x.s:403    .text:00000000000001a8 .L18
     /tmp/ccKnjL1x.s:655    .text:00000000000002c0 .L21
     /tmp/ccKnjL1x.s:637    .text:00000000000002a4 .L22
     /tmp/ccKnjL1x.s:779    .text:0000000000000340 .L20
     /tmp/ccKnjL1x.s:819    .text:000000000000036c .L27
     /tmp/ccKnjL1x.s:797    .text:0000000000000354 .L43
     /tmp/ccKnjL1x.s:748    .text:0000000000000330 .L26
     /tmp/ccKnjL1x.s:810    .text:0000000000000364 .L40
     /tmp/ccKnjL1x.s:857    .text:0000000000000380 .L39
     /tmp/ccKnjL1x.s:876    .text:0000000000000398 .L38
     /tmp/ccKnjL1x.s:900    .text:00000000000003bc .L37
     /tmp/ccKnjL1x.s:892    .text:00000000000003b0 .L36
     /tmp/ccKnjL1x.s:868    .text:000000000000038c .L35
GAS LISTING /tmp/ccKnjL1x.s 			page 37


     /tmp/ccKnjL1x.s:884    .text:00000000000003a4 .L34
     /tmp/ccKnjL1x.s:916    .text:00000000000003d4 .L33
     /tmp/ccKnjL1x.s:940    .text:00000000000003f8 .L32
     /tmp/ccKnjL1x.s:924    .text:00000000000003e0 .L31
     /tmp/ccKnjL1x.s:932    .text:00000000000003ec .L30
     /tmp/ccKnjL1x.s:908    .text:00000000000003c8 .L28
     /tmp/ccKnjL1x.s:3466   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccKnjL1x.s:4910   .debug_str:0000000000000253 .LASF280
     /tmp/ccKnjL1x.s:4940   .debug_str:00000000000003e9 .LASF281
     /tmp/ccKnjL1x.s:5324   .debug_str:000000000000107c .LASF282
     /tmp/ccKnjL1x.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccKnjL1x.s:1049   .text:0000000000000474 .Letext0
     /tmp/ccKnjL1x.s:4850   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccKnjL1x.s:5044   .debug_str:0000000000000769 .LASF0
     /tmp/ccKnjL1x.s:5212   .debug_str:0000000000000d2d .LASF3
     /tmp/ccKnjL1x.s:5080   .debug_str:00000000000008a1 .LASF1
     /tmp/ccKnjL1x.s:5226   .debug_str:0000000000000d95 .LASF2
     /tmp/ccKnjL1x.s:5244   .debug_str:0000000000000e28 .LASF4
     /tmp/ccKnjL1x.s:5062   .debug_str:00000000000007fe .LASF5
     /tmp/ccKnjL1x.s:4876   .debug_str:00000000000000f1 .LASF6
     /tmp/ccKnjL1x.s:5190   .debug_str:0000000000000c7b .LASF7
     /tmp/ccKnjL1x.s:5178   .debug_str:0000000000000c25 .LASF8
     /tmp/ccKnjL1x.s:5070   .debug_str:0000000000000868 .LASF9
     /tmp/ccKnjL1x.s:5012   .debug_str:000000000000063a .LASF10
     /tmp/ccKnjL1x.s:5022   .debug_str:000000000000069d .LASF11
     /tmp/ccKnjL1x.s:4926   .debug_str:000000000000039a .LASF12
     /tmp/ccKnjL1x.s:5000   .debug_str:00000000000005f6 .LASF13
     /tmp/ccKnjL1x.s:4942   .debug_str:00000000000003f7 .LASF14
     /tmp/ccKnjL1x.s:4924   .debug_str:000000000000038a .LASF15
     /tmp/ccKnjL1x.s:5288   .debug_str:0000000000000f8d .LASF16
     /tmp/ccKnjL1x.s:4980   .debug_str:0000000000000525 .LASF17
     /tmp/ccKnjL1x.s:5274   .debug_str:0000000000000eeb .LASF18
     /tmp/ccKnjL1x.s:5364   .debug_str:00000000000011bb .LASF95
     /tmp/ccKnjL1x.s:5206   .debug_str:0000000000000d03 .LASF22
     /tmp/ccKnjL1x.s:5090   .debug_str:00000000000008e4 .LASF19
     /tmp/ccKnjL1x.s:4988   .debug_str:0000000000000572 .LASF20
     /tmp/ccKnjL1x.s:5384   .debug_str:0000000000001269 .LASF21
     /tmp/ccKnjL1x.s:5354   .debug_str:0000000000001155 .LASF23
     /tmp/ccKnjL1x.s:4994   .debug_str:00000000000005b2 .LASF24
     /tmp/ccKnjL1x.s:5310   .debug_str:0000000000001011 .LASF25
     /tmp/ccKnjL1x.s:4958   .debug_str:0000000000000483 .LASF26
     /tmp/ccKnjL1x.s:5038   .debug_str:0000000000000740 .LASF27
     /tmp/ccKnjL1x.s:5278   .debug_str:0000000000000f10 .LASF29
     /tmp/ccKnjL1x.s:5134   .debug_str:0000000000000a75 .LASF28
     /tmp/ccKnjL1x.s:5116   .debug_str:00000000000009c0 .LASF30
     /tmp/ccKnjL1x.s:4976   .debug_str:0000000000000508 .LASF31
     /tmp/ccKnjL1x.s:4864   .debug_str:000000000000005b .LASF32
     /tmp/ccKnjL1x.s:5118   .debug_str:00000000000009d8 .LASF37
     /tmp/ccKnjL1x.s:5358   .debug_str:000000000000116f .LASF39
     /tmp/ccKnjL1x.s:4922   .debug_str:0000000000000379 .LASF33
     /tmp/ccKnjL1x.s:5098   .debug_str:0000000000000927 .LASF34
     /tmp/ccKnjL1x.s:5056   .debug_str:00000000000007cf .LASF35
     /tmp/ccKnjL1x.s:4948   .debug_str:000000000000043d .LASF36
     /tmp/ccKnjL1x.s:5392   .debug_str:000000000000129d .LASF38
     /tmp/ccKnjL1x.s:4890   .debug_str:0000000000000190 .LASF40
     /tmp/ccKnjL1x.s:5186   .debug_str:0000000000000c5e .LASF41
     /tmp/ccKnjL1x.s:4894   .debug_str:00000000000001b0 .LASF42
GAS LISTING /tmp/ccKnjL1x.s 			page 38


     /tmp/ccKnjL1x.s:5254   .debug_str:0000000000000e59 .LASF43
     /tmp/ccKnjL1x.s:4986   .debug_str:0000000000000557 .LASF44
     /tmp/ccKnjL1x.s:5050   .debug_str:00000000000007a8 .LASF45
     /tmp/ccKnjL1x.s:5376   .debug_str:0000000000001221 .LASF46
     /tmp/ccKnjL1x.s:5348   .debug_str:0000000000001134 .LASF49
     /tmp/ccKnjL1x.s:5336   .debug_str:00000000000010da .LASF51
     /tmp/ccKnjL1x.s:5222   .debug_str:0000000000000d81 .LASF47
     /tmp/ccKnjL1x.s:5158   .debug_str:0000000000000b4f .LASF48
     /tmp/ccKnjL1x.s:5196   .debug_str:0000000000000c95 .LASF50
     /tmp/ccKnjL1x.s:5202   .debug_str:0000000000000cdc .LASF52
     /tmp/ccKnjL1x.s:5148   .debug_str:0000000000000ae0 .LASF53
     /tmp/ccKnjL1x.s:5072   .debug_str:000000000000087b .LASF54
     /tmp/ccKnjL1x.s:5378   .debug_str:000000000000123b .LASF55
     /tmp/ccKnjL1x.s:5318   .debug_str:000000000000103b .LASF56
     /tmp/ccKnjL1x.s:5142   .debug_str:0000000000000ab0 .LASF57
     /tmp/ccKnjL1x.s:5156   .debug_str:0000000000000b3b .LASF58
     /tmp/ccKnjL1x.s:5128   .debug_str:0000000000000a36 .LASF59
     /tmp/ccKnjL1x.s:5204   .debug_str:0000000000000cef .LASF60
     /tmp/ccKnjL1x.s:5418   .debug_str:000000000000135a .LASF61
     /tmp/ccKnjL1x.s:5054   .debug_str:00000000000007bb .LASF62
     /tmp/ccKnjL1x.s:5284   .debug_str:0000000000000f64 .LASF63
     /tmp/ccKnjL1x.s:5248   .debug_str:0000000000000e37 .LASF64
     /tmp/ccKnjL1x.s:5250   .debug_str:0000000000000e4a .LASF65
     /tmp/ccKnjL1x.s:4932   .debug_str:00000000000003b7 .LASF66
     /tmp/ccKnjL1x.s:4970   .debug_str:00000000000004c8 .LASF67
     /tmp/ccKnjL1x.s:4882   .debug_str:0000000000000124 .LASF68
     /tmp/ccKnjL1x.s:5052   .debug_str:00000000000007b5 .LASF69
     /tmp/ccKnjL1x.s:4962   .debug_str:00000000000004a2 .LASF70
     /tmp/ccKnjL1x.s:4878   .debug_str:00000000000000f8 .LASF71
     /tmp/ccKnjL1x.s:5232   .debug_str:0000000000000db7 .LASF72
     /tmp/ccKnjL1x.s:5224   .debug_str:0000000000000d8a .LASF73
     /tmp/ccKnjL1x.s:5408   .debug_str:0000000000001301 .LASF74
     /tmp/ccKnjL1x.s:5366   .debug_str:00000000000011c1 .LASF75
     /tmp/ccKnjL1x.s:5390   .debug_str:0000000000001287 .LASF76
     /tmp/ccKnjL1x.s:5360   .debug_str:000000000000118d .LASF77
     /tmp/ccKnjL1x.s:5120   .debug_str:00000000000009e8 .LASF78
     /tmp/ccKnjL1x.s:5032   .debug_str:000000000000071a .LASF79
     /tmp/ccKnjL1x.s:5040   .debug_str:000000000000074b .LASF80
     /tmp/ccKnjL1x.s:5340   .debug_str:00000000000010fb .LASF81
     /tmp/ccKnjL1x.s:5020   .debug_str:0000000000000681 .LASF82
     /tmp/ccKnjL1x.s:5182   .debug_str:0000000000000c40 .LASF83
     /tmp/ccKnjL1x.s:5068   .debug_str:0000000000000846 .LASF84
     /tmp/ccKnjL1x.s:5216   .debug_str:0000000000000d54 .LASF85
     /tmp/ccKnjL1x.s:4870   .debug_str:00000000000000a7 .LASF86
     /tmp/ccKnjL1x.s:4902   .debug_str:000000000000021a .LASF87
     /tmp/ccKnjL1x.s:5338   .debug_str:00000000000010ef .LASF88
     /tmp/ccKnjL1x.s:4904   .debug_str:0000000000000229 .LASF89
     /tmp/ccKnjL1x.s:5132   .debug_str:0000000000000a63 .LASF90
     /tmp/ccKnjL1x.s:5024   .debug_str:00000000000006ab .LASF91
     /tmp/ccKnjL1x.s:4972   .debug_str:00000000000004ce .LASF92
     /tmp/ccKnjL1x.s:4920   .debug_str:0000000000000365 .LASF93
     /tmp/ccKnjL1x.s:5302   .debug_str:0000000000000fec .LASF94
     /tmp/ccKnjL1x.s:5170   .debug_str:0000000000000bbf .LASF96
     /tmp/ccKnjL1x.s:5266   .debug_str:0000000000000eaf .LASF130
     /tmp/ccKnjL1x.s:5078   .debug_str:000000000000089c .LASF97
     /tmp/ccKnjL1x.s:4928   .debug_str:00000000000003a9 .LASF98
     /tmp/ccKnjL1x.s:5008   .debug_str:0000000000000624 .LASF99
GAS LISTING /tmp/ccKnjL1x.s 			page 39


     /tmp/ccKnjL1x.s:5082   .debug_str:00000000000008b4 .LASF100
     /tmp/ccKnjL1x.s:5088   .debug_str:00000000000008d1 .LASF101
     /tmp/ccKnjL1x.s:5006   .debug_str:000000000000061b .LASF102
     /tmp/ccKnjL1x.s:5422   .debug_str:0000000000001380 .LASF103
     /tmp/ccKnjL1x.s:5124   .debug_str:0000000000000a0b .LASF104
     /tmp/ccKnjL1x.s:4880   .debug_str:0000000000000103 .LASF106
     /tmp/ccKnjL1x.s:5296   .debug_str:0000000000000fc3 .LASF105
     /tmp/ccKnjL1x.s:5126   .debug_str:0000000000000a15 .LASF107
     /tmp/ccKnjL1x.s:5356   .debug_str:0000000000001164 .LASF108
     /tmp/ccKnjL1x.s:5322   .debug_str:0000000000001059 .LASF109
     /tmp/ccKnjL1x.s:5290   .debug_str:0000000000000f99 .LASF110
     /tmp/ccKnjL1x.s:4872   .debug_str:00000000000000af .LASF111
     /tmp/ccKnjL1x.s:5370   .debug_str:00000000000011d0 .LASF112
     /tmp/ccKnjL1x.s:4868   .debug_str:0000000000000079 .LASF113
     /tmp/ccKnjL1x.s:5300   .debug_str:0000000000000fd7 .LASF114
     /tmp/ccKnjL1x.s:5030   .debug_str:00000000000006eb .LASF115
     /tmp/ccKnjL1x.s:4858   .debug_str:000000000000002b .LASF116
     /tmp/ccKnjL1x.s:5160   .debug_str:0000000000000b64 .LASF117
     /tmp/ccKnjL1x.s:4982   .debug_str:000000000000053b .LASF118
     /tmp/ccKnjL1x.s:5374   .debug_str:00000000000011f9 .LASF119
     /tmp/ccKnjL1x.s:5276   .debug_str:0000000000000f01 .LASF120
     /tmp/ccKnjL1x.s:4974   .debug_str:00000000000004e1 .LASF121
     /tmp/ccKnjL1x.s:5304   .debug_str:0000000000000ff1 .LASF122
     /tmp/ccKnjL1x.s:4918   .debug_str:000000000000035f .LASF123
     /tmp/ccKnjL1x.s:5264   .debug_str:0000000000000ea7 .LASF124
     /tmp/ccKnjL1x.s:4934   .debug_str:00000000000003ca .LASF125
     /tmp/ccKnjL1x.s:4906   .debug_str:000000000000023c .LASF126
     /tmp/ccKnjL1x.s:5180   .debug_str:0000000000000c38 .LASF127
     /tmp/ccKnjL1x.s:5076   .debug_str:0000000000000893 .LASF128
     /tmp/ccKnjL1x.s:5246   .debug_str:0000000000000e2f .LASF191
     /tmp/ccKnjL1x.s:5034   .debug_str:0000000000000725 .LASF129
     /tmp/ccKnjL1x.s:5328   .debug_str:00000000000010b1 .LASF140
     /tmp/ccKnjL1x.s:5138   .debug_str:0000000000000a8f .LASF283
     /tmp/ccKnjL1x.s:5164   .debug_str:0000000000000b9e .LASF131
     /tmp/ccKnjL1x.s:5368   .debug_str:00000000000011cb .LASF132
     /tmp/ccKnjL1x.s:5406   .debug_str:00000000000012f5 .LASF133
     /tmp/ccKnjL1x.s:5400   .debug_str:00000000000012cc .LASF134
     /tmp/ccKnjL1x.s:5316   .debug_str:000000000000102b .LASF135
     /tmp/ccKnjL1x.s:4964   .debug_str:00000000000004b4 .LASF136
     /tmp/ccKnjL1x.s:4888   .debug_str:000000000000017d .LASF137
     /tmp/ccKnjL1x.s:5086   .debug_str:00000000000008cb .LASF138
     /tmp/ccKnjL1x.s:5166   .debug_str:0000000000000ba3 .LASF139
     /tmp/ccKnjL1x.s:5308   .debug_str:0000000000001009 .LASF141
     /tmp/ccKnjL1x.s:5256   .debug_str:0000000000000e67 .LASF142
     /tmp/ccKnjL1x.s:5114   .debug_str:00000000000009b3 .LASF147
     /tmp/ccKnjL1x.s:5100   .debug_str:0000000000000945 .LASF149
     /tmp/ccKnjL1x.s:5412   .debug_str:000000000000132e .LASF143
     /tmp/ccKnjL1x.s:5004   .debug_str:000000000000060f .LASF144
     /tmp/ccKnjL1x.s:5046   .debug_str:0000000000000776 .LASF145
     /tmp/ccKnjL1x.s:5058   .debug_str:00000000000007e1 .LASF146
     /tmp/ccKnjL1x.s:5258   .debug_str:0000000000000e78 .LASF148
     /tmp/ccKnjL1x.s:4960   .debug_str:000000000000048f .LASF150
     /tmp/ccKnjL1x.s:5238   .debug_str:0000000000000dee .LASF151
     /tmp/ccKnjL1x.s:5282   .debug_str:0000000000000f48 .LASF152
     /tmp/ccKnjL1x.s:5136   .debug_str:0000000000000a80 .LASF153
     /tmp/ccKnjL1x.s:4860   .debug_str:000000000000003c .LASF154
     /tmp/ccKnjL1x.s:5388   .debug_str:0000000000001278 .LASF155
GAS LISTING /tmp/ccKnjL1x.s 			page 40


     /tmp/ccKnjL1x.s:5174   .debug_str:0000000000000bf7 .LASF156
     /tmp/ccKnjL1x.s:5272   .debug_str:0000000000000edd .LASF157
     /tmp/ccKnjL1x.s:5194   .debug_str:0000000000000c89 .LASF158
     /tmp/ccKnjL1x.s:4854   .debug_str:000000000000000f .LASF159
     /tmp/ccKnjL1x.s:5154   .debug_str:0000000000000b2b .LASF160
     /tmp/ccKnjL1x.s:5218   .debug_str:0000000000000d5b .LASF161
     /tmp/ccKnjL1x.s:5394   .debug_str:00000000000012a9 .LASF162
     /tmp/ccKnjL1x.s:5064   .debug_str:0000000000000810 .LASF163
     /tmp/ccKnjL1x.s:5270   .debug_str:0000000000000ed2 .LASF164
     /tmp/ccKnjL1x.s:5404   .debug_str:00000000000012df .LASF165
     /tmp/ccKnjL1x.s:5298   .debug_str:0000000000000fcc .LASF166
     /tmp/ccKnjL1x.s:4952   .debug_str:0000000000000461 .LASF167
     /tmp/ccKnjL1x.s:5252   .debug_str:0000000000000e51 .LASF168
     /tmp/ccKnjL1x.s:5176   .debug_str:0000000000000c11 .LASF169
     /tmp/ccKnjL1x.s:5146   .debug_str:0000000000000ac1 .LASF170
     /tmp/ccKnjL1x.s:4946   .debug_str:000000000000042b .LASF171
     /tmp/ccKnjL1x.s:5200   .debug_str:0000000000000cbf .LASF172
     /tmp/ccKnjL1x.s:5424   .debug_str:000000000000138a .LASF173
     /tmp/ccKnjL1x.s:5150   .debug_str:0000000000000ae7 .LASF174
     /tmp/ccKnjL1x.s:5236   .debug_str:0000000000000ddb .LASF175
     /tmp/ccKnjL1x.s:5260   .debug_str:0000000000000e81 .LASF176
     /tmp/ccKnjL1x.s:5352   .debug_str:0000000000001142 .LASF177
     /tmp/ccKnjL1x.s:5420   .debug_str:0000000000001362 .LASF178
     /tmp/ccKnjL1x.s:5410   .debug_str:0000000000001319 .LASF179
     /tmp/ccKnjL1x.s:5280   .debug_str:0000000000000f28 .LASF180
     /tmp/ccKnjL1x.s:5320   .debug_str:000000000000104f .LASF181
     /tmp/ccKnjL1x.s:5168   .debug_str:0000000000000bb3 .LASF182
     /tmp/ccKnjL1x.s:5398   .debug_str:00000000000012be .LASF183
     /tmp/ccKnjL1x.s:4898   .debug_str:00000000000001df .LASF185
     /tmp/ccKnjL1x.s:4896   .debug_str:00000000000001ca .LASF184
     /tmp/ccKnjL1x.s:4916   .debug_str:0000000000000333 .LASF186
     /tmp/ccKnjL1x.s:5414   .debug_str:000000000000133b .LASF284
     /tmp/ccKnjL1x.s:4914   .debug_str:0000000000000322 .LASF285
     /tmp/ccKnjL1x.s:4862   .debug_str:0000000000000056 .LASF187
     /tmp/ccKnjL1x.s:5350   .debug_str:000000000000113d .LASF188
     /tmp/ccKnjL1x.s:5104   .debug_str:0000000000000977 .LASF189
     /tmp/ccKnjL1x.s:4968   .debug_str:00000000000004c2 .LASF190
     /tmp/ccKnjL1x.s:5334   .debug_str:00000000000010d2 .LASF192
     /tmp/ccKnjL1x.s:5110   .debug_str:000000000000099a .LASF193
     /tmp/ccKnjL1x.s:5210   .debug_str:0000000000000d22 .LASF194
     /tmp/ccKnjL1x.s:5018   .debug_str:000000000000066d .LASF195
     /tmp/ccKnjL1x.s:5230   .debug_str:0000000000000dab .LASF196
     /tmp/ccKnjL1x.s:5208   .debug_str:0000000000000d0e .LASF197
     /tmp/ccKnjL1x.s:4966   .debug_str:00000000000004bd .LASF198
     /tmp/ccKnjL1x.s:5268   .debug_str:0000000000000ebb .LASF199
     /tmp/ccKnjL1x.s:5292   .debug_str:0000000000000fb4 .LASF200
     /tmp/ccKnjL1x.s:5220   .debug_str:0000000000000d68 .LASF201
     /tmp/ccKnjL1x.s:4856   .debug_str:000000000000001f .LASF202
     /tmp/ccKnjL1x.s:5234   .debug_str:0000000000000dcf .LASF203
     /tmp/ccKnjL1x.s:5112   .debug_str:000000000000099f .LASF204
     /tmp/ccKnjL1x.s:5036   .debug_str:000000000000072b .LASF205
     /tmp/ccKnjL1x.s:4930   .debug_str:00000000000003ae .LASF206
     /tmp/ccKnjL1x.s:4936   .debug_str:00000000000003d4 .LASF207
     /tmp/ccKnjL1x.s:5140   .debug_str:0000000000000aa7 .LASF208
     /tmp/ccKnjL1x.s:5242   .debug_str:0000000000000e1d .LASF209
     /tmp/ccKnjL1x.s:4852   .debug_str:0000000000000000 .LASF210
     /tmp/ccKnjL1x.s:5028   .debug_str:00000000000006c9 .LASF211
GAS LISTING /tmp/ccKnjL1x.s 			page 41


     /tmp/ccKnjL1x.s:5332   .debug_str:00000000000010c3 .LASF212
     /tmp/ccKnjL1x.s:5286   .debug_str:0000000000000f6b .LASF213
     /tmp/ccKnjL1x.s:5106   .debug_str:000000000000097f .LASF214
     /tmp/ccKnjL1x.s:4944   .debug_str:0000000000000407 .LASF215
     /tmp/ccKnjL1x.s:5162   .debug_str:0000000000000b8e .LASF216
     /tmp/ccKnjL1x.s:5198   .debug_str:0000000000000c9c .LASF217
     /tmp/ccKnjL1x.s:5084   .debug_str:00000000000008c2 .LASF218
     /tmp/ccKnjL1x.s:5042   .debug_str:0000000000000763 .LASF219
     /tmp/ccKnjL1x.s:5416   .debug_str:0000000000001342 .LASF220
     /tmp/ccKnjL1x.s:4866   .debug_str:0000000000000071 .LASF221
     /tmp/ccKnjL1x.s:5102   .debug_str:000000000000095d .LASF222
     /tmp/ccKnjL1x.s:5060   .debug_str:00000000000007ee .LASF223
     /tmp/ccKnjL1x.s:5152   .debug_str:0000000000000b08 .LASF224
     /tmp/ccKnjL1x.s:5372   .debug_str:00000000000011e6 .LASF225
     /tmp/ccKnjL1x.s:5240   .debug_str:0000000000000df7 .LASF226
     /tmp/ccKnjL1x.s:5402   .debug_str:00000000000012d2 .LASF227
     /tmp/ccKnjL1x.s:4886   .debug_str:0000000000000159 .LASF228
     /tmp/ccKnjL1x.s:5382   .debug_str:000000000000125c .LASF229
     /tmp/ccKnjL1x.s:5188   .debug_str:0000000000000c6b .LASF230
     /tmp/ccKnjL1x.s:5326   .debug_str:000000000000109f .LASF231
     /tmp/ccKnjL1x.s:4996   .debug_str:00000000000005be .LASF232
     /tmp/ccKnjL1x.s:4908   .debug_str:0000000000000245 .LASF233
     /tmp/ccKnjL1x.s:4884   .debug_str:0000000000000136 .LASF234
     /tmp/ccKnjL1x.s:5144   .debug_str:0000000000000ab8 .LASF235
     /tmp/ccKnjL1x.s:4950   .debug_str:000000000000045c .LASF236
     /tmp/ccKnjL1x.s:5074   .debug_str:000000000000088e .LASF237
     /tmp/ccKnjL1x.s:5002   .debug_str:0000000000000605 .LASF238
     /tmp/ccKnjL1x.s:5396   .debug_str:00000000000012b4 .LASF239
     /tmp/ccKnjL1x.s:4938   .debug_str:00000000000003de .LASF240
     /tmp/ccKnjL1x.s:5026   .debug_str:00000000000006be .LASF241
     /tmp/ccKnjL1x.s:5014   .debug_str:000000000000064a .LASF242
     /tmp/ccKnjL1x.s:4990   .debug_str:000000000000057b .LASF243
     /tmp/ccKnjL1x.s:5294   .debug_str:0000000000000fbb .LASF244
     /tmp/ccKnjL1x.s:5130   .debug_str:0000000000000a3e .LASF245
     /tmp/ccKnjL1x.s:5314   .debug_str:0000000000001023 .LASF246
     /tmp/ccKnjL1x.s:5362   .debug_str:0000000000001197 .LASF247
     /tmp/ccKnjL1x.s:5344   .debug_str:000000000000111c .LASF248
     /tmp/ccKnjL1x.s:5048   .debug_str:0000000000000786 .LASF249
     /tmp/ccKnjL1x.s:5342   .debug_str:000000000000110a .LASF250
     /tmp/ccKnjL1x.s:5214   .debug_str:0000000000000d32 .LASF251
     /tmp/ccKnjL1x.s:4900   .debug_str:0000000000000207 .LASF252
     /tmp/ccKnjL1x.s:4912   .debug_str:00000000000002ff .LASF253
     /tmp/ccKnjL1x.s:4978   .debug_str:0000000000000512 .LASF254
     /tmp/ccKnjL1x.s:4992   .debug_str:000000000000058f .LASF255
     /tmp/ccKnjL1x.s:5092   .debug_str:00000000000008ed .LASF256
     /tmp/ccKnjL1x.s:5380   .debug_str:0000000000001243 .LASF257
     /tmp/ccKnjL1x.s:5066   .debug_str:000000000000081d .LASF258
     /tmp/ccKnjL1x.s:5094   .debug_str:0000000000000908 .LASF259
     /tmp/ccKnjL1x.s:5172   .debug_str:0000000000000bcf .LASF260
     /tmp/ccKnjL1x.s:4998   .debug_str:00000000000005e5 .LASF261
     /tmp/ccKnjL1x.s:5306   .debug_str:0000000000000ff7 .LASF262
     /tmp/ccKnjL1x.s:5010   .debug_str:000000000000062d .LASF263
     /tmp/ccKnjL1x.s:4874   .debug_str:00000000000000e4 .LASF264
     /tmp/ccKnjL1x.s:1007   .text:000000000000044c .LFB34
     /tmp/ccKnjL1x.s:1032   .text:0000000000000474 .LFE34
     /tmp/ccKnjL1x.s:1021   .text:0000000000000464 .LVL71
     /tmp/ccKnjL1x.s:963    .text:0000000000000404 .LFB33
GAS LISTING /tmp/ccKnjL1x.s 			page 42


     /tmp/ccKnjL1x.s:1001   .text:000000000000044c .LFE33
     /tmp/ccKnjL1x.s:977    .text:000000000000041c .LVL67
     /tmp/ccKnjL1x.s:981    .text:0000000000000424 .LVL68
     /tmp/ccKnjL1x.s:985    .text:000000000000042c .LVL69
     /tmp/ccKnjL1x.s:990    .text:000000000000043c .LVL70
     /tmp/ccKnjL1x.s:463    .text:00000000000001fc .LFB32
     /tmp/ccKnjL1x.s:952    .text:0000000000000404 .LFE32
     /tmp/ccKnjL1x.s:5192   .debug_str:0000000000000c82 .LASF265
     /tmp/ccKnjL1x.s:4621   .debug_loc:0000000000000000 .LLST12
     /tmp/ccKnjL1x.s:4834   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccKnjL1x.s:5312   .debug_str:000000000000101e .LASF266
     /tmp/ccKnjL1x.s:5262   .debug_str:0000000000000e9f .LASF267
     /tmp/ccKnjL1x.s:5346   .debug_str:000000000000112e .LASF268
     /tmp/ccKnjL1x.s:660    .text:00000000000002c0 .LBB78
     /tmp/ccKnjL1x.s:676    .text:00000000000002cc .LBE78
     /tmp/ccKnjL1x.s:680    .text:00000000000002d0 .LBB80
     /tmp/ccKnjL1x.s:695    .text:00000000000002dc .LBE80
     /tmp/ccKnjL1x.s:700    .text:00000000000002e0 .LBB82
     /tmp/ccKnjL1x.s:712    .text:00000000000002e8 .LBE82
     /tmp/ccKnjL1x.s:4642   .debug_loc:000000000000005e .LLST16
     /tmp/ccKnjL1x.s:735    .text:0000000000000324 .LBB84
     /tmp/ccKnjL1x.s:743    .text:0000000000000328 .LBE84
     /tmp/ccKnjL1x.s:4650   .debug_loc:0000000000000082 .LLST17
     /tmp/ccKnjL1x.s:753    .text:0000000000000334 .LBB86
     /tmp/ccKnjL1x.s:764    .text:0000000000000338 .LBE86
     /tmp/ccKnjL1x.s:4657   .debug_loc:00000000000000a5 .LLST18
     /tmp/ccKnjL1x.s:769    .text:000000000000033c .LBB88
     /tmp/ccKnjL1x.s:781    .text:0000000000000340 .LBE88
     /tmp/ccKnjL1x.s:4664   .debug_loc:00000000000000c8 .LLST19
     /tmp/ccKnjL1x.s:729    .text:0000000000000318 .LVL43
     /tmp/ccKnjL1x.s:808    .text:0000000000000360 .LVL50
     /tmp/ccKnjL1x.s:5108   .debug_str:0000000000000990 .LASF269
     /tmp/ccKnjL1x.s:4671   .debug_loc:00000000000000eb .LLST13
     /tmp/ccKnjL1x.s:532    .text:000000000000025c .LBB69
     /tmp/ccKnjL1x.s:547    .text:0000000000000268 .LBE69
     /tmp/ccKnjL1x.s:553    .text:0000000000000270 .LBB71
     /tmp/ccKnjL1x.s:568    .text:000000000000027c .LBE71
     /tmp/ccKnjL1x.s:824    .text:0000000000000370 .LBB73
     /tmp/ccKnjL1x.s:835    .text:0000000000000374 .LBE73
     /tmp/ccKnjL1x.s:4678   .debug_loc:000000000000010e .LLST14
     /tmp/ccKnjL1x.s:840    .text:0000000000000378 .LBB75
     /tmp/ccKnjL1x.s:851    .text:000000000000037c .LBE75
     /tmp/ccKnjL1x.s:4685   .debug_loc:0000000000000131 .LLST15
     /tmp/ccKnjL1x.s:817    .text:000000000000036c .LVL51
     /tmp/ccKnjL1x.s:865    .text:0000000000000388 .LVL56
     /tmp/ccKnjL1x.s:873    .text:0000000000000394 .LVL57
     /tmp/ccKnjL1x.s:881    .text:00000000000003a0 .LVL58
     /tmp/ccKnjL1x.s:889    .text:00000000000003ac .LVL59
     /tmp/ccKnjL1x.s:897    .text:00000000000003b8 .LVL60
     /tmp/ccKnjL1x.s:905    .text:00000000000003c4 .LVL61
     /tmp/ccKnjL1x.s:913    .text:00000000000003d0 .LVL62
     /tmp/ccKnjL1x.s:921    .text:00000000000003dc .LVL63
     /tmp/ccKnjL1x.s:929    .text:00000000000003e8 .LVL64
     /tmp/ccKnjL1x.s:937    .text:00000000000003f4 .LVL65
     /tmp/ccKnjL1x.s:945    .text:0000000000000400 .LVL66
     /tmp/ccKnjL1x.s:486    .text:0000000000000220 .LBB64
     /tmp/ccKnjL1x.s:502    .text:000000000000022c .LBE64
GAS LISTING /tmp/ccKnjL1x.s 			page 43


     /tmp/ccKnjL1x.s:651    .text:00000000000002bc .LVL38
     /tmp/ccKnjL1x.s:313    .text:0000000000000134 .LFB31
     /tmp/ccKnjL1x.s:457    .text:00000000000001fc .LFE31
     /tmp/ccKnjL1x.s:4692   .debug_loc:0000000000000154 .LLST6
     /tmp/ccKnjL1x.s:4706   .debug_loc:000000000000018d .LLST7
     /tmp/ccKnjL1x.s:5330   .debug_str:00000000000010bc .LASF270
     /tmp/ccKnjL1x.s:4713   .debug_loc:00000000000001b0 .LLST8
     /tmp/ccKnjL1x.s:4735   .debug_loc:000000000000020f .LLST9
     /tmp/ccKnjL1x.s:330    .text:000000000000014c .LBB58
     /tmp/ccKnjL1x.s:346    .text:0000000000000158 .LBE58
     /tmp/ccKnjL1x.s:348    .text:0000000000000158 .LBB60
     /tmp/ccKnjL1x.s:360    .text:0000000000000160 .LBE60
     /tmp/ccKnjL1x.s:4757   .debug_loc:0000000000000250 .LLST10
     /tmp/ccKnjL1x.s:431    .text:00000000000001e0 .LBB62
     /tmp/ccKnjL1x.s:442    .text:00000000000001e4 .LBE62
     /tmp/ccKnjL1x.s:4765   .debug_loc:0000000000000274 .LLST11
     /tmp/ccKnjL1x.s:415    .text:00000000000001c4 .LVL28
     /tmp/ccKnjL1x.s:422    .text:00000000000001d4 .LVL29
     /tmp/ccKnjL1x.s:205    .text:00000000000000c4 .LFB30
     /tmp/ccKnjL1x.s:307    .text:0000000000000134 .LFE30
     /tmp/ccKnjL1x.s:5096   .debug_str:0000000000000920 .LASF271
     /tmp/ccKnjL1x.s:4772   .debug_loc:0000000000000297 .LLST2
     /tmp/ccKnjL1x.s:4783   .debug_loc:00000000000002cd .LLST3
     /tmp/ccKnjL1x.s:223    .text:00000000000000e0 .LBB52
     /tmp/ccKnjL1x.s:239    .text:00000000000000ec .LBE52
     /tmp/ccKnjL1x.s:241    .text:00000000000000ec .LBB54
     /tmp/ccKnjL1x.s:254    .text:00000000000000f4 .LBE54
     /tmp/ccKnjL1x.s:4790   .debug_loc:00000000000002f0 .LLST4
     /tmp/ccKnjL1x.s:280    .text:0000000000000118 .LBB56
     /tmp/ccKnjL1x.s:291    .text:000000000000011c .LBE56
     /tmp/ccKnjL1x.s:4798   .debug_loc:0000000000000314 .LLST5
     /tmp/ccKnjL1x.s:264    .text:0000000000000104 .LVL12
     /tmp/ccKnjL1x.s:170    .text:00000000000000a4 .LFB29
     /tmp/ccKnjL1x.s:199    .text:00000000000000c4 .LFE29
     /tmp/ccKnjL1x.s:101    .text:000000000000005c .LFB28
     /tmp/ccKnjL1x.s:133    .text:000000000000007c .LFE28
     /tmp/ccKnjL1x.s:112    .text:0000000000000068 .LBB50
     /tmp/ccKnjL1x.s:124    .text:0000000000000070 .LBE50
     /tmp/ccKnjL1x.s:4805   .debug_loc:0000000000000337 .LLST1
     /tmp/ccKnjL1x.s:63     .text:000000000000003c .LFB27
     /tmp/ccKnjL1x.s:95     .text:000000000000005c .LFE27
     /tmp/ccKnjL1x.s:74     .text:0000000000000048 .LBB48
     /tmp/ccKnjL1x.s:86     .text:0000000000000050 .LBE48
     /tmp/ccKnjL1x.s:4813   .debug_loc:000000000000035b .LLST0
     /tmp/ccKnjL1x.s:139    .text:000000000000007c .LFB26
     /tmp/ccKnjL1x.s:164    .text:00000000000000a4 .LFE26
     /tmp/ccKnjL1x.s:153    .text:0000000000000094 .LVL8
     /tmp/ccKnjL1x.s:10     .text:0000000000000000 .LFB25
     /tmp/ccKnjL1x.s:57     .text:000000000000003c .LFE25
     /tmp/ccKnjL1x.s:26     .text:0000000000000018 .LBB46
     /tmp/ccKnjL1x.s:38     .text:000000000000001c .LBE46
     /tmp/ccKnjL1x.s:42     .text:0000000000000024 .LVL2
     /tmp/ccKnjL1x.s:46     .text:000000000000002c .LVL3
     /tmp/ccKnjL1x.s:4956   .debug_str:000000000000047e .LASF286
     /tmp/ccKnjL1x.s:4892   .debug_str:00000000000001ab .LASF272
     /tmp/ccKnjL1x.s:5386   .debug_str:0000000000001272 .LASF273
     /tmp/ccKnjL1x.s:5122   .debug_str:00000000000009fe .LASF274
GAS LISTING /tmp/ccKnjL1x.s 			page 44


     /tmp/ccKnjL1x.s:5184   .debug_str:0000000000000c55 .LASF276
     /tmp/ccKnjL1x.s:4984   .debug_str:000000000000054b .LASF275
     /tmp/ccKnjL1x.s:5228   .debug_str:0000000000000da3 .LASF277
     /tmp/ccKnjL1x.s:5016   .debug_str:000000000000065d .LASF278
     /tmp/ccKnjL1x.s:4954   .debug_str:0000000000000477 .LASF279
     /tmp/ccKnjL1x.s:500    .text:000000000000022c .LVL33
     /tmp/ccKnjL1x.s:514    .text:0000000000000250 .LVL34
     /tmp/ccKnjL1x.s:529    .text:000000000000025c .LVL35
     /tmp/ccKnjL1x.s:636    .text:00000000000002a4 .LVL37
     /tmp/ccKnjL1x.s:654    .text:00000000000002c0 .LVL39
     /tmp/ccKnjL1x.s:669    .text:00000000000002c4 .LVL40
     /tmp/ccKnjL1x.s:699    .text:00000000000002e0 .LVL41
     /tmp/ccKnjL1x.s:709    .text:00000000000002e8 .LVL42
     /tmp/ccKnjL1x.s:734    .text:0000000000000324 .LVL44
     /tmp/ccKnjL1x.s:741    .text:0000000000000328 .LVL45
     /tmp/ccKnjL1x.s:752    .text:0000000000000334 .LVL46
     /tmp/ccKnjL1x.s:761    .text:0000000000000338 .LVL47
     /tmp/ccKnjL1x.s:768    .text:000000000000033c .LVL48
     /tmp/ccKnjL1x.s:777    .text:0000000000000340 .LVL49
     /tmp/ccKnjL1x.s:575    .text:000000000000028c .LVL36
     /tmp/ccKnjL1x.s:823    .text:0000000000000370 .LVL52
     /tmp/ccKnjL1x.s:832    .text:0000000000000374 .LVL53
     /tmp/ccKnjL1x.s:839    .text:0000000000000378 .LVL54
     /tmp/ccKnjL1x.s:848    .text:000000000000037c .LVL55
     /tmp/ccKnjL1x.s:316    .text:0000000000000134 .LVL18
     /tmp/ccKnjL1x.s:370    .text:0000000000000164 .LVL21
     /tmp/ccKnjL1x.s:344    .text:0000000000000158 .LVL19
     /tmp/ccKnjL1x.s:426    .text:00000000000001d8 .LVL30
     /tmp/ccKnjL1x.s:374    .text:0000000000000168 .LVL22
     /tmp/ccKnjL1x.s:381    .text:0000000000000170 .LVL23
     /tmp/ccKnjL1x.s:392    .text:0000000000000194 .LVL24
     /tmp/ccKnjL1x.s:402    .text:00000000000001a8 .LVL26
     /tmp/ccKnjL1x.s:407    .text:00000000000001ac .LVL27
     /tmp/ccKnjL1x.s:398    .text:00000000000001a0 .LVL25
     /tmp/ccKnjL1x.s:357    .text:0000000000000160 .LVL20
     /tmp/ccKnjL1x.s:430    .text:00000000000001e0 .LVL31
     /tmp/ccKnjL1x.s:439    .text:00000000000001e4 .LVL32
     /tmp/ccKnjL1x.s:208    .text:00000000000000c4 .LVL9
     /tmp/ccKnjL1x.s:250    .text:00000000000000f4 .LVL11
     /tmp/ccKnjL1x.s:300    .text:0000000000000128 .LVL17
     /tmp/ccKnjL1x.s:237    .text:00000000000000ec .LVL10
     /tmp/ccKnjL1x.s:275    .text:0000000000000110 .LVL14
     /tmp/ccKnjL1x.s:279    .text:0000000000000118 .LVL15
     /tmp/ccKnjL1x.s:288    .text:000000000000011c .LVL16
     /tmp/ccKnjL1x.s:111    .text:0000000000000068 .LVL6
     /tmp/ccKnjL1x.s:121    .text:0000000000000070 .LVL7
     /tmp/ccKnjL1x.s:73     .text:0000000000000048 .LVL4
     /tmp/ccKnjL1x.s:83     .text:0000000000000050 .LVL5
     /tmp/ccKnjL1x.s:1059   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccKnjL1x.s:521    .text:0000000000000258 .LBB68
     /tmp/ccKnjL1x.s:638    .text:00000000000002a4 .LBE68
     /tmp/ccKnjL1x.s:812    .text:0000000000000364 .LBB91
     /tmp/ccKnjL1x.s:852    .text:000000000000037c .LBE91
     /tmp/ccKnjL1x.s:860    .text:0000000000000380 .LBB92
     /tmp/ccKnjL1x.s:948    .text:0000000000000404 .LBE92
     /tmp/ccKnjL1x.s:658    .text:00000000000002c0 .LBB77
     /tmp/ccKnjL1x.s:782    .text:0000000000000340 .LBE77
GAS LISTING /tmp/ccKnjL1x.s 			page 45


     /tmp/ccKnjL1x.s:801    .text:0000000000000354 .LBB90
     /tmp/ccKnjL1x.s:811    .text:0000000000000364 .LBE90

UNDEFINED SYMBOLS
_ZN5Riscv14supervisorTrapEv
_ZN3PCB10initializeEv
_ZN8KConsole10initializeEv
__putc
_ZN3PCB10savedRegA4E
console_handler
_ZN3PCB16timeSliceCounterE
_ZN12SleepPCBList13tryToWakePCBsEv
_ZN3PCB7runningE
_ZN3PCB8dispatchEv
_ZN15MemoryAllocator15memAllocHandlerEv
_ZN15MemoryAllocator14memFreeHandlerEv
_ZN3PCB20threadMakePCBHandlerEv
_ZN3PCB19threadCreateHandlerEv
_ZN3PCB18threadStartHandlerEv
_ZN3PCB21threadDispatchHandlerEv
_ZN3PCB17threadExitHandlerEv
_ZN3PCB18threadSleepHandlerEv
_ZN10KSemaphore14semOpenHandlerEv
_ZN10KSemaphore14semWaitHandlerEv
_ZN10KSemaphore16semSignalHandlerEv
_ZN10KSemaphore15semCloseHandlerEv
_Z7myTestsv
_Z8userMainv
