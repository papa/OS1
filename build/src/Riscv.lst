GAS LISTING /tmp/ccODRTXI.s 			page 1


   1              		.file	"Riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv15userMainWrapperEPv
   9              	_ZN5Riscv15userMainWrapperEPv:
  10              	.LFB49:
  11              		.file 1 "src/Riscv.cpp"
   1:src/Riscv.cpp **** //
   2:src/Riscv.cpp **** // Created by os on 4/27/22.
   3:src/Riscv.cpp **** //
   4:src/Riscv.cpp **** 
   5:src/Riscv.cpp **** #include "../h/Riscv.hpp"
   6:src/Riscv.cpp **** #include "../h/MemoryAllocator.hpp"
   7:src/Riscv.cpp **** #include "../h/PCB.hpp"
   8:src/Riscv.cpp **** #include "../h/syscall_cpp.hpp"
   9:src/Riscv.cpp **** #include "../h/SleepPCBList.hpp"
  10:src/Riscv.cpp **** #include "../h/KConsole.hpp"
  11:src/Riscv.cpp **** #include "../h/Tests.hpp"
  12:src/Riscv.cpp **** #include "../test/userMain.hpp"
  13:src/Riscv.cpp **** 
  14:src/Riscv.cpp **** uint64 Riscv::totalTime = 0;
  15:src/Riscv.cpp **** bool Riscv::finishSystem = false;
  16:src/Riscv.cpp **** 
  17:src/Riscv.cpp **** void Riscv::initSystem()
  18:src/Riscv.cpp **** {
  19:src/Riscv.cpp ****     w_stvec((uint64)&Riscv::supervisorTrap);
  20:src/Riscv.cpp ****     PCB::initialize();
  21:src/Riscv.cpp ****     KConsole::initialize();
  22:src/Riscv.cpp **** }
  23:src/Riscv.cpp **** 
  24:src/Riscv.cpp **** void Riscv::endSystem()
  25:src/Riscv.cpp **** {
  26:src/Riscv.cpp ****     //todo
  27:src/Riscv.cpp ****     Riscv::disableInterrupts();
  28:src/Riscv.cpp **** }
  29:src/Riscv.cpp **** 
  30:src/Riscv.cpp **** void Riscv::enableInterrupts() {
  31:src/Riscv.cpp ****     ms_sstatus(Riscv::SSTATUS_SIE);
  32:src/Riscv.cpp **** }
  33:src/Riscv.cpp **** 
  34:src/Riscv.cpp **** void Riscv::disableInterrupts()
  35:src/Riscv.cpp **** {
  36:src/Riscv.cpp ****     mc_sstatus(Riscv::SSTATUS_SIE);
  37:src/Riscv.cpp **** }
  38:src/Riscv.cpp **** 
  39:src/Riscv.cpp **** void Riscv::popSppSpie()
  40:src/Riscv.cpp **** {
  41:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
  42:src/Riscv.cpp ****     __asm__ volatile ("sret");
  43:src/Riscv.cpp **** }
  44:src/Riscv.cpp **** 
  45:src/Riscv.cpp **** void Riscv::handleSupervisorTrap()
  46:src/Riscv.cpp **** {
  47:src/Riscv.cpp ****     __asm__ volatile("mv %0, a4" : "=r"(PCB::savedRegA4));
GAS LISTING /tmp/ccODRTXI.s 			page 2


  48:src/Riscv.cpp ****     __asm__ volatile("csrr %0, sscratch":"=r"(PCB::running->sscratch));
  49:src/Riscv.cpp **** 
  50:src/Riscv.cpp ****     uint64 scause = Riscv::r_scause();
  51:src/Riscv.cpp **** 
  52:src/Riscv.cpp ****     switch(scause)
  53:src/Riscv.cpp ****     {
  54:src/Riscv.cpp ****         case timerInterrupt:
  55:src/Riscv.cpp ****         {
  56:src/Riscv.cpp ****             uint64 volatile sepc = Riscv::r_sepc();
  57:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
  58:src/Riscv.cpp ****             mc_sip(Riscv::SIP_SSIP);
  59:src/Riscv.cpp ****             //trapPrintString("timerInterrupt\n");
  60:src/Riscv.cpp ****             //static uint64 total = 0;
  61:src/Riscv.cpp ****             totalTime++;
  62:src/Riscv.cpp ****             trapPrintInt(totalTime);
  63:src/Riscv.cpp **** 
  64:src/Riscv.cpp ****             PCB::timeSliceCounter++;
  65:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
  66:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
  67:src/Riscv.cpp ****             {
  68:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
  69:src/Riscv.cpp ****                 PCB::dispatch();
  70:src/Riscv.cpp ****             }
  71:src/Riscv.cpp **** 
  72:src/Riscv.cpp ****             Riscv::w_sstatus(sstatus);
  73:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
  74:src/Riscv.cpp **** 
  75:src/Riscv.cpp ****             break;
  76:src/Riscv.cpp ****         }
  77:src/Riscv.cpp ****         case hwInterrupt:
  78:src/Riscv.cpp ****         {
  79:src/Riscv.cpp ****             uint64 x = CONSOLE_STATUS;
  80:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0"::"r"(x));
  81:src/Riscv.cpp ****             __asm__ volatile("lb a1, 0(a0)");
  82:src/Riscv.cpp ****             uint64 operation;
  83:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" :  "=r"(operation));
  84:src/Riscv.cpp ****             if(operation & KConsole::STATUS_READ_MASK)
  85:src/Riscv.cpp ****             {
  86:src/Riscv.cpp ****                 x = CONSOLE_TX_DATA;
  87:src/Riscv.cpp ****                 __asm__ volatile("mv a0, %0"::"r"(x));
  88:src/Riscv.cpp ****                 __asm__ volatile("lb a1,0(a0)");
  89:src/Riscv.cpp ****                 char c;
  90:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" :  "=r"(c));
  91:src/Riscv.cpp **** 
  92:src/Riscv.cpp ****                 if(KConsole::pendingGetc > 0)
  93:src/Riscv.cpp ****                 {
  94:src/Riscv.cpp ****                     KConsole::pendingGetc--;
  95:src/Riscv.cpp ****                     KConsole::putCharacterInput(c);
  96:src/Riscv.cpp ****                     KConsole::putCharacterOutput(c);
  97:src/Riscv.cpp ****                 }
  98:src/Riscv.cpp ****             }
  99:src/Riscv.cpp **** 
 100:src/Riscv.cpp ****             plic_complete(plic_claim());
 101:src/Riscv.cpp **** 
 102:src/Riscv.cpp ****             break;
 103:src/Riscv.cpp ****         }
 104:src/Riscv.cpp ****         case operationInterrupt: // todo
GAS LISTING /tmp/ccODRTXI.s 			page 3


 105:src/Riscv.cpp ****         {
 106:src/Riscv.cpp ****             break;
 107:src/Riscv.cpp ****         }
 108:src/Riscv.cpp ****         case addrReadInterrupt: // todo
 109:src/Riscv.cpp ****         {
 110:src/Riscv.cpp ****             break;
 111:src/Riscv.cpp ****         }
 112:src/Riscv.cpp ****         case addrWriteInterrupt: // todo
 113:src/Riscv.cpp ****         {
 114:src/Riscv.cpp ****             break;
 115:src/Riscv.cpp ****         }
 116:src/Riscv.cpp ****         case ecallSystemInterupt:
 117:src/Riscv.cpp ****         case ecallUserInterrupt:
 118:src/Riscv.cpp ****         {
 119:src/Riscv.cpp ****             uint64 operation;
 120:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
 121:src/Riscv.cpp **** 
 122:src/Riscv.cpp ****             uint64 volatile sepc = Riscv::r_sepc() + 4;
 123:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 124:src/Riscv.cpp **** 
 125:src/Riscv.cpp ****             switch(operation)
 126:src/Riscv.cpp ****             {
 127:src/Riscv.cpp ****                 case MemoryAllocator::MEM_ALLOC:
 128:src/Riscv.cpp ****                     MemoryAllocator::memAllocHandler();
 129:src/Riscv.cpp ****                     break;
 130:src/Riscv.cpp ****                 case MemoryAllocator::MEM_FREE:
 131:src/Riscv.cpp ****                     MemoryAllocator::memFreeHandler();
 132:src/Riscv.cpp ****                     break;
 133:src/Riscv.cpp ****                 case PCB::THREAD_MAKE_PCB:
 134:src/Riscv.cpp ****                     PCB::threadMakePCBHandler();
 135:src/Riscv.cpp ****                     break;
 136:src/Riscv.cpp ****                 case PCB::THREAD_CREATE:
 137:src/Riscv.cpp ****                     PCB::threadCreateHandler();
 138:src/Riscv.cpp ****                     break;
 139:src/Riscv.cpp ****                 case PCB::THREAD_START:
 140:src/Riscv.cpp ****                     PCB::threadStartHandler();
 141:src/Riscv.cpp ****                     break;
 142:src/Riscv.cpp ****                 case PCB::THREAD_DISPATCH:
 143:src/Riscv.cpp ****                     PCB::threadDispatchHandler();
 144:src/Riscv.cpp ****                     break;
 145:src/Riscv.cpp ****                 case PCB::THREAD_EXIT:
 146:src/Riscv.cpp ****                     PCB::threadExitHandler();
 147:src/Riscv.cpp ****                     break;
 148:src/Riscv.cpp ****                 case PCB::TIME_SLEEP:
 149:src/Riscv.cpp ****                     PCB::threadSleepHandler();
 150:src/Riscv.cpp ****                     break;
 151:src/Riscv.cpp ****                 case KSemaphore::SEM_OPEN:
 152:src/Riscv.cpp ****                     KSemaphore::semOpenHandler();
 153:src/Riscv.cpp ****                     break;
 154:src/Riscv.cpp ****                 case KSemaphore::SEM_WAIT:
 155:src/Riscv.cpp ****                     KSemaphore::semWaitHandler();
 156:src/Riscv.cpp ****                     break;
 157:src/Riscv.cpp ****                 case KSemaphore::SEM_SIGNAL:
 158:src/Riscv.cpp ****                     KSemaphore::semSignalHandler();
 159:src/Riscv.cpp ****                     break;
 160:src/Riscv.cpp ****                 case KSemaphore::SEM_CLOSE:
 161:src/Riscv.cpp ****                     KSemaphore::semCloseHandler();
GAS LISTING /tmp/ccODRTXI.s 			page 4


 162:src/Riscv.cpp ****                     break;
 163:src/Riscv.cpp ****                 case KConsole::CONSOLE_GETC:
 164:src/Riscv.cpp ****                     KConsole::getcHandler();
 165:src/Riscv.cpp ****                     break;
 166:src/Riscv.cpp ****                 case KConsole::CONSOLE_PUTC:
 167:src/Riscv.cpp ****                     KConsole::putcHandler();
 168:src/Riscv.cpp ****                     break;
 169:src/Riscv.cpp ****             }
 170:src/Riscv.cpp **** 
 171:src/Riscv.cpp ****             Riscv::w_sstatus(sstatus);
 172:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 173:src/Riscv.cpp **** 
 174:src/Riscv.cpp ****             break;
 175:src/Riscv.cpp ****         }
 176:src/Riscv.cpp ****     }
 177:src/Riscv.cpp **** }
 178:src/Riscv.cpp **** 
 179:src/Riscv.cpp **** void Riscv::kernelMain()
 180:src/Riscv.cpp **** {
 181:src/Riscv.cpp ****     initSystem();
 182:src/Riscv.cpp **** 
 183:src/Riscv.cpp ****     disableTimerInterrupts();
 184:src/Riscv.cpp ****     enableInterrupts();
 185:src/Riscv.cpp **** 
 186:src/Riscv.cpp **** 
 187:src/Riscv.cpp ****     PCB* userPCB = new PCB(&Riscv::userMainWrapper, 0, kmalloc(DEFAULT_STACK_SIZE), DEFAULT_TIME_SL
 188:src/Riscv.cpp ****     //PCB* userPCB = new PCB(&Riscv::myTestsWrapper, 0, kmalloc(DEFAULT_STACK_SIZE), DEFAULT_TIME_S
 189:src/Riscv.cpp ****     userPCB->start();
 190:src/Riscv.cpp ****     while(!userPCB->isFinished())
 191:src/Riscv.cpp ****     {
 192:src/Riscv.cpp ****         thread_dispatch();
 193:src/Riscv.cpp ****     }
 194:src/Riscv.cpp **** 
 195:src/Riscv.cpp ****     finishSystem = true;
 196:src/Riscv.cpp ****     ::printString("End...\n");
 197:src/Riscv.cpp ****     while(!PCB::consolePCB->isFinished() || KConsole::pendingGetc > 0)
 198:src/Riscv.cpp ****     {
 199:src/Riscv.cpp ****         thread_dispatch();
 200:src/Riscv.cpp ****     }
 201:src/Riscv.cpp ****     disableInterrupts();
 202:src/Riscv.cpp ****     endSystem();
 203:src/Riscv.cpp **** }
 204:src/Riscv.cpp **** 
 205:src/Riscv.cpp **** void Riscv::userMainWrapper(void* )
 206:src/Riscv.cpp **** {
  12              		.loc 1 206 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23341100 		sd	ra,8(sp)
  17 0008 23308100 		sd	s0,0(sp)
  18              		.cfi_offset 1, -8
  19              		.cfi_offset 8, -16
  20 000c 13040101 		addi	s0,sp,16
  21              		.cfi_def_cfa 8, 0
 207:src/Riscv.cpp ****     userMain();
  22              		.loc 1 207 5
GAS LISTING /tmp/ccODRTXI.s 			page 5


  23              		.loc 1 207 13 is_stmt 0
  24 0010 97000000 		call	_Z8userMainv@plt
  24      E7800000 
  25              	.LVL0:
 208:src/Riscv.cpp **** }
  26              		.loc 1 208 1
  27 0018 83308100 		ld	ra,8(sp)
  28              		.cfi_restore 1
  29 001c 03340100 		ld	s0,0(sp)
  30              		.cfi_restore 8
  31              		.cfi_def_cfa 2, 16
  32 0020 13010101 		addi	sp,sp,16
  33              		.cfi_def_cfa_offset 0
  34 0024 67800000 		jr	ra
  35              		.cfi_endproc
  36              	.LFE49:
  38              		.align	2
  39              		.globl	_ZN5Riscv10initSystemEv
  41              	_ZN5Riscv10initSystemEv:
  42              	.LFB42:
  18:src/Riscv.cpp ****     w_stvec((uint64)&Riscv::supervisorTrap);
  43              		.loc 1 18 1 is_stmt 1
  44              		.cfi_startproc
  45 0028 130101FF 		addi	sp,sp,-16
  46              		.cfi_def_cfa_offset 16
  47 002c 23341100 		sd	ra,8(sp)
  48 0030 23308100 		sd	s0,0(sp)
  49              		.cfi_offset 1, -8
  50              		.cfi_offset 8, -16
  51 0034 13040101 		addi	s0,sp,16
  52              		.cfi_def_cfa 8, 0
  19:src/Riscv.cpp ****     PCB::initialize();
  53              		.loc 1 19 5
  19:src/Riscv.cpp ****     PCB::initialize();
  54              		.loc 1 19 12 is_stmt 0
  55 0038 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
  55      83B70700 
  56              	.LVL1:
  57              	.LBB37:
  58              	.LBB38:
  59              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 4/27/22.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_0_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_0_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** #include "../test/printing.hpp"
  10:src/../h/Riscv.hpp **** 
  11:src/../h/Riscv.hpp **** class Riscv
  12:src/../h/Riscv.hpp **** {
  13:src/../h/Riscv.hpp **** public:
  14:src/../h/Riscv.hpp ****     static void kernelMain();
  15:src/../h/Riscv.hpp **** 
  16:src/../h/Riscv.hpp ****     static void changePrivMode();
GAS LISTING /tmp/ccODRTXI.s 			page 6


  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp ****     static void initSystem();
  19:src/../h/Riscv.hpp ****     static void endSystem();
  20:src/../h/Riscv.hpp **** 
  21:src/../h/Riscv.hpp ****     static void userMainWrapper(void* p);
  22:src/../h/Riscv.hpp **** 
  23:src/../h/Riscv.hpp ****     static void enableInterrupts();
  24:src/../h/Riscv.hpp **** 
  25:src/../h/Riscv.hpp ****     static void disableTimerInterrupts();
  26:src/../h/Riscv.hpp **** 
  27:src/../h/Riscv.hpp ****     static void disableInterrupts();
  28:src/../h/Riscv.hpp **** 
  29:src/../h/Riscv.hpp ****     static void idleRiscv(void* arg);
  30:src/../h/Riscv.hpp **** 
  31:src/../h/Riscv.hpp ****     static void pushRegisters();
  32:src/../h/Riscv.hpp ****     static void popRegisters();
  33:src/../h/Riscv.hpp **** 
  34:src/../h/Riscv.hpp ****     static uint64 r_scause();
  35:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  36:src/../h/Riscv.hpp **** 
  37:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  38:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
  39:src/../h/Riscv.hpp **** 
  40:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  41:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  42:src/../h/Riscv.hpp **** 
  43:src/../h/Riscv.hpp ****     static uint64 r_stval();
  44:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  45:src/../h/Riscv.hpp **** 
  46:src/../h/Riscv.hpp ****     static bool finishSystem;
  47:src/../h/Riscv.hpp **** 
  48:src/../h/Riscv.hpp ****     enum BitMaskSip
  49:src/../h/Riscv.hpp ****     {
  50:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  51:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  52:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9),
  53:src/../h/Riscv.hpp ****     };
  54:src/../h/Riscv.hpp **** 
  55:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  56:src/../h/Riscv.hpp **** 
  57:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  58:src/../h/Riscv.hpp **** 
  59:src/../h/Riscv.hpp ****     static uint64 r_sip();
  60:src/../h/Riscv.hpp **** 
  61:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  62:src/../h/Riscv.hpp **** 
  63:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  64:src/../h/Riscv.hpp ****     {
  65:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  66:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  67:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  68:src/../h/Riscv.hpp ****     };
  69:src/../h/Riscv.hpp **** 
  70:src/../h/Riscv.hpp ****     static void w_a0_sscratch();
  71:src/../h/Riscv.hpp **** 
  72:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  73:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/ccODRTXI.s 			page 7


  74:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  75:src/../h/Riscv.hpp **** 
  76:src/../h/Riscv.hpp ****     static void mc_sie(uint64 mask);
  77:src/../h/Riscv.hpp **** 
  78:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  79:src/../h/Riscv.hpp **** 
  80:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  81:src/../h/Riscv.hpp **** 
  82:src/../h/Riscv.hpp ****     static uint64 r_sie();
  83:src/../h/Riscv.hpp ****     static void w_sie(uint64 sie);
  84:src/../h/Riscv.hpp ****     static void popSppSpie();
  85:src/../h/Riscv.hpp **** 
  86:src/../h/Riscv.hpp ****     static void supervisorTrap();
  87:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  88:src/../h/Riscv.hpp **** 
  89:src/../h/Riscv.hpp ****     static void myTestsWrapper(void* );
  90:src/../h/Riscv.hpp **** 
  91:src/../h/Riscv.hpp ****     static const uint64 bntOne = 1UL << 63;;
  92:src/../h/Riscv.hpp ****     static const uint64 bntZero = 0UL;
  93:src/../h/Riscv.hpp ****     static const uint64 timerInterrupt = bntOne + 1UL;
  94:src/../h/Riscv.hpp ****     static const uint64 hwInterrupt = bntOne + 9UL;
  95:src/../h/Riscv.hpp ****     static const uint64 operationInterrupt = bntZero + 2UL;
  96:src/../h/Riscv.hpp ****     static const uint64 addrReadInterrupt = bntZero + 5UL;
  97:src/../h/Riscv.hpp ****     static const uint64 addrWriteInterrupt = bntZero + 7UL;
  98:src/../h/Riscv.hpp ****     static const uint64 ecallUserInterrupt = bntZero + 8UL;
  99:src/../h/Riscv.hpp ****     static const uint64 ecallSystemInterupt = bntZero + 9UL;
 100:src/../h/Riscv.hpp **** 
 101:src/../h/Riscv.hpp ****     static uint64 totalTime;
 102:src/../h/Riscv.hpp **** };
 103:src/../h/Riscv.hpp **** 
 104:src/../h/Riscv.hpp **** inline void Riscv::mc_sie(uint64 mask)
 105:src/../h/Riscv.hpp **** {
 106:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sie, %0" : :"r"(mask));
 107:src/../h/Riscv.hpp **** }
 108:src/../h/Riscv.hpp **** 
 109:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause() {
 110:src/../h/Riscv.hpp ****     uint64 volatile scause;
 111:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
 112:src/../h/Riscv.hpp ****     return scause;
 113:src/../h/Riscv.hpp **** }
 114:src/../h/Riscv.hpp **** 
 115:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
 116:src/../h/Riscv.hpp ****     __asm__ volatile("csrw scause, %0" : :"r"(scause));
 117:src/../h/Riscv.hpp **** }
 118:src/../h/Riscv.hpp **** 
 119:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc() {
 120:src/../h/Riscv.hpp ****     uint64 volatile sepc;
 121:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 122:src/../h/Riscv.hpp ****     return sepc;
 123:src/../h/Riscv.hpp **** }
 124:src/../h/Riscv.hpp **** 
 125:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
 126:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sepc, %0" : :"r"(sepc));
 127:src/../h/Riscv.hpp **** }
 128:src/../h/Riscv.hpp **** 
 129:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec() {
 130:src/../h/Riscv.hpp ****     uint64 volatile stvec;
GAS LISTING /tmp/ccODRTXI.s 			page 8


 131:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, stvec" : "=r"(stvec));
 132:src/../h/Riscv.hpp ****     return stvec;
 133:src/../h/Riscv.hpp **** }
 134:src/../h/Riscv.hpp **** 
 135:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 136:src/../h/Riscv.hpp ****     __asm__ volatile("csrw stvec, %0" : :"r"(stvec));
  60              		.loc 2 136 5 is_stmt 1
  61              		.loc 2 136 53 is_stmt 0
  62              	#APP
  63              	# 136 "src/../h/Riscv.hpp" 1
 137              	}
  64              		csrw stvec, a5
  65              	# 0 "" 2
  66              	.LVL2:
  67              	#NO_APP
  68              	.LBE38:
  69              	.LBE37:
  20:src/Riscv.cpp ****     KConsole::initialize();
  70              		.loc 1 20 5 is_stmt 1
  20:src/Riscv.cpp ****     KConsole::initialize();
  71              		.loc 1 20 20 is_stmt 0
  72 0044 97000000 		call	_ZN3PCB10initializeEv@plt
  72      E7800000 
  73              	.LVL3:
  21:src/Riscv.cpp **** }
  74              		.loc 1 21 5 is_stmt 1
  21:src/Riscv.cpp **** }
  75              		.loc 1 21 25 is_stmt 0
  76 004c 97000000 		call	_ZN8KConsole10initializeEv@plt
  76      E7800000 
  77              	.LVL4:
  22:src/Riscv.cpp **** 
  78              		.loc 1 22 1
  79 0054 83308100 		ld	ra,8(sp)
  80              		.cfi_restore 1
  81 0058 03340100 		ld	s0,0(sp)
  82              		.cfi_restore 8
  83              		.cfi_def_cfa 2, 16
  84 005c 13010101 		addi	sp,sp,16
  85              		.cfi_def_cfa_offset 0
  86 0060 67800000 		jr	ra
  87              		.cfi_endproc
  88              	.LFE42:
  90              		.align	2
  91              		.globl	_ZN5Riscv16enableInterruptsEv
  93              	_ZN5Riscv16enableInterruptsEv:
  94              	.LFB44:
  30:src/Riscv.cpp ****     ms_sstatus(Riscv::SSTATUS_SIE);
  95              		.loc 1 30 32 is_stmt 1
  96              		.cfi_startproc
  97 0064 130101FF 		addi	sp,sp,-16
  98              		.cfi_def_cfa_offset 16
  99 0068 23348100 		sd	s0,8(sp)
 100              		.cfi_offset 8, -8
 101 006c 13040101 		addi	s0,sp,16
 102              		.cfi_def_cfa 8, 0
  31:src/Riscv.cpp **** }
GAS LISTING /tmp/ccODRTXI.s 			page 9


 103              		.loc 1 31 5
 104              	.LVL5:
 105              	.LBB39:
 106              	.LBB40:
 138:src/../h/Riscv.hpp **** 
 139:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stval() {
 140:src/../h/Riscv.hpp ****     uint64 volatile stval;
 141:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, stval" : "=r"(stval));
 142:src/../h/Riscv.hpp ****     return stval;
 143:src/../h/Riscv.hpp **** }
 144:src/../h/Riscv.hpp **** 
 145:src/../h/Riscv.hpp **** inline void Riscv::w_sie(uint64 sie)
 146:src/../h/Riscv.hpp **** {
 147:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sie, %0" : :"r"(sie));
 148:src/../h/Riscv.hpp **** }
 149:src/../h/Riscv.hpp **** 
 150:src/../h/Riscv.hpp **** inline void Riscv::w_stval(uint64 stval) {
 151:src/../h/Riscv.hpp ****     __asm__ volatile("csrw stval, %0" : :"r"(stval));
 152:src/../h/Riscv.hpp **** }
 153:src/../h/Riscv.hpp **** 
 154:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 155:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sip, %0" : :"r"(mask));
 156:src/../h/Riscv.hpp **** }
 157:src/../h/Riscv.hpp **** 
 158:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 159:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sip, %0" : :"r"(mask));
 160:src/../h/Riscv.hpp **** }
 161:src/../h/Riscv.hpp **** 
 162:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sie()
 163:src/../h/Riscv.hpp **** {
 164:src/../h/Riscv.hpp ****     uint64 volatile sie;
 165:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sip" : "=r"(sie));
 166:src/../h/Riscv.hpp ****     return sie;
 167:src/../h/Riscv.hpp **** }
 168:src/../h/Riscv.hpp **** 
 169:src/../h/Riscv.hpp **** 
 170:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip() {
 171:src/../h/Riscv.hpp ****     uint64 volatile sip;
 172:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sip" : "=r"(sip));
 173:src/../h/Riscv.hpp ****     return sip;
 174:src/../h/Riscv.hpp **** }
 175:src/../h/Riscv.hpp **** 
 176:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 177:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sip, %0" : :"r"(sip));
 178:src/../h/Riscv.hpp **** }
 179:src/../h/Riscv.hpp **** 
 180:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 181:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sstatus, %0" : :"r"(mask));
 107              		.loc 2 181 5
 108              		.loc 2 181 54 is_stmt 0
 109 0070 93072000 		li	a5,2
 110              	#APP
 111              	# 181 "src/../h/Riscv.hpp" 1
 182              	}
 112              		csrs sstatus, a5
 113              	# 0 "" 2
 114              	.LVL6:
GAS LISTING /tmp/ccODRTXI.s 			page 10


 115              	#NO_APP
 116              	.LBE40:
 117              	.LBE39:
  32:src/Riscv.cpp **** 
 118              		.loc 1 32 1
 119 0078 03348100 		ld	s0,8(sp)
 120              		.cfi_restore 8
 121              		.cfi_def_cfa 2, 16
 122 007c 13010101 		addi	sp,sp,16
 123              		.cfi_def_cfa_offset 0
 124 0080 67800000 		jr	ra
 125              		.cfi_endproc
 126              	.LFE44:
 128              		.align	2
 129              		.globl	_ZN5Riscv17disableInterruptsEv
 131              	_ZN5Riscv17disableInterruptsEv:
 132              	.LFB45:
  35:src/Riscv.cpp ****     mc_sstatus(Riscv::SSTATUS_SIE);
 133              		.loc 1 35 1 is_stmt 1
 134              		.cfi_startproc
 135 0084 130101FF 		addi	sp,sp,-16
 136              		.cfi_def_cfa_offset 16
 137 0088 23348100 		sd	s0,8(sp)
 138              		.cfi_offset 8, -8
 139 008c 13040101 		addi	s0,sp,16
 140              		.cfi_def_cfa 8, 0
  36:src/Riscv.cpp **** }
 141              		.loc 1 36 5
 142              	.LVL7:
 143              	.LBB41:
 144              	.LBB42:
 183:src/../h/Riscv.hpp **** 
 184:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 185:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sstatus, %0" : :"r"(mask));
 145              		.loc 2 185 5
 146              		.loc 2 185 54 is_stmt 0
 147 0090 93072000 		li	a5,2
 148              	#APP
 149              	# 185 "src/../h/Riscv.hpp" 1
 186              	}
 150              		csrc sstatus, a5
 151              	# 0 "" 2
 152              	.LVL8:
 153              	#NO_APP
 154              	.LBE42:
 155              	.LBE41:
  37:src/Riscv.cpp **** 
 156              		.loc 1 37 1
 157 0098 03348100 		ld	s0,8(sp)
 158              		.cfi_restore 8
 159              		.cfi_def_cfa 2, 16
 160 009c 13010101 		addi	sp,sp,16
 161              		.cfi_def_cfa_offset 0
 162 00a0 67800000 		jr	ra
 163              		.cfi_endproc
 164              	.LFE45:
 166              		.align	2
GAS LISTING /tmp/ccODRTXI.s 			page 11


 167              		.globl	_ZN5Riscv9endSystemEv
 169              	_ZN5Riscv9endSystemEv:
 170              	.LFB43:
  25:src/Riscv.cpp ****     //todo
 171              		.loc 1 25 1 is_stmt 1
 172              		.cfi_startproc
 173 00a4 130101FF 		addi	sp,sp,-16
 174              		.cfi_def_cfa_offset 16
 175 00a8 23341100 		sd	ra,8(sp)
 176 00ac 23308100 		sd	s0,0(sp)
 177              		.cfi_offset 1, -8
 178              		.cfi_offset 8, -16
 179 00b0 13040101 		addi	s0,sp,16
 180              		.cfi_def_cfa 8, 0
  27:src/Riscv.cpp **** }
 181              		.loc 1 27 5
  27:src/Riscv.cpp **** }
 182              		.loc 1 27 29 is_stmt 0
 183 00b4 97000000 		call	_ZN5Riscv17disableInterruptsEv
 183      E7800000 
 184              	.LVL9:
  28:src/Riscv.cpp **** 
 185              		.loc 1 28 1
 186 00bc 83308100 		ld	ra,8(sp)
 187              		.cfi_restore 1
 188 00c0 03340100 		ld	s0,0(sp)
 189              		.cfi_restore 8
 190              		.cfi_def_cfa 2, 16
 191 00c4 13010101 		addi	sp,sp,16
 192              		.cfi_def_cfa_offset 0
 193 00c8 67800000 		jr	ra
 194              		.cfi_endproc
 195              	.LFE43:
 197              		.align	2
 198              		.globl	_ZN5Riscv10popSppSpieEv
 200              	_ZN5Riscv10popSppSpieEv:
 201              	.LFB46:
  40:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
 202              		.loc 1 40 1 is_stmt 1
 203              		.cfi_startproc
 204 00cc 130101FF 		addi	sp,sp,-16
 205              		.cfi_def_cfa_offset 16
 206 00d0 23348100 		sd	s0,8(sp)
 207              		.cfi_offset 8, -8
 208 00d4 13040101 		addi	s0,sp,16
 209              		.cfi_def_cfa 8, 0
  41:src/Riscv.cpp ****     __asm__ volatile ("sret");
 210              		.loc 1 41 5
  41:src/Riscv.cpp ****     __asm__ volatile ("sret");
 211              		.loc 1 41 39 is_stmt 0
 212              	#APP
 213              	# 41 "src/Riscv.cpp" 1
  42:src/Riscv.cpp **** }
 214              		csrw sepc, ra
 215              	# 0 "" 2
 216              		.loc 1 42 5 is_stmt 1
  42:src/Riscv.cpp **** }
GAS LISTING /tmp/ccODRTXI.s 			page 12


 217              		.loc 1 42 30 is_stmt 0
 218              	# 42 "src/Riscv.cpp" 1
  43:src/Riscv.cpp **** 
 219              		sret
 220              	# 0 "" 2
 221              		.loc 1 43 1
 222              	#NO_APP
 223 00e0 03348100 		ld	s0,8(sp)
 224              		.cfi_restore 8
 225              		.cfi_def_cfa 2, 16
 226 00e4 13010101 		addi	sp,sp,16
 227              		.cfi_def_cfa_offset 0
 228 00e8 67800000 		jr	ra
 229              		.cfi_endproc
 230              	.LFE46:
 232              		.align	2
 233              		.globl	_ZN5Riscv20handleSupervisorTrapEv
 235              	_ZN5Riscv20handleSupervisorTrapEv:
 236              	.LFB47:
  46:src/Riscv.cpp ****     __asm__ volatile("mv %0, a4" : "=r"(PCB::savedRegA4));
 237              		.loc 1 46 1 is_stmt 1
 238              		.cfi_startproc
 239 00ec 130101F9 		addi	sp,sp,-112
 240              		.cfi_def_cfa_offset 112
 241 00f0 23341106 		sd	ra,104(sp)
 242 00f4 23308106 		sd	s0,96(sp)
 243 00f8 233C9104 		sd	s1,88(sp)
 244              		.cfi_offset 1, -8
 245              		.cfi_offset 8, -16
 246              		.cfi_offset 9, -24
 247 00fc 13040107 		addi	s0,sp,112
 248              		.cfi_def_cfa 8, 0
  47:src/Riscv.cpp ****     __asm__ volatile("csrr %0, sscratch":"=r"(PCB::running->sscratch));
 249              		.loc 1 47 5
  47:src/Riscv.cpp ****     __asm__ volatile("csrr %0, sscratch":"=r"(PCB::running->sscratch));
 250              		.loc 1 47 58 is_stmt 0
 251              	#APP
 252              	# 47 "src/Riscv.cpp" 1
 253              		mv a4, a4
 254              	# 0 "" 2
 255              	#NO_APP
 256 0104 97070000 		la	a5,_ZN3PCB10savedRegA4E
 256      83B70700 
 257 010c 23B0E700 		sd	a4,0(a5)
  48:src/Riscv.cpp **** 
 258              		.loc 1 48 5 is_stmt 1
  48:src/Riscv.cpp **** 
 259              		.loc 1 48 61 is_stmt 0
 260 0110 97070000 		la	a5,_ZN3PCB7runningE
 260      83B70700 
 261 0118 83B70700 		ld	a5,0(a5)
  48:src/Riscv.cpp **** 
 262              		.loc 1 48 71
 263              	#APP
 264              	# 48 "src/Riscv.cpp" 1
 265              		csrr a4, sscratch
 266              	# 0 "" 2
GAS LISTING /tmp/ccODRTXI.s 			page 13


 267              	#NO_APP
 268 0120 23B8E700 		sd	a4,16(a5)
  50:src/Riscv.cpp **** 
 269              		.loc 1 50 5 is_stmt 1
 270              	.LBB43:
 271              	.LBB44:
 110:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
 272              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return scause;
 273              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return scause;
 274              		.loc 2 111 55 is_stmt 0
 275              	#APP
 276              	# 111 "src/../h/Riscv.hpp" 1
 277              		csrr a5, scause
 278              	# 0 "" 2
 279              	#NO_APP
 280 0128 233CF4FA 		sd	a5,-72(s0)
 112:src/../h/Riscv.hpp **** }
 281              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 282              		.loc 2 112 12 is_stmt 0
 283 012c 833784FB 		ld	a5,-72(s0)
 284              	.LVL10:
 285              	.LBE44:
 286              	.LBE43:
  52:src/Riscv.cpp ****     {
 287              		.loc 1 52 5 is_stmt 1
 288              	.LBB45:
 289 0130 1307F0FF 		li	a4,-1
 290 0134 1317F703 		slli	a4,a4,63
 291 0138 13071700 		addi	a4,a4,1
 292 013c 638EE70C 		beq	a5,a4,.L14
 293 0140 1307F0FF 		li	a4,-1
 294 0144 1317F703 		slli	a4,a4,63
 295 0148 13071700 		addi	a4,a4,1
 296 014c 636EF704 		bgtu	a5,a4,.L15
 297 0150 938787FF 		addi	a5,a5,-8
 298              	.LVL11:
 299 0154 13071000 		li	a4,1
 300 0158 6366F71A 		bgtu	a5,a4,.L13
 301              	.LBE45:
 116:src/Riscv.cpp ****         case ecallUserInterrupt:
 302              		.loc 1 116 9
 117:src/Riscv.cpp ****         {
 303              		.loc 1 117 9
 118:src/Riscv.cpp ****             uint64 operation;
 304              		.loc 1 118 9
 305              	.LBB76:
 306              	.LBB46:
 119:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
 307              		.loc 1 119 13
 120:src/Riscv.cpp **** 
 308              		.loc 1 120 13
 120:src/Riscv.cpp **** 
 309              		.loc 1 120 61 is_stmt 0
 310              	#APP
GAS LISTING /tmp/ccODRTXI.s 			page 14


 311              	# 120 "src/Riscv.cpp" 1
 312              		mv a5, a0
 313              	# 0 "" 2
 314              	.LVL12:
 122:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 315              		.loc 1 122 13 is_stmt 1
 316              	#NO_APP
 317              	.LBB47:
 318              	.LBB48:
 120:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 319              		.loc 2 120 5
 121:src/../h/Riscv.hpp ****     return sepc;
 320              		.loc 2 121 5
 121:src/../h/Riscv.hpp ****     return sepc;
 321              		.loc 2 121 51 is_stmt 0
 322              	#APP
 323              	# 121 "src/../h/Riscv.hpp" 1
 324              		csrr a4, sepc
 325              	# 0 "" 2
 326              	#NO_APP
 327 0164 233CE4FC 		sd	a4,-40(s0)
 122:src/../h/Riscv.hpp **** }
 328              		.loc 2 122 5 is_stmt 1
 122:src/../h/Riscv.hpp **** }
 329              		.loc 2 122 12 is_stmt 0
 330 0168 033784FD 		ld	a4,-40(s0)
 331              	.LBE48:
 332              	.LBE47:
 122:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 333              		.loc 1 122 52
 334 016c 13074700 		addi	a4,a4,4
 122:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 335              		.loc 1 122 54
 336 0170 2334E4FA 		sd	a4,-88(s0)
 123:src/Riscv.cpp **** 
 337              		.loc 1 123 13 is_stmt 1
 338              	.LBB49:
 339              	.LBB50:
 187:src/../h/Riscv.hpp **** 
 188:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sstatus() {
 189:src/../h/Riscv.hpp ****     uint64 volatile sstatus;
 340              		.loc 2 189 5
 190:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 341              		.loc 2 190 5
 342              		.loc 2 190 57 is_stmt 0
 343              	#APP
 344              	# 190 "src/../h/Riscv.hpp" 1
 191              	    return sstatus;
 345              		csrr a4, sstatus
 346              	# 0 "" 2
 347              	#NO_APP
 348 0178 2338E4FC 		sd	a4,-48(s0)
 349              		.loc 2 191 5 is_stmt 1
 350              		.loc 2 191 12 is_stmt 0
 351 017c 033704FD 		ld	a4,-48(s0)
 352              	.LBE50:
 353              	.LBE49:
GAS LISTING /tmp/ccODRTXI.s 			page 15


 123:src/Riscv.cpp **** 
 354              		.loc 1 123 56
 355 0180 2338E4FA 		sd	a4,-80(s0)
 125:src/Riscv.cpp ****             {
 356              		.loc 1 125 13 is_stmt 1
 357 0184 13072004 		li	a4,66
 358 0188 6366F716 		bgtu	a5,a4,.L21
 359 018c 93972700 		slli	a5,a5,2
 360              	.LVL13:
 361 0190 17070000 		lla	a4,.L23
 361      13070700 
 362 0198 B387E700 		add	a5,a5,a4
 363 019c 83A70700 		lw	a5,0(a5)
 364 01a0 B387E700 		add	a5,a5,a4
 365 01a4 67800700 		jr	a5
 366              		.section	.rodata
 367              		.align	2
 368              		.align	2
 369              	.L23:
 370 0000 00000000 		.word	.L21-.L23
 371 0004 00000000 		.word	.L36-.L23
 372 0008 00000000 		.word	.L35-.L23
 373 000c 00000000 		.word	.L21-.L23
 374 0010 00000000 		.word	.L21-.L23
 375 0014 00000000 		.word	.L21-.L23
 376 0018 00000000 		.word	.L21-.L23
 377 001c 00000000 		.word	.L21-.L23
 378 0020 00000000 		.word	.L21-.L23
 379 0024 00000000 		.word	.L21-.L23
 380 0028 00000000 		.word	.L21-.L23
 381 002c 00000000 		.word	.L21-.L23
 382 0030 00000000 		.word	.L21-.L23
 383 0034 00000000 		.word	.L21-.L23
 384 0038 00000000 		.word	.L21-.L23
 385 003c 00000000 		.word	.L21-.L23
 386 0040 00000000 		.word	.L21-.L23
 387 0044 00000000 		.word	.L34-.L23
 388 0048 00000000 		.word	.L33-.L23
 389 004c 00000000 		.word	.L32-.L23
 390 0050 00000000 		.word	.L31-.L23
 391 0054 00000000 		.word	.L30-.L23
 392 0058 00000000 		.word	.L21-.L23
 393 005c 00000000 		.word	.L21-.L23
 394 0060 00000000 		.word	.L21-.L23
 395 0064 00000000 		.word	.L21-.L23
 396 0068 00000000 		.word	.L21-.L23
 397 006c 00000000 		.word	.L21-.L23
 398 0070 00000000 		.word	.L21-.L23
 399 0074 00000000 		.word	.L21-.L23
 400 0078 00000000 		.word	.L21-.L23
 401 007c 00000000 		.word	.L21-.L23
 402 0080 00000000 		.word	.L21-.L23
 403 0084 00000000 		.word	.L29-.L23
 404 0088 00000000 		.word	.L28-.L23
 405 008c 00000000 		.word	.L27-.L23
 406 0090 00000000 		.word	.L26-.L23
 407 0094 00000000 		.word	.L21-.L23
GAS LISTING /tmp/ccODRTXI.s 			page 16


 408 0098 00000000 		.word	.L21-.L23
 409 009c 00000000 		.word	.L21-.L23
 410 00a0 00000000 		.word	.L21-.L23
 411 00a4 00000000 		.word	.L21-.L23
 412 00a8 00000000 		.word	.L21-.L23
 413 00ac 00000000 		.word	.L21-.L23
 414 00b0 00000000 		.word	.L21-.L23
 415 00b4 00000000 		.word	.L21-.L23
 416 00b8 00000000 		.word	.L21-.L23
 417 00bc 00000000 		.word	.L21-.L23
 418 00c0 00000000 		.word	.L21-.L23
 419 00c4 00000000 		.word	.L25-.L23
 420 00c8 00000000 		.word	.L21-.L23
 421 00cc 00000000 		.word	.L21-.L23
 422 00d0 00000000 		.word	.L21-.L23
 423 00d4 00000000 		.word	.L21-.L23
 424 00d8 00000000 		.word	.L21-.L23
 425 00dc 00000000 		.word	.L21-.L23
 426 00e0 00000000 		.word	.L21-.L23
 427 00e4 00000000 		.word	.L21-.L23
 428 00e8 00000000 		.word	.L21-.L23
 429 00ec 00000000 		.word	.L21-.L23
 430 00f0 00000000 		.word	.L21-.L23
 431 00f4 00000000 		.word	.L21-.L23
 432 00f8 00000000 		.word	.L21-.L23
 433 00fc 00000000 		.word	.L21-.L23
 434 0100 00000000 		.word	.L21-.L23
 435 0104 00000000 		.word	.L24-.L23
 436 0108 00000000 		.word	.L22-.L23
 437              		.text
 438              	.LVL14:
 439              	.L15:
 440              	.LBE46:
  52:src/Riscv.cpp ****     {
 441              		.loc 1 52 5 is_stmt 0
 442 01a8 1307F0FF 		li	a4,-1
 443 01ac 1317F703 		slli	a4,a4,63
 444 01b0 13079700 		addi	a4,a4,9
 445 01b4 6398E714 		bne	a5,a4,.L13
 446              	.LBE76:
  77:src/Riscv.cpp ****         {
 447              		.loc 1 77 9 is_stmt 1
  78:src/Riscv.cpp ****             uint64 x = CONSOLE_STATUS;
 448              		.loc 1 78 9
 449              	.LBB77:
 450              	.LBB55:
  79:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0"::"r"(x));
 451              		.loc 1 79 13
  79:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0"::"r"(x));
 452              		.loc 1 79 20 is_stmt 0
 453 01b8 97070000 		la	a5,CONSOLE_STATUS
 453      83B70700 
 454              	.LVL15:
 455 01c0 83B70700 		ld	a5,0(a5)
 456              	.LVL16:
  80:src/Riscv.cpp ****             __asm__ volatile("lb a1, 0(a0)");
 457              		.loc 1 80 13 is_stmt 1
GAS LISTING /tmp/ccODRTXI.s 			page 17


  80:src/Riscv.cpp ****             __asm__ volatile("lb a1, 0(a0)");
 458              		.loc 1 80 50 is_stmt 0
 459              	#APP
 460              	# 80 "src/Riscv.cpp" 1
  81:src/Riscv.cpp ****             uint64 operation;
 461              		mv a0, a5
 462              	# 0 "" 2
 463              		.loc 1 81 13 is_stmt 1
  81:src/Riscv.cpp ****             uint64 operation;
 464              		.loc 1 81 45 is_stmt 0
 465              	# 81 "src/Riscv.cpp" 1
  82:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" :  "=r"(operation));
 466              		lb a1, 0(a0)
 467              	# 0 "" 2
 468              		.loc 1 82 13 is_stmt 1
  83:src/Riscv.cpp ****             if(operation & KConsole::STATUS_READ_MASK)
 469              		.loc 1 83 13
  83:src/Riscv.cpp ****             if(operation & KConsole::STATUS_READ_MASK)
 470              		.loc 1 83 61 is_stmt 0
 471              	# 83 "src/Riscv.cpp" 1
 472              		mv a5, a1
 473              	# 0 "" 2
 474              	.LVL17:
  84:src/Riscv.cpp ****             {
 475              		.loc 1 84 13 is_stmt 1
 476              	#NO_APP
 477              	.LBB56:
  84:src/Riscv.cpp ****             {
 478              		.loc 1 84 26 is_stmt 0
 479 01d0 93F71700 		andi	a5,a5,1
 480              	.LVL18:
  84:src/Riscv.cpp ****             {
 481              		.loc 1 84 13
 482 01d4 63880702 		beqz	a5,.L20
 483              	.LBB57:
  86:src/Riscv.cpp ****                 __asm__ volatile("mv a0, %0"::"r"(x));
 484              		.loc 1 86 17 is_stmt 1
  86:src/Riscv.cpp ****                 __asm__ volatile("mv a0, %0"::"r"(x));
 485              		.loc 1 86 19 is_stmt 0
 486 01d8 97070000 		la	a5,CONSOLE_TX_DATA
 486      83B70700 
 487 01e0 83B70700 		ld	a5,0(a5)
 488              	.LVL19:
  87:src/Riscv.cpp ****                 __asm__ volatile("lb a1,0(a0)");
 489              		.loc 1 87 17 is_stmt 1
  87:src/Riscv.cpp ****                 __asm__ volatile("lb a1,0(a0)");
 490              		.loc 1 87 54 is_stmt 0
 491              	#APP
 492              	# 87 "src/Riscv.cpp" 1
  88:src/Riscv.cpp ****                 char c;
 493              		mv a0, a5
 494              	# 0 "" 2
 495              		.loc 1 88 17 is_stmt 1
  88:src/Riscv.cpp ****                 char c;
 496              		.loc 1 88 48 is_stmt 0
 497              	# 88 "src/Riscv.cpp" 1
  89:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" :  "=r"(c));
GAS LISTING /tmp/ccODRTXI.s 			page 18


 498              		lb a1,0(a0)
 499              	# 0 "" 2
 500              		.loc 1 89 17 is_stmt 1
  90:src/Riscv.cpp **** 
 501              		.loc 1 90 17
  90:src/Riscv.cpp **** 
 502              		.loc 1 90 57 is_stmt 0
 503              	# 90 "src/Riscv.cpp" 1
 504              		mv a0, a1
 505              	# 0 "" 2
 506              	#NO_APP
 507 01f0 9374F50F 		andi	s1,a0,0xff
 508              	.LVL20:
  92:src/Riscv.cpp ****                 {
 509              		.loc 1 92 17 is_stmt 1
  92:src/Riscv.cpp ****                 {
 510              		.loc 1 92 42 is_stmt 0
 511 01f4 97070000 		la	a5,_ZN8KConsole11pendingGetcE
 511      83B70700 
 512              	.LVL21:
 513 01fc 83B70700 		ld	a5,0(a5)
  92:src/Riscv.cpp ****                 {
 514              		.loc 1 92 17
 515 0200 6390070C 		bnez	a5,.L39
 516              	.LVL22:
 517              	.L20:
 518              	.LBE57:
 519              	.LBE56:
 100:src/Riscv.cpp **** 
 520              		.loc 1 100 13 is_stmt 1
 100:src/Riscv.cpp **** 
 521              		.loc 1 100 26 is_stmt 0
 522 0204 97000000 		call	plic_claim@plt
 522      E7800000 
 523              	.LVL23:
 524 020c 97000000 		call	plic_complete@plt
 524      E7800000 
 525              	.LVL24:
 102:src/Riscv.cpp ****         }
 526              		.loc 1 102 13 is_stmt 1
 527 0214 6F00000F 		j	.L13
 528              	.LVL25:
 529              	.L14:
 530              	.LBE55:
 531              	.LBE77:
  54:src/Riscv.cpp ****         {
 532              		.loc 1 54 9
  55:src/Riscv.cpp ****             uint64 volatile sepc = Riscv::r_sepc();
 533              		.loc 1 55 9
 534              	.LBB78:
 535              	.LBB60:
  56:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 536              		.loc 1 56 13
 537              	.LBB61:
 538              	.LBB62:
 120:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 539              		.loc 2 120 5
GAS LISTING /tmp/ccODRTXI.s 			page 19


 121:src/../h/Riscv.hpp ****     return sepc;
 540              		.loc 2 121 5
 121:src/../h/Riscv.hpp ****     return sepc;
 541              		.loc 2 121 51 is_stmt 0
 542              	#APP
 543              	# 121 "src/../h/Riscv.hpp" 1
 544              		csrr a5, sepc
 545              	# 0 "" 2
 546              	.LVL26:
 547              	#NO_APP
 548 021c 2334F4FC 		sd	a5,-56(s0)
 122:src/../h/Riscv.hpp **** }
 549              		.loc 2 122 5 is_stmt 1
 122:src/../h/Riscv.hpp **** }
 550              		.loc 2 122 12 is_stmt 0
 551 0220 833784FC 		ld	a5,-56(s0)
 552              	.LBE62:
 553              	.LBE61:
  56:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 554              		.loc 1 56 50
 555 0224 233CF4F8 		sd	a5,-104(s0)
  57:src/Riscv.cpp ****             mc_sip(Riscv::SIP_SSIP);
 556              		.loc 1 57 13 is_stmt 1
 557              	.LBB63:
 558              	.LBB64:
 189:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 559              		.loc 2 189 5
 190:src/../h/Riscv.hpp ****     return sstatus;
 560              		.loc 2 190 5
 190:src/../h/Riscv.hpp ****     return sstatus;
 561              		.loc 2 190 57 is_stmt 0
 562              	#APP
 563              	# 190 "src/../h/Riscv.hpp" 1
 564              		csrr a5, sstatus
 565              	# 0 "" 2
 566              	#NO_APP
 567 022c 2330F4FC 		sd	a5,-64(s0)
 568              		.loc 2 191 5 is_stmt 1
 569              		.loc 2 191 12 is_stmt 0
 570 0230 833704FC 		ld	a5,-64(s0)
 571              	.LBE64:
 572              	.LBE63:
  57:src/Riscv.cpp ****             mc_sip(Riscv::SIP_SSIP);
 573              		.loc 1 57 56
 574 0234 2330F4FA 		sd	a5,-96(s0)
  58:src/Riscv.cpp ****             //trapPrintString("timerInterrupt\n");
 575              		.loc 1 58 13 is_stmt 1
 576              	.LVL27:
 577              	.LBB65:
 578              	.LBB66:
 159:src/../h/Riscv.hpp **** }
 579              		.loc 2 159 5
 159:src/../h/Riscv.hpp **** }
 580              		.loc 2 159 50 is_stmt 0
 581 0238 93072000 		li	a5,2
 582              	#APP
 583              	# 159 "src/../h/Riscv.hpp" 1
GAS LISTING /tmp/ccODRTXI.s 			page 20


 584              		csrc sip, a5
 585              	# 0 "" 2
 586              	.LVL28:
 587              	#NO_APP
 588              	.LBE66:
 589              	.LBE65:
  61:src/Riscv.cpp ****             trapPrintInt(totalTime);
 590              		.loc 1 61 13 is_stmt 1
  61:src/Riscv.cpp ****             trapPrintInt(totalTime);
 591              		.loc 1 61 22 is_stmt 0
 592 0240 97070000 		lla	a5,.LANCHOR0
 592      93870700 
 593 0248 03B50700 		ld	a0,0(a5)
 594 024c 13051500 		addi	a0,a0,1
 595 0250 23B0A700 		sd	a0,0(a5)
  62:src/Riscv.cpp **** 
 596              		.loc 1 62 13 is_stmt 1
  62:src/Riscv.cpp **** 
 597              		.loc 1 62 25 is_stmt 0
 598 0254 13060000 		li	a2,0
 599 0258 93051000 		li	a1,1
 600 025c 1B050500 		sext.w	a0,a0
 601 0260 97000000 		call	_Z12trapPrintIntiii@plt
 601      E7800000 
 602              	.LVL29:
  64:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
 603              		.loc 1 64 13 is_stmt 1
  64:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
 604              		.loc 1 64 34 is_stmt 0
 605 0268 97040000 		la	s1,_ZN3PCB16timeSliceCounterE
 605      83B40400 
 606 0270 83B70400 		ld	a5,0(s1)
 607 0274 93871700 		addi	a5,a5,1
 608 0278 23B0F400 		sd	a5,0(s1)
  65:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
 609              		.loc 1 65 13 is_stmt 1
  65:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
 610              		.loc 1 65 40 is_stmt 0
 611 027c 97000000 		call	_ZN12SleepPCBList13tryToWakePCBsEv@plt
 611      E7800000 
 612              	.LVL30:
  66:src/Riscv.cpp ****             {
 613              		.loc 1 66 13 is_stmt 1
  66:src/Riscv.cpp ****             {
 614              		.loc 1 66 68 is_stmt 0
 615 0284 97070000 		la	a5,_ZN3PCB7runningE
 615      83B70700 
 616 028c 83B70700 		ld	a5,0(a5)
 617              	.LVL31:
 618              	.LBB67:
 619              	.LBB68:
 620              		.file 3 "src/../h/PCB.hpp"
   1:src/../h/PCB.hpp **** //
   2:src/../h/PCB.hpp **** // Created by os on 4/27/22.
   3:src/../h/PCB.hpp **** //
   4:src/../h/PCB.hpp **** 
   5:src/../h/PCB.hpp **** #ifndef PROJECT_BASE_V1_0_PCB_HPP
GAS LISTING /tmp/ccODRTXI.s 			page 21


   6:src/../h/PCB.hpp **** #define PROJECT_BASE_V1_0_PCB_HPP
   7:src/../h/PCB.hpp **** 
   8:src/../h/PCB.hpp **** #include "../lib/hw.h"
   9:src/../h/PCB.hpp **** #include "Scheduler.hpp"
  10:src/../h/PCB.hpp **** #include "Riscv.hpp"
  11:src/../h/PCB.hpp **** 
  12:src/../h/PCB.hpp **** class PCB
  13:src/../h/PCB.hpp **** {
  14:src/../h/PCB.hpp **** public:
  15:src/../h/PCB.hpp ****     static uint64 savedRegA4;
  16:src/../h/PCB.hpp **** 
  17:src/../h/PCB.hpp ****     using Body = void (*)(void*);
  18:src/../h/PCB.hpp **** 
  19:src/../h/PCB.hpp ****     PCB(Body body,  void* args, void* stack_space, uint64 timeSlice);
  20:src/../h/PCB.hpp ****     ~PCB();
  21:src/../h/PCB.hpp **** 
  22:src/../h/PCB.hpp ****     void start();
  23:src/../h/PCB.hpp ****     static void dispatch();
  24:src/../h/PCB.hpp ****     static void sleep(time_t);
  25:src/../h/PCB.hpp **** 
  26:src/../h/PCB.hpp ****     static PCB* running;
  27:src/../h/PCB.hpp **** 
  28:src/../h/PCB.hpp ****     static uint64 timeSliceCounter;
  29:src/../h/PCB.hpp ****     uint64 getTimeSlice() { return timeSlice;}
 621              		.loc 3 29 29 is_stmt 1
 622              		.loc 3 29 36 is_stmt 0
 623 0290 83B78701 		ld	a5,24(a5)
 624              	.LVL32:
 625              	.LBE68:
 626              	.LBE67:
  66:src/Riscv.cpp ****             {
 627              		.loc 1 66 39
 628 0294 03B70400 		ld	a4,0(s1)
  66:src/Riscv.cpp ****             {
 629              		.loc 1 66 13
 630 0298 637CF700 		bgeu	a4,a5,.L40
 631              	.L19:
  72:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 632              		.loc 1 72 13 is_stmt 1
  72:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 633              		.loc 1 72 29 is_stmt 0
 634 029c 833704FA 		ld	a5,-96(s0)
 635              	.LVL33:
 636              	.LBB69:
 637              	.LBB70:
 192:src/../h/Riscv.hpp **** }
 193:src/../h/Riscv.hpp **** 
 194:src/../h/Riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus) {
 195:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sstatus, %0" : :"r"(sstatus));
 638              		.loc 2 195 5 is_stmt 1
 639              		.loc 2 195 57 is_stmt 0
 640              	#APP
 641              	# 195 "src/../h/Riscv.hpp" 1
 196              	}
 642              		csrw sstatus, a5
 643              	# 0 "" 2
 644              	.LVL34:
GAS LISTING /tmp/ccODRTXI.s 			page 22


 645              	#NO_APP
 646              	.LBE70:
 647              	.LBE69:
  73:src/Riscv.cpp **** 
 648              		.loc 1 73 13 is_stmt 1
  73:src/Riscv.cpp **** 
 649              		.loc 1 73 26 is_stmt 0
 650 02a4 833784F9 		ld	a5,-104(s0)
 651              	.LVL35:
 652              	.LBB71:
 653              	.LBB72:
 126:src/../h/Riscv.hpp **** }
 654              		.loc 2 126 5 is_stmt 1
 126:src/../h/Riscv.hpp **** }
 655              		.loc 2 126 51 is_stmt 0
 656              	#APP
 657              	# 126 "src/../h/Riscv.hpp" 1
 127:src/../h/Riscv.hpp **** 
 658              		csrw sepc, a5
 659              	# 0 "" 2
 660              		.loc 2 127 1
 661              	#NO_APP
 662 02ac 6F008005 		j	.L13
 663              	.LVL36:
 664              	.L40:
 665              	.LBE72:
 666              	.LBE71:
  68:src/Riscv.cpp ****                 PCB::dispatch();
 667              		.loc 1 68 17 is_stmt 1
  68:src/Riscv.cpp ****                 PCB::dispatch();
 668              		.loc 1 68 39 is_stmt 0
 669 02b0 23B00400 		sd	zero,0(s1)
  69:src/Riscv.cpp ****             }
 670              		.loc 1 69 17 is_stmt 1
  69:src/Riscv.cpp ****             }
 671              		.loc 1 69 30 is_stmt 0
 672 02b4 97000000 		call	_ZN3PCB8dispatchEv@plt
 672      E7800000 
 673              	.LVL37:
 674 02bc 6FF01FFE 		j	.L19
 675              	.LVL38:
 676              	.L39:
 677              	.LBE60:
 678              	.LBB73:
 679              	.LBB59:
 680              	.LBB58:
  94:src/Riscv.cpp ****                     KConsole::putCharacterInput(c);
 681              		.loc 1 94 21 is_stmt 1
  94:src/Riscv.cpp ****                     KConsole::putCharacterInput(c);
 682              		.loc 1 94 42 is_stmt 0
 683 02c0 9387F7FF 		addi	a5,a5,-1
 684 02c4 17070000 		la	a4,_ZN8KConsole11pendingGetcE
 684      03370700 
 685 02cc 2330F700 		sd	a5,0(a4)
  95:src/Riscv.cpp ****                     KConsole::putCharacterOutput(c);
 686              		.loc 1 95 21 is_stmt 1
  95:src/Riscv.cpp ****                     KConsole::putCharacterOutput(c);
GAS LISTING /tmp/ccODRTXI.s 			page 23


 687              		.loc 1 95 48 is_stmt 0
 688 02d0 13850400 		mv	a0,s1
 689              	.LVL39:
 690 02d4 97000000 		call	_ZN8KConsole17putCharacterInputEc@plt
 690      E7800000 
 691              	.LVL40:
  96:src/Riscv.cpp ****                 }
 692              		.loc 1 96 21 is_stmt 1
  96:src/Riscv.cpp ****                 }
 693              		.loc 1 96 49 is_stmt 0
 694 02dc 13850400 		mv	a0,s1
 695 02e0 97000000 		call	_ZN8KConsole18putCharacterOutputEc@plt
 695      E7800000 
 696              	.LVL41:
 697 02e8 6FF0DFF1 		j	.L20
 698              	.LVL42:
 699              	.L36:
 700              	.LBE58:
 701              	.LBE59:
 702              	.LBE73:
 703              	.LBB74:
 127:src/Riscv.cpp ****                     MemoryAllocator::memAllocHandler();
 704              		.loc 1 127 17 is_stmt 1
 128:src/Riscv.cpp ****                     break;
 705              		.loc 1 128 21
 128:src/Riscv.cpp ****                     break;
 706              		.loc 1 128 53 is_stmt 0
 707 02ec 97000000 		call	_ZN15MemoryAllocator15memAllocHandlerEv@plt
 707      E7800000 
 708              	.LVL43:
 129:src/Riscv.cpp ****                 case MemoryAllocator::MEM_FREE:
 709              		.loc 1 129 21 is_stmt 1
 710              	.L21:
 171:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 711              		.loc 1 171 13
 171:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 712              		.loc 1 171 29 is_stmt 0
 713 02f4 833704FB 		ld	a5,-80(s0)
 714              	.LVL44:
 715              	.LBB51:
 716              	.LBB52:
 195:src/../h/Riscv.hpp **** }
 717              		.loc 2 195 5 is_stmt 1
 195:src/../h/Riscv.hpp **** }
 718              		.loc 2 195 57 is_stmt 0
 719              	#APP
 720              	# 195 "src/../h/Riscv.hpp" 1
 721              		csrw sstatus, a5
 722              	# 0 "" 2
 723              	.LVL45:
 724              	#NO_APP
 725              	.LBE52:
 726              	.LBE51:
 172:src/Riscv.cpp **** 
 727              		.loc 1 172 13 is_stmt 1
 172:src/Riscv.cpp **** 
 728              		.loc 1 172 26 is_stmt 0
GAS LISTING /tmp/ccODRTXI.s 			page 24


 729 02fc 833784FA 		ld	a5,-88(s0)
 730              	.LVL46:
 731              	.LBB53:
 732              	.LBB54:
 126:src/../h/Riscv.hpp **** }
 733              		.loc 2 126 5 is_stmt 1
 126:src/../h/Riscv.hpp **** }
 734              		.loc 2 126 51 is_stmt 0
 735              	#APP
 736              	# 126 "src/../h/Riscv.hpp" 1
 737              		csrw sepc, a5
 738              	# 0 "" 2
 739              	.LVL47:
 740              	#NO_APP
 741              	.L13:
 742              	.LBE54:
 743              	.LBE53:
 744              	.LBE74:
 745              	.LBE78:
 177:src/Riscv.cpp **** 
 746              		.loc 1 177 1
 747 0304 83308106 		ld	ra,104(sp)
 748              		.cfi_remember_state
 749              		.cfi_restore 1
 750 0308 03340106 		ld	s0,96(sp)
 751              		.cfi_restore 8
 752              		.cfi_def_cfa 2, 112
 753 030c 83348105 		ld	s1,88(sp)
 754              		.cfi_restore 9
 755 0310 13010107 		addi	sp,sp,112
 756              		.cfi_def_cfa_offset 0
 757 0314 67800000 		jr	ra
 758              	.L35:
 759              		.cfi_restore_state
 760              	.LBB79:
 761              	.LBB75:
 130:src/Riscv.cpp ****                     MemoryAllocator::memFreeHandler();
 762              		.loc 1 130 17 is_stmt 1
 131:src/Riscv.cpp ****                     break;
 763              		.loc 1 131 21
 131:src/Riscv.cpp ****                     break;
 764              		.loc 1 131 52 is_stmt 0
 765 0318 97000000 		call	_ZN15MemoryAllocator14memFreeHandlerEv@plt
 765      E7800000 
 766              	.LVL48:
 132:src/Riscv.cpp ****                 case PCB::THREAD_MAKE_PCB:
 767              		.loc 1 132 21 is_stmt 1
 768 0320 6FF05FFD 		j	.L21
 769              	.L31:
 133:src/Riscv.cpp ****                     PCB::threadMakePCBHandler();
 770              		.loc 1 133 17
 134:src/Riscv.cpp ****                     break;
 771              		.loc 1 134 21
 134:src/Riscv.cpp ****                     break;
 772              		.loc 1 134 46 is_stmt 0
 773 0324 97000000 		call	_ZN3PCB20threadMakePCBHandlerEv@plt
 773      E7800000 
GAS LISTING /tmp/ccODRTXI.s 			page 25


 774              	.LVL49:
 135:src/Riscv.cpp ****                 case PCB::THREAD_CREATE:
 775              		.loc 1 135 21 is_stmt 1
 776 032c 6FF09FFC 		j	.L21
 777              	.L34:
 136:src/Riscv.cpp ****                     PCB::threadCreateHandler();
 778              		.loc 1 136 17
 137:src/Riscv.cpp ****                     break;
 779              		.loc 1 137 21
 137:src/Riscv.cpp ****                     break;
 780              		.loc 1 137 45 is_stmt 0
 781 0330 97000000 		call	_ZN3PCB19threadCreateHandlerEv@plt
 781      E7800000 
 782              	.LVL50:
 138:src/Riscv.cpp ****                 case PCB::THREAD_START:
 783              		.loc 1 138 21 is_stmt 1
 784 0338 6FF0DFFB 		j	.L21
 785              	.L30:
 139:src/Riscv.cpp ****                     PCB::threadStartHandler();
 786              		.loc 1 139 17
 140:src/Riscv.cpp ****                     break;
 787              		.loc 1 140 21
 140:src/Riscv.cpp ****                     break;
 788              		.loc 1 140 44 is_stmt 0
 789 033c 97000000 		call	_ZN3PCB18threadStartHandlerEv@plt
 789      E7800000 
 790              	.LVL51:
 141:src/Riscv.cpp ****                 case PCB::THREAD_DISPATCH:
 791              		.loc 1 141 21 is_stmt 1
 792 0344 6FF01FFB 		j	.L21
 793              	.L32:
 142:src/Riscv.cpp ****                     PCB::threadDispatchHandler();
 794              		.loc 1 142 17
 143:src/Riscv.cpp ****                     break;
 795              		.loc 1 143 21
 143:src/Riscv.cpp ****                     break;
 796              		.loc 1 143 47 is_stmt 0
 797 0348 97000000 		call	_ZN3PCB21threadDispatchHandlerEv@plt
 797      E7800000 
 798              	.LVL52:
 144:src/Riscv.cpp ****                 case PCB::THREAD_EXIT:
 799              		.loc 1 144 21 is_stmt 1
 800 0350 6FF05FFA 		j	.L21
 801              	.L33:
 145:src/Riscv.cpp ****                     PCB::threadExitHandler();
 802              		.loc 1 145 17
 146:src/Riscv.cpp ****                     break;
 803              		.loc 1 146 21
 146:src/Riscv.cpp ****                     break;
 804              		.loc 1 146 43 is_stmt 0
 805 0354 97000000 		call	_ZN3PCB17threadExitHandlerEv@plt
 805      E7800000 
 806              	.LVL53:
 147:src/Riscv.cpp ****                 case PCB::TIME_SLEEP:
 807              		.loc 1 147 21 is_stmt 1
 808 035c 6FF09FF9 		j	.L21
 809              	.L25:
GAS LISTING /tmp/ccODRTXI.s 			page 26


 148:src/Riscv.cpp ****                     PCB::threadSleepHandler();
 810              		.loc 1 148 17
 149:src/Riscv.cpp ****                     break;
 811              		.loc 1 149 21
 149:src/Riscv.cpp ****                     break;
 812              		.loc 1 149 44 is_stmt 0
 813 0360 97000000 		call	_ZN3PCB18threadSleepHandlerEv@plt
 813      E7800000 
 814              	.LVL54:
 150:src/Riscv.cpp ****                 case KSemaphore::SEM_OPEN:
 815              		.loc 1 150 21 is_stmt 1
 816 0368 6FF0DFF8 		j	.L21
 817              	.L29:
 151:src/Riscv.cpp ****                     KSemaphore::semOpenHandler();
 818              		.loc 1 151 17
 152:src/Riscv.cpp ****                     break;
 819              		.loc 1 152 21
 152:src/Riscv.cpp ****                     break;
 820              		.loc 1 152 47 is_stmt 0
 821 036c 97000000 		call	_ZN10KSemaphore14semOpenHandlerEv@plt
 821      E7800000 
 822              	.LVL55:
 153:src/Riscv.cpp ****                 case KSemaphore::SEM_WAIT:
 823              		.loc 1 153 21 is_stmt 1
 824 0374 6FF01FF8 		j	.L21
 825              	.L27:
 154:src/Riscv.cpp ****                     KSemaphore::semWaitHandler();
 826              		.loc 1 154 17
 155:src/Riscv.cpp ****                     break;
 827              		.loc 1 155 21
 155:src/Riscv.cpp ****                     break;
 828              		.loc 1 155 47 is_stmt 0
 829 0378 97000000 		call	_ZN10KSemaphore14semWaitHandlerEv@plt
 829      E7800000 
 830              	.LVL56:
 156:src/Riscv.cpp ****                 case KSemaphore::SEM_SIGNAL:
 831              		.loc 1 156 21 is_stmt 1
 832 0380 6FF05FF7 		j	.L21
 833              	.L26:
 157:src/Riscv.cpp ****                     KSemaphore::semSignalHandler();
 834              		.loc 1 157 17
 158:src/Riscv.cpp ****                     break;
 835              		.loc 1 158 21
 158:src/Riscv.cpp ****                     break;
 836              		.loc 1 158 49 is_stmt 0
 837 0384 97000000 		call	_ZN10KSemaphore16semSignalHandlerEv@plt
 837      E7800000 
 838              	.LVL57:
 159:src/Riscv.cpp ****                 case KSemaphore::SEM_CLOSE:
 839              		.loc 1 159 21 is_stmt 1
 840 038c 6FF09FF6 		j	.L21
 841              	.L28:
 160:src/Riscv.cpp ****                     KSemaphore::semCloseHandler();
 842              		.loc 1 160 17
 161:src/Riscv.cpp ****                     break;
 843              		.loc 1 161 21
 161:src/Riscv.cpp ****                     break;
GAS LISTING /tmp/ccODRTXI.s 			page 27


 844              		.loc 1 161 48 is_stmt 0
 845 0390 97000000 		call	_ZN10KSemaphore15semCloseHandlerEv@plt
 845      E7800000 
 846              	.LVL58:
 162:src/Riscv.cpp ****                 case KConsole::CONSOLE_GETC:
 847              		.loc 1 162 21 is_stmt 1
 848 0398 6FF0DFF5 		j	.L21
 849              	.L24:
 163:src/Riscv.cpp ****                     KConsole::getcHandler();
 850              		.loc 1 163 17
 164:src/Riscv.cpp ****                     break;
 851              		.loc 1 164 21
 164:src/Riscv.cpp ****                     break;
 852              		.loc 1 164 42 is_stmt 0
 853 039c 97000000 		call	_ZN8KConsole11getcHandlerEv@plt
 853      E7800000 
 854              	.LVL59:
 165:src/Riscv.cpp ****                 case KConsole::CONSOLE_PUTC:
 855              		.loc 1 165 21 is_stmt 1
 856 03a4 6FF01FF5 		j	.L21
 857              	.L22:
 166:src/Riscv.cpp ****                     KConsole::putcHandler();
 858              		.loc 1 166 17
 167:src/Riscv.cpp ****                     break;
 859              		.loc 1 167 21
 167:src/Riscv.cpp ****                     break;
 860              		.loc 1 167 42 is_stmt 0
 861 03a8 97000000 		call	_ZN8KConsole11putcHandlerEv@plt
 861      E7800000 
 862              	.LVL60:
 168:src/Riscv.cpp ****             }
 863              		.loc 1 168 21 is_stmt 1
 864 03b0 6FF05FF4 		j	.L21
 865              	.LBE75:
 866              	.LBE79:
 867              		.cfi_endproc
 868              	.LFE47:
 870              		.align	2
 871              		.globl	_ZN5Riscv14myTestsWrapperEPv
 873              	_ZN5Riscv14myTestsWrapperEPv:
 874              	.LFB50:
 209:src/Riscv.cpp **** 
 210:src/Riscv.cpp **** void Riscv::myTestsWrapper(void* p)
 211:src/Riscv.cpp **** {
 875              		.loc 1 211 1
 876              		.cfi_startproc
 877              	.LVL61:
 878 03b4 130101FF 		addi	sp,sp,-16
 879              		.cfi_def_cfa_offset 16
 880 03b8 23341100 		sd	ra,8(sp)
 881 03bc 23308100 		sd	s0,0(sp)
 882              		.cfi_offset 1, -8
 883              		.cfi_offset 8, -16
 884 03c0 13040101 		addi	s0,sp,16
 885              		.cfi_def_cfa 8, 0
 212:src/Riscv.cpp ****     myTests();
 886              		.loc 1 212 5
GAS LISTING /tmp/ccODRTXI.s 			page 28


 887              		.loc 1 212 12 is_stmt 0
 888 03c4 97000000 		call	_Z7myTestsv@plt
 888      E7800000 
 889              	.LVL62:
 213:src/Riscv.cpp **** }
 890              		.loc 1 213 1
 891 03cc 83308100 		ld	ra,8(sp)
 892              		.cfi_restore 1
 893 03d0 03340100 		ld	s0,0(sp)
 894              		.cfi_restore 8
 895              		.cfi_def_cfa 2, 16
 896 03d4 13010101 		addi	sp,sp,16
 897              		.cfi_def_cfa_offset 0
 898 03d8 67800000 		jr	ra
 899              		.cfi_endproc
 900              	.LFE50:
 902              		.align	2
 903              		.globl	_ZN5Riscv22disableTimerInterruptsEv
 905              	_ZN5Riscv22disableTimerInterruptsEv:
 906              	.LFB51:
 214:src/Riscv.cpp **** 
 215:src/Riscv.cpp **** void Riscv::disableTimerInterrupts()
 216:src/Riscv.cpp **** {
 907              		.loc 1 216 1 is_stmt 1
 908              		.cfi_startproc
 909 03dc 130101FF 		addi	sp,sp,-16
 910              		.cfi_def_cfa_offset 16
 911 03e0 23348100 		sd	s0,8(sp)
 912              		.cfi_offset 8, -8
 913 03e4 13040101 		addi	s0,sp,16
 914              		.cfi_def_cfa 8, 0
 217:src/Riscv.cpp ****     //uint64 x = 0x200;
 218:src/Riscv.cpp ****     //__asm__ volatile("csrs sie, %0"::"r"(x));
 219:src/Riscv.cpp ****     uint64 x = 0x2;
 915              		.loc 1 219 5
 916              	.LVL63:
 220:src/Riscv.cpp ****     __asm__ volatile("csrc sie, %0"::"r"(x));
 917              		.loc 1 220 5
 918              		.loc 1 220 45 is_stmt 0
 919 03e8 93072000 		li	a5,2
 920              	#APP
 921              	# 220 "src/Riscv.cpp" 1
 221              	}
 922              		csrc sie, a5
 923              	# 0 "" 2
 924              		.loc 1 221 1
 925              	#NO_APP
 926 03f0 03348100 		ld	s0,8(sp)
 927              		.cfi_restore 8
 928              		.cfi_def_cfa 2, 16
 929 03f4 13010101 		addi	sp,sp,16
 930              		.cfi_def_cfa_offset 0
 931 03f8 67800000 		jr	ra
 932              		.cfi_endproc
 933              	.LFE51:
 935              		.section	.rodata.str1.8,"aMS",@progbits,1
 936              		.align	3
GAS LISTING /tmp/ccODRTXI.s 			page 29


 937              	.LC0:
 938 0000 456E642E 		.string	"End...\n"
 938      2E2E0A00 
 939              		.text
 940              		.align	2
 941              		.globl	_ZN5Riscv10kernelMainEv
 943              	_ZN5Riscv10kernelMainEv:
 944              	.LFB48:
 180:src/Riscv.cpp ****     initSystem();
 945              		.loc 1 180 1 is_stmt 1
 946              		.cfi_startproc
 947              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 948              		.cfi_lsda 0x1b,.LLSDA48
 949 03fc 130101FE 		addi	sp,sp,-32
 950              		.cfi_def_cfa_offset 32
 951 0400 233C1100 		sd	ra,24(sp)
 952 0404 23388100 		sd	s0,16(sp)
 953 0408 23349100 		sd	s1,8(sp)
 954 040c 23302101 		sd	s2,0(sp)
 955              		.cfi_offset 1, -8
 956              		.cfi_offset 8, -16
 957              		.cfi_offset 9, -24
 958              		.cfi_offset 18, -32
 959 0410 13040102 		addi	s0,sp,32
 960              		.cfi_def_cfa 8, 0
 181:src/Riscv.cpp **** 
 961              		.loc 1 181 5
 962              	.LEHB0:
 181:src/Riscv.cpp **** 
 963              		.loc 1 181 15 is_stmt 0
 964 0414 97000000 		call	_ZN5Riscv10initSystemEv
 964      E7800000 
 965              	.LVL64:
 183:src/Riscv.cpp ****     enableInterrupts();
 966              		.loc 1 183 5 is_stmt 1
 183:src/Riscv.cpp ****     enableInterrupts();
 967              		.loc 1 183 27 is_stmt 0
 968 041c 97000000 		call	_ZN5Riscv22disableTimerInterruptsEv
 968      E7800000 
 969              	.LVL65:
 184:src/Riscv.cpp **** 
 970              		.loc 1 184 5 is_stmt 1
 184:src/Riscv.cpp **** 
 971              		.loc 1 184 21 is_stmt 0
 972 0424 97000000 		call	_ZN5Riscv16enableInterruptsEv
 972      E7800000 
 973              	.LVL66:
 187:src/Riscv.cpp ****     //PCB* userPCB = new PCB(&Riscv::myTestsWrapper, 0, kmalloc(DEFAULT_STACK_SIZE), DEFAULT_TIME_S
 974              		.loc 1 187 5 is_stmt 1
 187:src/Riscv.cpp ****     //PCB* userPCB = new PCB(&Riscv::myTestsWrapper, 0, kmalloc(DEFAULT_STACK_SIZE), DEFAULT_TIME_S
 975              		.loc 1 187 63 is_stmt 0
 976 042c 37150000 		li	a0,4096
 977 0430 97000000 		call	_Z7kmallocm@plt
 977      E7800000 
 978              	.LVL67:
 979 0438 13090500 		mv	s2,a0
 187:src/Riscv.cpp ****     //PCB* userPCB = new PCB(&Riscv::myTestsWrapper, 0, kmalloc(DEFAULT_STACK_SIZE), DEFAULT_TIME_S
GAS LISTING /tmp/ccODRTXI.s 			page 30


 980              		.loc 1 187 103
 981 043c 13058005 		li	a0,88
 982 0440 97000000 		call	_ZN3PCBnwEm@plt
 982      E7800000 
 983              	.LVL68:
 984              	.LEHE0:
 985 0448 93040500 		mv	s1,a0
 986 044c 13072000 		li	a4,2
 987 0450 93060900 		mv	a3,s2
 988 0454 13060000 		li	a2,0
 989 0458 97050000 		lla	a1,_ZN5Riscv15userMainWrapperEPv
 989      93850500 
 990              	.LEHB1:
 991 0460 97000000 		call	_ZN3PCBC1EPFvPvES0_S0_m@plt
 991      E7800000 
 992              	.LVL69:
 993              	.LEHE1:
 189:src/Riscv.cpp ****     while(!userPCB->isFinished())
 994              		.loc 1 189 5 is_stmt 1 discriminator 2
 189:src/Riscv.cpp ****     while(!userPCB->isFinished())
 995              		.loc 1 189 19 is_stmt 0 discriminator 2
 996 0468 13850400 		mv	a0,s1
 997              	.LEHB2:
 998 046c 97000000 		call	_ZN3PCB5startEv@plt
 998      E7800000 
 999              	.LVL70:
 1000              	.L47:
 190:src/Riscv.cpp ****     {
 1001              		.loc 1 190 5 is_stmt 1
 190:src/Riscv.cpp ****     {
 1002              		.loc 1 190 11
 190:src/Riscv.cpp ****     {
 1003              		.loc 1 190 31 is_stmt 0
 1004 0474 13850400 		mv	a0,s1
 1005 0478 97000000 		call	_ZN3PCB10isFinishedEv@plt
 1005      E7800000 
 1006              	.LVL71:
 190:src/Riscv.cpp ****     {
 1007              		.loc 1 190 11
 1008 0480 63180500 		bnez	a0,.L46
 192:src/Riscv.cpp ****     }
 1009              		.loc 1 192 9 is_stmt 1
 192:src/Riscv.cpp ****     }
 1010              		.loc 1 192 24 is_stmt 0
 1011 0484 97000000 		call	thread_dispatch@plt
 1011      E7800000 
 1012              	.LVL72:
 190:src/Riscv.cpp ****     {
 1013              		.loc 1 190 5
 1014 048c 6FF09FFE 		j	.L47
 1015              	.L46:
 195:src/Riscv.cpp ****     ::printString("End...\n");
 1016              		.loc 1 195 5 is_stmt 1
 195:src/Riscv.cpp ****     ::printString("End...\n");
 1017              		.loc 1 195 18 is_stmt 0
 1018 0490 93071000 		li	a5,1
 1019 0494 17070000 		sb	a5,.LANCHOR0+8,a4
GAS LISTING /tmp/ccODRTXI.s 			page 31


 1019      2300F700 
 196:src/Riscv.cpp ****     while(!PCB::consolePCB->isFinished() || KConsole::pendingGetc > 0)
 1020              		.loc 1 196 5 is_stmt 1
 196:src/Riscv.cpp ****     while(!PCB::consolePCB->isFinished() || KConsole::pendingGetc > 0)
 1021              		.loc 1 196 18 is_stmt 0
 1022 049c 17050000 		lla	a0,.LC0
 1022      13050500 
 1023 04a4 97000000 		call	_Z11printStringPKc@plt
 1023      E7800000 
 1024              	.LVL73:
 1025 04ac 6F00C000 		j	.L49
 1026              	.L48:
 199:src/Riscv.cpp ****     }
 1027              		.loc 1 199 9 is_stmt 1
 199:src/Riscv.cpp ****     }
 1028              		.loc 1 199 24 is_stmt 0
 1029 04b0 97000000 		call	thread_dispatch@plt
 1029      E7800000 
 1030              	.LVL74:
 1031              	.L49:
 197:src/Riscv.cpp ****     {
 1032              		.loc 1 197 5 is_stmt 1
 197:src/Riscv.cpp ****     {
 1033              		.loc 1 197 42
 197:src/Riscv.cpp ****     {
 1034              		.loc 1 197 39 is_stmt 0
 1035 04b8 97070000 		la	a5,_ZN3PCB10consolePCBE
 1035      83B70700 
 1036 04c0 03B50700 		ld	a0,0(a5)
 1037 04c4 97000000 		call	_ZN3PCB10isFinishedEv@plt
 1037      E7800000 
 1038              	.LVL75:
 1039              	.LEHE2:
 197:src/Riscv.cpp ****     {
 1040              		.loc 1 197 42
 1041 04cc E30205FE 		beqz	a0,.L48
 197:src/Riscv.cpp ****     {
 1042              		.loc 1 197 67 discriminator 2
 1043 04d0 97070000 		la	a5,_ZN8KConsole11pendingGetcE
 1043      83B70700 
 1044 04d8 83B70700 		ld	a5,0(a5)
 197:src/Riscv.cpp ****     {
 1045              		.loc 1 197 42 discriminator 2
 1046 04dc E39A07FC 		bnez	a5,.L48
 201:src/Riscv.cpp ****     endSystem();
 1047              		.loc 1 201 5 is_stmt 1
 201:src/Riscv.cpp ****     endSystem();
 1048              		.loc 1 201 22 is_stmt 0
 1049 04e0 97000000 		call	_ZN5Riscv17disableInterruptsEv
 1049      E7800000 
 1050              	.LVL76:
 202:src/Riscv.cpp **** }
 1051              		.loc 1 202 5 is_stmt 1
 202:src/Riscv.cpp **** }
 1052              		.loc 1 202 14 is_stmt 0
 1053 04e8 97000000 		call	_ZN5Riscv9endSystemEv
 1053      E7800000 
GAS LISTING /tmp/ccODRTXI.s 			page 32


 1054              	.LVL77:
 203:src/Riscv.cpp **** 
 1055              		.loc 1 203 1
 1056 04f0 83308101 		ld	ra,24(sp)
 1057              		.cfi_remember_state
 1058              		.cfi_restore 1
 1059 04f4 03340101 		ld	s0,16(sp)
 1060              		.cfi_restore 8
 1061              		.cfi_def_cfa 2, 32
 1062 04f8 83348100 		ld	s1,8(sp)
 1063              		.cfi_restore 9
 1064              	.LVL78:
 1065 04fc 03390100 		ld	s2,0(sp)
 1066              		.cfi_restore 18
 1067 0500 13010102 		addi	sp,sp,32
 1068              		.cfi_def_cfa_offset 0
 1069 0504 67800000 		jr	ra
 1070              	.L51:
 1071              		.cfi_restore_state
 1072 0508 13090500 		mv	s2,a0
 187:src/Riscv.cpp ****     //PCB* userPCB = new PCB(&Riscv::myTestsWrapper, 0, kmalloc(DEFAULT_STACK_SIZE), DEFAULT_TIME_S
 1073              		.loc 1 187 103
 1074 050c 13850400 		mv	a0,s1
 1075 0510 97000000 		call	_ZN3PCBdlEPv@plt
 1075      E7800000 
 1076              	.LVL79:
 1077 0518 13050900 		mv	a0,s2
 1078              	.LEHB3:
 1079 051c 97000000 		call	_Unwind_Resume@plt
 1079      E7800000 
 1080              	.LVL80:
 1081              	.LEHE3:
 1082              		.cfi_endproc
 1083              	.LFE48:
 1084              		.globl	__gxx_personality_v0
 1085              		.section	.gcc_except_table,"a",@progbits
 1086              	.LLSDA48:
 1087 0000 FF       		.byte	0xff
 1088 0001 FF       		.byte	0xff
 1089 0002 03       		.byte	0x3
 1090 0003 34       		.byte	0x34
 1091 0004 00000000 		.4byte	.LEHB0-.LFB48
 1092 0008 00000000 		.4byte	.LEHE0-.LEHB0
 1093 000c 00000000 		.4byte	0
 1094 0010 00       		.byte	0
 1095 0011 00000000 		.4byte	.LEHB1-.LFB48
 1096 0015 00000000 		.4byte	.LEHE1-.LEHB1
 1097 0019 00000000 		.4byte	.L51-.LFB48
 1098 001d 00       		.byte	0
 1099 001e 00000000 		.4byte	.LEHB2-.LFB48
 1100 0022 00000000 		.4byte	.LEHE2-.LEHB2
 1101 0026 00000000 		.4byte	0
 1102 002a 00       		.byte	0
 1103 002b 00000000 		.4byte	.LEHB3-.LFB48
 1104 002f 00000000 		.4byte	.LEHE3-.LEHB3
 1105 0033 00000000 		.4byte	0
 1106 0037 00       		.byte	0
GAS LISTING /tmp/ccODRTXI.s 			page 33


 1107              		.text
 1109              		.align	2
 1110              		.globl	_ZN5Riscv9idleRiscvEPv
 1112              	_ZN5Riscv9idleRiscvEPv:
 1113              	.LFB52:
 222:src/Riscv.cpp **** 
 223:src/Riscv.cpp **** void Riscv::idleRiscv(void* p)
 224:src/Riscv.cpp **** {
 1114              		.loc 1 224 1 is_stmt 1
 1115              		.cfi_startproc
 1116              	.LVL81:
 1117 0524 130101FF 		addi	sp,sp,-16
 1118              		.cfi_def_cfa_offset 16
 1119 0528 23348100 		sd	s0,8(sp)
 1120              		.cfi_offset 8, -8
 1121 052c 13040101 		addi	s0,sp,16
 1122              		.cfi_def_cfa 8, 0
 1123              	.L55:
 225:src/Riscv.cpp ****     while(true)
 1124              		.loc 1 225 5 discriminator 1
 1125              		.loc 1 225 5 discriminator 1
 1126 0530 6F000000 		j	.L55
 1127              		.cfi_endproc
 1128              	.LFE52:
 1130              		.align	2
 1131              		.globl	_ZN5Riscv13w_a0_sscratchEv
 1133              	_ZN5Riscv13w_a0_sscratchEv:
 1134              	.LFB53:
 226:src/Riscv.cpp ****     {
 227:src/Riscv.cpp **** 
 228:src/Riscv.cpp ****     }
 229:src/Riscv.cpp **** }
 230:src/Riscv.cpp **** 
 231:src/Riscv.cpp **** void Riscv::w_a0_sscratch()
 232:src/Riscv.cpp **** {
 1135              		.loc 1 232 1
 1136              		.cfi_startproc
 1137 0534 130101FF 		addi	sp,sp,-16
 1138              		.cfi_def_cfa_offset 16
 1139 0538 23348100 		sd	s0,8(sp)
 1140              		.cfi_offset 8, -8
 1141 053c 13040101 		addi	s0,sp,16
 1142              		.cfi_def_cfa 8, 0
 233:src/Riscv.cpp ****     uint64 a1Temp;
 1143              		.loc 1 233 5
 234:src/Riscv.cpp ****     __asm__ volatile("mv %0, a1":"=r"(a1Temp));
 1144              		.loc 1 234 5
 1145              		.loc 1 234 47 is_stmt 0
 1146              	#APP
 1147              	# 234 "src/Riscv.cpp" 1
 235              	    __asm__ volatile("mv a1, %0"::"r"(PCB::running->sscratch));
 1148              		mv a5, a1
 1149              	# 0 "" 2
 1150              	.LVL82:
 1151              		.loc 1 235 5 is_stmt 1
 1152              		.loc 1 235 53 is_stmt 0
 1153              	#NO_APP
GAS LISTING /tmp/ccODRTXI.s 			page 34


 1154 0544 17070000 		la	a4,_ZN3PCB7runningE
 1154      03370700 
 1155 054c 03370700 		ld	a4,0(a4)
 1156 0550 03370701 		ld	a4,16(a4)
 1157              		.loc 1 235 63
 1158              	#APP
 1159              	# 235 "src/Riscv.cpp" 1
 236              	    //__asm__ volatile("csrr a1, sscratch");
 237:src/Riscv.cpp ****     __asm__ volatile("sd a0, 80(a1)");
 1160              		mv a1, a4
 1161              	# 0 "" 2
 1162              		.loc 1 237 5 is_stmt 1
 1163              		.loc 1 237 38 is_stmt 0
 1164              	# 237 "src/Riscv.cpp" 1
 238              	    __asm__ volatile("mv a1,%0"::"r"(a1Temp));
 1165              		sd a0, 80(a1)
 1166              	# 0 "" 2
 1167              		.loc 1 238 5 is_stmt 1
 1168              		.loc 1 238 46 is_stmt 0
 1169              	# 238 "src/Riscv.cpp" 1
 239              	}
 1170              		mv a1,a5
 1171              	# 0 "" 2
 1172              		.loc 1 239 1
 1173              	#NO_APP
 1174 0560 03348100 		ld	s0,8(sp)
 1175              		.cfi_restore 8
 1176              		.cfi_def_cfa 2, 16
 1177 0564 13010101 		addi	sp,sp,16
 1178              		.cfi_def_cfa_offset 0
 1179 0568 67800000 		jr	ra
 1180              		.cfi_endproc
 1181              	.LFE53:
 1183              		.align	2
 1184              		.globl	_ZN5Riscv14changePrivModeEv
 1186              	_ZN5Riscv14changePrivModeEv:
 1187              	.LFB54:
 240:src/Riscv.cpp **** 
 241:src/Riscv.cpp **** void Riscv::changePrivMode()
 242:src/Riscv.cpp **** {
 1188              		.loc 1 242 1 is_stmt 1
 1189              		.cfi_startproc
 1190 056c 130101FF 		addi	sp,sp,-16
 1191              		.cfi_def_cfa_offset 16
 1192 0570 23348100 		sd	s0,8(sp)
 1193              		.cfi_offset 8, -8
 1194 0574 13040101 		addi	s0,sp,16
 1195              		.cfi_def_cfa 8, 0
 243:src/Riscv.cpp ****     //if(PCB::running->systemThread)
 244:src/Riscv.cpp ****     //    Riscv::ms_sstatus(Riscv::SSTATUS_SPP);
 245:src/Riscv.cpp ****     //else
 246:src/Riscv.cpp ****     //    Riscv::mc_sstatus(Riscv::SSTATUS_SPP);
 247:src/Riscv.cpp **** }
 1196              		.loc 1 247 1 is_stmt 0
 1197 0578 03348100 		ld	s0,8(sp)
 1198              		.cfi_restore 8
 1199              		.cfi_def_cfa 2, 16
GAS LISTING /tmp/ccODRTXI.s 			page 35


 1200 057c 13010101 		addi	sp,sp,16
 1201              		.cfi_def_cfa_offset 0
 1202 0580 67800000 		jr	ra
 1203              		.cfi_endproc
 1204              	.LFE54:
 1206              		.globl	_ZN5Riscv12finishSystemE
 1207              		.globl	_ZN5Riscv9totalTimeE
 1208              		.bss
 1209              		.align	3
 1210              		.set	.LANCHOR0,. + 0
 1213              	_ZN5Riscv9totalTimeE:
 1214 0000 00000000 		.zero	8
 1214      00000000 
 1217              	_ZN5Riscv12finishSystemE:
 1218 0008 00       		.zero	1
 1219              		.text
 1220              	.Letext0:
 1221              		.file 4 "src/../h/../lib/hw.h"
 1222              		.file 5 "src/../h/MemoryAllocator.hpp"
 1223              		.file 6 "src/../h/KSemaphore.hpp"
 1224              		.file 7 "src/../h/SleepPCBList.hpp"
 1225              		.file 8 "src/../h/KConsole.hpp"
 1226              		.file 9 "src/../h/Tests.hpp"
 1227              		.file 10 "src/../test/userMain.hpp"
 1228              		.file 11 "src/../h/../test/../h/syscall_c.h"
 1229              		.file 12 "src/../h/../test/printing.hpp"
 5838              		.align	3
 5841              	DW.ref.__gxx_personality_v0:
 5842 0000 00000000 		.dword	__gxx_personality_v0
 5842      00000000 
 5843              		.ident	"GCC: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0"
 5844              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/ccODRTXI.s 			page 36


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Riscv.cpp
     /tmp/ccODRTXI.s:9      .text:0000000000000000 _ZN5Riscv15userMainWrapperEPv
     /tmp/ccODRTXI.s:13     .text:0000000000000000 .L0 
     /tmp/ccODRTXI.s:14     .text:0000000000000000 .L0 
     /tmp/ccODRTXI.s:15     .text:0000000000000004 .L0 
     /tmp/ccODRTXI.s:18     .text:000000000000000c .L0 
     /tmp/ccODRTXI.s:19     .text:000000000000000c .L0 
     /tmp/ccODRTXI.s:21     .text:0000000000000010 .L0 
     /tmp/ccODRTXI.s:23     .text:0000000000000010 .L0 
     /tmp/ccODRTXI.s:24     .text:0000000000000010 .L0 
     /tmp/ccODRTXI.s:27     .text:0000000000000018 .L0 
     /tmp/ccODRTXI.s:28     .text:000000000000001c .L0 
     /tmp/ccODRTXI.s:30     .text:0000000000000020 .L0 
     /tmp/ccODRTXI.s:31     .text:0000000000000020 .L0 
     /tmp/ccODRTXI.s:33     .text:0000000000000024 .L0 
     /tmp/ccODRTXI.s:35     .text:0000000000000028 .L0 
     /tmp/ccODRTXI.s:41     .text:0000000000000028 _ZN5Riscv10initSystemEv
     /tmp/ccODRTXI.s:44     .text:0000000000000028 .L0 
     /tmp/ccODRTXI.s:45     .text:0000000000000028 .L0 
     /tmp/ccODRTXI.s:46     .text:000000000000002c .L0 
     /tmp/ccODRTXI.s:49     .text:0000000000000034 .L0 
     /tmp/ccODRTXI.s:50     .text:0000000000000034 .L0 
     /tmp/ccODRTXI.s:52     .text:0000000000000038 .L0 
     /tmp/ccODRTXI.s:54     .text:0000000000000038 .L0 
     /tmp/ccODRTXI.s:55     .text:0000000000000038 .L0 
     /tmp/ccODRTXI.s:61     .text:0000000000000040 .L0 
  src/../h/Riscv.hpp:136    .text:0000000000000040 .L0 
     /tmp/ccODRTXI.s:71     .text:0000000000000044 .L0 
     /tmp/ccODRTXI.s:72     .text:0000000000000044 .L0 
     /tmp/ccODRTXI.s:75     .text:000000000000004c .L0 
     /tmp/ccODRTXI.s:76     .text:000000000000004c .L0 
     /tmp/ccODRTXI.s:79     .text:0000000000000054 .L0 
     /tmp/ccODRTXI.s:80     .text:0000000000000058 .L0 
     /tmp/ccODRTXI.s:82     .text:000000000000005c .L0 
     /tmp/ccODRTXI.s:83     .text:000000000000005c .L0 
     /tmp/ccODRTXI.s:85     .text:0000000000000060 .L0 
     /tmp/ccODRTXI.s:87     .text:0000000000000064 .L0 
     /tmp/ccODRTXI.s:93     .text:0000000000000064 _ZN5Riscv16enableInterruptsEv
     /tmp/ccODRTXI.s:96     .text:0000000000000064 .L0 
     /tmp/ccODRTXI.s:97     .text:0000000000000064 .L0 
     /tmp/ccODRTXI.s:98     .text:0000000000000068 .L0 
     /tmp/ccODRTXI.s:100    .text:000000000000006c .L0 
     /tmp/ccODRTXI.s:102    .text:0000000000000070 .L0 
     /tmp/ccODRTXI.s:107    .text:0000000000000070 .L0 
     /tmp/ccODRTXI.s:108    .text:0000000000000070 .L0 
     /tmp/ccODRTXI.s:109    .text:0000000000000070 .L0 
     /tmp/ccODRTXI.s:119    .text:0000000000000078 .L0 
     /tmp/ccODRTXI.s:120    .text:000000000000007c .L0 
     /tmp/ccODRTXI.s:121    .text:000000000000007c .L0 
     /tmp/ccODRTXI.s:123    .text:0000000000000080 .L0 
     /tmp/ccODRTXI.s:125    .text:0000000000000084 .L0 
     /tmp/ccODRTXI.s:131    .text:0000000000000084 _ZN5Riscv17disableInterruptsEv
     /tmp/ccODRTXI.s:134    .text:0000000000000084 .L0 
     /tmp/ccODRTXI.s:135    .text:0000000000000084 .L0 
     /tmp/ccODRTXI.s:136    .text:0000000000000088 .L0 
     /tmp/ccODRTXI.s:138    .text:000000000000008c .L0 
GAS LISTING /tmp/ccODRTXI.s 			page 37


     /tmp/ccODRTXI.s:140    .text:0000000000000090 .L0 
     /tmp/ccODRTXI.s:145    .text:0000000000000090 .L0 
     /tmp/ccODRTXI.s:146    .text:0000000000000090 .L0 
     /tmp/ccODRTXI.s:147    .text:0000000000000090 .L0 
     /tmp/ccODRTXI.s:157    .text:0000000000000098 .L0 
     /tmp/ccODRTXI.s:158    .text:000000000000009c .L0 
     /tmp/ccODRTXI.s:159    .text:000000000000009c .L0 
     /tmp/ccODRTXI.s:161    .text:00000000000000a0 .L0 
     /tmp/ccODRTXI.s:163    .text:00000000000000a4 .L0 
     /tmp/ccODRTXI.s:169    .text:00000000000000a4 _ZN5Riscv9endSystemEv
     /tmp/ccODRTXI.s:172    .text:00000000000000a4 .L0 
     /tmp/ccODRTXI.s:173    .text:00000000000000a4 .L0 
     /tmp/ccODRTXI.s:174    .text:00000000000000a8 .L0 
     /tmp/ccODRTXI.s:177    .text:00000000000000b0 .L0 
     /tmp/ccODRTXI.s:178    .text:00000000000000b0 .L0 
     /tmp/ccODRTXI.s:180    .text:00000000000000b4 .L0 
     /tmp/ccODRTXI.s:182    .text:00000000000000b4 .L0 
     /tmp/ccODRTXI.s:183    .text:00000000000000b4 .L0 
     /tmp/ccODRTXI.s:186    .text:00000000000000bc .L0 
     /tmp/ccODRTXI.s:187    .text:00000000000000c0 .L0 
     /tmp/ccODRTXI.s:189    .text:00000000000000c4 .L0 
     /tmp/ccODRTXI.s:190    .text:00000000000000c4 .L0 
     /tmp/ccODRTXI.s:192    .text:00000000000000c8 .L0 
     /tmp/ccODRTXI.s:194    .text:00000000000000cc .L0 
     /tmp/ccODRTXI.s:200    .text:00000000000000cc _ZN5Riscv10popSppSpieEv
     /tmp/ccODRTXI.s:203    .text:00000000000000cc .L0 
     /tmp/ccODRTXI.s:204    .text:00000000000000cc .L0 
     /tmp/ccODRTXI.s:205    .text:00000000000000d0 .L0 
     /tmp/ccODRTXI.s:207    .text:00000000000000d4 .L0 
     /tmp/ccODRTXI.s:209    .text:00000000000000d8 .L0 
     /tmp/ccODRTXI.s:211    .text:00000000000000d8 .L0 
       src/Riscv.cpp:41     .text:00000000000000d8 .L0 
     /tmp/ccODRTXI.s:217    .text:00000000000000dc .L0 
       src/Riscv.cpp:42     .text:00000000000000dc .L0 
     /tmp/ccODRTXI.s:223    .text:00000000000000e0 .L0 
     /tmp/ccODRTXI.s:224    .text:00000000000000e4 .L0 
     /tmp/ccODRTXI.s:225    .text:00000000000000e4 .L0 
     /tmp/ccODRTXI.s:227    .text:00000000000000e8 .L0 
     /tmp/ccODRTXI.s:229    .text:00000000000000ec .L0 
     /tmp/ccODRTXI.s:235    .text:00000000000000ec _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccODRTXI.s:238    .text:00000000000000ec .L0 
     /tmp/ccODRTXI.s:239    .text:00000000000000ec .L0 
     /tmp/ccODRTXI.s:240    .text:00000000000000f0 .L0 
     /tmp/ccODRTXI.s:244    .text:00000000000000fc .L0 
     /tmp/ccODRTXI.s:245    .text:00000000000000fc .L0 
     /tmp/ccODRTXI.s:246    .text:00000000000000fc .L0 
     /tmp/ccODRTXI.s:248    .text:0000000000000100 .L0 
     /tmp/ccODRTXI.s:250    .text:0000000000000100 .L0 
       src/Riscv.cpp:47     .text:0000000000000100 .L0 
     /tmp/ccODRTXI.s:259    .text:0000000000000110 .L0 
     /tmp/ccODRTXI.s:260    .text:0000000000000110 .L0 
       src/Riscv.cpp:48     .text:000000000000011c .L0 
     /tmp/ccODRTXI.s:272    .text:0000000000000124 .L0 
     /tmp/ccODRTXI.s:273    .text:0000000000000124 .L0 
     /tmp/ccODRTXI.s:274    .text:0000000000000124 .L0 
  src/../h/Riscv.hpp:111    .text:0000000000000124 .L0 
     /tmp/ccODRTXI.s:282    .text:000000000000012c .L0 
GAS LISTING /tmp/ccODRTXI.s 			page 38


     /tmp/ccODRTXI.s:283    .text:000000000000012c .L0 
     /tmp/ccODRTXI.s:289    .text:0000000000000130 .L0 
     /tmp/ccODRTXI.s:303    .text:000000000000015c .L0 
     /tmp/ccODRTXI.s:304    .text:000000000000015c .L0 
     /tmp/ccODRTXI.s:307    .text:000000000000015c .L0 
     /tmp/ccODRTXI.s:308    .text:000000000000015c .L0 
     /tmp/ccODRTXI.s:309    .text:000000000000015c .L0 
       src/Riscv.cpp:120    .text:000000000000015c .L0 
     /tmp/ccODRTXI.s:319    .text:0000000000000160 .L0 
     /tmp/ccODRTXI.s:320    .text:0000000000000160 .L0 
     /tmp/ccODRTXI.s:321    .text:0000000000000160 .L0 
  src/../h/Riscv.hpp:121    .text:0000000000000160 .L0 
     /tmp/ccODRTXI.s:329    .text:0000000000000168 .L0 
     /tmp/ccODRTXI.s:330    .text:0000000000000168 .L0 
     /tmp/ccODRTXI.s:334    .text:000000000000016c .L0 
     /tmp/ccODRTXI.s:336    .text:0000000000000170 .L0 
     /tmp/ccODRTXI.s:340    .text:0000000000000174 .L0 
     /tmp/ccODRTXI.s:341    .text:0000000000000174 .L0 
     /tmp/ccODRTXI.s:342    .text:0000000000000174 .L0 
  src/../h/Riscv.hpp:190    .text:0000000000000174 .L0 
     /tmp/ccODRTXI.s:350    .text:000000000000017c .L0 
     /tmp/ccODRTXI.s:351    .text:000000000000017c .L0 
     /tmp/ccODRTXI.s:355    .text:0000000000000180 .L0 
     /tmp/ccODRTXI.s:357    .text:0000000000000184 .L0 
     /tmp/ccODRTXI.s:442    .text:00000000000001a8 .L0 
     /tmp/ccODRTXI.s:448    .text:00000000000001b8 .L0 
     /tmp/ccODRTXI.s:451    .text:00000000000001b8 .L0 
     /tmp/ccODRTXI.s:452    .text:00000000000001b8 .L0 
     /tmp/ccODRTXI.s:453    .text:00000000000001b8 .L0 
     /tmp/ccODRTXI.s:458    .text:00000000000001c4 .L0 
       src/Riscv.cpp:80     .text:00000000000001c4 .L0 
     /tmp/ccODRTXI.s:464    .text:00000000000001c8 .L0 
       src/Riscv.cpp:81     .text:00000000000001c8 .L0 
     /tmp/ccODRTXI.s:469    .text:00000000000001cc .L0 
     /tmp/ccODRTXI.s:470    .text:00000000000001cc .L0 
       src/Riscv.cpp:83     .text:00000000000001cc .L0 
     /tmp/ccODRTXI.s:478    .text:00000000000001d0 .L0 
     /tmp/ccODRTXI.s:479    .text:00000000000001d0 .L0 
     /tmp/ccODRTXI.s:482    .text:00000000000001d4 .L0 
     /tmp/ccODRTXI.s:485    .text:00000000000001d8 .L0 
     /tmp/ccODRTXI.s:486    .text:00000000000001d8 .L0 
     /tmp/ccODRTXI.s:490    .text:00000000000001e4 .L0 
       src/Riscv.cpp:87     .text:00000000000001e4 .L0 
     /tmp/ccODRTXI.s:496    .text:00000000000001e8 .L0 
       src/Riscv.cpp:88     .text:00000000000001e8 .L0 
     /tmp/ccODRTXI.s:501    .text:00000000000001ec .L0 
     /tmp/ccODRTXI.s:502    .text:00000000000001ec .L0 
       src/Riscv.cpp:90     .text:00000000000001ec .L0 
     /tmp/ccODRTXI.s:510    .text:00000000000001f4 .L0 
     /tmp/ccODRTXI.s:511    .text:00000000000001f4 .L0 
     /tmp/ccODRTXI.s:515    .text:0000000000000200 .L0 
     /tmp/ccODRTXI.s:521    .text:0000000000000204 .L0 
     /tmp/ccODRTXI.s:522    .text:0000000000000204 .L0 
     /tmp/ccODRTXI.s:527    .text:0000000000000214 .L0 
     /tmp/ccODRTXI.s:533    .text:0000000000000218 .L0 
     /tmp/ccODRTXI.s:536    .text:0000000000000218 .L0 
     /tmp/ccODRTXI.s:539    .text:0000000000000218 .L0 
GAS LISTING /tmp/ccODRTXI.s 			page 39


     /tmp/ccODRTXI.s:540    .text:0000000000000218 .L0 
     /tmp/ccODRTXI.s:541    .text:0000000000000218 .L0 
  src/../h/Riscv.hpp:121    .text:0000000000000218 .L0 
     /tmp/ccODRTXI.s:550    .text:0000000000000220 .L0 
     /tmp/ccODRTXI.s:551    .text:0000000000000220 .L0 
     /tmp/ccODRTXI.s:555    .text:0000000000000224 .L0 
     /tmp/ccODRTXI.s:559    .text:0000000000000228 .L0 
     /tmp/ccODRTXI.s:560    .text:0000000000000228 .L0 
     /tmp/ccODRTXI.s:561    .text:0000000000000228 .L0 
  src/../h/Riscv.hpp:190    .text:0000000000000228 .L0 
     /tmp/ccODRTXI.s:569    .text:0000000000000230 .L0 
     /tmp/ccODRTXI.s:570    .text:0000000000000230 .L0 
     /tmp/ccODRTXI.s:574    .text:0000000000000234 .L0 
     /tmp/ccODRTXI.s:579    .text:0000000000000238 .L0 
     /tmp/ccODRTXI.s:580    .text:0000000000000238 .L0 
     /tmp/ccODRTXI.s:581    .text:0000000000000238 .L0 
     /tmp/ccODRTXI.s:591    .text:0000000000000240 .L0 
     /tmp/ccODRTXI.s:592    .text:0000000000000240 .L0 
     /tmp/ccODRTXI.s:597    .text:0000000000000254 .L0 
     /tmp/ccODRTXI.s:598    .text:0000000000000254 .L0 
     /tmp/ccODRTXI.s:604    .text:0000000000000268 .L0 
     /tmp/ccODRTXI.s:605    .text:0000000000000268 .L0 
     /tmp/ccODRTXI.s:610    .text:000000000000027c .L0 
     /tmp/ccODRTXI.s:611    .text:000000000000027c .L0 
     /tmp/ccODRTXI.s:614    .text:0000000000000284 .L0 
     /tmp/ccODRTXI.s:615    .text:0000000000000284 .L0 
     /tmp/ccODRTXI.s:622    .text:0000000000000290 .L0 
     /tmp/ccODRTXI.s:623    .text:0000000000000290 .L0 
     /tmp/ccODRTXI.s:628    .text:0000000000000294 .L0 
     /tmp/ccODRTXI.s:630    .text:0000000000000298 .L0 
     /tmp/ccODRTXI.s:633    .text:000000000000029c .L0 
     /tmp/ccODRTXI.s:634    .text:000000000000029c .L0 
     /tmp/ccODRTXI.s:639    .text:00000000000002a0 .L0 
  src/../h/Riscv.hpp:195    .text:00000000000002a0 .L0 
     /tmp/ccODRTXI.s:649    .text:00000000000002a4 .L0 
     /tmp/ccODRTXI.s:650    .text:00000000000002a4 .L0 
     /tmp/ccODRTXI.s:655    .text:00000000000002a8 .L0 
  src/../h/Riscv.hpp:126    .text:00000000000002a8 .L0 
     /tmp/ccODRTXI.s:662    .text:00000000000002ac .L0 
     /tmp/ccODRTXI.s:668    .text:00000000000002b0 .L0 
     /tmp/ccODRTXI.s:669    .text:00000000000002b0 .L0 
     /tmp/ccODRTXI.s:671    .text:00000000000002b4 .L0 
     /tmp/ccODRTXI.s:672    .text:00000000000002b4 .L0 
     /tmp/ccODRTXI.s:682    .text:00000000000002c0 .L0 
     /tmp/ccODRTXI.s:683    .text:00000000000002c0 .L0 
     /tmp/ccODRTXI.s:687    .text:00000000000002d0 .L0 
     /tmp/ccODRTXI.s:688    .text:00000000000002d0 .L0 
     /tmp/ccODRTXI.s:693    .text:00000000000002dc .L0 
     /tmp/ccODRTXI.s:694    .text:00000000000002dc .L0 
     /tmp/ccODRTXI.s:705    .text:00000000000002ec .L0 
     /tmp/ccODRTXI.s:706    .text:00000000000002ec .L0 
     /tmp/ccODRTXI.s:707    .text:00000000000002ec .L0 
     /tmp/ccODRTXI.s:711    .text:00000000000002f4 .L0 
     /tmp/ccODRTXI.s:712    .text:00000000000002f4 .L0 
     /tmp/ccODRTXI.s:713    .text:00000000000002f4 .L0 
     /tmp/ccODRTXI.s:718    .text:00000000000002f8 .L0 
  src/../h/Riscv.hpp:195    .text:00000000000002f8 .L0 
GAS LISTING /tmp/ccODRTXI.s 			page 40


     /tmp/ccODRTXI.s:728    .text:00000000000002fc .L0 
     /tmp/ccODRTXI.s:729    .text:00000000000002fc .L0 
     /tmp/ccODRTXI.s:734    .text:0000000000000300 .L0 
  src/../h/Riscv.hpp:126    .text:0000000000000300 .L0 
     /tmp/ccODRTXI.s:747    .text:0000000000000304 .L0 
     /tmp/ccODRTXI.s:748    .text:0000000000000308 .L0 
     /tmp/ccODRTXI.s:749    .text:0000000000000308 .L0 
     /tmp/ccODRTXI.s:751    .text:000000000000030c .L0 
     /tmp/ccODRTXI.s:752    .text:000000000000030c .L0 
     /tmp/ccODRTXI.s:754    .text:0000000000000310 .L0 
     /tmp/ccODRTXI.s:756    .text:0000000000000314 .L0 
     /tmp/ccODRTXI.s:759    .text:0000000000000318 .L0 
     /tmp/ccODRTXI.s:763    .text:0000000000000318 .L0 
     /tmp/ccODRTXI.s:764    .text:0000000000000318 .L0 
     /tmp/ccODRTXI.s:765    .text:0000000000000318 .L0 
     /tmp/ccODRTXI.s:768    .text:0000000000000320 .L0 
     /tmp/ccODRTXI.s:771    .text:0000000000000324 .L0 
     /tmp/ccODRTXI.s:772    .text:0000000000000324 .L0 
     /tmp/ccODRTXI.s:773    .text:0000000000000324 .L0 
     /tmp/ccODRTXI.s:776    .text:000000000000032c .L0 
     /tmp/ccODRTXI.s:779    .text:0000000000000330 .L0 
     /tmp/ccODRTXI.s:780    .text:0000000000000330 .L0 
     /tmp/ccODRTXI.s:781    .text:0000000000000330 .L0 
     /tmp/ccODRTXI.s:784    .text:0000000000000338 .L0 
     /tmp/ccODRTXI.s:787    .text:000000000000033c .L0 
     /tmp/ccODRTXI.s:788    .text:000000000000033c .L0 
     /tmp/ccODRTXI.s:789    .text:000000000000033c .L0 
     /tmp/ccODRTXI.s:792    .text:0000000000000344 .L0 
     /tmp/ccODRTXI.s:795    .text:0000000000000348 .L0 
     /tmp/ccODRTXI.s:796    .text:0000000000000348 .L0 
     /tmp/ccODRTXI.s:797    .text:0000000000000348 .L0 
     /tmp/ccODRTXI.s:800    .text:0000000000000350 .L0 
     /tmp/ccODRTXI.s:803    .text:0000000000000354 .L0 
     /tmp/ccODRTXI.s:804    .text:0000000000000354 .L0 
     /tmp/ccODRTXI.s:805    .text:0000000000000354 .L0 
     /tmp/ccODRTXI.s:808    .text:000000000000035c .L0 
     /tmp/ccODRTXI.s:811    .text:0000000000000360 .L0 
     /tmp/ccODRTXI.s:812    .text:0000000000000360 .L0 
     /tmp/ccODRTXI.s:813    .text:0000000000000360 .L0 
     /tmp/ccODRTXI.s:816    .text:0000000000000368 .L0 
     /tmp/ccODRTXI.s:819    .text:000000000000036c .L0 
     /tmp/ccODRTXI.s:820    .text:000000000000036c .L0 
     /tmp/ccODRTXI.s:821    .text:000000000000036c .L0 
     /tmp/ccODRTXI.s:824    .text:0000000000000374 .L0 
     /tmp/ccODRTXI.s:827    .text:0000000000000378 .L0 
     /tmp/ccODRTXI.s:828    .text:0000000000000378 .L0 
     /tmp/ccODRTXI.s:829    .text:0000000000000378 .L0 
     /tmp/ccODRTXI.s:832    .text:0000000000000380 .L0 
     /tmp/ccODRTXI.s:835    .text:0000000000000384 .L0 
     /tmp/ccODRTXI.s:836    .text:0000000000000384 .L0 
     /tmp/ccODRTXI.s:837    .text:0000000000000384 .L0 
     /tmp/ccODRTXI.s:840    .text:000000000000038c .L0 
     /tmp/ccODRTXI.s:843    .text:0000000000000390 .L0 
     /tmp/ccODRTXI.s:844    .text:0000000000000390 .L0 
     /tmp/ccODRTXI.s:845    .text:0000000000000390 .L0 
     /tmp/ccODRTXI.s:848    .text:0000000000000398 .L0 
     /tmp/ccODRTXI.s:851    .text:000000000000039c .L0 
GAS LISTING /tmp/ccODRTXI.s 			page 41


     /tmp/ccODRTXI.s:852    .text:000000000000039c .L0 
     /tmp/ccODRTXI.s:853    .text:000000000000039c .L0 
     /tmp/ccODRTXI.s:856    .text:00000000000003a4 .L0 
     /tmp/ccODRTXI.s:859    .text:00000000000003a8 .L0 
     /tmp/ccODRTXI.s:860    .text:00000000000003a8 .L0 
     /tmp/ccODRTXI.s:861    .text:00000000000003a8 .L0 
     /tmp/ccODRTXI.s:864    .text:00000000000003b0 .L0 
     /tmp/ccODRTXI.s:867    .text:00000000000003b4 .L0 
     /tmp/ccODRTXI.s:873    .text:00000000000003b4 _ZN5Riscv14myTestsWrapperEPv
     /tmp/ccODRTXI.s:876    .text:00000000000003b4 .L0 
     /tmp/ccODRTXI.s:878    .text:00000000000003b4 .L0 
     /tmp/ccODRTXI.s:879    .text:00000000000003b8 .L0 
     /tmp/ccODRTXI.s:882    .text:00000000000003c0 .L0 
     /tmp/ccODRTXI.s:883    .text:00000000000003c0 .L0 
     /tmp/ccODRTXI.s:885    .text:00000000000003c4 .L0 
     /tmp/ccODRTXI.s:887    .text:00000000000003c4 .L0 
     /tmp/ccODRTXI.s:888    .text:00000000000003c4 .L0 
     /tmp/ccODRTXI.s:891    .text:00000000000003cc .L0 
     /tmp/ccODRTXI.s:892    .text:00000000000003d0 .L0 
     /tmp/ccODRTXI.s:894    .text:00000000000003d4 .L0 
     /tmp/ccODRTXI.s:895    .text:00000000000003d4 .L0 
     /tmp/ccODRTXI.s:897    .text:00000000000003d8 .L0 
     /tmp/ccODRTXI.s:899    .text:00000000000003dc .L0 
     /tmp/ccODRTXI.s:905    .text:00000000000003dc _ZN5Riscv22disableTimerInterruptsEv
     /tmp/ccODRTXI.s:908    .text:00000000000003dc .L0 
     /tmp/ccODRTXI.s:909    .text:00000000000003dc .L0 
     /tmp/ccODRTXI.s:910    .text:00000000000003e0 .L0 
     /tmp/ccODRTXI.s:912    .text:00000000000003e4 .L0 
     /tmp/ccODRTXI.s:914    .text:00000000000003e8 .L0 
     /tmp/ccODRTXI.s:917    .text:00000000000003e8 .L0 
     /tmp/ccODRTXI.s:918    .text:00000000000003e8 .L0 
     /tmp/ccODRTXI.s:919    .text:00000000000003e8 .L0 
     /tmp/ccODRTXI.s:926    .text:00000000000003f0 .L0 
     /tmp/ccODRTXI.s:927    .text:00000000000003f4 .L0 
     /tmp/ccODRTXI.s:928    .text:00000000000003f4 .L0 
     /tmp/ccODRTXI.s:930    .text:00000000000003f8 .L0 
     /tmp/ccODRTXI.s:932    .text:00000000000003fc .L0 
     /tmp/ccODRTXI.s:943    .text:00000000000003fc _ZN5Riscv10kernelMainEv
     /tmp/ccODRTXI.s:946    .text:00000000000003fc .L0 
     /tmp/ccODRTXI.s:5841   .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/ccODRTXI.s:949    .text:00000000000003fc .L0 
     /tmp/ccODRTXI.s:950    .text:0000000000000400 .L0 
     /tmp/ccODRTXI.s:955    .text:0000000000000410 .L0 
     /tmp/ccODRTXI.s:956    .text:0000000000000410 .L0 
     /tmp/ccODRTXI.s:957    .text:0000000000000410 .L0 
     /tmp/ccODRTXI.s:958    .text:0000000000000410 .L0 
     /tmp/ccODRTXI.s:960    .text:0000000000000414 .L0 
     /tmp/ccODRTXI.s:963    .text:0000000000000414 .L0 
     /tmp/ccODRTXI.s:964    .text:0000000000000414 .L0 
     /tmp/ccODRTXI.s:967    .text:000000000000041c .L0 
     /tmp/ccODRTXI.s:968    .text:000000000000041c .L0 
     /tmp/ccODRTXI.s:971    .text:0000000000000424 .L0 
     /tmp/ccODRTXI.s:972    .text:0000000000000424 .L0 
     /tmp/ccODRTXI.s:975    .text:000000000000042c .L0 
     /tmp/ccODRTXI.s:976    .text:000000000000042c .L0 
     /tmp/ccODRTXI.s:981    .text:000000000000043c .L0 
     /tmp/ccODRTXI.s:995    .text:0000000000000468 .L0 
GAS LISTING /tmp/ccODRTXI.s 			page 42


     /tmp/ccODRTXI.s:996    .text:0000000000000468 .L0 
     /tmp/ccODRTXI.s:1002   .text:0000000000000474 .L0 
     /tmp/ccODRTXI.s:1003   .text:0000000000000474 .L0 
     /tmp/ccODRTXI.s:1004   .text:0000000000000474 .L0 
     /tmp/ccODRTXI.s:1008   .text:0000000000000480 .L0 
     /tmp/ccODRTXI.s:1010   .text:0000000000000484 .L0 
     /tmp/ccODRTXI.s:1011   .text:0000000000000484 .L0 
     /tmp/ccODRTXI.s:1014   .text:000000000000048c .L0 
     /tmp/ccODRTXI.s:1017   .text:0000000000000490 .L0 
     /tmp/ccODRTXI.s:1018   .text:0000000000000490 .L0 
     /tmp/ccODRTXI.s:1021   .text:000000000000049c .L0 
     /tmp/ccODRTXI.s:1022   .text:000000000000049c .L0 
     /tmp/ccODRTXI.s:1028   .text:00000000000004b0 .L0 
     /tmp/ccODRTXI.s:1029   .text:00000000000004b0 .L0 
     /tmp/ccODRTXI.s:1033   .text:00000000000004b8 .L0 
     /tmp/ccODRTXI.s:1034   .text:00000000000004b8 .L0 
     /tmp/ccODRTXI.s:1035   .text:00000000000004b8 .L0 
     /tmp/ccODRTXI.s:1041   .text:00000000000004cc .L0 
     /tmp/ccODRTXI.s:1043   .text:00000000000004d0 .L0 
     /tmp/ccODRTXI.s:1046   .text:00000000000004dc .L0 
     /tmp/ccODRTXI.s:1048   .text:00000000000004e0 .L0 
     /tmp/ccODRTXI.s:1049   .text:00000000000004e0 .L0 
     /tmp/ccODRTXI.s:1052   .text:00000000000004e8 .L0 
     /tmp/ccODRTXI.s:1053   .text:00000000000004e8 .L0 
     /tmp/ccODRTXI.s:1056   .text:00000000000004f0 .L0 
     /tmp/ccODRTXI.s:1057   .text:00000000000004f4 .L0 
     /tmp/ccODRTXI.s:1058   .text:00000000000004f4 .L0 
     /tmp/ccODRTXI.s:1060   .text:00000000000004f8 .L0 
     /tmp/ccODRTXI.s:1061   .text:00000000000004f8 .L0 
     /tmp/ccODRTXI.s:1063   .text:00000000000004fc .L0 
     /tmp/ccODRTXI.s:1066   .text:0000000000000500 .L0 
     /tmp/ccODRTXI.s:1068   .text:0000000000000504 .L0 
     /tmp/ccODRTXI.s:1071   .text:0000000000000508 .L0 
     /tmp/ccODRTXI.s:1074   .text:000000000000050c .L0 
     /tmp/ccODRTXI.s:1082   .text:0000000000000524 .L0 
     /tmp/ccODRTXI.s:1112   .text:0000000000000524 _ZN5Riscv9idleRiscvEPv
     /tmp/ccODRTXI.s:1115   .text:0000000000000524 .L0 
     /tmp/ccODRTXI.s:1117   .text:0000000000000524 .L0 
     /tmp/ccODRTXI.s:1118   .text:0000000000000528 .L0 
     /tmp/ccODRTXI.s:1120   .text:000000000000052c .L0 
     /tmp/ccODRTXI.s:1122   .text:0000000000000530 .L0 
     /tmp/ccODRTXI.s:1125   .text:0000000000000530 .L0 
     /tmp/ccODRTXI.s:1126   .text:0000000000000530 .L0 
     /tmp/ccODRTXI.s:1127   .text:0000000000000534 .L0 
     /tmp/ccODRTXI.s:1133   .text:0000000000000534 _ZN5Riscv13w_a0_sscratchEv
     /tmp/ccODRTXI.s:1136   .text:0000000000000534 .L0 
     /tmp/ccODRTXI.s:1137   .text:0000000000000534 .L0 
     /tmp/ccODRTXI.s:1138   .text:0000000000000538 .L0 
     /tmp/ccODRTXI.s:1140   .text:000000000000053c .L0 
     /tmp/ccODRTXI.s:1142   .text:0000000000000540 .L0 
     /tmp/ccODRTXI.s:1144   .text:0000000000000540 .L0 
     /tmp/ccODRTXI.s:1145   .text:0000000000000540 .L0 
       src/Riscv.cpp:234    .text:0000000000000540 .L0 
     /tmp/ccODRTXI.s:1152   .text:0000000000000544 .L0 
     /tmp/ccODRTXI.s:1154   .text:0000000000000544 .L0 
       src/Riscv.cpp:235    .text:0000000000000554 .L0 
     /tmp/ccODRTXI.s:1163   .text:0000000000000558 .L0 
GAS LISTING /tmp/ccODRTXI.s 			page 43


       src/Riscv.cpp:237    .text:0000000000000558 .L0 
     /tmp/ccODRTXI.s:1168   .text:000000000000055c .L0 
       src/Riscv.cpp:238    .text:000000000000055c .L0 
     /tmp/ccODRTXI.s:1174   .text:0000000000000560 .L0 
     /tmp/ccODRTXI.s:1175   .text:0000000000000564 .L0 
     /tmp/ccODRTXI.s:1176   .text:0000000000000564 .L0 
     /tmp/ccODRTXI.s:1178   .text:0000000000000568 .L0 
     /tmp/ccODRTXI.s:1180   .text:000000000000056c .L0 
     /tmp/ccODRTXI.s:1186   .text:000000000000056c _ZN5Riscv14changePrivModeEv
     /tmp/ccODRTXI.s:1189   .text:000000000000056c .L0 
     /tmp/ccODRTXI.s:1190   .text:000000000000056c .L0 
     /tmp/ccODRTXI.s:1191   .text:0000000000000570 .L0 
     /tmp/ccODRTXI.s:1193   .text:0000000000000574 .L0 
     /tmp/ccODRTXI.s:1195   .text:0000000000000578 .L0 
     /tmp/ccODRTXI.s:1197   .text:0000000000000578 .L0 
     /tmp/ccODRTXI.s:1198   .text:000000000000057c .L0 
     /tmp/ccODRTXI.s:1199   .text:000000000000057c .L0 
     /tmp/ccODRTXI.s:1201   .text:0000000000000580 .L0 
     /tmp/ccODRTXI.s:1203   .text:0000000000000584 .L0 
     /tmp/ccODRTXI.s:1217   .bss:0000000000000008 _ZN5Riscv12finishSystemE
     /tmp/ccODRTXI.s:1213   .bss:0000000000000000 _ZN5Riscv9totalTimeE
     /tmp/ccODRTXI.s:1210   .bss:0000000000000000 .LANCHOR0
     /tmp/ccODRTXI.s:1230   .text:0000000000000584 .L0 
     /tmp/ccODRTXI.s:55     .text:0000000000000038 .L0 
     /tmp/ccODRTXI.s:256    .text:0000000000000104 .L0 
     /tmp/ccODRTXI.s:260    .text:0000000000000110 .L0 
     /tmp/ccODRTXI.s:369    .rodata:0000000000000000 .L23
     /tmp/ccODRTXI.s:361    .text:0000000000000190 .L0 
     /tmp/ccODRTXI.s:453    .text:00000000000001b8 .L0 
     /tmp/ccODRTXI.s:486    .text:00000000000001d8 .L0 
     /tmp/ccODRTXI.s:511    .text:00000000000001f4 .L0 
     /tmp/ccODRTXI.s:592    .text:0000000000000240 .L0 
     /tmp/ccODRTXI.s:605    .text:0000000000000268 .L0 
     /tmp/ccODRTXI.s:615    .text:0000000000000284 .L0 
     /tmp/ccODRTXI.s:684    .text:00000000000002c4 .L0 
     /tmp/ccODRTXI.s:989    .text:0000000000000458 .L0 
     /tmp/ccODRTXI.s:1019   .text:0000000000000494 .L0 
     /tmp/ccODRTXI.s:937    .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccODRTXI.s:1022   .text:000000000000049c .L0 
     /tmp/ccODRTXI.s:1035   .text:00000000000004b8 .L0 
     /tmp/ccODRTXI.s:1043   .text:00000000000004d0 .L0 
     /tmp/ccODRTXI.s:1154   .text:0000000000000544 .L0 
     /tmp/ccODRTXI.s:529    .text:0000000000000218 .L14
     /tmp/ccODRTXI.s:439    .text:00000000000001a8 .L15
     /tmp/ccODRTXI.s:741    .text:0000000000000304 .L13
     /tmp/ccODRTXI.s:710    .text:00000000000002f4 .L21
     /tmp/ccODRTXI.s:517    .text:0000000000000204 .L20
     /tmp/ccODRTXI.s:676    .text:00000000000002c0 .L39
     /tmp/ccODRTXI.s:664    .text:00000000000002b0 .L40
     /tmp/ccODRTXI.s:631    .text:000000000000029c .L19
     /tmp/ccODRTXI.s:1015   .text:0000000000000490 .L46
     /tmp/ccODRTXI.s:1000   .text:0000000000000474 .L47
     /tmp/ccODRTXI.s:1031   .text:00000000000004b8 .L49
     /tmp/ccODRTXI.s:1026   .text:00000000000004b0 .L48
     /tmp/ccODRTXI.s:1123   .text:0000000000000530 .L55
     /tmp/ccODRTXI.s:699    .text:00000000000002ec .L36
     /tmp/ccODRTXI.s:758    .text:0000000000000318 .L35
GAS LISTING /tmp/ccODRTXI.s 			page 44


     /tmp/ccODRTXI.s:777    .text:0000000000000330 .L34
     /tmp/ccODRTXI.s:801    .text:0000000000000354 .L33
     /tmp/ccODRTXI.s:793    .text:0000000000000348 .L32
     /tmp/ccODRTXI.s:769    .text:0000000000000324 .L31
     /tmp/ccODRTXI.s:785    .text:000000000000033c .L30
     /tmp/ccODRTXI.s:817    .text:000000000000036c .L29
     /tmp/ccODRTXI.s:841    .text:0000000000000390 .L28
     /tmp/ccODRTXI.s:825    .text:0000000000000378 .L27
     /tmp/ccODRTXI.s:833    .text:0000000000000384 .L26
     /tmp/ccODRTXI.s:809    .text:0000000000000360 .L25
     /tmp/ccODRTXI.s:849    .text:000000000000039c .L24
     /tmp/ccODRTXI.s:857    .text:00000000000003a8 .L22
     /tmp/ccODRTXI.s:962    .text:0000000000000414 .LEHB0
     /tmp/ccODRTXI.s:944    .text:00000000000003fc .LFB48
     /tmp/ccODRTXI.s:984    .text:0000000000000448 .LEHE0
     /tmp/ccODRTXI.s:990    .text:0000000000000460 .LEHB1
     /tmp/ccODRTXI.s:993    .text:0000000000000468 .LEHE1
     /tmp/ccODRTXI.s:1070   .text:0000000000000508 .L51
     /tmp/ccODRTXI.s:997    .text:000000000000046c .LEHB2
     /tmp/ccODRTXI.s:1039   .text:00000000000004cc .LEHE2
     /tmp/ccODRTXI.s:1078   .text:000000000000051c .LEHB3
     /tmp/ccODRTXI.s:1081   .text:0000000000000524 .LEHE3
     /tmp/ccODRTXI.s:3864   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccODRTXI.s:5591   .debug_str:0000000000000d8e .LASF313
     /tmp/ccODRTXI.s:5225   .debug_str:00000000000000ef .LASF314
     /tmp/ccODRTXI.s:5227   .debug_str:00000000000000fd .LASF315
     /tmp/ccODRTXI.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccODRTXI.s:1220   .text:0000000000000584 .Letext0
     /tmp/ccODRTXI.s:5189   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccODRTXI.s:5235   .debug_str:000000000000015e .LASF0
     /tmp/ccODRTXI.s:5781   .debug_str:0000000000001435 .LASF1
     /tmp/ccODRTXI.s:5715   .debug_str:00000000000011e0 .LASF2
     /tmp/ccODRTXI.s:5673   .debug_str:00000000000010a8 .LASF4
     /tmp/ccODRTXI.s:5685   .debug_str:0000000000001106 .LASF3
     /tmp/ccODRTXI.s:5381   .debug_str:00000000000006f5 .LASF5
     /tmp/ccODRTXI.s:5475   .debug_str:0000000000000a07 .LASF6
     /tmp/ccODRTXI.s:5449   .debug_str:0000000000000929 .LASF7
     /tmp/ccODRTXI.s:5605   .debug_str:0000000000000eae .LASF8
     /tmp/ccODRTXI.s:5263   .debug_str:0000000000000247 .LASF9
     /tmp/ccODRTXI.s:5767   .debug_str:00000000000013c0 .LASF10
     /tmp/ccODRTXI.s:5387   .debug_str:000000000000071e .LASF11
     /tmp/ccODRTXI.s:5311   .debug_str:0000000000000432 .LASF12
     /tmp/ccODRTXI.s:5477   .debug_str:0000000000000a0e .LASF13
     /tmp/ccODRTXI.s:5393   .debug_str:0000000000000743 .LASF14
     /tmp/ccODRTXI.s:5659   .debug_str:0000000000001057 .LASF15
     /tmp/ccODRTXI.s:5397   .debug_str:000000000000077d .LASF16
     /tmp/ccODRTXI.s:5361   .debug_str:000000000000063a .LASF17
     /tmp/ccODRTXI.s:5297   .debug_str:0000000000000381 .LASF108
     /tmp/ccODRTXI.s:5407   .debug_str:00000000000007da .LASF21
     /tmp/ccODRTXI.s:5377   .debug_str:00000000000006df .LASF18
     /tmp/ccODRTXI.s:5633   .debug_str:0000000000000fad .LASF19
     /tmp/ccODRTXI.s:5669   .debug_str:0000000000001095 .LASF20
     /tmp/ccODRTXI.s:5455   .debug_str:0000000000000956 .LASF22
     /tmp/ccODRTXI.s:5761   .debug_str:0000000000001368 .LASF23
     /tmp/ccODRTXI.s:5583   .debug_str:0000000000000d64 .LASF24
     /tmp/ccODRTXI.s:5409   .debug_str:00000000000007e5 .LASF25
     /tmp/ccODRTXI.s:5651   .debug_str:000000000000101d .LASF26
GAS LISTING /tmp/ccODRTXI.s 			page 45


     /tmp/ccODRTXI.s:5231   .debug_str:000000000000013e .LASF28
     /tmp/ccODRTXI.s:5509   .debug_str:0000000000000b1f .LASF27
     /tmp/ccODRTXI.s:5737   .debug_str:0000000000001297 .LASF29
     /tmp/ccODRTXI.s:5601   .debug_str:0000000000000e9e .LASF30
     /tmp/ccODRTXI.s:5735   .debug_str:000000000000127f .LASF31
     /tmp/ccODRTXI.s:5741   .debug_str:00000000000012c8 .LASF32
     /tmp/ccODRTXI.s:5383   .debug_str:00000000000006fc .LASF33
     /tmp/ccODRTXI.s:5341   .debug_str:0000000000000585 .LASF40
     /tmp/ccODRTXI.s:5493   .debug_str:0000000000000a76 .LASF42
     /tmp/ccODRTXI.s:5833   .debug_str:000000000000160b .LASF34
     /tmp/ccODRTXI.s:5623   .debug_str:0000000000000f45 .LASF35
     /tmp/ccODRTXI.s:5247   .debug_str:00000000000001b8 .LASF36
     /tmp/ccODRTXI.s:5765   .debug_str:000000000000139c .LASF37
     /tmp/ccODRTXI.s:5439   .debug_str:00000000000008f4 .LASF38
     /tmp/ccODRTXI.s:5491   .debug_str:0000000000000a57 .LASF39
     /tmp/ccODRTXI.s:5217   .debug_str:00000000000000b9 .LASF41
     /tmp/ccODRTXI.s:5661   .debug_str:0000000000001063 .LASF43
     /tmp/ccODRTXI.s:5299   .debug_str:0000000000000387 .LASF44
     /tmp/ccODRTXI.s:5501   .debug_str:0000000000000ad3 .LASF45
     /tmp/ccODRTXI.s:5469   .debug_str:00000000000009cb .LASF46
     /tmp/ccODRTXI.s:5733   .debug_str:0000000000001265 .LASF47
     /tmp/ccODRTXI.s:5805   .debug_str:000000000000151e .LASF50
     /tmp/ccODRTXI.s:5759   .debug_str:0000000000001353 .LASF52
     /tmp/ccODRTXI.s:5647   .debug_str:000000000000100e .LASF48
     /tmp/ccODRTXI.s:5257   .debug_str:0000000000000212 .LASF49
     /tmp/ccODRTXI.s:5333   .debug_str:0000000000000530 .LASF51
     /tmp/ccODRTXI.s:5405   .debug_str:00000000000007c7 .LASF53
     /tmp/ccODRTXI.s:5375   .debug_str:00000000000006d8 .LASF54
     /tmp/ccODRTXI.s:5253   .debug_str:00000000000001f4 .LASF55
     /tmp/ccODRTXI.s:5785   .debug_str:0000000000001466 .LASF56
     /tmp/ccODRTXI.s:5657   .debug_str:0000000000001043 .LASF57
     /tmp/ccODRTXI.s:5653   .debug_str:0000000000001028 .LASF58
     /tmp/ccODRTXI.s:5293   .debug_str:0000000000000363 .LASF59
     /tmp/ccODRTXI.s:5595   .debug_str:0000000000000e5f .LASF60
     /tmp/ccODRTXI.s:5193   .debug_str:000000000000000f .LASF61
     /tmp/ccODRTXI.s:5487   .debug_str:0000000000000a46 .LASF62
     /tmp/ccODRTXI.s:5457   .debug_str:0000000000000965 .LASF63
     /tmp/ccODRTXI.s:5743   .debug_str:00000000000012d2 .LASF105
     /tmp/ccODRTXI.s:5729   .debug_str:0000000000001253 .LASF64
     /tmp/ccODRTXI.s:5543   .debug_str:0000000000000c4a .LASF65
     /tmp/ccODRTXI.s:5451   .debug_str:000000000000093c .LASF66
     /tmp/ccODRTXI.s:5713   .debug_str:00000000000011cd .LASF67
     /tmp/ccODRTXI.s:5517   .debug_str:0000000000000b91 .LASF68
     /tmp/ccODRTXI.s:5797   .debug_str:00000000000014d9 .LASF69
     /tmp/ccODRTXI.s:5687   .debug_str:0000000000001118 .LASF70
     /tmp/ccODRTXI.s:5581   .debug_str:0000000000000d52 .LASF71
     /tmp/ccODRTXI.s:5823   .debug_str:00000000000015b4 .LASF72
     /tmp/ccODRTXI.s:5789   .debug_str:0000000000001482 .LASF73
     /tmp/ccODRTXI.s:5629   .debug_str:0000000000000f8d .LASF74
     /tmp/ccODRTXI.s:5307   .debug_str:00000000000003f7 .LASF75
     /tmp/ccODRTXI.s:5255   .debug_str:0000000000000207 .LASF76
     /tmp/ccODRTXI.s:5821   .debug_str:000000000000159c .LASF77
     /tmp/ccODRTXI.s:5443   .debug_str:000000000000090b .LASF78
     /tmp/ccODRTXI.s:5329   .debug_str:0000000000000503 .LASF79
     /tmp/ccODRTXI.s:5391   .debug_str:0000000000000739 .LASF80
     /tmp/ccODRTXI.s:5349   .debug_str:00000000000005ce .LASF81
     /tmp/ccODRTXI.s:5671   .debug_str:000000000000109e .LASF82
GAS LISTING /tmp/ccODRTXI.s 			page 46


     /tmp/ccODRTXI.s:5463   .debug_str:00000000000009a1 .LASF83
     /tmp/ccODRTXI.s:5427   .debug_str:0000000000000899 .LASF84
     /tmp/ccODRTXI.s:5539   .debug_str:0000000000000c33 .LASF85
     /tmp/ccODRTXI.s:5681   .debug_str:00000000000010f6 .LASF86
     /tmp/ccODRTXI.s:5359   .debug_str:0000000000000628 .LASF87
     /tmp/ccODRTXI.s:5609   .debug_str:0000000000000ee3 .LASF88
     /tmp/ccODRTXI.s:5753   .debug_str:0000000000001309 .LASF89
     /tmp/ccODRTXI.s:5637   .debug_str:0000000000000fc1 .LASF90
     /tmp/ccODRTXI.s:5313   .debug_str:0000000000000441 .LASF91
     /tmp/ccODRTXI.s:5239   .debug_str:0000000000000170 .LASF92
     /tmp/ccODRTXI.s:5607   .debug_str:0000000000000ec1 .LASF93
     /tmp/ccODRTXI.s:5813   .debug_str:0000000000001567 .LASF94
     /tmp/ccODRTXI.s:5241   .debug_str:0000000000000185 .LASF95
     /tmp/ccODRTXI.s:5207   .debug_str:0000000000000060 .LASF96
     /tmp/ccODRTXI.s:5711   .debug_str:00000000000011c5 .LASF97
     /tmp/ccODRTXI.s:5551   .debug_str:0000000000000c7c .LASF98
     /tmp/ccODRTXI.s:5589   .debug_str:0000000000000d82 .LASF99
     /tmp/ccODRTXI.s:5453   .debug_str:0000000000000943 .LASF100
     /tmp/ccODRTXI.s:5775   .debug_str:0000000000001408 .LASF101
     /tmp/ccODRTXI.s:5209   .debug_str:0000000000000067 .LASF102
     /tmp/ccODRTXI.s:5327   .debug_str:00000000000004f0 .LASF103
     /tmp/ccODRTXI.s:5283   .debug_str:0000000000000310 .LASF104
     /tmp/ccODRTXI.s:5683   .debug_str:00000000000010fc .LASF106
     /tmp/ccODRTXI.s:5507   .debug_str:0000000000000b1a .LASF107
     /tmp/ccODRTXI.s:5809   .debug_str:0000000000001537 .LASF109
     /tmp/ccODRTXI.s:5365   .debug_str:0000000000000660 .LASF144
     /tmp/ccODRTXI.s:5525   .debug_str:0000000000000bb0 .LASF110
     /tmp/ccODRTXI.s:5237   .debug_str:000000000000016b .LASF111
     /tmp/ccODRTXI.s:5547   .debug_str:0000000000000c6e .LASF112
     /tmp/ccODRTXI.s:5561   .debug_str:0000000000000cbd .LASF113
     /tmp/ccODRTXI.s:5537   .debug_str:0000000000000c20 .LASF114
     /tmp/ccODRTXI.s:5795   .debug_str:00000000000014d0 .LASF115
     /tmp/ccODRTXI.s:5357   .debug_str:000000000000061e .LASF116
     /tmp/ccODRTXI.s:5195   .debug_str:0000000000000023 .LASF117
     /tmp/ccODRTXI.s:5569   .debug_str:0000000000000cef .LASF119
     /tmp/ccODRTXI.s:5199   .debug_str:0000000000000038 .LASF118
     /tmp/ccODRTXI.s:5269   .debug_str:000000000000027c .LASF120
     /tmp/ccODRTXI.s:5471   .debug_str:00000000000009d8 .LASF121
     /tmp/ccODRTXI.s:5373   .debug_str:00000000000006b5 .LASF122
     /tmp/ccODRTXI.s:5701   .debug_str:0000000000001172 .LASF123
     /tmp/ccODRTXI.s:5335   .debug_str:0000000000000537 .LASF124
     /tmp/ccODRTXI.s:5677   .debug_str:00000000000010b9 .LASF125
     /tmp/ccODRTXI.s:5305   .debug_str:00000000000003c9 .LASF126
     /tmp/ccODRTXI.s:5317   .debug_str:0000000000000480 .LASF127
     /tmp/ccODRTXI.s:5597   .debug_str:0000000000000e67 .LASF128
     /tmp/ccODRTXI.s:5691   .debug_str:0000000000001123 .LASF129
     /tmp/ccODRTXI.s:5395   .debug_str:0000000000000753 .LASF130
     /tmp/ccODRTXI.s:5807   .debug_str:0000000000001527 .LASF131
     /tmp/ccODRTXI.s:5831   .debug_str:00000000000015e3 .LASF132
     /tmp/ccODRTXI.s:5191   .debug_str:0000000000000000 .LASF133
     /tmp/ccODRTXI.s:5535   .debug_str:0000000000000bf9 .LASF134
     /tmp/ccODRTXI.s:5267   .debug_str:0000000000000276 .LASF135
     /tmp/ccODRTXI.s:5499   .debug_str:0000000000000acd .LASF136
     /tmp/ccODRTXI.s:5555   .debug_str:0000000000000c93 .LASF137
     /tmp/ccODRTXI.s:5693   .debug_str:0000000000001134 .LASF138
     /tmp/ccODRTXI.s:5437   .debug_str:00000000000008eb .LASF139
     /tmp/ccODRTXI.s:5421   .debug_str:000000000000085b .LASF140
GAS LISTING /tmp/ccODRTXI.s 			page 47


     /tmp/ccODRTXI.s:5827   .debug_str:00000000000015ce .LASF141
     /tmp/ccODRTXI.s:5599   .debug_str:0000000000000e96 .LASF206
     /tmp/ccODRTXI.s:5355   .debug_str:0000000000000618 .LASF142
     /tmp/ccODRTXI.s:5771   .debug_str:00000000000013d3 .LASF143
     /tmp/ccODRTXI.s:5505   .debug_str:0000000000000b02 .LASF316
     /tmp/ccODRTXI.s:5769   .debug_str:00000000000013ce .LASF145
     /tmp/ccODRTXI.s:5399   .debug_str:0000000000000793 .LASF146
     /tmp/ccODRTXI.s:5389   .debug_str:000000000000072d .LASF147
     /tmp/ccODRTXI.s:5663   .debug_str:000000000000107a .LASF148
     /tmp/ccODRTXI.s:5459   .debug_str:0000000000000979 .LASF149
     /tmp/ccODRTXI.s:5483   .debug_str:0000000000000a35 .LASF150
     /tmp/ccODRTXI.s:5433   .debug_str:00000000000008cd .LASF151
     /tmp/ccODRTXI.s:5745   .debug_str:00000000000012df .LASF152
     /tmp/ccODRTXI.s:5287   .debug_str:000000000000032d .LASF153
     /tmp/ccODRTXI.s:5801   .debug_str:00000000000014f9 .LASF154
     /tmp/ccODRTXI.s:5725   .debug_str:0000000000001236 .LASF155
     /tmp/ccODRTXI.s:5289   .debug_str:000000000000033d .LASF160
     /tmp/ccODRTXI.s:5461   .debug_str:0000000000000989 .LASF162
     /tmp/ccODRTXI.s:5563   .debug_str:0000000000000ccb .LASF156
     /tmp/ccODRTXI.s:5261   .debug_str:000000000000023b .LASF157
     /tmp/ccODRTXI.s:5557   .debug_str:0000000000000c9b .LASF158
     /tmp/ccODRTXI.s:5621   .debug_str:0000000000000f38 .LASF159
     /tmp/ccODRTXI.s:5575   .debug_str:0000000000000d39 .LASF161
     /tmp/ccODRTXI.s:5277   .debug_str:00000000000002e1 .LASF163
     /tmp/ccODRTXI.s:5643   .debug_str:0000000000000ff3 .LASF164
     /tmp/ccODRTXI.s:5215   .debug_str:000000000000009d .LASF165
     /tmp/ccODRTXI.s:5481   .debug_str:0000000000000a26 .LASF166
     /tmp/ccODRTXI.s:5417   .debug_str:0000000000000825 .LASF167
     /tmp/ccODRTXI.s:5627   .debug_str:0000000000000f7e .LASF168
     /tmp/ccODRTXI.s:5513   .debug_str:0000000000000b54 .LASF169
     /tmp/ccODRTXI.s:5721   .debug_str:0000000000001220 .LASF170
     /tmp/ccODRTXI.s:5727   .debug_str:0000000000001247 .LASF171
     /tmp/ccODRTXI.s:5641   .debug_str:0000000000000fe3 .LASF172
     /tmp/ccODRTXI.s:5337   .debug_str:000000000000056c .LASF173
     /tmp/ccODRTXI.s:5379   .debug_str:00000000000006e8 .LASF174
     /tmp/ccODRTXI.s:5197   .debug_str:000000000000002d .LASF175
     /tmp/ccODRTXI.s:5445   .debug_str:0000000000000912 .LASF176
     /tmp/ccODRTXI.s:5635   .debug_str:0000000000000fb6 .LASF177
     /tmp/ccODRTXI.s:5747   .debug_str:00000000000012e5 .LASF178
     /tmp/ccODRTXI.s:5435   .debug_str:00000000000008e0 .LASF179
     /tmp/ccODRTXI.s:5249   .debug_str:00000000000001cf .LASF180
     /tmp/ccODRTXI.s:5751   .debug_str:0000000000001301 .LASF181
     /tmp/ccODRTXI.s:5533   .debug_str:0000000000000be5 .LASF182
     /tmp/ccODRTXI.s:5265   .debug_str:0000000000000257 .LASF183
     /tmp/ccODRTXI.s:5645   .debug_str:0000000000000ffc .LASF184
     /tmp/ccODRTXI.s:5803   .debug_str:0000000000001501 .LASF185
     /tmp/ccODRTXI.s:5529   .debug_str:0000000000000bc2 .LASF186
     /tmp/ccODRTXI.s:5793   .debug_str:00000000000014af .LASF187
     /tmp/ccODRTXI.s:5319   .debug_str:0000000000000495 .LASF188
     /tmp/ccODRTXI.s:5783   .debug_str:0000000000001448 .LASF189
     /tmp/ccODRTXI.s:5655   .debug_str:0000000000001030 .LASF190
     /tmp/ccODRTXI.s:5229   .debug_str:0000000000000120 .LASF191
     /tmp/ccODRTXI.s:5739   .debug_str:00000000000012b3 .LASF192
     /tmp/ccODRTXI.s:5811   .debug_str:0000000000001547 .LASF193
     /tmp/ccODRTXI.s:5285   .debug_str:0000000000000324 .LASF194
     /tmp/ccODRTXI.s:5577   .debug_str:0000000000000d42 .LASF195
     /tmp/ccODRTXI.s:5295   .debug_str:0000000000000377 .LASF196
GAS LISTING /tmp/ccODRTXI.s 			page 48


     /tmp/ccODRTXI.s:5703   .debug_str:000000000000118d .LASF197
     /tmp/ccODRTXI.s:5755   .debug_str:0000000000001321 .LASF198
     /tmp/ccODRTXI.s:5763   .debug_str:0000000000001374 .LASF200
     /tmp/ccODRTXI.s:5415   .debug_str:0000000000000810 .LASF199
     /tmp/ccODRTXI.s:5271   .debug_str:000000000000029d .LASF201
     /tmp/ccODRTXI.s:5521   .debug_str:0000000000000ba0 .LASF317
     /tmp/ccODRTXI.s:5817   .debug_str:000000000000157d .LASF318
     /tmp/ccODRTXI.s:5699   .debug_str:000000000000116d .LASF202
     /tmp/ccODRTXI.s:5587   .debug_str:0000000000000d7d .LASF203
     /tmp/ccODRTXI.s:5243   .debug_str:00000000000001a2 .LASF204
     /tmp/ccODRTXI.s:5749   .debug_str:00000000000012fb .LASF205
     /tmp/ccODRTXI.s:5553   .debug_str:0000000000000c8b .LASF207
     /tmp/ccODRTXI.s:5565   .debug_str:0000000000000cd8 .LASF208
     /tmp/ccODRTXI.s:5347   .debug_str:00000000000005ba .LASF209
     /tmp/ccODRTXI.s:5411   .debug_str:00000000000007f1 .LASF210
     /tmp/ccODRTXI.s:5259   .debug_str:0000000000000227 .LASF211
     /tmp/ccODRTXI.s:5549   .debug_str:0000000000000c77 .LASF212
     /tmp/ccODRTXI.s:5495   .debug_str:0000000000000a94 .LASF213
     /tmp/ccODRTXI.s:5219   .debug_str:00000000000000c3 .LASF214
     /tmp/ccODRTXI.s:5345   .debug_str:00000000000005a1 .LASF215
     /tmp/ccODRTXI.s:5585   .debug_str:0000000000000d71 .LASF216
     /tmp/ccODRTXI.s:5707   .debug_str:00000000000011b1 .LASF217
     /tmp/ccODRTXI.s:5787   .debug_str:000000000000146e .LASF218
     /tmp/ccODRTXI.s:5615   .debug_str:0000000000000f06 .LASF219
     /tmp/ccODRTXI.s:5489   .debug_str:0000000000000a4e .LASF220
     /tmp/ccODRTXI.s:5665   .debug_str:0000000000001080 .LASF221
     /tmp/ccODRTXI.s:5523   .debug_str:0000000000000ba7 .LASF222
     /tmp/ccODRTXI.s:5667   .debug_str:000000000000108a .LASF223
     /tmp/ccODRTXI.s:5251   .debug_str:00000000000001e5 .LASF224
     /tmp/ccODRTXI.s:5351   .debug_str:00000000000005e4 .LASF225
     /tmp/ccODRTXI.s:5467   .debug_str:00000000000009bc .LASF226
     /tmp/ccODRTXI.s:5571   .debug_str:0000000000000d10 .LASF227
     /tmp/ccODRTXI.s:5545   .debug_str:0000000000000c5d .LASF228
     /tmp/ccODRTXI.s:5473   .debug_str:00000000000009e3 .LASF229
     /tmp/ccODRTXI.s:5779   .debug_str:0000000000001425 .LASF230
     /tmp/ccODRTXI.s:5515   .debug_str:0000000000000b6e .LASF231
     /tmp/ccODRTXI.s:5281   .debug_str:0000000000000307 .LASF232
     /tmp/ccODRTXI.s:5649   .debug_str:0000000000001017 .LASF233
     /tmp/ccODRTXI.s:5221   .debug_str:00000000000000ca .LASF234
     /tmp/ccODRTXI.s:5233   .debug_str:0000000000000156 .LASF235
     /tmp/ccODRTXI.s:5331   .debug_str:0000000000000516 .LASF236
     /tmp/ccODRTXI.s:5617   .debug_str:0000000000000f1b .LASF237
     /tmp/ccODRTXI.s:5309   .debug_str:000000000000040f .LASF238
     /tmp/ccODRTXI.s:5425   .debug_str:0000000000000886 .LASF239
     /tmp/ccODRTXI.s:5511   .debug_str:0000000000000b2e .LASF240
     /tmp/ccODRTXI.s:5695   .debug_str:000000000000113e .LASF241
     /tmp/ccODRTXI.s:5757   .debug_str:000000000000132f .LASF242
     /tmp/ccODRTXI.s:5441   .debug_str:0000000000000906 .LASF243
     /tmp/ccODRTXI.s:5531   .debug_str:0000000000000bd8 .LASF244
     /tmp/ccODRTXI.s:5275   .debug_str:00000000000002d1 .LASF245
     /tmp/ccODRTXI.s:5791   .debug_str:000000000000149d .LASF246
     /tmp/ccODRTXI.s:5679   .debug_str:00000000000010cf .LASF247
     /tmp/ccODRTXI.s:5799   .debug_str:00000000000014eb .LASF248
     /tmp/ccODRTXI.s:5423   .debug_str:0000000000000863 .LASF249
     /tmp/ccODRTXI.s:5519   .debug_str:0000000000000b97 .LASF250
     /tmp/ccODRTXI.s:5689   .debug_str:000000000000111e .LASF251
     /tmp/ccODRTXI.s:5465   .debug_str:00000000000009b7 .LASF252
GAS LISTING /tmp/ccODRTXI.s 			page 49


     /tmp/ccODRTXI.s:5447   .debug_str:000000000000091f .LASF253
     /tmp/ccODRTXI.s:5675   .debug_str:00000000000010af .LASF254
     /tmp/ccODRTXI.s:5213   .debug_str:0000000000000092 .LASF255
     /tmp/ccODRTXI.s:5731   .debug_str:000000000000125a .LASF256
     /tmp/ccODRTXI.s:5245   .debug_str:00000000000001aa .LASF257
     /tmp/ccODRTXI.s:5413   .debug_str:00000000000007fd .LASF258
     /tmp/ccODRTXI.s:5367   .debug_str:000000000000066c .LASF259
     /tmp/ccODRTXI.s:5485   .debug_str:0000000000000a3e .LASF260
     /tmp/ccODRTXI.s:5593   .debug_str:0000000000000e3a .LASF261
     /tmp/ccODRTXI.s:5201   .debug_str:0000000000000041 .LASF262
     /tmp/ccODRTXI.s:5369   .debug_str:0000000000000680 .LASF263
     /tmp/ccODRTXI.s:5343   .debug_str:0000000000000595 .LASF264
     /tmp/ccODRTXI.s:5301   .debug_str:0000000000000395 .LASF265
     /tmp/ccODRTXI.s:5497   .debug_str:0000000000000aab .LASF266
     /tmp/ccODRTXI.s:5429   .debug_str:000000000000089f .LASF267
     /tmp/ccODRTXI.s:5697   .debug_str:000000000000114b .LASF268
     /tmp/ccODRTXI.s:5353   .debug_str:0000000000000606 .LASF269
     /tmp/ccODRTXI.s:5303   .debug_str:00000000000003a7 .LASF270
     /tmp/ccODRTXI.s:5403   .debug_str:00000000000007b4 .LASF271
     /tmp/ccODRTXI.s:5315   .debug_str:000000000000045d .LASF272
     /tmp/ccODRTXI.s:5279   .debug_str:00000000000002f4 .LASF273
     /tmp/ccODRTXI.s:5717   .debug_str:00000000000011ee .LASF274
     /tmp/ccODRTXI.s:5625   .debug_str:0000000000000f63 .LASF275
     /tmp/ccODRTXI.s:5291   .debug_str:000000000000034a .LASF276
     /tmp/ccODRTXI.s:5773   .debug_str:00000000000013de .LASF277
     /tmp/ccODRTXI.s:5705   .debug_str:0000000000001199 .LASF278
     /tmp/ccODRTXI.s:5323   .debug_str:00000000000004ae .LASF279
     /tmp/ccODRTXI.s:5611   .debug_str:0000000000000eee .LASF280
     /tmp/ccODRTXI.s:5431   .debug_str:00000000000008b1 .LASF281
     /tmp/ccODRTXI.s:5371   .debug_str:00000000000006a4 .LASF282
     /tmp/ccODRTXI.s:5559   .debug_str:0000000000000cab .LASF283
     /tmp/ccODRTXI.s:5203   .debug_str:0000000000000049 .LASF284
     /tmp/ccODRTXI.s:5527   .debug_str:0000000000000bb5 .LASF285
     /tmp/ccODRTXI.s:5825   .debug_str:00000000000015c2 .LASF286
     /tmp/ccODRTXI.s:5419   .debug_str:000000000000083f .LASF287
     /tmp/ccODRTXI.s:5829   .debug_str:00000000000015d7 .LASF288
     /tmp/ccODRTXI.s:5401   .debug_str:0000000000000798 .LASF289
     /tmp/ccODRTXI.s:5631   .debug_str:0000000000000f98 .LASF290
     /tmp/ccODRTXI.s:5325   .debug_str:00000000000004d7 .LASF291
     /tmp/ccODRTXI.s:1187   .text:000000000000056c .LFB54
     /tmp/ccODRTXI.s:1204   .text:0000000000000584 .LFE54
     /tmp/ccODRTXI.s:1134   .text:0000000000000534 .LFB53
     /tmp/ccODRTXI.s:1181   .text:000000000000056c .LFE53
     /tmp/ccODRTXI.s:5815   .debug_str:0000000000001576 .LASF292
     /tmp/ccODRTXI.s:1113   .text:0000000000000524 .LFB52
     /tmp/ccODRTXI.s:1128   .text:0000000000000534 .LFE52
     /tmp/ccODRTXI.s:906    .text:00000000000003dc .LFB51
     /tmp/ccODRTXI.s:933    .text:00000000000003fc .LFE51
     /tmp/ccODRTXI.s:874    .text:00000000000003b4 .LFB50
     /tmp/ccODRTXI.s:900    .text:00000000000003dc .LFE50
     /tmp/ccODRTXI.s:5013   .debug_loc:0000000000000000 .LLST13
     /tmp/ccODRTXI.s:889    .text:00000000000003cc .LVL62
     /tmp/ccODRTXI.s:10     .text:0000000000000000 .LFB49
     /tmp/ccODRTXI.s:36     .text:0000000000000028 .LFE49
     /tmp/ccODRTXI.s:25     .text:0000000000000018 .LVL0
     /tmp/ccODRTXI.s:1083   .text:0000000000000524 .LFE48
     /tmp/ccODRTXI.s:5273   .debug_str:00000000000002c9 .LASF293
GAS LISTING /tmp/ccODRTXI.s 			page 50


     /tmp/ccODRTXI.s:5027   .debug_loc:0000000000000039 .LLST14
     /tmp/ccODRTXI.s:965    .text:000000000000041c .LVL64
     /tmp/ccODRTXI.s:969    .text:0000000000000424 .LVL65
     /tmp/ccODRTXI.s:973    .text:000000000000042c .LVL66
     /tmp/ccODRTXI.s:978    .text:0000000000000438 .LVL67
     /tmp/ccODRTXI.s:983    .text:0000000000000448 .LVL68
     /tmp/ccODRTXI.s:992    .text:0000000000000468 .LVL69
     /tmp/ccODRTXI.s:999    .text:0000000000000474 .LVL70
     /tmp/ccODRTXI.s:1006   .text:0000000000000480 .LVL71
     /tmp/ccODRTXI.s:1012   .text:000000000000048c .LVL72
     /tmp/ccODRTXI.s:1024   .text:00000000000004ac .LVL73
     /tmp/ccODRTXI.s:1030   .text:00000000000004b8 .LVL74
     /tmp/ccODRTXI.s:1038   .text:00000000000004cc .LVL75
     /tmp/ccODRTXI.s:1050   .text:00000000000004e8 .LVL76
     /tmp/ccODRTXI.s:1054   .text:00000000000004f0 .LVL77
     /tmp/ccODRTXI.s:1076   .text:0000000000000518 .LVL79
     /tmp/ccODRTXI.s:1080   .text:0000000000000524 .LVL80
     /tmp/ccODRTXI.s:236    .text:00000000000000ec .LFB47
     /tmp/ccODRTXI.s:868    .text:00000000000003b4 .LFE47
     /tmp/ccODRTXI.s:5573   .debug_str:0000000000000d32 .LASF294
     /tmp/ccODRTXI.s:5034   .debug_loc:000000000000005c .LLST2
     /tmp/ccODRTXI.s:535    .text:0000000000000218 .LBB60
     /tmp/ccODRTXI.s:677    .text:00000000000002c0 .LBE60
     /tmp/ccODRTXI.s:5603   .debug_str:0000000000000ea9 .LASF295
     /tmp/ccODRTXI.s:5479   .debug_str:0000000000000a1e .LASF296
     /tmp/ccODRTXI.s:537    .text:0000000000000218 .LBB61
     /tmp/ccODRTXI.s:553    .text:0000000000000224 .LBE61
     /tmp/ccODRTXI.s:557    .text:0000000000000228 .LBB63
     /tmp/ccODRTXI.s:572    .text:0000000000000234 .LBE63
     /tmp/ccODRTXI.s:577    .text:0000000000000238 .LBB65
     /tmp/ccODRTXI.s:589    .text:0000000000000240 .LBE65
     /tmp/ccODRTXI.s:5055   .debug_loc:00000000000000ba .LLST9
     /tmp/ccODRTXI.s:618    .text:0000000000000290 .LBB67
     /tmp/ccODRTXI.s:626    .text:0000000000000294 .LBE67
     /tmp/ccODRTXI.s:5063   .debug_loc:00000000000000de .LLST10
     /tmp/ccODRTXI.s:636    .text:00000000000002a0 .LBB69
     /tmp/ccODRTXI.s:647    .text:00000000000002a4 .LBE69
     /tmp/ccODRTXI.s:5070   .debug_loc:0000000000000101 .LLST11
     /tmp/ccODRTXI.s:652    .text:00000000000002a8 .LBB71
     /tmp/ccODRTXI.s:666    .text:00000000000002b0 .LBE71
     /tmp/ccODRTXI.s:5077   .debug_loc:0000000000000124 .LLST12
     /tmp/ccODRTXI.s:602    .text:0000000000000268 .LVL29
     /tmp/ccODRTXI.s:612    .text:0000000000000284 .LVL30
     /tmp/ccODRTXI.s:673    .text:00000000000002bc .LVL37
     /tmp/ccODRTXI.s:5167   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccODRTXI.s:5084   .debug_loc:0000000000000147 .LLST6
     /tmp/ccODRTXI.s:5205   .debug_str:0000000000000056 .LASF297
     /tmp/ccODRTXI.s:5095   .debug_loc:000000000000017d .LLST7
     /tmp/ccODRTXI.s:5102   .debug_loc:00000000000001a0 .LLST8
     /tmp/ccODRTXI.s:691    .text:00000000000002dc .LVL40
     /tmp/ccODRTXI.s:696    .text:00000000000002e8 .LVL41
     /tmp/ccODRTXI.s:523    .text:000000000000020c .LVL23
     /tmp/ccODRTXI.s:525    .text:0000000000000214 .LVL24
     /tmp/ccODRTXI.s:5117   .debug_loc:00000000000001e9 .LLST3
     /tmp/ccODRTXI.s:317    .text:0000000000000160 .LBB47
     /tmp/ccODRTXI.s:332    .text:000000000000016c .LBE47
     /tmp/ccODRTXI.s:338    .text:0000000000000174 .LBB49
GAS LISTING /tmp/ccODRTXI.s 			page 51


     /tmp/ccODRTXI.s:353    .text:0000000000000180 .LBE49
     /tmp/ccODRTXI.s:715    .text:00000000000002f8 .LBB51
     /tmp/ccODRTXI.s:726    .text:00000000000002fc .LBE51
     /tmp/ccODRTXI.s:5124   .debug_loc:000000000000020c .LLST4
     /tmp/ccODRTXI.s:731    .text:0000000000000300 .LBB53
     /tmp/ccODRTXI.s:743    .text:0000000000000304 .LBE53
     /tmp/ccODRTXI.s:5131   .debug_loc:000000000000022f .LLST5
     /tmp/ccODRTXI.s:708    .text:00000000000002f4 .LVL43
     /tmp/ccODRTXI.s:766    .text:0000000000000320 .LVL48
     /tmp/ccODRTXI.s:774    .text:000000000000032c .LVL49
     /tmp/ccODRTXI.s:782    .text:0000000000000338 .LVL50
     /tmp/ccODRTXI.s:790    .text:0000000000000344 .LVL51
     /tmp/ccODRTXI.s:798    .text:0000000000000350 .LVL52
     /tmp/ccODRTXI.s:806    .text:000000000000035c .LVL53
     /tmp/ccODRTXI.s:814    .text:0000000000000368 .LVL54
     /tmp/ccODRTXI.s:822    .text:0000000000000374 .LVL55
     /tmp/ccODRTXI.s:830    .text:0000000000000380 .LVL56
     /tmp/ccODRTXI.s:838    .text:000000000000038c .LVL57
     /tmp/ccODRTXI.s:846    .text:0000000000000398 .LVL58
     /tmp/ccODRTXI.s:854    .text:00000000000003a4 .LVL59
     /tmp/ccODRTXI.s:862    .text:00000000000003b0 .LVL60
     /tmp/ccODRTXI.s:270    .text:0000000000000124 .LBB43
     /tmp/ccODRTXI.s:286    .text:0000000000000130 .LBE43
     /tmp/ccODRTXI.s:201    .text:00000000000000cc .LFB46
     /tmp/ccODRTXI.s:230    .text:00000000000000ec .LFE46
     /tmp/ccODRTXI.s:132    .text:0000000000000084 .LFB45
     /tmp/ccODRTXI.s:164    .text:00000000000000a4 .LFE45
     /tmp/ccODRTXI.s:143    .text:0000000000000090 .LBB41
     /tmp/ccODRTXI.s:155    .text:0000000000000098 .LBE41
     /tmp/ccODRTXI.s:5138   .debug_loc:0000000000000252 .LLST1
     /tmp/ccODRTXI.s:94     .text:0000000000000064 .LFB44
     /tmp/ccODRTXI.s:126    .text:0000000000000084 .LFE44
     /tmp/ccODRTXI.s:105    .text:0000000000000070 .LBB39
     /tmp/ccODRTXI.s:117    .text:0000000000000078 .LBE39
     /tmp/ccODRTXI.s:5146   .debug_loc:0000000000000276 .LLST0
     /tmp/ccODRTXI.s:170    .text:00000000000000a4 .LFB43
     /tmp/ccODRTXI.s:195    .text:00000000000000cc .LFE43
     /tmp/ccODRTXI.s:184    .text:00000000000000bc .LVL9
     /tmp/ccODRTXI.s:42     .text:0000000000000028 .LFB42
     /tmp/ccODRTXI.s:88     .text:0000000000000064 .LFE42
     /tmp/ccODRTXI.s:57     .text:0000000000000040 .LBB37
     /tmp/ccODRTXI.s:69     .text:0000000000000044 .LBE37
     /tmp/ccODRTXI.s:73     .text:000000000000004c .LVL3
     /tmp/ccODRTXI.s:77     .text:0000000000000054 .LVL4
     /tmp/ccODRTXI.s:5579   .debug_str:0000000000000d4d .LASF319
     /tmp/ccODRTXI.s:5541   .debug_str:0000000000000c45 .LASF298
     /tmp/ccODRTXI.s:5321   .debug_str:00000000000004a8 .LASF299
     /tmp/ccODRTXI.s:5385   .debug_str:0000000000000712 .LASF300
     /tmp/ccODRTXI.s:5709   .debug_str:00000000000011bd .LASF302
     /tmp/ccODRTXI.s:5619   .debug_str:0000000000000f2b .LASF301
     /tmp/ccODRTXI.s:5339   .debug_str:000000000000057c .LASF303
     /tmp/ccODRTXI.s:5567   .debug_str:0000000000000ce3 .LASF304
     /tmp/ccODRTXI.s:5723   .debug_str:000000000000122e .LASF305
     /tmp/ccODRTXI.s:5363   .debug_str:0000000000000650 .LASF306
     /tmp/ccODRTXI.s:5639   .debug_str:0000000000000fd0 .LASF307
     /tmp/ccODRTXI.s:5613   .debug_str:0000000000000efa .LASF308
     /tmp/ccODRTXI.s:5719   .debug_str:0000000000001211 .LASF320
GAS LISTING /tmp/ccODRTXI.s 			page 52


     /tmp/ccODRTXI.s:5211   .debug_str:000000000000007a .LASF321
     /tmp/ccODRTXI.s:5503   .debug_str:0000000000000aee .LASF309
     /tmp/ccODRTXI.s:5223   .debug_str:00000000000000e2 .LASF310
     /tmp/ccODRTXI.s:5777   .debug_str:000000000000141a .LASF311
     /tmp/ccODRTXI.s:5819   .debug_str:000000000000158e .LASF312
     /tmp/ccODRTXI.s:877    .text:00000000000003b4 .LVL61
     /tmp/ccODRTXI.s:1064   .text:00000000000004fc .LVL78
     /tmp/ccODRTXI.s:284    .text:0000000000000130 .LVL10
     /tmp/ccODRTXI.s:298    .text:0000000000000154 .LVL11
     /tmp/ccODRTXI.s:314    .text:0000000000000160 .LVL12
     /tmp/ccODRTXI.s:438    .text:00000000000001a8 .LVL14
     /tmp/ccODRTXI.s:454    .text:00000000000001c0 .LVL15
     /tmp/ccODRTXI.s:528    .text:0000000000000218 .LVL25
     /tmp/ccODRTXI.s:546    .text:000000000000021c .LVL26
     /tmp/ccODRTXI.s:576    .text:0000000000000238 .LVL27
     /tmp/ccODRTXI.s:586    .text:0000000000000240 .LVL28
     /tmp/ccODRTXI.s:617    .text:0000000000000290 .LVL31
     /tmp/ccODRTXI.s:624    .text:0000000000000294 .LVL32
     /tmp/ccODRTXI.s:635    .text:00000000000002a0 .LVL33
     /tmp/ccODRTXI.s:644    .text:00000000000002a4 .LVL34
     /tmp/ccODRTXI.s:651    .text:00000000000002a8 .LVL35
     /tmp/ccODRTXI.s:663    .text:00000000000002b0 .LVL36
     /tmp/ccODRTXI.s:456    .text:00000000000001c4 .LVL16
     /tmp/ccODRTXI.s:474    .text:00000000000001d0 .LVL17
     /tmp/ccODRTXI.s:488    .text:00000000000001e4 .LVL19
     /tmp/ccODRTXI.s:512    .text:00000000000001fc .LVL21
     /tmp/ccODRTXI.s:480    .text:00000000000001d4 .LVL18
     /tmp/ccODRTXI.s:508    .text:00000000000001f4 .LVL20
     /tmp/ccODRTXI.s:516    .text:0000000000000204 .LVL22
     /tmp/ccODRTXI.s:675    .text:00000000000002c0 .LVL38
     /tmp/ccODRTXI.s:689    .text:00000000000002d4 .LVL39
     /tmp/ccODRTXI.s:698    .text:00000000000002ec .LVL42
     /tmp/ccODRTXI.s:360    .text:0000000000000190 .LVL13
     /tmp/ccODRTXI.s:714    .text:00000000000002f8 .LVL44
     /tmp/ccODRTXI.s:723    .text:00000000000002fc .LVL45
     /tmp/ccODRTXI.s:730    .text:0000000000000300 .LVL46
     /tmp/ccODRTXI.s:739    .text:0000000000000304 .LVL47
     /tmp/ccODRTXI.s:142    .text:0000000000000090 .LVL7
     /tmp/ccODRTXI.s:152    .text:0000000000000098 .LVL8
     /tmp/ccODRTXI.s:104    .text:0000000000000070 .LVL5
     /tmp/ccODRTXI.s:114    .text:0000000000000078 .LVL6
     /tmp/ccODRTXI.s:1231   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccODRTXI.s:306    .text:000000000000015c .LBB46
     /tmp/ccODRTXI.s:440    .text:00000000000001a8 .LBE46
     /tmp/ccODRTXI.s:703    .text:00000000000002ec .LBB74
     /tmp/ccODRTXI.s:744    .text:0000000000000304 .LBE74
     /tmp/ccODRTXI.s:761    .text:0000000000000318 .LBB75
     /tmp/ccODRTXI.s:865    .text:00000000000003b4 .LBE75
     /tmp/ccODRTXI.s:450    .text:00000000000001b8 .LBB55
     /tmp/ccODRTXI.s:530    .text:0000000000000218 .LBE55
     /tmp/ccODRTXI.s:678    .text:00000000000002c0 .LBB73
     /tmp/ccODRTXI.s:702    .text:00000000000002ec .LBE73
     /tmp/ccODRTXI.s:483    .text:00000000000001d8 .LBB57
     /tmp/ccODRTXI.s:518    .text:0000000000000204 .LBE57
     /tmp/ccODRTXI.s:680    .text:00000000000002c0 .LBB58
     /tmp/ccODRTXI.s:700    .text:00000000000002ec .LBE58
     /tmp/ccODRTXI.s:1086   .gcc_except_table:0000000000000000 .LLSDA48
GAS LISTING /tmp/ccODRTXI.s 			page 53



UNDEFINED SYMBOLS
_Z8userMainv
_ZN5Riscv14supervisorTrapEv
_ZN3PCB10initializeEv
_ZN8KConsole10initializeEv
_ZN3PCB10savedRegA4E
_ZN3PCB7runningE
CONSOLE_STATUS
CONSOLE_TX_DATA
_ZN8KConsole11pendingGetcE
plic_claim
plic_complete
_Z12trapPrintIntiii
_ZN3PCB16timeSliceCounterE
_ZN12SleepPCBList13tryToWakePCBsEv
_ZN3PCB8dispatchEv
_ZN8KConsole17putCharacterInputEc
_ZN8KConsole18putCharacterOutputEc
_ZN15MemoryAllocator15memAllocHandlerEv
_ZN15MemoryAllocator14memFreeHandlerEv
_ZN3PCB20threadMakePCBHandlerEv
_ZN3PCB19threadCreateHandlerEv
_ZN3PCB18threadStartHandlerEv
_ZN3PCB21threadDispatchHandlerEv
_ZN3PCB17threadExitHandlerEv
_ZN3PCB18threadSleepHandlerEv
_ZN10KSemaphore14semOpenHandlerEv
_ZN10KSemaphore14semWaitHandlerEv
_ZN10KSemaphore16semSignalHandlerEv
_ZN10KSemaphore15semCloseHandlerEv
_ZN8KConsole11getcHandlerEv
_ZN8KConsole11putcHandlerEv
_Z7myTestsv
_Z7kmallocm
_ZN3PCBnwEm
_ZN3PCBC1EPFvPvES0_S0_m
_ZN3PCB5startEv
_ZN3PCB10isFinishedEv
thread_dispatch
_Z11printStringPKc
_ZN3PCB10consolePCBE
_ZN3PCBdlEPv
_Unwind_Resume
__gxx_personality_v0
