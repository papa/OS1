GAS LISTING /tmp/ccAB5tPZ.s 			page 1


   1              		.file	"Riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10initSystemEv
   9              	_ZN5Riscv10initSystemEv:
  10              	.LFB22:
  11              		.file 1 "src/Riscv.cpp"
   1:src/Riscv.cpp **** //
   2:src/Riscv.cpp **** // Created by os on 4/27/22.
   3:src/Riscv.cpp **** //
   4:src/Riscv.cpp **** 
   5:src/Riscv.cpp **** #include "../h/Riscv.hpp"
   6:src/Riscv.cpp **** #include "../h/MemoryAllocator.hpp"
   7:src/Riscv.cpp **** #include "../h/PCB.hpp"
   8:src/Riscv.cpp **** #include "../lib/console.h"
   9:src/Riscv.cpp **** #include "../h/syscall_cpp.hpp"
  10:src/Riscv.cpp **** #include "../h/SleepPCBList.hpp"
  11:src/Riscv.cpp **** 
  12:src/Riscv.cpp **** //todo
  13:src/Riscv.cpp **** //sta sve treba da se odradi ovde
  14:src/Riscv.cpp **** void Riscv::initSystem()
  15:src/Riscv.cpp **** {
  12              		.loc 1 15 1
  13              		.cfi_startproc
  14              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
  15              		.cfi_lsda 0x1b,.LLSDA22
  16 0000 130101FE 		addi	sp,sp,-32
  17              		.cfi_def_cfa_offset 32
  18 0004 233C1100 		sd	ra,24(sp)
  19 0008 23388100 		sd	s0,16(sp)
  20 000c 23349100 		sd	s1,8(sp)
  21 0010 23302101 		sd	s2,0(sp)
  22              		.cfi_offset 1, -8
  23              		.cfi_offset 8, -16
  24              		.cfi_offset 9, -24
  25              		.cfi_offset 18, -32
  26 0014 13040102 		addi	s0,sp,32
  27              		.cfi_def_cfa 8, 0
  16:src/Riscv.cpp ****     w_stvec((uint64)&Riscv::supervisorTrap);
  28              		.loc 1 16 5
  29              		.loc 1 16 12 is_stmt 0
  30 0018 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
  30      83B70700 
  31              	.LVL0:
  32              	.LBB82:
  33              	.LBB83:
  34              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 4/27/22.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_0_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_0_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/ccAB5tPZ.s 			page 2


   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** class Riscv
  11:src/../h/Riscv.hpp **** {
  12:src/../h/Riscv.hpp **** private:
  13:src/../h/Riscv.hpp **** 
  14:src/../h/Riscv.hpp **** public:
  15:src/../h/Riscv.hpp ****     static void initSystem();
  16:src/../h/Riscv.hpp ****     static void endSystem();
  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp ****     static void enableInterrupts();
  19:src/../h/Riscv.hpp **** 
  20:src/../h/Riscv.hpp ****     static void disableInterrupts();
  21:src/../h/Riscv.hpp **** 
  22:src/../h/Riscv.hpp ****     static void printString(char const *string);
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp ****     static void printInteger(uint64 num);
  25:src/../h/Riscv.hpp **** 
  26:src/../h/Riscv.hpp ****     static void pushRegisters();
  27:src/../h/Riscv.hpp ****     static void popRegisters();
  28:src/../h/Riscv.hpp **** 
  29:src/../h/Riscv.hpp ****     static uint64 r_scause();
  30:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  31:src/../h/Riscv.hpp **** 
  32:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  33:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
  34:src/../h/Riscv.hpp **** 
  35:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  36:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  37:src/../h/Riscv.hpp **** 
  38:src/../h/Riscv.hpp ****     static uint64 r_stval();
  39:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  40:src/../h/Riscv.hpp **** 
  41:src/../h/Riscv.hpp ****     enum BitMaskSip
  42:src/../h/Riscv.hpp ****     {
  43:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  44:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  45:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9),
  46:src/../h/Riscv.hpp ****     };
  47:src/../h/Riscv.hpp **** 
  48:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  49:src/../h/Riscv.hpp **** 
  50:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  51:src/../h/Riscv.hpp **** 
  52:src/../h/Riscv.hpp ****     static uint64 r_sip();
  53:src/../h/Riscv.hpp **** 
  54:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  55:src/../h/Riscv.hpp **** 
  56:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  57:src/../h/Riscv.hpp ****     {
  58:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  59:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  60:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  61:src/../h/Riscv.hpp ****     };
  62:src/../h/Riscv.hpp **** 
  63:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  64:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/ccAB5tPZ.s 			page 3


  65:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  66:src/../h/Riscv.hpp **** 
  67:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  68:src/../h/Riscv.hpp **** 
  69:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp ****     static void popSppSpie();
  72:src/../h/Riscv.hpp **** 
  73:src/../h/Riscv.hpp ****     static void supervisorTrap();
  74:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  75:src/../h/Riscv.hpp **** 
  76:src/../h/Riscv.hpp ****     static const uint64 bntOne = 1UL << 63;;
  77:src/../h/Riscv.hpp ****     static const uint64 bntZero = 0UL;
  78:src/../h/Riscv.hpp ****     static const uint64 timerInterrupt = bntOne + 1UL;
  79:src/../h/Riscv.hpp ****     static const uint64 hwInterrupt = bntOne + 9UL;
  80:src/../h/Riscv.hpp ****     static const uint64 operationInterrupt = bntZero + 2UL;
  81:src/../h/Riscv.hpp ****     static const uint64 addrReadInterrupt = bntZero + 5UL;
  82:src/../h/Riscv.hpp ****     static const uint64 addrWriteInterrupt = bntZero + 7UL;
  83:src/../h/Riscv.hpp ****     static const uint64 ecallUserInterrupt = bntZero + 8UL;
  84:src/../h/Riscv.hpp ****     static const uint64 ecallSystemInterupt = bntZero + 9UL;
  85:src/../h/Riscv.hpp **** };
  86:src/../h/Riscv.hpp **** 
  87:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause() {
  88:src/../h/Riscv.hpp ****     uint64 volatile scause;
  89:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
  90:src/../h/Riscv.hpp ****     return scause;
  91:src/../h/Riscv.hpp **** }
  92:src/../h/Riscv.hpp **** 
  93:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
  94:src/../h/Riscv.hpp ****     __asm__ volatile("csrw scause, %0" : :"r"(scause));
  95:src/../h/Riscv.hpp **** }
  96:src/../h/Riscv.hpp **** 
  97:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc() {
  98:src/../h/Riscv.hpp ****     uint64 volatile sepc;
  99:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 100:src/../h/Riscv.hpp ****     return sepc;
 101:src/../h/Riscv.hpp **** }
 102:src/../h/Riscv.hpp **** 
 103:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
 104:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sepc, %0" : :"r"(sepc));
 105:src/../h/Riscv.hpp **** }
 106:src/../h/Riscv.hpp **** 
 107:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec() {
 108:src/../h/Riscv.hpp ****     uint64 volatile stvec;
 109:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, stvec" : "=r"(stvec));
 110:src/../h/Riscv.hpp ****     return stvec;
 111:src/../h/Riscv.hpp **** }
 112:src/../h/Riscv.hpp **** 
 113:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 114:src/../h/Riscv.hpp ****     __asm__ volatile("csrw stvec, %0" : :"r"(stvec));
  35              		.loc 2 114 5 is_stmt 1
  36              		.loc 2 114 53 is_stmt 0
  37              	#APP
  38              	# 114 "src/../h/Riscv.hpp" 1
 115              	}
  39              		csrw stvec, a5
  40              	# 0 "" 2
GAS LISTING /tmp/ccAB5tPZ.s 			page 4


  41              	.LVL1:
  42              	#NO_APP
  43              	.LBE83:
  44              	.LBE82:
  17:src/Riscv.cpp ****     Thread* t = new Thread(0, 0);
  45              		.loc 1 17 5 is_stmt 1
  46              		.loc 1 17 32 is_stmt 0
  47 0024 13050002 		li	a0,32
  48              	.LEHB0:
  49 0028 97000000 		call	_Znwm@plt
  49      E7800000 
  50              	.LVL2:
  51              	.LEHE0:
  52 0030 93040500 		mv	s1,a0
  53 0034 13060000 		li	a2,0
  54 0038 93050000 		li	a1,0
  55              	.LEHB1:
  56 003c 97000000 		call	_ZN6ThreadC1EPFvPvES0_@plt
  56      E7800000 
  57              	.LVL3:
  58              	.LEHE1:
  18:src/Riscv.cpp ****     t->start();
  59              		.loc 1 18 5 is_stmt 1 discriminator 2
  60              		.loc 1 18 13 is_stmt 0 discriminator 2
  61 0044 13850400 		mv	a0,s1
  62              	.LEHB2:
  63 0048 97000000 		call	_ZN6Thread5startEv@plt
  63      E7800000 
  64              	.LVL4:
  19:src/Riscv.cpp ****     PCB::running = Scheduler::get();
  65              		.loc 1 19 5 is_stmt 1 discriminator 2
  66              		.loc 1 19 34 is_stmt 0 discriminator 2
  67 0050 97000000 		call	_ZN9Scheduler3getEv@plt
  67      E7800000 
  68              	.LVL5:
  69              	.LEHE2:
  70              		.loc 1 19 18 discriminator 2
  71 0058 97070000 		la	a5,_ZN3PCB7runningE
  71      83B70700 
  72 0060 23B0A700 		sd	a0,0(a5)
  20:src/Riscv.cpp ****     PCB::running->setState(PCB::RUNNING);
  73              		.loc 1 20 5 is_stmt 1 discriminator 2
  74              	.LVL6:
  75              	.LBB84:
  76              	.LBB85:
  77              		.file 3 "src/../h/PCB.hpp"
   1:src/../h/PCB.hpp **** //
   2:src/../h/PCB.hpp **** // Created by os on 4/27/22.
   3:src/../h/PCB.hpp **** //
   4:src/../h/PCB.hpp **** 
   5:src/../h/PCB.hpp **** #ifndef PROJECT_BASE_V1_0_PCB_HPP
   6:src/../h/PCB.hpp **** #define PROJECT_BASE_V1_0_PCB_HPP
   7:src/../h/PCB.hpp **** 
   8:src/../h/PCB.hpp **** #include "../lib/hw.h"
   9:src/../h/PCB.hpp **** #include "Scheduler.hpp"
  10:src/../h/PCB.hpp **** #include "Riscv.hpp"
  11:src/../h/PCB.hpp **** 
GAS LISTING /tmp/ccAB5tPZ.s 			page 5


  12:src/../h/PCB.hpp **** class PCB
  13:src/../h/PCB.hpp **** {
  14:src/../h/PCB.hpp **** public:
  15:src/../h/PCB.hpp ****     using Body = void (*)(void*);
  16:src/../h/PCB.hpp **** 
  17:src/../h/PCB.hpp ****     PCB(Body body,  void* args, void* stack_space, uint64 timeSlice);
  18:src/../h/PCB.hpp ****     ~PCB();
  19:src/../h/PCB.hpp **** 
  20:src/../h/PCB.hpp ****     void start();
  21:src/../h/PCB.hpp ****     static void dispatch();
  22:src/../h/PCB.hpp ****     static void sleep(time_t);
  23:src/../h/PCB.hpp **** 
  24:src/../h/PCB.hpp ****     static PCB* running;
  25:src/../h/PCB.hpp ****     static PCB* exitingPCB;
  26:src/../h/PCB.hpp **** 
  27:src/../h/PCB.hpp ****     static uint64 timeSliceCounter;
  28:src/../h/PCB.hpp ****     uint64 getTimeSlice() { return timeSlice;}
  29:src/../h/PCB.hpp **** 
  30:src/../h/PCB.hpp ****     void* operator new(size_t size);
  31:src/../h/PCB.hpp ****     void operator delete(void *p);
  32:src/../h/PCB.hpp **** 
  33:src/../h/PCB.hpp ****     enum State{READY, RUNNING, SUSPENDED, FINISHED, EXITING, SLEEPING};
  34:src/../h/PCB.hpp ****     State getState() {return state;}
  35:src/../h/PCB.hpp ****     void setState(State s) {state = s;}
  78              		.loc 3 35 29 discriminator 2
  79              		.loc 3 35 35 is_stmt 0 discriminator 2
  80 0064 93071000 		li	a5,1
  81 0068 2328F502 		sw	a5,48(a0)
  82              	.LVL7:
  83              	.LBE85:
  84              	.LBE84:
  21:src/Riscv.cpp **** }
  85              		.loc 1 21 1 discriminator 2
  86 006c 83308101 		ld	ra,24(sp)
  87              		.cfi_remember_state
  88              		.cfi_restore 1
  89 0070 03340101 		ld	s0,16(sp)
  90              		.cfi_restore 8
  91              		.cfi_def_cfa 2, 32
  92 0074 83348100 		ld	s1,8(sp)
  93              		.cfi_restore 9
  94              	.LVL8:
  95 0078 03390100 		ld	s2,0(sp)
  96              		.cfi_restore 18
  97 007c 13010102 		addi	sp,sp,32
  98              		.cfi_def_cfa_offset 0
  99 0080 67800000 		jr	ra
 100              	.L3:
 101              		.cfi_restore_state
 102 0084 13090500 		mv	s2,a0
  17:src/Riscv.cpp ****     t->start();
 103              		.loc 1 17 32
 104 0088 13850400 		mv	a0,s1
 105 008c 97000000 		call	_ZdlPv@plt
 105      E7800000 
 106              	.LVL9:
 107 0094 13050900 		mv	a0,s2
GAS LISTING /tmp/ccAB5tPZ.s 			page 6


 108              	.LEHB3:
 109 0098 97000000 		call	_Unwind_Resume@plt
 109      E7800000 
 110              	.LVL10:
 111              	.LEHE3:
 112              		.cfi_endproc
 113              	.LFE22:
 114              		.globl	__gxx_personality_v0
 115              		.section	.gcc_except_table,"a",@progbits
 116              	.LLSDA22:
 117 0000 FF       		.byte	0xff
 118 0001 FF       		.byte	0xff
 119 0002 03       		.byte	0x3
 120 0003 34       		.byte	0x34
 121 0004 00000000 		.4byte	.LEHB0-.LFB22
 122 0008 00000000 		.4byte	.LEHE0-.LEHB0
 123 000c 00000000 		.4byte	0
 124 0010 00       		.byte	0
 125 0011 00000000 		.4byte	.LEHB1-.LFB22
 126 0015 00000000 		.4byte	.LEHE1-.LEHB1
 127 0019 00000000 		.4byte	.L3-.LFB22
 128 001d 00       		.byte	0
 129 001e 00000000 		.4byte	.LEHB2-.LFB22
 130 0022 00000000 		.4byte	.LEHE2-.LEHB2
 131 0026 00000000 		.4byte	0
 132 002a 00       		.byte	0
 133 002b 00000000 		.4byte	.LEHB3-.LFB22
 134 002f 00000000 		.4byte	.LEHE3-.LEHB3
 135 0033 00000000 		.4byte	0
 136 0037 00       		.byte	0
 137              		.text
 139              		.align	2
 140              		.globl	_ZN5Riscv16enableInterruptsEv
 142              	_ZN5Riscv16enableInterruptsEv:
 143              	.LFB24:
  22:src/Riscv.cpp **** 
  23:src/Riscv.cpp **** void Riscv::endSystem() {
  24:src/Riscv.cpp ****     //todo
  25:src/Riscv.cpp ****     //da li treba jos nesto da se ocisti
  26:src/Riscv.cpp ****     Riscv::disableInterrupts();
  27:src/Riscv.cpp **** }
  28:src/Riscv.cpp **** 
  29:src/Riscv.cpp **** 
  30:src/Riscv.cpp **** void Riscv::enableInterrupts() {
 144              		.loc 1 30 32 is_stmt 1
 145              		.cfi_startproc
 146 00a0 130101FF 		addi	sp,sp,-16
 147              		.cfi_def_cfa_offset 16
 148 00a4 23348100 		sd	s0,8(sp)
 149              		.cfi_offset 8, -8
 150 00a8 13040101 		addi	s0,sp,16
 151              		.cfi_def_cfa 8, 0
  31:src/Riscv.cpp ****     ms_sstatus(Riscv::SSTATUS_SIE);
 152              		.loc 1 31 5
 153              	.LVL11:
 154              	.LBB86:
 155              	.LBB87:
GAS LISTING /tmp/ccAB5tPZ.s 			page 7


 116:src/../h/Riscv.hpp **** 
 117:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stval() {
 118:src/../h/Riscv.hpp ****     uint64 volatile stval;
 119:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, stval" : "=r"(stval));
 120:src/../h/Riscv.hpp ****     return stval;
 121:src/../h/Riscv.hpp **** }
 122:src/../h/Riscv.hpp **** 
 123:src/../h/Riscv.hpp **** inline void Riscv::w_stval(uint64 stval) {
 124:src/../h/Riscv.hpp ****     __asm__ volatile("csrw stval, %0" : :"r"(stval));
 125:src/../h/Riscv.hpp **** }
 126:src/../h/Riscv.hpp **** 
 127:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 128:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sip, %0" : :"r"(mask));
 129:src/../h/Riscv.hpp **** }
 130:src/../h/Riscv.hpp **** 
 131:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 132:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sip, %0" : :"r"(mask));
 133:src/../h/Riscv.hpp **** }
 134:src/../h/Riscv.hpp **** 
 135:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip() {
 136:src/../h/Riscv.hpp ****     uint64 volatile sip;
 137:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sip" : "=r"(sip));
 138:src/../h/Riscv.hpp ****     return sip;
 139:src/../h/Riscv.hpp **** }
 140:src/../h/Riscv.hpp **** 
 141:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 142:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sip, %0" : :"r"(sip));
 143:src/../h/Riscv.hpp **** }
 144:src/../h/Riscv.hpp **** 
 145:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 146:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sstatus, %0" : :"r"(mask));
 156              		.loc 2 146 5
 157              		.loc 2 146 54 is_stmt 0
 158 00ac 93072000 		li	a5,2
 159              	#APP
 160              	# 146 "src/../h/Riscv.hpp" 1
 147              	}
 161              		csrs sstatus, a5
 162              	# 0 "" 2
 163              	.LVL12:
 164              	#NO_APP
 165              	.LBE87:
 166              	.LBE86:
  32:src/Riscv.cpp **** }
 167              		.loc 1 32 1
 168 00b4 03348100 		ld	s0,8(sp)
 169              		.cfi_restore 8
 170              		.cfi_def_cfa 2, 16
 171 00b8 13010101 		addi	sp,sp,16
 172              		.cfi_def_cfa_offset 0
 173 00bc 67800000 		jr	ra
 174              		.cfi_endproc
 175              	.LFE24:
 177              		.align	2
 178              		.globl	_ZN5Riscv17disableInterruptsEv
 180              	_ZN5Riscv17disableInterruptsEv:
 181              	.LFB25:
GAS LISTING /tmp/ccAB5tPZ.s 			page 8


  33:src/Riscv.cpp **** 
  34:src/Riscv.cpp **** void Riscv::disableInterrupts()
  35:src/Riscv.cpp **** {
 182              		.loc 1 35 1 is_stmt 1
 183              		.cfi_startproc
 184 00c0 130101FF 		addi	sp,sp,-16
 185              		.cfi_def_cfa_offset 16
 186 00c4 23348100 		sd	s0,8(sp)
 187              		.cfi_offset 8, -8
 188 00c8 13040101 		addi	s0,sp,16
 189              		.cfi_def_cfa 8, 0
  36:src/Riscv.cpp ****     mc_sstatus(Riscv::SSTATUS_SIE);
 190              		.loc 1 36 5
 191              	.LVL13:
 192              	.LBB88:
 193              	.LBB89:
 148:src/../h/Riscv.hpp **** 
 149:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 150:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sstatus, %0" : :"r"(mask));
 194              		.loc 2 150 5
 195              		.loc 2 150 54 is_stmt 0
 196 00cc 93072000 		li	a5,2
 197              	#APP
 198              	# 150 "src/../h/Riscv.hpp" 1
 151              	}
 199              		csrc sstatus, a5
 200              	# 0 "" 2
 201              	.LVL14:
 202              	#NO_APP
 203              	.LBE89:
 204              	.LBE88:
  37:src/Riscv.cpp **** }
 205              		.loc 1 37 1
 206 00d4 03348100 		ld	s0,8(sp)
 207              		.cfi_restore 8
 208              		.cfi_def_cfa 2, 16
 209 00d8 13010101 		addi	sp,sp,16
 210              		.cfi_def_cfa_offset 0
 211 00dc 67800000 		jr	ra
 212              		.cfi_endproc
 213              	.LFE25:
 215              		.align	2
 216              		.globl	_ZN5Riscv9endSystemEv
 218              	_ZN5Riscv9endSystemEv:
 219              	.LFB23:
  23:src/Riscv.cpp ****     //todo
 220              		.loc 1 23 25 is_stmt 1
 221              		.cfi_startproc
 222 00e0 130101FF 		addi	sp,sp,-16
 223              		.cfi_def_cfa_offset 16
 224 00e4 23341100 		sd	ra,8(sp)
 225 00e8 23308100 		sd	s0,0(sp)
 226              		.cfi_offset 1, -8
 227              		.cfi_offset 8, -16
 228 00ec 13040101 		addi	s0,sp,16
 229              		.cfi_def_cfa 8, 0
  26:src/Riscv.cpp **** }
GAS LISTING /tmp/ccAB5tPZ.s 			page 9


 230              		.loc 1 26 5
  26:src/Riscv.cpp **** }
 231              		.loc 1 26 29 is_stmt 0
 232 00f0 97000000 		call	_ZN5Riscv17disableInterruptsEv
 232      E7800000 
 233              	.LVL15:
  27:src/Riscv.cpp **** 
 234              		.loc 1 27 1
 235 00f8 83308100 		ld	ra,8(sp)
 236              		.cfi_restore 1
 237 00fc 03340100 		ld	s0,0(sp)
 238              		.cfi_restore 8
 239              		.cfi_def_cfa 2, 16
 240 0100 13010101 		addi	sp,sp,16
 241              		.cfi_def_cfa_offset 0
 242 0104 67800000 		jr	ra
 243              		.cfi_endproc
 244              	.LFE23:
 246              		.align	2
 247              		.globl	_ZN5Riscv10popSppSpieEv
 249              	_ZN5Riscv10popSppSpieEv:
 250              	.LFB26:
  38:src/Riscv.cpp **** 
  39:src/Riscv.cpp **** void Riscv::popSppSpie() {
 251              		.loc 1 39 26 is_stmt 1
 252              		.cfi_startproc
 253 0108 130101FF 		addi	sp,sp,-16
 254              		.cfi_def_cfa_offset 16
 255 010c 23348100 		sd	s0,8(sp)
 256              		.cfi_offset 8, -8
 257 0110 13040101 		addi	s0,sp,16
 258              		.cfi_def_cfa 8, 0
  40:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
 259              		.loc 1 40 5
 260              		.loc 1 40 39 is_stmt 0
 261              	#APP
 262              	# 40 "src/Riscv.cpp" 1
  41              	    __asm__ volatile ("sret");
 263              		csrw sepc, ra
 264              	# 0 "" 2
 265              		.loc 1 41 5 is_stmt 1
 266              		.loc 1 41 30 is_stmt 0
 267              	# 41 "src/Riscv.cpp" 1
  42              	}
 268              		sret
 269              	# 0 "" 2
 270              		.loc 1 42 1
 271              	#NO_APP
 272 011c 03348100 		ld	s0,8(sp)
 273              		.cfi_restore 8
 274              		.cfi_def_cfa 2, 16
 275 0120 13010101 		addi	sp,sp,16
 276              		.cfi_def_cfa_offset 0
 277 0124 67800000 		jr	ra
 278              		.cfi_endproc
 279              	.LFE26:
 281              		.align	2
GAS LISTING /tmp/ccAB5tPZ.s 			page 10


 282              		.globl	_ZN5Riscv11printStringEPKc
 284              	_ZN5Riscv11printStringEPKc:
 285              	.LFB27:
  43:src/Riscv.cpp **** 
  44:src/Riscv.cpp **** void Riscv::printString(const char *string)
  45:src/Riscv.cpp **** {
 286              		.loc 1 45 1 is_stmt 1
 287              		.cfi_startproc
 288              	.LVL16:
 289 0128 130101FD 		addi	sp,sp,-48
 290              		.cfi_def_cfa_offset 48
 291 012c 23341102 		sd	ra,40(sp)
 292 0130 23308102 		sd	s0,32(sp)
 293 0134 233C9100 		sd	s1,24(sp)
 294 0138 23382101 		sd	s2,16(sp)
 295              		.cfi_offset 1, -8
 296              		.cfi_offset 8, -16
 297              		.cfi_offset 9, -24
 298              		.cfi_offset 18, -32
 299 013c 13040103 		addi	s0,sp,48
 300              		.cfi_def_cfa 8, 0
 301 0140 93040500 		mv	s1,a0
  46:src/Riscv.cpp ****     uint64 sstatus = r_sstatus();
 302              		.loc 1 46 5
 303              	.LBB90:
 304              	.LBB91:
 152:src/../h/Riscv.hpp **** 
 153:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sstatus() {
 154:src/../h/Riscv.hpp ****     uint64 volatile sstatus;
 305              		.loc 2 154 5
 155:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 306              		.loc 2 155 5
 307              		.loc 2 155 57 is_stmt 0
 308              	#APP
 309              	# 155 "src/../h/Riscv.hpp" 1
 156              	    return sstatus;
 310              		csrr a5, sstatus
 311              	# 0 "" 2
 312              	#NO_APP
 313 0148 233CF4FC 		sd	a5,-40(s0)
 314              		.loc 2 156 5 is_stmt 1
 315              		.loc 2 156 12 is_stmt 0
 316 014c 033984FD 		ld	s2,-40(s0)
 317              	.LVL17:
 318              	.LBE91:
 319              	.LBE90:
  47:src/Riscv.cpp ****     mc_sstatus(SSTATUS_SIE);
 320              		.loc 1 47 5 is_stmt 1
 321              	.LBB92:
 322              	.LBB93:
 150:src/../h/Riscv.hpp **** }
 323              		.loc 2 150 5
 150:src/../h/Riscv.hpp **** }
 324              		.loc 2 150 54 is_stmt 0
 325 0150 93072000 		li	a5,2
 326              	#APP
 327              	# 150 "src/../h/Riscv.hpp" 1
GAS LISTING /tmp/ccAB5tPZ.s 			page 11


 328              		csrc sstatus, a5
 329              	# 0 "" 2
 330              	.LVL18:
 331              	#NO_APP
 332              	.L16:
 333              	.LBE93:
 334              	.LBE92:
  48:src/Riscv.cpp ****     while (*string != '\0')
 335              		.loc 1 48 5 is_stmt 1
 336              		.loc 1 48 20
 337              		.loc 1 48 12 is_stmt 0
 338 0158 03C50400 		lbu	a0,0(s1)
 339              		.loc 1 48 20
 340 015c 630A0500 		beqz	a0,.L15
  49:src/Riscv.cpp ****     {
  50:src/Riscv.cpp ****         __putc(*string);
 341              		.loc 1 50 9 is_stmt 1
 342              		.loc 1 50 15 is_stmt 0
 343 0160 97000000 		call	__putc@plt
 343      E7800000 
 344              	.LVL19:
  51:src/Riscv.cpp ****         string++;
 345              		.loc 1 51 9 is_stmt 1
 346              		.loc 1 51 15 is_stmt 0
 347 0168 93841400 		addi	s1,s1,1
 348              	.LVL20:
  48:src/Riscv.cpp ****     while (*string != '\0')
 349              		.loc 1 48 5
 350 016c 6FF0DFFE 		j	.L16
 351              	.L15:
  52:src/Riscv.cpp ****     }
  53:src/Riscv.cpp ****     ms_sstatus(sstatus & SSTATUS_SIE ? SSTATUS_SIE : 0);
 352              		.loc 1 53 5 is_stmt 1
 353              		.loc 1 53 38 is_stmt 0
 354 0170 1B090900 		sext.w	s2,s2
 355              	.LVL21:
 356              		.loc 1 53 15
 357 0174 13792900 		andi	s2,s2,2
 358 0178 1B090900 		sext.w	s2,s2
 359              	.LVL22:
 360              	.LBB94:
 361              	.LBB95:
 146:src/../h/Riscv.hpp **** }
 362              		.loc 2 146 5 is_stmt 1
 146:src/../h/Riscv.hpp **** }
 363              		.loc 2 146 54 is_stmt 0
 364              	#APP
 365              	# 146 "src/../h/Riscv.hpp" 1
 366              		csrs sstatus, s2
 367              	# 0 "" 2
 368              	.LVL23:
 369              	#NO_APP
 370              	.LBE95:
 371              	.LBE94:
  54:src/Riscv.cpp **** }
 372              		.loc 1 54 1
 373 0180 83308102 		ld	ra,40(sp)
GAS LISTING /tmp/ccAB5tPZ.s 			page 12


 374              		.cfi_restore 1
 375 0184 03340102 		ld	s0,32(sp)
 376              		.cfi_restore 8
 377              		.cfi_def_cfa 2, 48
 378 0188 83348101 		ld	s1,24(sp)
 379              		.cfi_restore 9
 380              	.LVL24:
 381 018c 03390101 		ld	s2,16(sp)
 382              		.cfi_restore 18
 383 0190 13010103 		addi	sp,sp,48
 384              		.cfi_def_cfa_offset 0
 385 0194 67800000 		jr	ra
 386              		.cfi_endproc
 387              	.LFE27:
 389              		.align	2
 390              		.globl	_ZN5Riscv12printIntegerEm
 392              	_ZN5Riscv12printIntegerEm:
 393              	.LFB28:
  55:src/Riscv.cpp **** 
  56:src/Riscv.cpp **** void Riscv::printInteger(uint64 num)
  57:src/Riscv.cpp **** {
 394              		.loc 1 57 1 is_stmt 1
 395              		.cfi_startproc
 396              	.LVL25:
 397 0198 130101FC 		addi	sp,sp,-64
 398              		.cfi_def_cfa_offset 64
 399 019c 233C1102 		sd	ra,56(sp)
 400 01a0 23388102 		sd	s0,48(sp)
 401 01a4 23349102 		sd	s1,40(sp)
 402 01a8 23302103 		sd	s2,32(sp)
 403              		.cfi_offset 1, -8
 404              		.cfi_offset 8, -16
 405              		.cfi_offset 9, -24
 406              		.cfi_offset 18, -32
 407 01ac 13040104 		addi	s0,sp,64
 408              		.cfi_def_cfa 8, 0
  58:src/Riscv.cpp ****     uint64 sstatus = r_sstatus();
 409              		.loc 1 58 5
 410              	.LBB96:
 411              	.LBB97:
 154:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 412              		.loc 2 154 5
 155:src/../h/Riscv.hpp ****     return sstatus;
 413              		.loc 2 155 5
 155:src/../h/Riscv.hpp ****     return sstatus;
 414              		.loc 2 155 57 is_stmt 0
 415              	#APP
 416              	# 155 "src/../h/Riscv.hpp" 1
 417              		csrr a5, sstatus
 418              	# 0 "" 2
 419              	#NO_APP
 420 01b4 2334F4FC 		sd	a5,-56(s0)
 421              		.loc 2 156 5 is_stmt 1
 422              		.loc 2 156 12 is_stmt 0
 423 01b8 033984FC 		ld	s2,-56(s0)
 424              	.LVL26:
 425              	.LBE97:
GAS LISTING /tmp/ccAB5tPZ.s 			page 13


 426              	.LBE96:
  59:src/Riscv.cpp ****     mc_sstatus(SSTATUS_SIE);
 427              		.loc 1 59 5 is_stmt 1
 428              	.LBB98:
 429              	.LBB99:
 150:src/../h/Riscv.hpp **** }
 430              		.loc 2 150 5
 150:src/../h/Riscv.hpp **** }
 431              		.loc 2 150 54 is_stmt 0
 432 01bc 93072000 		li	a5,2
 433              	#APP
 434              	# 150 "src/../h/Riscv.hpp" 1
 435              		csrc sstatus, a5
 436              	# 0 "" 2
 437              	.LVL27:
 438              	#NO_APP
 439              	.LBE99:
 440              	.LBE98:
  60:src/Riscv.cpp ****     static char digits[] = "0123456789";
 441              		.loc 1 60 5 is_stmt 1
  61:src/Riscv.cpp ****     char buf[16];
 442              		.loc 1 61 5
  62:src/Riscv.cpp ****     int i, neg;
 443              		.loc 1 62 5
  63:src/Riscv.cpp ****     uint x;
 444              		.loc 1 63 5
  64:src/Riscv.cpp **** 
  65:src/Riscv.cpp ****     neg = 0;
 445              		.loc 1 65 5
  66:src/Riscv.cpp ****     if(num < 0)
 446              		.loc 1 66 5
  67:src/Riscv.cpp ****     {
  68:src/Riscv.cpp ****         neg = 1;
  69:src/Riscv.cpp ****         x = -num;
  70:src/Riscv.cpp ****     }
  71:src/Riscv.cpp ****     else
  72:src/Riscv.cpp ****         x = num;
 447              		.loc 1 72 9
 448              		.loc 1 72 11 is_stmt 0
 449 01c4 1B050500 		sext.w	a0,a0
 450              	.LVL28:
  73:src/Riscv.cpp **** 
  74:src/Riscv.cpp ****     i = 0;
 451              		.loc 1 74 5 is_stmt 1
 452              		.loc 1 74 7 is_stmt 0
 453 01c8 93040000 		li	s1,0
 454              	.LVL29:
 455              	.L19:
  75:src/Riscv.cpp ****     do
 456              		.loc 1 75 5 is_stmt 1
  76:src/Riscv.cpp ****     {
  77:src/Riscv.cpp ****         buf[i++] = digits[x%10];
 457              		.loc 1 77 9
 458              		.loc 1 77 28 is_stmt 0
 459 01cc 1306A000 		li	a2,10
 460 01d0 3B77C502 		remuw	a4,a0,a2
 461              	.LVL30:
GAS LISTING /tmp/ccAB5tPZ.s 			page 14


 462              		.loc 1 77 31
 463 01d4 93160702 		slli	a3,a4,32
 464 01d8 93D60602 		srli	a3,a3,32
 465 01dc 17070000 		lla	a4,.LANCHOR0
 465      13070700 
 466 01e4 3307D700 		add	a4,a4,a3
 467 01e8 03470700 		lbu	a4,0(a4)
 468              		.loc 1 77 18
 469 01ec 930604FE 		addi	a3,s0,-32
 470 01f0 B3879600 		add	a5,a3,s1
 471 01f4 9B841400 		addiw	s1,s1,1
 472              	.LVL31:
 473 01f8 2388E7FE 		sb	a4,-16(a5)
  78:src/Riscv.cpp ****     }while((x/=10) != 0);
 474              		.loc 1 78 20 is_stmt 1
 475 01fc 1B070500 		sext.w	a4,a0
 476              		.loc 1 78 14 is_stmt 0
 477 0200 3B55C502 		divuw	a0,a0,a2
 478              	.LVL32:
 479              		.loc 1 78 20
 480 0204 93079000 		li	a5,9
 481 0208 E3E2E7FC 		bgtu	a4,a5,.L19
 482              	.LVL33:
 483              	.L21:
  79:src/Riscv.cpp ****     if(neg)
  80:src/Riscv.cpp ****         buf[i++] = '-';
  81:src/Riscv.cpp **** 
  82:src/Riscv.cpp ****     while(--i >= 0)
 484              		.loc 1 82 5 is_stmt 1
 485              		.loc 1 82 15
 486 020c 9B84F4FF 		addiw	s1,s1,-1
 487              	.LVL34:
 488 0210 63CE0400 		bltz	s1,.L20
  83:src/Riscv.cpp ****         __putc(buf[i]);
 489              		.loc 1 83 9
 490              		.loc 1 83 15 is_stmt 0
 491 0214 930704FE 		addi	a5,s0,-32
 492 0218 B3879700 		add	a5,a5,s1
 493 021c 03C507FF 		lbu	a0,-16(a5)
 494 0220 97000000 		call	__putc@plt
 494      E7800000 
 495              	.LVL35:
 496 0228 6FF05FFE 		j	.L21
 497              	.L20:
  84:src/Riscv.cpp **** 
  85:src/Riscv.cpp ****     __putc('\n');
 498              		.loc 1 85 5 is_stmt 1
 499              		.loc 1 85 11 is_stmt 0
 500 022c 1305A000 		li	a0,10
 501 0230 97000000 		call	__putc@plt
 501      E7800000 
 502              	.LVL36:
  86:src/Riscv.cpp **** 
  87:src/Riscv.cpp ****     ms_sstatus(sstatus & SSTATUS_SIE ? SSTATUS_SIE : 0);
 503              		.loc 1 87 5 is_stmt 1
 504              		.loc 1 87 38 is_stmt 0
 505 0238 1B090900 		sext.w	s2,s2
GAS LISTING /tmp/ccAB5tPZ.s 			page 15


 506              	.LVL37:
 507              		.loc 1 87 15
 508 023c 13792900 		andi	s2,s2,2
 509 0240 1B090900 		sext.w	s2,s2
 510              	.LVL38:
 511              	.LBB100:
 512              	.LBB101:
 146:src/../h/Riscv.hpp **** }
 513              		.loc 2 146 5 is_stmt 1
 146:src/../h/Riscv.hpp **** }
 514              		.loc 2 146 54 is_stmt 0
 515              	#APP
 516              	# 146 "src/../h/Riscv.hpp" 1
 517              		csrs sstatus, s2
 518              	# 0 "" 2
 519              	.LVL39:
 520              	#NO_APP
 521              	.LBE101:
 522              	.LBE100:
  88:src/Riscv.cpp **** }
 523              		.loc 1 88 1
 524 0248 83308103 		ld	ra,56(sp)
 525              		.cfi_restore 1
 526 024c 03340103 		ld	s0,48(sp)
 527              		.cfi_restore 8
 528              		.cfi_def_cfa 2, 64
 529 0250 83348102 		ld	s1,40(sp)
 530              		.cfi_restore 9
 531 0254 03390102 		ld	s2,32(sp)
 532              		.cfi_restore 18
 533 0258 13010104 		addi	sp,sp,64
 534              		.cfi_def_cfa_offset 0
 535 025c 67800000 		jr	ra
 536              		.cfi_endproc
 537              	.LFE28:
 539              		.section	.rodata.str1.8,"aMS",@progbits,1
 540              		.align	3
 541              	.LC0:
 542 0000 48617264 		.string	"Hardware interrupt...\n"
 542      77617265 
 542      20696E74 
 542      65727275 
 542      70742E2E 
 543              		.text
 544              		.align	2
 545              		.globl	_ZN5Riscv20handleSupervisorTrapEv
 547              	_ZN5Riscv20handleSupervisorTrapEv:
 548              	.LFB29:
  89:src/Riscv.cpp **** 
  90:src/Riscv.cpp **** void Riscv::handleSupervisorTrap()
  91:src/Riscv.cpp **** {
 549              		.loc 1 91 1 is_stmt 1
 550              		.cfi_startproc
 551              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 552              		.cfi_lsda 0x1b,.LLSDA29
 553 0260 130101F8 		addi	sp,sp,-128
 554              		.cfi_def_cfa_offset 128
GAS LISTING /tmp/ccAB5tPZ.s 			page 16


 555 0264 233C1106 		sd	ra,120(sp)
 556 0268 23388106 		sd	s0,112(sp)
 557 026c 23349106 		sd	s1,104(sp)
 558 0270 23302107 		sd	s2,96(sp)
 559 0274 233C3105 		sd	s3,88(sp)
 560 0278 23384105 		sd	s4,80(sp)
 561 027c 23345105 		sd	s5,72(sp)
 562 0280 23306105 		sd	s6,64(sp)
 563              		.cfi_offset 1, -8
 564              		.cfi_offset 8, -16
 565              		.cfi_offset 9, -24
 566              		.cfi_offset 18, -32
 567              		.cfi_offset 19, -40
 568              		.cfi_offset 20, -48
 569              		.cfi_offset 21, -56
 570              		.cfi_offset 22, -64
 571 0284 13040108 		addi	s0,sp,128
 572              		.cfi_def_cfa 8, 0
  92:src/Riscv.cpp ****     uint64 a4;
 573              		.loc 1 92 5
  93:src/Riscv.cpp ****     __asm__ volatile("mv %0, a4" : "=r"(a4));
 574              		.loc 1 93 5
 575              		.loc 1 93 45 is_stmt 0
 576              	#APP
 577              	# 93 "src/Riscv.cpp" 1
  94              	
 578              		mv s1, a4
 579              	# 0 "" 2
 580              	.LVL40:
  95:src/Riscv.cpp ****     uint64 scause = Riscv::r_scause();
 581              		.loc 1 95 5 is_stmt 1
 582              	#NO_APP
 583              	.LBB102:
 584              	.LBB103:
  88:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
 585              		.loc 2 88 5
  89:src/../h/Riscv.hpp ****     return scause;
 586              		.loc 2 89 5
  89:src/../h/Riscv.hpp ****     return scause;
 587              		.loc 2 89 55 is_stmt 0
 588              	#APP
 589              	# 89 "src/../h/Riscv.hpp" 1
 590              		csrr a5, scause
 591              	# 0 "" 2
 592              	#NO_APP
 593 0290 2334F4F8 		sd	a5,-120(s0)
  90:src/../h/Riscv.hpp **** }
 594              		.loc 2 90 5 is_stmt 1
  90:src/../h/Riscv.hpp **** }
 595              		.loc 2 90 12 is_stmt 0
 596 0294 833784F8 		ld	a5,-120(s0)
 597              	.LVL41:
 598              	.LBE103:
 599              	.LBE102:
  96:src/Riscv.cpp **** 
  97:src/Riscv.cpp ****     switch(scause)
 600              		.loc 1 97 5 is_stmt 1
GAS LISTING /tmp/ccAB5tPZ.s 			page 17


 601              	.LBB104:
 602 0298 1307F0FF 		li	a4,-1
 603 029c 1317F703 		slli	a4,a4,63
 604 02a0 13071700 		addi	a4,a4,1
 605 02a4 638EE70E 		beq	a5,a4,.L24
 606 02a8 1307F0FF 		li	a4,-1
 607 02ac 1317F703 		slli	a4,a4,63
 608 02b0 13071700 		addi	a4,a4,1
 609 02b4 636EF708 		bgtu	a5,a4,.L25
 610 02b8 938787FF 		addi	a5,a5,-8
 611              	.LVL42:
 612 02bc 13071000 		li	a4,1
 613 02c0 6368F70A 		bgtu	a5,a4,.L26
 614              	.LBB105:
  98:src/Riscv.cpp ****     {
  99:src/Riscv.cpp **** 
 100:src/Riscv.cpp ****         case timerInterrupt:
 101:src/Riscv.cpp **** 
 102:src/Riscv.cpp ****             Riscv::mc_sip(Riscv::SIP_SSIP);
 103:src/Riscv.cpp ****             //Riscv::printString("timerInterrupt\n");
 104:src/Riscv.cpp **** 
 105:src/Riscv.cpp ****             PCB::timeSliceCounter++;
 106:src/Riscv.cpp **** 
 107:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
 108:src/Riscv.cpp **** 
 109:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
 110:src/Riscv.cpp ****             {
 111:src/Riscv.cpp ****                 uint64 sepc = Riscv::r_sepc();
 112:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 113:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 114:src/Riscv.cpp ****                 PCB::dispatch();
 115:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 116:src/Riscv.cpp ****                 Riscv::w_sepc(sepc);
 117:src/Riscv.cpp ****             }
 118:src/Riscv.cpp **** 
 119:src/Riscv.cpp ****             break;
 120:src/Riscv.cpp **** 
 121:src/Riscv.cpp ****         case hwInterrupt: // todo
 122:src/Riscv.cpp **** 
 123:src/Riscv.cpp ****             Riscv::printString("Hardware interrupt...\n");
 124:src/Riscv.cpp **** 
 125:src/Riscv.cpp ****             break;
 126:src/Riscv.cpp **** 
 127:src/Riscv.cpp ****         case operationInterrupt: // todo
 128:src/Riscv.cpp ****             break;
 129:src/Riscv.cpp **** 
 130:src/Riscv.cpp ****         case addrReadInterrupt: // todo
 131:src/Riscv.cpp ****             break;
 132:src/Riscv.cpp **** 
 133:src/Riscv.cpp ****         case addrWriteInterrupt: // todo
 134:src/Riscv.cpp ****             break;
 135:src/Riscv.cpp **** 
 136:src/Riscv.cpp ****         case ecallSystemInterupt:
 615              		.loc 1 136 9
 137:src/Riscv.cpp ****         case ecallUserInterrupt:
 616              		.loc 1 137 9
 138:src/Riscv.cpp **** 
GAS LISTING /tmp/ccAB5tPZ.s 			page 18


 139:src/Riscv.cpp ****             uint64 operation;
 617              		.loc 1 139 13
 140:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
 618              		.loc 1 140 13
 619              		.loc 1 140 61 is_stmt 0
 620              	#APP
 621              	# 140 "src/Riscv.cpp" 1
 141              	
 622              		mv a5, a0
 623              	# 0 "" 2
 624              	.LVL43:
 142:src/Riscv.cpp ****             uint64 sepc = Riscv::r_sepc();
 625              		.loc 1 142 13 is_stmt 1
 626              	#NO_APP
 627              	.LBB106:
 628              	.LBB107:
  98:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 629              		.loc 2 98 5
  99:src/../h/Riscv.hpp ****     return sepc;
 630              		.loc 2 99 5
  99:src/../h/Riscv.hpp ****     return sepc;
 631              		.loc 2 99 51 is_stmt 0
 632              	#APP
 633              	# 99 "src/../h/Riscv.hpp" 1
 634              		csrr a4, sepc
 635              	# 0 "" 2
 636              	#NO_APP
 637 02cc 2330E4FA 		sd	a4,-96(s0)
 100:src/../h/Riscv.hpp **** }
 638              		.loc 2 100 5 is_stmt 1
 100:src/../h/Riscv.hpp **** }
 639              		.loc 2 100 12 is_stmt 0
 640 02d0 033704FA 		ld	a4,-96(s0)
 641              	.LVL44:
 642              	.LBE107:
 643              	.LBE106:
 143:src/Riscv.cpp ****             sepc+=4;
 644              		.loc 1 143 13 is_stmt 1
 645              		.loc 1 143 17 is_stmt 0
 646 02d4 13094700 		addi	s2,a4,4
 647              	.LVL45:
 144:src/Riscv.cpp **** 
 145:src/Riscv.cpp ****             if(operation == MemoryAllocator::MEM_ALLOC)
 648              		.loc 1 145 13 is_stmt 1
 649              	.LBB108:
 650 02d8 13071000 		li	a4,1
 651 02dc 638CE712 		beq	a5,a4,.L50
 652              	.LBE108:
 653              	.LBE105:
 654              	.LBE104:
 146:src/Riscv.cpp ****             {
 147:src/Riscv.cpp ****                 size_t size;
 148:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(size));
 149:src/Riscv.cpp ****                 size*=MEM_BLOCK_SIZE;
 150:src/Riscv.cpp ****                 void* allocatedAddr = kmalloc(size);
 151:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : : "r"((uint64)allocatedAddr));
 152:src/Riscv.cpp ****             }
GAS LISTING /tmp/ccAB5tPZ.s 			page 19


 153:src/Riscv.cpp ****             else if(operation == MemoryAllocator::MEM_FREE)
 655              		.loc 1 153 18
 656              	.LBB239:
 657              	.LBB227:
 658              	.LBB199:
 659              	.LBB109:
 660 02e0 13072000 		li	a4,2
 661 02e4 6386E714 		beq	a5,a4,.L51
 662              	.LBE109:
 663              	.LBE199:
 664              	.LBE227:
 665              	.LBE239:
 154:src/Riscv.cpp ****             {
 155:src/Riscv.cpp ****                 uint64 addr = 0;
 156:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(addr));
 157:src/Riscv.cpp ****                 uint64 retval = kfree((void*)addr);
 158:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 159:src/Riscv.cpp ****             }
 160:src/Riscv.cpp ****             else if(operation == PCB::THREAD_CREATE)
 666              		.loc 1 160 18
 667              	.LBB240:
 668              	.LBB228:
 669              	.LBB200:
 670              	.LBB188:
 671              	.LBB110:
 672 02e8 13071001 		li	a4,17
 673 02ec 638CE714 		beq	a5,a4,.L52
 674              	.LBE110:
 675              	.LBE188:
 676              	.LBE200:
 677              	.LBE228:
 678              	.LBE240:
 161:src/Riscv.cpp ****             {
 162:src/Riscv.cpp ****                 uint64 start_routine;
 163:src/Riscv.cpp ****                 uint64 args;
 164:src/Riscv.cpp ****                 PCB** threadHandle;
 165:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(threadHandle));
 166:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(start_routine));
 167:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a3" : "=r"(args));
 168:src/Riscv.cpp ****                 //todo
 169:src/Riscv.cpp ****                 //uint64 stack_space;
 170:src/Riscv.cpp ****                 //__asm__ volatile("mv %0, a4" : "=r"(stack_space));
 171:src/Riscv.cpp **** 
 172:src/Riscv.cpp ****                 PCB* newPCB = new PCB((void (*)(void*))start_routine, (void*)args, (void*)a4, DEFAU
 173:src/Riscv.cpp **** 
 174:src/Riscv.cpp ****                 (*threadHandle) = newPCB;
 175:src/Riscv.cpp **** 
 176:src/Riscv.cpp ****                 if(newPCB == 0)
 177:src/Riscv.cpp ****                     __asm__ volatile("li a0, 0xffffffffffffffff");
 178:src/Riscv.cpp ****                 else
 179:src/Riscv.cpp ****                     __asm__ volatile("li a0, 0");
 180:src/Riscv.cpp ****             }
 181:src/Riscv.cpp ****             else if(operation == PCB::THREAD_DISPATCH)
 679              		.loc 1 181 18
 680              	.LBB241:
 681              	.LBB229:
 682              	.LBB201:
GAS LISTING /tmp/ccAB5tPZ.s 			page 20


 683              	.LBB189:
 684              	.LBB178:
 685              	.LBB111:
 686 02f0 13073001 		li	a4,19
 687 02f4 638EE718 		beq	a5,a4,.L53
 688              	.LBE111:
 689              	.LBE178:
 690              	.LBE189:
 691              	.LBE201:
 692              	.LBE229:
 693              	.LBE241:
 182:src/Riscv.cpp ****             {
 183:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 184:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 185:src/Riscv.cpp ****                 PCB::dispatch();
 186:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 187:src/Riscv.cpp ****             }
 188:src/Riscv.cpp ****             else if(operation == PCB::THREAD_EXIT)
 694              		.loc 1 188 18
 695              	.LBB242:
 696              	.LBB230:
 697              	.LBB202:
 698              	.LBB190:
 699              	.LBB179:
 700              	.LBB167:
 701              	.LBB112:
 702 02f8 13072001 		li	a4,18
 703 02fc 638EE71A 		beq	a5,a4,.L54
 704              	.LBE112:
 705              	.LBE167:
 706              	.LBE179:
 707              	.LBE190:
 708              	.LBE202:
 709              	.LBE230:
 710              	.LBE242:
 189:src/Riscv.cpp ****             {
 190:src/Riscv.cpp ****                 if(PCB::running == 0)
 191:src/Riscv.cpp ****                 {
 192:src/Riscv.cpp ****                     __asm__ volatile("li a0, 0xffffffffffffffff");
 193:src/Riscv.cpp ****                     return;
 194:src/Riscv.cpp ****                 }
 195:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 196:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 197:src/Riscv.cpp ****                 PCB::running->setState(PCB::EXITING);
 198:src/Riscv.cpp ****                 PCB::running->setState(PCB::FINISHED);
 199:src/Riscv.cpp ****                 PCB::dispatch();
 200:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 201:src/Riscv.cpp ****             }
 202:src/Riscv.cpp ****             else if(operation == PCB::TIME_SLEEP)
 711              		.loc 1 202 18
 712              	.LBB243:
 713              	.LBB231:
 714              	.LBB203:
 715              	.LBB191:
 716              	.LBB180:
 717              	.LBB168:
 718              	.LBB154:
GAS LISTING /tmp/ccAB5tPZ.s 			page 21


 719              	.LBB113:
 720 0300 13071003 		li	a4,49
 721 0304 6384E720 		beq	a5,a4,.L55
 722              	.LBE113:
 723              	.LBE154:
 724              	.LBE168:
 725              	.LBE180:
 726              	.LBE191:
 727              	.LBE203:
 728              	.LBE231:
 729              	.LBE243:
 203:src/Riscv.cpp ****             {
 204:src/Riscv.cpp ****                 uint64 time;
 205:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(time));
 206:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 207:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 208:src/Riscv.cpp ****                 PCB::running->setTimeToSleep(time);
 209:src/Riscv.cpp ****                 SleepPCBList::insertSleepingPCB();
 210:src/Riscv.cpp ****                 PCB::dispatch();
 211:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 212:src/Riscv.cpp ****                 //todo
 213:src/Riscv.cpp ****                 //kad treba vratiti kod greske
 214:src/Riscv.cpp ****                 __asm__ volatile("li a0, 0x0");
 215:src/Riscv.cpp ****             }
 216:src/Riscv.cpp ****             else if(operation == KSemaphore::SEM_OPEN)
 730              		.loc 1 216 18
 731              	.LBB244:
 732              	.LBB232:
 733              	.LBB204:
 734              	.LBB192:
 735              	.LBB181:
 736              	.LBB169:
 737              	.LBB155:
 738              	.LBB140:
 739              	.LBB114:
 740 0308 13071002 		li	a4,33
 741 030c 6384E724 		beq	a5,a4,.L56
 742              	.LBE114:
 743              	.LBE140:
 744              	.LBE155:
 745              	.LBE169:
 746              	.LBE181:
 747              	.LBE192:
 748              	.LBE204:
 749              	.LBE232:
 750              	.LBE244:
 217:src/Riscv.cpp ****             {
 218:src/Riscv.cpp ****                 uint64 val;
 219:src/Riscv.cpp ****                 KSemaphore** semaphoreHandle;
 220:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(semaphoreHandle));
 221:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(val));
 222:src/Riscv.cpp **** 
 223:src/Riscv.cpp ****                 KSemaphore* newSem = new KSemaphore(val);
 224:src/Riscv.cpp **** 
 225:src/Riscv.cpp ****                 (*semaphoreHandle) = newSem;
 226:src/Riscv.cpp **** 
 227:src/Riscv.cpp ****                 if(newSem == 0)
GAS LISTING /tmp/ccAB5tPZ.s 			page 22


 228:src/Riscv.cpp ****                         __asm__ volatile("li a0, 0xffffffffffffffff");
 229:src/Riscv.cpp ****                 else
 230:src/Riscv.cpp ****                         __asm__ volatile("li a0, 0");
 231:src/Riscv.cpp **** 
 232:src/Riscv.cpp ****             }
 233:src/Riscv.cpp ****             else if(operation == KSemaphore::SEM_WAIT)
 751              		.loc 1 233 18
 752              	.LBB245:
 753              	.LBB233:
 754              	.LBB205:
 755              	.LBB193:
 756              	.LBB182:
 757              	.LBB170:
 758              	.LBB156:
 759              	.LBB141:
 760              	.LBB128:
 761              	.LBB115:
 762 0310 13073002 		li	a4,35
 763 0314 638EE726 		beq	a5,a4,.L57
 764              	.LBE115:
 765              	.LBE128:
 766              	.LBE141:
 767              	.LBE156:
 768              	.LBE170:
 769              	.LBE182:
 770              	.LBE193:
 771              	.LBE205:
 772              	.LBE233:
 773              	.LBE245:
 234:src/Riscv.cpp ****             {
 235:src/Riscv.cpp ****                 //todo
 236:src/Riscv.cpp ****                 //negativna povratna vrednost sta i kako
 237:src/Riscv.cpp ****                 KSemaphore* kSem;
 238:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(kSem));
 239:src/Riscv.cpp ****                 uint64 retval = kSem->wait();
 240:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 241:src/Riscv.cpp ****             }
 242:src/Riscv.cpp ****             else if(operation == KSemaphore::SEM_SIGNAL)
 774              		.loc 1 242 18
 775              	.LBB246:
 776              	.LBB234:
 777              	.LBB206:
 778              	.LBB194:
 779              	.LBB183:
 780              	.LBB171:
 781              	.LBB157:
 782              	.LBB142:
 783              	.LBB129:
 784              	.LBB123:
 785              	.LBB116:
 786 0318 13074002 		li	a4,36
 787 031c 6384E728 		beq	a5,a4,.L58
 788              	.LBE116:
 789              	.LBE123:
 790              	.LBE129:
 791              	.LBE142:
 792              	.LBE157:
GAS LISTING /tmp/ccAB5tPZ.s 			page 23


 793              	.LBE171:
 794              	.LBE183:
 795              	.LBE194:
 796              	.LBE206:
 797              	.LBE234:
 798              	.LBE246:
 243:src/Riscv.cpp ****             {
 244:src/Riscv.cpp ****                 //todo
 245:src/Riscv.cpp ****                 //negativna povratna vrednost sta i kako
 246:src/Riscv.cpp ****                 KSemaphore* kSem;
 247:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(kSem));
 248:src/Riscv.cpp ****                 uint64 retval = kSem->signal();
 249:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 250:src/Riscv.cpp ****             }
 251:src/Riscv.cpp ****             else if(operation == KSemaphore::SEM_CLOSE)
 799              		.loc 1 251 18
 800              	.LBB247:
 801              	.LBB235:
 802              	.LBB207:
 803              	.LBB195:
 804              	.LBB184:
 805              	.LBB172:
 806              	.LBB158:
 807              	.LBB143:
 808              	.LBB130:
 809              	.LBB124:
 810              	.LBB120:
 811              	.LBB117:
 812 0320 13072002 		li	a4,34
 813 0324 6392E710 		bne	a5,a4,.L30
 814              	.LBB118:
 252:src/Riscv.cpp ****             {
 253:src/Riscv.cpp ****                 //todo
 254:src/Riscv.cpp ****                 //negativna povratna vrednost sta i kako
 255:src/Riscv.cpp ****                 KSemaphore* kSem;
 815              		.loc 1 255 17
 256:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(kSem));
 816              		.loc 1 256 17
 817              		.loc 1 256 59 is_stmt 0
 818              	#APP
 819              	# 256 "src/Riscv.cpp" 1
 257              	
 820              		mv s1, a1
 821              	# 0 "" 2
 822              	.LVL46:
 258:src/Riscv.cpp ****                 delete kSem;
 823              		.loc 1 258 17 is_stmt 1
 824              		.loc 1 258 28 is_stmt 0
 825              	#NO_APP
 826 032c 638E0400 		beqz	s1,.L43
 827              		.loc 1 258 24 discriminator 1
 828 0330 13850400 		mv	a0,s1
 829 0334 97000000 		call	_ZN10KSemaphoreD1Ev@plt
 829      E7800000 
 830              	.LVL47:
 831 033c 13850400 		mv	a0,s1
 832              	.LEHB4:
GAS LISTING /tmp/ccAB5tPZ.s 			page 24


 833 0340 97000000 		call	_ZN10KSemaphoredlEPv@plt
 833      E7800000 
 834              	.LVL48:
 835              	.L43:
 259:src/Riscv.cpp **** 
 260:src/Riscv.cpp ****                 __asm__ volatile("li a0, 0");
 836              		.loc 1 260 17 is_stmt 1
 837              		.loc 1 260 45 is_stmt 0
 838              	#APP
 839              	# 260 "src/Riscv.cpp" 1
 261              	            }
 840              		li a0, 0
 841              	# 0 "" 2
 842              	#NO_APP
 843              	.LBE118:
 844 034c 6F00C00D 		j	.L30
 845              	.LVL49:
 846              	.L25:
 847              	.LBE117:
 848              	.LBE120:
 849              	.LBE124:
 850              	.LBE130:
 851              	.LBE143:
 852              	.LBE158:
 853              	.LBE172:
 854              	.LBE184:
 855              	.LBE195:
 856              	.LBE207:
 857              	.LBE235:
  97:src/Riscv.cpp ****     {
 858              		.loc 1 97 5
 859 0350 1307F0FF 		li	a4,-1
 860 0354 1317F703 		slli	a4,a4,63
 861 0358 13079700 		addi	a4,a4,9
 862 035c 639AE700 		bne	a5,a4,.L26
 863              	.LBB236:
 121:src/Riscv.cpp **** 
 864              		.loc 1 121 9 is_stmt 1
 123:src/Riscv.cpp **** 
 865              		.loc 1 123 13
 123:src/Riscv.cpp **** 
 866              		.loc 1 123 31 is_stmt 0
 867 0360 17050000 		lla	a0,.LC0
 867      13050500 
 868 0368 97000000 		call	_ZN5Riscv11printStringEPKc
 868      E7800000 
 869              	.LVL50:
 125:src/Riscv.cpp **** 
 870              		.loc 1 125 13 is_stmt 1
 871              	.L26:
 872              	.LBE236:
 873              	.LBE247:
 262:src/Riscv.cpp **** 
 263:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 264:src/Riscv.cpp **** 
 265:src/Riscv.cpp ****             return;
 266:src/Riscv.cpp ****     }
GAS LISTING /tmp/ccAB5tPZ.s 			page 25


 267:src/Riscv.cpp **** 
 268:src/Riscv.cpp ****     console_handler();
 874              		.loc 1 268 5
 875              		.loc 1 268 20 is_stmt 0
 876 0370 97000000 		call	console_handler@plt
 876      E7800000 
 877              	.LVL51:
 878              	.L23:
 269:src/Riscv.cpp **** }
 879              		.loc 1 269 1
 880 0378 83308107 		ld	ra,120(sp)
 881              		.cfi_remember_state
 882              		.cfi_restore 1
 883 037c 03340107 		ld	s0,112(sp)
 884              		.cfi_restore 8
 885              		.cfi_def_cfa 2, 128
 886 0380 83348106 		ld	s1,104(sp)
 887              		.cfi_restore 9
 888 0384 03390106 		ld	s2,96(sp)
 889              		.cfi_restore 18
 890 0388 83398105 		ld	s3,88(sp)
 891              		.cfi_restore 19
 892 038c 033A0105 		ld	s4,80(sp)
 893              		.cfi_restore 20
 894 0390 833A8104 		ld	s5,72(sp)
 895              		.cfi_restore 21
 896 0394 033B0104 		ld	s6,64(sp)
 897              		.cfi_restore 22
 898 0398 13010108 		addi	sp,sp,128
 899              		.cfi_def_cfa_offset 0
 900 039c 67800000 		jr	ra
 901              	.LVL52:
 902              	.L24:
 903              		.cfi_restore_state
 904              	.LBB248:
 905              	.LBB237:
 100:src/Riscv.cpp **** 
 906              		.loc 1 100 9 is_stmt 1
 102:src/Riscv.cpp ****             //Riscv::printString("timerInterrupt\n");
 907              		.loc 1 102 13
 908              	.LBB208:
 909              	.LBB209:
 132:src/../h/Riscv.hpp **** }
 910              		.loc 2 132 5
 132:src/../h/Riscv.hpp **** }
 911              		.loc 2 132 50 is_stmt 0
 912 03a0 93072000 		li	a5,2
 913              	.LVL53:
 914              	#APP
 915              	# 132 "src/../h/Riscv.hpp" 1
 916              		csrc sip, a5
 917              	# 0 "" 2
 918              	.LVL54:
 919              	#NO_APP
 920              	.LBE209:
 921              	.LBE208:
 105:src/Riscv.cpp **** 
GAS LISTING /tmp/ccAB5tPZ.s 			page 26


 922              		.loc 1 105 13 is_stmt 1
 105:src/Riscv.cpp **** 
 923              		.loc 1 105 34 is_stmt 0
 924 03a8 97040000 		la	s1,_ZN3PCB16timeSliceCounterE
 924      83B40400 
 925              	.LVL55:
 926 03b0 83B70400 		ld	a5,0(s1)
 927 03b4 93871700 		addi	a5,a5,1
 928 03b8 23B0F400 		sd	a5,0(s1)
 107:src/Riscv.cpp **** 
 929              		.loc 1 107 13 is_stmt 1
 107:src/Riscv.cpp **** 
 930              		.loc 1 107 40 is_stmt 0
 931 03bc 97000000 		call	_ZN12SleepPCBList13tryToWakePCBsEv@plt
 931      E7800000 
 932              	.LVL56:
 109:src/Riscv.cpp ****             {
 933              		.loc 1 109 13 is_stmt 1
 934              	.LBB210:
 109:src/Riscv.cpp ****             {
 935              		.loc 1 109 68 is_stmt 0
 936 03c4 97070000 		la	a5,_ZN3PCB7runningE
 936      83B70700 
 937 03cc 83B70700 		ld	a5,0(a5)
 938              	.LVL57:
 939              	.LBB211:
 940              	.LBB212:
  28:src/../h/PCB.hpp **** 
 941              		.loc 3 28 29 is_stmt 1
  28:src/../h/PCB.hpp **** 
 942              		.loc 3 28 36 is_stmt 0
 943 03d0 83B78700 		ld	a5,8(a5)
 944              	.LVL58:
 945              	.LBE212:
 946              	.LBE211:
 109:src/Riscv.cpp ****             {
 947              		.loc 1 109 39
 948 03d4 03B70400 		ld	a4,0(s1)
 109:src/Riscv.cpp ****             {
 949              		.loc 1 109 13
 950 03d8 E36CF7F8 		bltu	a4,a5,.L26
 951              	.LBB213:
 111:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 952              		.loc 1 111 17 is_stmt 1
 953              	.LBB214:
 954              	.LBB215:
  98:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 955              		.loc 2 98 5
  99:src/../h/Riscv.hpp ****     return sepc;
 956              		.loc 2 99 5
  99:src/../h/Riscv.hpp ****     return sepc;
 957              		.loc 2 99 51 is_stmt 0
 958              	#APP
 959              	# 99 "src/../h/Riscv.hpp" 1
 960              		csrr a5, sepc
 961              	# 0 "" 2
 962              	#NO_APP
GAS LISTING /tmp/ccAB5tPZ.s 			page 27


 963 03e0 233CF4F8 		sd	a5,-104(s0)
 100:src/../h/Riscv.hpp **** }
 964              		.loc 2 100 5 is_stmt 1
 100:src/../h/Riscv.hpp **** }
 965              		.loc 2 100 12 is_stmt 0
 966 03e4 833484F9 		ld	s1,-104(s0)
 967              	.LVL59:
 968              	.LBE215:
 969              	.LBE214:
 112:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 970              		.loc 1 112 17 is_stmt 1
 971              	.LBB216:
 972              	.LBB217:
 154:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 973              		.loc 2 154 5
 155:src/../h/Riscv.hpp ****     return sstatus;
 974              		.loc 2 155 5
 155:src/../h/Riscv.hpp ****     return sstatus;
 975              		.loc 2 155 57 is_stmt 0
 976              	#APP
 977              	# 155 "src/../h/Riscv.hpp" 1
 978              		csrr a5, sstatus
 979              	# 0 "" 2
 980              	#NO_APP
 981 03ec 2338F4F8 		sd	a5,-112(s0)
 982              		.loc 2 156 5 is_stmt 1
 983              		.loc 2 156 12 is_stmt 0
 984 03f0 033904F9 		ld	s2,-112(s0)
 985              	.LVL60:
 986              	.LBE217:
 987              	.LBE216:
 113:src/Riscv.cpp ****                 PCB::dispatch();
 988              		.loc 1 113 17 is_stmt 1
 113:src/Riscv.cpp ****                 PCB::dispatch();
 989              		.loc 1 113 39 is_stmt 0
 990 03f4 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 990      83B70700 
 991 03fc 23B00700 		sd	zero,0(a5)
 114:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 992              		.loc 1 114 17 is_stmt 1
 114:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 993              		.loc 1 114 30 is_stmt 0
 994 0400 97000000 		call	_ZN3PCB8dispatchEv@plt
 994      E7800000 
 995              	.LVL61:
 115:src/Riscv.cpp ****                 Riscv::w_sepc(sepc);
 996              		.loc 1 115 17 is_stmt 1
 997              	.LBB218:
 998              	.LBB219:
 157:src/../h/Riscv.hpp **** }
 158:src/../h/Riscv.hpp **** 
 159:src/../h/Riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus) {
 160:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sstatus, %0" : :"r"(sstatus));
 999              		.loc 2 160 5
 1000              		.loc 2 160 57 is_stmt 0
 1001              	#APP
 1002              	# 160 "src/../h/Riscv.hpp" 1
GAS LISTING /tmp/ccAB5tPZ.s 			page 28


 161              	}
 1003              		csrw sstatus, s2
 1004              	# 0 "" 2
 1005              	.LVL62:
 1006              	#NO_APP
 1007              	.LBE219:
 1008              	.LBE218:
 116:src/Riscv.cpp ****             }
 1009              		.loc 1 116 17 is_stmt 1
 1010              	.LBB220:
 1011              	.LBB221:
 104:src/../h/Riscv.hpp **** }
 1012              		.loc 2 104 5
 104:src/../h/Riscv.hpp **** }
 1013              		.loc 2 104 51 is_stmt 0
 1014              	#APP
 1015              	# 104 "src/../h/Riscv.hpp" 1
 105:src/../h/Riscv.hpp **** 
 1016              		csrw sepc, s1
 1017              	# 0 "" 2
 1018              		.loc 2 105 1
 1019              	#NO_APP
 1020 0410 6FF01FF6 		j	.L26
 1021              	.LVL63:
 1022              	.L50:
 1023              	.LBE221:
 1024              	.LBE220:
 1025              	.LBE213:
 1026              	.LBE210:
 1027              	.LBB222:
 1028              	.LBB196:
 147:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(size));
 1029              		.loc 1 147 17 is_stmt 1
 148:src/Riscv.cpp ****                 size*=MEM_BLOCK_SIZE;
 1030              		.loc 1 148 17
 148:src/Riscv.cpp ****                 size*=MEM_BLOCK_SIZE;
 1031              		.loc 1 148 59 is_stmt 0
 1032              	#APP
 1033              	# 148 "src/Riscv.cpp" 1
 1034              		mv a0, a1
 1035              	# 0 "" 2
 1036              	.LVL64:
 149:src/Riscv.cpp ****                 void* allocatedAddr = kmalloc(size);
 1037              		.loc 1 149 17 is_stmt 1
 150:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : : "r"((uint64)allocatedAddr));
 1038              		.loc 1 150 17
 150:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : : "r"((uint64)allocatedAddr));
 1039              		.loc 1 150 46 is_stmt 0
 1040              	#NO_APP
 1041 0418 13156500 		slli	a0,a0,6
 1042              	.LVL65:
 1043 041c 97000000 		call	_Z7kmallocm@plt
 1043      E7800000 
 1044              	.LVL66:
 151:src/Riscv.cpp ****             }
 1045              		.loc 1 151 17 is_stmt 1
 151:src/Riscv.cpp ****             }
GAS LISTING /tmp/ccAB5tPZ.s 			page 29


 1046              		.loc 1 151 76 is_stmt 0
 1047              	#APP
 1048              	# 151 "src/Riscv.cpp" 1
 1049              		mv a0,a0
 1050              	# 0 "" 2
 1051              	.LVL67:
 1052              	#NO_APP
 1053              	.L30:
 1054              	.LBE196:
 1055              	.LBE222:
 263:src/Riscv.cpp **** 
 1056              		.loc 1 263 13 is_stmt 1
 1057              	.LBB223:
 1058              	.LBB224:
 104:src/../h/Riscv.hpp **** }
 1059              		.loc 2 104 5
 104:src/../h/Riscv.hpp **** }
 1060              		.loc 2 104 51 is_stmt 0
 1061              	#APP
 1062              	# 104 "src/../h/Riscv.hpp" 1
 105:src/../h/Riscv.hpp **** 
 1063              		csrw sepc, s2
 1064              	# 0 "" 2
 1065              		.loc 2 105 1
 1066              	#NO_APP
 1067 042c 6FF0DFF4 		j	.L23
 1068              	.LVL68:
 1069              	.L51:
 1070              	.LBE224:
 1071              	.LBE223:
 1072              	.LBB225:
 1073              	.LBB197:
 1074              	.LBB185:
 155:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(addr));
 1075              		.loc 1 155 17 is_stmt 1
 156:src/Riscv.cpp ****                 uint64 retval = kfree((void*)addr);
 1076              		.loc 1 156 17
 156:src/Riscv.cpp ****                 uint64 retval = kfree((void*)addr);
 1077              		.loc 1 156 59 is_stmt 0
 1078              	#APP
 1079              	# 156 "src/Riscv.cpp" 1
 1080              		mv a0, a1
 1081              	# 0 "" 2
 1082              	.LVL69:
 157:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 1083              		.loc 1 157 17 is_stmt 1
 157:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 1084              		.loc 1 157 38 is_stmt 0
 1085              	#NO_APP
 1086 0434 97000000 		call	_Z5kfreePv@plt
 1086      E7800000 
 1087              	.LVL70:
 158:src/Riscv.cpp ****             }
 1088              		.loc 1 158 17 is_stmt 1
 158:src/Riscv.cpp ****             }
 1089              		.loc 1 158 60 is_stmt 0
 1090              	#APP
GAS LISTING /tmp/ccAB5tPZ.s 			page 30


 1091              	# 158 "src/Riscv.cpp" 1
 1092              		mv a0,a0
 1093              	# 0 "" 2
 1094              	#NO_APP
 1095              	.LBE185:
 1096 0440 6FF09FFE 		j	.L30
 1097              	.LVL71:
 1098              	.L52:
 1099              	.LBB186:
 1100              	.LBB173:
 162:src/Riscv.cpp ****                 uint64 args;
 1101              		.loc 1 162 17 is_stmt 1
 163:src/Riscv.cpp ****                 PCB** threadHandle;
 1102              		.loc 1 163 17
 164:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(threadHandle));
 1103              		.loc 1 164 17
 165:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(start_routine));
 1104              		.loc 1 165 17
 165:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(start_routine));
 1105              		.loc 1 165 67 is_stmt 0
 1106              	#APP
 1107              	# 165 "src/Riscv.cpp" 1
 1108              		mv s4, a1
 1109              	# 0 "" 2
 1110              	.LVL72:
 166:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a3" : "=r"(args));
 1111              		.loc 1 166 17 is_stmt 1
 166:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a3" : "=r"(args));
 1112              		.loc 1 166 68 is_stmt 0
 1113              	# 166 "src/Riscv.cpp" 1
 1114              		mv s5, a2
 1115              	# 0 "" 2
 1116              	.LVL73:
 167:src/Riscv.cpp ****                 //todo
 1117              		.loc 1 167 17 is_stmt 1
 167:src/Riscv.cpp ****                 //todo
 1118              		.loc 1 167 59 is_stmt 0
 1119              	# 167 "src/Riscv.cpp" 1
 1120              		mv s6, a3
 1121              	# 0 "" 2
 1122              	.LVL74:
 172:src/Riscv.cpp **** 
 1123              		.loc 1 172 17 is_stmt 1
 172:src/Riscv.cpp **** 
 1124              		.loc 1 172 113 is_stmt 0
 1125              	#NO_APP
 1126 0450 13050005 		li	a0,80
 1127 0454 97000000 		call	_ZN3PCBnwEm@plt
 1127      E7800000 
 1128              	.LVL75:
 1129              	.LEHE4:
 1130 045c 93090500 		mv	s3,a0
 1131 0460 13072000 		li	a4,2
 1132 0464 93860400 		mv	a3,s1
 1133 0468 13060B00 		mv	a2,s6
 1134 046c 93850A00 		mv	a1,s5
 1135              	.LEHB5:
GAS LISTING /tmp/ccAB5tPZ.s 			page 31


 1136 0470 97000000 		call	_ZN3PCBC1EPFvPvES0_S0_m@plt
 1136      E7800000 
 1137              	.LVL76:
 1138              	.LEHE5:
 174:src/Riscv.cpp **** 
 1139              		.loc 1 174 17 is_stmt 1 discriminator 2
 174:src/Riscv.cpp **** 
 1140              		.loc 1 174 33 is_stmt 0 discriminator 2
 1141 0478 23303A01 		sd	s3,0(s4)
 176:src/Riscv.cpp ****                     __asm__ volatile("li a0, 0xffffffffffffffff");
 1142              		.loc 1 176 17 is_stmt 1 discriminator 2
 1143 047c 63860900 		beqz	s3,.L59
 179:src/Riscv.cpp ****             }
 1144              		.loc 1 179 21
 179:src/Riscv.cpp ****             }
 1145              		.loc 1 179 49 is_stmt 0
 1146              	#APP
 1147              	# 179 "src/Riscv.cpp" 1
 1148              		li a0, 0
 1149              	# 0 "" 2
 1150              	#NO_APP
 1151 0484 6FF05FFA 		j	.L30
 1152              	.L59:
 177:src/Riscv.cpp ****                 else
 1153              		.loc 1 177 21 is_stmt 1
 177:src/Riscv.cpp ****                 else
 1154              		.loc 1 177 66 is_stmt 0
 1155              	#APP
 1156              	# 177 "src/Riscv.cpp" 1
 1157              		li a0, 0xffffffffffffffff
 1158              	# 0 "" 2
 1159              	#NO_APP
 1160 048c 6FF0DFF9 		j	.L30
 1161              	.LVL77:
 1162              	.L53:
 1163              	.LBE173:
 1164              	.LBB174:
 1165              	.LBB159:
 183:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 1166              		.loc 1 183 17 is_stmt 1
 1167              	.LBB160:
 1168              	.LBB161:
 154:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 1169              		.loc 2 154 5
 155:src/../h/Riscv.hpp ****     return sstatus;
 1170              		.loc 2 155 5
 155:src/../h/Riscv.hpp ****     return sstatus;
 1171              		.loc 2 155 57 is_stmt 0
 1172              	#APP
 1173              	# 155 "src/../h/Riscv.hpp" 1
 1174              		csrr a5, sstatus
 1175              	# 0 "" 2
 1176              	.LVL78:
 1177              	#NO_APP
 1178 0494 2334F4FA 		sd	a5,-88(s0)
 156:src/../h/Riscv.hpp **** }
 1179              		.loc 2 156 5 is_stmt 1
GAS LISTING /tmp/ccAB5tPZ.s 			page 32


 156:src/../h/Riscv.hpp **** }
 1180              		.loc 2 156 12 is_stmt 0
 1181 0498 833484FA 		ld	s1,-88(s0)
 1182              	.LVL79:
 1183              	.LBE161:
 1184              	.LBE160:
 184:src/Riscv.cpp ****                 PCB::dispatch();
 1185              		.loc 1 184 17 is_stmt 1
 184:src/Riscv.cpp ****                 PCB::dispatch();
 1186              		.loc 1 184 39 is_stmt 0
 1187 049c 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 1187      83B70700 
 1188 04a4 23B00700 		sd	zero,0(a5)
 185:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1189              		.loc 1 185 17 is_stmt 1
 1190              	.LEHB6:
 185:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1191              		.loc 1 185 30 is_stmt 0
 1192 04a8 97000000 		call	_ZN3PCB8dispatchEv@plt
 1192      E7800000 
 1193              	.LVL80:
 186:src/Riscv.cpp ****             }
 1194              		.loc 1 186 17 is_stmt 1
 1195              	.LBB162:
 1196              	.LBB163:
 160:src/../h/Riscv.hpp **** }
 1197              		.loc 2 160 5
 160:src/../h/Riscv.hpp **** }
 1198              		.loc 2 160 57 is_stmt 0
 1199              	#APP
 1200              	# 160 "src/../h/Riscv.hpp" 1
 1201              		csrw sstatus, s1
 1202              	# 0 "" 2
 1203              		.loc 2 161 1
 1204              	#NO_APP
 1205 04b4 6FF05FF7 		j	.L30
 1206              	.LVL81:
 1207              	.L54:
 1208              	.LBE163:
 1209              	.LBE162:
 1210              	.LBE159:
 1211              	.LBB164:
 1212              	.LBB144:
 190:src/Riscv.cpp ****                 {
 1213              		.loc 1 190 17 is_stmt 1
 190:src/Riscv.cpp ****                 {
 1214              		.loc 1 190 33 is_stmt 0
 1215 04b8 97070000 		la	a5,_ZN3PCB7runningE
 1215      83B70700 
 1216              	.LVL82:
 1217 04c0 83B70700 		ld	a5,0(a5)
 190:src/Riscv.cpp ****                 {
 1218              		.loc 1 190 17
 1219 04c4 63800704 		beqz	a5,.L60
 195:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 1220              		.loc 1 195 17 is_stmt 1
 1221              	.LBB145:
GAS LISTING /tmp/ccAB5tPZ.s 			page 33


 1222              	.LBB146:
 154:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 1223              		.loc 2 154 5
 155:src/../h/Riscv.hpp ****     return sstatus;
 1224              		.loc 2 155 5
 155:src/../h/Riscv.hpp ****     return sstatus;
 1225              		.loc 2 155 57 is_stmt 0
 1226              	#APP
 1227              	# 155 "src/../h/Riscv.hpp" 1
 1228              		csrr a5, sstatus
 1229              	# 0 "" 2
 1230              	#NO_APP
 1231 04cc 2338F4FA 		sd	a5,-80(s0)
 156:src/../h/Riscv.hpp **** }
 1232              		.loc 2 156 5 is_stmt 1
 156:src/../h/Riscv.hpp **** }
 1233              		.loc 2 156 12 is_stmt 0
 1234 04d0 833404FB 		ld	s1,-80(s0)
 1235              	.LVL83:
 1236              	.LBE146:
 1237              	.LBE145:
 196:src/Riscv.cpp ****                 PCB::running->setState(PCB::EXITING);
 1238              		.loc 1 196 17 is_stmt 1
 196:src/Riscv.cpp ****                 PCB::running->setState(PCB::EXITING);
 1239              		.loc 1 196 39 is_stmt 0
 1240 04d4 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 1240      83B70700 
 1241 04dc 23B00700 		sd	zero,0(a5)
 197:src/Riscv.cpp ****                 PCB::running->setState(PCB::FINISHED);
 1242              		.loc 1 197 17 is_stmt 1
 197:src/Riscv.cpp ****                 PCB::running->setState(PCB::FINISHED);
 1243              		.loc 1 197 39 is_stmt 0
 1244 04e0 97070000 		la	a5,_ZN3PCB7runningE
 1244      83B70700 
 1245 04e8 83B70700 		ld	a5,0(a5)
 1246              	.LVL84:
 1247              	.LBE144:
 1248              	.LBE164:
 1249              	.LBE174:
 1250              	.LBE186:
 1251              	.LBE197:
 1252              	.LBE225:
 1253              	.LBE237:
 1254              	.LBE248:
 1255              		.loc 3 35 29 is_stmt 1
 1256              	.LBB249:
 1257              	.LBB238:
 1258              	.LBB226:
 1259              	.LBB198:
 1260              	.LBB187:
 1261              	.LBB175:
 1262              	.LBB165:
 1263              	.LBB151:
 198:src/Riscv.cpp ****                 PCB::dispatch();
 1264              		.loc 1 198 17
 1265              	.LBB147:
 1266              	.LBB148:
GAS LISTING /tmp/ccAB5tPZ.s 			page 34


 1267              		.loc 3 35 29
 1268              		.loc 3 35 35 is_stmt 0
 1269 04ec 13073000 		li	a4,3
 1270 04f0 23A8E702 		sw	a4,48(a5)
 1271              	.LVL85:
 1272              	.LBE148:
 1273              	.LBE147:
 199:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1274              		.loc 1 199 17 is_stmt 1
 199:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1275              		.loc 1 199 30 is_stmt 0
 1276 04f4 97000000 		call	_ZN3PCB8dispatchEv@plt
 1276      E7800000 
 1277              	.LVL86:
 200:src/Riscv.cpp ****             }
 1278              		.loc 1 200 17 is_stmt 1
 1279              	.LBB149:
 1280              	.LBB150:
 160:src/../h/Riscv.hpp **** }
 1281              		.loc 2 160 5
 160:src/../h/Riscv.hpp **** }
 1282              		.loc 2 160 57 is_stmt 0
 1283              	#APP
 1284              	# 160 "src/../h/Riscv.hpp" 1
 1285              		csrw sstatus, s1
 1286              	# 0 "" 2
 1287              		.loc 2 161 1
 1288              	#NO_APP
 1289 0500 6FF09FF2 		j	.L30
 1290              	.LVL87:
 1291              	.L60:
 1292              	.LBE150:
 1293              	.LBE149:
 192:src/Riscv.cpp ****                     return;
 1294              		.loc 1 192 21 is_stmt 1
 192:src/Riscv.cpp ****                     return;
 1295              		.loc 1 192 66 is_stmt 0
 1296              	#APP
 1297              	# 192 "src/Riscv.cpp" 1
 193:src/Riscv.cpp ****                 }
 1298              		li a0, 0xffffffffffffffff
 1299              	# 0 "" 2
 1300              		.loc 1 193 21 is_stmt 1
 1301              	#NO_APP
 1302 0508 6FF01FE7 		j	.L23
 1303              	.LVL88:
 1304              	.L55:
 1305              	.LBE151:
 1306              	.LBB152:
 1307              	.LBB131:
 204:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(time));
 1308              		.loc 1 204 17
 205:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 1309              		.loc 1 205 17
 205:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 1310              		.loc 1 205 59 is_stmt 0
 1311              	#APP
GAS LISTING /tmp/ccAB5tPZ.s 			page 35


 1312              	# 205 "src/Riscv.cpp" 1
 1313              		mv a4, a1
 1314              	# 0 "" 2
 1315              	.LVL89:
 206:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 1316              		.loc 1 206 17 is_stmt 1
 1317              	#NO_APP
 1318              	.LBB132:
 1319              	.LBB133:
 154:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 1320              		.loc 2 154 5
 155:src/../h/Riscv.hpp ****     return sstatus;
 1321              		.loc 2 155 5
 155:src/../h/Riscv.hpp ****     return sstatus;
 1322              		.loc 2 155 57 is_stmt 0
 1323              	#APP
 1324              	# 155 "src/../h/Riscv.hpp" 1
 1325              		csrr a5, sstatus
 1326              	# 0 "" 2
 1327              	.LVL90:
 1328              	#NO_APP
 1329 0514 233CF4FA 		sd	a5,-72(s0)
 156:src/../h/Riscv.hpp **** }
 1330              		.loc 2 156 5 is_stmt 1
 156:src/../h/Riscv.hpp **** }
 1331              		.loc 2 156 12 is_stmt 0
 1332 0518 833484FB 		ld	s1,-72(s0)
 1333              	.LVL91:
 1334              	.LBE133:
 1335              	.LBE132:
 207:src/Riscv.cpp ****                 PCB::running->setTimeToSleep(time);
 1336              		.loc 1 207 17 is_stmt 1
 207:src/Riscv.cpp ****                 PCB::running->setTimeToSleep(time);
 1337              		.loc 1 207 39 is_stmt 0
 1338 051c 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 1338      83B70700 
 1339 0524 23B00700 		sd	zero,0(a5)
 208:src/Riscv.cpp ****                 SleepPCBList::insertSleepingPCB();
 1340              		.loc 1 208 17 is_stmt 1
 208:src/Riscv.cpp ****                 SleepPCBList::insertSleepingPCB();
 1341              		.loc 1 208 45 is_stmt 0
 1342 0528 97070000 		la	a5,_ZN3PCB7runningE
 1342      83B70700 
 1343 0530 83B70700 		ld	a5,0(a5)
 1344              	.LVL92:
 1345              	.LBB134:
 1346              	.LBB135:
  36:src/../h/PCB.hpp ****     void setTimeToSleep(uint64 time) {timeToSleep = time;}
 1347              		.loc 3 36 39 is_stmt 1
 1348              		.loc 3 36 51 is_stmt 0
 1349 0534 23B8E700 		sd	a4,16(a5)
 1350              	.LVL93:
 1351              	.LBE135:
 1352              	.LBE134:
 209:src/Riscv.cpp ****                 PCB::dispatch();
 1353              		.loc 1 209 17 is_stmt 1
 209:src/Riscv.cpp ****                 PCB::dispatch();
GAS LISTING /tmp/ccAB5tPZ.s 			page 36


 1354              		.loc 1 209 48 is_stmt 0
 1355 0538 97000000 		call	_ZN12SleepPCBList17insertSleepingPCBEv@plt
 1355      E7800000 
 1356              	.LVL94:
 210:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1357              		.loc 1 210 17 is_stmt 1
 210:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 1358              		.loc 1 210 30 is_stmt 0
 1359 0540 97000000 		call	_ZN3PCB8dispatchEv@plt
 1359      E7800000 
 1360              	.LVL95:
 211:src/Riscv.cpp ****                 //todo
 1361              		.loc 1 211 17 is_stmt 1
 1362              	.LBB136:
 1363              	.LBB137:
 160:src/../h/Riscv.hpp **** }
 1364              		.loc 2 160 5
 160:src/../h/Riscv.hpp **** }
 1365              		.loc 2 160 57 is_stmt 0
 1366              	#APP
 1367              	# 160 "src/../h/Riscv.hpp" 1
 1368              		csrw sstatus, s1
 1369              	# 0 "" 2
 1370              	.LVL96:
 1371              	#NO_APP
 1372              	.LBE137:
 1373              	.LBE136:
 214:src/Riscv.cpp ****             }
 1374              		.loc 1 214 17 is_stmt 1
 214:src/Riscv.cpp ****             }
 1375              		.loc 1 214 47 is_stmt 0
 1376              	#APP
 1377              	# 214 "src/Riscv.cpp" 1
 1378              		li a0, 0x0
 1379              	# 0 "" 2
 1380              	#NO_APP
 1381              	.LBE131:
 1382 0550 6FF09FED 		j	.L30
 1383              	.LVL97:
 1384              	.L56:
 1385              	.LBB138:
 1386              	.LBB125:
 218:src/Riscv.cpp ****                 KSemaphore** semaphoreHandle;
 1387              		.loc 1 218 17 is_stmt 1
 219:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(semaphoreHandle));
 1388              		.loc 1 219 17
 220:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(val));
 1389              		.loc 1 220 17
 220:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(val));
 1390              		.loc 1 220 70 is_stmt 0
 1391              	#APP
 1392              	# 220 "src/Riscv.cpp" 1
 1393              		mv s3, a1
 1394              	# 0 "" 2
 1395              	.LVL98:
 221:src/Riscv.cpp **** 
 1396              		.loc 1 221 17 is_stmt 1
GAS LISTING /tmp/ccAB5tPZ.s 			page 37


 221:src/Riscv.cpp **** 
 1397              		.loc 1 221 58 is_stmt 0
 1398              	# 221 "src/Riscv.cpp" 1
 1399              		mv s4, a2
 1400              	# 0 "" 2
 1401              	.LVL99:
 223:src/Riscv.cpp **** 
 1402              		.loc 1 223 17 is_stmt 1
 223:src/Riscv.cpp **** 
 1403              		.loc 1 223 56 is_stmt 0
 1404              	#NO_APP
 1405 055c 13058001 		li	a0,24
 1406 0560 97000000 		call	_ZN10KSemaphorenwEm@plt
 1406      E7800000 
 1407              	.LVL100:
 1408              	.LEHE6:
 1409 0568 93040500 		mv	s1,a0
 1410              	.LVL101:
 1411 056c 9B050A00 		sext.w	a1,s4
 1412              	.LEHB7:
 1413 0570 97000000 		call	_ZN10KSemaphoreC1Ei@plt
 1413      E7800000 
 1414              	.LVL102:
 1415              	.LEHE7:
 225:src/Riscv.cpp **** 
 1416              		.loc 1 225 17 is_stmt 1 discriminator 2
 225:src/Riscv.cpp **** 
 1417              		.loc 1 225 36 is_stmt 0 discriminator 2
 1418 0578 23B09900 		sd	s1,0(s3)
 227:src/Riscv.cpp ****                         __asm__ volatile("li a0, 0xffffffffffffffff");
 1419              		.loc 1 227 17 is_stmt 1 discriminator 2
 1420 057c 63860400 		beqz	s1,.L61
 230:src/Riscv.cpp **** 
 1421              		.loc 1 230 25
 230:src/Riscv.cpp **** 
 1422              		.loc 1 230 53 is_stmt 0
 1423              	#APP
 1424              	# 230 "src/Riscv.cpp" 1
 1425              		li a0, 0
 1426              	# 0 "" 2
 1427              	#NO_APP
 1428 0584 6FF05FEA 		j	.L30
 1429              	.L61:
 228:src/Riscv.cpp ****                 else
 1430              		.loc 1 228 25 is_stmt 1
 228:src/Riscv.cpp ****                 else
 1431              		.loc 1 228 70 is_stmt 0
 1432              	#APP
 1433              	# 228 "src/Riscv.cpp" 1
 1434              		li a0, 0xffffffffffffffff
 1435              	# 0 "" 2
 1436              	#NO_APP
 1437 058c 6FF0DFE9 		j	.L30
 1438              	.LVL103:
 1439              	.L57:
 1440              	.LBE125:
 1441              	.LBB126:
GAS LISTING /tmp/ccAB5tPZ.s 			page 38


 1442              	.LBB121:
 237:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(kSem));
 1443              		.loc 1 237 17 is_stmt 1
 238:src/Riscv.cpp ****                 uint64 retval = kSem->wait();
 1444              		.loc 1 238 17
 238:src/Riscv.cpp ****                 uint64 retval = kSem->wait();
 1445              		.loc 1 238 59 is_stmt 0
 1446              	#APP
 1447              	# 238 "src/Riscv.cpp" 1
 1448              		mv a0, a1
 1449              	# 0 "" 2
 1450              	.LVL104:
 239:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 1451              		.loc 1 239 17 is_stmt 1
 1452              	.LEHB8:
 239:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 1453              		.loc 1 239 43 is_stmt 0
 1454              	#NO_APP
 1455 0594 97000000 		call	_ZN10KSemaphore4waitEv@plt
 1455      E7800000 
 1456              	.LVL105:
 240:src/Riscv.cpp ****             }
 1457              		.loc 1 240 17 is_stmt 1
 240:src/Riscv.cpp ****             }
 1458              		.loc 1 240 60 is_stmt 0
 1459              	#APP
 1460              	# 240 "src/Riscv.cpp" 1
 1461              		mv a0,a0
 1462              	# 0 "" 2
 1463              	#NO_APP
 1464              	.LBE121:
 1465 05a0 6FF09FE8 		j	.L30
 1466              	.LVL106:
 1467              	.L58:
 1468              	.LBB122:
 1469              	.LBB119:
 246:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(kSem));
 1470              		.loc 1 246 17 is_stmt 1
 247:src/Riscv.cpp ****                 uint64 retval = kSem->signal();
 1471              		.loc 1 247 17
 247:src/Riscv.cpp ****                 uint64 retval = kSem->signal();
 1472              		.loc 1 247 59 is_stmt 0
 1473              	#APP
 1474              	# 247 "src/Riscv.cpp" 1
 1475              		mv a0, a1
 1476              	# 0 "" 2
 1477              	.LVL107:
 248:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 1478              		.loc 1 248 17 is_stmt 1
 248:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 1479              		.loc 1 248 45 is_stmt 0
 1480              	#NO_APP
 1481 05a8 97000000 		call	_ZN10KSemaphore6signalEv@plt
 1481      E7800000 
 1482              	.LVL108:
 1483              	.LEHE8:
 249:src/Riscv.cpp ****             }
GAS LISTING /tmp/ccAB5tPZ.s 			page 39


 1484              		.loc 1 249 17 is_stmt 1
 249:src/Riscv.cpp ****             }
 1485              		.loc 1 249 60 is_stmt 0
 1486              	#APP
 1487              	# 249 "src/Riscv.cpp" 1
 1488              		mv a0,a0
 1489              	# 0 "" 2
 1490              	#NO_APP
 1491              	.LBE119:
 1492 05b4 6FF05FE7 		j	.L30
 1493              	.LVL109:
 1494              	.L46:
 1495 05b8 93040500 		mv	s1,a0
 1496              	.LVL110:
 1497              	.LBE122:
 1498              	.LBE126:
 1499              	.LBE138:
 1500              	.LBE152:
 1501              	.LBE165:
 1502              	.LBE175:
 1503              	.LBB176:
 172:src/Riscv.cpp **** 
 1504              		.loc 1 172 113
 1505 05bc 13850900 		mv	a0,s3
 1506 05c0 97000000 		call	_ZN3PCBdlEPv@plt
 1506      E7800000 
 1507              	.LVL111:
 1508 05c8 13850400 		mv	a0,s1
 1509              	.LEHB9:
 1510 05cc 97000000 		call	_Unwind_Resume@plt
 1510      E7800000 
 1511              	.LVL112:
 1512              	.LEHE9:
 1513              	.L47:
 1514 05d4 13090500 		mv	s2,a0
 1515              	.LVL113:
 1516              	.LBE176:
 1517              	.LBB177:
 1518              	.LBB166:
 1519              	.LBB153:
 1520              	.LBB139:
 1521              	.LBB127:
 223:src/Riscv.cpp **** 
 1522              		.loc 1 223 56
 1523 05d8 13850400 		mv	a0,s1
 1524 05dc 97000000 		call	_ZN10KSemaphoredlEPv@plt
 1524      E7800000 
 1525              	.LVL114:
 1526 05e4 13050900 		mv	a0,s2
 1527              	.LEHB10:
 1528 05e8 97000000 		call	_Unwind_Resume@plt
 1528      E7800000 
 1529              	.LVL115:
 1530              	.LEHE10:
 1531              	.LBE127:
 1532              	.LBE139:
 1533              	.LBE153:
GAS LISTING /tmp/ccAB5tPZ.s 			page 40


 1534              	.LBE166:
 1535              	.LBE177:
 1536              	.LBE187:
 1537              	.LBE198:
 1538              	.LBE226:
 1539              	.LBE238:
 1540              	.LBE249:
 1541              		.cfi_endproc
 1542              	.LFE29:
 1543              		.section	.gcc_except_table
 1544              	.LLSDA29:
 1545 0038 FF       		.byte	0xff
 1546 0039 FF       		.byte	0xff
 1547 003a 03       		.byte	0x3
 1548 003b 5B       		.byte	0x5b
 1549 003c 00000000 		.4byte	.LEHB4-.LFB29
 1550 0040 00000000 		.4byte	.LEHE4-.LEHB4
 1551 0044 00000000 		.4byte	0
 1552 0048 00       		.byte	0
 1553 0049 00000000 		.4byte	.LEHB5-.LFB29
 1554 004d 00000000 		.4byte	.LEHE5-.LEHB5
 1555 0051 00000000 		.4byte	.L46-.LFB29
 1556 0055 00       		.byte	0
 1557 0056 00000000 		.4byte	.LEHB6-.LFB29
 1558 005a 00000000 		.4byte	.LEHE6-.LEHB6
 1559 005e 00000000 		.4byte	0
 1560 0062 00       		.byte	0
 1561 0063 00000000 		.4byte	.LEHB7-.LFB29
 1562 0067 00000000 		.4byte	.LEHE7-.LEHB7
 1563 006b 00000000 		.4byte	.L47-.LFB29
 1564 006f 00       		.byte	0
 1565 0070 00000000 		.4byte	.LEHB8-.LFB29
 1566 0074 00000000 		.4byte	.LEHE8-.LEHB8
 1567 0078 00000000 		.4byte	0
 1568 007c 00       		.byte	0
 1569 007d 00000000 		.4byte	.LEHB9-.LFB29
 1570 0081 00000000 		.4byte	.LEHE9-.LEHB9
 1571 0085 00000000 		.4byte	0
 1572 0089 00       		.byte	0
 1573 008a 00000000 		.4byte	.LEHB10-.LFB29
 1574 008e 00000000 		.4byte	.LEHE10-.LEHB10
 1575 0092 00000000 		.4byte	0
 1576 0096 00       		.byte	0
 1577              		.text
 1579              		.section	.rodata
 1580              		.align	3
 1581              		.set	.LANCHOR0,. + 0
 1584              	_ZZN5Riscv12printIntegerEmE6digits:
 1585 0000 30313233 		.string	"0123456789"
 1585      34353637 
 1585      383900
 1586              		.text
 1587              	.Letext0:
 1588              		.file 4 "src/../h/../lib/hw.h"
 1589              		.file 5 "src/../h/Queue.hpp"
 1590              		.file 6 "src/../h/Scheduler.hpp"
 1591              		.file 7 "src/../h/KSemaphore.hpp"
GAS LISTING /tmp/ccAB5tPZ.s 			page 41


 1592              		.file 8 "src/../h/SleepPCBList.hpp"
 1593              		.file 9 "src/../h/syscall_cpp.hpp"
 1594              		.file 10 "src/../h/MemoryAllocator.hpp"
 1595              		.file 11 "src/../lib/console.h"
 6507              		.align	3
 6510              	DW.ref.__gxx_personality_v0:
 6511 0000 00000000 		.dword	__gxx_personality_v0
 6511      00000000 
 6512              		.ident	"GCC: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0"
 6513              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/ccAB5tPZ.s 			page 42


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Riscv.cpp
     /tmp/ccAB5tPZ.s:9      .text:0000000000000000 _ZN5Riscv10initSystemEv
     /tmp/ccAB5tPZ.s:13     .text:0000000000000000 .L0 
     /tmp/ccAB5tPZ.s:6510   .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/ccAB5tPZ.s:16     .text:0000000000000000 .L0 
     /tmp/ccAB5tPZ.s:17     .text:0000000000000004 .L0 
     /tmp/ccAB5tPZ.s:22     .text:0000000000000014 .L0 
     /tmp/ccAB5tPZ.s:23     .text:0000000000000014 .L0 
     /tmp/ccAB5tPZ.s:24     .text:0000000000000014 .L0 
     /tmp/ccAB5tPZ.s:25     .text:0000000000000014 .L0 
     /tmp/ccAB5tPZ.s:27     .text:0000000000000018 .L0 
     /tmp/ccAB5tPZ.s:29     .text:0000000000000018 .L0 
     /tmp/ccAB5tPZ.s:30     .text:0000000000000018 .L0 
     /tmp/ccAB5tPZ.s:36     .text:0000000000000020 .L0 
  src/../h/Riscv.hpp:114    .text:0000000000000020 .L0 
     /tmp/ccAB5tPZ.s:46     .text:0000000000000024 .L0 
     /tmp/ccAB5tPZ.s:47     .text:0000000000000024 .L0 
     /tmp/ccAB5tPZ.s:60     .text:0000000000000044 .L0 
     /tmp/ccAB5tPZ.s:61     .text:0000000000000044 .L0 
     /tmp/ccAB5tPZ.s:66     .text:0000000000000050 .L0 
     /tmp/ccAB5tPZ.s:67     .text:0000000000000050 .L0 
     /tmp/ccAB5tPZ.s:71     .text:0000000000000058 .L0 
     /tmp/ccAB5tPZ.s:78     .text:0000000000000064 .L0 
     /tmp/ccAB5tPZ.s:79     .text:0000000000000064 .L0 
     /tmp/ccAB5tPZ.s:80     .text:0000000000000064 .L0 
     /tmp/ccAB5tPZ.s:86     .text:000000000000006c .L0 
     /tmp/ccAB5tPZ.s:87     .text:0000000000000070 .L0 
     /tmp/ccAB5tPZ.s:88     .text:0000000000000070 .L0 
     /tmp/ccAB5tPZ.s:90     .text:0000000000000074 .L0 
     /tmp/ccAB5tPZ.s:91     .text:0000000000000074 .L0 
     /tmp/ccAB5tPZ.s:93     .text:0000000000000078 .L0 
     /tmp/ccAB5tPZ.s:96     .text:000000000000007c .L0 
     /tmp/ccAB5tPZ.s:98     .text:0000000000000080 .L0 
     /tmp/ccAB5tPZ.s:101    .text:0000000000000084 .L0 
     /tmp/ccAB5tPZ.s:104    .text:0000000000000088 .L0 
     /tmp/ccAB5tPZ.s:112    .text:00000000000000a0 .L0 
     /tmp/ccAB5tPZ.s:142    .text:00000000000000a0 _ZN5Riscv16enableInterruptsEv
     /tmp/ccAB5tPZ.s:145    .text:00000000000000a0 .L0 
     /tmp/ccAB5tPZ.s:146    .text:00000000000000a0 .L0 
     /tmp/ccAB5tPZ.s:147    .text:00000000000000a4 .L0 
     /tmp/ccAB5tPZ.s:149    .text:00000000000000a8 .L0 
     /tmp/ccAB5tPZ.s:151    .text:00000000000000ac .L0 
     /tmp/ccAB5tPZ.s:156    .text:00000000000000ac .L0 
     /tmp/ccAB5tPZ.s:157    .text:00000000000000ac .L0 
     /tmp/ccAB5tPZ.s:158    .text:00000000000000ac .L0 
     /tmp/ccAB5tPZ.s:168    .text:00000000000000b4 .L0 
     /tmp/ccAB5tPZ.s:169    .text:00000000000000b8 .L0 
     /tmp/ccAB5tPZ.s:170    .text:00000000000000b8 .L0 
     /tmp/ccAB5tPZ.s:172    .text:00000000000000bc .L0 
     /tmp/ccAB5tPZ.s:174    .text:00000000000000c0 .L0 
     /tmp/ccAB5tPZ.s:180    .text:00000000000000c0 _ZN5Riscv17disableInterruptsEv
     /tmp/ccAB5tPZ.s:183    .text:00000000000000c0 .L0 
     /tmp/ccAB5tPZ.s:184    .text:00000000000000c0 .L0 
     /tmp/ccAB5tPZ.s:185    .text:00000000000000c4 .L0 
     /tmp/ccAB5tPZ.s:187    .text:00000000000000c8 .L0 
     /tmp/ccAB5tPZ.s:189    .text:00000000000000cc .L0 
GAS LISTING /tmp/ccAB5tPZ.s 			page 43


     /tmp/ccAB5tPZ.s:194    .text:00000000000000cc .L0 
     /tmp/ccAB5tPZ.s:195    .text:00000000000000cc .L0 
     /tmp/ccAB5tPZ.s:196    .text:00000000000000cc .L0 
     /tmp/ccAB5tPZ.s:206    .text:00000000000000d4 .L0 
     /tmp/ccAB5tPZ.s:207    .text:00000000000000d8 .L0 
     /tmp/ccAB5tPZ.s:208    .text:00000000000000d8 .L0 
     /tmp/ccAB5tPZ.s:210    .text:00000000000000dc .L0 
     /tmp/ccAB5tPZ.s:212    .text:00000000000000e0 .L0 
     /tmp/ccAB5tPZ.s:218    .text:00000000000000e0 _ZN5Riscv9endSystemEv
     /tmp/ccAB5tPZ.s:221    .text:00000000000000e0 .L0 
     /tmp/ccAB5tPZ.s:222    .text:00000000000000e0 .L0 
     /tmp/ccAB5tPZ.s:223    .text:00000000000000e4 .L0 
     /tmp/ccAB5tPZ.s:226    .text:00000000000000ec .L0 
     /tmp/ccAB5tPZ.s:227    .text:00000000000000ec .L0 
     /tmp/ccAB5tPZ.s:229    .text:00000000000000f0 .L0 
     /tmp/ccAB5tPZ.s:231    .text:00000000000000f0 .L0 
     /tmp/ccAB5tPZ.s:232    .text:00000000000000f0 .L0 
     /tmp/ccAB5tPZ.s:235    .text:00000000000000f8 .L0 
     /tmp/ccAB5tPZ.s:236    .text:00000000000000fc .L0 
     /tmp/ccAB5tPZ.s:238    .text:0000000000000100 .L0 
     /tmp/ccAB5tPZ.s:239    .text:0000000000000100 .L0 
     /tmp/ccAB5tPZ.s:241    .text:0000000000000104 .L0 
     /tmp/ccAB5tPZ.s:243    .text:0000000000000108 .L0 
     /tmp/ccAB5tPZ.s:249    .text:0000000000000108 _ZN5Riscv10popSppSpieEv
     /tmp/ccAB5tPZ.s:252    .text:0000000000000108 .L0 
     /tmp/ccAB5tPZ.s:253    .text:0000000000000108 .L0 
     /tmp/ccAB5tPZ.s:254    .text:000000000000010c .L0 
     /tmp/ccAB5tPZ.s:256    .text:0000000000000110 .L0 
     /tmp/ccAB5tPZ.s:258    .text:0000000000000114 .L0 
     /tmp/ccAB5tPZ.s:260    .text:0000000000000114 .L0 
       src/Riscv.cpp:40     .text:0000000000000114 .L0 
     /tmp/ccAB5tPZ.s:266    .text:0000000000000118 .L0 
       src/Riscv.cpp:41     .text:0000000000000118 .L0 
     /tmp/ccAB5tPZ.s:272    .text:000000000000011c .L0 
     /tmp/ccAB5tPZ.s:273    .text:0000000000000120 .L0 
     /tmp/ccAB5tPZ.s:274    .text:0000000000000120 .L0 
     /tmp/ccAB5tPZ.s:276    .text:0000000000000124 .L0 
     /tmp/ccAB5tPZ.s:278    .text:0000000000000128 .L0 
     /tmp/ccAB5tPZ.s:284    .text:0000000000000128 _ZN5Riscv11printStringEPKc
     /tmp/ccAB5tPZ.s:287    .text:0000000000000128 .L0 
     /tmp/ccAB5tPZ.s:289    .text:0000000000000128 .L0 
     /tmp/ccAB5tPZ.s:290    .text:000000000000012c .L0 
     /tmp/ccAB5tPZ.s:295    .text:000000000000013c .L0 
     /tmp/ccAB5tPZ.s:296    .text:000000000000013c .L0 
     /tmp/ccAB5tPZ.s:297    .text:000000000000013c .L0 
     /tmp/ccAB5tPZ.s:298    .text:000000000000013c .L0 
     /tmp/ccAB5tPZ.s:300    .text:0000000000000140 .L0 
     /tmp/ccAB5tPZ.s:305    .text:0000000000000144 .L0 
     /tmp/ccAB5tPZ.s:306    .text:0000000000000144 .L0 
     /tmp/ccAB5tPZ.s:307    .text:0000000000000144 .L0 
  src/../h/Riscv.hpp:155    .text:0000000000000144 .L0 
     /tmp/ccAB5tPZ.s:315    .text:000000000000014c .L0 
     /tmp/ccAB5tPZ.s:316    .text:000000000000014c .L0 
     /tmp/ccAB5tPZ.s:323    .text:0000000000000150 .L0 
     /tmp/ccAB5tPZ.s:324    .text:0000000000000150 .L0 
     /tmp/ccAB5tPZ.s:325    .text:0000000000000150 .L0 
     /tmp/ccAB5tPZ.s:336    .text:0000000000000158 .L0 
GAS LISTING /tmp/ccAB5tPZ.s 			page 44


     /tmp/ccAB5tPZ.s:337    .text:0000000000000158 .L0 
     /tmp/ccAB5tPZ.s:338    .text:0000000000000158 .L0 
     /tmp/ccAB5tPZ.s:340    .text:000000000000015c .L0 
     /tmp/ccAB5tPZ.s:342    .text:0000000000000160 .L0 
     /tmp/ccAB5tPZ.s:343    .text:0000000000000160 .L0 
     /tmp/ccAB5tPZ.s:346    .text:0000000000000168 .L0 
     /tmp/ccAB5tPZ.s:347    .text:0000000000000168 .L0 
     /tmp/ccAB5tPZ.s:350    .text:000000000000016c .L0 
     /tmp/ccAB5tPZ.s:353    .text:0000000000000170 .L0 
     /tmp/ccAB5tPZ.s:354    .text:0000000000000170 .L0 
     /tmp/ccAB5tPZ.s:357    .text:0000000000000174 .L0 
     /tmp/ccAB5tPZ.s:363    .text:000000000000017c .L0 
  src/../h/Riscv.hpp:146    .text:000000000000017c .L0 
     /tmp/ccAB5tPZ.s:373    .text:0000000000000180 .L0 
     /tmp/ccAB5tPZ.s:374    .text:0000000000000184 .L0 
     /tmp/ccAB5tPZ.s:376    .text:0000000000000188 .L0 
     /tmp/ccAB5tPZ.s:377    .text:0000000000000188 .L0 
     /tmp/ccAB5tPZ.s:379    .text:000000000000018c .L0 
     /tmp/ccAB5tPZ.s:382    .text:0000000000000190 .L0 
     /tmp/ccAB5tPZ.s:384    .text:0000000000000194 .L0 
     /tmp/ccAB5tPZ.s:386    .text:0000000000000198 .L0 
     /tmp/ccAB5tPZ.s:392    .text:0000000000000198 _ZN5Riscv12printIntegerEm
     /tmp/ccAB5tPZ.s:395    .text:0000000000000198 .L0 
     /tmp/ccAB5tPZ.s:397    .text:0000000000000198 .L0 
     /tmp/ccAB5tPZ.s:398    .text:000000000000019c .L0 
     /tmp/ccAB5tPZ.s:403    .text:00000000000001ac .L0 
     /tmp/ccAB5tPZ.s:404    .text:00000000000001ac .L0 
     /tmp/ccAB5tPZ.s:405    .text:00000000000001ac .L0 
     /tmp/ccAB5tPZ.s:406    .text:00000000000001ac .L0 
     /tmp/ccAB5tPZ.s:408    .text:00000000000001b0 .L0 
     /tmp/ccAB5tPZ.s:412    .text:00000000000001b0 .L0 
     /tmp/ccAB5tPZ.s:413    .text:00000000000001b0 .L0 
     /tmp/ccAB5tPZ.s:414    .text:00000000000001b0 .L0 
  src/../h/Riscv.hpp:155    .text:00000000000001b0 .L0 
     /tmp/ccAB5tPZ.s:422    .text:00000000000001b8 .L0 
     /tmp/ccAB5tPZ.s:423    .text:00000000000001b8 .L0 
     /tmp/ccAB5tPZ.s:430    .text:00000000000001bc .L0 
     /tmp/ccAB5tPZ.s:431    .text:00000000000001bc .L0 
     /tmp/ccAB5tPZ.s:432    .text:00000000000001bc .L0 
     /tmp/ccAB5tPZ.s:442    .text:00000000000001c4 .L0 
     /tmp/ccAB5tPZ.s:443    .text:00000000000001c4 .L0 
     /tmp/ccAB5tPZ.s:444    .text:00000000000001c4 .L0 
     /tmp/ccAB5tPZ.s:445    .text:00000000000001c4 .L0 
     /tmp/ccAB5tPZ.s:446    .text:00000000000001c4 .L0 
     /tmp/ccAB5tPZ.s:447    .text:00000000000001c4 .L0 
     /tmp/ccAB5tPZ.s:448    .text:00000000000001c4 .L0 
     /tmp/ccAB5tPZ.s:449    .text:00000000000001c4 .L0 
     /tmp/ccAB5tPZ.s:452    .text:00000000000001c8 .L0 
     /tmp/ccAB5tPZ.s:453    .text:00000000000001c8 .L0 
     /tmp/ccAB5tPZ.s:457    .text:00000000000001cc .L0 
     /tmp/ccAB5tPZ.s:458    .text:00000000000001cc .L0 
     /tmp/ccAB5tPZ.s:459    .text:00000000000001cc .L0 
     /tmp/ccAB5tPZ.s:463    .text:00000000000001d4 .L0 
     /tmp/ccAB5tPZ.s:469    .text:00000000000001ec .L0 
     /tmp/ccAB5tPZ.s:475    .text:00000000000001fc .L0 
     /tmp/ccAB5tPZ.s:477    .text:0000000000000200 .L0 
     /tmp/ccAB5tPZ.s:480    .text:0000000000000204 .L0 
GAS LISTING /tmp/ccAB5tPZ.s 			page 45


     /tmp/ccAB5tPZ.s:485    .text:000000000000020c .L0 
     /tmp/ccAB5tPZ.s:486    .text:000000000000020c .L0 
     /tmp/ccAB5tPZ.s:490    .text:0000000000000214 .L0 
     /tmp/ccAB5tPZ.s:491    .text:0000000000000214 .L0 
     /tmp/ccAB5tPZ.s:499    .text:000000000000022c .L0 
     /tmp/ccAB5tPZ.s:500    .text:000000000000022c .L0 
     /tmp/ccAB5tPZ.s:504    .text:0000000000000238 .L0 
     /tmp/ccAB5tPZ.s:505    .text:0000000000000238 .L0 
     /tmp/ccAB5tPZ.s:508    .text:000000000000023c .L0 
     /tmp/ccAB5tPZ.s:514    .text:0000000000000244 .L0 
  src/../h/Riscv.hpp:146    .text:0000000000000244 .L0 
     /tmp/ccAB5tPZ.s:524    .text:0000000000000248 .L0 
     /tmp/ccAB5tPZ.s:525    .text:000000000000024c .L0 
     /tmp/ccAB5tPZ.s:527    .text:0000000000000250 .L0 
     /tmp/ccAB5tPZ.s:528    .text:0000000000000250 .L0 
     /tmp/ccAB5tPZ.s:530    .text:0000000000000254 .L0 
     /tmp/ccAB5tPZ.s:532    .text:0000000000000258 .L0 
     /tmp/ccAB5tPZ.s:534    .text:000000000000025c .L0 
     /tmp/ccAB5tPZ.s:536    .text:0000000000000260 .L0 
     /tmp/ccAB5tPZ.s:547    .text:0000000000000260 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccAB5tPZ.s:550    .text:0000000000000260 .L0 
     /tmp/ccAB5tPZ.s:553    .text:0000000000000260 .L0 
     /tmp/ccAB5tPZ.s:554    .text:0000000000000264 .L0 
     /tmp/ccAB5tPZ.s:563    .text:0000000000000284 .L0 
     /tmp/ccAB5tPZ.s:564    .text:0000000000000284 .L0 
     /tmp/ccAB5tPZ.s:565    .text:0000000000000284 .L0 
     /tmp/ccAB5tPZ.s:566    .text:0000000000000284 .L0 
     /tmp/ccAB5tPZ.s:567    .text:0000000000000284 .L0 
     /tmp/ccAB5tPZ.s:568    .text:0000000000000284 .L0 
     /tmp/ccAB5tPZ.s:569    .text:0000000000000284 .L0 
     /tmp/ccAB5tPZ.s:570    .text:0000000000000284 .L0 
     /tmp/ccAB5tPZ.s:572    .text:0000000000000288 .L0 
     /tmp/ccAB5tPZ.s:574    .text:0000000000000288 .L0 
     /tmp/ccAB5tPZ.s:575    .text:0000000000000288 .L0 
       src/Riscv.cpp:93     .text:0000000000000288 .L0 
     /tmp/ccAB5tPZ.s:585    .text:000000000000028c .L0 
     /tmp/ccAB5tPZ.s:586    .text:000000000000028c .L0 
     /tmp/ccAB5tPZ.s:587    .text:000000000000028c .L0 
  src/../h/Riscv.hpp:89     .text:000000000000028c .L0 
     /tmp/ccAB5tPZ.s:595    .text:0000000000000294 .L0 
     /tmp/ccAB5tPZ.s:596    .text:0000000000000294 .L0 
     /tmp/ccAB5tPZ.s:602    .text:0000000000000298 .L0 
     /tmp/ccAB5tPZ.s:616    .text:00000000000002c4 .L0 
     /tmp/ccAB5tPZ.s:617    .text:00000000000002c4 .L0 
     /tmp/ccAB5tPZ.s:618    .text:00000000000002c4 .L0 
     /tmp/ccAB5tPZ.s:619    .text:00000000000002c4 .L0 
       src/Riscv.cpp:140    .text:00000000000002c4 .L0 
     /tmp/ccAB5tPZ.s:629    .text:00000000000002c8 .L0 
     /tmp/ccAB5tPZ.s:630    .text:00000000000002c8 .L0 
     /tmp/ccAB5tPZ.s:631    .text:00000000000002c8 .L0 
  src/../h/Riscv.hpp:99     .text:00000000000002c8 .L0 
     /tmp/ccAB5tPZ.s:639    .text:00000000000002d0 .L0 
     /tmp/ccAB5tPZ.s:640    .text:00000000000002d0 .L0 
     /tmp/ccAB5tPZ.s:645    .text:00000000000002d4 .L0 
     /tmp/ccAB5tPZ.s:646    .text:00000000000002d4 .L0 
     /tmp/ccAB5tPZ.s:650    .text:00000000000002d8 .L0 
     /tmp/ccAB5tPZ.s:660    .text:00000000000002e0 .L0 
GAS LISTING /tmp/ccAB5tPZ.s 			page 46


     /tmp/ccAB5tPZ.s:672    .text:00000000000002e8 .L0 
     /tmp/ccAB5tPZ.s:686    .text:00000000000002f0 .L0 
     /tmp/ccAB5tPZ.s:702    .text:00000000000002f8 .L0 
     /tmp/ccAB5tPZ.s:720    .text:0000000000000300 .L0 
     /tmp/ccAB5tPZ.s:740    .text:0000000000000308 .L0 
     /tmp/ccAB5tPZ.s:762    .text:0000000000000310 .L0 
     /tmp/ccAB5tPZ.s:786    .text:0000000000000318 .L0 
     /tmp/ccAB5tPZ.s:812    .text:0000000000000320 .L0 
     /tmp/ccAB5tPZ.s:816    .text:0000000000000328 .L0 
     /tmp/ccAB5tPZ.s:817    .text:0000000000000328 .L0 
       src/Riscv.cpp:256    .text:0000000000000328 .L0 
     /tmp/ccAB5tPZ.s:824    .text:000000000000032c .L0 
     /tmp/ccAB5tPZ.s:826    .text:000000000000032c .L0 
     /tmp/ccAB5tPZ.s:828    .text:0000000000000330 .L0 
     /tmp/ccAB5tPZ.s:837    .text:0000000000000348 .L0 
       src/Riscv.cpp:260    .text:0000000000000348 .L0 
     /tmp/ccAB5tPZ.s:859    .text:0000000000000350 .L0 
     /tmp/ccAB5tPZ.s:865    .text:0000000000000360 .L0 
     /tmp/ccAB5tPZ.s:866    .text:0000000000000360 .L0 
     /tmp/ccAB5tPZ.s:867    .text:0000000000000360 .L0 
     /tmp/ccAB5tPZ.s:874    .text:0000000000000370 .L0 
     /tmp/ccAB5tPZ.s:875    .text:0000000000000370 .L0 
     /tmp/ccAB5tPZ.s:876    .text:0000000000000370 .L0 
     /tmp/ccAB5tPZ.s:880    .text:0000000000000378 .L0 
     /tmp/ccAB5tPZ.s:881    .text:000000000000037c .L0 
     /tmp/ccAB5tPZ.s:882    .text:000000000000037c .L0 
     /tmp/ccAB5tPZ.s:884    .text:0000000000000380 .L0 
     /tmp/ccAB5tPZ.s:885    .text:0000000000000380 .L0 
     /tmp/ccAB5tPZ.s:887    .text:0000000000000384 .L0 
     /tmp/ccAB5tPZ.s:889    .text:0000000000000388 .L0 
     /tmp/ccAB5tPZ.s:891    .text:000000000000038c .L0 
     /tmp/ccAB5tPZ.s:893    .text:0000000000000390 .L0 
     /tmp/ccAB5tPZ.s:895    .text:0000000000000394 .L0 
     /tmp/ccAB5tPZ.s:897    .text:0000000000000398 .L0 
     /tmp/ccAB5tPZ.s:899    .text:000000000000039c .L0 
     /tmp/ccAB5tPZ.s:903    .text:00000000000003a0 .L0 
     /tmp/ccAB5tPZ.s:907    .text:00000000000003a0 .L0 
     /tmp/ccAB5tPZ.s:910    .text:00000000000003a0 .L0 
     /tmp/ccAB5tPZ.s:911    .text:00000000000003a0 .L0 
     /tmp/ccAB5tPZ.s:912    .text:00000000000003a0 .L0 
     /tmp/ccAB5tPZ.s:923    .text:00000000000003a8 .L0 
     /tmp/ccAB5tPZ.s:924    .text:00000000000003a8 .L0 
     /tmp/ccAB5tPZ.s:930    .text:00000000000003bc .L0 
     /tmp/ccAB5tPZ.s:931    .text:00000000000003bc .L0 
     /tmp/ccAB5tPZ.s:935    .text:00000000000003c4 .L0 
     /tmp/ccAB5tPZ.s:936    .text:00000000000003c4 .L0 
     /tmp/ccAB5tPZ.s:942    .text:00000000000003d0 .L0 
     /tmp/ccAB5tPZ.s:943    .text:00000000000003d0 .L0 
     /tmp/ccAB5tPZ.s:948    .text:00000000000003d4 .L0 
     /tmp/ccAB5tPZ.s:950    .text:00000000000003d8 .L0 
     /tmp/ccAB5tPZ.s:955    .text:00000000000003dc .L0 
     /tmp/ccAB5tPZ.s:956    .text:00000000000003dc .L0 
     /tmp/ccAB5tPZ.s:957    .text:00000000000003dc .L0 
  src/../h/Riscv.hpp:99     .text:00000000000003dc .L0 
     /tmp/ccAB5tPZ.s:965    .text:00000000000003e4 .L0 
     /tmp/ccAB5tPZ.s:966    .text:00000000000003e4 .L0 
     /tmp/ccAB5tPZ.s:973    .text:00000000000003e8 .L0 
GAS LISTING /tmp/ccAB5tPZ.s 			page 47


     /tmp/ccAB5tPZ.s:974    .text:00000000000003e8 .L0 
     /tmp/ccAB5tPZ.s:975    .text:00000000000003e8 .L0 
  src/../h/Riscv.hpp:155    .text:00000000000003e8 .L0 
     /tmp/ccAB5tPZ.s:983    .text:00000000000003f0 .L0 
     /tmp/ccAB5tPZ.s:984    .text:00000000000003f0 .L0 
     /tmp/ccAB5tPZ.s:989    .text:00000000000003f4 .L0 
     /tmp/ccAB5tPZ.s:990    .text:00000000000003f4 .L0 
     /tmp/ccAB5tPZ.s:993    .text:0000000000000400 .L0 
     /tmp/ccAB5tPZ.s:994    .text:0000000000000400 .L0 
     /tmp/ccAB5tPZ.s:999    .text:0000000000000408 .L0 
     /tmp/ccAB5tPZ.s:1000   .text:0000000000000408 .L0 
  src/../h/Riscv.hpp:160    .text:0000000000000408 .L0 
     /tmp/ccAB5tPZ.s:1012   .text:000000000000040c .L0 
     /tmp/ccAB5tPZ.s:1013   .text:000000000000040c .L0 
  src/../h/Riscv.hpp:104    .text:000000000000040c .L0 
     /tmp/ccAB5tPZ.s:1020   .text:0000000000000410 .L0 
     /tmp/ccAB5tPZ.s:1030   .text:0000000000000414 .L0 
     /tmp/ccAB5tPZ.s:1031   .text:0000000000000414 .L0 
       src/Riscv.cpp:148    .text:0000000000000414 .L0 
     /tmp/ccAB5tPZ.s:1038   .text:0000000000000418 .L0 
     /tmp/ccAB5tPZ.s:1039   .text:0000000000000418 .L0 
     /tmp/ccAB5tPZ.s:1041   .text:0000000000000418 .L0 
     /tmp/ccAB5tPZ.s:1046   .text:0000000000000424 .L0 
       src/Riscv.cpp:151    .text:0000000000000424 .L0 
     /tmp/ccAB5tPZ.s:1059   .text:0000000000000428 .L0 
     /tmp/ccAB5tPZ.s:1060   .text:0000000000000428 .L0 
  src/../h/Riscv.hpp:104    .text:0000000000000428 .L0 
     /tmp/ccAB5tPZ.s:1067   .text:000000000000042c .L0 
     /tmp/ccAB5tPZ.s:1076   .text:0000000000000430 .L0 
     /tmp/ccAB5tPZ.s:1077   .text:0000000000000430 .L0 
       src/Riscv.cpp:156    .text:0000000000000430 .L0 
     /tmp/ccAB5tPZ.s:1084   .text:0000000000000434 .L0 
     /tmp/ccAB5tPZ.s:1086   .text:0000000000000434 .L0 
     /tmp/ccAB5tPZ.s:1089   .text:000000000000043c .L0 
       src/Riscv.cpp:158    .text:000000000000043c .L0 
     /tmp/ccAB5tPZ.s:1102   .text:0000000000000444 .L0 
     /tmp/ccAB5tPZ.s:1103   .text:0000000000000444 .L0 
     /tmp/ccAB5tPZ.s:1104   .text:0000000000000444 .L0 
     /tmp/ccAB5tPZ.s:1105   .text:0000000000000444 .L0 
       src/Riscv.cpp:165    .text:0000000000000444 .L0 
     /tmp/ccAB5tPZ.s:1112   .text:0000000000000448 .L0 
       src/Riscv.cpp:166    .text:0000000000000448 .L0 
     /tmp/ccAB5tPZ.s:1118   .text:000000000000044c .L0 
       src/Riscv.cpp:167    .text:000000000000044c .L0 
     /tmp/ccAB5tPZ.s:1124   .text:0000000000000450 .L0 
     /tmp/ccAB5tPZ.s:1126   .text:0000000000000450 .L0 
     /tmp/ccAB5tPZ.s:1140   .text:0000000000000478 .L0 
     /tmp/ccAB5tPZ.s:1141   .text:0000000000000478 .L0 
     /tmp/ccAB5tPZ.s:1143   .text:000000000000047c .L0 
     /tmp/ccAB5tPZ.s:1145   .text:0000000000000480 .L0 
       src/Riscv.cpp:179    .text:0000000000000480 .L0 
     /tmp/ccAB5tPZ.s:1154   .text:0000000000000488 .L0 
       src/Riscv.cpp:177    .text:0000000000000488 .L0 
     /tmp/ccAB5tPZ.s:1169   .text:0000000000000490 .L0 
     /tmp/ccAB5tPZ.s:1170   .text:0000000000000490 .L0 
     /tmp/ccAB5tPZ.s:1171   .text:0000000000000490 .L0 
  src/../h/Riscv.hpp:155    .text:0000000000000490 .L0 
GAS LISTING /tmp/ccAB5tPZ.s 			page 48


     /tmp/ccAB5tPZ.s:1180   .text:0000000000000498 .L0 
     /tmp/ccAB5tPZ.s:1181   .text:0000000000000498 .L0 
     /tmp/ccAB5tPZ.s:1186   .text:000000000000049c .L0 
     /tmp/ccAB5tPZ.s:1187   .text:000000000000049c .L0 
     /tmp/ccAB5tPZ.s:1191   .text:00000000000004a8 .L0 
     /tmp/ccAB5tPZ.s:1192   .text:00000000000004a8 .L0 
     /tmp/ccAB5tPZ.s:1197   .text:00000000000004b0 .L0 
     /tmp/ccAB5tPZ.s:1198   .text:00000000000004b0 .L0 
  src/../h/Riscv.hpp:160    .text:00000000000004b0 .L0 
     /tmp/ccAB5tPZ.s:1205   .text:00000000000004b4 .L0 
     /tmp/ccAB5tPZ.s:1214   .text:00000000000004b8 .L0 
     /tmp/ccAB5tPZ.s:1215   .text:00000000000004b8 .L0 
     /tmp/ccAB5tPZ.s:1219   .text:00000000000004c4 .L0 
     /tmp/ccAB5tPZ.s:1223   .text:00000000000004c8 .L0 
     /tmp/ccAB5tPZ.s:1224   .text:00000000000004c8 .L0 
     /tmp/ccAB5tPZ.s:1225   .text:00000000000004c8 .L0 
  src/../h/Riscv.hpp:155    .text:00000000000004c8 .L0 
     /tmp/ccAB5tPZ.s:1233   .text:00000000000004d0 .L0 
     /tmp/ccAB5tPZ.s:1234   .text:00000000000004d0 .L0 
     /tmp/ccAB5tPZ.s:1239   .text:00000000000004d4 .L0 
     /tmp/ccAB5tPZ.s:1240   .text:00000000000004d4 .L0 
     /tmp/ccAB5tPZ.s:1243   .text:00000000000004e0 .L0 
     /tmp/ccAB5tPZ.s:1244   .text:00000000000004e0 .L0 
     /tmp/ccAB5tPZ.s:1264   .text:00000000000004ec .L0 
     /tmp/ccAB5tPZ.s:1267   .text:00000000000004ec .L0 
     /tmp/ccAB5tPZ.s:1268   .text:00000000000004ec .L0 
     /tmp/ccAB5tPZ.s:1269   .text:00000000000004ec .L0 
     /tmp/ccAB5tPZ.s:1275   .text:00000000000004f4 .L0 
     /tmp/ccAB5tPZ.s:1276   .text:00000000000004f4 .L0 
     /tmp/ccAB5tPZ.s:1281   .text:00000000000004fc .L0 
     /tmp/ccAB5tPZ.s:1282   .text:00000000000004fc .L0 
  src/../h/Riscv.hpp:160    .text:00000000000004fc .L0 
     /tmp/ccAB5tPZ.s:1289   .text:0000000000000500 .L0 
     /tmp/ccAB5tPZ.s:1295   .text:0000000000000504 .L0 
       src/Riscv.cpp:192    .text:0000000000000504 .L0 
     /tmp/ccAB5tPZ.s:1302   .text:0000000000000508 .L0 
     /tmp/ccAB5tPZ.s:1309   .text:000000000000050c .L0 
     /tmp/ccAB5tPZ.s:1310   .text:000000000000050c .L0 
       src/Riscv.cpp:205    .text:000000000000050c .L0 
     /tmp/ccAB5tPZ.s:1320   .text:0000000000000510 .L0 
     /tmp/ccAB5tPZ.s:1321   .text:0000000000000510 .L0 
     /tmp/ccAB5tPZ.s:1322   .text:0000000000000510 .L0 
  src/../h/Riscv.hpp:155    .text:0000000000000510 .L0 
     /tmp/ccAB5tPZ.s:1331   .text:0000000000000518 .L0 
     /tmp/ccAB5tPZ.s:1332   .text:0000000000000518 .L0 
     /tmp/ccAB5tPZ.s:1337   .text:000000000000051c .L0 
     /tmp/ccAB5tPZ.s:1338   .text:000000000000051c .L0 
     /tmp/ccAB5tPZ.s:1341   .text:0000000000000528 .L0 
     /tmp/ccAB5tPZ.s:1342   .text:0000000000000528 .L0 
     /tmp/ccAB5tPZ.s:1348   .text:0000000000000534 .L0 
     /tmp/ccAB5tPZ.s:1349   .text:0000000000000534 .L0 
     /tmp/ccAB5tPZ.s:1354   .text:0000000000000538 .L0 
     /tmp/ccAB5tPZ.s:1355   .text:0000000000000538 .L0 
     /tmp/ccAB5tPZ.s:1358   .text:0000000000000540 .L0 
     /tmp/ccAB5tPZ.s:1359   .text:0000000000000540 .L0 
     /tmp/ccAB5tPZ.s:1364   .text:0000000000000548 .L0 
     /tmp/ccAB5tPZ.s:1365   .text:0000000000000548 .L0 
GAS LISTING /tmp/ccAB5tPZ.s 			page 49


  src/../h/Riscv.hpp:160    .text:0000000000000548 .L0 
     /tmp/ccAB5tPZ.s:1375   .text:000000000000054c .L0 
       src/Riscv.cpp:214    .text:000000000000054c .L0 
     /tmp/ccAB5tPZ.s:1388   .text:0000000000000554 .L0 
     /tmp/ccAB5tPZ.s:1389   .text:0000000000000554 .L0 
     /tmp/ccAB5tPZ.s:1390   .text:0000000000000554 .L0 
       src/Riscv.cpp:220    .text:0000000000000554 .L0 
     /tmp/ccAB5tPZ.s:1397   .text:0000000000000558 .L0 
       src/Riscv.cpp:221    .text:0000000000000558 .L0 
     /tmp/ccAB5tPZ.s:1403   .text:000000000000055c .L0 
     /tmp/ccAB5tPZ.s:1405   .text:000000000000055c .L0 
     /tmp/ccAB5tPZ.s:1417   .text:0000000000000578 .L0 
     /tmp/ccAB5tPZ.s:1418   .text:0000000000000578 .L0 
     /tmp/ccAB5tPZ.s:1420   .text:000000000000057c .L0 
     /tmp/ccAB5tPZ.s:1422   .text:0000000000000580 .L0 
       src/Riscv.cpp:230    .text:0000000000000580 .L0 
     /tmp/ccAB5tPZ.s:1431   .text:0000000000000588 .L0 
       src/Riscv.cpp:228    .text:0000000000000588 .L0 
     /tmp/ccAB5tPZ.s:1444   .text:0000000000000590 .L0 
     /tmp/ccAB5tPZ.s:1445   .text:0000000000000590 .L0 
       src/Riscv.cpp:238    .text:0000000000000590 .L0 
     /tmp/ccAB5tPZ.s:1453   .text:0000000000000594 .L0 
     /tmp/ccAB5tPZ.s:1455   .text:0000000000000594 .L0 
     /tmp/ccAB5tPZ.s:1458   .text:000000000000059c .L0 
       src/Riscv.cpp:240    .text:000000000000059c .L0 
     /tmp/ccAB5tPZ.s:1471   .text:00000000000005a4 .L0 
     /tmp/ccAB5tPZ.s:1472   .text:00000000000005a4 .L0 
       src/Riscv.cpp:247    .text:00000000000005a4 .L0 
     /tmp/ccAB5tPZ.s:1479   .text:00000000000005a8 .L0 
     /tmp/ccAB5tPZ.s:1481   .text:00000000000005a8 .L0 
     /tmp/ccAB5tPZ.s:1485   .text:00000000000005b0 .L0 
       src/Riscv.cpp:249    .text:00000000000005b0 .L0 
     /tmp/ccAB5tPZ.s:1505   .text:00000000000005bc .L0 
     /tmp/ccAB5tPZ.s:1523   .text:00000000000005d8 .L0 
     /tmp/ccAB5tPZ.s:1541   .text:00000000000005f0 .L0 
     /tmp/ccAB5tPZ.s:1581   .rodata:0000000000000000 .LANCHOR0
     /tmp/ccAB5tPZ.s:1584   .rodata:0000000000000000 _ZZN5Riscv12printIntegerEmE6digits
     /tmp/ccAB5tPZ.s:1596   .text:00000000000005f0 .L0 
     /tmp/ccAB5tPZ.s:30     .text:0000000000000018 .L0 
     /tmp/ccAB5tPZ.s:71     .text:0000000000000058 .L0 
     /tmp/ccAB5tPZ.s:465    .text:00000000000001dc .L0 
     /tmp/ccAB5tPZ.s:541    .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccAB5tPZ.s:867    .text:0000000000000360 .L0 
     /tmp/ccAB5tPZ.s:924    .text:00000000000003a8 .L0 
     /tmp/ccAB5tPZ.s:936    .text:00000000000003c4 .L0 
     /tmp/ccAB5tPZ.s:990    .text:00000000000003f4 .L0 
     /tmp/ccAB5tPZ.s:1187   .text:000000000000049c .L0 
     /tmp/ccAB5tPZ.s:1215   .text:00000000000004b8 .L0 
     /tmp/ccAB5tPZ.s:1240   .text:00000000000004d4 .L0 
     /tmp/ccAB5tPZ.s:1244   .text:00000000000004e0 .L0 
     /tmp/ccAB5tPZ.s:1338   .text:000000000000051c .L0 
     /tmp/ccAB5tPZ.s:1342   .text:0000000000000528 .L0 
     /tmp/ccAB5tPZ.s:351    .text:0000000000000170 .L15
     /tmp/ccAB5tPZ.s:332    .text:0000000000000158 .L16
     /tmp/ccAB5tPZ.s:455    .text:00000000000001cc .L19
     /tmp/ccAB5tPZ.s:497    .text:000000000000022c .L20
     /tmp/ccAB5tPZ.s:483    .text:000000000000020c .L21
GAS LISTING /tmp/ccAB5tPZ.s 			page 50


     /tmp/ccAB5tPZ.s:902    .text:00000000000003a0 .L24
     /tmp/ccAB5tPZ.s:846    .text:0000000000000350 .L25
     /tmp/ccAB5tPZ.s:871    .text:0000000000000370 .L26
     /tmp/ccAB5tPZ.s:1022   .text:0000000000000414 .L50
     /tmp/ccAB5tPZ.s:1069   .text:0000000000000430 .L51
     /tmp/ccAB5tPZ.s:1098   .text:0000000000000444 .L52
     /tmp/ccAB5tPZ.s:1162   .text:0000000000000490 .L53
     /tmp/ccAB5tPZ.s:1207   .text:00000000000004b8 .L54
     /tmp/ccAB5tPZ.s:1304   .text:000000000000050c .L55
     /tmp/ccAB5tPZ.s:1384   .text:0000000000000554 .L56
     /tmp/ccAB5tPZ.s:1439   .text:0000000000000590 .L57
     /tmp/ccAB5tPZ.s:1467   .text:00000000000005a4 .L58
     /tmp/ccAB5tPZ.s:1053   .text:0000000000000428 .L30
     /tmp/ccAB5tPZ.s:835    .text:0000000000000348 .L43
     /tmp/ccAB5tPZ.s:878    .text:0000000000000378 .L23
     /tmp/ccAB5tPZ.s:1152   .text:0000000000000488 .L59
     /tmp/ccAB5tPZ.s:1291   .text:0000000000000504 .L60
     /tmp/ccAB5tPZ.s:1429   .text:0000000000000588 .L61
     /tmp/ccAB5tPZ.s:48     .text:0000000000000028 .LEHB0
     /tmp/ccAB5tPZ.s:10     .text:0000000000000000 .LFB22
     /tmp/ccAB5tPZ.s:51     .text:0000000000000030 .LEHE0
     /tmp/ccAB5tPZ.s:55     .text:000000000000003c .LEHB1
     /tmp/ccAB5tPZ.s:58     .text:0000000000000044 .LEHE1
     /tmp/ccAB5tPZ.s:100    .text:0000000000000084 .L3
     /tmp/ccAB5tPZ.s:62     .text:0000000000000048 .LEHB2
     /tmp/ccAB5tPZ.s:69     .text:0000000000000058 .LEHE2
     /tmp/ccAB5tPZ.s:108    .text:0000000000000098 .LEHB3
     /tmp/ccAB5tPZ.s:111    .text:00000000000000a0 .LEHE3
     /tmp/ccAB5tPZ.s:832    .text:0000000000000340 .LEHB4
     /tmp/ccAB5tPZ.s:548    .text:0000000000000260 .LFB29
     /tmp/ccAB5tPZ.s:1129   .text:000000000000045c .LEHE4
     /tmp/ccAB5tPZ.s:1135   .text:0000000000000470 .LEHB5
     /tmp/ccAB5tPZ.s:1138   .text:0000000000000478 .LEHE5
     /tmp/ccAB5tPZ.s:1494   .text:00000000000005b8 .L46
     /tmp/ccAB5tPZ.s:1190   .text:00000000000004a8 .LEHB6
     /tmp/ccAB5tPZ.s:1408   .text:0000000000000568 .LEHE6
     /tmp/ccAB5tPZ.s:1412   .text:0000000000000570 .LEHB7
     /tmp/ccAB5tPZ.s:1415   .text:0000000000000578 .LEHE7
     /tmp/ccAB5tPZ.s:1513   .text:00000000000005d4 .L47
     /tmp/ccAB5tPZ.s:1452   .text:0000000000000594 .LEHB8
     /tmp/ccAB5tPZ.s:1483   .text:00000000000005b0 .LEHE8
     /tmp/ccAB5tPZ.s:1509   .text:00000000000005cc .LEHB9
     /tmp/ccAB5tPZ.s:1512   .text:00000000000005d4 .LEHE9
     /tmp/ccAB5tPZ.s:1527   .text:00000000000005e8 .LEHB10
     /tmp/ccAB5tPZ.s:1530   .text:00000000000005f0 .LEHE10
     /tmp/ccAB5tPZ.s:4198   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccAB5tPZ.s:6086   .debug_str:000000000000021c .LASF229
     /tmp/ccAB5tPZ.s:6112   .debug_str:0000000000000384 .LASF230
     /tmp/ccAB5tPZ.s:6414   .debug_str:0000000000000bcf .LASF231
     /tmp/ccAB5tPZ.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccAB5tPZ.s:1587   .text:00000000000005f0 .Letext0
     /tmp/ccAB5tPZ.s:6022   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccAB5tPZ.s:6200   .debug_str:0000000000000618 .LASF0
     /tmp/ccAB5tPZ.s:6324   .debug_str:000000000000099b .LASF3
     /tmp/ccAB5tPZ.s:6232   .debug_str:00000000000006fd .LASF1
     /tmp/ccAB5tPZ.s:6334   .debug_str:00000000000009c0 .LASF2
     /tmp/ccAB5tPZ.s:6350   .debug_str:0000000000000a44 .LASF4
GAS LISTING /tmp/ccAB5tPZ.s 			page 51


     /tmp/ccAB5tPZ.s:6216   .debug_str:0000000000000680 .LASF5
     /tmp/ccAB5tPZ.s:6042   .debug_str:0000000000000086 .LASF6
     /tmp/ccAB5tPZ.s:6308   .debug_str:0000000000000936 .LASF7
     /tmp/ccAB5tPZ.s:6298   .debug_str:00000000000008f4 .LASF8
     /tmp/ccAB5tPZ.s:6222   .debug_str:00000000000006c4 .LASF9
     /tmp/ccAB5tPZ.s:6176   .debug_str:0000000000000551 .LASF10
     /tmp/ccAB5tPZ.s:6184   .debug_str:00000000000005a1 .LASF11
     /tmp/ccAB5tPZ.s:6100   .debug_str:0000000000000340 .LASF12
     /tmp/ccAB5tPZ.s:6164   .debug_str:0000000000000507 .LASF13
     /tmp/ccAB5tPZ.s:6114   .debug_str:0000000000000392 .LASF14
     /tmp/ccAB5tPZ.s:6098   .debug_str:0000000000000330 .LASF15
     /tmp/ccAB5tPZ.s:6384   .debug_str:0000000000000b3b .LASF16
     /tmp/ccAB5tPZ.s:6148   .debug_str:0000000000000473 .LASF17
     /tmp/ccAB5tPZ.s:6374   .debug_str:0000000000000af4 .LASF18
     /tmp/ccAB5tPZ.s:6446   .debug_str:0000000000000c93 .LASF91
     /tmp/ccAB5tPZ.s:6320   .debug_str:0000000000000985 .LASF22
     /tmp/ccAB5tPZ.s:6240   .debug_str:0000000000000732 .LASF19
     /tmp/ccAB5tPZ.s:6154   .debug_str:00000000000004bd .LASF20
     /tmp/ccAB5tPZ.s:6464   .debug_str:0000000000000cf8 .LASF21
     /tmp/ccAB5tPZ.s:6436   .debug_str:0000000000000c5d .LASF23
     /tmp/ccAB5tPZ.s:6156   .debug_str:00000000000004c6 .LASF24
     /tmp/ccAB5tPZ.s:6402   .debug_str:0000000000000b87 .LASF25
     /tmp/ccAB5tPZ.s:6130   .debug_str:0000000000000404 .LASF26
     /tmp/ccAB5tPZ.s:6270   .debug_str:000000000000082c .LASF27
     /tmp/ccAB5tPZ.s:6260   .debug_str:00000000000007d4 .LASF29
     /tmp/ccAB5tPZ.s:6146   .debug_str:0000000000000469 .LASF28
     /tmp/ccAB5tPZ.s:6036   .debug_str:0000000000000060 .LASF30
     /tmp/ccAB5tPZ.s:6096   .debug_str:000000000000031f .LASF31
     /tmp/ccAB5tPZ.s:6244   .debug_str:0000000000000740 .LASF32
     /tmp/ccAB5tPZ.s:6212   .debug_str:0000000000000661 .LASF33
     /tmp/ccAB5tPZ.s:6120   .debug_str:00000000000003c5 .LASF34
     /tmp/ccAB5tPZ.s:6474   .debug_str:0000000000000d33 .LASF35
     /tmp/ccAB5tPZ.s:6058   .debug_str:0000000000000127 .LASF37
     /tmp/ccAB5tPZ.s:6306   .debug_str:0000000000000929 .LASF36
     /tmp/ccAB5tPZ.s:6064   .debug_str:0000000000000155 .LASF38
     /tmp/ccAB5tPZ.s:6360   .debug_str:0000000000000a90 .LASF39
     /tmp/ccAB5tPZ.s:6152   .debug_str:00000000000004a2 .LASF40
     /tmp/ccAB5tPZ.s:6206   .debug_str:000000000000063a .LASF41
     /tmp/ccAB5tPZ.s:6458   .debug_str:0000000000000cc9 .LASF42
     /tmp/ccAB5tPZ.s:6430   .debug_str:0000000000000c49 .LASF45
     /tmp/ccAB5tPZ.s:6422   .debug_str:0000000000000c07 .LASF47
     /tmp/ccAB5tPZ.s:6330   .debug_str:00000000000009ac .LASF43
     /tmp/ccAB5tPZ.s:6284   .debug_str:000000000000088a .LASF44
     /tmp/ccAB5tPZ.s:6314   .debug_str:0000000000000957 .LASF46
     /tmp/ccAB5tPZ.s:6316   .debug_str:000000000000095e .LASF48
     /tmp/ccAB5tPZ.s:6280   .debug_str:000000000000086f .LASF49
     /tmp/ccAB5tPZ.s:6224   .debug_str:00000000000006d7 .LASF50
     /tmp/ccAB5tPZ.s:6460   .debug_str:0000000000000ce3 .LASF51
     /tmp/ccAB5tPZ.s:6410   .debug_str:0000000000000bb1 .LASF52
     /tmp/ccAB5tPZ.s:6278   .debug_str:0000000000000867 .LASF53
     /tmp/ccAB5tPZ.s:6282   .debug_str:0000000000000876 .LASF54
     /tmp/ccAB5tPZ.s:6266   .debug_str:0000000000000812 .LASF55
     /tmp/ccAB5tPZ.s:6318   .debug_str:0000000000000971 .LASF56
     /tmp/ccAB5tPZ.s:6502   .debug_str:0000000000000df5 .LASF57
     /tmp/ccAB5tPZ.s:6210   .debug_str:000000000000064d .LASF58
     /tmp/ccAB5tPZ.s:6380   .debug_str:0000000000000b2d .LASF59
     /tmp/ccAB5tPZ.s:6354   .debug_str:0000000000000a6e .LASF60
GAS LISTING /tmp/ccAB5tPZ.s 			page 52


     /tmp/ccAB5tPZ.s:6356   .debug_str:0000000000000a81 .LASF61
     /tmp/ccAB5tPZ.s:6106   .debug_str:000000000000035d .LASF62
     /tmp/ccAB5tPZ.s:6142   .debug_str:0000000000000451 .LASF63
     /tmp/ccAB5tPZ.s:6194   .debug_str:00000000000005e8 .LASF64
     /tmp/ccAB5tPZ.s:6208   .debug_str:0000000000000647 .LASF65
     /tmp/ccAB5tPZ.s:6134   .debug_str:0000000000000423 .LASF66
     /tmp/ccAB5tPZ.s:6044   .debug_str:000000000000008d .LASF67
     /tmp/ccAB5tPZ.s:6340   .debug_str:00000000000009e6 .LASF68
     /tmp/ccAB5tPZ.s:6332   .debug_str:00000000000009b5 .LASF69
     /tmp/ccAB5tPZ.s:6490   .debug_str:0000000000000d96 .LASF70
     /tmp/ccAB5tPZ.s:6448   .debug_str:0000000000000c99 .LASF71
     /tmp/ccAB5tPZ.s:6470   .debug_str:0000000000000d16 .LASF72
     /tmp/ccAB5tPZ.s:6442   .debug_str:0000000000000c84 .LASF73
     /tmp/ccAB5tPZ.s:6262   .debug_str:00000000000007ec .LASF74
     /tmp/ccAB5tPZ.s:6188   .debug_str:00000000000005c2 .LASF75
     /tmp/ccAB5tPZ.s:6196   .debug_str:00000000000005fa .LASF76
     /tmp/ccAB5tPZ.s:6428   .debug_str:0000000000000c3a .LASF77
     /tmp/ccAB5tPZ.s:6182   .debug_str:0000000000000585 .LASF78
     /tmp/ccAB5tPZ.s:6304   .debug_str:0000000000000914 .LASF79
     /tmp/ccAB5tPZ.s:6220   .debug_str:00000000000006a2 .LASF80
     /tmp/ccAB5tPZ.s:6326   .debug_str:00000000000009a0 .LASF81
     /tmp/ccAB5tPZ.s:6040   .debug_str:000000000000007e .LASF82
     /tmp/ccAB5tPZ.s:6078   .debug_str:00000000000001e3 .LASF83
     /tmp/ccAB5tPZ.s:6426   .debug_str:0000000000000c2e .LASF84
     /tmp/ccAB5tPZ.s:6080   .debug_str:00000000000001f2 .LASF85
     /tmp/ccAB5tPZ.s:6268   .debug_str:000000000000081a .LASF86
     /tmp/ccAB5tPZ.s:6186   .debug_str:00000000000005af .LASF87
     /tmp/ccAB5tPZ.s:6440   .debug_str:0000000000000c71 .LASF88
     /tmp/ccAB5tPZ.s:6094   .debug_str:000000000000030b .LASF89
     /tmp/ccAB5tPZ.s:6396   .debug_str:0000000000000b74 .LASF90
     /tmp/ccAB5tPZ.s:6416   .debug_str:0000000000000bf2 .LASF92
     /tmp/ccAB5tPZ.s:6434   .debug_str:0000000000000c58 .LASF95
     /tmp/ccAB5tPZ.s:6226   .debug_str:00000000000006ea .LASF93
     /tmp/ccAB5tPZ.s:6102   .debug_str:000000000000034f .LASF94
     /tmp/ccAB5tPZ.s:6394   .debug_str:0000000000000b6e .LASF96
     /tmp/ccAB5tPZ.s:6242   .debug_str:000000000000073b .LASF97
     /tmp/ccAB5tPZ.s:6478   .debug_str:0000000000000d4a .LASF116
     /tmp/ccAB5tPZ.s:6060   .debug_str:0000000000000142 .LASF99
     /tmp/ccAB5tPZ.s:6118   .debug_str:00000000000003b3 .LASF101
     /tmp/ccAB5tPZ.s:6204   .debug_str:0000000000000635 .LASF98
     /tmp/ccAB5tPZ.s:6368   .debug_str:0000000000000ac9 .LASF103
     /tmp/ccAB5tPZ.s:6230   .debug_str:00000000000006f8 .LASF100
     /tmp/ccAB5tPZ.s:6252   .debug_str:0000000000000798 .LASF102
     /tmp/ccAB5tPZ.s:6140   .debug_str:0000000000000443 .LASF104
     /tmp/ccAB5tPZ.s:6472   .debug_str:0000000000000d2c .LASF105
     /tmp/ccAB5tPZ.s:6074   .debug_str:00000000000001cb .LASF106
     /tmp/ccAB5tPZ.s:6398   .debug_str:0000000000000b79 .LASF107
     /tmp/ccAB5tPZ.s:6092   .debug_str:0000000000000305 .LASF108
     /tmp/ccAB5tPZ.s:6370   .debug_str:0000000000000ade .LASF109
     /tmp/ccAB5tPZ.s:6108   .debug_str:0000000000000370 .LASF110
     /tmp/ccAB5tPZ.s:6082   .debug_str:0000000000000205 .LASF111
     /tmp/ccAB5tPZ.s:6300   .debug_str:0000000000000907 .LASF112
     /tmp/ccAB5tPZ.s:6228   .debug_str:00000000000006ef .LASF113
     /tmp/ccAB5tPZ.s:6392   .debug_str:0000000000000b66 .LASF114
     /tmp/ccAB5tPZ.s:6190   .debug_str:00000000000005cd .LASF115
     /tmp/ccAB5tPZ.s:6274   .debug_str:0000000000000846 .LASF117
     /tmp/ccAB5tPZ.s:6288   .debug_str:00000000000008a6 .LASF232
GAS LISTING /tmp/ccAB5tPZ.s 			page 53


     /tmp/ccAB5tPZ.s:6450   .debug_str:0000000000000ca3 .LASF118
     /tmp/ccAB5tPZ.s:6488   .debug_str:0000000000000d8a .LASF119
     /tmp/ccAB5tPZ.s:6482   .debug_str:0000000000000d69 .LASF120
     /tmp/ccAB5tPZ.s:6408   .debug_str:0000000000000ba1 .LASF121
     /tmp/ccAB5tPZ.s:6136   .debug_str:0000000000000435 .LASF122
     /tmp/ccAB5tPZ.s:6056   .debug_str:0000000000000114 .LASF123
     /tmp/ccAB5tPZ.s:6236   .debug_str:0000000000000719 .LASF124
     /tmp/ccAB5tPZ.s:6292   .debug_str:00000000000008be .LASF125
     /tmp/ccAB5tPZ.s:6400   .debug_str:0000000000000b7f .LASF126
     /tmp/ccAB5tPZ.s:6452   .debug_str:0000000000000ca8 .LASF127
     /tmp/ccAB5tPZ.s:6362   .debug_str:0000000000000a9e .LASF128
     /tmp/ccAB5tPZ.s:6258   .debug_str:00000000000007c7 .LASF129
     /tmp/ccAB5tPZ.s:6246   .debug_str:000000000000075e .LASF130
     /tmp/ccAB5tPZ.s:6494   .debug_str:0000000000000dbe .LASF131
     /tmp/ccAB5tPZ.s:6168   .debug_str:000000000000051e .LASF132
     /tmp/ccAB5tPZ.s:6202   .debug_str:0000000000000625 .LASF133
     /tmp/ccAB5tPZ.s:6214   .debug_str:0000000000000673 .LASF134
     /tmp/ccAB5tPZ.s:6366   .debug_str:0000000000000ac0 .LASF135
     /tmp/ccAB5tPZ.s:6132   .debug_str:0000000000000410 .LASF136
     /tmp/ccAB5tPZ.s:6344   .debug_str:0000000000000a0a .LASF137
     /tmp/ccAB5tPZ.s:6378   .debug_str:0000000000000b11 .LASF138
     /tmp/ccAB5tPZ.s:6272   .debug_str:0000000000000837 .LASF139
     /tmp/ccAB5tPZ.s:6030   .debug_str:0000000000000029 .LASF140
     /tmp/ccAB5tPZ.s:6468   .debug_str:0000000000000d07 .LASF141
     /tmp/ccAB5tPZ.s:6296   .debug_str:00000000000008da .LASF142
     /tmp/ccAB5tPZ.s:6372   .debug_str:0000000000000ae6 .LASF143
     /tmp/ccAB5tPZ.s:6312   .debug_str:000000000000094b .LASF144
     /tmp/ccAB5tPZ.s:6026   .debug_str:000000000000000d .LASF145
     /tmp/ccAB5tPZ.s:6476   .debug_str:0000000000000d3f .LASF146
     /tmp/ccAB5tPZ.s:6358   .debug_str:0000000000000a88 .LASF175
     /tmp/ccAB5tPZ.s:6412   .debug_str:0000000000000bc5 .LASF147
     /tmp/ccAB5tPZ.s:6294   .debug_str:00000000000008ce .LASF148
     /tmp/ccAB5tPZ.s:6124   .debug_str:00000000000003ea .LASF149
     /tmp/ccAB5tPZ.s:6070   .debug_str:000000000000019c .LASF151
     /tmp/ccAB5tPZ.s:6068   .debug_str:0000000000000187 .LASF150
     /tmp/ccAB5tPZ.s:6090   .debug_str:00000000000002d9 .LASF152
     /tmp/ccAB5tPZ.s:6498   .debug_str:0000000000000dd6 .LASF233
     /tmp/ccAB5tPZ.s:6088   .debug_str:00000000000002c8 .LASF234
     /tmp/ccAB5tPZ.s:6034   .debug_str:000000000000005b .LASF153
     /tmp/ccAB5tPZ.s:6390   .debug_str:0000000000000b61 .LASF154
     /tmp/ccAB5tPZ.s:6250   .debug_str:0000000000000790 .LASF155
     /tmp/ccAB5tPZ.s:6122   .debug_str:00000000000003e4 .LASF156
     /tmp/ccAB5tPZ.s:6420   .debug_str:0000000000000bff .LASF157
     /tmp/ccAB5tPZ.s:6076   .debug_str:00000000000001d9 .LASF158
     /tmp/ccAB5tPZ.s:6174   .debug_str:0000000000000547 .LASF159
     /tmp/ccAB5tPZ.s:6048   .debug_str:00000000000000ac .LASF235
     /tmp/ccAB5tPZ.s:6484   .debug_str:0000000000000d6f .LASF236
     /tmp/ccAB5tPZ.s:6424   .debug_str:0000000000000c1c .LASF160
     /tmp/ccAB5tPZ.s:6290   .debug_str:00000000000008ab .LASF161
     /tmp/ccAB5tPZ.s:6404   .debug_str:0000000000000b94 .LASF162
     /tmp/ccAB5tPZ.s:6032   .debug_str:0000000000000043 .LASF163
     /tmp/ccAB5tPZ.s:6364   .debug_str:0000000000000aaf .LASF164
     /tmp/ccAB5tPZ.s:6116   .debug_str:00000000000003a2 .LASF165
     /tmp/ccAB5tPZ.s:6050   .debug_str:00000000000000c4 .LASF166
     /tmp/ccAB5tPZ.s:6322   .debug_str:0000000000000990 .LASF167
     /tmp/ccAB5tPZ.s:6180   .debug_str:0000000000000571 .LASF168
     /tmp/ccAB5tPZ.s:6338   .debug_str:00000000000009da .LASF169
GAS LISTING /tmp/ccAB5tPZ.s 			page 54


     /tmp/ccAB5tPZ.s:6046   .debug_str:0000000000000098 .LASF170
     /tmp/ccAB5tPZ.s:6138   .debug_str:000000000000043e .LASF171
     /tmp/ccAB5tPZ.s:6172   .debug_str:0000000000000530 .LASF172
     /tmp/ccAB5tPZ.s:6388   .debug_str:0000000000000b5a .LASF173
     /tmp/ccAB5tPZ.s:6150   .debug_str:0000000000000489 .LASF174
     /tmp/ccAB5tPZ.s:6028   .debug_str:000000000000001d .LASF176
     /tmp/ccAB5tPZ.s:6342   .debug_str:00000000000009fe .LASF177
     /tmp/ccAB5tPZ.s:6256   .debug_str:00000000000007b3 .LASF178
     /tmp/ccAB5tPZ.s:6192   .debug_str:00000000000005d3 .LASF179
     /tmp/ccAB5tPZ.s:6104   .debug_str:0000000000000354 .LASF180
     /tmp/ccAB5tPZ.s:6110   .debug_str:000000000000037a .LASF181
     /tmp/ccAB5tPZ.s:6276   .debug_str:000000000000085e .LASF182
     /tmp/ccAB5tPZ.s:6348   .debug_str:0000000000000a39 .LASF183
     /tmp/ccAB5tPZ.s:6234   .debug_str:0000000000000710 .LASF184
     /tmp/ccAB5tPZ.s:6198   .debug_str:0000000000000612 .LASF185
     /tmp/ccAB5tPZ.s:6500   .debug_str:0000000000000ddd .LASF186
     /tmp/ccAB5tPZ.s:6038   .debug_str:0000000000000076 .LASF187
     /tmp/ccAB5tPZ.s:6248   .debug_str:0000000000000776 .LASF188
     /tmp/ccAB5tPZ.s:6492   .debug_str:0000000000000dae .LASF189
     /tmp/ccAB5tPZ.s:6352   .debug_str:0000000000000a4b .LASF190
     /tmp/ccAB5tPZ.s:6386   .debug_str:0000000000000b47 .LASF191
     /tmp/ccAB5tPZ.s:6346   .debug_str:0000000000000a13 .LASF192
     /tmp/ccAB5tPZ.s:6024   .debug_str:0000000000000000 .LASF193
     /tmp/ccAB5tPZ.s:6054   .debug_str:00000000000000f0 .LASF194
     /tmp/ccAB5tPZ.s:6462   .debug_str:0000000000000ceb .LASF195
     /tmp/ccAB5tPZ.s:6264   .debug_str:0000000000000802 .LASF196
     /tmp/ccAB5tPZ.s:6144   .debug_str:0000000000000457 .LASF197
     /tmp/ccAB5tPZ.s:6158   .debug_str:00000000000004d2 .LASF198
     /tmp/ccAB5tPZ.s:6084   .debug_str:000000000000020e .LASF199
     /tmp/ccAB5tPZ.s:6052   .debug_str:00000000000000cd .LASF200
     /tmp/ccAB5tPZ.s:1542   .text:00000000000005f0 .LFE29
     /tmp/ccAB5tPZ.s:5419   .debug_loc:0000000000000000 .LLST15
     /tmp/ccAB5tPZ.s:6376   .debug_str:0000000000000b0a .LASF201
     /tmp/ccAB5tPZ.s:5458   .debug_loc:00000000000000bb .LLST16
     /tmp/ccAB5tPZ.s:5974   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccAB5tPZ.s:6254   .debug_str:00000000000007a9 .LASF202
     /tmp/ccAB5tPZ.s:5479   .debug_loc:0000000000000119 .LLST17
     /tmp/ccAB5tPZ.s:6406   .debug_str:0000000000000b9c .LASF203
     /tmp/ccAB5tPZ.s:5522   .debug_loc:00000000000001e7 .LLST18
     /tmp/ccAB5tPZ.s:951    .text:00000000000003dc .LBB213
     /tmp/ccAB5tPZ.s:1025   .text:0000000000000414 .LBE213
     /tmp/ccAB5tPZ.s:5537   .debug_loc:0000000000000230 .LLST48
     /tmp/ccAB5tPZ.s:6454   .debug_str:0000000000000cb3 .LASF204
     /tmp/ccAB5tPZ.s:5544   .debug_loc:0000000000000253 .LLST49
     /tmp/ccAB5tPZ.s:953    .text:00000000000003dc .LBB214
     /tmp/ccAB5tPZ.s:969    .text:00000000000003e8 .LBE214
     /tmp/ccAB5tPZ.s:971    .text:00000000000003e8 .LBB216
     /tmp/ccAB5tPZ.s:987    .text:00000000000003f4 .LBE216
     /tmp/ccAB5tPZ.s:997    .text:0000000000000408 .LBB218
     /tmp/ccAB5tPZ.s:1008   .text:000000000000040c .LBE218
     /tmp/ccAB5tPZ.s:5551   .debug_loc:0000000000000276 .LLST50
     /tmp/ccAB5tPZ.s:1010   .text:000000000000040c .LBB220
     /tmp/ccAB5tPZ.s:1024   .text:0000000000000414 .LBE220
     /tmp/ccAB5tPZ.s:5558   .debug_loc:0000000000000299 .LLST51
     /tmp/ccAB5tPZ.s:995    .text:0000000000000408 .LVL61
     /tmp/ccAB5tPZ.s:1028   .text:0000000000000414 .LBB196
     /tmp/ccAB5tPZ.s:1054   .text:0000000000000428 .LBE196
GAS LISTING /tmp/ccAB5tPZ.s 			page 55


     /tmp/ccAB5tPZ.s:5565   .debug_loc:00000000000002bc .LLST44
     /tmp/ccAB5tPZ.s:6456   .debug_str:0000000000000cbb .LASF205
     /tmp/ccAB5tPZ.s:5580   .debug_loc:00000000000002f6 .LLST45
     /tmp/ccAB5tPZ.s:1044   .text:0000000000000424 .LVL66
     /tmp/ccAB5tPZ.s:1074   .text:0000000000000430 .LBB185
     /tmp/ccAB5tPZ.s:1095   .text:0000000000000440 .LBE185
     /tmp/ccAB5tPZ.s:6328   .debug_str:00000000000009a7 .LASF206
     /tmp/ccAB5tPZ.s:5587   .debug_loc:0000000000000319 .LLST42
     /tmp/ccAB5tPZ.s:6072   .debug_str:00000000000001c4 .LASF207
     /tmp/ccAB5tPZ.s:5599   .debug_loc:0000000000000350 .LLST43
     /tmp/ccAB5tPZ.s:1087   .text:000000000000043c .LVL70
     /tmp/ccAB5tPZ.s:6310   .debug_str:000000000000093d .LASF208
     /tmp/ccAB5tPZ.s:5606   .debug_loc:0000000000000373 .LLST38
     /tmp/ccAB5tPZ.s:5617   .debug_loc:00000000000003a9 .LLST39
     /tmp/ccAB5tPZ.s:6062   .debug_str:0000000000000148 .LASF209
     /tmp/ccAB5tPZ.s:5628   .debug_loc:00000000000003df .LLST40
     /tmp/ccAB5tPZ.s:6162   .debug_str:0000000000000500 .LASF210
     /tmp/ccAB5tPZ.s:5639   .debug_loc:0000000000000415 .LLST41
     /tmp/ccAB5tPZ.s:1128   .text:000000000000045c .LVL75
     /tmp/ccAB5tPZ.s:1137   .text:0000000000000478 .LVL76
     /tmp/ccAB5tPZ.s:1507   .text:00000000000005c8 .LVL111
     /tmp/ccAB5tPZ.s:1165   .text:0000000000000490 .LBB159
     /tmp/ccAB5tPZ.s:1210   .text:00000000000004b8 .LBE159
     /tmp/ccAB5tPZ.s:5646   .debug_loc:0000000000000438 .LLST36
     /tmp/ccAB5tPZ.s:1167   .text:0000000000000490 .LBB160
     /tmp/ccAB5tPZ.s:1184   .text:000000000000049c .LBE160
     /tmp/ccAB5tPZ.s:1195   .text:00000000000004b0 .LBB162
     /tmp/ccAB5tPZ.s:1209   .text:00000000000004b8 .LBE162
     /tmp/ccAB5tPZ.s:5653   .debug_loc:000000000000045b .LLST37
     /tmp/ccAB5tPZ.s:1193   .text:00000000000004b0 .LVL80
     /tmp/ccAB5tPZ.s:5660   .debug_loc:000000000000047e .LLST32
     /tmp/ccAB5tPZ.s:1221   .text:00000000000004c8 .LBB145
     /tmp/ccAB5tPZ.s:1237   .text:00000000000004d4 .LBE145
     /tmp/ccAB5tPZ.s:1265   .text:00000000000004ec .LBB147
     /tmp/ccAB5tPZ.s:1273   .text:00000000000004f4 .LBE147
     /tmp/ccAB5tPZ.s:5667   .debug_loc:00000000000004a1 .LLST33
     /tmp/ccAB5tPZ.s:5675   .debug_loc:00000000000004c5 .LLST34
     /tmp/ccAB5tPZ.s:1279   .text:00000000000004fc .LBB149
     /tmp/ccAB5tPZ.s:1293   .text:0000000000000504 .LBE149
     /tmp/ccAB5tPZ.s:5682   .debug_loc:00000000000004e8 .LLST35
     /tmp/ccAB5tPZ.s:1277   .text:00000000000004fc .LVL86
     /tmp/ccAB5tPZ.s:1307   .text:000000000000050c .LBB131
     /tmp/ccAB5tPZ.s:1381   .text:0000000000000550 .LBE131
     /tmp/ccAB5tPZ.s:6302   .debug_str:000000000000090f .LASF211
     /tmp/ccAB5tPZ.s:5689   .debug_loc:000000000000050b .LLST27
     /tmp/ccAB5tPZ.s:5696   .debug_loc:000000000000052e .LLST28
     /tmp/ccAB5tPZ.s:1318   .text:0000000000000510 .LBB132
     /tmp/ccAB5tPZ.s:1335   .text:000000000000051c .LBE132
     /tmp/ccAB5tPZ.s:1345   .text:0000000000000534 .LBB134
     /tmp/ccAB5tPZ.s:1352   .text:0000000000000538 .LBE134
     /tmp/ccAB5tPZ.s:5703   .debug_loc:0000000000000551 .LLST29
     /tmp/ccAB5tPZ.s:5710   .debug_loc:0000000000000574 .LLST30
     /tmp/ccAB5tPZ.s:1362   .text:0000000000000548 .LBB136
     /tmp/ccAB5tPZ.s:1373   .text:000000000000054c .LBE136
     /tmp/ccAB5tPZ.s:5717   .debug_loc:0000000000000597 .LLST31
     /tmp/ccAB5tPZ.s:1356   .text:0000000000000540 .LVL94
     /tmp/ccAB5tPZ.s:1360   .text:0000000000000548 .LVL95
GAS LISTING /tmp/ccAB5tPZ.s 			page 56


     /tmp/ccAB5tPZ.s:5724   .debug_loc:00000000000005ba .LLST24
     /tmp/ccAB5tPZ.s:6218   .debug_str:0000000000000692 .LASF212
     /tmp/ccAB5tPZ.s:5735   .debug_loc:00000000000005f0 .LLST25
     /tmp/ccAB5tPZ.s:6486   .debug_str:0000000000000d83 .LASF213
     /tmp/ccAB5tPZ.s:5746   .debug_loc:0000000000000626 .LLST26
     /tmp/ccAB5tPZ.s:1407   .text:0000000000000568 .LVL100
     /tmp/ccAB5tPZ.s:1414   .text:0000000000000578 .LVL102
     /tmp/ccAB5tPZ.s:1525   .text:00000000000005e4 .LVL114
     /tmp/ccAB5tPZ.s:1442   .text:0000000000000590 .LBB121
     /tmp/ccAB5tPZ.s:1464   .text:00000000000005a0 .LBE121
     /tmp/ccAB5tPZ.s:6444   .debug_str:0000000000000c8e .LASF214
     /tmp/ccAB5tPZ.s:5753   .debug_loc:0000000000000649 .LLST22
     /tmp/ccAB5tPZ.s:5760   .debug_loc:000000000000066c .LLST23
     /tmp/ccAB5tPZ.s:1456   .text:000000000000059c .LVL105
     /tmp/ccAB5tPZ.s:1469   .text:00000000000005a4 .LBB119
     /tmp/ccAB5tPZ.s:1491   .text:00000000000005b4 .LBE119
     /tmp/ccAB5tPZ.s:5767   .debug_loc:000000000000068f .LLST20
     /tmp/ccAB5tPZ.s:5774   .debug_loc:00000000000006b2 .LLST21
     /tmp/ccAB5tPZ.s:1482   .text:00000000000005b0 .LVL108
     /tmp/ccAB5tPZ.s:814    .text:0000000000000328 .LBB118
     /tmp/ccAB5tPZ.s:843    .text:000000000000034c .LBE118
     /tmp/ccAB5tPZ.s:5781   .debug_loc:00000000000006d5 .LLST19
     /tmp/ccAB5tPZ.s:830    .text:000000000000033c .LVL47
     /tmp/ccAB5tPZ.s:834    .text:0000000000000348 .LVL48
     /tmp/ccAB5tPZ.s:627    .text:00000000000002c8 .LBB106
     /tmp/ccAB5tPZ.s:643    .text:00000000000002d4 .LBE106
     /tmp/ccAB5tPZ.s:908    .text:00000000000003a0 .LBB208
     /tmp/ccAB5tPZ.s:921    .text:00000000000003a8 .LBE208
     /tmp/ccAB5tPZ.s:5788   .debug_loc:00000000000006f8 .LLST46
     /tmp/ccAB5tPZ.s:939    .text:00000000000003d0 .LBB211
     /tmp/ccAB5tPZ.s:946    .text:00000000000003d4 .LBE211
     /tmp/ccAB5tPZ.s:5796   .debug_loc:000000000000071c .LLST47
     /tmp/ccAB5tPZ.s:1057   .text:0000000000000428 .LBB223
     /tmp/ccAB5tPZ.s:1071   .text:0000000000000430 .LBE223
     /tmp/ccAB5tPZ.s:5803   .debug_loc:000000000000073f .LLST52
     /tmp/ccAB5tPZ.s:869    .text:0000000000000370 .LVL50
     /tmp/ccAB5tPZ.s:932    .text:00000000000003c4 .LVL56
     /tmp/ccAB5tPZ.s:583    .text:000000000000028c .LBB102
     /tmp/ccAB5tPZ.s:599    .text:0000000000000298 .LBE102
     /tmp/ccAB5tPZ.s:877    .text:0000000000000378 .LVL51
     /tmp/ccAB5tPZ.s:1511   .text:00000000000005d4 .LVL112
     /tmp/ccAB5tPZ.s:1529   .text:00000000000005f0 .LVL115
     /tmp/ccAB5tPZ.s:393    .text:0000000000000198 .LFB28
     /tmp/ccAB5tPZ.s:537    .text:0000000000000260 .LFE28
     /tmp/ccAB5tPZ.s:5810   .debug_loc:0000000000000762 .LLST9
     /tmp/ccAB5tPZ.s:5824   .debug_loc:000000000000079b .LLST10
     /tmp/ccAB5tPZ.s:6418   .debug_str:0000000000000bf8 .LASF215
     /tmp/ccAB5tPZ.s:5831   .debug_loc:00000000000007be .LLST11
     /tmp/ccAB5tPZ.s:5853   .debug_loc:000000000000081d .LLST12
     /tmp/ccAB5tPZ.s:410    .text:00000000000001b0 .LBB96
     /tmp/ccAB5tPZ.s:426    .text:00000000000001bc .LBE96
     /tmp/ccAB5tPZ.s:428    .text:00000000000001bc .LBB98
     /tmp/ccAB5tPZ.s:440    .text:00000000000001c4 .LBE98
     /tmp/ccAB5tPZ.s:5875   .debug_loc:000000000000085e .LLST13
     /tmp/ccAB5tPZ.s:511    .text:0000000000000244 .LBB100
     /tmp/ccAB5tPZ.s:522    .text:0000000000000248 .LBE100
     /tmp/ccAB5tPZ.s:5883   .debug_loc:0000000000000882 .LLST14
GAS LISTING /tmp/ccAB5tPZ.s 			page 57


     /tmp/ccAB5tPZ.s:495    .text:0000000000000228 .LVL35
     /tmp/ccAB5tPZ.s:502    .text:0000000000000238 .LVL36
     /tmp/ccAB5tPZ.s:285    .text:0000000000000128 .LFB27
     /tmp/ccAB5tPZ.s:387    .text:0000000000000198 .LFE27
     /tmp/ccAB5tPZ.s:6382   .debug_str:0000000000000b34 .LASF216
     /tmp/ccAB5tPZ.s:5890   .debug_loc:00000000000008a5 .LLST5
     /tmp/ccAB5tPZ.s:5901   .debug_loc:00000000000008db .LLST6
     /tmp/ccAB5tPZ.s:303    .text:0000000000000144 .LBB90
     /tmp/ccAB5tPZ.s:319    .text:0000000000000150 .LBE90
     /tmp/ccAB5tPZ.s:321    .text:0000000000000150 .LBB92
     /tmp/ccAB5tPZ.s:334    .text:0000000000000158 .LBE92
     /tmp/ccAB5tPZ.s:5908   .debug_loc:00000000000008fe .LLST7
     /tmp/ccAB5tPZ.s:360    .text:000000000000017c .LBB94
     /tmp/ccAB5tPZ.s:371    .text:0000000000000180 .LBE94
     /tmp/ccAB5tPZ.s:5916   .debug_loc:0000000000000922 .LLST8
     /tmp/ccAB5tPZ.s:344    .text:0000000000000168 .LVL19
     /tmp/ccAB5tPZ.s:250    .text:0000000000000108 .LFB26
     /tmp/ccAB5tPZ.s:279    .text:0000000000000128 .LFE26
     /tmp/ccAB5tPZ.s:181    .text:00000000000000c0 .LFB25
     /tmp/ccAB5tPZ.s:213    .text:00000000000000e0 .LFE25
     /tmp/ccAB5tPZ.s:192    .text:00000000000000cc .LBB88
     /tmp/ccAB5tPZ.s:204    .text:00000000000000d4 .LBE88
     /tmp/ccAB5tPZ.s:5923   .debug_loc:0000000000000945 .LLST4
     /tmp/ccAB5tPZ.s:143    .text:00000000000000a0 .LFB24
     /tmp/ccAB5tPZ.s:175    .text:00000000000000c0 .LFE24
     /tmp/ccAB5tPZ.s:154    .text:00000000000000ac .LBB86
     /tmp/ccAB5tPZ.s:166    .text:00000000000000b4 .LBE86
     /tmp/ccAB5tPZ.s:5931   .debug_loc:0000000000000969 .LLST3
     /tmp/ccAB5tPZ.s:219    .text:00000000000000e0 .LFB23
     /tmp/ccAB5tPZ.s:244    .text:0000000000000108 .LFE23
     /tmp/ccAB5tPZ.s:233    .text:00000000000000f8 .LVL15
     /tmp/ccAB5tPZ.s:113    .text:00000000000000a0 .LFE22
     /tmp/ccAB5tPZ.s:5939   .debug_loc:000000000000098d .LLST0
     /tmp/ccAB5tPZ.s:32     .text:0000000000000020 .LBB82
     /tmp/ccAB5tPZ.s:44     .text:0000000000000024 .LBE82
     /tmp/ccAB5tPZ.s:75     .text:0000000000000064 .LBB84
     /tmp/ccAB5tPZ.s:84     .text:000000000000006c .LBE84
     /tmp/ccAB5tPZ.s:5946   .debug_loc:00000000000009b0 .LLST1
     /tmp/ccAB5tPZ.s:5954   .debug_loc:00000000000009d4 .LLST2
     /tmp/ccAB5tPZ.s:50     .text:0000000000000030 .LVL2
     /tmp/ccAB5tPZ.s:57     .text:0000000000000044 .LVL3
     /tmp/ccAB5tPZ.s:64     .text:0000000000000050 .LVL4
     /tmp/ccAB5tPZ.s:68     .text:0000000000000058 .LVL5
     /tmp/ccAB5tPZ.s:106    .text:0000000000000094 .LVL9
     /tmp/ccAB5tPZ.s:110    .text:00000000000000a0 .LVL10
     /tmp/ccAB5tPZ.s:6160   .debug_str:00000000000004f9 .LASF237
     /tmp/ccAB5tPZ.s:6238   .debug_str:000000000000071f .LASF220
     /tmp/ccAB5tPZ.s:6128   .debug_str:00000000000003ff .LASF217
     /tmp/ccAB5tPZ.s:6438   .debug_str:0000000000000c6c .LASF218
     /tmp/ccAB5tPZ.s:6466   .debug_str:0000000000000d01 .LASF219
     /tmp/ccAB5tPZ.s:6336   .debug_str:00000000000009ce .LASF221
     /tmp/ccAB5tPZ.s:6166   .debug_str:0000000000000516 .LASF222
     /tmp/ccAB5tPZ.s:6496   .debug_str:0000000000000dcb .LASF223
     /tmp/ccAB5tPZ.s:6170   .debug_str:000000000000052a .LASF224
     /tmp/ccAB5tPZ.s:6178   .debug_str:0000000000000561 .LASF225
     /tmp/ccAB5tPZ.s:6480   .debug_str:0000000000000d5a .LASF238
     /tmp/ccAB5tPZ.s:6066   .debug_str:000000000000016f .LASF239
GAS LISTING /tmp/ccAB5tPZ.s 			page 58


     /tmp/ccAB5tPZ.s:6126   .debug_str:00000000000003f8 .LASF226
     /tmp/ccAB5tPZ.s:6432   .debug_str:0000000000000c52 .LASF227
     /tmp/ccAB5tPZ.s:6286   .debug_str:000000000000089f .LASF228
     /tmp/ccAB5tPZ.s:580    .text:000000000000028c .LVL40
     /tmp/ccAB5tPZ.s:822    .text:000000000000032c .LVL46
     /tmp/ccAB5tPZ.s:845    .text:0000000000000350 .LVL49
     /tmp/ccAB5tPZ.s:901    .text:00000000000003a0 .LVL52
     /tmp/ccAB5tPZ.s:925    .text:00000000000003b0 .LVL55
     /tmp/ccAB5tPZ.s:1021   .text:0000000000000414 .LVL63
     /tmp/ccAB5tPZ.s:1051   .text:0000000000000428 .LVL67
     /tmp/ccAB5tPZ.s:1068   .text:0000000000000430 .LVL68
     /tmp/ccAB5tPZ.s:1182   .text:000000000000049c .LVL79
     /tmp/ccAB5tPZ.s:1206   .text:00000000000004b8 .LVL81
     /tmp/ccAB5tPZ.s:1235   .text:00000000000004d4 .LVL83
     /tmp/ccAB5tPZ.s:1290   .text:0000000000000504 .LVL87
     /tmp/ccAB5tPZ.s:1333   .text:000000000000051c .LVL91
     /tmp/ccAB5tPZ.s:1383   .text:0000000000000554 .LVL97
     /tmp/ccAB5tPZ.s:1410   .text:000000000000056c .LVL101
     /tmp/ccAB5tPZ.s:1438   .text:0000000000000590 .LVL103
     /tmp/ccAB5tPZ.s:1496   .text:00000000000005bc .LVL110
     /tmp/ccAB5tPZ.s:597    .text:0000000000000298 .LVL41
     /tmp/ccAB5tPZ.s:611    .text:00000000000002bc .LVL42
     /tmp/ccAB5tPZ.s:624    .text:00000000000002c8 .LVL43
     /tmp/ccAB5tPZ.s:913    .text:00000000000003a4 .LVL53
     /tmp/ccAB5tPZ.s:1097   .text:0000000000000444 .LVL71
     /tmp/ccAB5tPZ.s:1161   .text:0000000000000490 .LVL77
     /tmp/ccAB5tPZ.s:1176   .text:0000000000000494 .LVL78
     /tmp/ccAB5tPZ.s:1216   .text:00000000000004c0 .LVL82
     /tmp/ccAB5tPZ.s:1303   .text:000000000000050c .LVL88
     /tmp/ccAB5tPZ.s:1327   .text:0000000000000514 .LVL90
     /tmp/ccAB5tPZ.s:1466   .text:00000000000005a4 .LVL106
     /tmp/ccAB5tPZ.s:641    .text:00000000000002d4 .LVL44
     /tmp/ccAB5tPZ.s:647    .text:00000000000002d8 .LVL45
     /tmp/ccAB5tPZ.s:1515   .text:00000000000005d8 .LVL113
     /tmp/ccAB5tPZ.s:967    .text:00000000000003e8 .LVL59
     /tmp/ccAB5tPZ.s:985    .text:00000000000003f4 .LVL60
     /tmp/ccAB5tPZ.s:1005   .text:000000000000040c .LVL62
     /tmp/ccAB5tPZ.s:1036   .text:0000000000000418 .LVL64
     /tmp/ccAB5tPZ.s:1042   .text:000000000000041c .LVL65
     /tmp/ccAB5tPZ.s:1082   .text:0000000000000434 .LVL69
     /tmp/ccAB5tPZ.s:1116   .text:000000000000044c .LVL73
     /tmp/ccAB5tPZ.s:1493   .text:00000000000005b8 .LVL109
     /tmp/ccAB5tPZ.s:1122   .text:0000000000000450 .LVL74
     /tmp/ccAB5tPZ.s:1110   .text:0000000000000448 .LVL72
     /tmp/ccAB5tPZ.s:1246   .text:00000000000004ec .LVL84
     /tmp/ccAB5tPZ.s:1271   .text:00000000000004f4 .LVL85
     /tmp/ccAB5tPZ.s:1315   .text:0000000000000510 .LVL89
     /tmp/ccAB5tPZ.s:1344   .text:0000000000000534 .LVL92
     /tmp/ccAB5tPZ.s:1350   .text:0000000000000538 .LVL93
     /tmp/ccAB5tPZ.s:1370   .text:000000000000054c .LVL96
     /tmp/ccAB5tPZ.s:1401   .text:000000000000055c .LVL99
     /tmp/ccAB5tPZ.s:1395   .text:0000000000000558 .LVL98
     /tmp/ccAB5tPZ.s:1450   .text:0000000000000594 .LVL104
     /tmp/ccAB5tPZ.s:1477   .text:00000000000005a8 .LVL107
     /tmp/ccAB5tPZ.s:918    .text:00000000000003a8 .LVL54
     /tmp/ccAB5tPZ.s:938    .text:00000000000003d0 .LVL57
     /tmp/ccAB5tPZ.s:944    .text:00000000000003d4 .LVL58
GAS LISTING /tmp/ccAB5tPZ.s 			page 59


     /tmp/ccAB5tPZ.s:396    .text:0000000000000198 .LVL25
     /tmp/ccAB5tPZ.s:450    .text:00000000000001c8 .LVL28
     /tmp/ccAB5tPZ.s:424    .text:00000000000001bc .LVL26
     /tmp/ccAB5tPZ.s:506    .text:000000000000023c .LVL37
     /tmp/ccAB5tPZ.s:454    .text:00000000000001cc .LVL29
     /tmp/ccAB5tPZ.s:461    .text:00000000000001d4 .LVL30
     /tmp/ccAB5tPZ.s:472    .text:00000000000001f8 .LVL31
     /tmp/ccAB5tPZ.s:482    .text:000000000000020c .LVL33
     /tmp/ccAB5tPZ.s:487    .text:0000000000000210 .LVL34
     /tmp/ccAB5tPZ.s:478    .text:0000000000000204 .LVL32
     /tmp/ccAB5tPZ.s:437    .text:00000000000001c4 .LVL27
     /tmp/ccAB5tPZ.s:510    .text:0000000000000244 .LVL38
     /tmp/ccAB5tPZ.s:519    .text:0000000000000248 .LVL39
     /tmp/ccAB5tPZ.s:288    .text:0000000000000128 .LVL16
     /tmp/ccAB5tPZ.s:330    .text:0000000000000158 .LVL18
     /tmp/ccAB5tPZ.s:380    .text:000000000000018c .LVL24
     /tmp/ccAB5tPZ.s:317    .text:0000000000000150 .LVL17
     /tmp/ccAB5tPZ.s:355    .text:0000000000000174 .LVL21
     /tmp/ccAB5tPZ.s:359    .text:000000000000017c .LVL22
     /tmp/ccAB5tPZ.s:368    .text:0000000000000180 .LVL23
     /tmp/ccAB5tPZ.s:191    .text:00000000000000cc .LVL13
     /tmp/ccAB5tPZ.s:201    .text:00000000000000d4 .LVL14
     /tmp/ccAB5tPZ.s:153    .text:00000000000000ac .LVL11
     /tmp/ccAB5tPZ.s:163    .text:00000000000000b4 .LVL12
     /tmp/ccAB5tPZ.s:94     .text:0000000000000078 .LVL8
     /tmp/ccAB5tPZ.s:74     .text:0000000000000064 .LVL6
     /tmp/ccAB5tPZ.s:82     .text:000000000000006c .LVL7
     /tmp/ccAB5tPZ.s:1597   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccAB5tPZ.s:614    .text:00000000000002c4 .LBB105
     /tmp/ccAB5tPZ.s:653    .text:00000000000002e0 .LBE105
     /tmp/ccAB5tPZ.s:657    .text:00000000000002e0 .LBB227
     /tmp/ccAB5tPZ.s:664    .text:00000000000002e8 .LBE227
     /tmp/ccAB5tPZ.s:668    .text:00000000000002e8 .LBB228
     /tmp/ccAB5tPZ.s:677    .text:00000000000002f0 .LBE228
     /tmp/ccAB5tPZ.s:681    .text:00000000000002f0 .LBB229
     /tmp/ccAB5tPZ.s:692    .text:00000000000002f8 .LBE229
     /tmp/ccAB5tPZ.s:696    .text:00000000000002f8 .LBB230
     /tmp/ccAB5tPZ.s:709    .text:0000000000000300 .LBE230
     /tmp/ccAB5tPZ.s:713    .text:0000000000000300 .LBB231
     /tmp/ccAB5tPZ.s:728    .text:0000000000000308 .LBE231
     /tmp/ccAB5tPZ.s:732    .text:0000000000000308 .LBB232
     /tmp/ccAB5tPZ.s:749    .text:0000000000000310 .LBE232
     /tmp/ccAB5tPZ.s:753    .text:0000000000000310 .LBB233
     /tmp/ccAB5tPZ.s:772    .text:0000000000000318 .LBE233
     /tmp/ccAB5tPZ.s:776    .text:0000000000000318 .LBB234
     /tmp/ccAB5tPZ.s:797    .text:0000000000000320 .LBE234
     /tmp/ccAB5tPZ.s:801    .text:0000000000000320 .LBB235
     /tmp/ccAB5tPZ.s:857    .text:0000000000000350 .LBE235
     /tmp/ccAB5tPZ.s:863    .text:0000000000000360 .LBB236
     /tmp/ccAB5tPZ.s:872    .text:0000000000000370 .LBE236
     /tmp/ccAB5tPZ.s:905    .text:00000000000003a0 .LBB237
     /tmp/ccAB5tPZ.s:1253   .text:00000000000004ec .LBE237
     /tmp/ccAB5tPZ.s:1257   .text:00000000000004ec .LBB238
     /tmp/ccAB5tPZ.s:1539   .text:00000000000005f0 .LBE238
     /tmp/ccAB5tPZ.s:1386   .text:0000000000000554 .LBB125
     /tmp/ccAB5tPZ.s:1440   .text:0000000000000590 .LBE125
     /tmp/ccAB5tPZ.s:1521   .text:00000000000005d8 .LBB127
GAS LISTING /tmp/ccAB5tPZ.s 			page 60


     /tmp/ccAB5tPZ.s:1531   .text:00000000000005f0 .LBE127
     /tmp/ccAB5tPZ.s:1212   .text:00000000000004b8 .LBB144
     /tmp/ccAB5tPZ.s:1247   .text:00000000000004ec .LBE144
     /tmp/ccAB5tPZ.s:1263   .text:00000000000004ec .LBB151
     /tmp/ccAB5tPZ.s:1305   .text:000000000000050c .LBE151
     /tmp/ccAB5tPZ.s:1100   .text:0000000000000444 .LBB173
     /tmp/ccAB5tPZ.s:1163   .text:0000000000000490 .LBE173
     /tmp/ccAB5tPZ.s:1503   .text:00000000000005bc .LBB176
     /tmp/ccAB5tPZ.s:1516   .text:00000000000005d8 .LBE176
     /tmp/ccAB5tPZ.s:116    .gcc_except_table:0000000000000000 .LLSDA22
     /tmp/ccAB5tPZ.s:1544   .gcc_except_table:0000000000000038 .LLSDA29

UNDEFINED SYMBOLS
_ZN5Riscv14supervisorTrapEv
_Znwm
_ZN6ThreadC1EPFvPvES0_
_ZN6Thread5startEv
_ZN9Scheduler3getEv
_ZN3PCB7runningE
_ZdlPv
_Unwind_Resume
__gxx_personality_v0
__putc
_ZN10KSemaphoreD1Ev
_ZN10KSemaphoredlEPv
console_handler
_ZN3PCB16timeSliceCounterE
_ZN12SleepPCBList13tryToWakePCBsEv
_ZN3PCB8dispatchEv
_Z7kmallocm
_Z5kfreePv
_ZN3PCBnwEm
_ZN3PCBC1EPFvPvES0_S0_m
_ZN12SleepPCBList17insertSleepingPCBEv
_ZN10KSemaphorenwEm
_ZN10KSemaphoreC1Ei
_ZN10KSemaphore4waitEv
_ZN10KSemaphore6signalEv
_ZN3PCBdlEPv
