GAS LISTING /tmp/ccXQ0lmE.s 			page 1


   1              		.file	"Riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv15userMainWrapperEPv
   9              	_ZN5Riscv15userMainWrapperEPv:
  10              	.LFB34:
  11              		.file 1 "src/Riscv.cpp"
   1:src/Riscv.cpp **** //
   2:src/Riscv.cpp **** // Created by os on 4/27/22.
   3:src/Riscv.cpp **** //
   4:src/Riscv.cpp **** 
   5:src/Riscv.cpp **** #include "../h/Riscv.hpp"
   6:src/Riscv.cpp **** #include "../h/MemoryAllocator.hpp"
   7:src/Riscv.cpp **** #include "../h/PCB.hpp"
   8:src/Riscv.cpp **** #include "../h/syscall_cpp.hpp"
   9:src/Riscv.cpp **** #include "../h/SleepPCBList.hpp"
  10:src/Riscv.cpp **** #include "../h/KConsole.hpp"
  11:src/Riscv.cpp **** #include "../h/Tests.hpp"
  12:src/Riscv.cpp **** #include "../test/userMain.hpp"
  13:src/Riscv.cpp **** 
  14:src/Riscv.cpp **** uint64 Riscv::totalTime = 0;
  15:src/Riscv.cpp **** bool Riscv::finishSystem = false;
  16:src/Riscv.cpp **** 
  17:src/Riscv.cpp **** void Riscv::initSystem()
  18:src/Riscv.cpp **** {
  19:src/Riscv.cpp ****     w_stvec((uint64)&Riscv::supervisorTrap);
  20:src/Riscv.cpp ****     PCB::initialize();
  21:src/Riscv.cpp ****     KConsole::initialize();
  22:src/Riscv.cpp **** }
  23:src/Riscv.cpp **** 
  24:src/Riscv.cpp **** void Riscv::endSystem()
  25:src/Riscv.cpp **** {
  26:src/Riscv.cpp ****     //todo
  27:src/Riscv.cpp ****     Riscv::disableInterrupts();
  28:src/Riscv.cpp **** }
  29:src/Riscv.cpp **** 
  30:src/Riscv.cpp **** void Riscv::enableInterrupts() {
  31:src/Riscv.cpp ****     ms_sstatus(Riscv::SSTATUS_SIE);
  32:src/Riscv.cpp **** }
  33:src/Riscv.cpp **** 
  34:src/Riscv.cpp **** void Riscv::disableInterrupts()
  35:src/Riscv.cpp **** {
  36:src/Riscv.cpp ****     mc_sstatus(Riscv::SSTATUS_SIE);
  37:src/Riscv.cpp **** }
  38:src/Riscv.cpp **** 
  39:src/Riscv.cpp **** void Riscv::popSppSpie()
  40:src/Riscv.cpp **** {
  41:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
  42:src/Riscv.cpp ****     __asm__ volatile ("sret");
  43:src/Riscv.cpp **** }
  44:src/Riscv.cpp **** 
  45:src/Riscv.cpp **** void Riscv::handleSupervisorTrap()
  46:src/Riscv.cpp **** {
  47:src/Riscv.cpp ****     __asm__ volatile("mv %0, a4" : "=r"(PCB::savedRegA4));
GAS LISTING /tmp/ccXQ0lmE.s 			page 2


  48:src/Riscv.cpp ****     __asm__ volatile("csrr %0, sscratch":"=r"(PCB::running->sscratch));
  49:src/Riscv.cpp **** 
  50:src/Riscv.cpp ****     uint64 scause = Riscv::r_scause();
  51:src/Riscv.cpp **** 
  52:src/Riscv.cpp ****     switch(scause)
  53:src/Riscv.cpp ****     {
  54:src/Riscv.cpp ****         case timerInterrupt:
  55:src/Riscv.cpp ****         {
  56:src/Riscv.cpp ****             uint64 volatile sepc = Riscv::r_sepc();
  57:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
  58:src/Riscv.cpp ****             mc_sip(Riscv::SIP_SSIP);
  59:src/Riscv.cpp ****             //trapPrintString("timerInterrupt\n");
  60:src/Riscv.cpp ****             //static uint64 total = 0;
  61:src/Riscv.cpp ****             totalTime++;
  62:src/Riscv.cpp ****             //trapPrintInt(totalTime);
  63:src/Riscv.cpp **** 
  64:src/Riscv.cpp ****             PCB::timeSliceCounter++;
  65:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
  66:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
  67:src/Riscv.cpp ****             {
  68:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
  69:src/Riscv.cpp ****                 PCB::dispatch();
  70:src/Riscv.cpp ****             }
  71:src/Riscv.cpp **** 
  72:src/Riscv.cpp ****             Riscv::w_sstatus(sstatus);
  73:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
  74:src/Riscv.cpp ****             changePrivMode();
  75:src/Riscv.cpp ****             break;
  76:src/Riscv.cpp ****         }
  77:src/Riscv.cpp ****         case hwInterrupt:
  78:src/Riscv.cpp ****         {
  79:src/Riscv.cpp ****             uint64 x = CONSOLE_STATUS;
  80:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0"::"r"(x));
  81:src/Riscv.cpp ****             __asm__ volatile("lb a1, 0(a0)");
  82:src/Riscv.cpp ****             uint64 operation;
  83:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" :  "=r"(operation));
  84:src/Riscv.cpp ****             if(operation & KConsole::STATUS_READ_MASK)
  85:src/Riscv.cpp ****             {
  86:src/Riscv.cpp ****                 x = CONSOLE_TX_DATA;
  87:src/Riscv.cpp ****                 __asm__ volatile("mv a0, %0"::"r"(x));
  88:src/Riscv.cpp ****                 __asm__ volatile("lb a1,0(a0)");
  89:src/Riscv.cpp ****                 char c;
  90:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" :  "=r"(c));
  91:src/Riscv.cpp **** 
  92:src/Riscv.cpp ****                 if(KConsole::pendingGetc > 0)
  93:src/Riscv.cpp ****                 {
  94:src/Riscv.cpp ****                     KConsole::pendingGetc--;
  95:src/Riscv.cpp ****                     KConsole::putCharacterInput(c);
  96:src/Riscv.cpp ****                     KConsole::putCharacterOutput(c);
  97:src/Riscv.cpp ****                 }
  98:src/Riscv.cpp ****             }
  99:src/Riscv.cpp **** 
 100:src/Riscv.cpp ****             plic_complete(plic_claim());
 101:src/Riscv.cpp **** 
 102:src/Riscv.cpp ****             break;
 103:src/Riscv.cpp ****         }
 104:src/Riscv.cpp ****         case operationInterrupt: // todo
GAS LISTING /tmp/ccXQ0lmE.s 			page 3


 105:src/Riscv.cpp ****         {
 106:src/Riscv.cpp ****             break;
 107:src/Riscv.cpp ****         }
 108:src/Riscv.cpp ****         case addrReadInterrupt: // todo
 109:src/Riscv.cpp ****         {
 110:src/Riscv.cpp ****             break;
 111:src/Riscv.cpp ****         }
 112:src/Riscv.cpp ****         case addrWriteInterrupt: // todo
 113:src/Riscv.cpp ****         {
 114:src/Riscv.cpp ****             break;
 115:src/Riscv.cpp ****         }
 116:src/Riscv.cpp ****         case ecallSystemInterupt:
 117:src/Riscv.cpp ****         case ecallUserInterrupt:
 118:src/Riscv.cpp ****         {
 119:src/Riscv.cpp ****             uint64 operation;
 120:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
 121:src/Riscv.cpp **** 
 122:src/Riscv.cpp ****             uint64 volatile sepc = Riscv::r_sepc() + 4;
 123:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 124:src/Riscv.cpp **** 
 125:src/Riscv.cpp ****             switch(operation)
 126:src/Riscv.cpp ****             {
 127:src/Riscv.cpp ****                 case MemoryAllocator::MEM_ALLOC:
 128:src/Riscv.cpp ****                     MemoryAllocator::memAllocHandler();
 129:src/Riscv.cpp ****                     break;
 130:src/Riscv.cpp ****                 case MemoryAllocator::MEM_FREE:
 131:src/Riscv.cpp ****                     MemoryAllocator::memFreeHandler();
 132:src/Riscv.cpp ****                     break;
 133:src/Riscv.cpp ****                 case PCB::THREAD_MAKE_PCB:
 134:src/Riscv.cpp ****                     PCB::threadMakePCBHandler();
 135:src/Riscv.cpp ****                     break;
 136:src/Riscv.cpp ****                 case PCB::THREAD_CREATE:
 137:src/Riscv.cpp ****                     PCB::threadCreateHandler();
 138:src/Riscv.cpp ****                     break;
 139:src/Riscv.cpp ****                 case PCB::THREAD_START:
 140:src/Riscv.cpp ****                     PCB::threadStartHandler();
 141:src/Riscv.cpp ****                     break;
 142:src/Riscv.cpp ****                 case PCB::THREAD_DISPATCH:
 143:src/Riscv.cpp ****                     PCB::threadDispatchHandler();
 144:src/Riscv.cpp ****                     break;
 145:src/Riscv.cpp ****                 case PCB::THREAD_EXIT:
 146:src/Riscv.cpp ****                     PCB::threadExitHandler();
 147:src/Riscv.cpp ****                     break;
 148:src/Riscv.cpp ****                 case PCB::TIME_SLEEP:
 149:src/Riscv.cpp ****                     PCB::threadSleepHandler();
 150:src/Riscv.cpp ****                     break;
 151:src/Riscv.cpp ****                 case KSemaphore::SEM_OPEN:
 152:src/Riscv.cpp ****                     KSemaphore::semOpenHandler();
 153:src/Riscv.cpp ****                     break;
 154:src/Riscv.cpp ****                 case KSemaphore::SEM_WAIT:
 155:src/Riscv.cpp ****                     KSemaphore::semWaitHandler();
 156:src/Riscv.cpp ****                     break;
 157:src/Riscv.cpp ****                 case KSemaphore::SEM_SIGNAL:
 158:src/Riscv.cpp ****                     KSemaphore::semSignalHandler();
 159:src/Riscv.cpp ****                     break;
 160:src/Riscv.cpp ****                 case KSemaphore::SEM_CLOSE:
 161:src/Riscv.cpp ****                     KSemaphore::semCloseHandler();
GAS LISTING /tmp/ccXQ0lmE.s 			page 4


 162:src/Riscv.cpp ****                     break;
 163:src/Riscv.cpp ****                 case KConsole::CONSOLE_GETC:
 164:src/Riscv.cpp ****                     KConsole::getcHandler();
 165:src/Riscv.cpp ****                     break;
 166:src/Riscv.cpp ****                 case KConsole::CONSOLE_PUTC:
 167:src/Riscv.cpp ****                     KConsole::putcHandler();
 168:src/Riscv.cpp ****                     break;
 169:src/Riscv.cpp ****                 case KConsole::CONSOLE_GET_CHAR:
 170:src/Riscv.cpp ****                     KConsole::getCharHandler();
 171:src/Riscv.cpp ****                     break;
 172:src/Riscv.cpp ****             }
 173:src/Riscv.cpp **** 
 174:src/Riscv.cpp ****             Riscv::w_sstatus(sstatus);
 175:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 176:src/Riscv.cpp ****             changePrivMode();
 177:src/Riscv.cpp ****             break;
 178:src/Riscv.cpp ****         }
 179:src/Riscv.cpp ****     }
 180:src/Riscv.cpp **** }
 181:src/Riscv.cpp **** 
 182:src/Riscv.cpp **** void Riscv::kernelMain()
 183:src/Riscv.cpp **** {
 184:src/Riscv.cpp ****     initSystem();
 185:src/Riscv.cpp **** 
 186:src/Riscv.cpp ****     //disableTimerInterrupts();
 187:src/Riscv.cpp ****     //enableInterrupts();
 188:src/Riscv.cpp **** 
 189:src/Riscv.cpp ****     PCB* userPCB = new PCB(&Riscv::userMainWrapper, 0, kmalloc(DEFAULT_STACK_SIZE), DEFAULT_TIME_SL
 190:src/Riscv.cpp ****     //PCB* userPCB = new PCB(&Riscv::myTestsWrapper, 0, kmalloc(DEFAULT_STACK_SIZE), DEFAULT_TIME_S
 191:src/Riscv.cpp ****     userPCB->start();
 192:src/Riscv.cpp ****     while(!userPCB->isFinished())
 193:src/Riscv.cpp ****     {
 194:src/Riscv.cpp ****         thread_dispatch();
 195:src/Riscv.cpp ****     }
 196:src/Riscv.cpp **** 
 197:src/Riscv.cpp ****     finishSystem = true;
 198:src/Riscv.cpp ****     ::printString("End...\n");
 199:src/Riscv.cpp ****     while(!PCB::consolePCB->isFinished())
 200:src/Riscv.cpp ****     {
 201:src/Riscv.cpp ****         thread_dispatch();
 202:src/Riscv.cpp ****     }
 203:src/Riscv.cpp ****     disableInterrupts();
 204:src/Riscv.cpp ****     endSystem();
 205:src/Riscv.cpp **** }
 206:src/Riscv.cpp **** 
 207:src/Riscv.cpp **** void Riscv::userMainWrapper(void* )
 208:src/Riscv.cpp **** {
  12              		.loc 1 208 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23341100 		sd	ra,8(sp)
  17 0008 23308100 		sd	s0,0(sp)
  18              		.cfi_offset 1, -8
  19              		.cfi_offset 8, -16
  20 000c 13040101 		addi	s0,sp,16
  21              		.cfi_def_cfa 8, 0
GAS LISTING /tmp/ccXQ0lmE.s 			page 5


 209:src/Riscv.cpp ****     userMain();
  22              		.loc 1 209 5
  23              		.loc 1 209 13 is_stmt 0
  24 0010 97000000 		call	_Z8userMainv@plt
  24      E7800000 
  25              	.LVL0:
 210:src/Riscv.cpp **** }
  26              		.loc 1 210 1
  27 0018 83308100 		ld	ra,8(sp)
  28              		.cfi_restore 1
  29 001c 03340100 		ld	s0,0(sp)
  30              		.cfi_restore 8
  31              		.cfi_def_cfa 2, 16
  32 0020 13010101 		addi	sp,sp,16
  33              		.cfi_def_cfa_offset 0
  34 0024 67800000 		jr	ra
  35              		.cfi_endproc
  36              	.LFE34:
  38              		.align	2
  39              		.globl	_ZN5Riscv10initSystemEv
  41              	_ZN5Riscv10initSystemEv:
  42              	.LFB27:
  18:src/Riscv.cpp ****     w_stvec((uint64)&Riscv::supervisorTrap);
  43              		.loc 1 18 1 is_stmt 1
  44              		.cfi_startproc
  45 0028 130101FF 		addi	sp,sp,-16
  46              		.cfi_def_cfa_offset 16
  47 002c 23341100 		sd	ra,8(sp)
  48 0030 23308100 		sd	s0,0(sp)
  49              		.cfi_offset 1, -8
  50              		.cfi_offset 8, -16
  51 0034 13040101 		addi	s0,sp,16
  52              		.cfi_def_cfa 8, 0
  19:src/Riscv.cpp ****     PCB::initialize();
  53              		.loc 1 19 5
  19:src/Riscv.cpp ****     PCB::initialize();
  54              		.loc 1 19 12 is_stmt 0
  55 0038 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
  55      83B70700 
  56              	.LVL1:
  57              	.LBB37:
  58              	.LBB38:
  59              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 4/27/22.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_0_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_0_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** #include "../test/printing.hpp"
  10:src/../h/Riscv.hpp **** 
  11:src/../h/Riscv.hpp **** class Riscv
  12:src/../h/Riscv.hpp **** {
  13:src/../h/Riscv.hpp **** public:
  14:src/../h/Riscv.hpp ****     static void kernelMain();
GAS LISTING /tmp/ccXQ0lmE.s 			page 6


  15:src/../h/Riscv.hpp **** 
  16:src/../h/Riscv.hpp ****     static void changePrivMode();
  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp ****     static void initSystem();
  19:src/../h/Riscv.hpp ****     static void endSystem();
  20:src/../h/Riscv.hpp **** 
  21:src/../h/Riscv.hpp ****     static void userMainWrapper(void* p);
  22:src/../h/Riscv.hpp **** 
  23:src/../h/Riscv.hpp ****     static void enableInterrupts();
  24:src/../h/Riscv.hpp **** 
  25:src/../h/Riscv.hpp ****     static void disableTimerInterrupts();
  26:src/../h/Riscv.hpp **** 
  27:src/../h/Riscv.hpp ****     static void disableInterrupts();
  28:src/../h/Riscv.hpp **** 
  29:src/../h/Riscv.hpp ****     static void idleRiscv(void* arg);
  30:src/../h/Riscv.hpp **** 
  31:src/../h/Riscv.hpp ****     static void pushRegisters();
  32:src/../h/Riscv.hpp ****     static void popRegisters();
  33:src/../h/Riscv.hpp **** 
  34:src/../h/Riscv.hpp ****     static uint64 r_scause();
  35:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  36:src/../h/Riscv.hpp **** 
  37:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  38:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
  39:src/../h/Riscv.hpp **** 
  40:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  41:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  42:src/../h/Riscv.hpp **** 
  43:src/../h/Riscv.hpp ****     static uint64 r_stval();
  44:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  45:src/../h/Riscv.hpp **** 
  46:src/../h/Riscv.hpp ****     static bool finishSystem;
  47:src/../h/Riscv.hpp **** 
  48:src/../h/Riscv.hpp ****     enum BitMaskSip
  49:src/../h/Riscv.hpp ****     {
  50:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  51:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  52:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9),
  53:src/../h/Riscv.hpp ****     };
  54:src/../h/Riscv.hpp **** 
  55:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  56:src/../h/Riscv.hpp **** 
  57:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  58:src/../h/Riscv.hpp **** 
  59:src/../h/Riscv.hpp ****     static uint64 r_sip();
  60:src/../h/Riscv.hpp **** 
  61:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  62:src/../h/Riscv.hpp **** 
  63:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  64:src/../h/Riscv.hpp ****     {
  65:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  66:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  67:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  68:src/../h/Riscv.hpp ****     };
  69:src/../h/Riscv.hpp **** 
  70:src/../h/Riscv.hpp ****     static void w_a0_sscratch();
  71:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/ccXQ0lmE.s 			page 7


  72:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  73:src/../h/Riscv.hpp **** 
  74:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  75:src/../h/Riscv.hpp **** 
  76:src/../h/Riscv.hpp ****     static void mc_sie(uint64 mask);
  77:src/../h/Riscv.hpp **** 
  78:src/../h/Riscv.hpp ****     static void ms_sie(uint64 mask);
  79:src/../h/Riscv.hpp **** 
  80:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  81:src/../h/Riscv.hpp **** 
  82:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  83:src/../h/Riscv.hpp **** 
  84:src/../h/Riscv.hpp ****     static uint64 r_sie();
  85:src/../h/Riscv.hpp ****     static void w_sie(uint64 sie);
  86:src/../h/Riscv.hpp ****     static void popSppSpie();
  87:src/../h/Riscv.hpp **** 
  88:src/../h/Riscv.hpp ****     static void supervisorTrap();
  89:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  90:src/../h/Riscv.hpp **** 
  91:src/../h/Riscv.hpp ****     static void myTestsWrapper(void* );
  92:src/../h/Riscv.hpp **** 
  93:src/../h/Riscv.hpp ****     static const uint64 bntOne = 1UL << 63;;
  94:src/../h/Riscv.hpp ****     static const uint64 bntZero = 0UL;
  95:src/../h/Riscv.hpp ****     static const uint64 timerInterrupt = bntOne + 1UL;
  96:src/../h/Riscv.hpp ****     static const uint64 hwInterrupt = bntOne + 9UL;
  97:src/../h/Riscv.hpp ****     static const uint64 operationInterrupt = bntZero + 2UL;
  98:src/../h/Riscv.hpp ****     static const uint64 addrReadInterrupt = bntZero + 5UL;
  99:src/../h/Riscv.hpp ****     static const uint64 addrWriteInterrupt = bntZero + 7UL;
 100:src/../h/Riscv.hpp ****     static const uint64 ecallUserInterrupt = bntZero + 8UL;
 101:src/../h/Riscv.hpp ****     static const uint64 ecallSystemInterupt = bntZero + 9UL;
 102:src/../h/Riscv.hpp **** 
 103:src/../h/Riscv.hpp ****     static uint64 totalTime;
 104:src/../h/Riscv.hpp **** };
 105:src/../h/Riscv.hpp **** 
 106:src/../h/Riscv.hpp **** inline void Riscv::mc_sie(uint64 mask)
 107:src/../h/Riscv.hpp **** {
 108:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sie, %0" : :"r"(mask));
 109:src/../h/Riscv.hpp **** }
 110:src/../h/Riscv.hpp **** 
 111:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause() {
 112:src/../h/Riscv.hpp ****     uint64 volatile scause;
 113:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
 114:src/../h/Riscv.hpp ****     return scause;
 115:src/../h/Riscv.hpp **** }
 116:src/../h/Riscv.hpp **** 
 117:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
 118:src/../h/Riscv.hpp ****     __asm__ volatile("csrw scause, %0" : :"r"(scause));
 119:src/../h/Riscv.hpp **** }
 120:src/../h/Riscv.hpp **** 
 121:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc() {
 122:src/../h/Riscv.hpp ****     uint64 volatile sepc;
 123:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 124:src/../h/Riscv.hpp ****     return sepc;
 125:src/../h/Riscv.hpp **** }
 126:src/../h/Riscv.hpp **** 
 127:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
 128:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sepc, %0" : :"r"(sepc));
GAS LISTING /tmp/ccXQ0lmE.s 			page 8


 129:src/../h/Riscv.hpp **** }
 130:src/../h/Riscv.hpp **** 
 131:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec() {
 132:src/../h/Riscv.hpp ****     uint64 volatile stvec;
 133:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, stvec" : "=r"(stvec));
 134:src/../h/Riscv.hpp ****     return stvec;
 135:src/../h/Riscv.hpp **** }
 136:src/../h/Riscv.hpp **** 
 137:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 138:src/../h/Riscv.hpp ****     __asm__ volatile("csrw stvec, %0" : :"r"(stvec));
  60              		.loc 2 138 5 is_stmt 1
  61              		.loc 2 138 53 is_stmt 0
  62              	#APP
  63              	# 138 "src/../h/Riscv.hpp" 1
 139              	}
  64              		csrw stvec, a5
  65              	# 0 "" 2
  66              	.LVL2:
  67              	#NO_APP
  68              	.LBE38:
  69              	.LBE37:
  20:src/Riscv.cpp ****     KConsole::initialize();
  70              		.loc 1 20 5 is_stmt 1
  20:src/Riscv.cpp ****     KConsole::initialize();
  71              		.loc 1 20 20 is_stmt 0
  72 0044 97000000 		call	_ZN3PCB10initializeEv@plt
  72      E7800000 
  73              	.LVL3:
  21:src/Riscv.cpp **** }
  74              		.loc 1 21 5 is_stmt 1
  21:src/Riscv.cpp **** }
  75              		.loc 1 21 25 is_stmt 0
  76 004c 97000000 		call	_ZN8KConsole10initializeEv@plt
  76      E7800000 
  77              	.LVL4:
  22:src/Riscv.cpp **** 
  78              		.loc 1 22 1
  79 0054 83308100 		ld	ra,8(sp)
  80              		.cfi_restore 1
  81 0058 03340100 		ld	s0,0(sp)
  82              		.cfi_restore 8
  83              		.cfi_def_cfa 2, 16
  84 005c 13010101 		addi	sp,sp,16
  85              		.cfi_def_cfa_offset 0
  86 0060 67800000 		jr	ra
  87              		.cfi_endproc
  88              	.LFE27:
  90              		.align	2
  91              		.globl	_ZN5Riscv16enableInterruptsEv
  93              	_ZN5Riscv16enableInterruptsEv:
  94              	.LFB29:
  30:src/Riscv.cpp ****     ms_sstatus(Riscv::SSTATUS_SIE);
  95              		.loc 1 30 32 is_stmt 1
  96              		.cfi_startproc
  97 0064 130101FF 		addi	sp,sp,-16
  98              		.cfi_def_cfa_offset 16
  99 0068 23348100 		sd	s0,8(sp)
GAS LISTING /tmp/ccXQ0lmE.s 			page 9


 100              		.cfi_offset 8, -8
 101 006c 13040101 		addi	s0,sp,16
 102              		.cfi_def_cfa 8, 0
  31:src/Riscv.cpp **** }
 103              		.loc 1 31 5
 104              	.LVL5:
 105              	.LBB39:
 106              	.LBB40:
 140:src/../h/Riscv.hpp **** 
 141:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stval() {
 142:src/../h/Riscv.hpp ****     uint64 volatile stval;
 143:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, stval" : "=r"(stval));
 144:src/../h/Riscv.hpp ****     return stval;
 145:src/../h/Riscv.hpp **** }
 146:src/../h/Riscv.hpp **** 
 147:src/../h/Riscv.hpp **** inline void Riscv::w_sie(uint64 sie)
 148:src/../h/Riscv.hpp **** {
 149:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sie, %0" : :"r"(sie));
 150:src/../h/Riscv.hpp **** }
 151:src/../h/Riscv.hpp **** 
 152:src/../h/Riscv.hpp **** inline void Riscv::w_stval(uint64 stval) {
 153:src/../h/Riscv.hpp ****     __asm__ volatile("csrw stval, %0" : :"r"(stval));
 154:src/../h/Riscv.hpp **** }
 155:src/../h/Riscv.hpp **** 
 156:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 157:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sip, %0" : :"r"(mask));
 158:src/../h/Riscv.hpp **** }
 159:src/../h/Riscv.hpp **** 
 160:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 161:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sip, %0" : :"r"(mask));
 162:src/../h/Riscv.hpp **** }
 163:src/../h/Riscv.hpp **** 
 164:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sie()
 165:src/../h/Riscv.hpp **** {
 166:src/../h/Riscv.hpp ****     uint64 volatile sie;
 167:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sip" : "=r"(sie));
 168:src/../h/Riscv.hpp ****     return sie;
 169:src/../h/Riscv.hpp **** }
 170:src/../h/Riscv.hpp **** 
 171:src/../h/Riscv.hpp **** inline void Riscv::ms_sie(uint64 mask)
 172:src/../h/Riscv.hpp **** {
 173:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sie, %0" : :"r"(mask));
 174:src/../h/Riscv.hpp **** }
 175:src/../h/Riscv.hpp **** 
 176:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip() {
 177:src/../h/Riscv.hpp ****     uint64 volatile sip;
 178:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sip" : "=r"(sip));
 179:src/../h/Riscv.hpp ****     return sip;
 180:src/../h/Riscv.hpp **** }
 181:src/../h/Riscv.hpp **** 
 182:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 183:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sip, %0" : :"r"(sip));
 184:src/../h/Riscv.hpp **** }
 185:src/../h/Riscv.hpp **** 
 186:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 187:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sstatus, %0" : :"r"(mask));
 107              		.loc 2 187 5
GAS LISTING /tmp/ccXQ0lmE.s 			page 10


 108              		.loc 2 187 54 is_stmt 0
 109 0070 93072000 		li	a5,2
 110              	#APP
 111              	# 187 "src/../h/Riscv.hpp" 1
 188              	}
 112              		csrs sstatus, a5
 113              	# 0 "" 2
 114              	.LVL6:
 115              	#NO_APP
 116              	.LBE40:
 117              	.LBE39:
  32:src/Riscv.cpp **** 
 118              		.loc 1 32 1
 119 0078 03348100 		ld	s0,8(sp)
 120              		.cfi_restore 8
 121              		.cfi_def_cfa 2, 16
 122 007c 13010101 		addi	sp,sp,16
 123              		.cfi_def_cfa_offset 0
 124 0080 67800000 		jr	ra
 125              		.cfi_endproc
 126              	.LFE29:
 128              		.align	2
 129              		.globl	_ZN5Riscv17disableInterruptsEv
 131              	_ZN5Riscv17disableInterruptsEv:
 132              	.LFB30:
  35:src/Riscv.cpp ****     mc_sstatus(Riscv::SSTATUS_SIE);
 133              		.loc 1 35 1 is_stmt 1
 134              		.cfi_startproc
 135 0084 130101FF 		addi	sp,sp,-16
 136              		.cfi_def_cfa_offset 16
 137 0088 23348100 		sd	s0,8(sp)
 138              		.cfi_offset 8, -8
 139 008c 13040101 		addi	s0,sp,16
 140              		.cfi_def_cfa 8, 0
  36:src/Riscv.cpp **** }
 141              		.loc 1 36 5
 142              	.LVL7:
 143              	.LBB41:
 144              	.LBB42:
 189:src/../h/Riscv.hpp **** 
 190:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 191:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sstatus, %0" : :"r"(mask));
 145              		.loc 2 191 5
 146              		.loc 2 191 54 is_stmt 0
 147 0090 93072000 		li	a5,2
 148              	#APP
 149              	# 191 "src/../h/Riscv.hpp" 1
 192              	}
 150              		csrc sstatus, a5
 151              	# 0 "" 2
 152              	.LVL8:
 153              	#NO_APP
 154              	.LBE42:
 155              	.LBE41:
  37:src/Riscv.cpp **** 
 156              		.loc 1 37 1
 157 0098 03348100 		ld	s0,8(sp)
GAS LISTING /tmp/ccXQ0lmE.s 			page 11


 158              		.cfi_restore 8
 159              		.cfi_def_cfa 2, 16
 160 009c 13010101 		addi	sp,sp,16
 161              		.cfi_def_cfa_offset 0
 162 00a0 67800000 		jr	ra
 163              		.cfi_endproc
 164              	.LFE30:
 166              		.align	2
 167              		.globl	_ZN5Riscv9endSystemEv
 169              	_ZN5Riscv9endSystemEv:
 170              	.LFB28:
  25:src/Riscv.cpp ****     //todo
 171              		.loc 1 25 1 is_stmt 1
 172              		.cfi_startproc
 173 00a4 130101FF 		addi	sp,sp,-16
 174              		.cfi_def_cfa_offset 16
 175 00a8 23341100 		sd	ra,8(sp)
 176 00ac 23308100 		sd	s0,0(sp)
 177              		.cfi_offset 1, -8
 178              		.cfi_offset 8, -16
 179 00b0 13040101 		addi	s0,sp,16
 180              		.cfi_def_cfa 8, 0
  27:src/Riscv.cpp **** }
 181              		.loc 1 27 5
  27:src/Riscv.cpp **** }
 182              		.loc 1 27 29 is_stmt 0
 183 00b4 97000000 		call	_ZN5Riscv17disableInterruptsEv
 183      E7800000 
 184              	.LVL9:
  28:src/Riscv.cpp **** 
 185              		.loc 1 28 1
 186 00bc 83308100 		ld	ra,8(sp)
 187              		.cfi_restore 1
 188 00c0 03340100 		ld	s0,0(sp)
 189              		.cfi_restore 8
 190              		.cfi_def_cfa 2, 16
 191 00c4 13010101 		addi	sp,sp,16
 192              		.cfi_def_cfa_offset 0
 193 00c8 67800000 		jr	ra
 194              		.cfi_endproc
 195              	.LFE28:
 197              		.align	2
 198              		.globl	_ZN5Riscv10popSppSpieEv
 200              	_ZN5Riscv10popSppSpieEv:
 201              	.LFB31:
  40:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
 202              		.loc 1 40 1 is_stmt 1
 203              		.cfi_startproc
 204 00cc 130101FF 		addi	sp,sp,-16
 205              		.cfi_def_cfa_offset 16
 206 00d0 23348100 		sd	s0,8(sp)
 207              		.cfi_offset 8, -8
 208 00d4 13040101 		addi	s0,sp,16
 209              		.cfi_def_cfa 8, 0
  41:src/Riscv.cpp ****     __asm__ volatile ("sret");
 210              		.loc 1 41 5
  41:src/Riscv.cpp ****     __asm__ volatile ("sret");
GAS LISTING /tmp/ccXQ0lmE.s 			page 12


 211              		.loc 1 41 39 is_stmt 0
 212              	#APP
 213              	# 41 "src/Riscv.cpp" 1
  42:src/Riscv.cpp **** }
 214              		csrw sepc, ra
 215              	# 0 "" 2
 216              		.loc 1 42 5 is_stmt 1
  42:src/Riscv.cpp **** }
 217              		.loc 1 42 30 is_stmt 0
 218              	# 42 "src/Riscv.cpp" 1
  43:src/Riscv.cpp **** 
 219              		sret
 220              	# 0 "" 2
 221              		.loc 1 43 1
 222              	#NO_APP
 223 00e0 03348100 		ld	s0,8(sp)
 224              		.cfi_restore 8
 225              		.cfi_def_cfa 2, 16
 226 00e4 13010101 		addi	sp,sp,16
 227              		.cfi_def_cfa_offset 0
 228 00e8 67800000 		jr	ra
 229              		.cfi_endproc
 230              	.LFE31:
 232              		.align	2
 233              		.globl	_ZN5Riscv20handleSupervisorTrapEv
 235              	_ZN5Riscv20handleSupervisorTrapEv:
 236              	.LFB32:
  46:src/Riscv.cpp ****     __asm__ volatile("mv %0, a4" : "=r"(PCB::savedRegA4));
 237              		.loc 1 46 1 is_stmt 1
 238              		.cfi_startproc
 239 00ec 130101F9 		addi	sp,sp,-112
 240              		.cfi_def_cfa_offset 112
 241 00f0 23341106 		sd	ra,104(sp)
 242 00f4 23308106 		sd	s0,96(sp)
 243 00f8 233C9104 		sd	s1,88(sp)
 244              		.cfi_offset 1, -8
 245              		.cfi_offset 8, -16
 246              		.cfi_offset 9, -24
 247 00fc 13040107 		addi	s0,sp,112
 248              		.cfi_def_cfa 8, 0
  47:src/Riscv.cpp ****     __asm__ volatile("csrr %0, sscratch":"=r"(PCB::running->sscratch));
 249              		.loc 1 47 5
  47:src/Riscv.cpp ****     __asm__ volatile("csrr %0, sscratch":"=r"(PCB::running->sscratch));
 250              		.loc 1 47 58 is_stmt 0
 251              	#APP
 252              	# 47 "src/Riscv.cpp" 1
 253              		mv a4, a4
 254              	# 0 "" 2
 255              	#NO_APP
 256 0104 97070000 		la	a5,_ZN3PCB10savedRegA4E
 256      83B70700 
 257 010c 23B0E700 		sd	a4,0(a5)
  48:src/Riscv.cpp **** 
 258              		.loc 1 48 5 is_stmt 1
  48:src/Riscv.cpp **** 
 259              		.loc 1 48 61 is_stmt 0
 260 0110 97070000 		la	a5,_ZN3PCB7runningE
GAS LISTING /tmp/ccXQ0lmE.s 			page 13


 260      83B70700 
 261 0118 83B70700 		ld	a5,0(a5)
  48:src/Riscv.cpp **** 
 262              		.loc 1 48 71
 263              	#APP
 264              	# 48 "src/Riscv.cpp" 1
 265              		csrr a4, sscratch
 266              	# 0 "" 2
 267              	#NO_APP
 268 0120 23B8E700 		sd	a4,16(a5)
  50:src/Riscv.cpp **** 
 269              		.loc 1 50 5 is_stmt 1
 270              	.LBB43:
 271              	.LBB44:
 112:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
 272              		.loc 2 112 5
 113:src/../h/Riscv.hpp ****     return scause;
 273              		.loc 2 113 5
 113:src/../h/Riscv.hpp ****     return scause;
 274              		.loc 2 113 55 is_stmt 0
 275              	#APP
 276              	# 113 "src/../h/Riscv.hpp" 1
 277              		csrr a5, scause
 278              	# 0 "" 2
 279              	#NO_APP
 280 0128 233CF4FA 		sd	a5,-72(s0)
 114:src/../h/Riscv.hpp **** }
 281              		.loc 2 114 5 is_stmt 1
 114:src/../h/Riscv.hpp **** }
 282              		.loc 2 114 12 is_stmt 0
 283 012c 833784FB 		ld	a5,-72(s0)
 284              	.LVL10:
 285              	.LBE44:
 286              	.LBE43:
  52:src/Riscv.cpp ****     {
 287              		.loc 1 52 5 is_stmt 1
 288              	.LBB45:
 289 0130 1307F0FF 		li	a4,-1
 290 0134 1317F703 		slli	a4,a4,63
 291 0138 13071700 		addi	a4,a4,1
 292 013c 638EE70C 		beq	a5,a4,.L14
 293 0140 1307F0FF 		li	a4,-1
 294 0144 1317F703 		slli	a4,a4,63
 295 0148 13071700 		addi	a4,a4,1
 296 014c 636EF704 		bgtu	a5,a4,.L15
 297 0150 938787FF 		addi	a5,a5,-8
 298              	.LVL11:
 299 0154 13071000 		li	a4,1
 300 0158 6360F714 		bgtu	a5,a4,.L13
 301              	.LBE45:
 116:src/Riscv.cpp ****         case ecallUserInterrupt:
 302              		.loc 1 116 9
 117:src/Riscv.cpp ****         {
 303              		.loc 1 117 9
 118:src/Riscv.cpp ****             uint64 operation;
 304              		.loc 1 118 9
 305              	.LBB77:
GAS LISTING /tmp/ccXQ0lmE.s 			page 14


 306              	.LBB46:
 119:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
 307              		.loc 1 119 13
 120:src/Riscv.cpp **** 
 308              		.loc 1 120 13
 120:src/Riscv.cpp **** 
 309              		.loc 1 120 61 is_stmt 0
 310              	#APP
 311              	# 120 "src/Riscv.cpp" 1
 312              		mv a5, a0
 313              	# 0 "" 2
 314              	.LVL12:
 122:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 315              		.loc 1 122 13 is_stmt 1
 316              	#NO_APP
 317              	.LBB47:
 318              	.LBB48:
 122:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 319              		.loc 2 122 5
 123:src/../h/Riscv.hpp ****     return sepc;
 320              		.loc 2 123 5
 123:src/../h/Riscv.hpp ****     return sepc;
 321              		.loc 2 123 51 is_stmt 0
 322              	#APP
 323              	# 123 "src/../h/Riscv.hpp" 1
 324              		csrr a4, sepc
 325              	# 0 "" 2
 326              	#NO_APP
 327 0164 233CE4FC 		sd	a4,-40(s0)
 124:src/../h/Riscv.hpp **** }
 328              		.loc 2 124 5 is_stmt 1
 124:src/../h/Riscv.hpp **** }
 329              		.loc 2 124 12 is_stmt 0
 330 0168 033784FD 		ld	a4,-40(s0)
 331              	.LBE48:
 332              	.LBE47:
 122:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 333              		.loc 1 122 52
 334 016c 13074700 		addi	a4,a4,4
 122:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 335              		.loc 1 122 54
 336 0170 2334E4FA 		sd	a4,-88(s0)
 123:src/Riscv.cpp **** 
 337              		.loc 1 123 13 is_stmt 1
 338              	.LBB49:
 339              	.LBB50:
 193:src/../h/Riscv.hpp **** 
 194:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sstatus() {
 195:src/../h/Riscv.hpp ****     uint64 volatile sstatus;
 340              		.loc 2 195 5
 196:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 341              		.loc 2 196 5
 342              		.loc 2 196 57 is_stmt 0
 343              	#APP
 344              	# 196 "src/../h/Riscv.hpp" 1
 197              	    return sstatus;
 345              		csrr a4, sstatus
GAS LISTING /tmp/ccXQ0lmE.s 			page 15


 346              	# 0 "" 2
 347              	#NO_APP
 348 0178 2338E4FC 		sd	a4,-48(s0)
 349              		.loc 2 197 5 is_stmt 1
 350              		.loc 2 197 12 is_stmt 0
 351 017c 033704FD 		ld	a4,-48(s0)
 352              	.LBE50:
 353              	.LBE49:
 123:src/Riscv.cpp **** 
 354              		.loc 1 123 56
 355 0180 2338E4FA 		sd	a4,-80(s0)
 125:src/Riscv.cpp ****             {
 356              		.loc 1 125 13 is_stmt 1
 357 0184 13073004 		li	a4,67
 358 0188 6364F716 		bgtu	a5,a4,.L21
 359 018c 93972700 		slli	a5,a5,2
 360              	.LVL13:
 361 0190 17070000 		lla	a4,.L23
 361      13070700 
 362 0198 B387E700 		add	a5,a5,a4
 363 019c 83A70700 		lw	a5,0(a5)
 364 01a0 B387E700 		add	a5,a5,a4
 365 01a4 67800700 		jr	a5
 366              		.section	.rodata
 367              		.align	2
 368              		.align	2
 369              	.L23:
 370 0000 00000000 		.word	.L21-.L23
 371 0004 00000000 		.word	.L37-.L23
 372 0008 00000000 		.word	.L36-.L23
 373 000c 00000000 		.word	.L21-.L23
 374 0010 00000000 		.word	.L21-.L23
 375 0014 00000000 		.word	.L21-.L23
 376 0018 00000000 		.word	.L21-.L23
 377 001c 00000000 		.word	.L21-.L23
 378 0020 00000000 		.word	.L21-.L23
 379 0024 00000000 		.word	.L21-.L23
 380 0028 00000000 		.word	.L21-.L23
 381 002c 00000000 		.word	.L21-.L23
 382 0030 00000000 		.word	.L21-.L23
 383 0034 00000000 		.word	.L21-.L23
 384 0038 00000000 		.word	.L21-.L23
 385 003c 00000000 		.word	.L21-.L23
 386 0040 00000000 		.word	.L21-.L23
 387 0044 00000000 		.word	.L35-.L23
 388 0048 00000000 		.word	.L34-.L23
 389 004c 00000000 		.word	.L33-.L23
 390 0050 00000000 		.word	.L32-.L23
 391 0054 00000000 		.word	.L31-.L23
 392 0058 00000000 		.word	.L21-.L23
 393 005c 00000000 		.word	.L21-.L23
 394 0060 00000000 		.word	.L21-.L23
 395 0064 00000000 		.word	.L21-.L23
 396 0068 00000000 		.word	.L21-.L23
 397 006c 00000000 		.word	.L21-.L23
 398 0070 00000000 		.word	.L21-.L23
 399 0074 00000000 		.word	.L21-.L23
GAS LISTING /tmp/ccXQ0lmE.s 			page 16


 400 0078 00000000 		.word	.L21-.L23
 401 007c 00000000 		.word	.L21-.L23
 402 0080 00000000 		.word	.L21-.L23
 403 0084 00000000 		.word	.L30-.L23
 404 0088 00000000 		.word	.L29-.L23
 405 008c 00000000 		.word	.L28-.L23
 406 0090 00000000 		.word	.L27-.L23
 407 0094 00000000 		.word	.L21-.L23
 408 0098 00000000 		.word	.L21-.L23
 409 009c 00000000 		.word	.L21-.L23
 410 00a0 00000000 		.word	.L21-.L23
 411 00a4 00000000 		.word	.L21-.L23
 412 00a8 00000000 		.word	.L21-.L23
 413 00ac 00000000 		.word	.L21-.L23
 414 00b0 00000000 		.word	.L21-.L23
 415 00b4 00000000 		.word	.L21-.L23
 416 00b8 00000000 		.word	.L21-.L23
 417 00bc 00000000 		.word	.L21-.L23
 418 00c0 00000000 		.word	.L21-.L23
 419 00c4 00000000 		.word	.L26-.L23
 420 00c8 00000000 		.word	.L21-.L23
 421 00cc 00000000 		.word	.L21-.L23
 422 00d0 00000000 		.word	.L21-.L23
 423 00d4 00000000 		.word	.L21-.L23
 424 00d8 00000000 		.word	.L21-.L23
 425 00dc 00000000 		.word	.L21-.L23
 426 00e0 00000000 		.word	.L21-.L23
 427 00e4 00000000 		.word	.L21-.L23
 428 00e8 00000000 		.word	.L21-.L23
 429 00ec 00000000 		.word	.L21-.L23
 430 00f0 00000000 		.word	.L21-.L23
 431 00f4 00000000 		.word	.L21-.L23
 432 00f8 00000000 		.word	.L21-.L23
 433 00fc 00000000 		.word	.L21-.L23
 434 0100 00000000 		.word	.L21-.L23
 435 0104 00000000 		.word	.L25-.L23
 436 0108 00000000 		.word	.L24-.L23
 437 010c 00000000 		.word	.L22-.L23
 438              		.text
 439              	.LVL14:
 440              	.L15:
 441              	.LBE46:
  52:src/Riscv.cpp ****     {
 442              		.loc 1 52 5 is_stmt 0
 443 01a8 1307F0FF 		li	a4,-1
 444 01ac 1317F703 		slli	a4,a4,63
 445 01b0 13079700 		addi	a4,a4,9
 446 01b4 6392E70E 		bne	a5,a4,.L13
 447              	.LBE77:
  77:src/Riscv.cpp ****         {
 448              		.loc 1 77 9 is_stmt 1
  78:src/Riscv.cpp ****             uint64 x = CONSOLE_STATUS;
 449              		.loc 1 78 9
 450              	.LBB78:
 451              	.LBB55:
  79:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0"::"r"(x));
 452              		.loc 1 79 13
GAS LISTING /tmp/ccXQ0lmE.s 			page 17


  79:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0"::"r"(x));
 453              		.loc 1 79 20 is_stmt 0
 454 01b8 97070000 		la	a5,CONSOLE_STATUS
 454      83B70700 
 455              	.LVL15:
 456 01c0 83B70700 		ld	a5,0(a5)
 457              	.LVL16:
  80:src/Riscv.cpp ****             __asm__ volatile("lb a1, 0(a0)");
 458              		.loc 1 80 13 is_stmt 1
  80:src/Riscv.cpp ****             __asm__ volatile("lb a1, 0(a0)");
 459              		.loc 1 80 50 is_stmt 0
 460              	#APP
 461              	# 80 "src/Riscv.cpp" 1
  81:src/Riscv.cpp ****             uint64 operation;
 462              		mv a0, a5
 463              	# 0 "" 2
 464              		.loc 1 81 13 is_stmt 1
  81:src/Riscv.cpp ****             uint64 operation;
 465              		.loc 1 81 45 is_stmt 0
 466              	# 81 "src/Riscv.cpp" 1
  82:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" :  "=r"(operation));
 467              		lb a1, 0(a0)
 468              	# 0 "" 2
 469              		.loc 1 82 13 is_stmt 1
  83:src/Riscv.cpp ****             if(operation & KConsole::STATUS_READ_MASK)
 470              		.loc 1 83 13
  83:src/Riscv.cpp ****             if(operation & KConsole::STATUS_READ_MASK)
 471              		.loc 1 83 61 is_stmt 0
 472              	# 83 "src/Riscv.cpp" 1
 473              		mv a5, a1
 474              	# 0 "" 2
 475              	.LVL17:
  84:src/Riscv.cpp ****             {
 476              		.loc 1 84 13 is_stmt 1
 477              	#NO_APP
 478              	.LBB56:
  84:src/Riscv.cpp ****             {
 479              		.loc 1 84 26 is_stmt 0
 480 01d0 93F71700 		andi	a5,a5,1
 481              	.LVL18:
  84:src/Riscv.cpp ****             {
 482              		.loc 1 84 13
 483 01d4 63880702 		beqz	a5,.L20
 484              	.LBB57:
  86:src/Riscv.cpp ****                 __asm__ volatile("mv a0, %0"::"r"(x));
 485              		.loc 1 86 17 is_stmt 1
  86:src/Riscv.cpp ****                 __asm__ volatile("mv a0, %0"::"r"(x));
 486              		.loc 1 86 19 is_stmt 0
 487 01d8 97070000 		la	a5,CONSOLE_TX_DATA
 487      83B70700 
 488 01e0 83B70700 		ld	a5,0(a5)
 489              	.LVL19:
  87:src/Riscv.cpp ****                 __asm__ volatile("lb a1,0(a0)");
 490              		.loc 1 87 17 is_stmt 1
  87:src/Riscv.cpp ****                 __asm__ volatile("lb a1,0(a0)");
 491              		.loc 1 87 54 is_stmt 0
 492              	#APP
GAS LISTING /tmp/ccXQ0lmE.s 			page 18


 493              	# 87 "src/Riscv.cpp" 1
  88:src/Riscv.cpp ****                 char c;
 494              		mv a0, a5
 495              	# 0 "" 2
 496              		.loc 1 88 17 is_stmt 1
  88:src/Riscv.cpp ****                 char c;
 497              		.loc 1 88 48 is_stmt 0
 498              	# 88 "src/Riscv.cpp" 1
  89:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" :  "=r"(c));
 499              		lb a1,0(a0)
 500              	# 0 "" 2
 501              		.loc 1 89 17 is_stmt 1
  90:src/Riscv.cpp **** 
 502              		.loc 1 90 17
  90:src/Riscv.cpp **** 
 503              		.loc 1 90 57 is_stmt 0
 504              	# 90 "src/Riscv.cpp" 1
 505              		mv a0, a1
 506              	# 0 "" 2
 507              	#NO_APP
 508 01f0 9374F50F 		andi	s1,a0,0xff
 509              	.LVL20:
  92:src/Riscv.cpp ****                 {
 510              		.loc 1 92 17 is_stmt 1
  92:src/Riscv.cpp ****                 {
 511              		.loc 1 92 42 is_stmt 0
 512 01f4 97070000 		la	a5,_ZN8KConsole11pendingGetcE
 512      83B70700 
 513              	.LVL21:
 514 01fc 83B70700 		ld	a5,0(a5)
  92:src/Riscv.cpp ****                 {
 515              		.loc 1 92 17
 516 0200 639E070A 		bnez	a5,.L40
 517              	.LVL22:
 518              	.L20:
 519              	.LBE57:
 520              	.LBE56:
 100:src/Riscv.cpp **** 
 521              		.loc 1 100 13 is_stmt 1
 100:src/Riscv.cpp **** 
 522              		.loc 1 100 26 is_stmt 0
 523 0204 97000000 		call	plic_claim@plt
 523      E7800000 
 524              	.LVL23:
 525 020c 97000000 		call	plic_complete@plt
 525      E7800000 
 526              	.LVL24:
 102:src/Riscv.cpp ****         }
 527              		.loc 1 102 13 is_stmt 1
 528 0214 6F004008 		j	.L13
 529              	.LVL25:
 530              	.L14:
 531              	.LBE55:
 532              	.LBE78:
  54:src/Riscv.cpp ****         {
 533              		.loc 1 54 9
  55:src/Riscv.cpp ****             uint64 volatile sepc = Riscv::r_sepc();
GAS LISTING /tmp/ccXQ0lmE.s 			page 19


 534              		.loc 1 55 9
 535              	.LBB79:
 536              	.LBB60:
  56:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 537              		.loc 1 56 13
 538              	.LBB61:
 539              	.LBB62:
 122:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 540              		.loc 2 122 5
 123:src/../h/Riscv.hpp ****     return sepc;
 541              		.loc 2 123 5
 123:src/../h/Riscv.hpp ****     return sepc;
 542              		.loc 2 123 51 is_stmt 0
 543              	#APP
 544              	# 123 "src/../h/Riscv.hpp" 1
 545              		csrr a5, sepc
 546              	# 0 "" 2
 547              	.LVL26:
 548              	#NO_APP
 549 021c 2334F4FC 		sd	a5,-56(s0)
 124:src/../h/Riscv.hpp **** }
 550              		.loc 2 124 5 is_stmt 1
 124:src/../h/Riscv.hpp **** }
 551              		.loc 2 124 12 is_stmt 0
 552 0220 833784FC 		ld	a5,-56(s0)
 553              	.LBE62:
 554              	.LBE61:
  56:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 555              		.loc 1 56 50
 556 0224 233CF4F8 		sd	a5,-104(s0)
  57:src/Riscv.cpp ****             mc_sip(Riscv::SIP_SSIP);
 557              		.loc 1 57 13 is_stmt 1
 558              	.LBB63:
 559              	.LBB64:
 195:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 560              		.loc 2 195 5
 196:src/../h/Riscv.hpp ****     return sstatus;
 561              		.loc 2 196 5
 196:src/../h/Riscv.hpp ****     return sstatus;
 562              		.loc 2 196 57 is_stmt 0
 563              	#APP
 564              	# 196 "src/../h/Riscv.hpp" 1
 565              		csrr a5, sstatus
 566              	# 0 "" 2
 567              	#NO_APP
 568 022c 2330F4FC 		sd	a5,-64(s0)
 569              		.loc 2 197 5 is_stmt 1
 570              		.loc 2 197 12 is_stmt 0
 571 0230 833704FC 		ld	a5,-64(s0)
 572              	.LBE64:
 573              	.LBE63:
  57:src/Riscv.cpp ****             mc_sip(Riscv::SIP_SSIP);
 574              		.loc 1 57 56
 575 0234 2330F4FA 		sd	a5,-96(s0)
  58:src/Riscv.cpp ****             //trapPrintString("timerInterrupt\n");
 576              		.loc 1 58 13 is_stmt 1
 577              	.LVL27:
GAS LISTING /tmp/ccXQ0lmE.s 			page 20


 578              	.LBB65:
 579              	.LBB66:
 161:src/../h/Riscv.hpp **** }
 580              		.loc 2 161 5
 161:src/../h/Riscv.hpp **** }
 581              		.loc 2 161 50 is_stmt 0
 582 0238 93072000 		li	a5,2
 583              	#APP
 584              	# 161 "src/../h/Riscv.hpp" 1
 585              		csrc sip, a5
 586              	# 0 "" 2
 587              	.LVL28:
 588              	#NO_APP
 589              	.LBE66:
 590              	.LBE65:
  61:src/Riscv.cpp ****             //trapPrintInt(totalTime);
 591              		.loc 1 61 13 is_stmt 1
  61:src/Riscv.cpp ****             //trapPrintInt(totalTime);
 592              		.loc 1 61 22 is_stmt 0
 593 0240 17070000 		lla	a4,.LANCHOR0
 593      13070700 
 594 0248 83370700 		ld	a5,0(a4)
 595 024c 93871700 		addi	a5,a5,1
 596 0250 2330F700 		sd	a5,0(a4)
  64:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
 597              		.loc 1 64 13 is_stmt 1
  64:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
 598              		.loc 1 64 34 is_stmt 0
 599 0254 97040000 		la	s1,_ZN3PCB16timeSliceCounterE
 599      83B40400 
 600 025c 83B70400 		ld	a5,0(s1)
 601 0260 93871700 		addi	a5,a5,1
 602 0264 23B0F400 		sd	a5,0(s1)
  65:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
 603              		.loc 1 65 13 is_stmt 1
  65:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
 604              		.loc 1 65 40 is_stmt 0
 605 0268 97000000 		call	_ZN12SleepPCBList13tryToWakePCBsEv@plt
 605      E7800000 
 606              	.LVL29:
  66:src/Riscv.cpp ****             {
 607              		.loc 1 66 13 is_stmt 1
  66:src/Riscv.cpp ****             {
 608              		.loc 1 66 68 is_stmt 0
 609 0270 97070000 		la	a5,_ZN3PCB7runningE
 609      83B70700 
 610 0278 83B70700 		ld	a5,0(a5)
 611              	.LVL30:
 612              	.LBB67:
 613              	.LBB68:
 614              		.file 3 "src/../h/PCB.hpp"
   1:src/../h/PCB.hpp **** //
   2:src/../h/PCB.hpp **** // Created by os on 4/27/22.
   3:src/../h/PCB.hpp **** //
   4:src/../h/PCB.hpp **** 
   5:src/../h/PCB.hpp **** #ifndef PROJECT_BASE_V1_0_PCB_HPP
   6:src/../h/PCB.hpp **** #define PROJECT_BASE_V1_0_PCB_HPP
GAS LISTING /tmp/ccXQ0lmE.s 			page 21


   7:src/../h/PCB.hpp **** 
   8:src/../h/PCB.hpp **** #include "../lib/hw.h"
   9:src/../h/PCB.hpp **** #include "Scheduler.hpp"
  10:src/../h/PCB.hpp **** #include "Riscv.hpp"
  11:src/../h/PCB.hpp **** 
  12:src/../h/PCB.hpp **** class PCB
  13:src/../h/PCB.hpp **** {
  14:src/../h/PCB.hpp **** public:
  15:src/../h/PCB.hpp ****     static uint64 savedRegA4;
  16:src/../h/PCB.hpp **** 
  17:src/../h/PCB.hpp ****     using Body = void (*)(void*);
  18:src/../h/PCB.hpp **** 
  19:src/../h/PCB.hpp ****     PCB(Body body,  void* args, void* stack_space, uint64 timeSlice);
  20:src/../h/PCB.hpp ****     ~PCB();
  21:src/../h/PCB.hpp **** 
  22:src/../h/PCB.hpp ****     void start();
  23:src/../h/PCB.hpp ****     static void dispatch();
  24:src/../h/PCB.hpp ****     static void sleep(time_t);
  25:src/../h/PCB.hpp **** 
  26:src/../h/PCB.hpp ****     static PCB* running;
  27:src/../h/PCB.hpp **** 
  28:src/../h/PCB.hpp ****     static uint64 timeSliceCounter;
  29:src/../h/PCB.hpp ****     uint64 getTimeSlice() { return timeSlice;}
 615              		.loc 3 29 29 is_stmt 1
 616              		.loc 3 29 36 is_stmt 0
 617 027c 83B78701 		ld	a5,24(a5)
 618              	.LVL31:
 619              	.LBE68:
 620              	.LBE67:
  66:src/Riscv.cpp ****             {
 621              		.loc 1 66 39
 622 0280 03B70400 		ld	a4,0(s1)
  66:src/Riscv.cpp ****             {
 623              		.loc 1 66 13
 624 0284 6374F702 		bgeu	a4,a5,.L41
 625              	.L19:
  72:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 626              		.loc 1 72 13 is_stmt 1
  72:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 627              		.loc 1 72 29 is_stmt 0
 628 0288 833704FA 		ld	a5,-96(s0)
 629              	.LVL32:
 630              	.LBB69:
 631              	.LBB70:
 198:src/../h/Riscv.hpp **** }
 199:src/../h/Riscv.hpp **** 
 200:src/../h/Riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus) {
 201:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sstatus, %0" : :"r"(sstatus));
 632              		.loc 2 201 5 is_stmt 1
 633              		.loc 2 201 57 is_stmt 0
 634              	#APP
 635              	# 201 "src/../h/Riscv.hpp" 1
 202              	}
 636              		csrw sstatus, a5
 637              	# 0 "" 2
 638              	.LVL33:
 639              	#NO_APP
GAS LISTING /tmp/ccXQ0lmE.s 			page 22


 640              	.LBE70:
 641              	.LBE69:
  73:src/Riscv.cpp ****             changePrivMode();
 642              		.loc 1 73 13 is_stmt 1
  73:src/Riscv.cpp ****             changePrivMode();
 643              		.loc 1 73 26 is_stmt 0
 644 0290 833784F9 		ld	a5,-104(s0)
 645              	.LVL34:
 646              	.LBB71:
 647              	.LBB72:
 128:src/../h/Riscv.hpp **** }
 648              		.loc 2 128 5 is_stmt 1
 128:src/../h/Riscv.hpp **** }
 649              		.loc 2 128 51 is_stmt 0
 650              	#APP
 651              	# 128 "src/../h/Riscv.hpp" 1
 652              		csrw sepc, a5
 653              	# 0 "" 2
 654              	.LVL35:
 655              	#NO_APP
 656              	.LBE72:
 657              	.LBE71:
  74:src/Riscv.cpp ****             break;
 658              		.loc 1 74 13 is_stmt 1
  75:src/Riscv.cpp ****         }
 659              		.loc 1 75 13
 660              	.L13:
 661              	.LBE60:
 662              	.LBE79:
 180:src/Riscv.cpp **** 
 663              		.loc 1 180 1 is_stmt 0
 664 0298 83308106 		ld	ra,104(sp)
 665              		.cfi_remember_state
 666              		.cfi_restore 1
 667 029c 03340106 		ld	s0,96(sp)
 668              		.cfi_restore 8
 669              		.cfi_def_cfa 2, 112
 670 02a0 83348105 		ld	s1,88(sp)
 671              		.cfi_restore 9
 672 02a4 13010107 		addi	sp,sp,112
 673              		.cfi_def_cfa_offset 0
 674 02a8 67800000 		jr	ra
 675              	.L41:
 676              		.cfi_restore_state
 677              	.LBB80:
 678              	.LBB73:
  68:src/Riscv.cpp ****                 PCB::dispatch();
 679              		.loc 1 68 17 is_stmt 1
  68:src/Riscv.cpp ****                 PCB::dispatch();
 680              		.loc 1 68 39 is_stmt 0
 681 02ac 23B00400 		sd	zero,0(s1)
  69:src/Riscv.cpp ****             }
 682              		.loc 1 69 17 is_stmt 1
  69:src/Riscv.cpp ****             }
 683              		.loc 1 69 30 is_stmt 0
 684 02b0 97000000 		call	_ZN3PCB8dispatchEv@plt
 684      E7800000 
GAS LISTING /tmp/ccXQ0lmE.s 			page 23


 685              	.LVL36:
 686 02b8 6FF01FFD 		j	.L19
 687              	.LVL37:
 688              	.L40:
 689              	.LBE73:
 690              	.LBB74:
 691              	.LBB59:
 692              	.LBB58:
  94:src/Riscv.cpp ****                     KConsole::putCharacterInput(c);
 693              		.loc 1 94 21 is_stmt 1
  94:src/Riscv.cpp ****                     KConsole::putCharacterInput(c);
 694              		.loc 1 94 42 is_stmt 0
 695 02bc 9387F7FF 		addi	a5,a5,-1
 696 02c0 17070000 		la	a4,_ZN8KConsole11pendingGetcE
 696      03370700 
 697 02c8 2330F700 		sd	a5,0(a4)
  95:src/Riscv.cpp ****                     KConsole::putCharacterOutput(c);
 698              		.loc 1 95 21 is_stmt 1
  95:src/Riscv.cpp ****                     KConsole::putCharacterOutput(c);
 699              		.loc 1 95 48 is_stmt 0
 700 02cc 13850400 		mv	a0,s1
 701              	.LVL38:
 702 02d0 97000000 		call	_ZN8KConsole17putCharacterInputEc@plt
 702      E7800000 
 703              	.LVL39:
  96:src/Riscv.cpp ****                 }
 704              		.loc 1 96 21 is_stmt 1
  96:src/Riscv.cpp ****                 }
 705              		.loc 1 96 49 is_stmt 0
 706 02d8 13850400 		mv	a0,s1
 707 02dc 97000000 		call	_ZN8KConsole18putCharacterOutputEc@plt
 707      E7800000 
 708              	.LVL40:
 709 02e4 6FF01FF2 		j	.L20
 710              	.LVL41:
 711              	.L37:
 712              	.LBE58:
 713              	.LBE59:
 714              	.LBE74:
 715              	.LBB75:
 127:src/Riscv.cpp ****                     MemoryAllocator::memAllocHandler();
 716              		.loc 1 127 17 is_stmt 1
 128:src/Riscv.cpp ****                     break;
 717              		.loc 1 128 21
 128:src/Riscv.cpp ****                     break;
 718              		.loc 1 128 53 is_stmt 0
 719 02e8 97000000 		call	_ZN15MemoryAllocator15memAllocHandlerEv@plt
 719      E7800000 
 720              	.LVL42:
 129:src/Riscv.cpp ****                 case MemoryAllocator::MEM_FREE:
 721              		.loc 1 129 21 is_stmt 1
 722              	.L21:
 174:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 723              		.loc 1 174 13
 174:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 724              		.loc 1 174 29 is_stmt 0
 725 02f0 833704FB 		ld	a5,-80(s0)
GAS LISTING /tmp/ccXQ0lmE.s 			page 24


 726              	.LVL43:
 727              	.LBB51:
 728              	.LBB52:
 201:src/../h/Riscv.hpp **** }
 729              		.loc 2 201 5 is_stmt 1
 201:src/../h/Riscv.hpp **** }
 730              		.loc 2 201 57 is_stmt 0
 731              	#APP
 732              	# 201 "src/../h/Riscv.hpp" 1
 733              		csrw sstatus, a5
 734              	# 0 "" 2
 735              	.LVL44:
 736              	#NO_APP
 737              	.LBE52:
 738              	.LBE51:
 175:src/Riscv.cpp ****             changePrivMode();
 739              		.loc 1 175 13 is_stmt 1
 175:src/Riscv.cpp ****             changePrivMode();
 740              		.loc 1 175 26 is_stmt 0
 741 02f8 833784FA 		ld	a5,-88(s0)
 742              	.LVL45:
 743              	.LBB53:
 744              	.LBB54:
 128:src/../h/Riscv.hpp **** }
 745              		.loc 2 128 5 is_stmt 1
 128:src/../h/Riscv.hpp **** }
 746              		.loc 2 128 51 is_stmt 0
 747              	#APP
 748              	# 128 "src/../h/Riscv.hpp" 1
 749              		csrw sepc, a5
 750              	# 0 "" 2
 751              	.LVL46:
 752              	#NO_APP
 753              	.LBE54:
 754              	.LBE53:
 176:src/Riscv.cpp ****             break;
 755              		.loc 1 176 13 is_stmt 1
 177:src/Riscv.cpp ****         }
 756              		.loc 1 177 13
 757              	.LBE75:
 758              	.LBE80:
 180:src/Riscv.cpp **** 
 759              		.loc 1 180 1 is_stmt 0
 760 0300 6FF09FF9 		j	.L13
 761              	.L36:
 762              	.LBB81:
 763              	.LBB76:
 130:src/Riscv.cpp ****                     MemoryAllocator::memFreeHandler();
 764              		.loc 1 130 17 is_stmt 1
 131:src/Riscv.cpp ****                     break;
 765              		.loc 1 131 21
 131:src/Riscv.cpp ****                     break;
 766              		.loc 1 131 52 is_stmt 0
 767 0304 97000000 		call	_ZN15MemoryAllocator14memFreeHandlerEv@plt
 767      E7800000 
 768              	.LVL47:
 132:src/Riscv.cpp ****                 case PCB::THREAD_MAKE_PCB:
GAS LISTING /tmp/ccXQ0lmE.s 			page 25


 769              		.loc 1 132 21 is_stmt 1
 770 030c 6FF05FFE 		j	.L21
 771              	.L32:
 133:src/Riscv.cpp ****                     PCB::threadMakePCBHandler();
 772              		.loc 1 133 17
 134:src/Riscv.cpp ****                     break;
 773              		.loc 1 134 21
 134:src/Riscv.cpp ****                     break;
 774              		.loc 1 134 46 is_stmt 0
 775 0310 97000000 		call	_ZN3PCB20threadMakePCBHandlerEv@plt
 775      E7800000 
 776              	.LVL48:
 135:src/Riscv.cpp ****                 case PCB::THREAD_CREATE:
 777              		.loc 1 135 21 is_stmt 1
 778 0318 6FF09FFD 		j	.L21
 779              	.L35:
 136:src/Riscv.cpp ****                     PCB::threadCreateHandler();
 780              		.loc 1 136 17
 137:src/Riscv.cpp ****                     break;
 781              		.loc 1 137 21
 137:src/Riscv.cpp ****                     break;
 782              		.loc 1 137 45 is_stmt 0
 783 031c 97000000 		call	_ZN3PCB19threadCreateHandlerEv@plt
 783      E7800000 
 784              	.LVL49:
 138:src/Riscv.cpp ****                 case PCB::THREAD_START:
 785              		.loc 1 138 21 is_stmt 1
 786 0324 6FF0DFFC 		j	.L21
 787              	.L31:
 139:src/Riscv.cpp ****                     PCB::threadStartHandler();
 788              		.loc 1 139 17
 140:src/Riscv.cpp ****                     break;
 789              		.loc 1 140 21
 140:src/Riscv.cpp ****                     break;
 790              		.loc 1 140 44 is_stmt 0
 791 0328 97000000 		call	_ZN3PCB18threadStartHandlerEv@plt
 791      E7800000 
 792              	.LVL50:
 141:src/Riscv.cpp ****                 case PCB::THREAD_DISPATCH:
 793              		.loc 1 141 21 is_stmt 1
 794 0330 6FF01FFC 		j	.L21
 795              	.L33:
 142:src/Riscv.cpp ****                     PCB::threadDispatchHandler();
 796              		.loc 1 142 17
 143:src/Riscv.cpp ****                     break;
 797              		.loc 1 143 21
 143:src/Riscv.cpp ****                     break;
 798              		.loc 1 143 47 is_stmt 0
 799 0334 97000000 		call	_ZN3PCB21threadDispatchHandlerEv@plt
 799      E7800000 
 800              	.LVL51:
 144:src/Riscv.cpp ****                 case PCB::THREAD_EXIT:
 801              		.loc 1 144 21 is_stmt 1
 802 033c 6FF05FFB 		j	.L21
 803              	.L34:
 145:src/Riscv.cpp ****                     PCB::threadExitHandler();
 804              		.loc 1 145 17
GAS LISTING /tmp/ccXQ0lmE.s 			page 26


 146:src/Riscv.cpp ****                     break;
 805              		.loc 1 146 21
 146:src/Riscv.cpp ****                     break;
 806              		.loc 1 146 43 is_stmt 0
 807 0340 97000000 		call	_ZN3PCB17threadExitHandlerEv@plt
 807      E7800000 
 808              	.LVL52:
 147:src/Riscv.cpp ****                 case PCB::TIME_SLEEP:
 809              		.loc 1 147 21 is_stmt 1
 810 0348 6FF09FFA 		j	.L21
 811              	.L26:
 148:src/Riscv.cpp ****                     PCB::threadSleepHandler();
 812              		.loc 1 148 17
 149:src/Riscv.cpp ****                     break;
 813              		.loc 1 149 21
 149:src/Riscv.cpp ****                     break;
 814              		.loc 1 149 44 is_stmt 0
 815 034c 97000000 		call	_ZN3PCB18threadSleepHandlerEv@plt
 815      E7800000 
 816              	.LVL53:
 150:src/Riscv.cpp ****                 case KSemaphore::SEM_OPEN:
 817              		.loc 1 150 21 is_stmt 1
 818 0354 6FF0DFF9 		j	.L21
 819              	.L30:
 151:src/Riscv.cpp ****                     KSemaphore::semOpenHandler();
 820              		.loc 1 151 17
 152:src/Riscv.cpp ****                     break;
 821              		.loc 1 152 21
 152:src/Riscv.cpp ****                     break;
 822              		.loc 1 152 47 is_stmt 0
 823 0358 97000000 		call	_ZN10KSemaphore14semOpenHandlerEv@plt
 823      E7800000 
 824              	.LVL54:
 153:src/Riscv.cpp ****                 case KSemaphore::SEM_WAIT:
 825              		.loc 1 153 21 is_stmt 1
 826 0360 6FF01FF9 		j	.L21
 827              	.L28:
 154:src/Riscv.cpp ****                     KSemaphore::semWaitHandler();
 828              		.loc 1 154 17
 155:src/Riscv.cpp ****                     break;
 829              		.loc 1 155 21
 155:src/Riscv.cpp ****                     break;
 830              		.loc 1 155 47 is_stmt 0
 831 0364 97000000 		call	_ZN10KSemaphore14semWaitHandlerEv@plt
 831      E7800000 
 832              	.LVL55:
 156:src/Riscv.cpp ****                 case KSemaphore::SEM_SIGNAL:
 833              		.loc 1 156 21 is_stmt 1
 834 036c 6FF05FF8 		j	.L21
 835              	.L27:
 157:src/Riscv.cpp ****                     KSemaphore::semSignalHandler();
 836              		.loc 1 157 17
 158:src/Riscv.cpp ****                     break;
 837              		.loc 1 158 21
 158:src/Riscv.cpp ****                     break;
 838              		.loc 1 158 49 is_stmt 0
 839 0370 97000000 		call	_ZN10KSemaphore16semSignalHandlerEv@plt
GAS LISTING /tmp/ccXQ0lmE.s 			page 27


 839      E7800000 
 840              	.LVL56:
 159:src/Riscv.cpp ****                 case KSemaphore::SEM_CLOSE:
 841              		.loc 1 159 21 is_stmt 1
 842 0378 6FF09FF7 		j	.L21
 843              	.L29:
 160:src/Riscv.cpp ****                     KSemaphore::semCloseHandler();
 844              		.loc 1 160 17
 161:src/Riscv.cpp ****                     break;
 845              		.loc 1 161 21
 161:src/Riscv.cpp ****                     break;
 846              		.loc 1 161 48 is_stmt 0
 847 037c 97000000 		call	_ZN10KSemaphore15semCloseHandlerEv@plt
 847      E7800000 
 848              	.LVL57:
 162:src/Riscv.cpp ****                 case KConsole::CONSOLE_GETC:
 849              		.loc 1 162 21 is_stmt 1
 850 0384 6FF0DFF6 		j	.L21
 851              	.L25:
 163:src/Riscv.cpp ****                     KConsole::getcHandler();
 852              		.loc 1 163 17
 164:src/Riscv.cpp ****                     break;
 853              		.loc 1 164 21
 164:src/Riscv.cpp ****                     break;
 854              		.loc 1 164 42 is_stmt 0
 855 0388 97000000 		call	_ZN8KConsole11getcHandlerEv@plt
 855      E7800000 
 856              	.LVL58:
 165:src/Riscv.cpp ****                 case KConsole::CONSOLE_PUTC:
 857              		.loc 1 165 21 is_stmt 1
 858 0390 6FF01FF6 		j	.L21
 859              	.L24:
 166:src/Riscv.cpp ****                     KConsole::putcHandler();
 860              		.loc 1 166 17
 167:src/Riscv.cpp ****                     break;
 861              		.loc 1 167 21
 167:src/Riscv.cpp ****                     break;
 862              		.loc 1 167 42 is_stmt 0
 863 0394 97000000 		call	_ZN8KConsole11putcHandlerEv@plt
 863      E7800000 
 864              	.LVL59:
 168:src/Riscv.cpp ****                 case KConsole::CONSOLE_GET_CHAR:
 865              		.loc 1 168 21 is_stmt 1
 866 039c 6FF05FF5 		j	.L21
 867              	.L22:
 169:src/Riscv.cpp ****                     KConsole::getCharHandler();
 868              		.loc 1 169 17
 170:src/Riscv.cpp ****                     break;
 869              		.loc 1 170 21
 170:src/Riscv.cpp ****                     break;
 870              		.loc 1 170 45 is_stmt 0
 871 03a0 97000000 		call	_ZN8KConsole14getCharHandlerEv@plt
 871      E7800000 
 872              	.LVL60:
 171:src/Riscv.cpp ****             }
 873              		.loc 1 171 21 is_stmt 1
 874 03a8 6FF09FF4 		j	.L21
GAS LISTING /tmp/ccXQ0lmE.s 			page 28


 875              	.LBE76:
 876              	.LBE81:
 877              		.cfi_endproc
 878              	.LFE32:
 880              		.section	.rodata.str1.8,"aMS",@progbits,1
 881              		.align	3
 882              	.LC0:
 883 0000 456E642E 		.string	"End...\n"
 883      2E2E0A00 
 884              		.text
 885              		.align	2
 886              		.globl	_ZN5Riscv10kernelMainEv
 888              	_ZN5Riscv10kernelMainEv:
 889              	.LFB33:
 183:src/Riscv.cpp ****     initSystem();
 890              		.loc 1 183 1
 891              		.cfi_startproc
 892              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 893              		.cfi_lsda 0x1b,.LLSDA33
 894 03ac 130101FE 		addi	sp,sp,-32
 895              		.cfi_def_cfa_offset 32
 896 03b0 233C1100 		sd	ra,24(sp)
 897 03b4 23388100 		sd	s0,16(sp)
 898 03b8 23349100 		sd	s1,8(sp)
 899 03bc 23302101 		sd	s2,0(sp)
 900              		.cfi_offset 1, -8
 901              		.cfi_offset 8, -16
 902              		.cfi_offset 9, -24
 903              		.cfi_offset 18, -32
 904 03c0 13040102 		addi	s0,sp,32
 905              		.cfi_def_cfa 8, 0
 184:src/Riscv.cpp **** 
 906              		.loc 1 184 5
 907              	.LEHB0:
 184:src/Riscv.cpp **** 
 908              		.loc 1 184 15 is_stmt 0
 909 03c4 97000000 		call	_ZN5Riscv10initSystemEv
 909      E7800000 
 910              	.LVL61:
 189:src/Riscv.cpp ****     //PCB* userPCB = new PCB(&Riscv::myTestsWrapper, 0, kmalloc(DEFAULT_STACK_SIZE), DEFAULT_TIME_S
 911              		.loc 1 189 5 is_stmt 1
 189:src/Riscv.cpp ****     //PCB* userPCB = new PCB(&Riscv::myTestsWrapper, 0, kmalloc(DEFAULT_STACK_SIZE), DEFAULT_TIME_S
 912              		.loc 1 189 63 is_stmt 0
 913 03cc 37150000 		li	a0,4096
 914 03d0 97000000 		call	_Z7kmallocm@plt
 914      E7800000 
 915              	.LVL62:
 916 03d8 13090500 		mv	s2,a0
 189:src/Riscv.cpp ****     //PCB* userPCB = new PCB(&Riscv::myTestsWrapper, 0, kmalloc(DEFAULT_STACK_SIZE), DEFAULT_TIME_S
 917              		.loc 1 189 103
 918 03dc 13058005 		li	a0,88
 919 03e0 97000000 		call	_ZN3PCBnwEm@plt
 919      E7800000 
 920              	.LVL63:
 921              	.LEHE0:
 922 03e8 93040500 		mv	s1,a0
 923 03ec 13072000 		li	a4,2
GAS LISTING /tmp/ccXQ0lmE.s 			page 29


 924 03f0 93060900 		mv	a3,s2
 925 03f4 13060000 		li	a2,0
 926 03f8 97050000 		lla	a1,_ZN5Riscv15userMainWrapperEPv
 926      93850500 
 927              	.LEHB1:
 928 0400 97000000 		call	_ZN3PCBC1EPFvPvES0_S0_m@plt
 928      E7800000 
 929              	.LVL64:
 930              	.LEHE1:
 191:src/Riscv.cpp ****     while(!userPCB->isFinished())
 931              		.loc 1 191 5 is_stmt 1 discriminator 2
 191:src/Riscv.cpp ****     while(!userPCB->isFinished())
 932              		.loc 1 191 19 is_stmt 0 discriminator 2
 933 0408 13850400 		mv	a0,s1
 934              	.LEHB2:
 935 040c 97000000 		call	_ZN3PCB5startEv@plt
 935      E7800000 
 936              	.LVL65:
 937              	.L44:
 192:src/Riscv.cpp ****     {
 938              		.loc 1 192 5 is_stmt 1
 192:src/Riscv.cpp ****     {
 939              		.loc 1 192 11
 192:src/Riscv.cpp ****     {
 940              		.loc 1 192 31 is_stmt 0
 941 0414 13850400 		mv	a0,s1
 942 0418 97000000 		call	_ZN3PCB10isFinishedEv@plt
 942      E7800000 
 943              	.LVL66:
 192:src/Riscv.cpp ****     {
 944              		.loc 1 192 11
 945 0420 63180500 		bnez	a0,.L43
 194:src/Riscv.cpp ****     }
 946              		.loc 1 194 9 is_stmt 1
 194:src/Riscv.cpp ****     }
 947              		.loc 1 194 24 is_stmt 0
 948 0424 97000000 		call	thread_dispatch@plt
 948      E7800000 
 949              	.LVL67:
 192:src/Riscv.cpp ****     {
 950              		.loc 1 192 5
 951 042c 6FF09FFE 		j	.L44
 952              	.L43:
 197:src/Riscv.cpp ****     ::printString("End...\n");
 953              		.loc 1 197 5 is_stmt 1
 197:src/Riscv.cpp ****     ::printString("End...\n");
 954              		.loc 1 197 18 is_stmt 0
 955 0430 93071000 		li	a5,1
 956 0434 17070000 		sb	a5,.LANCHOR0+8,a4
 956      2300F700 
 198:src/Riscv.cpp ****     while(!PCB::consolePCB->isFinished())
 957              		.loc 1 198 5 is_stmt 1
 198:src/Riscv.cpp ****     while(!PCB::consolePCB->isFinished())
 958              		.loc 1 198 18 is_stmt 0
 959 043c 17050000 		lla	a0,.LC0
 959      13050500 
 960 0444 97000000 		call	_Z11printStringPKc@plt
GAS LISTING /tmp/ccXQ0lmE.s 			page 30


 960      E7800000 
 961              	.LVL68:
 962              	.L46:
 199:src/Riscv.cpp ****     {
 963              		.loc 1 199 5 is_stmt 1
 199:src/Riscv.cpp ****     {
 964              		.loc 1 199 11
 199:src/Riscv.cpp ****     {
 965              		.loc 1 199 39 is_stmt 0
 966 044c 97070000 		la	a5,_ZN3PCB10consolePCBE
 966      83B70700 
 967 0454 03B50700 		ld	a0,0(a5)
 968 0458 97000000 		call	_ZN3PCB10isFinishedEv@plt
 968      E7800000 
 969              	.LVL69:
 199:src/Riscv.cpp ****     {
 970              		.loc 1 199 11
 971 0460 63180500 		bnez	a0,.L45
 201:src/Riscv.cpp ****     }
 972              		.loc 1 201 9 is_stmt 1
 201:src/Riscv.cpp ****     }
 973              		.loc 1 201 24 is_stmt 0
 974 0464 97000000 		call	thread_dispatch@plt
 974      E7800000 
 975              	.LVL70:
 976              	.LEHE2:
 199:src/Riscv.cpp ****     {
 977              		.loc 1 199 5
 978 046c 6FF01FFE 		j	.L46
 979              	.L45:
 203:src/Riscv.cpp ****     endSystem();
 980              		.loc 1 203 5 is_stmt 1
 203:src/Riscv.cpp ****     endSystem();
 981              		.loc 1 203 22 is_stmt 0
 982 0470 97000000 		call	_ZN5Riscv17disableInterruptsEv
 982      E7800000 
 983              	.LVL71:
 204:src/Riscv.cpp **** }
 984              		.loc 1 204 5 is_stmt 1
 204:src/Riscv.cpp **** }
 985              		.loc 1 204 14 is_stmt 0
 986 0478 97000000 		call	_ZN5Riscv9endSystemEv
 986      E7800000 
 987              	.LVL72:
 205:src/Riscv.cpp **** 
 988              		.loc 1 205 1
 989 0480 83308101 		ld	ra,24(sp)
 990              		.cfi_remember_state
 991              		.cfi_restore 1
 992 0484 03340101 		ld	s0,16(sp)
 993              		.cfi_restore 8
 994              		.cfi_def_cfa 2, 32
 995 0488 83348100 		ld	s1,8(sp)
 996              		.cfi_restore 9
 997              	.LVL73:
 998 048c 03390100 		ld	s2,0(sp)
 999              		.cfi_restore 18
GAS LISTING /tmp/ccXQ0lmE.s 			page 31


 1000 0490 13010102 		addi	sp,sp,32
 1001              		.cfi_def_cfa_offset 0
 1002 0494 67800000 		jr	ra
 1003              	.L48:
 1004              		.cfi_restore_state
 1005 0498 13090500 		mv	s2,a0
 189:src/Riscv.cpp ****     //PCB* userPCB = new PCB(&Riscv::myTestsWrapper, 0, kmalloc(DEFAULT_STACK_SIZE), DEFAULT_TIME_S
 1006              		.loc 1 189 103
 1007 049c 13850400 		mv	a0,s1
 1008 04a0 97000000 		call	_ZN3PCBdlEPv@plt
 1008      E7800000 
 1009              	.LVL74:
 1010 04a8 13050900 		mv	a0,s2
 1011              	.LEHB3:
 1012 04ac 97000000 		call	_Unwind_Resume@plt
 1012      E7800000 
 1013              	.LVL75:
 1014              	.LEHE3:
 1015              		.cfi_endproc
 1016              	.LFE33:
 1017              		.globl	__gxx_personality_v0
 1018              		.section	.gcc_except_table,"a",@progbits
 1019              	.LLSDA33:
 1020 0000 FF       		.byte	0xff
 1021 0001 FF       		.byte	0xff
 1022 0002 03       		.byte	0x3
 1023 0003 34       		.byte	0x34
 1024 0004 00000000 		.4byte	.LEHB0-.LFB33
 1025 0008 00000000 		.4byte	.LEHE0-.LEHB0
 1026 000c 00000000 		.4byte	0
 1027 0010 00       		.byte	0
 1028 0011 00000000 		.4byte	.LEHB1-.LFB33
 1029 0015 00000000 		.4byte	.LEHE1-.LEHB1
 1030 0019 00000000 		.4byte	.L48-.LFB33
 1031 001d 00       		.byte	0
 1032 001e 00000000 		.4byte	.LEHB2-.LFB33
 1033 0022 00000000 		.4byte	.LEHE2-.LEHB2
 1034 0026 00000000 		.4byte	0
 1035 002a 00       		.byte	0
 1036 002b 00000000 		.4byte	.LEHB3-.LFB33
 1037 002f 00000000 		.4byte	.LEHE3-.LEHB3
 1038 0033 00000000 		.4byte	0
 1039 0037 00       		.byte	0
 1040              		.text
 1042              		.align	2
 1043              		.globl	_ZN5Riscv14myTestsWrapperEPv
 1045              	_ZN5Riscv14myTestsWrapperEPv:
 1046              	.LFB35:
 211:src/Riscv.cpp **** 
 212:src/Riscv.cpp **** void Riscv::myTestsWrapper(void* p)
 213:src/Riscv.cpp **** {
 1047              		.loc 1 213 1 is_stmt 1
 1048              		.cfi_startproc
 1049              	.LVL76:
 1050 04b4 130101FF 		addi	sp,sp,-16
 1051              		.cfi_def_cfa_offset 16
 1052 04b8 23341100 		sd	ra,8(sp)
GAS LISTING /tmp/ccXQ0lmE.s 			page 32


 1053 04bc 23308100 		sd	s0,0(sp)
 1054              		.cfi_offset 1, -8
 1055              		.cfi_offset 8, -16
 1056 04c0 13040101 		addi	s0,sp,16
 1057              		.cfi_def_cfa 8, 0
 214:src/Riscv.cpp ****     myTests();
 1058              		.loc 1 214 5
 1059              		.loc 1 214 12 is_stmt 0
 1060 04c4 97000000 		call	_Z7myTestsv@plt
 1060      E7800000 
 1061              	.LVL77:
 215:src/Riscv.cpp **** }
 1062              		.loc 1 215 1
 1063 04cc 83308100 		ld	ra,8(sp)
 1064              		.cfi_restore 1
 1065 04d0 03340100 		ld	s0,0(sp)
 1066              		.cfi_restore 8
 1067              		.cfi_def_cfa 2, 16
 1068 04d4 13010101 		addi	sp,sp,16
 1069              		.cfi_def_cfa_offset 0
 1070 04d8 67800000 		jr	ra
 1071              		.cfi_endproc
 1072              	.LFE35:
 1074              		.align	2
 1075              		.globl	_ZN5Riscv22disableTimerInterruptsEv
 1077              	_ZN5Riscv22disableTimerInterruptsEv:
 1078              	.LFB36:
 216:src/Riscv.cpp **** 
 217:src/Riscv.cpp **** void Riscv::disableTimerInterrupts()
 218:src/Riscv.cpp **** {
 1079              		.loc 1 218 1 is_stmt 1
 1080              		.cfi_startproc
 1081 04dc 130101FF 		addi	sp,sp,-16
 1082              		.cfi_def_cfa_offset 16
 1083 04e0 23348100 		sd	s0,8(sp)
 1084              		.cfi_offset 8, -8
 1085 04e4 13040101 		addi	s0,sp,16
 1086              		.cfi_def_cfa 8, 0
 219:src/Riscv.cpp ****     //uint64 x = 0x200;
 220:src/Riscv.cpp ****     //__asm__ volatile("csrs sie, %0"::"r"(x));
 221:src/Riscv.cpp ****     uint64 x = 0x2;
 1087              		.loc 1 221 5
 1088              	.LVL78:
 222:src/Riscv.cpp ****     __asm__ volatile("csrc sie, %0"::"r"(x));
 1089              		.loc 1 222 5
 1090              		.loc 1 222 45 is_stmt 0
 1091 04e8 93072000 		li	a5,2
 1092              	#APP
 1093              	# 222 "src/Riscv.cpp" 1
 223              	}
 1094              		csrc sie, a5
 1095              	# 0 "" 2
 1096              		.loc 1 223 1
 1097              	#NO_APP
 1098 04f0 03348100 		ld	s0,8(sp)
 1099              		.cfi_restore 8
 1100              		.cfi_def_cfa 2, 16
GAS LISTING /tmp/ccXQ0lmE.s 			page 33


 1101 04f4 13010101 		addi	sp,sp,16
 1102              		.cfi_def_cfa_offset 0
 1103 04f8 67800000 		jr	ra
 1104              		.cfi_endproc
 1105              	.LFE36:
 1107              		.align	2
 1108              		.globl	_ZN5Riscv9idleRiscvEPv
 1110              	_ZN5Riscv9idleRiscvEPv:
 1111              	.LFB37:
 224:src/Riscv.cpp **** 
 225:src/Riscv.cpp **** void Riscv::idleRiscv(void* p)
 226:src/Riscv.cpp **** {
 1112              		.loc 1 226 1 is_stmt 1
 1113              		.cfi_startproc
 1114              	.LVL79:
 1115 04fc 130101FF 		addi	sp,sp,-16
 1116              		.cfi_def_cfa_offset 16
 1117 0500 23348100 		sd	s0,8(sp)
 1118              		.cfi_offset 8, -8
 1119 0504 13040101 		addi	s0,sp,16
 1120              		.cfi_def_cfa 8, 0
 1121              	.L56:
 227:src/Riscv.cpp ****     while(true)
 1122              		.loc 1 227 5 discriminator 1
 1123              		.loc 1 227 5 discriminator 1
 1124 0508 6F000000 		j	.L56
 1125              		.cfi_endproc
 1126              	.LFE37:
 1128              		.align	2
 1129              		.globl	_ZN5Riscv13w_a0_sscratchEv
 1131              	_ZN5Riscv13w_a0_sscratchEv:
 1132              	.LFB38:
 228:src/Riscv.cpp ****     {
 229:src/Riscv.cpp **** 
 230:src/Riscv.cpp ****     }
 231:src/Riscv.cpp **** }
 232:src/Riscv.cpp **** 
 233:src/Riscv.cpp **** void Riscv::w_a0_sscratch()
 234:src/Riscv.cpp **** {
 1133              		.loc 1 234 1
 1134              		.cfi_startproc
 1135 050c 130101FF 		addi	sp,sp,-16
 1136              		.cfi_def_cfa_offset 16
 1137 0510 23348100 		sd	s0,8(sp)
 1138              		.cfi_offset 8, -8
 1139 0514 13040101 		addi	s0,sp,16
 1140              		.cfi_def_cfa 8, 0
 235:src/Riscv.cpp ****     uint64 a1Temp;
 1141              		.loc 1 235 5
 236:src/Riscv.cpp ****     __asm__ volatile("mv %0, a1":"=r"(a1Temp));
 1142              		.loc 1 236 5
 1143              		.loc 1 236 47 is_stmt 0
 1144              	#APP
 1145              	# 236 "src/Riscv.cpp" 1
 237              	    __asm__ volatile("mv a1, %0"::"r"(PCB::running->sscratch));
 1146              		mv a5, a1
 1147              	# 0 "" 2
GAS LISTING /tmp/ccXQ0lmE.s 			page 34


 1148              	.LVL80:
 1149              		.loc 1 237 5 is_stmt 1
 1150              		.loc 1 237 53 is_stmt 0
 1151              	#NO_APP
 1152 051c 17070000 		la	a4,_ZN3PCB7runningE
 1152      03370700 
 1153 0524 03370700 		ld	a4,0(a4)
 1154 0528 03370701 		ld	a4,16(a4)
 1155              		.loc 1 237 63
 1156              	#APP
 1157              	# 237 "src/Riscv.cpp" 1
 238              	    //__asm__ volatile("csrr a1, sscratch");
 239:src/Riscv.cpp ****     __asm__ volatile("sd a0, 80(a1)");
 1158              		mv a1, a4
 1159              	# 0 "" 2
 1160              		.loc 1 239 5 is_stmt 1
 1161              		.loc 1 239 38 is_stmt 0
 1162              	# 239 "src/Riscv.cpp" 1
 240              	    __asm__ volatile("mv a1,%0"::"r"(a1Temp));
 1163              		sd a0, 80(a1)
 1164              	# 0 "" 2
 1165              		.loc 1 240 5 is_stmt 1
 1166              		.loc 1 240 46 is_stmt 0
 1167              	# 240 "src/Riscv.cpp" 1
 241              	}
 1168              		mv a1,a5
 1169              	# 0 "" 2
 1170              		.loc 1 241 1
 1171              	#NO_APP
 1172 0538 03348100 		ld	s0,8(sp)
 1173              		.cfi_restore 8
 1174              		.cfi_def_cfa 2, 16
 1175 053c 13010101 		addi	sp,sp,16
 1176              		.cfi_def_cfa_offset 0
 1177 0540 67800000 		jr	ra
 1178              		.cfi_endproc
 1179              	.LFE38:
 1181              		.align	2
 1182              		.globl	_ZN5Riscv14changePrivModeEv
 1184              	_ZN5Riscv14changePrivModeEv:
 1185              	.LFB39:
 242:src/Riscv.cpp **** 
 243:src/Riscv.cpp **** void Riscv::changePrivMode()
 244:src/Riscv.cpp **** {
 1186              		.loc 1 244 1 is_stmt 1
 1187              		.cfi_startproc
 1188 0544 130101FF 		addi	sp,sp,-16
 1189              		.cfi_def_cfa_offset 16
 1190 0548 23348100 		sd	s0,8(sp)
 1191              		.cfi_offset 8, -8
 1192 054c 13040101 		addi	s0,sp,16
 1193              		.cfi_def_cfa 8, 0
 245:src/Riscv.cpp ****     //if(PCB::running->systemThread)
 246:src/Riscv.cpp ****     //    Riscv::ms_sstatus(Riscv::SSTATUS_SPP);
 247:src/Riscv.cpp ****     //else
 248:src/Riscv.cpp ****     //    Riscv::mc_sstatus(Riscv::SSTATUS_SPP);
 249:src/Riscv.cpp **** }
GAS LISTING /tmp/ccXQ0lmE.s 			page 35


 1194              		.loc 1 249 1 is_stmt 0
 1195 0550 03348100 		ld	s0,8(sp)
 1196              		.cfi_restore 8
 1197              		.cfi_def_cfa 2, 16
 1198 0554 13010101 		addi	sp,sp,16
 1199              		.cfi_def_cfa_offset 0
 1200 0558 67800000 		jr	ra
 1201              		.cfi_endproc
 1202              	.LFE39:
 1204              		.globl	_ZN5Riscv12finishSystemE
 1205              		.globl	_ZN5Riscv9totalTimeE
 1206              		.bss
 1207              		.align	3
 1208              		.set	.LANCHOR0,. + 0
 1211              	_ZN5Riscv9totalTimeE:
 1212 0000 00000000 		.zero	8
 1212      00000000 
 1215              	_ZN5Riscv12finishSystemE:
 1216 0008 00       		.zero	1
 1217              		.text
 1218              	.Letext0:
 1219              		.file 4 "src/../h/../lib/hw.h"
 1220              		.file 5 "src/../h/MemoryAllocator.hpp"
 1221              		.file 6 "src/../h/KSemaphore.hpp"
 1222              		.file 7 "src/../h/SleepPCBList.hpp"
 1223              		.file 8 "src/../h/KConsole.hpp"
 1224              		.file 9 "src/../h/Tests.hpp"
 1225              		.file 10 "src/../test/userMain.hpp"
 1226              		.file 11 "src/../h/../test/../h/syscall_c.h"
 1227              		.file 12 "src/../h/../test/printing.hpp"
 5791              		.align	3
 5794              	DW.ref.__gxx_personality_v0:
 5795 0000 00000000 		.dword	__gxx_personality_v0
 5795      00000000 
 5796              		.ident	"GCC: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0"
 5797              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/ccXQ0lmE.s 			page 36


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Riscv.cpp
     /tmp/ccXQ0lmE.s:9      .text:0000000000000000 _ZN5Riscv15userMainWrapperEPv
     /tmp/ccXQ0lmE.s:13     .text:0000000000000000 .L0 
     /tmp/ccXQ0lmE.s:14     .text:0000000000000000 .L0 
     /tmp/ccXQ0lmE.s:15     .text:0000000000000004 .L0 
     /tmp/ccXQ0lmE.s:18     .text:000000000000000c .L0 
     /tmp/ccXQ0lmE.s:19     .text:000000000000000c .L0 
     /tmp/ccXQ0lmE.s:21     .text:0000000000000010 .L0 
     /tmp/ccXQ0lmE.s:23     .text:0000000000000010 .L0 
     /tmp/ccXQ0lmE.s:24     .text:0000000000000010 .L0 
     /tmp/ccXQ0lmE.s:27     .text:0000000000000018 .L0 
     /tmp/ccXQ0lmE.s:28     .text:000000000000001c .L0 
     /tmp/ccXQ0lmE.s:30     .text:0000000000000020 .L0 
     /tmp/ccXQ0lmE.s:31     .text:0000000000000020 .L0 
     /tmp/ccXQ0lmE.s:33     .text:0000000000000024 .L0 
     /tmp/ccXQ0lmE.s:35     .text:0000000000000028 .L0 
     /tmp/ccXQ0lmE.s:41     .text:0000000000000028 _ZN5Riscv10initSystemEv
     /tmp/ccXQ0lmE.s:44     .text:0000000000000028 .L0 
     /tmp/ccXQ0lmE.s:45     .text:0000000000000028 .L0 
     /tmp/ccXQ0lmE.s:46     .text:000000000000002c .L0 
     /tmp/ccXQ0lmE.s:49     .text:0000000000000034 .L0 
     /tmp/ccXQ0lmE.s:50     .text:0000000000000034 .L0 
     /tmp/ccXQ0lmE.s:52     .text:0000000000000038 .L0 
     /tmp/ccXQ0lmE.s:54     .text:0000000000000038 .L0 
     /tmp/ccXQ0lmE.s:55     .text:0000000000000038 .L0 
     /tmp/ccXQ0lmE.s:61     .text:0000000000000040 .L0 
  src/../h/Riscv.hpp:138    .text:0000000000000040 .L0 
     /tmp/ccXQ0lmE.s:71     .text:0000000000000044 .L0 
     /tmp/ccXQ0lmE.s:72     .text:0000000000000044 .L0 
     /tmp/ccXQ0lmE.s:75     .text:000000000000004c .L0 
     /tmp/ccXQ0lmE.s:76     .text:000000000000004c .L0 
     /tmp/ccXQ0lmE.s:79     .text:0000000000000054 .L0 
     /tmp/ccXQ0lmE.s:80     .text:0000000000000058 .L0 
     /tmp/ccXQ0lmE.s:82     .text:000000000000005c .L0 
     /tmp/ccXQ0lmE.s:83     .text:000000000000005c .L0 
     /tmp/ccXQ0lmE.s:85     .text:0000000000000060 .L0 
     /tmp/ccXQ0lmE.s:87     .text:0000000000000064 .L0 
     /tmp/ccXQ0lmE.s:93     .text:0000000000000064 _ZN5Riscv16enableInterruptsEv
     /tmp/ccXQ0lmE.s:96     .text:0000000000000064 .L0 
     /tmp/ccXQ0lmE.s:97     .text:0000000000000064 .L0 
     /tmp/ccXQ0lmE.s:98     .text:0000000000000068 .L0 
     /tmp/ccXQ0lmE.s:100    .text:000000000000006c .L0 
     /tmp/ccXQ0lmE.s:102    .text:0000000000000070 .L0 
     /tmp/ccXQ0lmE.s:107    .text:0000000000000070 .L0 
     /tmp/ccXQ0lmE.s:108    .text:0000000000000070 .L0 
     /tmp/ccXQ0lmE.s:109    .text:0000000000000070 .L0 
     /tmp/ccXQ0lmE.s:119    .text:0000000000000078 .L0 
     /tmp/ccXQ0lmE.s:120    .text:000000000000007c .L0 
     /tmp/ccXQ0lmE.s:121    .text:000000000000007c .L0 
     /tmp/ccXQ0lmE.s:123    .text:0000000000000080 .L0 
     /tmp/ccXQ0lmE.s:125    .text:0000000000000084 .L0 
     /tmp/ccXQ0lmE.s:131    .text:0000000000000084 _ZN5Riscv17disableInterruptsEv
     /tmp/ccXQ0lmE.s:134    .text:0000000000000084 .L0 
     /tmp/ccXQ0lmE.s:135    .text:0000000000000084 .L0 
     /tmp/ccXQ0lmE.s:136    .text:0000000000000088 .L0 
     /tmp/ccXQ0lmE.s:138    .text:000000000000008c .L0 
GAS LISTING /tmp/ccXQ0lmE.s 			page 37


     /tmp/ccXQ0lmE.s:140    .text:0000000000000090 .L0 
     /tmp/ccXQ0lmE.s:145    .text:0000000000000090 .L0 
     /tmp/ccXQ0lmE.s:146    .text:0000000000000090 .L0 
     /tmp/ccXQ0lmE.s:147    .text:0000000000000090 .L0 
     /tmp/ccXQ0lmE.s:157    .text:0000000000000098 .L0 
     /tmp/ccXQ0lmE.s:158    .text:000000000000009c .L0 
     /tmp/ccXQ0lmE.s:159    .text:000000000000009c .L0 
     /tmp/ccXQ0lmE.s:161    .text:00000000000000a0 .L0 
     /tmp/ccXQ0lmE.s:163    .text:00000000000000a4 .L0 
     /tmp/ccXQ0lmE.s:169    .text:00000000000000a4 _ZN5Riscv9endSystemEv
     /tmp/ccXQ0lmE.s:172    .text:00000000000000a4 .L0 
     /tmp/ccXQ0lmE.s:173    .text:00000000000000a4 .L0 
     /tmp/ccXQ0lmE.s:174    .text:00000000000000a8 .L0 
     /tmp/ccXQ0lmE.s:177    .text:00000000000000b0 .L0 
     /tmp/ccXQ0lmE.s:178    .text:00000000000000b0 .L0 
     /tmp/ccXQ0lmE.s:180    .text:00000000000000b4 .L0 
     /tmp/ccXQ0lmE.s:182    .text:00000000000000b4 .L0 
     /tmp/ccXQ0lmE.s:183    .text:00000000000000b4 .L0 
     /tmp/ccXQ0lmE.s:186    .text:00000000000000bc .L0 
     /tmp/ccXQ0lmE.s:187    .text:00000000000000c0 .L0 
     /tmp/ccXQ0lmE.s:189    .text:00000000000000c4 .L0 
     /tmp/ccXQ0lmE.s:190    .text:00000000000000c4 .L0 
     /tmp/ccXQ0lmE.s:192    .text:00000000000000c8 .L0 
     /tmp/ccXQ0lmE.s:194    .text:00000000000000cc .L0 
     /tmp/ccXQ0lmE.s:200    .text:00000000000000cc _ZN5Riscv10popSppSpieEv
     /tmp/ccXQ0lmE.s:203    .text:00000000000000cc .L0 
     /tmp/ccXQ0lmE.s:204    .text:00000000000000cc .L0 
     /tmp/ccXQ0lmE.s:205    .text:00000000000000d0 .L0 
     /tmp/ccXQ0lmE.s:207    .text:00000000000000d4 .L0 
     /tmp/ccXQ0lmE.s:209    .text:00000000000000d8 .L0 
     /tmp/ccXQ0lmE.s:211    .text:00000000000000d8 .L0 
       src/Riscv.cpp:41     .text:00000000000000d8 .L0 
     /tmp/ccXQ0lmE.s:217    .text:00000000000000dc .L0 
       src/Riscv.cpp:42     .text:00000000000000dc .L0 
     /tmp/ccXQ0lmE.s:223    .text:00000000000000e0 .L0 
     /tmp/ccXQ0lmE.s:224    .text:00000000000000e4 .L0 
     /tmp/ccXQ0lmE.s:225    .text:00000000000000e4 .L0 
     /tmp/ccXQ0lmE.s:227    .text:00000000000000e8 .L0 
     /tmp/ccXQ0lmE.s:229    .text:00000000000000ec .L0 
     /tmp/ccXQ0lmE.s:235    .text:00000000000000ec _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccXQ0lmE.s:238    .text:00000000000000ec .L0 
     /tmp/ccXQ0lmE.s:239    .text:00000000000000ec .L0 
     /tmp/ccXQ0lmE.s:240    .text:00000000000000f0 .L0 
     /tmp/ccXQ0lmE.s:244    .text:00000000000000fc .L0 
     /tmp/ccXQ0lmE.s:245    .text:00000000000000fc .L0 
     /tmp/ccXQ0lmE.s:246    .text:00000000000000fc .L0 
     /tmp/ccXQ0lmE.s:248    .text:0000000000000100 .L0 
     /tmp/ccXQ0lmE.s:250    .text:0000000000000100 .L0 
       src/Riscv.cpp:47     .text:0000000000000100 .L0 
     /tmp/ccXQ0lmE.s:259    .text:0000000000000110 .L0 
     /tmp/ccXQ0lmE.s:260    .text:0000000000000110 .L0 
       src/Riscv.cpp:48     .text:000000000000011c .L0 
     /tmp/ccXQ0lmE.s:272    .text:0000000000000124 .L0 
     /tmp/ccXQ0lmE.s:273    .text:0000000000000124 .L0 
     /tmp/ccXQ0lmE.s:274    .text:0000000000000124 .L0 
  src/../h/Riscv.hpp:113    .text:0000000000000124 .L0 
     /tmp/ccXQ0lmE.s:282    .text:000000000000012c .L0 
GAS LISTING /tmp/ccXQ0lmE.s 			page 38


     /tmp/ccXQ0lmE.s:283    .text:000000000000012c .L0 
     /tmp/ccXQ0lmE.s:289    .text:0000000000000130 .L0 
     /tmp/ccXQ0lmE.s:303    .text:000000000000015c .L0 
     /tmp/ccXQ0lmE.s:304    .text:000000000000015c .L0 
     /tmp/ccXQ0lmE.s:307    .text:000000000000015c .L0 
     /tmp/ccXQ0lmE.s:308    .text:000000000000015c .L0 
     /tmp/ccXQ0lmE.s:309    .text:000000000000015c .L0 
       src/Riscv.cpp:120    .text:000000000000015c .L0 
     /tmp/ccXQ0lmE.s:319    .text:0000000000000160 .L0 
     /tmp/ccXQ0lmE.s:320    .text:0000000000000160 .L0 
     /tmp/ccXQ0lmE.s:321    .text:0000000000000160 .L0 
  src/../h/Riscv.hpp:123    .text:0000000000000160 .L0 
     /tmp/ccXQ0lmE.s:329    .text:0000000000000168 .L0 
     /tmp/ccXQ0lmE.s:330    .text:0000000000000168 .L0 
     /tmp/ccXQ0lmE.s:334    .text:000000000000016c .L0 
     /tmp/ccXQ0lmE.s:336    .text:0000000000000170 .L0 
     /tmp/ccXQ0lmE.s:340    .text:0000000000000174 .L0 
     /tmp/ccXQ0lmE.s:341    .text:0000000000000174 .L0 
     /tmp/ccXQ0lmE.s:342    .text:0000000000000174 .L0 
  src/../h/Riscv.hpp:196    .text:0000000000000174 .L0 
     /tmp/ccXQ0lmE.s:350    .text:000000000000017c .L0 
     /tmp/ccXQ0lmE.s:351    .text:000000000000017c .L0 
     /tmp/ccXQ0lmE.s:355    .text:0000000000000180 .L0 
     /tmp/ccXQ0lmE.s:357    .text:0000000000000184 .L0 
     /tmp/ccXQ0lmE.s:443    .text:00000000000001a8 .L0 
     /tmp/ccXQ0lmE.s:449    .text:00000000000001b8 .L0 
     /tmp/ccXQ0lmE.s:452    .text:00000000000001b8 .L0 
     /tmp/ccXQ0lmE.s:453    .text:00000000000001b8 .L0 
     /tmp/ccXQ0lmE.s:454    .text:00000000000001b8 .L0 
     /tmp/ccXQ0lmE.s:459    .text:00000000000001c4 .L0 
       src/Riscv.cpp:80     .text:00000000000001c4 .L0 
     /tmp/ccXQ0lmE.s:465    .text:00000000000001c8 .L0 
       src/Riscv.cpp:81     .text:00000000000001c8 .L0 
     /tmp/ccXQ0lmE.s:470    .text:00000000000001cc .L0 
     /tmp/ccXQ0lmE.s:471    .text:00000000000001cc .L0 
       src/Riscv.cpp:83     .text:00000000000001cc .L0 
     /tmp/ccXQ0lmE.s:479    .text:00000000000001d0 .L0 
     /tmp/ccXQ0lmE.s:480    .text:00000000000001d0 .L0 
     /tmp/ccXQ0lmE.s:483    .text:00000000000001d4 .L0 
     /tmp/ccXQ0lmE.s:486    .text:00000000000001d8 .L0 
     /tmp/ccXQ0lmE.s:487    .text:00000000000001d8 .L0 
     /tmp/ccXQ0lmE.s:491    .text:00000000000001e4 .L0 
       src/Riscv.cpp:87     .text:00000000000001e4 .L0 
     /tmp/ccXQ0lmE.s:497    .text:00000000000001e8 .L0 
       src/Riscv.cpp:88     .text:00000000000001e8 .L0 
     /tmp/ccXQ0lmE.s:502    .text:00000000000001ec .L0 
     /tmp/ccXQ0lmE.s:503    .text:00000000000001ec .L0 
       src/Riscv.cpp:90     .text:00000000000001ec .L0 
     /tmp/ccXQ0lmE.s:511    .text:00000000000001f4 .L0 
     /tmp/ccXQ0lmE.s:512    .text:00000000000001f4 .L0 
     /tmp/ccXQ0lmE.s:516    .text:0000000000000200 .L0 
     /tmp/ccXQ0lmE.s:522    .text:0000000000000204 .L0 
     /tmp/ccXQ0lmE.s:523    .text:0000000000000204 .L0 
     /tmp/ccXQ0lmE.s:528    .text:0000000000000214 .L0 
     /tmp/ccXQ0lmE.s:534    .text:0000000000000218 .L0 
     /tmp/ccXQ0lmE.s:537    .text:0000000000000218 .L0 
     /tmp/ccXQ0lmE.s:540    .text:0000000000000218 .L0 
GAS LISTING /tmp/ccXQ0lmE.s 			page 39


     /tmp/ccXQ0lmE.s:541    .text:0000000000000218 .L0 
     /tmp/ccXQ0lmE.s:542    .text:0000000000000218 .L0 
  src/../h/Riscv.hpp:123    .text:0000000000000218 .L0 
     /tmp/ccXQ0lmE.s:551    .text:0000000000000220 .L0 
     /tmp/ccXQ0lmE.s:552    .text:0000000000000220 .L0 
     /tmp/ccXQ0lmE.s:556    .text:0000000000000224 .L0 
     /tmp/ccXQ0lmE.s:560    .text:0000000000000228 .L0 
     /tmp/ccXQ0lmE.s:561    .text:0000000000000228 .L0 
     /tmp/ccXQ0lmE.s:562    .text:0000000000000228 .L0 
  src/../h/Riscv.hpp:196    .text:0000000000000228 .L0 
     /tmp/ccXQ0lmE.s:570    .text:0000000000000230 .L0 
     /tmp/ccXQ0lmE.s:571    .text:0000000000000230 .L0 
     /tmp/ccXQ0lmE.s:575    .text:0000000000000234 .L0 
     /tmp/ccXQ0lmE.s:580    .text:0000000000000238 .L0 
     /tmp/ccXQ0lmE.s:581    .text:0000000000000238 .L0 
     /tmp/ccXQ0lmE.s:582    .text:0000000000000238 .L0 
     /tmp/ccXQ0lmE.s:592    .text:0000000000000240 .L0 
     /tmp/ccXQ0lmE.s:593    .text:0000000000000240 .L0 
     /tmp/ccXQ0lmE.s:598    .text:0000000000000254 .L0 
     /tmp/ccXQ0lmE.s:599    .text:0000000000000254 .L0 
     /tmp/ccXQ0lmE.s:604    .text:0000000000000268 .L0 
     /tmp/ccXQ0lmE.s:605    .text:0000000000000268 .L0 
     /tmp/ccXQ0lmE.s:608    .text:0000000000000270 .L0 
     /tmp/ccXQ0lmE.s:609    .text:0000000000000270 .L0 
     /tmp/ccXQ0lmE.s:616    .text:000000000000027c .L0 
     /tmp/ccXQ0lmE.s:617    .text:000000000000027c .L0 
     /tmp/ccXQ0lmE.s:622    .text:0000000000000280 .L0 
     /tmp/ccXQ0lmE.s:624    .text:0000000000000284 .L0 
     /tmp/ccXQ0lmE.s:627    .text:0000000000000288 .L0 
     /tmp/ccXQ0lmE.s:628    .text:0000000000000288 .L0 
     /tmp/ccXQ0lmE.s:633    .text:000000000000028c .L0 
  src/../h/Riscv.hpp:201    .text:000000000000028c .L0 
     /tmp/ccXQ0lmE.s:643    .text:0000000000000290 .L0 
     /tmp/ccXQ0lmE.s:644    .text:0000000000000290 .L0 
     /tmp/ccXQ0lmE.s:649    .text:0000000000000294 .L0 
  src/../h/Riscv.hpp:128    .text:0000000000000294 .L0 
     /tmp/ccXQ0lmE.s:659    .text:0000000000000298 .L0 
     /tmp/ccXQ0lmE.s:663    .text:0000000000000298 .L0 
     /tmp/ccXQ0lmE.s:664    .text:0000000000000298 .L0 
     /tmp/ccXQ0lmE.s:665    .text:000000000000029c .L0 
     /tmp/ccXQ0lmE.s:666    .text:000000000000029c .L0 
     /tmp/ccXQ0lmE.s:668    .text:00000000000002a0 .L0 
     /tmp/ccXQ0lmE.s:669    .text:00000000000002a0 .L0 
     /tmp/ccXQ0lmE.s:671    .text:00000000000002a4 .L0 
     /tmp/ccXQ0lmE.s:673    .text:00000000000002a8 .L0 
     /tmp/ccXQ0lmE.s:676    .text:00000000000002ac .L0 
     /tmp/ccXQ0lmE.s:680    .text:00000000000002ac .L0 
     /tmp/ccXQ0lmE.s:681    .text:00000000000002ac .L0 
     /tmp/ccXQ0lmE.s:683    .text:00000000000002b0 .L0 
     /tmp/ccXQ0lmE.s:684    .text:00000000000002b0 .L0 
     /tmp/ccXQ0lmE.s:694    .text:00000000000002bc .L0 
     /tmp/ccXQ0lmE.s:695    .text:00000000000002bc .L0 
     /tmp/ccXQ0lmE.s:699    .text:00000000000002cc .L0 
     /tmp/ccXQ0lmE.s:700    .text:00000000000002cc .L0 
     /tmp/ccXQ0lmE.s:705    .text:00000000000002d8 .L0 
     /tmp/ccXQ0lmE.s:706    .text:00000000000002d8 .L0 
     /tmp/ccXQ0lmE.s:717    .text:00000000000002e8 .L0 
GAS LISTING /tmp/ccXQ0lmE.s 			page 40


     /tmp/ccXQ0lmE.s:718    .text:00000000000002e8 .L0 
     /tmp/ccXQ0lmE.s:719    .text:00000000000002e8 .L0 
     /tmp/ccXQ0lmE.s:723    .text:00000000000002f0 .L0 
     /tmp/ccXQ0lmE.s:724    .text:00000000000002f0 .L0 
     /tmp/ccXQ0lmE.s:725    .text:00000000000002f0 .L0 
     /tmp/ccXQ0lmE.s:730    .text:00000000000002f4 .L0 
  src/../h/Riscv.hpp:201    .text:00000000000002f4 .L0 
     /tmp/ccXQ0lmE.s:740    .text:00000000000002f8 .L0 
     /tmp/ccXQ0lmE.s:741    .text:00000000000002f8 .L0 
     /tmp/ccXQ0lmE.s:746    .text:00000000000002fc .L0 
  src/../h/Riscv.hpp:128    .text:00000000000002fc .L0 
     /tmp/ccXQ0lmE.s:756    .text:0000000000000300 .L0 
     /tmp/ccXQ0lmE.s:759    .text:0000000000000300 .L0 
     /tmp/ccXQ0lmE.s:760    .text:0000000000000300 .L0 
     /tmp/ccXQ0lmE.s:765    .text:0000000000000304 .L0 
     /tmp/ccXQ0lmE.s:766    .text:0000000000000304 .L0 
     /tmp/ccXQ0lmE.s:767    .text:0000000000000304 .L0 
     /tmp/ccXQ0lmE.s:770    .text:000000000000030c .L0 
     /tmp/ccXQ0lmE.s:773    .text:0000000000000310 .L0 
     /tmp/ccXQ0lmE.s:774    .text:0000000000000310 .L0 
     /tmp/ccXQ0lmE.s:775    .text:0000000000000310 .L0 
     /tmp/ccXQ0lmE.s:778    .text:0000000000000318 .L0 
     /tmp/ccXQ0lmE.s:781    .text:000000000000031c .L0 
     /tmp/ccXQ0lmE.s:782    .text:000000000000031c .L0 
     /tmp/ccXQ0lmE.s:783    .text:000000000000031c .L0 
     /tmp/ccXQ0lmE.s:786    .text:0000000000000324 .L0 
     /tmp/ccXQ0lmE.s:789    .text:0000000000000328 .L0 
     /tmp/ccXQ0lmE.s:790    .text:0000000000000328 .L0 
     /tmp/ccXQ0lmE.s:791    .text:0000000000000328 .L0 
     /tmp/ccXQ0lmE.s:794    .text:0000000000000330 .L0 
     /tmp/ccXQ0lmE.s:797    .text:0000000000000334 .L0 
     /tmp/ccXQ0lmE.s:798    .text:0000000000000334 .L0 
     /tmp/ccXQ0lmE.s:799    .text:0000000000000334 .L0 
     /tmp/ccXQ0lmE.s:802    .text:000000000000033c .L0 
     /tmp/ccXQ0lmE.s:805    .text:0000000000000340 .L0 
     /tmp/ccXQ0lmE.s:806    .text:0000000000000340 .L0 
     /tmp/ccXQ0lmE.s:807    .text:0000000000000340 .L0 
     /tmp/ccXQ0lmE.s:810    .text:0000000000000348 .L0 
     /tmp/ccXQ0lmE.s:813    .text:000000000000034c .L0 
     /tmp/ccXQ0lmE.s:814    .text:000000000000034c .L0 
     /tmp/ccXQ0lmE.s:815    .text:000000000000034c .L0 
     /tmp/ccXQ0lmE.s:818    .text:0000000000000354 .L0 
     /tmp/ccXQ0lmE.s:821    .text:0000000000000358 .L0 
     /tmp/ccXQ0lmE.s:822    .text:0000000000000358 .L0 
     /tmp/ccXQ0lmE.s:823    .text:0000000000000358 .L0 
     /tmp/ccXQ0lmE.s:826    .text:0000000000000360 .L0 
     /tmp/ccXQ0lmE.s:829    .text:0000000000000364 .L0 
     /tmp/ccXQ0lmE.s:830    .text:0000000000000364 .L0 
     /tmp/ccXQ0lmE.s:831    .text:0000000000000364 .L0 
     /tmp/ccXQ0lmE.s:834    .text:000000000000036c .L0 
     /tmp/ccXQ0lmE.s:837    .text:0000000000000370 .L0 
     /tmp/ccXQ0lmE.s:838    .text:0000000000000370 .L0 
     /tmp/ccXQ0lmE.s:839    .text:0000000000000370 .L0 
     /tmp/ccXQ0lmE.s:842    .text:0000000000000378 .L0 
     /tmp/ccXQ0lmE.s:845    .text:000000000000037c .L0 
     /tmp/ccXQ0lmE.s:846    .text:000000000000037c .L0 
     /tmp/ccXQ0lmE.s:847    .text:000000000000037c .L0 
GAS LISTING /tmp/ccXQ0lmE.s 			page 41


     /tmp/ccXQ0lmE.s:850    .text:0000000000000384 .L0 
     /tmp/ccXQ0lmE.s:853    .text:0000000000000388 .L0 
     /tmp/ccXQ0lmE.s:854    .text:0000000000000388 .L0 
     /tmp/ccXQ0lmE.s:855    .text:0000000000000388 .L0 
     /tmp/ccXQ0lmE.s:858    .text:0000000000000390 .L0 
     /tmp/ccXQ0lmE.s:861    .text:0000000000000394 .L0 
     /tmp/ccXQ0lmE.s:862    .text:0000000000000394 .L0 
     /tmp/ccXQ0lmE.s:863    .text:0000000000000394 .L0 
     /tmp/ccXQ0lmE.s:866    .text:000000000000039c .L0 
     /tmp/ccXQ0lmE.s:869    .text:00000000000003a0 .L0 
     /tmp/ccXQ0lmE.s:870    .text:00000000000003a0 .L0 
     /tmp/ccXQ0lmE.s:871    .text:00000000000003a0 .L0 
     /tmp/ccXQ0lmE.s:874    .text:00000000000003a8 .L0 
     /tmp/ccXQ0lmE.s:877    .text:00000000000003ac .L0 
     /tmp/ccXQ0lmE.s:888    .text:00000000000003ac _ZN5Riscv10kernelMainEv
     /tmp/ccXQ0lmE.s:891    .text:00000000000003ac .L0 
     /tmp/ccXQ0lmE.s:5794   .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/ccXQ0lmE.s:894    .text:00000000000003ac .L0 
     /tmp/ccXQ0lmE.s:895    .text:00000000000003b0 .L0 
     /tmp/ccXQ0lmE.s:900    .text:00000000000003c0 .L0 
     /tmp/ccXQ0lmE.s:901    .text:00000000000003c0 .L0 
     /tmp/ccXQ0lmE.s:902    .text:00000000000003c0 .L0 
     /tmp/ccXQ0lmE.s:903    .text:00000000000003c0 .L0 
     /tmp/ccXQ0lmE.s:905    .text:00000000000003c4 .L0 
     /tmp/ccXQ0lmE.s:908    .text:00000000000003c4 .L0 
     /tmp/ccXQ0lmE.s:909    .text:00000000000003c4 .L0 
     /tmp/ccXQ0lmE.s:912    .text:00000000000003cc .L0 
     /tmp/ccXQ0lmE.s:913    .text:00000000000003cc .L0 
     /tmp/ccXQ0lmE.s:918    .text:00000000000003dc .L0 
     /tmp/ccXQ0lmE.s:932    .text:0000000000000408 .L0 
     /tmp/ccXQ0lmE.s:933    .text:0000000000000408 .L0 
     /tmp/ccXQ0lmE.s:939    .text:0000000000000414 .L0 
     /tmp/ccXQ0lmE.s:940    .text:0000000000000414 .L0 
     /tmp/ccXQ0lmE.s:941    .text:0000000000000414 .L0 
     /tmp/ccXQ0lmE.s:945    .text:0000000000000420 .L0 
     /tmp/ccXQ0lmE.s:947    .text:0000000000000424 .L0 
     /tmp/ccXQ0lmE.s:948    .text:0000000000000424 .L0 
     /tmp/ccXQ0lmE.s:951    .text:000000000000042c .L0 
     /tmp/ccXQ0lmE.s:954    .text:0000000000000430 .L0 
     /tmp/ccXQ0lmE.s:955    .text:0000000000000430 .L0 
     /tmp/ccXQ0lmE.s:958    .text:000000000000043c .L0 
     /tmp/ccXQ0lmE.s:959    .text:000000000000043c .L0 
     /tmp/ccXQ0lmE.s:964    .text:000000000000044c .L0 
     /tmp/ccXQ0lmE.s:965    .text:000000000000044c .L0 
     /tmp/ccXQ0lmE.s:966    .text:000000000000044c .L0 
     /tmp/ccXQ0lmE.s:971    .text:0000000000000460 .L0 
     /tmp/ccXQ0lmE.s:973    .text:0000000000000464 .L0 
     /tmp/ccXQ0lmE.s:974    .text:0000000000000464 .L0 
     /tmp/ccXQ0lmE.s:978    .text:000000000000046c .L0 
     /tmp/ccXQ0lmE.s:981    .text:0000000000000470 .L0 
     /tmp/ccXQ0lmE.s:982    .text:0000000000000470 .L0 
     /tmp/ccXQ0lmE.s:985    .text:0000000000000478 .L0 
     /tmp/ccXQ0lmE.s:986    .text:0000000000000478 .L0 
     /tmp/ccXQ0lmE.s:989    .text:0000000000000480 .L0 
     /tmp/ccXQ0lmE.s:990    .text:0000000000000484 .L0 
     /tmp/ccXQ0lmE.s:991    .text:0000000000000484 .L0 
     /tmp/ccXQ0lmE.s:993    .text:0000000000000488 .L0 
GAS LISTING /tmp/ccXQ0lmE.s 			page 42


     /tmp/ccXQ0lmE.s:994    .text:0000000000000488 .L0 
     /tmp/ccXQ0lmE.s:996    .text:000000000000048c .L0 
     /tmp/ccXQ0lmE.s:999    .text:0000000000000490 .L0 
     /tmp/ccXQ0lmE.s:1001   .text:0000000000000494 .L0 
     /tmp/ccXQ0lmE.s:1004   .text:0000000000000498 .L0 
     /tmp/ccXQ0lmE.s:1007   .text:000000000000049c .L0 
     /tmp/ccXQ0lmE.s:1015   .text:00000000000004b4 .L0 
     /tmp/ccXQ0lmE.s:1045   .text:00000000000004b4 _ZN5Riscv14myTestsWrapperEPv
     /tmp/ccXQ0lmE.s:1048   .text:00000000000004b4 .L0 
     /tmp/ccXQ0lmE.s:1050   .text:00000000000004b4 .L0 
     /tmp/ccXQ0lmE.s:1051   .text:00000000000004b8 .L0 
     /tmp/ccXQ0lmE.s:1054   .text:00000000000004c0 .L0 
     /tmp/ccXQ0lmE.s:1055   .text:00000000000004c0 .L0 
     /tmp/ccXQ0lmE.s:1057   .text:00000000000004c4 .L0 
     /tmp/ccXQ0lmE.s:1059   .text:00000000000004c4 .L0 
     /tmp/ccXQ0lmE.s:1060   .text:00000000000004c4 .L0 
     /tmp/ccXQ0lmE.s:1063   .text:00000000000004cc .L0 
     /tmp/ccXQ0lmE.s:1064   .text:00000000000004d0 .L0 
     /tmp/ccXQ0lmE.s:1066   .text:00000000000004d4 .L0 
     /tmp/ccXQ0lmE.s:1067   .text:00000000000004d4 .L0 
     /tmp/ccXQ0lmE.s:1069   .text:00000000000004d8 .L0 
     /tmp/ccXQ0lmE.s:1071   .text:00000000000004dc .L0 
     /tmp/ccXQ0lmE.s:1077   .text:00000000000004dc _ZN5Riscv22disableTimerInterruptsEv
     /tmp/ccXQ0lmE.s:1080   .text:00000000000004dc .L0 
     /tmp/ccXQ0lmE.s:1081   .text:00000000000004dc .L0 
     /tmp/ccXQ0lmE.s:1082   .text:00000000000004e0 .L0 
     /tmp/ccXQ0lmE.s:1084   .text:00000000000004e4 .L0 
     /tmp/ccXQ0lmE.s:1086   .text:00000000000004e8 .L0 
     /tmp/ccXQ0lmE.s:1089   .text:00000000000004e8 .L0 
     /tmp/ccXQ0lmE.s:1090   .text:00000000000004e8 .L0 
     /tmp/ccXQ0lmE.s:1091   .text:00000000000004e8 .L0 
     /tmp/ccXQ0lmE.s:1098   .text:00000000000004f0 .L0 
     /tmp/ccXQ0lmE.s:1099   .text:00000000000004f4 .L0 
     /tmp/ccXQ0lmE.s:1100   .text:00000000000004f4 .L0 
     /tmp/ccXQ0lmE.s:1102   .text:00000000000004f8 .L0 
     /tmp/ccXQ0lmE.s:1104   .text:00000000000004fc .L0 
     /tmp/ccXQ0lmE.s:1110   .text:00000000000004fc _ZN5Riscv9idleRiscvEPv
     /tmp/ccXQ0lmE.s:1113   .text:00000000000004fc .L0 
     /tmp/ccXQ0lmE.s:1115   .text:00000000000004fc .L0 
     /tmp/ccXQ0lmE.s:1116   .text:0000000000000500 .L0 
     /tmp/ccXQ0lmE.s:1118   .text:0000000000000504 .L0 
     /tmp/ccXQ0lmE.s:1120   .text:0000000000000508 .L0 
     /tmp/ccXQ0lmE.s:1123   .text:0000000000000508 .L0 
     /tmp/ccXQ0lmE.s:1124   .text:0000000000000508 .L0 
     /tmp/ccXQ0lmE.s:1125   .text:000000000000050c .L0 
     /tmp/ccXQ0lmE.s:1131   .text:000000000000050c _ZN5Riscv13w_a0_sscratchEv
     /tmp/ccXQ0lmE.s:1134   .text:000000000000050c .L0 
     /tmp/ccXQ0lmE.s:1135   .text:000000000000050c .L0 
     /tmp/ccXQ0lmE.s:1136   .text:0000000000000510 .L0 
     /tmp/ccXQ0lmE.s:1138   .text:0000000000000514 .L0 
     /tmp/ccXQ0lmE.s:1140   .text:0000000000000518 .L0 
     /tmp/ccXQ0lmE.s:1142   .text:0000000000000518 .L0 
     /tmp/ccXQ0lmE.s:1143   .text:0000000000000518 .L0 
       src/Riscv.cpp:236    .text:0000000000000518 .L0 
     /tmp/ccXQ0lmE.s:1150   .text:000000000000051c .L0 
     /tmp/ccXQ0lmE.s:1152   .text:000000000000051c .L0 
       src/Riscv.cpp:237    .text:000000000000052c .L0 
GAS LISTING /tmp/ccXQ0lmE.s 			page 43


     /tmp/ccXQ0lmE.s:1161   .text:0000000000000530 .L0 
       src/Riscv.cpp:239    .text:0000000000000530 .L0 
     /tmp/ccXQ0lmE.s:1166   .text:0000000000000534 .L0 
       src/Riscv.cpp:240    .text:0000000000000534 .L0 
     /tmp/ccXQ0lmE.s:1172   .text:0000000000000538 .L0 
     /tmp/ccXQ0lmE.s:1173   .text:000000000000053c .L0 
     /tmp/ccXQ0lmE.s:1174   .text:000000000000053c .L0 
     /tmp/ccXQ0lmE.s:1176   .text:0000000000000540 .L0 
     /tmp/ccXQ0lmE.s:1178   .text:0000000000000544 .L0 
     /tmp/ccXQ0lmE.s:1184   .text:0000000000000544 _ZN5Riscv14changePrivModeEv
     /tmp/ccXQ0lmE.s:1187   .text:0000000000000544 .L0 
     /tmp/ccXQ0lmE.s:1188   .text:0000000000000544 .L0 
     /tmp/ccXQ0lmE.s:1189   .text:0000000000000548 .L0 
     /tmp/ccXQ0lmE.s:1191   .text:000000000000054c .L0 
     /tmp/ccXQ0lmE.s:1193   .text:0000000000000550 .L0 
     /tmp/ccXQ0lmE.s:1195   .text:0000000000000550 .L0 
     /tmp/ccXQ0lmE.s:1196   .text:0000000000000554 .L0 
     /tmp/ccXQ0lmE.s:1197   .text:0000000000000554 .L0 
     /tmp/ccXQ0lmE.s:1199   .text:0000000000000558 .L0 
     /tmp/ccXQ0lmE.s:1201   .text:000000000000055c .L0 
     /tmp/ccXQ0lmE.s:1215   .bss:0000000000000008 _ZN5Riscv12finishSystemE
     /tmp/ccXQ0lmE.s:1211   .bss:0000000000000000 _ZN5Riscv9totalTimeE
     /tmp/ccXQ0lmE.s:1208   .bss:0000000000000000 .LANCHOR0
     /tmp/ccXQ0lmE.s:1228   .text:000000000000055c .L0 
     /tmp/ccXQ0lmE.s:55     .text:0000000000000038 .L0 
     /tmp/ccXQ0lmE.s:256    .text:0000000000000104 .L0 
     /tmp/ccXQ0lmE.s:260    .text:0000000000000110 .L0 
     /tmp/ccXQ0lmE.s:369    .rodata:0000000000000000 .L23
     /tmp/ccXQ0lmE.s:361    .text:0000000000000190 .L0 
     /tmp/ccXQ0lmE.s:454    .text:00000000000001b8 .L0 
     /tmp/ccXQ0lmE.s:487    .text:00000000000001d8 .L0 
     /tmp/ccXQ0lmE.s:512    .text:00000000000001f4 .L0 
     /tmp/ccXQ0lmE.s:593    .text:0000000000000240 .L0 
     /tmp/ccXQ0lmE.s:599    .text:0000000000000254 .L0 
     /tmp/ccXQ0lmE.s:609    .text:0000000000000270 .L0 
     /tmp/ccXQ0lmE.s:696    .text:00000000000002c0 .L0 
     /tmp/ccXQ0lmE.s:926    .text:00000000000003f8 .L0 
     /tmp/ccXQ0lmE.s:956    .text:0000000000000434 .L0 
     /tmp/ccXQ0lmE.s:882    .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccXQ0lmE.s:959    .text:000000000000043c .L0 
     /tmp/ccXQ0lmE.s:966    .text:000000000000044c .L0 
     /tmp/ccXQ0lmE.s:1152   .text:000000000000051c .L0 
     /tmp/ccXQ0lmE.s:530    .text:0000000000000218 .L14
     /tmp/ccXQ0lmE.s:440    .text:00000000000001a8 .L15
     /tmp/ccXQ0lmE.s:660    .text:0000000000000298 .L13
     /tmp/ccXQ0lmE.s:722    .text:00000000000002f0 .L21
     /tmp/ccXQ0lmE.s:518    .text:0000000000000204 .L20
     /tmp/ccXQ0lmE.s:688    .text:00000000000002bc .L40
     /tmp/ccXQ0lmE.s:675    .text:00000000000002ac .L41
     /tmp/ccXQ0lmE.s:625    .text:0000000000000288 .L19
     /tmp/ccXQ0lmE.s:952    .text:0000000000000430 .L43
     /tmp/ccXQ0lmE.s:937    .text:0000000000000414 .L44
     /tmp/ccXQ0lmE.s:979    .text:0000000000000470 .L45
     /tmp/ccXQ0lmE.s:962    .text:000000000000044c .L46
     /tmp/ccXQ0lmE.s:1121   .text:0000000000000508 .L56
     /tmp/ccXQ0lmE.s:711    .text:00000000000002e8 .L37
     /tmp/ccXQ0lmE.s:761    .text:0000000000000304 .L36
GAS LISTING /tmp/ccXQ0lmE.s 			page 44


     /tmp/ccXQ0lmE.s:779    .text:000000000000031c .L35
     /tmp/ccXQ0lmE.s:803    .text:0000000000000340 .L34
     /tmp/ccXQ0lmE.s:795    .text:0000000000000334 .L33
     /tmp/ccXQ0lmE.s:771    .text:0000000000000310 .L32
     /tmp/ccXQ0lmE.s:787    .text:0000000000000328 .L31
     /tmp/ccXQ0lmE.s:819    .text:0000000000000358 .L30
     /tmp/ccXQ0lmE.s:843    .text:000000000000037c .L29
     /tmp/ccXQ0lmE.s:827    .text:0000000000000364 .L28
     /tmp/ccXQ0lmE.s:835    .text:0000000000000370 .L27
     /tmp/ccXQ0lmE.s:811    .text:000000000000034c .L26
     /tmp/ccXQ0lmE.s:851    .text:0000000000000388 .L25
     /tmp/ccXQ0lmE.s:859    .text:0000000000000394 .L24
     /tmp/ccXQ0lmE.s:867    .text:00000000000003a0 .L22
     /tmp/ccXQ0lmE.s:907    .text:00000000000003c4 .LEHB0
     /tmp/ccXQ0lmE.s:889    .text:00000000000003ac .LFB33
     /tmp/ccXQ0lmE.s:921    .text:00000000000003e8 .LEHE0
     /tmp/ccXQ0lmE.s:927    .text:0000000000000400 .LEHB1
     /tmp/ccXQ0lmE.s:930    .text:0000000000000408 .LEHE1
     /tmp/ccXQ0lmE.s:1003   .text:0000000000000498 .L48
     /tmp/ccXQ0lmE.s:934    .text:000000000000040c .LEHB2
     /tmp/ccXQ0lmE.s:976    .text:000000000000046c .LEHE2
     /tmp/ccXQ0lmE.s:1011   .text:00000000000004ac .LEHB3
     /tmp/ccXQ0lmE.s:1014   .text:00000000000004b4 .LEHE3
     /tmp/ccXQ0lmE.s:3819   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccXQ0lmE.s:5218   .debug_str:00000000000002b2 .LASF311
     /tmp/ccXQ0lmE.s:5252   .debug_str:000000000000047d .LASF312
     /tmp/ccXQ0lmE.s:5670   .debug_str:0000000000001235 .LASF313
     /tmp/ccXQ0lmE.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccXQ0lmE.s:1218   .text:000000000000055c .Letext0
     /tmp/ccXQ0lmE.s:5146   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccXQ0lmE.s:5366   .debug_str:000000000000086e .LASF0
     /tmp/ccXQ0lmE.s:5402   .debug_str:0000000000000997 .LASF1
     /tmp/ccXQ0lmE.s:5556   .debug_str:0000000000000eb9 .LASF2
     /tmp/ccXQ0lmE.s:5574   .debug_str:0000000000000f4f .LASF4
     /tmp/ccXQ0lmE.s:5386   .debug_str:0000000000000916 .LASF3
     /tmp/ccXQ0lmE.s:5172   .debug_str:00000000000000eb .LASF5
     /tmp/ccXQ0lmE.s:5514   .debug_str:0000000000000da3 .LASF6
     /tmp/ccXQ0lmE.s:5504   .debug_str:0000000000000d5a .LASF7
     /tmp/ccXQ0lmE.s:5394   .debug_str:0000000000000963 .LASF8
     /tmp/ccXQ0lmE.s:5328   .debug_str:0000000000000712 .LASF9
     /tmp/ccXQ0lmE.s:5340   .debug_str:0000000000000784 .LASF10
     /tmp/ccXQ0lmE.s:5238   .debug_str:000000000000041a .LASF11
     /tmp/ccXQ0lmE.s:5316   .debug_str:00000000000006d0 .LASF12
     /tmp/ccXQ0lmE.s:5254   .debug_str:000000000000048b .LASF13
     /tmp/ccXQ0lmE.s:5236   .debug_str:000000000000040a .LASF14
     /tmp/ccXQ0lmE.s:5628   .debug_str:000000000000111c .LASF15
     /tmp/ccXQ0lmE.s:5294   .debug_str:00000000000005dd .LASF16
     /tmp/ccXQ0lmE.s:5612   .debug_str:0000000000001067 .LASF17
     /tmp/ccXQ0lmE.s:5716   .debug_str:0000000000001395 .LASF110
     /tmp/ccXQ0lmE.s:5536   .debug_str:0000000000000e3e .LASF21
     /tmp/ccXQ0lmE.s:5412   .debug_str:00000000000009da .LASF18
     /tmp/ccXQ0lmE.s:5304   .debug_str:000000000000064c .LASF19
     /tmp/ccXQ0lmE.s:5736   .debug_str:0000000000001443 .LASF20
     /tmp/ccXQ0lmE.s:5704   .debug_str:0000000000001334 .LASF22
     /tmp/ccXQ0lmE.s:5310   .debug_str:000000000000068c .LASF23
     /tmp/ccXQ0lmE.s:5658   .debug_str:00000000000011d2 .LASF24
     /tmp/ccXQ0lmE.s:5268   .debug_str:0000000000000513 .LASF25
GAS LISTING /tmp/ccXQ0lmE.s 			page 45


     /tmp/ccXQ0lmE.s:5360   .debug_str:0000000000000845 .LASF26
     /tmp/ccXQ0lmE.s:5616   .debug_str:000000000000108c .LASF28
     /tmp/ccXQ0lmE.s:5746   .debug_str:0000000000001494 .LASF27
     /tmp/ccXQ0lmE.s:5592   .debug_str:0000000000000fd0 .LASF29
     /tmp/ccXQ0lmE.s:5460   .debug_str:0000000000000bc8 .LASF30
     /tmp/ccXQ0lmE.s:5440   .debug_str:0000000000000af8 .LASF31
     /tmp/ccXQ0lmE.s:5290   .debug_str:00000000000005c0 .LASF32
     /tmp/ccXQ0lmE.s:5160   .debug_str:000000000000005b .LASF33
     /tmp/ccXQ0lmE.s:5442   .debug_str:0000000000000b10 .LASF40
     /tmp/ccXQ0lmE.s:5712   .debug_str:000000000000136d .LASF42
     /tmp/ccXQ0lmE.s:5232   .debug_str:00000000000003e6 .LASF34
     /tmp/ccXQ0lmE.s:5418   .debug_str:0000000000000a17 .LASF35
     /tmp/ccXQ0lmE.s:5284   .debug_str:000000000000056f .LASF36
     /tmp/ccXQ0lmE.s:5244   .debug_str:0000000000000437 .LASF37
     /tmp/ccXQ0lmE.s:5378   .debug_str:00000000000008d4 .LASF38
     /tmp/ccXQ0lmE.s:5260   .debug_str:00000000000004d1 .LASF39
     /tmp/ccXQ0lmE.s:5208   .debug_str:000000000000026f .LASF41
     /tmp/ccXQ0lmE.s:5330   .debug_str:0000000000000722 .LASF43
     /tmp/ccXQ0lmE.s:5584   .debug_str:0000000000000f80 .LASF44
     /tmp/ccXQ0lmE.s:5302   .debug_str:0000000000000631 .LASF45
     /tmp/ccXQ0lmE.s:5372   .debug_str:00000000000008ad .LASF46
     /tmp/ccXQ0lmE.s:5728   .debug_str:00000000000013fb .LASF47
     /tmp/ccXQ0lmE.s:5694   .debug_str:00000000000012fc .LASF50
     /tmp/ccXQ0lmE.s:5682   .debug_str:00000000000012a1 .LASF52
     /tmp/ccXQ0lmE.s:5552   .debug_str:0000000000000ea5 .LASF48
     /tmp/ccXQ0lmE.s:5484   .debug_str:0000000000000ca2 .LASF49
     /tmp/ccXQ0lmE.s:5522   .debug_str:0000000000000dcc .LASF51
     /tmp/ccXQ0lmE.s:5530   .debug_str:0000000000000e0c .LASF53
     /tmp/ccXQ0lmE.s:5474   .debug_str:0000000000000c33 .LASF54
     /tmp/ccXQ0lmE.s:5396   .debug_str:0000000000000976 .LASF55
     /tmp/ccXQ0lmE.s:5730   .debug_str:0000000000001415 .LASF56
     /tmp/ccXQ0lmE.s:5664   .debug_str:00000000000011f4 .LASF57
     /tmp/ccXQ0lmE.s:5468   .debug_str:0000000000000c03 .LASF58
     /tmp/ccXQ0lmE.s:5482   .debug_str:0000000000000c8e .LASF59
     /tmp/ccXQ0lmE.s:5454   .debug_str:0000000000000b8c .LASF60
     /tmp/ccXQ0lmE.s:5534   .debug_str:0000000000000e2a .LASF61
     /tmp/ccXQ0lmE.s:5780   .debug_str:00000000000015a5 .LASF62
     /tmp/ccXQ0lmE.s:5376   .debug_str:00000000000008c0 .LASF63
     /tmp/ccXQ0lmE.s:5754   .debug_str:00000000000014c7 .LASF107
     /tmp/ccXQ0lmE.s:5624   .debug_str:00000000000010f3 .LASF64
     /tmp/ccXQ0lmE.s:5578   .debug_str:0000000000000f5e .LASF65
     /tmp/ccXQ0lmE.s:5580   .debug_str:0000000000000f71 .LASF66
     /tmp/ccXQ0lmE.s:5288   .debug_str:00000000000005ad .LASF67
     /tmp/ccXQ0lmE.s:5282   .debug_str:0000000000000569 .LASF68
     /tmp/ccXQ0lmE.s:5180   .debug_str:000000000000012b .LASF69
     /tmp/ccXQ0lmE.s:5374   .debug_str:00000000000008ba .LASF70
     /tmp/ccXQ0lmE.s:5272   .debug_str:0000000000000532 .LASF71
     /tmp/ccXQ0lmE.s:5224   .debug_str:0000000000000392 .LASF72
     /tmp/ccXQ0lmE.s:5586   .debug_str:0000000000000f8e .LASF73
     /tmp/ccXQ0lmE.s:5174   .debug_str:00000000000000f2 .LASF74
     /tmp/ccXQ0lmE.s:5562   .debug_str:0000000000000ed6 .LASF75
     /tmp/ccXQ0lmE.s:5554   .debug_str:0000000000000eae .LASF76
     /tmp/ccXQ0lmE.s:5768   .debug_str:0000000000001540 .LASF77
     /tmp/ccXQ0lmE.s:5560   .debug_str:0000000000000ecf .LASF78
     /tmp/ccXQ0lmE.s:5234   .debug_str:00000000000003f7 .LASF79
     /tmp/ccXQ0lmE.s:5608   .debug_str:0000000000001052 .LASF80
     /tmp/ccXQ0lmE.s:5568   .debug_str:0000000000000f0d .LASF81
GAS LISTING /tmp/ccXQ0lmE.s 			page 46


     /tmp/ccXQ0lmE.s:5718   .debug_str:000000000000139b .LASF82
     /tmp/ccXQ0lmE.s:5742   .debug_str:0000000000001461 .LASF83
     /tmp/ccXQ0lmE.s:5714   .debug_str:000000000000138b .LASF84
     /tmp/ccXQ0lmE.s:5444   .debug_str:0000000000000b20 .LASF85
     /tmp/ccXQ0lmE.s:5542   .debug_str:0000000000000e68 .LASF86
     /tmp/ccXQ0lmE.s:5350   .debug_str:0000000000000807 .LASF87
     /tmp/ccXQ0lmE.s:5358   .debug_str:000000000000083f .LASF88
     /tmp/ccXQ0lmE.s:5262   .debug_str:00000000000004f0 .LASF89
     /tmp/ccXQ0lmE.s:5354   .debug_str:000000000000081f .LASF90
     /tmp/ccXQ0lmE.s:5362   .debug_str:0000000000000850 .LASF91
     /tmp/ccXQ0lmE.s:5688   .debug_str:00000000000012c9 .LASF92
     /tmp/ccXQ0lmE.s:5338   .debug_str:0000000000000768 .LASF93
     /tmp/ccXQ0lmE.s:5508   .debug_str:0000000000000d75 .LASF94
     /tmp/ccXQ0lmE.s:5392   .debug_str:0000000000000941 .LASF95
     /tmp/ccXQ0lmE.s:5204   .debug_str:000000000000024d .LASF96
     /tmp/ccXQ0lmE.s:5434   .debug_str:0000000000000aba .LASF97
     /tmp/ccXQ0lmE.s:5544   .debug_str:0000000000000e6e .LASF98
     /tmp/ccXQ0lmE.s:5166   .debug_str:00000000000000a7 .LASF99
     /tmp/ccXQ0lmE.s:5210   .debug_str:0000000000000279 .LASF100
     /tmp/ccXQ0lmE.s:5686   .debug_str:00000000000012bd .LASF101
     /tmp/ccXQ0lmE.s:5212   .debug_str:0000000000000288 .LASF102
     /tmp/ccXQ0lmE.s:5458   .debug_str:0000000000000bb6 .LASF103
     /tmp/ccXQ0lmE.s:5342   .debug_str:0000000000000792 .LASF104
     /tmp/ccXQ0lmE.s:5384   .debug_str:0000000000000903 .LASF105
     /tmp/ccXQ0lmE.s:5230   .debug_str:00000000000003d2 .LASF106
     /tmp/ccXQ0lmE.s:5652   .debug_str:00000000000011ae .LASF108
     /tmp/ccXQ0lmE.s:5432   .debug_str:0000000000000ab5 .LASF109
     /tmp/ccXQ0lmE.s:5498   .debug_str:0000000000000d1c .LASF111
     /tmp/ccXQ0lmE.s:5598   .debug_str:0000000000000ffc .LASF146
     /tmp/ccXQ0lmE.s:5400   .debug_str:0000000000000992 .LASF112
     /tmp/ccXQ0lmE.s:5240   .debug_str:0000000000000429 .LASF113
     /tmp/ccXQ0lmE.s:5324   .debug_str:00000000000006fc .LASF114
     /tmp/ccXQ0lmE.s:5404   .debug_str:00000000000009aa .LASF115
     /tmp/ccXQ0lmE.s:5410   .debug_str:00000000000009c7 .LASF116
     /tmp/ccXQ0lmE.s:5322   .debug_str:00000000000006f3 .LASF117
     /tmp/ccXQ0lmE.s:5784   .debug_str:00000000000015cb .LASF118
     /tmp/ccXQ0lmE.s:5448   .debug_str:0000000000000b55 .LASF119
     /tmp/ccXQ0lmE.s:5176   .debug_str:00000000000000fd .LASF121
     /tmp/ccXQ0lmE.s:5634   .debug_str:000000000000114a .LASF120
     /tmp/ccXQ0lmE.s:5450   .debug_str:0000000000000b5f .LASF122
     /tmp/ccXQ0lmE.s:5708   .debug_str:0000000000001353 .LASF123
     /tmp/ccXQ0lmE.s:5668   .debug_str:0000000000001212 .LASF124
     /tmp/ccXQ0lmE.s:5630   .debug_str:0000000000001128 .LASF125
     /tmp/ccXQ0lmE.s:5168   .debug_str:00000000000000af .LASF126
     /tmp/ccXQ0lmE.s:5722   .debug_str:00000000000013aa .LASF127
     /tmp/ccXQ0lmE.s:5164   .debug_str:0000000000000079 .LASF128
     /tmp/ccXQ0lmE.s:5642   .debug_str:000000000000116e .LASF129
     /tmp/ccXQ0lmE.s:5348   .debug_str:00000000000007d8 .LASF130
     /tmp/ccXQ0lmE.s:5154   .debug_str:000000000000002b .LASF131
     /tmp/ccXQ0lmE.s:5486   .debug_str:0000000000000cb7 .LASF132
     /tmp/ccXQ0lmE.s:5296   .debug_str:00000000000005f3 .LASF133
     /tmp/ccXQ0lmE.s:5726   .debug_str:00000000000013d3 .LASF134
     /tmp/ccXQ0lmE.s:5614   .debug_str:000000000000107d .LASF135
     /tmp/ccXQ0lmE.s:5286   .debug_str:0000000000000586 .LASF136
     /tmp/ccXQ0lmE.s:5648   .debug_str:0000000000001199 .LASF137
     /tmp/ccXQ0lmE.s:5228   .debug_str:00000000000003cc .LASF138
     /tmp/ccXQ0lmE.s:5596   .debug_str:0000000000000ff4 .LASF139
GAS LISTING /tmp/ccXQ0lmE.s 			page 47


     /tmp/ccXQ0lmE.s:5246   .debug_str:000000000000045b .LASF140
     /tmp/ccXQ0lmE.s:5214   .debug_str:000000000000029b .LASF141
     /tmp/ccXQ0lmE.s:5506   .debug_str:0000000000000d6d .LASF142
     /tmp/ccXQ0lmE.s:5398   .debug_str:0000000000000989 .LASF143
     /tmp/ccXQ0lmE.s:5576   .debug_str:0000000000000f56 .LASF208
     /tmp/ccXQ0lmE.s:5352   .debug_str:0000000000000819 .LASF144
     /tmp/ccXQ0lmE.s:5676   .debug_str:000000000000127f .LASF145
     /tmp/ccXQ0lmE.s:5464   .debug_str:0000000000000be2 .LASF314
     /tmp/ccXQ0lmE.s:5490   .debug_str:0000000000000cf1 .LASF147
     /tmp/ccXQ0lmE.s:5720   .debug_str:00000000000013a5 .LASF148
     /tmp/ccXQ0lmE.s:5764   .debug_str:000000000000150b .LASF149
     /tmp/ccXQ0lmE.s:5758   .debug_str:00000000000014e2 .LASF150
     /tmp/ccXQ0lmE.s:5662   .debug_str:00000000000011e4 .LASF151
     /tmp/ccXQ0lmE.s:5276   .debug_str:0000000000000555 .LASF152
     /tmp/ccXQ0lmE.s:5186   .debug_str:0000000000000184 .LASF153
     /tmp/ccXQ0lmE.s:5408   .debug_str:00000000000009c1 .LASF154
     /tmp/ccXQ0lmE.s:5494   .debug_str:0000000000000d00 .LASF155
     /tmp/ccXQ0lmE.s:5656   .debug_str:00000000000011ca .LASF156
     /tmp/ccXQ0lmE.s:5274   .debug_str:0000000000000544 .LASF157
     /tmp/ccXQ0lmE.s:5438   .debug_str:0000000000000aeb .LASF162
     /tmp/ccXQ0lmE.s:5420   .debug_str:0000000000000a35 .LASF164
     /tmp/ccXQ0lmE.s:5772   .debug_str:000000000000156d .LASF158
     /tmp/ccXQ0lmE.s:5320   .debug_str:00000000000006e7 .LASF159
     /tmp/ccXQ0lmE.s:5368   .debug_str:000000000000087b .LASF160
     /tmp/ccXQ0lmE.s:5380   .debug_str:00000000000008e6 .LASF161
     /tmp/ccXQ0lmE.s:5588   .debug_str:0000000000000fa9 .LASF163
     /tmp/ccXQ0lmE.s:5270   .debug_str:000000000000051f .LASF165
     /tmp/ccXQ0lmE.s:5526   .debug_str:0000000000000df6 .LASF166
     /tmp/ccXQ0lmE.s:5620   .debug_str:00000000000010c4 .LASF167
     /tmp/ccXQ0lmE.s:5462   .debug_str:0000000000000bd3 .LASF168
     /tmp/ccXQ0lmE.s:5156   .debug_str:000000000000003c .LASF169
     /tmp/ccXQ0lmE.s:5740   .debug_str:0000000000001452 .LASF170
     /tmp/ccXQ0lmE.s:5500   .debug_str:0000000000000d2c .LASF171
     /tmp/ccXQ0lmE.s:5610   .debug_str:0000000000001059 .LASF172
     /tmp/ccXQ0lmE.s:5520   .debug_str:0000000000000dc0 .LASF173
     /tmp/ccXQ0lmE.s:5150   .debug_str:000000000000000f .LASF174
     /tmp/ccXQ0lmE.s:5480   .debug_str:0000000000000c7e .LASF175
     /tmp/ccXQ0lmE.s:5548   .debug_str:0000000000000e7f .LASF176
     /tmp/ccXQ0lmE.s:5748   .debug_str:00000000000014a3 .LASF177
     /tmp/ccXQ0lmE.s:5388   .debug_str:0000000000000928 .LASF178
     /tmp/ccXQ0lmE.s:5602   .debug_str:000000000000101f .LASF179
     /tmp/ccXQ0lmE.s:5762   .debug_str:00000000000014f5 .LASF180
     /tmp/ccXQ0lmE.s:5636   .debug_str:0000000000001153 .LASF181
     /tmp/ccXQ0lmE.s:5604   .debug_str:000000000000102a .LASF182
     /tmp/ccXQ0lmE.s:5582   .debug_str:0000000000000f78 .LASF183
     /tmp/ccXQ0lmE.s:5502   .debug_str:0000000000000d46 .LASF184
     /tmp/ccXQ0lmE.s:5472   .debug_str:0000000000000c14 .LASF185
     /tmp/ccXQ0lmE.s:5258   .debug_str:00000000000004bf .LASF186
     /tmp/ccXQ0lmE.s:5744   .debug_str:0000000000001477 .LASF187
     /tmp/ccXQ0lmE.s:5786   .debug_str:00000000000015d5 .LASF188
     /tmp/ccXQ0lmE.s:5476   .debug_str:0000000000000c3a .LASF189
     /tmp/ccXQ0lmE.s:5566   .debug_str:0000000000000efa .LASF190
     /tmp/ccXQ0lmE.s:5590   .debug_str:0000000000000fb2 .LASF191
     /tmp/ccXQ0lmE.s:5700   .debug_str:0000000000001316 .LASF192
     /tmp/ccXQ0lmE.s:5782   .debug_str:00000000000015ad .LASF193
     /tmp/ccXQ0lmE.s:5770   .debug_str:0000000000001558 .LASF194
     /tmp/ccXQ0lmE.s:5618   .debug_str:00000000000010a4 .LASF195
GAS LISTING /tmp/ccXQ0lmE.s 			page 48


     /tmp/ccXQ0lmE.s:5572   .debug_str:0000000000000f46 .LASF196
     /tmp/ccXQ0lmE.s:5532   .debug_str:0000000000000e1f .LASF197
     /tmp/ccXQ0lmE.s:5666   .debug_str:0000000000001208 .LASF198
     /tmp/ccXQ0lmE.s:5496   .debug_str:0000000000000d10 .LASF199
     /tmp/ccXQ0lmE.s:5756   .debug_str:00000000000014d4 .LASF200
     /tmp/ccXQ0lmE.s:5198   .debug_str:00000000000001f8 .LASF202
     /tmp/ccXQ0lmE.s:5202   .debug_str:0000000000000238 .LASF201
     /tmp/ccXQ0lmE.s:5226   .debug_str:00000000000003a0 .LASF203
     /tmp/ccXQ0lmE.s:5776   .debug_str:0000000000001586 .LASF315
     /tmp/ccXQ0lmE.s:5222   .debug_str:0000000000000381 .LASF316
     /tmp/ccXQ0lmE.s:5158   .debug_str:0000000000000056 .LASF204
     /tmp/ccXQ0lmE.s:5696   .debug_str:0000000000001305 .LASF205
     /tmp/ccXQ0lmE.s:5426   .debug_str:0000000000000a72 .LASF206
     /tmp/ccXQ0lmE.s:5280   .debug_str:0000000000000563 .LASF207
     /tmp/ccXQ0lmE.s:5680   .debug_str:0000000000001299 .LASF209
     /tmp/ccXQ0lmE.s:5540   .debug_str:0000000000000e5d .LASF210
     /tmp/ccXQ0lmE.s:5336   .debug_str:0000000000000754 .LASF211
     /tmp/ccXQ0lmE.s:5194   .debug_str:00000000000001e7 .LASF212
     /tmp/ccXQ0lmE.s:5538   .debug_str:0000000000000e49 .LASF213
     /tmp/ccXQ0lmE.s:5278   .debug_str:000000000000055e .LASF214
     /tmp/ccXQ0lmE.s:5600   .debug_str:0000000000001008 .LASF215
     /tmp/ccXQ0lmE.s:5632   .debug_str:0000000000001143 .LASF216
     /tmp/ccXQ0lmE.s:5550   .debug_str:0000000000000e8c .LASF217
     /tmp/ccXQ0lmE.s:5152   .debug_str:000000000000001f .LASF218
     /tmp/ccXQ0lmE.s:5564   .debug_str:0000000000000eee .LASF219
     /tmp/ccXQ0lmE.s:5436   .debug_str:0000000000000ad7 .LASF220
     /tmp/ccXQ0lmE.s:5356   .debug_str:000000000000082a .LASF221
     /tmp/ccXQ0lmE.s:5242   .debug_str:000000000000042e .LASF222
     /tmp/ccXQ0lmE.s:5250   .debug_str:0000000000000473 .LASF223
     /tmp/ccXQ0lmE.s:5466   .debug_str:0000000000000bfa .LASF224
     /tmp/ccXQ0lmE.s:5644   .debug_str:0000000000001183 .LASF225
     /tmp/ccXQ0lmE.s:5148   .debug_str:0000000000000000 .LASF226
     /tmp/ccXQ0lmE.s:5346   .debug_str:00000000000007b6 .LASF227
     /tmp/ccXQ0lmE.s:5678   .debug_str:000000000000128a .LASF228
     /tmp/ccXQ0lmE.s:5626   .debug_str:00000000000010fa .LASF229
     /tmp/ccXQ0lmE.s:5428   .debug_str:0000000000000a7a .LASF230
     /tmp/ccXQ0lmE.s:5256   .debug_str:000000000000049b .LASF231
     /tmp/ccXQ0lmE.s:5488   .debug_str:0000000000000ce1 .LASF232
     /tmp/ccXQ0lmE.s:5524   .debug_str:0000000000000dd3 .LASF233
     /tmp/ccXQ0lmE.s:5406   .debug_str:00000000000009b8 .LASF234
     /tmp/ccXQ0lmE.s:5364   .debug_str:0000000000000868 .LASF235
     /tmp/ccXQ0lmE.s:5778   .debug_str:000000000000158d .LASF236
     /tmp/ccXQ0lmE.s:5162   .debug_str:0000000000000071 .LASF237
     /tmp/ccXQ0lmE.s:5424   .debug_str:0000000000000a58 .LASF238
     /tmp/ccXQ0lmE.s:5382   .debug_str:00000000000008f3 .LASF239
     /tmp/ccXQ0lmE.s:5478   .debug_str:0000000000000c5b .LASF240
     /tmp/ccXQ0lmE.s:5724   .debug_str:00000000000013c0 .LASF241
     /tmp/ccXQ0lmE.s:5570   .debug_str:0000000000000f20 .LASF242
     /tmp/ccXQ0lmE.s:5760   .debug_str:00000000000014e8 .LASF243
     /tmp/ccXQ0lmE.s:5184   .debug_str:0000000000000160 .LASF244
     /tmp/ccXQ0lmE.s:5640   .debug_str:0000000000001169 .LASF245
     /tmp/ccXQ0lmE.s:5734   .debug_str:0000000000001436 .LASF246
     /tmp/ccXQ0lmE.s:5512   .debug_str:0000000000000d93 .LASF247
     /tmp/ccXQ0lmE.s:5674   .debug_str:000000000000126d .LASF248
     /tmp/ccXQ0lmE.s:5312   .debug_str:0000000000000698 .LASF249
     /tmp/ccXQ0lmE.s:5216   .debug_str:00000000000002a4 .LASF250
     /tmp/ccXQ0lmE.s:5182   .debug_str:000000000000013d .LASF251
GAS LISTING /tmp/ccXQ0lmE.s 			page 49


     /tmp/ccXQ0lmE.s:5470   .debug_str:0000000000000c0b .LASF252
     /tmp/ccXQ0lmE.s:5332   .debug_str:0000000000000739 .LASF253
     /tmp/ccXQ0lmE.s:5306   .debug_str:0000000000000655 .LASF254
     /tmp/ccXQ0lmE.s:5492   .debug_str:0000000000000cf6 .LASF255
     /tmp/ccXQ0lmE.s:5638   .debug_str:000000000000115e .LASF256
     /tmp/ccXQ0lmE.s:5518   .debug_str:0000000000000db6 .LASF257
     /tmp/ccXQ0lmE.s:5702   .debug_str:0000000000001329 .LASF258
     /tmp/ccXQ0lmE.s:5646   .debug_str:000000000000118e .LASF259
     /tmp/ccXQ0lmE.s:5698   .debug_str:000000000000130a .LASF260
     /tmp/ccXQ0lmE.s:5178   .debug_str:000000000000011e .LASF261
     /tmp/ccXQ0lmE.s:5452   .debug_str:0000000000000b80 .LASF262
     /tmp/ccXQ0lmE.s:5516   .debug_str:0000000000000daa .LASF263
     /tmp/ccXQ0lmE.s:5606   .debug_str:0000000000001040 .LASF264
     /tmp/ccXQ0lmE.s:5300   .debug_str:000000000000060f .LASF265
     /tmp/ccXQ0lmE.s:5692   .debug_str:00000000000012ea .LASF266
     /tmp/ccXQ0lmE.s:5370   .debug_str:000000000000088b .LASF267
     /tmp/ccXQ0lmE.s:5690   .debug_str:00000000000012d8 .LASF268
     /tmp/ccXQ0lmE.s:5456   .debug_str:0000000000000b94 .LASF269
     /tmp/ccXQ0lmE.s:5206   .debug_str:000000000000025c .LASF270
     /tmp/ccXQ0lmE.s:5220   .debug_str:000000000000035e .LASF271
     /tmp/ccXQ0lmE.s:5292   .debug_str:00000000000005ca .LASF272
     /tmp/ccXQ0lmE.s:5308   .debug_str:0000000000000669 .LASF273
     /tmp/ccXQ0lmE.s:5188   .debug_str:0000000000000197 .LASF274
     /tmp/ccXQ0lmE.s:5710   .debug_str:000000000000135e .LASF275
     /tmp/ccXQ0lmE.s:5446   .debug_str:0000000000000b36 .LASF276
     /tmp/ccXQ0lmE.s:5732   .debug_str:000000000000141d .LASF277
     /tmp/ccXQ0lmE.s:5430   .debug_str:0000000000000a8b .LASF278
     /tmp/ccXQ0lmE.s:5414   .debug_str:00000000000009e3 .LASF279
     /tmp/ccXQ0lmE.s:5766   .debug_str:0000000000001517 .LASF280
     /tmp/ccXQ0lmE.s:5314   .debug_str:00000000000006bf .LASF281
     /tmp/ccXQ0lmE.s:5654   .debug_str:00000000000011b8 .LASF282
     /tmp/ccXQ0lmE.s:5326   .debug_str:0000000000000705 .LASF283
     /tmp/ccXQ0lmE.s:5750   .debug_str:00000000000014ae .LASF284
     /tmp/ccXQ0lmE.s:5344   .debug_str:00000000000007a5 .LASF285
     /tmp/ccXQ0lmE.s:5390   .debug_str:0000000000000935 .LASF286
     /tmp/ccXQ0lmE.s:5416   .debug_str:00000000000009fb .LASF287
     /tmp/ccXQ0lmE.s:5774   .debug_str:000000000000157a .LASF288
     /tmp/ccXQ0lmE.s:5192   .debug_str:00000000000001cb .LASF289
     /tmp/ccXQ0lmE.s:5672   .debug_str:0000000000001258 .LASF290
     /tmp/ccXQ0lmE.s:5190   .debug_str:00000000000001b2 .LASF291
     /tmp/ccXQ0lmE.s:1185   .text:0000000000000544 .LFB39
     /tmp/ccXQ0lmE.s:1202   .text:000000000000055c .LFE39
     /tmp/ccXQ0lmE.s:1132   .text:000000000000050c .LFB38
     /tmp/ccXQ0lmE.s:1179   .text:0000000000000544 .LFE38
     /tmp/ccXQ0lmE.s:5684   .debug_str:00000000000012b6 .LASF292
     /tmp/ccXQ0lmE.s:1111   .text:00000000000004fc .LFB37
     /tmp/ccXQ0lmE.s:1126   .text:000000000000050c .LFE37
     /tmp/ccXQ0lmE.s:1078   .text:00000000000004dc .LFB36
     /tmp/ccXQ0lmE.s:1105   .text:00000000000004fc .LFE36
     /tmp/ccXQ0lmE.s:1046   .text:00000000000004b4 .LFB35
     /tmp/ccXQ0lmE.s:1072   .text:00000000000004dc .LFE35
     /tmp/ccXQ0lmE.s:4964   .debug_loc:0000000000000000 .LLST14
     /tmp/ccXQ0lmE.s:1061   .text:00000000000004cc .LVL77
     /tmp/ccXQ0lmE.s:10     .text:0000000000000000 .LFB34
     /tmp/ccXQ0lmE.s:36     .text:0000000000000028 .LFE34
     /tmp/ccXQ0lmE.s:25     .text:0000000000000018 .LVL0
     /tmp/ccXQ0lmE.s:1016   .text:00000000000004b4 .LFE33
GAS LISTING /tmp/ccXQ0lmE.s 			page 50


     /tmp/ccXQ0lmE.s:5334   .debug_str:000000000000074c .LASF293
     /tmp/ccXQ0lmE.s:4978   .debug_loc:0000000000000039 .LLST13
     /tmp/ccXQ0lmE.s:910    .text:00000000000003cc .LVL61
     /tmp/ccXQ0lmE.s:915    .text:00000000000003d8 .LVL62
     /tmp/ccXQ0lmE.s:920    .text:00000000000003e8 .LVL63
     /tmp/ccXQ0lmE.s:929    .text:0000000000000408 .LVL64
     /tmp/ccXQ0lmE.s:936    .text:0000000000000414 .LVL65
     /tmp/ccXQ0lmE.s:943    .text:0000000000000420 .LVL66
     /tmp/ccXQ0lmE.s:949    .text:000000000000042c .LVL67
     /tmp/ccXQ0lmE.s:961    .text:000000000000044c .LVL68
     /tmp/ccXQ0lmE.s:969    .text:0000000000000460 .LVL69
     /tmp/ccXQ0lmE.s:975    .text:000000000000046c .LVL70
     /tmp/ccXQ0lmE.s:983    .text:0000000000000478 .LVL71
     /tmp/ccXQ0lmE.s:987    .text:0000000000000480 .LVL72
     /tmp/ccXQ0lmE.s:1009   .text:00000000000004a8 .LVL74
     /tmp/ccXQ0lmE.s:1013   .text:00000000000004b4 .LVL75
     /tmp/ccXQ0lmE.s:236    .text:00000000000000ec .LFB32
     /tmp/ccXQ0lmE.s:878    .text:00000000000003ac .LFE32
     /tmp/ccXQ0lmE.s:5170   .debug_str:00000000000000e4 .LASF294
     /tmp/ccXQ0lmE.s:4985   .debug_loc:000000000000005c .LLST2
     /tmp/ccXQ0lmE.s:5118   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccXQ0lmE.s:5660   .debug_str:00000000000011df .LASF295
     /tmp/ccXQ0lmE.s:5594   .debug_str:0000000000000fec .LASF296
     /tmp/ccXQ0lmE.s:538    .text:0000000000000218 .LBB61
     /tmp/ccXQ0lmE.s:554    .text:0000000000000224 .LBE61
     /tmp/ccXQ0lmE.s:558    .text:0000000000000228 .LBB63
     /tmp/ccXQ0lmE.s:573    .text:0000000000000234 .LBE63
     /tmp/ccXQ0lmE.s:578    .text:0000000000000238 .LBB65
     /tmp/ccXQ0lmE.s:590    .text:0000000000000240 .LBE65
     /tmp/ccXQ0lmE.s:5006   .debug_loc:00000000000000ba .LLST9
     /tmp/ccXQ0lmE.s:612    .text:000000000000027c .LBB67
     /tmp/ccXQ0lmE.s:620    .text:0000000000000280 .LBE67
     /tmp/ccXQ0lmE.s:5014   .debug_loc:00000000000000de .LLST10
     /tmp/ccXQ0lmE.s:630    .text:000000000000028c .LBB69
     /tmp/ccXQ0lmE.s:641    .text:0000000000000290 .LBE69
     /tmp/ccXQ0lmE.s:5021   .debug_loc:0000000000000101 .LLST11
     /tmp/ccXQ0lmE.s:646    .text:0000000000000294 .LBB71
     /tmp/ccXQ0lmE.s:657    .text:0000000000000298 .LBE71
     /tmp/ccXQ0lmE.s:5028   .debug_loc:0000000000000124 .LLST12
     /tmp/ccXQ0lmE.s:606    .text:0000000000000270 .LVL29
     /tmp/ccXQ0lmE.s:685    .text:00000000000002b8 .LVL36
     /tmp/ccXQ0lmE.s:5035   .debug_loc:0000000000000147 .LLST6
     /tmp/ccXQ0lmE.s:5546   .debug_str:0000000000000e75 .LASF297
     /tmp/ccXQ0lmE.s:5046   .debug_loc:000000000000017d .LLST7
     /tmp/ccXQ0lmE.s:5053   .debug_loc:00000000000001a0 .LLST8
     /tmp/ccXQ0lmE.s:703    .text:00000000000002d8 .LVL39
     /tmp/ccXQ0lmE.s:708    .text:00000000000002e4 .LVL40
     /tmp/ccXQ0lmE.s:524    .text:000000000000020c .LVL23
     /tmp/ccXQ0lmE.s:526    .text:0000000000000214 .LVL24
     /tmp/ccXQ0lmE.s:5068   .debug_loc:00000000000001e9 .LLST3
     /tmp/ccXQ0lmE.s:317    .text:0000000000000160 .LBB47
     /tmp/ccXQ0lmE.s:332    .text:000000000000016c .LBE47
     /tmp/ccXQ0lmE.s:338    .text:0000000000000174 .LBB49
     /tmp/ccXQ0lmE.s:353    .text:0000000000000180 .LBE49
     /tmp/ccXQ0lmE.s:727    .text:00000000000002f4 .LBB51
     /tmp/ccXQ0lmE.s:738    .text:00000000000002f8 .LBE51
     /tmp/ccXQ0lmE.s:5075   .debug_loc:000000000000020c .LLST4
GAS LISTING /tmp/ccXQ0lmE.s 			page 51


     /tmp/ccXQ0lmE.s:743    .text:00000000000002fc .LBB53
     /tmp/ccXQ0lmE.s:754    .text:0000000000000300 .LBE53
     /tmp/ccXQ0lmE.s:5082   .debug_loc:000000000000022f .LLST5
     /tmp/ccXQ0lmE.s:720    .text:00000000000002f0 .LVL42
     /tmp/ccXQ0lmE.s:768    .text:000000000000030c .LVL47
     /tmp/ccXQ0lmE.s:776    .text:0000000000000318 .LVL48
     /tmp/ccXQ0lmE.s:784    .text:0000000000000324 .LVL49
     /tmp/ccXQ0lmE.s:792    .text:0000000000000330 .LVL50
     /tmp/ccXQ0lmE.s:800    .text:000000000000033c .LVL51
     /tmp/ccXQ0lmE.s:808    .text:0000000000000348 .LVL52
     /tmp/ccXQ0lmE.s:816    .text:0000000000000354 .LVL53
     /tmp/ccXQ0lmE.s:824    .text:0000000000000360 .LVL54
     /tmp/ccXQ0lmE.s:832    .text:000000000000036c .LVL55
     /tmp/ccXQ0lmE.s:840    .text:0000000000000378 .LVL56
     /tmp/ccXQ0lmE.s:848    .text:0000000000000384 .LVL57
     /tmp/ccXQ0lmE.s:856    .text:0000000000000390 .LVL58
     /tmp/ccXQ0lmE.s:864    .text:000000000000039c .LVL59
     /tmp/ccXQ0lmE.s:872    .text:00000000000003a8 .LVL60
     /tmp/ccXQ0lmE.s:270    .text:0000000000000124 .LBB43
     /tmp/ccXQ0lmE.s:286    .text:0000000000000130 .LBE43
     /tmp/ccXQ0lmE.s:201    .text:00000000000000cc .LFB31
     /tmp/ccXQ0lmE.s:230    .text:00000000000000ec .LFE31
     /tmp/ccXQ0lmE.s:132    .text:0000000000000084 .LFB30
     /tmp/ccXQ0lmE.s:164    .text:00000000000000a4 .LFE30
     /tmp/ccXQ0lmE.s:143    .text:0000000000000090 .LBB41
     /tmp/ccXQ0lmE.s:155    .text:0000000000000098 .LBE41
     /tmp/ccXQ0lmE.s:5089   .debug_loc:0000000000000252 .LLST1
     /tmp/ccXQ0lmE.s:94     .text:0000000000000064 .LFB29
     /tmp/ccXQ0lmE.s:126    .text:0000000000000084 .LFE29
     /tmp/ccXQ0lmE.s:105    .text:0000000000000070 .LBB39
     /tmp/ccXQ0lmE.s:117    .text:0000000000000078 .LBE39
     /tmp/ccXQ0lmE.s:5097   .debug_loc:0000000000000276 .LLST0
     /tmp/ccXQ0lmE.s:170    .text:00000000000000a4 .LFB28
     /tmp/ccXQ0lmE.s:195    .text:00000000000000cc .LFE28
     /tmp/ccXQ0lmE.s:184    .text:00000000000000bc .LVL9
     /tmp/ccXQ0lmE.s:42     .text:0000000000000028 .LFB27
     /tmp/ccXQ0lmE.s:88     .text:0000000000000064 .LFE27
     /tmp/ccXQ0lmE.s:57     .text:0000000000000040 .LBB37
     /tmp/ccXQ0lmE.s:69     .text:0000000000000044 .LBE37
     /tmp/ccXQ0lmE.s:73     .text:000000000000004c .LVL3
     /tmp/ccXQ0lmE.s:77     .text:0000000000000054 .LVL4
     /tmp/ccXQ0lmE.s:5266   .debug_str:000000000000050e .LASF317
     /tmp/ccXQ0lmE.s:5196   .debug_str:00000000000001f3 .LASF298
     /tmp/ccXQ0lmE.s:5738   .debug_str:000000000000144c .LASF299
     /tmp/ccXQ0lmE.s:5298   .debug_str:0000000000000603 .LASF300
     /tmp/ccXQ0lmE.s:5558   .debug_str:0000000000000ec7 .LASF302
     /tmp/ccXQ0lmE.s:5528   .debug_str:0000000000000dff .LASF301
     /tmp/ccXQ0lmE.s:5510   .debug_str:0000000000000d8a .LASF303
     /tmp/ccXQ0lmE.s:5264   .debug_str:0000000000000502 .LASF304
     /tmp/ccXQ0lmE.s:5318   .debug_str:00000000000006df .LASF305
     /tmp/ccXQ0lmE.s:5706   .debug_str:0000000000001343 .LASF306
     /tmp/ccXQ0lmE.s:5622   .debug_str:00000000000010e0 .LASF307
     /tmp/ccXQ0lmE.s:5752   .debug_str:00000000000014bb .LASF308
     /tmp/ccXQ0lmE.s:5650   .debug_str:000000000000119f .LASF318
     /tmp/ccXQ0lmE.s:5200   .debug_str:0000000000000220 .LASF319
     /tmp/ccXQ0lmE.s:5422   .debug_str:0000000000000a4d .LASF309
     /tmp/ccXQ0lmE.s:5248   .debug_str:0000000000000465 .LASF310
GAS LISTING /tmp/ccXQ0lmE.s 			page 52


     /tmp/ccXQ0lmE.s:1049   .text:00000000000004b4 .LVL76
     /tmp/ccXQ0lmE.s:997    .text:000000000000048c .LVL73
     /tmp/ccXQ0lmE.s:284    .text:0000000000000130 .LVL10
     /tmp/ccXQ0lmE.s:298    .text:0000000000000154 .LVL11
     /tmp/ccXQ0lmE.s:314    .text:0000000000000160 .LVL12
     /tmp/ccXQ0lmE.s:439    .text:00000000000001a8 .LVL14
     /tmp/ccXQ0lmE.s:455    .text:00000000000001c0 .LVL15
     /tmp/ccXQ0lmE.s:529    .text:0000000000000218 .LVL25
     /tmp/ccXQ0lmE.s:547    .text:000000000000021c .LVL26
     /tmp/ccXQ0lmE.s:577    .text:0000000000000238 .LVL27
     /tmp/ccXQ0lmE.s:587    .text:0000000000000240 .LVL28
     /tmp/ccXQ0lmE.s:611    .text:000000000000027c .LVL30
     /tmp/ccXQ0lmE.s:618    .text:0000000000000280 .LVL31
     /tmp/ccXQ0lmE.s:629    .text:000000000000028c .LVL32
     /tmp/ccXQ0lmE.s:638    .text:0000000000000290 .LVL33
     /tmp/ccXQ0lmE.s:645    .text:0000000000000294 .LVL34
     /tmp/ccXQ0lmE.s:654    .text:0000000000000298 .LVL35
     /tmp/ccXQ0lmE.s:457    .text:00000000000001c4 .LVL16
     /tmp/ccXQ0lmE.s:475    .text:00000000000001d0 .LVL17
     /tmp/ccXQ0lmE.s:489    .text:00000000000001e4 .LVL19
     /tmp/ccXQ0lmE.s:513    .text:00000000000001fc .LVL21
     /tmp/ccXQ0lmE.s:481    .text:00000000000001d4 .LVL18
     /tmp/ccXQ0lmE.s:509    .text:00000000000001f4 .LVL20
     /tmp/ccXQ0lmE.s:517    .text:0000000000000204 .LVL22
     /tmp/ccXQ0lmE.s:687    .text:00000000000002bc .LVL37
     /tmp/ccXQ0lmE.s:701    .text:00000000000002d0 .LVL38
     /tmp/ccXQ0lmE.s:710    .text:00000000000002e8 .LVL41
     /tmp/ccXQ0lmE.s:360    .text:0000000000000190 .LVL13
     /tmp/ccXQ0lmE.s:726    .text:00000000000002f4 .LVL43
     /tmp/ccXQ0lmE.s:735    .text:00000000000002f8 .LVL44
     /tmp/ccXQ0lmE.s:742    .text:00000000000002fc .LVL45
     /tmp/ccXQ0lmE.s:751    .text:0000000000000300 .LVL46
     /tmp/ccXQ0lmE.s:142    .text:0000000000000090 .LVL7
     /tmp/ccXQ0lmE.s:152    .text:0000000000000098 .LVL8
     /tmp/ccXQ0lmE.s:104    .text:0000000000000070 .LVL5
     /tmp/ccXQ0lmE.s:114    .text:0000000000000078 .LVL6
     /tmp/ccXQ0lmE.s:1229   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccXQ0lmE.s:306    .text:000000000000015c .LBB46
     /tmp/ccXQ0lmE.s:441    .text:00000000000001a8 .LBE46
     /tmp/ccXQ0lmE.s:715    .text:00000000000002e8 .LBB75
     /tmp/ccXQ0lmE.s:757    .text:0000000000000300 .LBE75
     /tmp/ccXQ0lmE.s:763    .text:0000000000000304 .LBB76
     /tmp/ccXQ0lmE.s:875    .text:00000000000003ac .LBE76
     /tmp/ccXQ0lmE.s:451    .text:00000000000001b8 .LBB55
     /tmp/ccXQ0lmE.s:531    .text:0000000000000218 .LBE55
     /tmp/ccXQ0lmE.s:690    .text:00000000000002bc .LBB74
     /tmp/ccXQ0lmE.s:714    .text:00000000000002e8 .LBE74
     /tmp/ccXQ0lmE.s:484    .text:00000000000001d8 .LBB57
     /tmp/ccXQ0lmE.s:519    .text:0000000000000204 .LBE57
     /tmp/ccXQ0lmE.s:692    .text:00000000000002bc .LBB58
     /tmp/ccXQ0lmE.s:712    .text:00000000000002e8 .LBE58
     /tmp/ccXQ0lmE.s:536    .text:0000000000000218 .LBB60
     /tmp/ccXQ0lmE.s:661    .text:0000000000000298 .LBE60
     /tmp/ccXQ0lmE.s:678    .text:00000000000002ac .LBB73
     /tmp/ccXQ0lmE.s:689    .text:00000000000002bc .LBE73
     /tmp/ccXQ0lmE.s:1019   .gcc_except_table:0000000000000000 .LLSDA33

GAS LISTING /tmp/ccXQ0lmE.s 			page 53


UNDEFINED SYMBOLS
_Z8userMainv
_ZN5Riscv14supervisorTrapEv
_ZN3PCB10initializeEv
_ZN8KConsole10initializeEv
_ZN3PCB10savedRegA4E
_ZN3PCB7runningE
CONSOLE_STATUS
CONSOLE_TX_DATA
_ZN8KConsole11pendingGetcE
plic_claim
plic_complete
_ZN3PCB16timeSliceCounterE
_ZN12SleepPCBList13tryToWakePCBsEv
_ZN3PCB8dispatchEv
_ZN8KConsole17putCharacterInputEc
_ZN8KConsole18putCharacterOutputEc
_ZN15MemoryAllocator15memAllocHandlerEv
_ZN15MemoryAllocator14memFreeHandlerEv
_ZN3PCB20threadMakePCBHandlerEv
_ZN3PCB19threadCreateHandlerEv
_ZN3PCB18threadStartHandlerEv
_ZN3PCB21threadDispatchHandlerEv
_ZN3PCB17threadExitHandlerEv
_ZN3PCB18threadSleepHandlerEv
_ZN10KSemaphore14semOpenHandlerEv
_ZN10KSemaphore14semWaitHandlerEv
_ZN10KSemaphore16semSignalHandlerEv
_ZN10KSemaphore15semCloseHandlerEv
_ZN8KConsole11getcHandlerEv
_ZN8KConsole11putcHandlerEv
_ZN8KConsole14getCharHandlerEv
_Z7kmallocm
_ZN3PCBnwEm
_ZN3PCBC1EPFvPvES0_S0_m
_ZN3PCB5startEv
_ZN3PCB10isFinishedEv
thread_dispatch
_Z11printStringPKc
_ZN3PCB10consolePCBE
_ZN3PCBdlEPv
_Unwind_Resume
__gxx_personality_v0
_Z7myTestsv
