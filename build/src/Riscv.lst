GAS LISTING /tmp/ccRjjh6e.s 			page 1


   1              		.file	"Riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv15userMainWrapperEPv
   9              	_ZN5Riscv15userMainWrapperEPv:
  10              	.LFB35:
  11              		.file 1 "src/Riscv.cpp"
   1:src/Riscv.cpp **** //
   2:src/Riscv.cpp **** // Created by os on 4/27/22.
   3:src/Riscv.cpp **** //
   4:src/Riscv.cpp **** 
   5:src/Riscv.cpp **** #include "../h/Riscv.hpp"
   6:src/Riscv.cpp **** #include "../h/MemoryAllocator.hpp"
   7:src/Riscv.cpp **** #include "../h/PCB.hpp"
   8:src/Riscv.cpp **** #include "../lib/console.h"
   9:src/Riscv.cpp **** #include "../h/syscall_cpp.hpp"
  10:src/Riscv.cpp **** #include "../h/SleepPCBList.hpp"
  11:src/Riscv.cpp **** #include "../h/KConsole.hpp"
  12:src/Riscv.cpp **** #include "../h/Tests.hpp"
  13:src/Riscv.cpp **** #include "../test/userMain.hpp"
  14:src/Riscv.cpp **** 
  15:src/Riscv.cpp **** void Riscv::initSystem()
  16:src/Riscv.cpp **** {
  17:src/Riscv.cpp ****     w_stvec((uint64)&Riscv::supervisorTrap);
  18:src/Riscv.cpp ****     PCB::initialize();
  19:src/Riscv.cpp ****     KConsole::initialize();
  20:src/Riscv.cpp **** }
  21:src/Riscv.cpp **** 
  22:src/Riscv.cpp **** void Riscv::endSystem()
  23:src/Riscv.cpp **** {
  24:src/Riscv.cpp ****     //todo
  25:src/Riscv.cpp ****     Riscv::disableInterrupts();
  26:src/Riscv.cpp **** }
  27:src/Riscv.cpp **** 
  28:src/Riscv.cpp **** 
  29:src/Riscv.cpp **** void Riscv::enableInterrupts() {
  30:src/Riscv.cpp ****     ms_sstatus(Riscv::SSTATUS_SIE);
  31:src/Riscv.cpp **** }
  32:src/Riscv.cpp **** 
  33:src/Riscv.cpp **** void Riscv::disableInterrupts()
  34:src/Riscv.cpp **** {
  35:src/Riscv.cpp ****     mc_sstatus(Riscv::SSTATUS_SIE);
  36:src/Riscv.cpp **** }
  37:src/Riscv.cpp **** 
  38:src/Riscv.cpp **** void Riscv::popSppSpie()
  39:src/Riscv.cpp **** {
  40:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
  41:src/Riscv.cpp ****     __asm__ volatile ("sret");
  42:src/Riscv.cpp **** }
  43:src/Riscv.cpp **** 
  44:src/Riscv.cpp **** void Riscv::printString(const char *string)
  45:src/Riscv.cpp **** {
  46:src/Riscv.cpp ****     uint64 sstatus = r_sstatus();
  47:src/Riscv.cpp ****     mc_sstatus(SSTATUS_SIE);
GAS LISTING /tmp/ccRjjh6e.s 			page 2


  48:src/Riscv.cpp ****     while (*string != '\0')
  49:src/Riscv.cpp ****     {
  50:src/Riscv.cpp ****         __putc(*string);
  51:src/Riscv.cpp ****         string++;
  52:src/Riscv.cpp ****     }
  53:src/Riscv.cpp ****     ms_sstatus(sstatus & SSTATUS_SIE ? SSTATUS_SIE : 0);
  54:src/Riscv.cpp **** }
  55:src/Riscv.cpp **** 
  56:src/Riscv.cpp **** void Riscv::printInteger(uint64 num)
  57:src/Riscv.cpp **** {
  58:src/Riscv.cpp ****     uint64 sstatus = r_sstatus();
  59:src/Riscv.cpp ****     mc_sstatus(SSTATUS_SIE);
  60:src/Riscv.cpp ****     static char digits[] = "0123456789";
  61:src/Riscv.cpp ****     char buf[16];
  62:src/Riscv.cpp ****     int i, neg;
  63:src/Riscv.cpp ****     uint x;
  64:src/Riscv.cpp **** 
  65:src/Riscv.cpp ****     neg = 0;
  66:src/Riscv.cpp ****     if(num < 0)
  67:src/Riscv.cpp ****     {
  68:src/Riscv.cpp ****         neg = 1;
  69:src/Riscv.cpp ****         x = -num;
  70:src/Riscv.cpp ****     }
  71:src/Riscv.cpp ****     else
  72:src/Riscv.cpp ****         x = num;
  73:src/Riscv.cpp **** 
  74:src/Riscv.cpp ****     i = 0;
  75:src/Riscv.cpp ****     do
  76:src/Riscv.cpp ****     {
  77:src/Riscv.cpp ****         buf[i++] = digits[x%10];
  78:src/Riscv.cpp ****     }while((x/=10) != 0);
  79:src/Riscv.cpp ****     if(neg)
  80:src/Riscv.cpp ****         buf[i++] = '-';
  81:src/Riscv.cpp **** 
  82:src/Riscv.cpp ****     while(--i >= 0)
  83:src/Riscv.cpp ****         __putc(buf[i]);
  84:src/Riscv.cpp **** 
  85:src/Riscv.cpp ****     __putc('\n');
  86:src/Riscv.cpp **** 
  87:src/Riscv.cpp ****     ms_sstatus(sstatus & SSTATUS_SIE ? SSTATUS_SIE : 0);
  88:src/Riscv.cpp **** }
  89:src/Riscv.cpp **** 
  90:src/Riscv.cpp **** void Riscv::handleSupervisorTrap()
  91:src/Riscv.cpp **** {
  92:src/Riscv.cpp ****     __asm__ volatile("mv %0, a4" : "=r"(PCB::savedRegA4));
  93:src/Riscv.cpp **** 
  94:src/Riscv.cpp ****     uint64 scause = Riscv::r_scause();
  95:src/Riscv.cpp **** 
  96:src/Riscv.cpp ****     switch(scause)
  97:src/Riscv.cpp ****     {
  98:src/Riscv.cpp ****         case timerInterrupt:
  99:src/Riscv.cpp ****         {
 100:src/Riscv.cpp ****             uint64 volatile sepc = Riscv::r_sepc();
 101:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 102:src/Riscv.cpp ****             mc_sip(Riscv::SIP_SSIP);
 103:src/Riscv.cpp ****             //Riscv::printString("timerInterrupt\n");
 104:src/Riscv.cpp ****             static uint64 total = 0;
GAS LISTING /tmp/ccRjjh6e.s 			page 3


 105:src/Riscv.cpp ****             total++;
 106:src/Riscv.cpp **** 
 107:src/Riscv.cpp ****             PCB::timeSliceCounter++;
 108:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
 109:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
 110:src/Riscv.cpp ****             {
 111:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 112:src/Riscv.cpp ****                 PCB::dispatch();
 113:src/Riscv.cpp ****             }
 114:src/Riscv.cpp **** 
 115:src/Riscv.cpp ****             Riscv::w_sstatus(sstatus);
 116:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 117:src/Riscv.cpp **** 
 118:src/Riscv.cpp ****             break;
 119:src/Riscv.cpp ****         }
 120:src/Riscv.cpp ****         case hwInterrupt: // todo
 121:src/Riscv.cpp ****         {
 122:src/Riscv.cpp ****             uint64 x = CONSOLE_STATUS;
 123:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0"::"r"(x));
 124:src/Riscv.cpp ****             __asm__ volatile("lb a1, 0(a0)");
 125:src/Riscv.cpp ****             uint64 operation;
 126:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" :  "=r"(operation));
 127:src/Riscv.cpp ****             if(operation & KConsole::STATUS_READ_MASK)
 128:src/Riscv.cpp ****             {
 129:src/Riscv.cpp ****                 x = CONSOLE_TX_DATA;
 130:src/Riscv.cpp ****                 __asm__ volatile("mv a0, %0"::"r"(x));
 131:src/Riscv.cpp ****                 __asm__ volatile("lb a1,0(a0)");
 132:src/Riscv.cpp ****                 char c;
 133:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" :  "=r"(c));
 134:src/Riscv.cpp ****                 //putCharacterOutput(c);
 135:src/Riscv.cpp **** 
 136:src/Riscv.cpp ****                 KConsole::putCharacterInput(c);
 137:src/Riscv.cpp ****                 KConsole::putCharacterOutput(c);
 138:src/Riscv.cpp ****             }
 139:src/Riscv.cpp **** 
 140:src/Riscv.cpp ****             plic_complete(plic_claim());
 141:src/Riscv.cpp **** 
 142:src/Riscv.cpp ****             break;
 143:src/Riscv.cpp ****         }
 144:src/Riscv.cpp ****         case operationInterrupt: // todo
 145:src/Riscv.cpp ****         {
 146:src/Riscv.cpp ****             break;
 147:src/Riscv.cpp ****         }
 148:src/Riscv.cpp ****         case addrReadInterrupt: // todo
 149:src/Riscv.cpp ****         {
 150:src/Riscv.cpp ****             break;
 151:src/Riscv.cpp ****         }
 152:src/Riscv.cpp ****         case addrWriteInterrupt: // todo
 153:src/Riscv.cpp ****         {
 154:src/Riscv.cpp ****             break;
 155:src/Riscv.cpp ****         }
 156:src/Riscv.cpp ****         case ecallSystemInterupt:
 157:src/Riscv.cpp ****         case ecallUserInterrupt:
 158:src/Riscv.cpp ****         {
 159:src/Riscv.cpp ****             uint64 operation;
 160:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
 161:src/Riscv.cpp **** 
GAS LISTING /tmp/ccRjjh6e.s 			page 4


 162:src/Riscv.cpp ****             uint64 volatile sepc = Riscv::r_sepc() + 4;
 163:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 164:src/Riscv.cpp **** 
 165:src/Riscv.cpp ****             switch(operation)
 166:src/Riscv.cpp ****             {
 167:src/Riscv.cpp ****                 case MemoryAllocator::MEM_ALLOC:
 168:src/Riscv.cpp ****                     MemoryAllocator::memAllocHandler();
 169:src/Riscv.cpp ****                     break;
 170:src/Riscv.cpp ****                 case MemoryAllocator::MEM_FREE:
 171:src/Riscv.cpp ****                     MemoryAllocator::memFreeHandler();
 172:src/Riscv.cpp ****                     break;
 173:src/Riscv.cpp ****                 case PCB::THREAD_MAKE_PCB:
 174:src/Riscv.cpp ****                     PCB::threadMakePCBHandler();
 175:src/Riscv.cpp ****                     break;
 176:src/Riscv.cpp ****                 case PCB::THREAD_CREATE:
 177:src/Riscv.cpp ****                     PCB::threadCreateHandler();
 178:src/Riscv.cpp ****                     break;
 179:src/Riscv.cpp ****                 case PCB::THREAD_START:
 180:src/Riscv.cpp ****                     PCB::threadStartHandler();
 181:src/Riscv.cpp ****                     break;
 182:src/Riscv.cpp ****                 case PCB::THREAD_DISPATCH:
 183:src/Riscv.cpp ****                     PCB::threadDispatchHandler();
 184:src/Riscv.cpp ****                     break;
 185:src/Riscv.cpp ****                 case PCB::THREAD_EXIT:
 186:src/Riscv.cpp ****                     PCB::threadExitHandler();
 187:src/Riscv.cpp ****                     break;
 188:src/Riscv.cpp ****                 case PCB::TIME_SLEEP:
 189:src/Riscv.cpp ****                     PCB::threadSleepHandler();
 190:src/Riscv.cpp ****                     break;
 191:src/Riscv.cpp ****                 case KSemaphore::SEM_OPEN:
 192:src/Riscv.cpp ****                     KSemaphore::semOpenHandler();
 193:src/Riscv.cpp ****                     break;
 194:src/Riscv.cpp ****                 case KSemaphore::SEM_WAIT:
 195:src/Riscv.cpp ****                     KSemaphore::semWaitHandler();
 196:src/Riscv.cpp ****                     break;
 197:src/Riscv.cpp ****                 case KSemaphore::SEM_SIGNAL:
 198:src/Riscv.cpp ****                     KSemaphore::semSignalHandler();
 199:src/Riscv.cpp ****                     break;
 200:src/Riscv.cpp ****                 case KSemaphore::SEM_CLOSE:
 201:src/Riscv.cpp ****                     KSemaphore::semCloseHandler();
 202:src/Riscv.cpp ****                     break;
 203:src/Riscv.cpp ****                 case KConsole::CONSOLE_GETC:
 204:src/Riscv.cpp ****                     KConsole::getcHandler();
 205:src/Riscv.cpp ****                     break;
 206:src/Riscv.cpp ****                 case KConsole::CONSOLE_PUTC:
 207:src/Riscv.cpp ****                     KConsole::putcHandler();
 208:src/Riscv.cpp ****                     break;
 209:src/Riscv.cpp ****             }
 210:src/Riscv.cpp **** 
 211:src/Riscv.cpp ****             Riscv::w_sstatus(sstatus);
 212:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 213:src/Riscv.cpp **** 
 214:src/Riscv.cpp ****             break;
 215:src/Riscv.cpp ****         }
 216:src/Riscv.cpp ****     }
 217:src/Riscv.cpp **** }
 218:src/Riscv.cpp **** 
GAS LISTING /tmp/ccRjjh6e.s 			page 5


 219:src/Riscv.cpp **** void Riscv::kernelMain()
 220:src/Riscv.cpp **** {
 221:src/Riscv.cpp ****     initSystem();
 222:src/Riscv.cpp **** 
 223:src/Riscv.cpp ****     enableInterrupts();
 224:src/Riscv.cpp **** 
 225:src/Riscv.cpp ****     PCB* userPCB = new PCB(&Riscv::userMainWrapper, 0, kmalloc(DEFAULT_STACK_SIZE), DEFAULT_TIME_SL
 226:src/Riscv.cpp ****     //PCB* userPCB = new PCB(&Riscv::myTestsWrapper, 0, kmalloc(DEFAULT_STACK_SIZE), DEFAULT_TIME_S
 227:src/Riscv.cpp ****     userPCB->start();
 228:src/Riscv.cpp ****     while(!userPCB->isFinished())
 229:src/Riscv.cpp ****     {
 230:src/Riscv.cpp ****         thread_dispatch();
 231:src/Riscv.cpp ****     }
 232:src/Riscv.cpp **** 
 233:src/Riscv.cpp **** 
 234:src/Riscv.cpp ****     disableInterrupts();
 235:src/Riscv.cpp **** 
 236:src/Riscv.cpp ****     endSystem();
 237:src/Riscv.cpp **** 
 238:src/Riscv.cpp ****     Riscv::printString("End...");
 239:src/Riscv.cpp **** }
 240:src/Riscv.cpp **** 
 241:src/Riscv.cpp **** void Riscv::userMainWrapper(void* )
 242:src/Riscv.cpp **** {
  12              		.loc 1 242 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23341100 		sd	ra,8(sp)
  17 0008 23308100 		sd	s0,0(sp)
  18              		.cfi_offset 1, -8
  19              		.cfi_offset 8, -16
  20 000c 13040101 		addi	s0,sp,16
  21              		.cfi_def_cfa 8, 0
 243:src/Riscv.cpp ****     userMain();
  22              		.loc 1 243 5
  23              		.loc 1 243 13 is_stmt 0
  24 0010 97000000 		call	_Z8userMainv@plt
  24      E7800000 
  25              	.LVL0:
 244:src/Riscv.cpp **** }
  26              		.loc 1 244 1
  27 0018 83308100 		ld	ra,8(sp)
  28              		.cfi_restore 1
  29 001c 03340100 		ld	s0,0(sp)
  30              		.cfi_restore 8
  31              		.cfi_def_cfa 2, 16
  32 0020 13010101 		addi	sp,sp,16
  33              		.cfi_def_cfa_offset 0
  34 0024 67800000 		jr	ra
  35              		.cfi_endproc
  36              	.LFE35:
  38              		.align	2
  39              		.globl	_ZN5Riscv10initSystemEv
  41              	_ZN5Riscv10initSystemEv:
  42              	.LFB26:
  16:src/Riscv.cpp ****     w_stvec((uint64)&Riscv::supervisorTrap);
GAS LISTING /tmp/ccRjjh6e.s 			page 6


  43              		.loc 1 16 1 is_stmt 1
  44              		.cfi_startproc
  45 0028 130101FF 		addi	sp,sp,-16
  46              		.cfi_def_cfa_offset 16
  47 002c 23341100 		sd	ra,8(sp)
  48 0030 23308100 		sd	s0,0(sp)
  49              		.cfi_offset 1, -8
  50              		.cfi_offset 8, -16
  51 0034 13040101 		addi	s0,sp,16
  52              		.cfi_def_cfa 8, 0
  17:src/Riscv.cpp ****     PCB::initialize();
  53              		.loc 1 17 5
  17:src/Riscv.cpp ****     PCB::initialize();
  54              		.loc 1 17 12 is_stmt 0
  55 0038 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
  55      83B70700 
  56              	.LVL1:
  57              	.LBB49:
  58              	.LBB50:
  59              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 4/27/22.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_0_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_0_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** class Riscv
  11:src/../h/Riscv.hpp **** {
  12:src/../h/Riscv.hpp **** public:
  13:src/../h/Riscv.hpp ****     static void kernelMain();
  14:src/../h/Riscv.hpp **** 
  15:src/../h/Riscv.hpp ****     static void initSystem();
  16:src/../h/Riscv.hpp ****     static void endSystem();
  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp ****     static void userMainWrapper(void* p);
  19:src/../h/Riscv.hpp **** 
  20:src/../h/Riscv.hpp ****     static void enableInterrupts();
  21:src/../h/Riscv.hpp **** 
  22:src/../h/Riscv.hpp ****     static void disableTimerInterrupts();
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp ****     static void disableInterrupts();
  25:src/../h/Riscv.hpp **** 
  26:src/../h/Riscv.hpp ****     static void printString(char const *string);
  27:src/../h/Riscv.hpp **** 
  28:src/../h/Riscv.hpp ****     static void printInteger(uint64 num);
  29:src/../h/Riscv.hpp **** 
  30:src/../h/Riscv.hpp ****     static void idleRiscv(void* arg);
  31:src/../h/Riscv.hpp **** 
  32:src/../h/Riscv.hpp ****     static void pushRegisters();
  33:src/../h/Riscv.hpp ****     static void popRegisters();
  34:src/../h/Riscv.hpp **** 
  35:src/../h/Riscv.hpp ****     static uint64 r_scause();
  36:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  37:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/ccRjjh6e.s 			page 7


  38:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  39:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
  40:src/../h/Riscv.hpp **** 
  41:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  42:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  43:src/../h/Riscv.hpp **** 
  44:src/../h/Riscv.hpp ****     static uint64 r_stval();
  45:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  46:src/../h/Riscv.hpp **** 
  47:src/../h/Riscv.hpp ****     enum BitMaskSip
  48:src/../h/Riscv.hpp ****     {
  49:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  50:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  51:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9),
  52:src/../h/Riscv.hpp ****     };
  53:src/../h/Riscv.hpp **** 
  54:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  55:src/../h/Riscv.hpp **** 
  56:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  57:src/../h/Riscv.hpp **** 
  58:src/../h/Riscv.hpp ****     static uint64 r_sip();
  59:src/../h/Riscv.hpp **** 
  60:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  61:src/../h/Riscv.hpp **** 
  62:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  63:src/../h/Riscv.hpp ****     {
  64:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  65:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  66:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  67:src/../h/Riscv.hpp ****     };
  68:src/../h/Riscv.hpp **** 
  69:src/../h/Riscv.hpp ****     static void w_a0_sscratch();
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  72:src/../h/Riscv.hpp **** 
  73:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  74:src/../h/Riscv.hpp **** 
  75:src/../h/Riscv.hpp ****     static void mc_sie(uint64 mask);
  76:src/../h/Riscv.hpp **** 
  77:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  78:src/../h/Riscv.hpp **** 
  79:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  80:src/../h/Riscv.hpp **** 
  81:src/../h/Riscv.hpp ****     static uint64 r_sie();
  82:src/../h/Riscv.hpp ****     static void w_sie(uint64 sie);
  83:src/../h/Riscv.hpp ****     static void popSppSpie();
  84:src/../h/Riscv.hpp **** 
  85:src/../h/Riscv.hpp ****     static void supervisorTrap();
  86:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  87:src/../h/Riscv.hpp **** 
  88:src/../h/Riscv.hpp ****     static void myTestsWrapper(void* );
  89:src/../h/Riscv.hpp **** 
  90:src/../h/Riscv.hpp ****     static const uint64 bntOne = 1UL << 63;;
  91:src/../h/Riscv.hpp ****     static const uint64 bntZero = 0UL;
  92:src/../h/Riscv.hpp ****     static const uint64 timerInterrupt = bntOne + 1UL;
  93:src/../h/Riscv.hpp ****     static const uint64 hwInterrupt = bntOne + 9UL;
  94:src/../h/Riscv.hpp ****     static const uint64 operationInterrupt = bntZero + 2UL;
GAS LISTING /tmp/ccRjjh6e.s 			page 8


  95:src/../h/Riscv.hpp ****     static const uint64 addrReadInterrupt = bntZero + 5UL;
  96:src/../h/Riscv.hpp ****     static const uint64 addrWriteInterrupt = bntZero + 7UL;
  97:src/../h/Riscv.hpp ****     static const uint64 ecallUserInterrupt = bntZero + 8UL;
  98:src/../h/Riscv.hpp ****     static const uint64 ecallSystemInterupt = bntZero + 9UL;
  99:src/../h/Riscv.hpp **** };
 100:src/../h/Riscv.hpp **** 
 101:src/../h/Riscv.hpp **** inline void Riscv::mc_sie(uint64 mask)
 102:src/../h/Riscv.hpp **** {
 103:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sie, %0" : :"r"(mask));
 104:src/../h/Riscv.hpp **** }
 105:src/../h/Riscv.hpp **** 
 106:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause() {
 107:src/../h/Riscv.hpp ****     uint64 volatile scause;
 108:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
 109:src/../h/Riscv.hpp ****     return scause;
 110:src/../h/Riscv.hpp **** }
 111:src/../h/Riscv.hpp **** 
 112:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
 113:src/../h/Riscv.hpp ****     __asm__ volatile("csrw scause, %0" : :"r"(scause));
 114:src/../h/Riscv.hpp **** }
 115:src/../h/Riscv.hpp **** 
 116:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc() {
 117:src/../h/Riscv.hpp ****     uint64 volatile sepc;
 118:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 119:src/../h/Riscv.hpp ****     return sepc;
 120:src/../h/Riscv.hpp **** }
 121:src/../h/Riscv.hpp **** 
 122:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
 123:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sepc, %0" : :"r"(sepc));
 124:src/../h/Riscv.hpp **** }
 125:src/../h/Riscv.hpp **** 
 126:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec() {
 127:src/../h/Riscv.hpp ****     uint64 volatile stvec;
 128:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, stvec" : "=r"(stvec));
 129:src/../h/Riscv.hpp ****     return stvec;
 130:src/../h/Riscv.hpp **** }
 131:src/../h/Riscv.hpp **** 
 132:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 133:src/../h/Riscv.hpp ****     __asm__ volatile("csrw stvec, %0" : :"r"(stvec));
  60              		.loc 2 133 5 is_stmt 1
  61              		.loc 2 133 53 is_stmt 0
  62              	#APP
  63              	# 133 "src/../h/Riscv.hpp" 1
 134              	}
  64              		csrw stvec, a5
  65              	# 0 "" 2
  66              	.LVL2:
  67              	#NO_APP
  68              	.LBE50:
  69              	.LBE49:
  18:src/Riscv.cpp ****     KConsole::initialize();
  70              		.loc 1 18 5 is_stmt 1
  18:src/Riscv.cpp ****     KConsole::initialize();
  71              		.loc 1 18 20 is_stmt 0
  72 0044 97000000 		call	_ZN3PCB10initializeEv@plt
  72      E7800000 
  73              	.LVL3:
GAS LISTING /tmp/ccRjjh6e.s 			page 9


  19:src/Riscv.cpp **** }
  74              		.loc 1 19 5 is_stmt 1
  19:src/Riscv.cpp **** }
  75              		.loc 1 19 25 is_stmt 0
  76 004c 97000000 		call	_ZN8KConsole10initializeEv@plt
  76      E7800000 
  77              	.LVL4:
  20:src/Riscv.cpp **** 
  78              		.loc 1 20 1
  79 0054 83308100 		ld	ra,8(sp)
  80              		.cfi_restore 1
  81 0058 03340100 		ld	s0,0(sp)
  82              		.cfi_restore 8
  83              		.cfi_def_cfa 2, 16
  84 005c 13010101 		addi	sp,sp,16
  85              		.cfi_def_cfa_offset 0
  86 0060 67800000 		jr	ra
  87              		.cfi_endproc
  88              	.LFE26:
  90              		.align	2
  91              		.globl	_ZN5Riscv16enableInterruptsEv
  93              	_ZN5Riscv16enableInterruptsEv:
  94              	.LFB28:
  29:src/Riscv.cpp ****     ms_sstatus(Riscv::SSTATUS_SIE);
  95              		.loc 1 29 32 is_stmt 1
  96              		.cfi_startproc
  97 0064 130101FF 		addi	sp,sp,-16
  98              		.cfi_def_cfa_offset 16
  99 0068 23348100 		sd	s0,8(sp)
 100              		.cfi_offset 8, -8
 101 006c 13040101 		addi	s0,sp,16
 102              		.cfi_def_cfa 8, 0
  30:src/Riscv.cpp **** }
 103              		.loc 1 30 5
 104              	.LVL5:
 105              	.LBB51:
 106              	.LBB52:
 135:src/../h/Riscv.hpp **** 
 136:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stval() {
 137:src/../h/Riscv.hpp ****     uint64 volatile stval;
 138:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, stval" : "=r"(stval));
 139:src/../h/Riscv.hpp ****     return stval;
 140:src/../h/Riscv.hpp **** }
 141:src/../h/Riscv.hpp **** 
 142:src/../h/Riscv.hpp **** inline void Riscv::w_sie(uint64 sie)
 143:src/../h/Riscv.hpp **** {
 144:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sie, %0" : :"r"(sie));
 145:src/../h/Riscv.hpp **** }
 146:src/../h/Riscv.hpp **** 
 147:src/../h/Riscv.hpp **** inline void Riscv::w_stval(uint64 stval) {
 148:src/../h/Riscv.hpp ****     __asm__ volatile("csrw stval, %0" : :"r"(stval));
 149:src/../h/Riscv.hpp **** }
 150:src/../h/Riscv.hpp **** 
 151:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 152:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sip, %0" : :"r"(mask));
 153:src/../h/Riscv.hpp **** }
 154:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/ccRjjh6e.s 			page 10


 155:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 156:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sip, %0" : :"r"(mask));
 157:src/../h/Riscv.hpp **** }
 158:src/../h/Riscv.hpp **** 
 159:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sie()
 160:src/../h/Riscv.hpp **** {
 161:src/../h/Riscv.hpp ****     uint64 volatile sie;
 162:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sip" : "=r"(sie));
 163:src/../h/Riscv.hpp ****     return sie;
 164:src/../h/Riscv.hpp **** }
 165:src/../h/Riscv.hpp **** 
 166:src/../h/Riscv.hpp **** 
 167:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip() {
 168:src/../h/Riscv.hpp ****     uint64 volatile sip;
 169:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sip" : "=r"(sip));
 170:src/../h/Riscv.hpp ****     return sip;
 171:src/../h/Riscv.hpp **** }
 172:src/../h/Riscv.hpp **** 
 173:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 174:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sip, %0" : :"r"(sip));
 175:src/../h/Riscv.hpp **** }
 176:src/../h/Riscv.hpp **** 
 177:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 178:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sstatus, %0" : :"r"(mask));
 107              		.loc 2 178 5
 108              		.loc 2 178 54 is_stmt 0
 109 0070 93072000 		li	a5,2
 110              	#APP
 111              	# 178 "src/../h/Riscv.hpp" 1
 179              	}
 112              		csrs sstatus, a5
 113              	# 0 "" 2
 114              	.LVL6:
 115              	#NO_APP
 116              	.LBE52:
 117              	.LBE51:
  31:src/Riscv.cpp **** 
 118              		.loc 1 31 1
 119 0078 03348100 		ld	s0,8(sp)
 120              		.cfi_restore 8
 121              		.cfi_def_cfa 2, 16
 122 007c 13010101 		addi	sp,sp,16
 123              		.cfi_def_cfa_offset 0
 124 0080 67800000 		jr	ra
 125              		.cfi_endproc
 126              	.LFE28:
 128              		.align	2
 129              		.globl	_ZN5Riscv17disableInterruptsEv
 131              	_ZN5Riscv17disableInterruptsEv:
 132              	.LFB29:
  34:src/Riscv.cpp ****     mc_sstatus(Riscv::SSTATUS_SIE);
 133              		.loc 1 34 1 is_stmt 1
 134              		.cfi_startproc
 135 0084 130101FF 		addi	sp,sp,-16
 136              		.cfi_def_cfa_offset 16
 137 0088 23348100 		sd	s0,8(sp)
 138              		.cfi_offset 8, -8
GAS LISTING /tmp/ccRjjh6e.s 			page 11


 139 008c 13040101 		addi	s0,sp,16
 140              		.cfi_def_cfa 8, 0
  35:src/Riscv.cpp **** }
 141              		.loc 1 35 5
 142              	.LVL7:
 143              	.LBB53:
 144              	.LBB54:
 180:src/../h/Riscv.hpp **** 
 181:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 182:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sstatus, %0" : :"r"(mask));
 145              		.loc 2 182 5
 146              		.loc 2 182 54 is_stmt 0
 147 0090 93072000 		li	a5,2
 148              	#APP
 149              	# 182 "src/../h/Riscv.hpp" 1
 183              	}
 150              		csrc sstatus, a5
 151              	# 0 "" 2
 152              	.LVL8:
 153              	#NO_APP
 154              	.LBE54:
 155              	.LBE53:
  36:src/Riscv.cpp **** 
 156              		.loc 1 36 1
 157 0098 03348100 		ld	s0,8(sp)
 158              		.cfi_restore 8
 159              		.cfi_def_cfa 2, 16
 160 009c 13010101 		addi	sp,sp,16
 161              		.cfi_def_cfa_offset 0
 162 00a0 67800000 		jr	ra
 163              		.cfi_endproc
 164              	.LFE29:
 166              		.align	2
 167              		.globl	_ZN5Riscv9endSystemEv
 169              	_ZN5Riscv9endSystemEv:
 170              	.LFB27:
  23:src/Riscv.cpp ****     //todo
 171              		.loc 1 23 1 is_stmt 1
 172              		.cfi_startproc
 173 00a4 130101FF 		addi	sp,sp,-16
 174              		.cfi_def_cfa_offset 16
 175 00a8 23341100 		sd	ra,8(sp)
 176 00ac 23308100 		sd	s0,0(sp)
 177              		.cfi_offset 1, -8
 178              		.cfi_offset 8, -16
 179 00b0 13040101 		addi	s0,sp,16
 180              		.cfi_def_cfa 8, 0
  25:src/Riscv.cpp **** }
 181              		.loc 1 25 5
  25:src/Riscv.cpp **** }
 182              		.loc 1 25 29 is_stmt 0
 183 00b4 97000000 		call	_ZN5Riscv17disableInterruptsEv
 183      E7800000 
 184              	.LVL9:
  26:src/Riscv.cpp **** 
 185              		.loc 1 26 1
 186 00bc 83308100 		ld	ra,8(sp)
GAS LISTING /tmp/ccRjjh6e.s 			page 12


 187              		.cfi_restore 1
 188 00c0 03340100 		ld	s0,0(sp)
 189              		.cfi_restore 8
 190              		.cfi_def_cfa 2, 16
 191 00c4 13010101 		addi	sp,sp,16
 192              		.cfi_def_cfa_offset 0
 193 00c8 67800000 		jr	ra
 194              		.cfi_endproc
 195              	.LFE27:
 197              		.align	2
 198              		.globl	_ZN5Riscv10popSppSpieEv
 200              	_ZN5Riscv10popSppSpieEv:
 201              	.LFB30:
  39:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
 202              		.loc 1 39 1 is_stmt 1
 203              		.cfi_startproc
 204 00cc 130101FF 		addi	sp,sp,-16
 205              		.cfi_def_cfa_offset 16
 206 00d0 23348100 		sd	s0,8(sp)
 207              		.cfi_offset 8, -8
 208 00d4 13040101 		addi	s0,sp,16
 209              		.cfi_def_cfa 8, 0
  40:src/Riscv.cpp ****     __asm__ volatile ("sret");
 210              		.loc 1 40 5
  40:src/Riscv.cpp ****     __asm__ volatile ("sret");
 211              		.loc 1 40 39 is_stmt 0
 212              	#APP
 213              	# 40 "src/Riscv.cpp" 1
  41:src/Riscv.cpp **** }
 214              		csrw sepc, ra
 215              	# 0 "" 2
 216              		.loc 1 41 5 is_stmt 1
  41:src/Riscv.cpp **** }
 217              		.loc 1 41 30 is_stmt 0
 218              	# 41 "src/Riscv.cpp" 1
  42:src/Riscv.cpp **** 
 219              		sret
 220              	# 0 "" 2
 221              		.loc 1 42 1
 222              	#NO_APP
 223 00e0 03348100 		ld	s0,8(sp)
 224              		.cfi_restore 8
 225              		.cfi_def_cfa 2, 16
 226 00e4 13010101 		addi	sp,sp,16
 227              		.cfi_def_cfa_offset 0
 228 00e8 67800000 		jr	ra
 229              		.cfi_endproc
 230              	.LFE30:
 232              		.align	2
 233              		.globl	_ZN5Riscv11printStringEPKc
 235              	_ZN5Riscv11printStringEPKc:
 236              	.LFB31:
  45:src/Riscv.cpp ****     uint64 sstatus = r_sstatus();
 237              		.loc 1 45 1 is_stmt 1
 238              		.cfi_startproc
 239              	.LVL10:
 240 00ec 130101FD 		addi	sp,sp,-48
GAS LISTING /tmp/ccRjjh6e.s 			page 13


 241              		.cfi_def_cfa_offset 48
 242 00f0 23341102 		sd	ra,40(sp)
 243 00f4 23308102 		sd	s0,32(sp)
 244 00f8 233C9100 		sd	s1,24(sp)
 245 00fc 23382101 		sd	s2,16(sp)
 246              		.cfi_offset 1, -8
 247              		.cfi_offset 8, -16
 248              		.cfi_offset 9, -24
 249              		.cfi_offset 18, -32
 250 0100 13040103 		addi	s0,sp,48
 251              		.cfi_def_cfa 8, 0
 252 0104 93040500 		mv	s1,a0
  46:src/Riscv.cpp ****     mc_sstatus(SSTATUS_SIE);
 253              		.loc 1 46 5
 254              	.LBB55:
 255              	.LBB56:
 184:src/../h/Riscv.hpp **** 
 185:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sstatus() {
 186:src/../h/Riscv.hpp ****     uint64 volatile sstatus;
 256              		.loc 2 186 5
 187:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 257              		.loc 2 187 5
 258              		.loc 2 187 57 is_stmt 0
 259              	#APP
 260              	# 187 "src/../h/Riscv.hpp" 1
 188              	    return sstatus;
 261              		csrr a5, sstatus
 262              	# 0 "" 2
 263              	#NO_APP
 264 010c 233CF4FC 		sd	a5,-40(s0)
 265              		.loc 2 188 5 is_stmt 1
 266              		.loc 2 188 12 is_stmt 0
 267 0110 033984FD 		ld	s2,-40(s0)
 268              	.LVL11:
 269              	.LBE56:
 270              	.LBE55:
  47:src/Riscv.cpp ****     while (*string != '\0')
 271              		.loc 1 47 5 is_stmt 1
 272              	.LBB57:
 273              	.LBB58:
 182:src/../h/Riscv.hpp **** }
 274              		.loc 2 182 5
 182:src/../h/Riscv.hpp **** }
 275              		.loc 2 182 54 is_stmt 0
 276 0114 93072000 		li	a5,2
 277              	#APP
 278              	# 182 "src/../h/Riscv.hpp" 1
 279              		csrc sstatus, a5
 280              	# 0 "" 2
 281              	.LVL12:
 282              	#NO_APP
 283              	.L15:
 284              	.LBE58:
 285              	.LBE57:
  48:src/Riscv.cpp ****     {
 286              		.loc 1 48 5 is_stmt 1
  48:src/Riscv.cpp ****     {
GAS LISTING /tmp/ccRjjh6e.s 			page 14


 287              		.loc 1 48 20
  48:src/Riscv.cpp ****     {
 288              		.loc 1 48 12 is_stmt 0
 289 011c 03C50400 		lbu	a0,0(s1)
  48:src/Riscv.cpp ****     {
 290              		.loc 1 48 20
 291 0120 630A0500 		beqz	a0,.L14
  50:src/Riscv.cpp ****         string++;
 292              		.loc 1 50 9 is_stmt 1
  50:src/Riscv.cpp ****         string++;
 293              		.loc 1 50 15 is_stmt 0
 294 0124 97000000 		call	__putc@plt
 294      E7800000 
 295              	.LVL13:
  51:src/Riscv.cpp ****     }
 296              		.loc 1 51 9 is_stmt 1
  51:src/Riscv.cpp ****     }
 297              		.loc 1 51 15 is_stmt 0
 298 012c 93841400 		addi	s1,s1,1
 299              	.LVL14:
  48:src/Riscv.cpp ****     {
 300              		.loc 1 48 5
 301 0130 6FF0DFFE 		j	.L15
 302              	.L14:
  53:src/Riscv.cpp **** }
 303              		.loc 1 53 5 is_stmt 1
  53:src/Riscv.cpp **** }
 304              		.loc 1 53 38 is_stmt 0
 305 0134 1B090900 		sext.w	s2,s2
 306              	.LVL15:
  53:src/Riscv.cpp **** }
 307              		.loc 1 53 15
 308 0138 13792900 		andi	s2,s2,2
 309 013c 1B090900 		sext.w	s2,s2
 310              	.LVL16:
 311              	.LBB59:
 312              	.LBB60:
 178:src/../h/Riscv.hpp **** }
 313              		.loc 2 178 5 is_stmt 1
 178:src/../h/Riscv.hpp **** }
 314              		.loc 2 178 54 is_stmt 0
 315              	#APP
 316              	# 178 "src/../h/Riscv.hpp" 1
 317              		csrs sstatus, s2
 318              	# 0 "" 2
 319              	.LVL17:
 320              	#NO_APP
 321              	.LBE60:
 322              	.LBE59:
  54:src/Riscv.cpp **** 
 323              		.loc 1 54 1
 324 0144 83308102 		ld	ra,40(sp)
 325              		.cfi_restore 1
 326 0148 03340102 		ld	s0,32(sp)
 327              		.cfi_restore 8
 328              		.cfi_def_cfa 2, 48
 329 014c 83348101 		ld	s1,24(sp)
GAS LISTING /tmp/ccRjjh6e.s 			page 15


 330              		.cfi_restore 9
 331              	.LVL18:
 332 0150 03390101 		ld	s2,16(sp)
 333              		.cfi_restore 18
 334 0154 13010103 		addi	sp,sp,48
 335              		.cfi_def_cfa_offset 0
 336 0158 67800000 		jr	ra
 337              		.cfi_endproc
 338              	.LFE31:
 340              		.align	2
 341              		.globl	_ZN5Riscv12printIntegerEm
 343              	_ZN5Riscv12printIntegerEm:
 344              	.LFB32:
  57:src/Riscv.cpp ****     uint64 sstatus = r_sstatus();
 345              		.loc 1 57 1 is_stmt 1
 346              		.cfi_startproc
 347              	.LVL19:
 348 015c 130101FC 		addi	sp,sp,-64
 349              		.cfi_def_cfa_offset 64
 350 0160 233C1102 		sd	ra,56(sp)
 351 0164 23388102 		sd	s0,48(sp)
 352 0168 23349102 		sd	s1,40(sp)
 353 016c 23302103 		sd	s2,32(sp)
 354              		.cfi_offset 1, -8
 355              		.cfi_offset 8, -16
 356              		.cfi_offset 9, -24
 357              		.cfi_offset 18, -32
 358 0170 13040104 		addi	s0,sp,64
 359              		.cfi_def_cfa 8, 0
  58:src/Riscv.cpp ****     mc_sstatus(SSTATUS_SIE);
 360              		.loc 1 58 5
 361              	.LBB61:
 362              	.LBB62:
 186:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 363              		.loc 2 186 5
 187:src/../h/Riscv.hpp ****     return sstatus;
 364              		.loc 2 187 5
 187:src/../h/Riscv.hpp ****     return sstatus;
 365              		.loc 2 187 57 is_stmt 0
 366              	#APP
 367              	# 187 "src/../h/Riscv.hpp" 1
 368              		csrr a5, sstatus
 369              	# 0 "" 2
 370              	#NO_APP
 371 0178 2334F4FC 		sd	a5,-56(s0)
 372              		.loc 2 188 5 is_stmt 1
 373              		.loc 2 188 12 is_stmt 0
 374 017c 033984FC 		ld	s2,-56(s0)
 375              	.LVL20:
 376              	.LBE62:
 377              	.LBE61:
  59:src/Riscv.cpp ****     static char digits[] = "0123456789";
 378              		.loc 1 59 5 is_stmt 1
 379              	.LBB63:
 380              	.LBB64:
 182:src/../h/Riscv.hpp **** }
 381              		.loc 2 182 5
GAS LISTING /tmp/ccRjjh6e.s 			page 16


 182:src/../h/Riscv.hpp **** }
 382              		.loc 2 182 54 is_stmt 0
 383 0180 93072000 		li	a5,2
 384              	#APP
 385              	# 182 "src/../h/Riscv.hpp" 1
 386              		csrc sstatus, a5
 387              	# 0 "" 2
 388              	.LVL21:
 389              	#NO_APP
 390              	.LBE64:
 391              	.LBE63:
  60:src/Riscv.cpp ****     char buf[16];
 392              		.loc 1 60 5 is_stmt 1
  61:src/Riscv.cpp ****     int i, neg;
 393              		.loc 1 61 5
  62:src/Riscv.cpp ****     uint x;
 394              		.loc 1 62 5
  63:src/Riscv.cpp **** 
 395              		.loc 1 63 5
  65:src/Riscv.cpp ****     if(num < 0)
 396              		.loc 1 65 5
  66:src/Riscv.cpp ****     {
 397              		.loc 1 66 5
  72:src/Riscv.cpp **** 
 398              		.loc 1 72 9
  72:src/Riscv.cpp **** 
 399              		.loc 1 72 11 is_stmt 0
 400 0188 1B050500 		sext.w	a0,a0
 401              	.LVL22:
  74:src/Riscv.cpp ****     do
 402              		.loc 1 74 5 is_stmt 1
  74:src/Riscv.cpp ****     do
 403              		.loc 1 74 7 is_stmt 0
 404 018c 93040000 		li	s1,0
 405              	.LVL23:
 406              	.L18:
  75:src/Riscv.cpp ****     {
 407              		.loc 1 75 5 is_stmt 1
  77:src/Riscv.cpp ****     }while((x/=10) != 0);
 408              		.loc 1 77 9
  77:src/Riscv.cpp ****     }while((x/=10) != 0);
 409              		.loc 1 77 28 is_stmt 0
 410 0190 1306A000 		li	a2,10
 411 0194 3B77C502 		remuw	a4,a0,a2
 412              	.LVL24:
  77:src/Riscv.cpp ****     }while((x/=10) != 0);
 413              		.loc 1 77 31
 414 0198 93160702 		slli	a3,a4,32
 415 019c 93D60602 		srli	a3,a3,32
 416 01a0 17070000 		lla	a4,.LANCHOR0
 416      13070700 
 417 01a8 3307D700 		add	a4,a4,a3
 418 01ac 03470700 		lbu	a4,0(a4)
  77:src/Riscv.cpp ****     }while((x/=10) != 0);
 419              		.loc 1 77 18
 420 01b0 930604FE 		addi	a3,s0,-32
 421 01b4 B3879600 		add	a5,a3,s1
GAS LISTING /tmp/ccRjjh6e.s 			page 17


 422 01b8 9B841400 		addiw	s1,s1,1
 423              	.LVL25:
 424 01bc 2388E7FE 		sb	a4,-16(a5)
  78:src/Riscv.cpp ****     if(neg)
 425              		.loc 1 78 20 is_stmt 1
 426 01c0 1B070500 		sext.w	a4,a0
  78:src/Riscv.cpp ****     if(neg)
 427              		.loc 1 78 14 is_stmt 0
 428 01c4 3B55C502 		divuw	a0,a0,a2
 429              	.LVL26:
  78:src/Riscv.cpp ****     if(neg)
 430              		.loc 1 78 20
 431 01c8 93079000 		li	a5,9
 432 01cc E3E2E7FC 		bgtu	a4,a5,.L18
 433              	.LVL27:
 434              	.L20:
  82:src/Riscv.cpp ****         __putc(buf[i]);
 435              		.loc 1 82 5 is_stmt 1
  82:src/Riscv.cpp ****         __putc(buf[i]);
 436              		.loc 1 82 15
 437 01d0 9B84F4FF 		addiw	s1,s1,-1
 438              	.LVL28:
 439 01d4 63CE0400 		bltz	s1,.L19
  83:src/Riscv.cpp **** 
 440              		.loc 1 83 9
  83:src/Riscv.cpp **** 
 441              		.loc 1 83 15 is_stmt 0
 442 01d8 930704FE 		addi	a5,s0,-32
 443 01dc B3879700 		add	a5,a5,s1
 444 01e0 03C507FF 		lbu	a0,-16(a5)
 445 01e4 97000000 		call	__putc@plt
 445      E7800000 
 446              	.LVL29:
 447 01ec 6FF05FFE 		j	.L20
 448              	.L19:
  85:src/Riscv.cpp **** 
 449              		.loc 1 85 5 is_stmt 1
  85:src/Riscv.cpp **** 
 450              		.loc 1 85 11 is_stmt 0
 451 01f0 1305A000 		li	a0,10
 452 01f4 97000000 		call	__putc@plt
 452      E7800000 
 453              	.LVL30:
  87:src/Riscv.cpp **** }
 454              		.loc 1 87 5 is_stmt 1
  87:src/Riscv.cpp **** }
 455              		.loc 1 87 38 is_stmt 0
 456 01fc 1B090900 		sext.w	s2,s2
 457              	.LVL31:
  87:src/Riscv.cpp **** }
 458              		.loc 1 87 15
 459 0200 13792900 		andi	s2,s2,2
 460 0204 1B090900 		sext.w	s2,s2
 461              	.LVL32:
 462              	.LBB65:
 463              	.LBB66:
 178:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/ccRjjh6e.s 			page 18


 464              		.loc 2 178 5 is_stmt 1
 178:src/../h/Riscv.hpp **** }
 465              		.loc 2 178 54 is_stmt 0
 466              	#APP
 467              	# 178 "src/../h/Riscv.hpp" 1
 468              		csrs sstatus, s2
 469              	# 0 "" 2
 470              	.LVL33:
 471              	#NO_APP
 472              	.LBE66:
 473              	.LBE65:
  88:src/Riscv.cpp **** 
 474              		.loc 1 88 1
 475 020c 83308103 		ld	ra,56(sp)
 476              		.cfi_restore 1
 477 0210 03340103 		ld	s0,48(sp)
 478              		.cfi_restore 8
 479              		.cfi_def_cfa 2, 64
 480 0214 83348102 		ld	s1,40(sp)
 481              		.cfi_restore 9
 482 0218 03390102 		ld	s2,32(sp)
 483              		.cfi_restore 18
 484 021c 13010104 		addi	sp,sp,64
 485              		.cfi_def_cfa_offset 0
 486 0220 67800000 		jr	ra
 487              		.cfi_endproc
 488              	.LFE32:
 490              		.align	2
 491              		.globl	_ZN5Riscv20handleSupervisorTrapEv
 493              	_ZN5Riscv20handleSupervisorTrapEv:
 494              	.LFB33:
  91:src/Riscv.cpp ****     __asm__ volatile("mv %0, a4" : "=r"(PCB::savedRegA4));
 495              		.loc 1 91 1 is_stmt 1
 496              		.cfi_startproc
 497 0224 130101F9 		addi	sp,sp,-112
 498              		.cfi_def_cfa_offset 112
 499 0228 23341106 		sd	ra,104(sp)
 500 022c 23308106 		sd	s0,96(sp)
 501 0230 233C9104 		sd	s1,88(sp)
 502              		.cfi_offset 1, -8
 503              		.cfi_offset 8, -16
 504              		.cfi_offset 9, -24
 505 0234 13040107 		addi	s0,sp,112
 506              		.cfi_def_cfa 8, 0
  92:src/Riscv.cpp **** 
 507              		.loc 1 92 5
  92:src/Riscv.cpp **** 
 508              		.loc 1 92 58 is_stmt 0
 509              	#APP
 510              	# 92 "src/Riscv.cpp" 1
 511              		mv a4, a4
 512              	# 0 "" 2
 513              	#NO_APP
 514 023c 97070000 		la	a5,_ZN3PCB10savedRegA4E
 514      83B70700 
 515 0244 23B0E700 		sd	a4,0(a5)
  94:src/Riscv.cpp **** 
GAS LISTING /tmp/ccRjjh6e.s 			page 19


 516              		.loc 1 94 5 is_stmt 1
 517              	.LBB67:
 518              	.LBB68:
 107:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
 519              		.loc 2 107 5
 108:src/../h/Riscv.hpp ****     return scause;
 520              		.loc 2 108 5
 108:src/../h/Riscv.hpp ****     return scause;
 521              		.loc 2 108 55 is_stmt 0
 522              	#APP
 523              	# 108 "src/../h/Riscv.hpp" 1
 524              		csrr a5, scause
 525              	# 0 "" 2
 526              	#NO_APP
 527 024c 233CF4FA 		sd	a5,-72(s0)
 109:src/../h/Riscv.hpp **** }
 528              		.loc 2 109 5 is_stmt 1
 109:src/../h/Riscv.hpp **** }
 529              		.loc 2 109 12 is_stmt 0
 530 0250 833784FB 		ld	a5,-72(s0)
 531              	.LVL34:
 532              	.LBE68:
 533              	.LBE67:
  96:src/Riscv.cpp ****     {
 534              		.loc 1 96 5 is_stmt 1
 535              	.LBB69:
 536 0254 1307F0FF 		li	a4,-1
 537 0258 1317F703 		slli	a4,a4,63
 538 025c 13071700 		addi	a4,a4,1
 539 0260 6388E70A 		beq	a5,a4,.L23
 540 0264 1307F0FF 		li	a4,-1
 541 0268 1317F703 		slli	a4,a4,63
 542 026c 13071700 		addi	a4,a4,1
 543 0270 636EF704 		bgtu	a5,a4,.L24
 544 0274 938787FF 		addi	a5,a5,-8
 545              	.LVL35:
 546 0278 13071000 		li	a4,1
 547 027c 636CF716 		bgtu	a5,a4,.L22
 548              	.LBE69:
 156:src/Riscv.cpp ****         case ecallUserInterrupt:
 549              		.loc 1 156 9
 157:src/Riscv.cpp ****         {
 550              		.loc 1 157 9
 158:src/Riscv.cpp ****             uint64 operation;
 551              		.loc 1 158 9
 552              	.LBB99:
 553              	.LBB70:
 159:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
 554              		.loc 1 159 13
 160:src/Riscv.cpp **** 
 555              		.loc 1 160 13
 160:src/Riscv.cpp **** 
 556              		.loc 1 160 61 is_stmt 0
 557              	#APP
 558              	# 160 "src/Riscv.cpp" 1
 559              		mv a5, a0
 560              	# 0 "" 2
GAS LISTING /tmp/ccRjjh6e.s 			page 20


 561              	.LVL36:
 162:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 562              		.loc 1 162 13 is_stmt 1
 563              	#NO_APP
 564              	.LBB71:
 565              	.LBB72:
 117:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 566              		.loc 2 117 5
 118:src/../h/Riscv.hpp ****     return sepc;
 567              		.loc 2 118 5
 118:src/../h/Riscv.hpp ****     return sepc;
 568              		.loc 2 118 51 is_stmt 0
 569              	#APP
 570              	# 118 "src/../h/Riscv.hpp" 1
 571              		csrr a4, sepc
 572              	# 0 "" 2
 573              	#NO_APP
 574 0288 233CE4FC 		sd	a4,-40(s0)
 119:src/../h/Riscv.hpp **** }
 575              		.loc 2 119 5 is_stmt 1
 119:src/../h/Riscv.hpp **** }
 576              		.loc 2 119 12 is_stmt 0
 577 028c 033784FD 		ld	a4,-40(s0)
 578              	.LBE72:
 579              	.LBE71:
 162:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 580              		.loc 1 162 52
 581 0290 13074700 		addi	a4,a4,4
 162:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 582              		.loc 1 162 54
 583 0294 2334E4FA 		sd	a4,-88(s0)
 163:src/Riscv.cpp **** 
 584              		.loc 1 163 13 is_stmt 1
 585              	.LBB73:
 586              	.LBB74:
 186:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 587              		.loc 2 186 5
 187:src/../h/Riscv.hpp ****     return sstatus;
 588              		.loc 2 187 5
 187:src/../h/Riscv.hpp ****     return sstatus;
 589              		.loc 2 187 57 is_stmt 0
 590              	#APP
 591              	# 187 "src/../h/Riscv.hpp" 1
 592              		csrr a4, sstatus
 593              	# 0 "" 2
 594              	#NO_APP
 595 029c 2338E4FC 		sd	a4,-48(s0)
 596              		.loc 2 188 5 is_stmt 1
 597              		.loc 2 188 12 is_stmt 0
 598 02a0 033704FD 		ld	a4,-48(s0)
 599              	.LBE74:
 600              	.LBE73:
 163:src/Riscv.cpp **** 
 601              		.loc 1 163 56
 602 02a4 2338E4FA 		sd	a4,-80(s0)
 165:src/Riscv.cpp ****             {
 603              		.loc 1 165 13 is_stmt 1
GAS LISTING /tmp/ccRjjh6e.s 			page 21


 604 02a8 13072004 		li	a4,66
 605 02ac 636CF712 		bgtu	a5,a4,.L30
 606 02b0 93972700 		slli	a5,a5,2
 607              	.LVL37:
 608 02b4 17070000 		lla	a4,.L32
 608      13070700 
 609 02bc B387E700 		add	a5,a5,a4
 610 02c0 83A70700 		lw	a5,0(a5)
 611 02c4 B387E700 		add	a5,a5,a4
 612 02c8 67800700 		jr	a5
 613              		.section	.rodata
 614              		.align	2
 615              		.align	2
 616              	.L32:
 617 0000 00000000 		.word	.L30-.L32
 618 0004 00000000 		.word	.L45-.L32
 619 0008 00000000 		.word	.L44-.L32
 620 000c 00000000 		.word	.L30-.L32
 621 0010 00000000 		.word	.L30-.L32
 622 0014 00000000 		.word	.L30-.L32
 623 0018 00000000 		.word	.L30-.L32
 624 001c 00000000 		.word	.L30-.L32
 625 0020 00000000 		.word	.L30-.L32
 626 0024 00000000 		.word	.L30-.L32
 627 0028 00000000 		.word	.L30-.L32
 628 002c 00000000 		.word	.L30-.L32
 629 0030 00000000 		.word	.L30-.L32
 630 0034 00000000 		.word	.L30-.L32
 631 0038 00000000 		.word	.L30-.L32
 632 003c 00000000 		.word	.L30-.L32
 633 0040 00000000 		.word	.L30-.L32
 634 0044 00000000 		.word	.L43-.L32
 635 0048 00000000 		.word	.L42-.L32
 636 004c 00000000 		.word	.L41-.L32
 637 0050 00000000 		.word	.L40-.L32
 638 0054 00000000 		.word	.L39-.L32
 639 0058 00000000 		.word	.L30-.L32
 640 005c 00000000 		.word	.L30-.L32
 641 0060 00000000 		.word	.L30-.L32
 642 0064 00000000 		.word	.L30-.L32
 643 0068 00000000 		.word	.L30-.L32
 644 006c 00000000 		.word	.L30-.L32
 645 0070 00000000 		.word	.L30-.L32
 646 0074 00000000 		.word	.L30-.L32
 647 0078 00000000 		.word	.L30-.L32
 648 007c 00000000 		.word	.L30-.L32
 649 0080 00000000 		.word	.L30-.L32
 650 0084 00000000 		.word	.L38-.L32
 651 0088 00000000 		.word	.L37-.L32
 652 008c 00000000 		.word	.L36-.L32
 653 0090 00000000 		.word	.L35-.L32
 654 0094 00000000 		.word	.L30-.L32
 655 0098 00000000 		.word	.L30-.L32
 656 009c 00000000 		.word	.L30-.L32
 657 00a0 00000000 		.word	.L30-.L32
 658 00a4 00000000 		.word	.L30-.L32
 659 00a8 00000000 		.word	.L30-.L32
GAS LISTING /tmp/ccRjjh6e.s 			page 22


 660 00ac 00000000 		.word	.L30-.L32
 661 00b0 00000000 		.word	.L30-.L32
 662 00b4 00000000 		.word	.L30-.L32
 663 00b8 00000000 		.word	.L30-.L32
 664 00bc 00000000 		.word	.L30-.L32
 665 00c0 00000000 		.word	.L30-.L32
 666 00c4 00000000 		.word	.L34-.L32
 667 00c8 00000000 		.word	.L30-.L32
 668 00cc 00000000 		.word	.L30-.L32
 669 00d0 00000000 		.word	.L30-.L32
 670 00d4 00000000 		.word	.L30-.L32
 671 00d8 00000000 		.word	.L30-.L32
 672 00dc 00000000 		.word	.L30-.L32
 673 00e0 00000000 		.word	.L30-.L32
 674 00e4 00000000 		.word	.L30-.L32
 675 00e8 00000000 		.word	.L30-.L32
 676 00ec 00000000 		.word	.L30-.L32
 677 00f0 00000000 		.word	.L30-.L32
 678 00f4 00000000 		.word	.L30-.L32
 679 00f8 00000000 		.word	.L30-.L32
 680 00fc 00000000 		.word	.L30-.L32
 681 0100 00000000 		.word	.L30-.L32
 682 0104 00000000 		.word	.L33-.L32
 683 0108 00000000 		.word	.L31-.L32
 684              		.text
 685              	.LVL38:
 686              	.L24:
 687              	.LBE70:
  96:src/Riscv.cpp ****     {
 688              		.loc 1 96 5 is_stmt 0
 689 02cc 1307F0FF 		li	a4,-1
 690 02d0 1317F703 		slli	a4,a4,63
 691 02d4 13079700 		addi	a4,a4,9
 692 02d8 639EE710 		bne	a5,a4,.L22
 693              	.LBE99:
 120:src/Riscv.cpp ****         {
 694              		.loc 1 120 9 is_stmt 1
 121:src/Riscv.cpp ****             uint64 x = CONSOLE_STATUS;
 695              		.loc 1 121 9
 696              	.LBB100:
 697              	.LBB79:
 122:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0"::"r"(x));
 698              		.loc 1 122 13
 122:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0"::"r"(x));
 699              		.loc 1 122 20 is_stmt 0
 700 02dc 97070000 		la	a5,CONSOLE_STATUS
 700      83B70700 
 701              	.LVL39:
 702 02e4 83B70700 		ld	a5,0(a5)
 703              	.LVL40:
 123:src/Riscv.cpp ****             __asm__ volatile("lb a1, 0(a0)");
 704              		.loc 1 123 13 is_stmt 1
 123:src/Riscv.cpp ****             __asm__ volatile("lb a1, 0(a0)");
 705              		.loc 1 123 50 is_stmt 0
 706              	#APP
 707              	# 123 "src/Riscv.cpp" 1
 124:src/Riscv.cpp ****             uint64 operation;
GAS LISTING /tmp/ccRjjh6e.s 			page 23


 708              		mv a0, a5
 709              	# 0 "" 2
 710              		.loc 1 124 13 is_stmt 1
 124:src/Riscv.cpp ****             uint64 operation;
 711              		.loc 1 124 45 is_stmt 0
 712              	# 124 "src/Riscv.cpp" 1
 125:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" :  "=r"(operation));
 713              		lb a1, 0(a0)
 714              	# 0 "" 2
 715              		.loc 1 125 13 is_stmt 1
 126:src/Riscv.cpp ****             if(operation & KConsole::STATUS_READ_MASK)
 716              		.loc 1 126 13
 126:src/Riscv.cpp ****             if(operation & KConsole::STATUS_READ_MASK)
 717              		.loc 1 126 61 is_stmt 0
 718              	# 126 "src/Riscv.cpp" 1
 719              		mv a5, a1
 720              	# 0 "" 2
 721              	.LVL41:
 127:src/Riscv.cpp ****             {
 722              		.loc 1 127 13 is_stmt 1
 723              	#NO_APP
 724              	.LBB80:
 127:src/Riscv.cpp ****             {
 725              		.loc 1 127 26 is_stmt 0
 726 02f4 93F71700 		andi	a5,a5,1
 727              	.LVL42:
 127:src/Riscv.cpp ****             {
 728              		.loc 1 127 13
 729 02f8 6396070A 		bnez	a5,.L48
 730              	.LVL43:
 731              	.L29:
 732              	.LBE80:
 140:src/Riscv.cpp **** 
 733              		.loc 1 140 13 is_stmt 1
 140:src/Riscv.cpp **** 
 734              		.loc 1 140 26 is_stmt 0
 735 02fc 97000000 		call	plic_claim@plt
 735      E7800000 
 736              	.LVL44:
 737 0304 97000000 		call	plic_complete@plt
 737      E7800000 
 738              	.LVL45:
 142:src/Riscv.cpp ****         }
 739              		.loc 1 142 13 is_stmt 1
 740 030c 6F00800E 		j	.L22
 741              	.LVL46:
 742              	.L23:
 743              	.LBE79:
 744              	.LBE100:
  98:src/Riscv.cpp ****         {
 745              		.loc 1 98 9
  99:src/Riscv.cpp ****             uint64 volatile sepc = Riscv::r_sepc();
 746              		.loc 1 99 9
 747              	.LBB101:
 748              	.LBB83:
 100:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 749              		.loc 1 100 13
GAS LISTING /tmp/ccRjjh6e.s 			page 24


 750              	.LBB84:
 751              	.LBB85:
 117:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 752              		.loc 2 117 5
 118:src/../h/Riscv.hpp ****     return sepc;
 753              		.loc 2 118 5
 118:src/../h/Riscv.hpp ****     return sepc;
 754              		.loc 2 118 51 is_stmt 0
 755              	#APP
 756              	# 118 "src/../h/Riscv.hpp" 1
 757              		csrr a5, sepc
 758              	# 0 "" 2
 759              	.LVL47:
 760              	#NO_APP
 761 0314 2334F4FC 		sd	a5,-56(s0)
 119:src/../h/Riscv.hpp **** }
 762              		.loc 2 119 5 is_stmt 1
 119:src/../h/Riscv.hpp **** }
 763              		.loc 2 119 12 is_stmt 0
 764 0318 833784FC 		ld	a5,-56(s0)
 765              	.LBE85:
 766              	.LBE84:
 100:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 767              		.loc 1 100 50
 768 031c 233CF4F8 		sd	a5,-104(s0)
 101:src/Riscv.cpp ****             mc_sip(Riscv::SIP_SSIP);
 769              		.loc 1 101 13 is_stmt 1
 770              	.LBB86:
 771              	.LBB87:
 186:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 772              		.loc 2 186 5
 187:src/../h/Riscv.hpp ****     return sstatus;
 773              		.loc 2 187 5
 187:src/../h/Riscv.hpp ****     return sstatus;
 774              		.loc 2 187 57 is_stmt 0
 775              	#APP
 776              	# 187 "src/../h/Riscv.hpp" 1
 777              		csrr a5, sstatus
 778              	# 0 "" 2
 779              	#NO_APP
 780 0324 2330F4FC 		sd	a5,-64(s0)
 781              		.loc 2 188 5 is_stmt 1
 782              		.loc 2 188 12 is_stmt 0
 783 0328 833704FC 		ld	a5,-64(s0)
 784              	.LBE87:
 785              	.LBE86:
 101:src/Riscv.cpp ****             mc_sip(Riscv::SIP_SSIP);
 786              		.loc 1 101 56
 787 032c 2330F4FA 		sd	a5,-96(s0)
 102:src/Riscv.cpp ****             //Riscv::printString("timerInterrupt\n");
 788              		.loc 1 102 13 is_stmt 1
 789              	.LVL48:
 790              	.LBB88:
 791              	.LBB89:
 156:src/../h/Riscv.hpp **** }
 792              		.loc 2 156 5
 156:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/ccRjjh6e.s 			page 25


 793              		.loc 2 156 50 is_stmt 0
 794 0330 93072000 		li	a5,2
 795              	#APP
 796              	# 156 "src/../h/Riscv.hpp" 1
 797              		csrc sip, a5
 798              	# 0 "" 2
 799              	.LVL49:
 800              	#NO_APP
 801              	.LBE89:
 802              	.LBE88:
 104:src/Riscv.cpp ****             total++;
 803              		.loc 1 104 13 is_stmt 1
 105:src/Riscv.cpp **** 
 804              		.loc 1 105 13
 105:src/Riscv.cpp **** 
 805              		.loc 1 105 18 is_stmt 0
 806 0338 17070000 		lla	a4,.LANCHOR1
 806      13070700 
 807 0340 83370700 		ld	a5,0(a4)
 808 0344 93871700 		addi	a5,a5,1
 809 0348 2330F700 		sd	a5,0(a4)
 107:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
 810              		.loc 1 107 13 is_stmt 1
 107:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
 811              		.loc 1 107 34 is_stmt 0
 812 034c 97040000 		la	s1,_ZN3PCB16timeSliceCounterE
 812      83B40400 
 813 0354 83B70400 		ld	a5,0(s1)
 814 0358 93871700 		addi	a5,a5,1
 815 035c 23B0F400 		sd	a5,0(s1)
 108:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
 816              		.loc 1 108 13 is_stmt 1
 108:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
 817              		.loc 1 108 40 is_stmt 0
 818 0360 97000000 		call	_ZN12SleepPCBList13tryToWakePCBsEv@plt
 818      E7800000 
 819              	.LVL50:
 109:src/Riscv.cpp ****             {
 820              		.loc 1 109 13 is_stmt 1
 109:src/Riscv.cpp ****             {
 821              		.loc 1 109 68 is_stmt 0
 822 0368 97070000 		la	a5,_ZN3PCB7runningE
 822      83B70700 
 823 0370 83B70700 		ld	a5,0(a5)
 824              	.LVL51:
 825              	.LBB90:
 826              	.LBB91:
 827              		.file 3 "src/../h/PCB.hpp"
   1:src/../h/PCB.hpp **** //
   2:src/../h/PCB.hpp **** // Created by os on 4/27/22.
   3:src/../h/PCB.hpp **** //
   4:src/../h/PCB.hpp **** 
   5:src/../h/PCB.hpp **** #ifndef PROJECT_BASE_V1_0_PCB_HPP
   6:src/../h/PCB.hpp **** #define PROJECT_BASE_V1_0_PCB_HPP
   7:src/../h/PCB.hpp **** 
   8:src/../h/PCB.hpp **** #include "../lib/hw.h"
   9:src/../h/PCB.hpp **** #include "Scheduler.hpp"
GAS LISTING /tmp/ccRjjh6e.s 			page 26


  10:src/../h/PCB.hpp **** #include "Riscv.hpp"
  11:src/../h/PCB.hpp **** 
  12:src/../h/PCB.hpp **** class PCB
  13:src/../h/PCB.hpp **** {
  14:src/../h/PCB.hpp **** public:
  15:src/../h/PCB.hpp ****     static uint64 savedRegA4;
  16:src/../h/PCB.hpp **** 
  17:src/../h/PCB.hpp ****     using Body = void (*)(void*);
  18:src/../h/PCB.hpp **** 
  19:src/../h/PCB.hpp ****     PCB(Body body,  void* args, void* stack_space, uint64 timeSlice);
  20:src/../h/PCB.hpp ****     ~PCB();
  21:src/../h/PCB.hpp **** 
  22:src/../h/PCB.hpp ****     void start();
  23:src/../h/PCB.hpp ****     static void dispatch();
  24:src/../h/PCB.hpp ****     static void sleep(time_t);
  25:src/../h/PCB.hpp **** 
  26:src/../h/PCB.hpp ****     static PCB* running;
  27:src/../h/PCB.hpp **** 
  28:src/../h/PCB.hpp ****     static uint64 timeSliceCounter;
  29:src/../h/PCB.hpp ****     uint64 getTimeSlice() { return timeSlice;}
 828              		.loc 3 29 29 is_stmt 1
 829              		.loc 3 29 36 is_stmt 0
 830 0374 83B70701 		ld	a5,16(a5)
 831              	.LVL52:
 832              	.LBE91:
 833              	.LBE90:
 109:src/Riscv.cpp ****             {
 834              		.loc 1 109 39
 835 0378 03B70400 		ld	a4,0(s1)
 109:src/Riscv.cpp ****             {
 836              		.loc 1 109 13
 837 037c 637CF700 		bgeu	a4,a5,.L49
 838              	.L28:
 115:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 839              		.loc 1 115 13 is_stmt 1
 115:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 840              		.loc 1 115 29 is_stmt 0
 841 0380 833704FA 		ld	a5,-96(s0)
 842              	.LVL53:
 843              	.LBB92:
 844              	.LBB93:
 189:src/../h/Riscv.hpp **** }
 190:src/../h/Riscv.hpp **** 
 191:src/../h/Riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus) {
 192:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sstatus, %0" : :"r"(sstatus));
 845              		.loc 2 192 5 is_stmt 1
 846              		.loc 2 192 57 is_stmt 0
 847              	#APP
 848              	# 192 "src/../h/Riscv.hpp" 1
 193              	}
 849              		csrw sstatus, a5
 850              	# 0 "" 2
 851              	.LVL54:
 852              	#NO_APP
 853              	.LBE93:
 854              	.LBE92:
 116:src/Riscv.cpp **** 
GAS LISTING /tmp/ccRjjh6e.s 			page 27


 855              		.loc 1 116 13 is_stmt 1
 116:src/Riscv.cpp **** 
 856              		.loc 1 116 26 is_stmt 0
 857 0388 833784F9 		ld	a5,-104(s0)
 858              	.LVL55:
 859              	.LBB94:
 860              	.LBB95:
 123:src/../h/Riscv.hpp **** }
 861              		.loc 2 123 5 is_stmt 1
 123:src/../h/Riscv.hpp **** }
 862              		.loc 2 123 51 is_stmt 0
 863              	#APP
 864              	# 123 "src/../h/Riscv.hpp" 1
 124:src/../h/Riscv.hpp **** 
 865              		csrw sepc, a5
 866              	# 0 "" 2
 867              		.loc 2 124 1
 868              	#NO_APP
 869 0390 6F004006 		j	.L22
 870              	.LVL56:
 871              	.L49:
 872              	.LBE95:
 873              	.LBE94:
 111:src/Riscv.cpp ****                 PCB::dispatch();
 874              		.loc 1 111 17 is_stmt 1
 111:src/Riscv.cpp ****                 PCB::dispatch();
 875              		.loc 1 111 39 is_stmt 0
 876 0394 23B00400 		sd	zero,0(s1)
 112:src/Riscv.cpp ****             }
 877              		.loc 1 112 17 is_stmt 1
 112:src/Riscv.cpp ****             }
 878              		.loc 1 112 30 is_stmt 0
 879 0398 97000000 		call	_ZN3PCB8dispatchEv@plt
 879      E7800000 
 880              	.LVL57:
 881 03a0 6FF01FFE 		j	.L28
 882              	.LVL58:
 883              	.L48:
 884              	.LBE83:
 885              	.LBB96:
 886              	.LBB82:
 887              	.LBB81:
 129:src/Riscv.cpp ****                 __asm__ volatile("mv a0, %0"::"r"(x));
 888              		.loc 1 129 17 is_stmt 1
 129:src/Riscv.cpp ****                 __asm__ volatile("mv a0, %0"::"r"(x));
 889              		.loc 1 129 19 is_stmt 0
 890 03a4 97070000 		la	a5,CONSOLE_TX_DATA
 890      83B70700 
 891 03ac 83B70700 		ld	a5,0(a5)
 892              	.LVL59:
 130:src/Riscv.cpp ****                 __asm__ volatile("lb a1,0(a0)");
 893              		.loc 1 130 17 is_stmt 1
 130:src/Riscv.cpp ****                 __asm__ volatile("lb a1,0(a0)");
 894              		.loc 1 130 54 is_stmt 0
 895              	#APP
 896              	# 130 "src/Riscv.cpp" 1
 131:src/Riscv.cpp ****                 char c;
GAS LISTING /tmp/ccRjjh6e.s 			page 28


 897              		mv a0, a5
 898              	# 0 "" 2
 899              		.loc 1 131 17 is_stmt 1
 131:src/Riscv.cpp ****                 char c;
 900              		.loc 1 131 48 is_stmt 0
 901              	# 131 "src/Riscv.cpp" 1
 132:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" :  "=r"(c));
 902              		lb a1,0(a0)
 903              	# 0 "" 2
 904              		.loc 1 132 17 is_stmt 1
 133:src/Riscv.cpp ****                 //putCharacterOutput(c);
 905              		.loc 1 133 17
 133:src/Riscv.cpp ****                 //putCharacterOutput(c);
 906              		.loc 1 133 57 is_stmt 0
 907              	# 133 "src/Riscv.cpp" 1
 908              		mv s1, a1
 909              	# 0 "" 2
 910              	#NO_APP
 911 03bc 93F4F40F 		andi	s1,s1,0xff
 912              	.LVL60:
 136:src/Riscv.cpp ****                 KConsole::putCharacterOutput(c);
 913              		.loc 1 136 17 is_stmt 1
 136:src/Riscv.cpp ****                 KConsole::putCharacterOutput(c);
 914              		.loc 1 136 44 is_stmt 0
 915 03c0 13850400 		mv	a0,s1
 916 03c4 97000000 		call	_ZN8KConsole17putCharacterInputEc@plt
 916      E7800000 
 917              	.LVL61:
 137:src/Riscv.cpp ****             }
 918              		.loc 1 137 17 is_stmt 1
 137:src/Riscv.cpp ****             }
 919              		.loc 1 137 45 is_stmt 0
 920 03cc 13850400 		mv	a0,s1
 921 03d0 97000000 		call	_ZN8KConsole18putCharacterOutputEc@plt
 921      E7800000 
 922              	.LVL62:
 923              	.LBE81:
 924 03d8 6FF05FF2 		j	.L29
 925              	.LVL63:
 926              	.L45:
 927              	.LBE82:
 928              	.LBE96:
 929              	.LBB97:
 167:src/Riscv.cpp ****                     MemoryAllocator::memAllocHandler();
 930              		.loc 1 167 17 is_stmt 1
 168:src/Riscv.cpp ****                     break;
 931              		.loc 1 168 21
 168:src/Riscv.cpp ****                     break;
 932              		.loc 1 168 53 is_stmt 0
 933 03dc 97000000 		call	_ZN15MemoryAllocator15memAllocHandlerEv@plt
 933      E7800000 
 934              	.LVL64:
 169:src/Riscv.cpp ****                 case MemoryAllocator::MEM_FREE:
 935              		.loc 1 169 21 is_stmt 1
 936              	.L30:
 211:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 937              		.loc 1 211 13
GAS LISTING /tmp/ccRjjh6e.s 			page 29


 211:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 938              		.loc 1 211 29 is_stmt 0
 939 03e4 833704FB 		ld	a5,-80(s0)
 940              	.LVL65:
 941              	.LBB75:
 942              	.LBB76:
 192:src/../h/Riscv.hpp **** }
 943              		.loc 2 192 5 is_stmt 1
 192:src/../h/Riscv.hpp **** }
 944              		.loc 2 192 57 is_stmt 0
 945              	#APP
 946              	# 192 "src/../h/Riscv.hpp" 1
 947              		csrw sstatus, a5
 948              	# 0 "" 2
 949              	.LVL66:
 950              	#NO_APP
 951              	.LBE76:
 952              	.LBE75:
 212:src/Riscv.cpp **** 
 953              		.loc 1 212 13 is_stmt 1
 212:src/Riscv.cpp **** 
 954              		.loc 1 212 26 is_stmt 0
 955 03ec 833784FA 		ld	a5,-88(s0)
 956              	.LVL67:
 957              	.LBB77:
 958              	.LBB78:
 123:src/../h/Riscv.hpp **** }
 959              		.loc 2 123 5 is_stmt 1
 123:src/../h/Riscv.hpp **** }
 960              		.loc 2 123 51 is_stmt 0
 961              	#APP
 962              	# 123 "src/../h/Riscv.hpp" 1
 963              		csrw sepc, a5
 964              	# 0 "" 2
 965              	.LVL68:
 966              	#NO_APP
 967              	.L22:
 968              	.LBE78:
 969              	.LBE77:
 970              	.LBE97:
 971              	.LBE101:
 217:src/Riscv.cpp **** 
 972              		.loc 1 217 1
 973 03f4 83308106 		ld	ra,104(sp)
 974              		.cfi_remember_state
 975              		.cfi_restore 1
 976 03f8 03340106 		ld	s0,96(sp)
 977              		.cfi_restore 8
 978              		.cfi_def_cfa 2, 112
 979 03fc 83348105 		ld	s1,88(sp)
 980              		.cfi_restore 9
 981 0400 13010107 		addi	sp,sp,112
 982              		.cfi_def_cfa_offset 0
 983 0404 67800000 		jr	ra
 984              	.L44:
 985              		.cfi_restore_state
 986              	.LBB102:
GAS LISTING /tmp/ccRjjh6e.s 			page 30


 987              	.LBB98:
 170:src/Riscv.cpp ****                     MemoryAllocator::memFreeHandler();
 988              		.loc 1 170 17 is_stmt 1
 171:src/Riscv.cpp ****                     break;
 989              		.loc 1 171 21
 171:src/Riscv.cpp ****                     break;
 990              		.loc 1 171 52 is_stmt 0
 991 0408 97000000 		call	_ZN15MemoryAllocator14memFreeHandlerEv@plt
 991      E7800000 
 992              	.LVL69:
 172:src/Riscv.cpp ****                 case PCB::THREAD_MAKE_PCB:
 993              		.loc 1 172 21 is_stmt 1
 994 0410 6FF05FFD 		j	.L30
 995              	.L40:
 173:src/Riscv.cpp ****                     PCB::threadMakePCBHandler();
 996              		.loc 1 173 17
 174:src/Riscv.cpp ****                     break;
 997              		.loc 1 174 21
 174:src/Riscv.cpp ****                     break;
 998              		.loc 1 174 46 is_stmt 0
 999 0414 97000000 		call	_ZN3PCB20threadMakePCBHandlerEv@plt
 999      E7800000 
 1000              	.LVL70:
 175:src/Riscv.cpp ****                 case PCB::THREAD_CREATE:
 1001              		.loc 1 175 21 is_stmt 1
 1002 041c 6FF09FFC 		j	.L30
 1003              	.L43:
 176:src/Riscv.cpp ****                     PCB::threadCreateHandler();
 1004              		.loc 1 176 17
 177:src/Riscv.cpp ****                     break;
 1005              		.loc 1 177 21
 177:src/Riscv.cpp ****                     break;
 1006              		.loc 1 177 45 is_stmt 0
 1007 0420 97000000 		call	_ZN3PCB19threadCreateHandlerEv@plt
 1007      E7800000 
 1008              	.LVL71:
 178:src/Riscv.cpp ****                 case PCB::THREAD_START:
 1009              		.loc 1 178 21 is_stmt 1
 1010 0428 6FF0DFFB 		j	.L30
 1011              	.L39:
 179:src/Riscv.cpp ****                     PCB::threadStartHandler();
 1012              		.loc 1 179 17
 180:src/Riscv.cpp ****                     break;
 1013              		.loc 1 180 21
 180:src/Riscv.cpp ****                     break;
 1014              		.loc 1 180 44 is_stmt 0
 1015 042c 97000000 		call	_ZN3PCB18threadStartHandlerEv@plt
 1015      E7800000 
 1016              	.LVL72:
 181:src/Riscv.cpp ****                 case PCB::THREAD_DISPATCH:
 1017              		.loc 1 181 21 is_stmt 1
 1018 0434 6FF01FFB 		j	.L30
 1019              	.L41:
 182:src/Riscv.cpp ****                     PCB::threadDispatchHandler();
 1020              		.loc 1 182 17
 183:src/Riscv.cpp ****                     break;
 1021              		.loc 1 183 21
GAS LISTING /tmp/ccRjjh6e.s 			page 31


 183:src/Riscv.cpp ****                     break;
 1022              		.loc 1 183 47 is_stmt 0
 1023 0438 97000000 		call	_ZN3PCB21threadDispatchHandlerEv@plt
 1023      E7800000 
 1024              	.LVL73:
 184:src/Riscv.cpp ****                 case PCB::THREAD_EXIT:
 1025              		.loc 1 184 21 is_stmt 1
 1026 0440 6FF05FFA 		j	.L30
 1027              	.L42:
 185:src/Riscv.cpp ****                     PCB::threadExitHandler();
 1028              		.loc 1 185 17
 186:src/Riscv.cpp ****                     break;
 1029              		.loc 1 186 21
 186:src/Riscv.cpp ****                     break;
 1030              		.loc 1 186 43 is_stmt 0
 1031 0444 97000000 		call	_ZN3PCB17threadExitHandlerEv@plt
 1031      E7800000 
 1032              	.LVL74:
 187:src/Riscv.cpp ****                 case PCB::TIME_SLEEP:
 1033              		.loc 1 187 21 is_stmt 1
 1034 044c 6FF09FF9 		j	.L30
 1035              	.L34:
 188:src/Riscv.cpp ****                     PCB::threadSleepHandler();
 1036              		.loc 1 188 17
 189:src/Riscv.cpp ****                     break;
 1037              		.loc 1 189 21
 189:src/Riscv.cpp ****                     break;
 1038              		.loc 1 189 44 is_stmt 0
 1039 0450 97000000 		call	_ZN3PCB18threadSleepHandlerEv@plt
 1039      E7800000 
 1040              	.LVL75:
 190:src/Riscv.cpp ****                 case KSemaphore::SEM_OPEN:
 1041              		.loc 1 190 21 is_stmt 1
 1042 0458 6FF0DFF8 		j	.L30
 1043              	.L38:
 191:src/Riscv.cpp ****                     KSemaphore::semOpenHandler();
 1044              		.loc 1 191 17
 192:src/Riscv.cpp ****                     break;
 1045              		.loc 1 192 21
 192:src/Riscv.cpp ****                     break;
 1046              		.loc 1 192 47 is_stmt 0
 1047 045c 97000000 		call	_ZN10KSemaphore14semOpenHandlerEv@plt
 1047      E7800000 
 1048              	.LVL76:
 193:src/Riscv.cpp ****                 case KSemaphore::SEM_WAIT:
 1049              		.loc 1 193 21 is_stmt 1
 1050 0464 6FF01FF8 		j	.L30
 1051              	.L36:
 194:src/Riscv.cpp ****                     KSemaphore::semWaitHandler();
 1052              		.loc 1 194 17
 195:src/Riscv.cpp ****                     break;
 1053              		.loc 1 195 21
 195:src/Riscv.cpp ****                     break;
 1054              		.loc 1 195 47 is_stmt 0
 1055 0468 97000000 		call	_ZN10KSemaphore14semWaitHandlerEv@plt
 1055      E7800000 
 1056              	.LVL77:
GAS LISTING /tmp/ccRjjh6e.s 			page 32


 196:src/Riscv.cpp ****                 case KSemaphore::SEM_SIGNAL:
 1057              		.loc 1 196 21 is_stmt 1
 1058 0470 6FF05FF7 		j	.L30
 1059              	.L35:
 197:src/Riscv.cpp ****                     KSemaphore::semSignalHandler();
 1060              		.loc 1 197 17
 198:src/Riscv.cpp ****                     break;
 1061              		.loc 1 198 21
 198:src/Riscv.cpp ****                     break;
 1062              		.loc 1 198 49 is_stmt 0
 1063 0474 97000000 		call	_ZN10KSemaphore16semSignalHandlerEv@plt
 1063      E7800000 
 1064              	.LVL78:
 199:src/Riscv.cpp ****                 case KSemaphore::SEM_CLOSE:
 1065              		.loc 1 199 21 is_stmt 1
 1066 047c 6FF09FF6 		j	.L30
 1067              	.L37:
 200:src/Riscv.cpp ****                     KSemaphore::semCloseHandler();
 1068              		.loc 1 200 17
 201:src/Riscv.cpp ****                     break;
 1069              		.loc 1 201 21
 201:src/Riscv.cpp ****                     break;
 1070              		.loc 1 201 48 is_stmt 0
 1071 0480 97000000 		call	_ZN10KSemaphore15semCloseHandlerEv@plt
 1071      E7800000 
 1072              	.LVL79:
 202:src/Riscv.cpp ****                 case KConsole::CONSOLE_GETC:
 1073              		.loc 1 202 21 is_stmt 1
 1074 0488 6FF0DFF5 		j	.L30
 1075              	.L33:
 203:src/Riscv.cpp ****                     KConsole::getcHandler();
 1076              		.loc 1 203 17
 204:src/Riscv.cpp ****                     break;
 1077              		.loc 1 204 21
 204:src/Riscv.cpp ****                     break;
 1078              		.loc 1 204 42 is_stmt 0
 1079 048c 97000000 		call	_ZN8KConsole11getcHandlerEv@plt
 1079      E7800000 
 1080              	.LVL80:
 205:src/Riscv.cpp ****                 case KConsole::CONSOLE_PUTC:
 1081              		.loc 1 205 21 is_stmt 1
 1082 0494 6FF01FF5 		j	.L30
 1083              	.L31:
 206:src/Riscv.cpp ****                     KConsole::putcHandler();
 1084              		.loc 1 206 17
 207:src/Riscv.cpp ****                     break;
 1085              		.loc 1 207 21
 207:src/Riscv.cpp ****                     break;
 1086              		.loc 1 207 42 is_stmt 0
 1087 0498 97000000 		call	_ZN8KConsole11putcHandlerEv@plt
 1087      E7800000 
 1088              	.LVL81:
 208:src/Riscv.cpp ****             }
 1089              		.loc 1 208 21 is_stmt 1
 1090 04a0 6FF05FF4 		j	.L30
 1091              	.LBE98:
 1092              	.LBE102:
GAS LISTING /tmp/ccRjjh6e.s 			page 33


 1093              		.cfi_endproc
 1094              	.LFE33:
 1096              		.section	.rodata.str1.8,"aMS",@progbits,1
 1097              		.align	3
 1098              	.LC0:
 1099 0000 456E642E 		.string	"End..."
 1099      2E2E00
 1100              		.text
 1101              		.align	2
 1102              		.globl	_ZN5Riscv10kernelMainEv
 1104              	_ZN5Riscv10kernelMainEv:
 1105              	.LFB34:
 220:src/Riscv.cpp ****     initSystem();
 1106              		.loc 1 220 1
 1107              		.cfi_startproc
 1108              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 1109              		.cfi_lsda 0x1b,.LLSDA34
 1110 04a4 130101FE 		addi	sp,sp,-32
 1111              		.cfi_def_cfa_offset 32
 1112 04a8 233C1100 		sd	ra,24(sp)
 1113 04ac 23388100 		sd	s0,16(sp)
 1114 04b0 23349100 		sd	s1,8(sp)
 1115 04b4 23302101 		sd	s2,0(sp)
 1116              		.cfi_offset 1, -8
 1117              		.cfi_offset 8, -16
 1118              		.cfi_offset 9, -24
 1119              		.cfi_offset 18, -32
 1120 04b8 13040102 		addi	s0,sp,32
 1121              		.cfi_def_cfa 8, 0
 221:src/Riscv.cpp **** 
 1122              		.loc 1 221 5
 1123              	.LEHB0:
 221:src/Riscv.cpp **** 
 1124              		.loc 1 221 15 is_stmt 0
 1125 04bc 97000000 		call	_ZN5Riscv10initSystemEv
 1125      E7800000 
 1126              	.LVL82:
 223:src/Riscv.cpp **** 
 1127              		.loc 1 223 5 is_stmt 1
 223:src/Riscv.cpp **** 
 1128              		.loc 1 223 21 is_stmt 0
 1129 04c4 97000000 		call	_ZN5Riscv16enableInterruptsEv
 1129      E7800000 
 1130              	.LVL83:
 225:src/Riscv.cpp ****     //PCB* userPCB = new PCB(&Riscv::myTestsWrapper, 0, kmalloc(DEFAULT_STACK_SIZE), DEFAULT_TIME_S
 1131              		.loc 1 225 5 is_stmt 1
 225:src/Riscv.cpp ****     //PCB* userPCB = new PCB(&Riscv::myTestsWrapper, 0, kmalloc(DEFAULT_STACK_SIZE), DEFAULT_TIME_S
 1132              		.loc 1 225 63 is_stmt 0
 1133 04cc 37150000 		li	a0,4096
 1134 04d0 97000000 		call	_Z7kmallocm@plt
 1134      E7800000 
 1135              	.LVL84:
 1136 04d8 13090500 		mv	s2,a0
 225:src/Riscv.cpp ****     //PCB* userPCB = new PCB(&Riscv::myTestsWrapper, 0, kmalloc(DEFAULT_STACK_SIZE), DEFAULT_TIME_S
 1137              		.loc 1 225 103
 1138 04dc 13050005 		li	a0,80
 1139 04e0 97000000 		call	_ZN3PCBnwEm@plt
GAS LISTING /tmp/ccRjjh6e.s 			page 34


 1139      E7800000 
 1140              	.LVL85:
 1141              	.LEHE0:
 1142 04e8 93040500 		mv	s1,a0
 1143 04ec 13072000 		li	a4,2
 1144 04f0 93060900 		mv	a3,s2
 1145 04f4 13060000 		li	a2,0
 1146 04f8 97050000 		lla	a1,_ZN5Riscv15userMainWrapperEPv
 1146      93850500 
 1147              	.LEHB1:
 1148 0500 97000000 		call	_ZN3PCBC1EPFvPvES0_S0_m@plt
 1148      E7800000 
 1149              	.LVL86:
 1150              	.LEHE1:
 227:src/Riscv.cpp ****     while(!userPCB->isFinished())
 1151              		.loc 1 227 5 is_stmt 1 discriminator 2
 227:src/Riscv.cpp ****     while(!userPCB->isFinished())
 1152              		.loc 1 227 19 is_stmt 0 discriminator 2
 1153 0508 13850400 		mv	a0,s1
 1154              	.LEHB2:
 1155 050c 97000000 		call	_ZN3PCB5startEv@plt
 1155      E7800000 
 1156              	.LVL87:
 1157              	.L52:
 228:src/Riscv.cpp ****     {
 1158              		.loc 1 228 5 is_stmt 1
 228:src/Riscv.cpp ****     {
 1159              		.loc 1 228 11
 228:src/Riscv.cpp ****     {
 1160              		.loc 1 228 31 is_stmt 0
 1161 0514 13850400 		mv	a0,s1
 1162 0518 97000000 		call	_ZN3PCB10isFinishedEv@plt
 1162      E7800000 
 1163              	.LVL88:
 228:src/Riscv.cpp ****     {
 1164              		.loc 1 228 11
 1165 0520 63180500 		bnez	a0,.L51
 230:src/Riscv.cpp ****     }
 1166              		.loc 1 230 9 is_stmt 1
 230:src/Riscv.cpp ****     }
 1167              		.loc 1 230 24 is_stmt 0
 1168 0524 97000000 		call	thread_dispatch@plt
 1168      E7800000 
 1169              	.LVL89:
 228:src/Riscv.cpp ****     {
 1170              		.loc 1 228 5
 1171 052c 6FF09FFE 		j	.L52
 1172              	.L51:
 234:src/Riscv.cpp **** 
 1173              		.loc 1 234 5 is_stmt 1
 234:src/Riscv.cpp **** 
 1174              		.loc 1 234 22 is_stmt 0
 1175 0530 97000000 		call	_ZN5Riscv17disableInterruptsEv
 1175      E7800000 
 1176              	.LVL90:
 236:src/Riscv.cpp **** 
 1177              		.loc 1 236 5 is_stmt 1
GAS LISTING /tmp/ccRjjh6e.s 			page 35


 236:src/Riscv.cpp **** 
 1178              		.loc 1 236 14 is_stmt 0
 1179 0538 97000000 		call	_ZN5Riscv9endSystemEv
 1179      E7800000 
 1180              	.LVL91:
 238:src/Riscv.cpp **** }
 1181              		.loc 1 238 5 is_stmt 1
 238:src/Riscv.cpp **** }
 1182              		.loc 1 238 23 is_stmt 0
 1183 0540 17050000 		lla	a0,.LC0
 1183      13050500 
 1184 0548 97000000 		call	_ZN5Riscv11printStringEPKc
 1184      E7800000 
 1185              	.LVL92:
 1186              	.LEHE2:
 239:src/Riscv.cpp **** 
 1187              		.loc 1 239 1
 1188 0550 83308101 		ld	ra,24(sp)
 1189              		.cfi_remember_state
 1190              		.cfi_restore 1
 1191 0554 03340101 		ld	s0,16(sp)
 1192              		.cfi_restore 8
 1193              		.cfi_def_cfa 2, 32
 1194 0558 83348100 		ld	s1,8(sp)
 1195              		.cfi_restore 9
 1196              	.LVL93:
 1197 055c 03390100 		ld	s2,0(sp)
 1198              		.cfi_restore 18
 1199 0560 13010102 		addi	sp,sp,32
 1200              		.cfi_def_cfa_offset 0
 1201 0564 67800000 		jr	ra
 1202              	.L54:
 1203              		.cfi_restore_state
 1204 0568 13090500 		mv	s2,a0
 225:src/Riscv.cpp ****     //PCB* userPCB = new PCB(&Riscv::myTestsWrapper, 0, kmalloc(DEFAULT_STACK_SIZE), DEFAULT_TIME_S
 1205              		.loc 1 225 103
 1206 056c 13850400 		mv	a0,s1
 1207 0570 97000000 		call	_ZN3PCBdlEPv@plt
 1207      E7800000 
 1208              	.LVL94:
 1209 0578 13050900 		mv	a0,s2
 1210              	.LEHB3:
 1211 057c 97000000 		call	_Unwind_Resume@plt
 1211      E7800000 
 1212              	.LVL95:
 1213              	.LEHE3:
 1214              		.cfi_endproc
 1215              	.LFE34:
 1216              		.globl	__gxx_personality_v0
 1217              		.section	.gcc_except_table,"a",@progbits
 1218              	.LLSDA34:
 1219 0000 FF       		.byte	0xff
 1220 0001 FF       		.byte	0xff
 1221 0002 03       		.byte	0x3
 1222 0003 34       		.byte	0x34
 1223 0004 00000000 		.4byte	.LEHB0-.LFB34
 1224 0008 00000000 		.4byte	.LEHE0-.LEHB0
GAS LISTING /tmp/ccRjjh6e.s 			page 36


 1225 000c 00000000 		.4byte	0
 1226 0010 00       		.byte	0
 1227 0011 00000000 		.4byte	.LEHB1-.LFB34
 1228 0015 00000000 		.4byte	.LEHE1-.LEHB1
 1229 0019 00000000 		.4byte	.L54-.LFB34
 1230 001d 00       		.byte	0
 1231 001e 00000000 		.4byte	.LEHB2-.LFB34
 1232 0022 00000000 		.4byte	.LEHE2-.LEHB2
 1233 0026 00000000 		.4byte	0
 1234 002a 00       		.byte	0
 1235 002b 00000000 		.4byte	.LEHB3-.LFB34
 1236 002f 00000000 		.4byte	.LEHE3-.LEHB3
 1237 0033 00000000 		.4byte	0
 1238 0037 00       		.byte	0
 1239              		.text
 1241              		.align	2
 1242              		.globl	_ZN5Riscv14myTestsWrapperEPv
 1244              	_ZN5Riscv14myTestsWrapperEPv:
 1245              	.LFB36:
 245:src/Riscv.cpp **** 
 246:src/Riscv.cpp **** void Riscv::myTestsWrapper(void* p)
 247:src/Riscv.cpp **** {
 1246              		.loc 1 247 1 is_stmt 1
 1247              		.cfi_startproc
 1248              	.LVL96:
 1249 0584 130101FF 		addi	sp,sp,-16
 1250              		.cfi_def_cfa_offset 16
 1251 0588 23341100 		sd	ra,8(sp)
 1252 058c 23308100 		sd	s0,0(sp)
 1253              		.cfi_offset 1, -8
 1254              		.cfi_offset 8, -16
 1255 0590 13040101 		addi	s0,sp,16
 1256              		.cfi_def_cfa 8, 0
 248:src/Riscv.cpp ****     myTests();
 1257              		.loc 1 248 5
 1258              		.loc 1 248 12 is_stmt 0
 1259 0594 97000000 		call	_Z7myTestsv@plt
 1259      E7800000 
 1260              	.LVL97:
 249:src/Riscv.cpp **** }
 1261              		.loc 1 249 1
 1262 059c 83308100 		ld	ra,8(sp)
 1263              		.cfi_restore 1
 1264 05a0 03340100 		ld	s0,0(sp)
 1265              		.cfi_restore 8
 1266              		.cfi_def_cfa 2, 16
 1267 05a4 13010101 		addi	sp,sp,16
 1268              		.cfi_def_cfa_offset 0
 1269 05a8 67800000 		jr	ra
 1270              		.cfi_endproc
 1271              	.LFE36:
 1273              		.align	2
 1274              		.globl	_ZN5Riscv22disableTimerInterruptsEv
 1276              	_ZN5Riscv22disableTimerInterruptsEv:
 1277              	.LFB37:
 250:src/Riscv.cpp **** 
 251:src/Riscv.cpp **** void Riscv::disableTimerInterrupts()
GAS LISTING /tmp/ccRjjh6e.s 			page 37


 252:src/Riscv.cpp **** {
 1278              		.loc 1 252 1 is_stmt 1
 1279              		.cfi_startproc
 1280 05ac 130101FF 		addi	sp,sp,-16
 1281              		.cfi_def_cfa_offset 16
 1282 05b0 23348100 		sd	s0,8(sp)
 1283              		.cfi_offset 8, -8
 1284 05b4 13040101 		addi	s0,sp,16
 1285              		.cfi_def_cfa 8, 0
 253:src/Riscv.cpp ****     //uint64 x = 0x200;
 254:src/Riscv.cpp ****     //__asm__ volatile("csrs sie, %0"::"r"(x));
 255:src/Riscv.cpp ****     uint64 x = 0x2;
 1286              		.loc 1 255 5
 1287              	.LVL98:
 256:src/Riscv.cpp ****     __asm__ volatile("csrc sie, %0"::"r"(x));
 1288              		.loc 1 256 5
 1289              		.loc 1 256 45 is_stmt 0
 1290 05b8 93072000 		li	a5,2
 1291              	#APP
 1292              	# 256 "src/Riscv.cpp" 1
 257              	}
 1293              		csrc sie, a5
 1294              	# 0 "" 2
 1295              		.loc 1 257 1
 1296              	#NO_APP
 1297 05c0 03348100 		ld	s0,8(sp)
 1298              		.cfi_restore 8
 1299              		.cfi_def_cfa 2, 16
 1300 05c4 13010101 		addi	sp,sp,16
 1301              		.cfi_def_cfa_offset 0
 1302 05c8 67800000 		jr	ra
 1303              		.cfi_endproc
 1304              	.LFE37:
 1306              		.align	2
 1307              		.globl	_ZN5Riscv9idleRiscvEPv
 1309              	_ZN5Riscv9idleRiscvEPv:
 1310              	.LFB38:
 258:src/Riscv.cpp **** 
 259:src/Riscv.cpp **** void Riscv::idleRiscv(void* p)
 260:src/Riscv.cpp **** {
 1311              		.loc 1 260 1 is_stmt 1
 1312              		.cfi_startproc
 1313              	.LVL99:
 1314 05cc 130101FF 		addi	sp,sp,-16
 1315              		.cfi_def_cfa_offset 16
 1316 05d0 23348100 		sd	s0,8(sp)
 1317              		.cfi_offset 8, -8
 1318 05d4 13040101 		addi	s0,sp,16
 1319              		.cfi_def_cfa 8, 0
 1320              	.L62:
 261:src/Riscv.cpp ****     while(true)
 1321              		.loc 1 261 5 discriminator 1
 1322              		.loc 1 261 5 discriminator 1
 1323 05d8 6F000000 		j	.L62
 1324              		.cfi_endproc
 1325              	.LFE38:
 1327              		.align	2
GAS LISTING /tmp/ccRjjh6e.s 			page 38


 1328              		.globl	_ZN5Riscv13w_a0_sscratchEv
 1330              	_ZN5Riscv13w_a0_sscratchEv:
 1331              	.LFB39:
 262:src/Riscv.cpp ****     {
 263:src/Riscv.cpp **** 
 264:src/Riscv.cpp ****     }
 265:src/Riscv.cpp **** }
 266:src/Riscv.cpp **** 
 267:src/Riscv.cpp **** void Riscv::w_a0_sscratch()
 268:src/Riscv.cpp **** {
 1332              		.loc 1 268 1
 1333              		.cfi_startproc
 1334 05dc 130101FF 		addi	sp,sp,-16
 1335              		.cfi_def_cfa_offset 16
 1336 05e0 23348100 		sd	s0,8(sp)
 1337              		.cfi_offset 8, -8
 1338 05e4 13040101 		addi	s0,sp,16
 1339              		.cfi_def_cfa 8, 0
 269:src/Riscv.cpp ****     uint64 a1Temp;
 1340              		.loc 1 269 5
 270:src/Riscv.cpp ****     __asm__ volatile("mv %0, a1":"=r"(a1Temp));
 1341              		.loc 1 270 5
 1342              		.loc 1 270 47 is_stmt 0
 1343              	#APP
 1344              	# 270 "src/Riscv.cpp" 1
 271              	    __asm__ volatile("csrr a1, sscratch");
 1345              		mv a5, a1
 1346              	# 0 "" 2
 1347              	.LVL100:
 1348              		.loc 1 271 5 is_stmt 1
 1349              		.loc 1 271 42 is_stmt 0
 1350              	# 271 "src/Riscv.cpp" 1
 272              	    __asm__ volatile("sd a0, 80(a1)");
 1351              		csrr a1, sscratch
 1352              	# 0 "" 2
 1353              		.loc 1 272 5 is_stmt 1
 1354              		.loc 1 272 38 is_stmt 0
 1355              	# 272 "src/Riscv.cpp" 1
 273              	    __asm__ volatile("mv a1,%0"::"r"(a1Temp));
 1356              		sd a0, 80(a1)
 1357              	# 0 "" 2
 1358              		.loc 1 273 5 is_stmt 1
 1359              		.loc 1 273 46 is_stmt 0
 1360              	# 273 "src/Riscv.cpp" 1
 274              	}
 1361              		mv a1,a5
 1362              	# 0 "" 2
 1363              		.loc 1 274 1
 1364              	#NO_APP
 1365 05f8 03348100 		ld	s0,8(sp)
 1366              		.cfi_restore 8
 1367              		.cfi_def_cfa 2, 16
 1368 05fc 13010101 		addi	sp,sp,16
 1369              		.cfi_def_cfa_offset 0
 1370 0600 67800000 		jr	ra
 1371              		.cfi_endproc
 1372              	.LFE39:
GAS LISTING /tmp/ccRjjh6e.s 			page 39


 1374              		.bss
 1375              		.align	3
 1376              		.set	.LANCHOR1,. + 0
 1379              	_ZZN5Riscv20handleSupervisorTrapEvE5total:
 1380 0000 00000000 		.zero	8
 1380      00000000 
 1381              		.section	.rodata
 1382 010c 00000000 		.align	3
 1383              		.set	.LANCHOR0,. + 0
 1386              	_ZZN5Riscv12printIntegerEmE6digits:
 1387 0110 30313233 		.string	"0123456789"
 1387      34353637 
 1387      383900
 1388              		.text
 1389              	.Letext0:
 1390              		.file 4 "src/../h/../lib/hw.h"
 1391              		.file 5 "src/../h/MemoryAllocator.hpp"
 1392              		.file 6 "src/../h/KSemaphore.hpp"
 1393              		.file 7 "src/../h/SleepPCBList.hpp"
 1394              		.file 8 "src/../h/KConsole.hpp"
 1395              		.file 9 "src/../h/Tests.hpp"
 1396              		.file 10 "src/../test/userMain.hpp"
 1397              		.file 11 "src/../h/syscall_c.h"
 1398              		.file 12 "src/../lib/console.h"
 6334              		.align	3
 6337              	DW.ref.__gxx_personality_v0:
 6338 0000 00000000 		.dword	__gxx_personality_v0
 6338      00000000 
 6339              		.ident	"GCC: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0"
 6340              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/ccRjjh6e.s 			page 40


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Riscv.cpp
     /tmp/ccRjjh6e.s:9      .text:0000000000000000 _ZN5Riscv15userMainWrapperEPv
     /tmp/ccRjjh6e.s:13     .text:0000000000000000 .L0 
     /tmp/ccRjjh6e.s:14     .text:0000000000000000 .L0 
     /tmp/ccRjjh6e.s:15     .text:0000000000000004 .L0 
     /tmp/ccRjjh6e.s:18     .text:000000000000000c .L0 
     /tmp/ccRjjh6e.s:19     .text:000000000000000c .L0 
     /tmp/ccRjjh6e.s:21     .text:0000000000000010 .L0 
     /tmp/ccRjjh6e.s:23     .text:0000000000000010 .L0 
     /tmp/ccRjjh6e.s:24     .text:0000000000000010 .L0 
     /tmp/ccRjjh6e.s:27     .text:0000000000000018 .L0 
     /tmp/ccRjjh6e.s:28     .text:000000000000001c .L0 
     /tmp/ccRjjh6e.s:30     .text:0000000000000020 .L0 
     /tmp/ccRjjh6e.s:31     .text:0000000000000020 .L0 
     /tmp/ccRjjh6e.s:33     .text:0000000000000024 .L0 
     /tmp/ccRjjh6e.s:35     .text:0000000000000028 .L0 
     /tmp/ccRjjh6e.s:41     .text:0000000000000028 _ZN5Riscv10initSystemEv
     /tmp/ccRjjh6e.s:44     .text:0000000000000028 .L0 
     /tmp/ccRjjh6e.s:45     .text:0000000000000028 .L0 
     /tmp/ccRjjh6e.s:46     .text:000000000000002c .L0 
     /tmp/ccRjjh6e.s:49     .text:0000000000000034 .L0 
     /tmp/ccRjjh6e.s:50     .text:0000000000000034 .L0 
     /tmp/ccRjjh6e.s:52     .text:0000000000000038 .L0 
     /tmp/ccRjjh6e.s:54     .text:0000000000000038 .L0 
     /tmp/ccRjjh6e.s:55     .text:0000000000000038 .L0 
     /tmp/ccRjjh6e.s:61     .text:0000000000000040 .L0 
  src/../h/Riscv.hpp:133    .text:0000000000000040 .L0 
     /tmp/ccRjjh6e.s:71     .text:0000000000000044 .L0 
     /tmp/ccRjjh6e.s:72     .text:0000000000000044 .L0 
     /tmp/ccRjjh6e.s:75     .text:000000000000004c .L0 
     /tmp/ccRjjh6e.s:76     .text:000000000000004c .L0 
     /tmp/ccRjjh6e.s:79     .text:0000000000000054 .L0 
     /tmp/ccRjjh6e.s:80     .text:0000000000000058 .L0 
     /tmp/ccRjjh6e.s:82     .text:000000000000005c .L0 
     /tmp/ccRjjh6e.s:83     .text:000000000000005c .L0 
     /tmp/ccRjjh6e.s:85     .text:0000000000000060 .L0 
     /tmp/ccRjjh6e.s:87     .text:0000000000000064 .L0 
     /tmp/ccRjjh6e.s:93     .text:0000000000000064 _ZN5Riscv16enableInterruptsEv
     /tmp/ccRjjh6e.s:96     .text:0000000000000064 .L0 
     /tmp/ccRjjh6e.s:97     .text:0000000000000064 .L0 
     /tmp/ccRjjh6e.s:98     .text:0000000000000068 .L0 
     /tmp/ccRjjh6e.s:100    .text:000000000000006c .L0 
     /tmp/ccRjjh6e.s:102    .text:0000000000000070 .L0 
     /tmp/ccRjjh6e.s:107    .text:0000000000000070 .L0 
     /tmp/ccRjjh6e.s:108    .text:0000000000000070 .L0 
     /tmp/ccRjjh6e.s:109    .text:0000000000000070 .L0 
     /tmp/ccRjjh6e.s:119    .text:0000000000000078 .L0 
     /tmp/ccRjjh6e.s:120    .text:000000000000007c .L0 
     /tmp/ccRjjh6e.s:121    .text:000000000000007c .L0 
     /tmp/ccRjjh6e.s:123    .text:0000000000000080 .L0 
     /tmp/ccRjjh6e.s:125    .text:0000000000000084 .L0 
     /tmp/ccRjjh6e.s:131    .text:0000000000000084 _ZN5Riscv17disableInterruptsEv
     /tmp/ccRjjh6e.s:134    .text:0000000000000084 .L0 
     /tmp/ccRjjh6e.s:135    .text:0000000000000084 .L0 
     /tmp/ccRjjh6e.s:136    .text:0000000000000088 .L0 
     /tmp/ccRjjh6e.s:138    .text:000000000000008c .L0 
GAS LISTING /tmp/ccRjjh6e.s 			page 41


     /tmp/ccRjjh6e.s:140    .text:0000000000000090 .L0 
     /tmp/ccRjjh6e.s:145    .text:0000000000000090 .L0 
     /tmp/ccRjjh6e.s:146    .text:0000000000000090 .L0 
     /tmp/ccRjjh6e.s:147    .text:0000000000000090 .L0 
     /tmp/ccRjjh6e.s:157    .text:0000000000000098 .L0 
     /tmp/ccRjjh6e.s:158    .text:000000000000009c .L0 
     /tmp/ccRjjh6e.s:159    .text:000000000000009c .L0 
     /tmp/ccRjjh6e.s:161    .text:00000000000000a0 .L0 
     /tmp/ccRjjh6e.s:163    .text:00000000000000a4 .L0 
     /tmp/ccRjjh6e.s:169    .text:00000000000000a4 _ZN5Riscv9endSystemEv
     /tmp/ccRjjh6e.s:172    .text:00000000000000a4 .L0 
     /tmp/ccRjjh6e.s:173    .text:00000000000000a4 .L0 
     /tmp/ccRjjh6e.s:174    .text:00000000000000a8 .L0 
     /tmp/ccRjjh6e.s:177    .text:00000000000000b0 .L0 
     /tmp/ccRjjh6e.s:178    .text:00000000000000b0 .L0 
     /tmp/ccRjjh6e.s:180    .text:00000000000000b4 .L0 
     /tmp/ccRjjh6e.s:182    .text:00000000000000b4 .L0 
     /tmp/ccRjjh6e.s:183    .text:00000000000000b4 .L0 
     /tmp/ccRjjh6e.s:186    .text:00000000000000bc .L0 
     /tmp/ccRjjh6e.s:187    .text:00000000000000c0 .L0 
     /tmp/ccRjjh6e.s:189    .text:00000000000000c4 .L0 
     /tmp/ccRjjh6e.s:190    .text:00000000000000c4 .L0 
     /tmp/ccRjjh6e.s:192    .text:00000000000000c8 .L0 
     /tmp/ccRjjh6e.s:194    .text:00000000000000cc .L0 
     /tmp/ccRjjh6e.s:200    .text:00000000000000cc _ZN5Riscv10popSppSpieEv
     /tmp/ccRjjh6e.s:203    .text:00000000000000cc .L0 
     /tmp/ccRjjh6e.s:204    .text:00000000000000cc .L0 
     /tmp/ccRjjh6e.s:205    .text:00000000000000d0 .L0 
     /tmp/ccRjjh6e.s:207    .text:00000000000000d4 .L0 
     /tmp/ccRjjh6e.s:209    .text:00000000000000d8 .L0 
     /tmp/ccRjjh6e.s:211    .text:00000000000000d8 .L0 
       src/Riscv.cpp:40     .text:00000000000000d8 .L0 
     /tmp/ccRjjh6e.s:217    .text:00000000000000dc .L0 
       src/Riscv.cpp:41     .text:00000000000000dc .L0 
     /tmp/ccRjjh6e.s:223    .text:00000000000000e0 .L0 
     /tmp/ccRjjh6e.s:224    .text:00000000000000e4 .L0 
     /tmp/ccRjjh6e.s:225    .text:00000000000000e4 .L0 
     /tmp/ccRjjh6e.s:227    .text:00000000000000e8 .L0 
     /tmp/ccRjjh6e.s:229    .text:00000000000000ec .L0 
     /tmp/ccRjjh6e.s:235    .text:00000000000000ec _ZN5Riscv11printStringEPKc
     /tmp/ccRjjh6e.s:238    .text:00000000000000ec .L0 
     /tmp/ccRjjh6e.s:240    .text:00000000000000ec .L0 
     /tmp/ccRjjh6e.s:241    .text:00000000000000f0 .L0 
     /tmp/ccRjjh6e.s:246    .text:0000000000000100 .L0 
     /tmp/ccRjjh6e.s:247    .text:0000000000000100 .L0 
     /tmp/ccRjjh6e.s:248    .text:0000000000000100 .L0 
     /tmp/ccRjjh6e.s:249    .text:0000000000000100 .L0 
     /tmp/ccRjjh6e.s:251    .text:0000000000000104 .L0 
     /tmp/ccRjjh6e.s:256    .text:0000000000000108 .L0 
     /tmp/ccRjjh6e.s:257    .text:0000000000000108 .L0 
     /tmp/ccRjjh6e.s:258    .text:0000000000000108 .L0 
  src/../h/Riscv.hpp:187    .text:0000000000000108 .L0 
     /tmp/ccRjjh6e.s:266    .text:0000000000000110 .L0 
     /tmp/ccRjjh6e.s:267    .text:0000000000000110 .L0 
     /tmp/ccRjjh6e.s:274    .text:0000000000000114 .L0 
     /tmp/ccRjjh6e.s:275    .text:0000000000000114 .L0 
     /tmp/ccRjjh6e.s:276    .text:0000000000000114 .L0 
GAS LISTING /tmp/ccRjjh6e.s 			page 42


     /tmp/ccRjjh6e.s:287    .text:000000000000011c .L0 
     /tmp/ccRjjh6e.s:288    .text:000000000000011c .L0 
     /tmp/ccRjjh6e.s:289    .text:000000000000011c .L0 
     /tmp/ccRjjh6e.s:291    .text:0000000000000120 .L0 
     /tmp/ccRjjh6e.s:293    .text:0000000000000124 .L0 
     /tmp/ccRjjh6e.s:294    .text:0000000000000124 .L0 
     /tmp/ccRjjh6e.s:297    .text:000000000000012c .L0 
     /tmp/ccRjjh6e.s:298    .text:000000000000012c .L0 
     /tmp/ccRjjh6e.s:301    .text:0000000000000130 .L0 
     /tmp/ccRjjh6e.s:304    .text:0000000000000134 .L0 
     /tmp/ccRjjh6e.s:305    .text:0000000000000134 .L0 
     /tmp/ccRjjh6e.s:308    .text:0000000000000138 .L0 
     /tmp/ccRjjh6e.s:314    .text:0000000000000140 .L0 
  src/../h/Riscv.hpp:178    .text:0000000000000140 .L0 
     /tmp/ccRjjh6e.s:324    .text:0000000000000144 .L0 
     /tmp/ccRjjh6e.s:325    .text:0000000000000148 .L0 
     /tmp/ccRjjh6e.s:327    .text:000000000000014c .L0 
     /tmp/ccRjjh6e.s:328    .text:000000000000014c .L0 
     /tmp/ccRjjh6e.s:330    .text:0000000000000150 .L0 
     /tmp/ccRjjh6e.s:333    .text:0000000000000154 .L0 
     /tmp/ccRjjh6e.s:335    .text:0000000000000158 .L0 
     /tmp/ccRjjh6e.s:337    .text:000000000000015c .L0 
     /tmp/ccRjjh6e.s:343    .text:000000000000015c _ZN5Riscv12printIntegerEm
     /tmp/ccRjjh6e.s:346    .text:000000000000015c .L0 
     /tmp/ccRjjh6e.s:348    .text:000000000000015c .L0 
     /tmp/ccRjjh6e.s:349    .text:0000000000000160 .L0 
     /tmp/ccRjjh6e.s:354    .text:0000000000000170 .L0 
     /tmp/ccRjjh6e.s:355    .text:0000000000000170 .L0 
     /tmp/ccRjjh6e.s:356    .text:0000000000000170 .L0 
     /tmp/ccRjjh6e.s:357    .text:0000000000000170 .L0 
     /tmp/ccRjjh6e.s:359    .text:0000000000000174 .L0 
     /tmp/ccRjjh6e.s:363    .text:0000000000000174 .L0 
     /tmp/ccRjjh6e.s:364    .text:0000000000000174 .L0 
     /tmp/ccRjjh6e.s:365    .text:0000000000000174 .L0 
  src/../h/Riscv.hpp:187    .text:0000000000000174 .L0 
     /tmp/ccRjjh6e.s:373    .text:000000000000017c .L0 
     /tmp/ccRjjh6e.s:374    .text:000000000000017c .L0 
     /tmp/ccRjjh6e.s:381    .text:0000000000000180 .L0 
     /tmp/ccRjjh6e.s:382    .text:0000000000000180 .L0 
     /tmp/ccRjjh6e.s:383    .text:0000000000000180 .L0 
     /tmp/ccRjjh6e.s:393    .text:0000000000000188 .L0 
     /tmp/ccRjjh6e.s:394    .text:0000000000000188 .L0 
     /tmp/ccRjjh6e.s:395    .text:0000000000000188 .L0 
     /tmp/ccRjjh6e.s:396    .text:0000000000000188 .L0 
     /tmp/ccRjjh6e.s:397    .text:0000000000000188 .L0 
     /tmp/ccRjjh6e.s:398    .text:0000000000000188 .L0 
     /tmp/ccRjjh6e.s:399    .text:0000000000000188 .L0 
     /tmp/ccRjjh6e.s:400    .text:0000000000000188 .L0 
     /tmp/ccRjjh6e.s:403    .text:000000000000018c .L0 
     /tmp/ccRjjh6e.s:404    .text:000000000000018c .L0 
     /tmp/ccRjjh6e.s:408    .text:0000000000000190 .L0 
     /tmp/ccRjjh6e.s:409    .text:0000000000000190 .L0 
     /tmp/ccRjjh6e.s:410    .text:0000000000000190 .L0 
     /tmp/ccRjjh6e.s:414    .text:0000000000000198 .L0 
     /tmp/ccRjjh6e.s:420    .text:00000000000001b0 .L0 
     /tmp/ccRjjh6e.s:426    .text:00000000000001c0 .L0 
     /tmp/ccRjjh6e.s:428    .text:00000000000001c4 .L0 
GAS LISTING /tmp/ccRjjh6e.s 			page 43


     /tmp/ccRjjh6e.s:431    .text:00000000000001c8 .L0 
     /tmp/ccRjjh6e.s:436    .text:00000000000001d0 .L0 
     /tmp/ccRjjh6e.s:437    .text:00000000000001d0 .L0 
     /tmp/ccRjjh6e.s:441    .text:00000000000001d8 .L0 
     /tmp/ccRjjh6e.s:442    .text:00000000000001d8 .L0 
     /tmp/ccRjjh6e.s:450    .text:00000000000001f0 .L0 
     /tmp/ccRjjh6e.s:451    .text:00000000000001f0 .L0 
     /tmp/ccRjjh6e.s:455    .text:00000000000001fc .L0 
     /tmp/ccRjjh6e.s:456    .text:00000000000001fc .L0 
     /tmp/ccRjjh6e.s:459    .text:0000000000000200 .L0 
     /tmp/ccRjjh6e.s:465    .text:0000000000000208 .L0 
  src/../h/Riscv.hpp:178    .text:0000000000000208 .L0 
     /tmp/ccRjjh6e.s:475    .text:000000000000020c .L0 
     /tmp/ccRjjh6e.s:476    .text:0000000000000210 .L0 
     /tmp/ccRjjh6e.s:478    .text:0000000000000214 .L0 
     /tmp/ccRjjh6e.s:479    .text:0000000000000214 .L0 
     /tmp/ccRjjh6e.s:481    .text:0000000000000218 .L0 
     /tmp/ccRjjh6e.s:483    .text:000000000000021c .L0 
     /tmp/ccRjjh6e.s:485    .text:0000000000000220 .L0 
     /tmp/ccRjjh6e.s:487    .text:0000000000000224 .L0 
     /tmp/ccRjjh6e.s:493    .text:0000000000000224 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccRjjh6e.s:496    .text:0000000000000224 .L0 
     /tmp/ccRjjh6e.s:497    .text:0000000000000224 .L0 
     /tmp/ccRjjh6e.s:498    .text:0000000000000228 .L0 
     /tmp/ccRjjh6e.s:502    .text:0000000000000234 .L0 
     /tmp/ccRjjh6e.s:503    .text:0000000000000234 .L0 
     /tmp/ccRjjh6e.s:504    .text:0000000000000234 .L0 
     /tmp/ccRjjh6e.s:506    .text:0000000000000238 .L0 
     /tmp/ccRjjh6e.s:508    .text:0000000000000238 .L0 
       src/Riscv.cpp:92     .text:0000000000000238 .L0 
     /tmp/ccRjjh6e.s:519    .text:0000000000000248 .L0 
     /tmp/ccRjjh6e.s:520    .text:0000000000000248 .L0 
     /tmp/ccRjjh6e.s:521    .text:0000000000000248 .L0 
  src/../h/Riscv.hpp:108    .text:0000000000000248 .L0 
     /tmp/ccRjjh6e.s:529    .text:0000000000000250 .L0 
     /tmp/ccRjjh6e.s:530    .text:0000000000000250 .L0 
     /tmp/ccRjjh6e.s:536    .text:0000000000000254 .L0 
     /tmp/ccRjjh6e.s:550    .text:0000000000000280 .L0 
     /tmp/ccRjjh6e.s:551    .text:0000000000000280 .L0 
     /tmp/ccRjjh6e.s:554    .text:0000000000000280 .L0 
     /tmp/ccRjjh6e.s:555    .text:0000000000000280 .L0 
     /tmp/ccRjjh6e.s:556    .text:0000000000000280 .L0 
       src/Riscv.cpp:160    .text:0000000000000280 .L0 
     /tmp/ccRjjh6e.s:566    .text:0000000000000284 .L0 
     /tmp/ccRjjh6e.s:567    .text:0000000000000284 .L0 
     /tmp/ccRjjh6e.s:568    .text:0000000000000284 .L0 
  src/../h/Riscv.hpp:118    .text:0000000000000284 .L0 
     /tmp/ccRjjh6e.s:576    .text:000000000000028c .L0 
     /tmp/ccRjjh6e.s:577    .text:000000000000028c .L0 
     /tmp/ccRjjh6e.s:581    .text:0000000000000290 .L0 
     /tmp/ccRjjh6e.s:583    .text:0000000000000294 .L0 
     /tmp/ccRjjh6e.s:587    .text:0000000000000298 .L0 
     /tmp/ccRjjh6e.s:588    .text:0000000000000298 .L0 
     /tmp/ccRjjh6e.s:589    .text:0000000000000298 .L0 
  src/../h/Riscv.hpp:187    .text:0000000000000298 .L0 
     /tmp/ccRjjh6e.s:597    .text:00000000000002a0 .L0 
     /tmp/ccRjjh6e.s:598    .text:00000000000002a0 .L0 
GAS LISTING /tmp/ccRjjh6e.s 			page 44


     /tmp/ccRjjh6e.s:602    .text:00000000000002a4 .L0 
     /tmp/ccRjjh6e.s:604    .text:00000000000002a8 .L0 
     /tmp/ccRjjh6e.s:689    .text:00000000000002cc .L0 
     /tmp/ccRjjh6e.s:695    .text:00000000000002dc .L0 
     /tmp/ccRjjh6e.s:698    .text:00000000000002dc .L0 
     /tmp/ccRjjh6e.s:699    .text:00000000000002dc .L0 
     /tmp/ccRjjh6e.s:700    .text:00000000000002dc .L0 
     /tmp/ccRjjh6e.s:705    .text:00000000000002e8 .L0 
       src/Riscv.cpp:123    .text:00000000000002e8 .L0 
     /tmp/ccRjjh6e.s:711    .text:00000000000002ec .L0 
       src/Riscv.cpp:124    .text:00000000000002ec .L0 
     /tmp/ccRjjh6e.s:716    .text:00000000000002f0 .L0 
     /tmp/ccRjjh6e.s:717    .text:00000000000002f0 .L0 
       src/Riscv.cpp:126    .text:00000000000002f0 .L0 
     /tmp/ccRjjh6e.s:725    .text:00000000000002f4 .L0 
     /tmp/ccRjjh6e.s:726    .text:00000000000002f4 .L0 
     /tmp/ccRjjh6e.s:729    .text:00000000000002f8 .L0 
     /tmp/ccRjjh6e.s:734    .text:00000000000002fc .L0 
     /tmp/ccRjjh6e.s:735    .text:00000000000002fc .L0 
     /tmp/ccRjjh6e.s:740    .text:000000000000030c .L0 
     /tmp/ccRjjh6e.s:746    .text:0000000000000310 .L0 
     /tmp/ccRjjh6e.s:749    .text:0000000000000310 .L0 
     /tmp/ccRjjh6e.s:752    .text:0000000000000310 .L0 
     /tmp/ccRjjh6e.s:753    .text:0000000000000310 .L0 
     /tmp/ccRjjh6e.s:754    .text:0000000000000310 .L0 
  src/../h/Riscv.hpp:118    .text:0000000000000310 .L0 
     /tmp/ccRjjh6e.s:763    .text:0000000000000318 .L0 
     /tmp/ccRjjh6e.s:764    .text:0000000000000318 .L0 
     /tmp/ccRjjh6e.s:768    .text:000000000000031c .L0 
     /tmp/ccRjjh6e.s:772    .text:0000000000000320 .L0 
     /tmp/ccRjjh6e.s:773    .text:0000000000000320 .L0 
     /tmp/ccRjjh6e.s:774    .text:0000000000000320 .L0 
  src/../h/Riscv.hpp:187    .text:0000000000000320 .L0 
     /tmp/ccRjjh6e.s:782    .text:0000000000000328 .L0 
     /tmp/ccRjjh6e.s:783    .text:0000000000000328 .L0 
     /tmp/ccRjjh6e.s:787    .text:000000000000032c .L0 
     /tmp/ccRjjh6e.s:792    .text:0000000000000330 .L0 
     /tmp/ccRjjh6e.s:793    .text:0000000000000330 .L0 
     /tmp/ccRjjh6e.s:794    .text:0000000000000330 .L0 
     /tmp/ccRjjh6e.s:804    .text:0000000000000338 .L0 
     /tmp/ccRjjh6e.s:805    .text:0000000000000338 .L0 
     /tmp/ccRjjh6e.s:806    .text:0000000000000338 .L0 
     /tmp/ccRjjh6e.s:811    .text:000000000000034c .L0 
     /tmp/ccRjjh6e.s:812    .text:000000000000034c .L0 
     /tmp/ccRjjh6e.s:817    .text:0000000000000360 .L0 
     /tmp/ccRjjh6e.s:818    .text:0000000000000360 .L0 
     /tmp/ccRjjh6e.s:821    .text:0000000000000368 .L0 
     /tmp/ccRjjh6e.s:822    .text:0000000000000368 .L0 
     /tmp/ccRjjh6e.s:829    .text:0000000000000374 .L0 
     /tmp/ccRjjh6e.s:830    .text:0000000000000374 .L0 
     /tmp/ccRjjh6e.s:835    .text:0000000000000378 .L0 
     /tmp/ccRjjh6e.s:837    .text:000000000000037c .L0 
     /tmp/ccRjjh6e.s:840    .text:0000000000000380 .L0 
     /tmp/ccRjjh6e.s:841    .text:0000000000000380 .L0 
     /tmp/ccRjjh6e.s:846    .text:0000000000000384 .L0 
  src/../h/Riscv.hpp:192    .text:0000000000000384 .L0 
     /tmp/ccRjjh6e.s:856    .text:0000000000000388 .L0 
GAS LISTING /tmp/ccRjjh6e.s 			page 45


     /tmp/ccRjjh6e.s:857    .text:0000000000000388 .L0 
     /tmp/ccRjjh6e.s:862    .text:000000000000038c .L0 
  src/../h/Riscv.hpp:123    .text:000000000000038c .L0 
     /tmp/ccRjjh6e.s:869    .text:0000000000000390 .L0 
     /tmp/ccRjjh6e.s:875    .text:0000000000000394 .L0 
     /tmp/ccRjjh6e.s:876    .text:0000000000000394 .L0 
     /tmp/ccRjjh6e.s:878    .text:0000000000000398 .L0 
     /tmp/ccRjjh6e.s:879    .text:0000000000000398 .L0 
     /tmp/ccRjjh6e.s:889    .text:00000000000003a4 .L0 
     /tmp/ccRjjh6e.s:890    .text:00000000000003a4 .L0 
     /tmp/ccRjjh6e.s:894    .text:00000000000003b0 .L0 
       src/Riscv.cpp:130    .text:00000000000003b0 .L0 
     /tmp/ccRjjh6e.s:900    .text:00000000000003b4 .L0 
       src/Riscv.cpp:131    .text:00000000000003b4 .L0 
     /tmp/ccRjjh6e.s:905    .text:00000000000003b8 .L0 
     /tmp/ccRjjh6e.s:906    .text:00000000000003b8 .L0 
       src/Riscv.cpp:133    .text:00000000000003b8 .L0 
     /tmp/ccRjjh6e.s:914    .text:00000000000003c0 .L0 
     /tmp/ccRjjh6e.s:915    .text:00000000000003c0 .L0 
     /tmp/ccRjjh6e.s:919    .text:00000000000003cc .L0 
     /tmp/ccRjjh6e.s:920    .text:00000000000003cc .L0 
     /tmp/ccRjjh6e.s:931    .text:00000000000003dc .L0 
     /tmp/ccRjjh6e.s:932    .text:00000000000003dc .L0 
     /tmp/ccRjjh6e.s:933    .text:00000000000003dc .L0 
     /tmp/ccRjjh6e.s:937    .text:00000000000003e4 .L0 
     /tmp/ccRjjh6e.s:938    .text:00000000000003e4 .L0 
     /tmp/ccRjjh6e.s:939    .text:00000000000003e4 .L0 
     /tmp/ccRjjh6e.s:944    .text:00000000000003e8 .L0 
  src/../h/Riscv.hpp:192    .text:00000000000003e8 .L0 
     /tmp/ccRjjh6e.s:954    .text:00000000000003ec .L0 
     /tmp/ccRjjh6e.s:955    .text:00000000000003ec .L0 
     /tmp/ccRjjh6e.s:960    .text:00000000000003f0 .L0 
  src/../h/Riscv.hpp:123    .text:00000000000003f0 .L0 
     /tmp/ccRjjh6e.s:973    .text:00000000000003f4 .L0 
     /tmp/ccRjjh6e.s:974    .text:00000000000003f8 .L0 
     /tmp/ccRjjh6e.s:975    .text:00000000000003f8 .L0 
     /tmp/ccRjjh6e.s:977    .text:00000000000003fc .L0 
     /tmp/ccRjjh6e.s:978    .text:00000000000003fc .L0 
     /tmp/ccRjjh6e.s:980    .text:0000000000000400 .L0 
     /tmp/ccRjjh6e.s:982    .text:0000000000000404 .L0 
     /tmp/ccRjjh6e.s:985    .text:0000000000000408 .L0 
     /tmp/ccRjjh6e.s:989    .text:0000000000000408 .L0 
     /tmp/ccRjjh6e.s:990    .text:0000000000000408 .L0 
     /tmp/ccRjjh6e.s:991    .text:0000000000000408 .L0 
     /tmp/ccRjjh6e.s:994    .text:0000000000000410 .L0 
     /tmp/ccRjjh6e.s:997    .text:0000000000000414 .L0 
     /tmp/ccRjjh6e.s:998    .text:0000000000000414 .L0 
     /tmp/ccRjjh6e.s:999    .text:0000000000000414 .L0 
     /tmp/ccRjjh6e.s:1002   .text:000000000000041c .L0 
     /tmp/ccRjjh6e.s:1005   .text:0000000000000420 .L0 
     /tmp/ccRjjh6e.s:1006   .text:0000000000000420 .L0 
     /tmp/ccRjjh6e.s:1007   .text:0000000000000420 .L0 
     /tmp/ccRjjh6e.s:1010   .text:0000000000000428 .L0 
     /tmp/ccRjjh6e.s:1013   .text:000000000000042c .L0 
     /tmp/ccRjjh6e.s:1014   .text:000000000000042c .L0 
     /tmp/ccRjjh6e.s:1015   .text:000000000000042c .L0 
     /tmp/ccRjjh6e.s:1018   .text:0000000000000434 .L0 
GAS LISTING /tmp/ccRjjh6e.s 			page 46


     /tmp/ccRjjh6e.s:1021   .text:0000000000000438 .L0 
     /tmp/ccRjjh6e.s:1022   .text:0000000000000438 .L0 
     /tmp/ccRjjh6e.s:1023   .text:0000000000000438 .L0 
     /tmp/ccRjjh6e.s:1026   .text:0000000000000440 .L0 
     /tmp/ccRjjh6e.s:1029   .text:0000000000000444 .L0 
     /tmp/ccRjjh6e.s:1030   .text:0000000000000444 .L0 
     /tmp/ccRjjh6e.s:1031   .text:0000000000000444 .L0 
     /tmp/ccRjjh6e.s:1034   .text:000000000000044c .L0 
     /tmp/ccRjjh6e.s:1037   .text:0000000000000450 .L0 
     /tmp/ccRjjh6e.s:1038   .text:0000000000000450 .L0 
     /tmp/ccRjjh6e.s:1039   .text:0000000000000450 .L0 
     /tmp/ccRjjh6e.s:1042   .text:0000000000000458 .L0 
     /tmp/ccRjjh6e.s:1045   .text:000000000000045c .L0 
     /tmp/ccRjjh6e.s:1046   .text:000000000000045c .L0 
     /tmp/ccRjjh6e.s:1047   .text:000000000000045c .L0 
     /tmp/ccRjjh6e.s:1050   .text:0000000000000464 .L0 
     /tmp/ccRjjh6e.s:1053   .text:0000000000000468 .L0 
     /tmp/ccRjjh6e.s:1054   .text:0000000000000468 .L0 
     /tmp/ccRjjh6e.s:1055   .text:0000000000000468 .L0 
     /tmp/ccRjjh6e.s:1058   .text:0000000000000470 .L0 
     /tmp/ccRjjh6e.s:1061   .text:0000000000000474 .L0 
     /tmp/ccRjjh6e.s:1062   .text:0000000000000474 .L0 
     /tmp/ccRjjh6e.s:1063   .text:0000000000000474 .L0 
     /tmp/ccRjjh6e.s:1066   .text:000000000000047c .L0 
     /tmp/ccRjjh6e.s:1069   .text:0000000000000480 .L0 
     /tmp/ccRjjh6e.s:1070   .text:0000000000000480 .L0 
     /tmp/ccRjjh6e.s:1071   .text:0000000000000480 .L0 
     /tmp/ccRjjh6e.s:1074   .text:0000000000000488 .L0 
     /tmp/ccRjjh6e.s:1077   .text:000000000000048c .L0 
     /tmp/ccRjjh6e.s:1078   .text:000000000000048c .L0 
     /tmp/ccRjjh6e.s:1079   .text:000000000000048c .L0 
     /tmp/ccRjjh6e.s:1082   .text:0000000000000494 .L0 
     /tmp/ccRjjh6e.s:1085   .text:0000000000000498 .L0 
     /tmp/ccRjjh6e.s:1086   .text:0000000000000498 .L0 
     /tmp/ccRjjh6e.s:1087   .text:0000000000000498 .L0 
     /tmp/ccRjjh6e.s:1090   .text:00000000000004a0 .L0 
     /tmp/ccRjjh6e.s:1093   .text:00000000000004a4 .L0 
     /tmp/ccRjjh6e.s:1104   .text:00000000000004a4 _ZN5Riscv10kernelMainEv
     /tmp/ccRjjh6e.s:1107   .text:00000000000004a4 .L0 
     /tmp/ccRjjh6e.s:6337   .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/ccRjjh6e.s:1110   .text:00000000000004a4 .L0 
     /tmp/ccRjjh6e.s:1111   .text:00000000000004a8 .L0 
     /tmp/ccRjjh6e.s:1116   .text:00000000000004b8 .L0 
     /tmp/ccRjjh6e.s:1117   .text:00000000000004b8 .L0 
     /tmp/ccRjjh6e.s:1118   .text:00000000000004b8 .L0 
     /tmp/ccRjjh6e.s:1119   .text:00000000000004b8 .L0 
     /tmp/ccRjjh6e.s:1121   .text:00000000000004bc .L0 
     /tmp/ccRjjh6e.s:1124   .text:00000000000004bc .L0 
     /tmp/ccRjjh6e.s:1125   .text:00000000000004bc .L0 
     /tmp/ccRjjh6e.s:1128   .text:00000000000004c4 .L0 
     /tmp/ccRjjh6e.s:1129   .text:00000000000004c4 .L0 
     /tmp/ccRjjh6e.s:1132   .text:00000000000004cc .L0 
     /tmp/ccRjjh6e.s:1133   .text:00000000000004cc .L0 
     /tmp/ccRjjh6e.s:1138   .text:00000000000004dc .L0 
     /tmp/ccRjjh6e.s:1152   .text:0000000000000508 .L0 
     /tmp/ccRjjh6e.s:1153   .text:0000000000000508 .L0 
     /tmp/ccRjjh6e.s:1159   .text:0000000000000514 .L0 
GAS LISTING /tmp/ccRjjh6e.s 			page 47


     /tmp/ccRjjh6e.s:1160   .text:0000000000000514 .L0 
     /tmp/ccRjjh6e.s:1161   .text:0000000000000514 .L0 
     /tmp/ccRjjh6e.s:1165   .text:0000000000000520 .L0 
     /tmp/ccRjjh6e.s:1167   .text:0000000000000524 .L0 
     /tmp/ccRjjh6e.s:1168   .text:0000000000000524 .L0 
     /tmp/ccRjjh6e.s:1171   .text:000000000000052c .L0 
     /tmp/ccRjjh6e.s:1174   .text:0000000000000530 .L0 
     /tmp/ccRjjh6e.s:1175   .text:0000000000000530 .L0 
     /tmp/ccRjjh6e.s:1178   .text:0000000000000538 .L0 
     /tmp/ccRjjh6e.s:1179   .text:0000000000000538 .L0 
     /tmp/ccRjjh6e.s:1182   .text:0000000000000540 .L0 
     /tmp/ccRjjh6e.s:1183   .text:0000000000000540 .L0 
     /tmp/ccRjjh6e.s:1188   .text:0000000000000550 .L0 
     /tmp/ccRjjh6e.s:1189   .text:0000000000000554 .L0 
     /tmp/ccRjjh6e.s:1190   .text:0000000000000554 .L0 
     /tmp/ccRjjh6e.s:1192   .text:0000000000000558 .L0 
     /tmp/ccRjjh6e.s:1193   .text:0000000000000558 .L0 
     /tmp/ccRjjh6e.s:1195   .text:000000000000055c .L0 
     /tmp/ccRjjh6e.s:1198   .text:0000000000000560 .L0 
     /tmp/ccRjjh6e.s:1200   .text:0000000000000564 .L0 
     /tmp/ccRjjh6e.s:1203   .text:0000000000000568 .L0 
     /tmp/ccRjjh6e.s:1206   .text:000000000000056c .L0 
     /tmp/ccRjjh6e.s:1214   .text:0000000000000584 .L0 
     /tmp/ccRjjh6e.s:1244   .text:0000000000000584 _ZN5Riscv14myTestsWrapperEPv
     /tmp/ccRjjh6e.s:1247   .text:0000000000000584 .L0 
     /tmp/ccRjjh6e.s:1249   .text:0000000000000584 .L0 
     /tmp/ccRjjh6e.s:1250   .text:0000000000000588 .L0 
     /tmp/ccRjjh6e.s:1253   .text:0000000000000590 .L0 
     /tmp/ccRjjh6e.s:1254   .text:0000000000000590 .L0 
     /tmp/ccRjjh6e.s:1256   .text:0000000000000594 .L0 
     /tmp/ccRjjh6e.s:1258   .text:0000000000000594 .L0 
     /tmp/ccRjjh6e.s:1259   .text:0000000000000594 .L0 
     /tmp/ccRjjh6e.s:1262   .text:000000000000059c .L0 
     /tmp/ccRjjh6e.s:1263   .text:00000000000005a0 .L0 
     /tmp/ccRjjh6e.s:1265   .text:00000000000005a4 .L0 
     /tmp/ccRjjh6e.s:1266   .text:00000000000005a4 .L0 
     /tmp/ccRjjh6e.s:1268   .text:00000000000005a8 .L0 
     /tmp/ccRjjh6e.s:1270   .text:00000000000005ac .L0 
     /tmp/ccRjjh6e.s:1276   .text:00000000000005ac _ZN5Riscv22disableTimerInterruptsEv
     /tmp/ccRjjh6e.s:1279   .text:00000000000005ac .L0 
     /tmp/ccRjjh6e.s:1280   .text:00000000000005ac .L0 
     /tmp/ccRjjh6e.s:1281   .text:00000000000005b0 .L0 
     /tmp/ccRjjh6e.s:1283   .text:00000000000005b4 .L0 
     /tmp/ccRjjh6e.s:1285   .text:00000000000005b8 .L0 
     /tmp/ccRjjh6e.s:1288   .text:00000000000005b8 .L0 
     /tmp/ccRjjh6e.s:1289   .text:00000000000005b8 .L0 
     /tmp/ccRjjh6e.s:1290   .text:00000000000005b8 .L0 
     /tmp/ccRjjh6e.s:1297   .text:00000000000005c0 .L0 
     /tmp/ccRjjh6e.s:1298   .text:00000000000005c4 .L0 
     /tmp/ccRjjh6e.s:1299   .text:00000000000005c4 .L0 
     /tmp/ccRjjh6e.s:1301   .text:00000000000005c8 .L0 
     /tmp/ccRjjh6e.s:1303   .text:00000000000005cc .L0 
     /tmp/ccRjjh6e.s:1309   .text:00000000000005cc _ZN5Riscv9idleRiscvEPv
     /tmp/ccRjjh6e.s:1312   .text:00000000000005cc .L0 
     /tmp/ccRjjh6e.s:1314   .text:00000000000005cc .L0 
     /tmp/ccRjjh6e.s:1315   .text:00000000000005d0 .L0 
     /tmp/ccRjjh6e.s:1317   .text:00000000000005d4 .L0 
GAS LISTING /tmp/ccRjjh6e.s 			page 48


     /tmp/ccRjjh6e.s:1319   .text:00000000000005d8 .L0 
     /tmp/ccRjjh6e.s:1322   .text:00000000000005d8 .L0 
     /tmp/ccRjjh6e.s:1323   .text:00000000000005d8 .L0 
     /tmp/ccRjjh6e.s:1324   .text:00000000000005dc .L0 
     /tmp/ccRjjh6e.s:1330   .text:00000000000005dc _ZN5Riscv13w_a0_sscratchEv
     /tmp/ccRjjh6e.s:1333   .text:00000000000005dc .L0 
     /tmp/ccRjjh6e.s:1334   .text:00000000000005dc .L0 
     /tmp/ccRjjh6e.s:1335   .text:00000000000005e0 .L0 
     /tmp/ccRjjh6e.s:1337   .text:00000000000005e4 .L0 
     /tmp/ccRjjh6e.s:1339   .text:00000000000005e8 .L0 
     /tmp/ccRjjh6e.s:1341   .text:00000000000005e8 .L0 
     /tmp/ccRjjh6e.s:1342   .text:00000000000005e8 .L0 
       src/Riscv.cpp:270    .text:00000000000005e8 .L0 
     /tmp/ccRjjh6e.s:1349   .text:00000000000005ec .L0 
       src/Riscv.cpp:271    .text:00000000000005ec .L0 
     /tmp/ccRjjh6e.s:1354   .text:00000000000005f0 .L0 
       src/Riscv.cpp:272    .text:00000000000005f0 .L0 
     /tmp/ccRjjh6e.s:1359   .text:00000000000005f4 .L0 
       src/Riscv.cpp:273    .text:00000000000005f4 .L0 
     /tmp/ccRjjh6e.s:1365   .text:00000000000005f8 .L0 
     /tmp/ccRjjh6e.s:1366   .text:00000000000005fc .L0 
     /tmp/ccRjjh6e.s:1367   .text:00000000000005fc .L0 
     /tmp/ccRjjh6e.s:1369   .text:0000000000000600 .L0 
     /tmp/ccRjjh6e.s:1371   .text:0000000000000604 .L0 
     /tmp/ccRjjh6e.s:1376   .bss:0000000000000000 .LANCHOR1
     /tmp/ccRjjh6e.s:1379   .bss:0000000000000000 _ZZN5Riscv20handleSupervisorTrapEvE5total
     /tmp/ccRjjh6e.s:1383   .rodata:0000000000000110 .LANCHOR0
     /tmp/ccRjjh6e.s:1386   .rodata:0000000000000110 _ZZN5Riscv12printIntegerEmE6digits
     /tmp/ccRjjh6e.s:1399   .text:0000000000000604 .L0 
     /tmp/ccRjjh6e.s:55     .text:0000000000000038 .L0 
     /tmp/ccRjjh6e.s:416    .text:00000000000001a0 .L0 
     /tmp/ccRjjh6e.s:514    .text:000000000000023c .L0 
     /tmp/ccRjjh6e.s:616    .rodata:0000000000000000 .L32
     /tmp/ccRjjh6e.s:608    .text:00000000000002b4 .L0 
     /tmp/ccRjjh6e.s:700    .text:00000000000002dc .L0 
     /tmp/ccRjjh6e.s:806    .text:0000000000000338 .L0 
     /tmp/ccRjjh6e.s:812    .text:000000000000034c .L0 
     /tmp/ccRjjh6e.s:822    .text:0000000000000368 .L0 
     /tmp/ccRjjh6e.s:890    .text:00000000000003a4 .L0 
     /tmp/ccRjjh6e.s:1146   .text:00000000000004f8 .L0 
     /tmp/ccRjjh6e.s:1098   .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccRjjh6e.s:1183   .text:0000000000000540 .L0 
     /tmp/ccRjjh6e.s:302    .text:0000000000000134 .L14
     /tmp/ccRjjh6e.s:283    .text:000000000000011c .L15
     /tmp/ccRjjh6e.s:406    .text:0000000000000190 .L18
     /tmp/ccRjjh6e.s:448    .text:00000000000001f0 .L19
     /tmp/ccRjjh6e.s:434    .text:00000000000001d0 .L20
     /tmp/ccRjjh6e.s:742    .text:0000000000000310 .L23
     /tmp/ccRjjh6e.s:686    .text:00000000000002cc .L24
     /tmp/ccRjjh6e.s:967    .text:00000000000003f4 .L22
     /tmp/ccRjjh6e.s:936    .text:00000000000003e4 .L30
     /tmp/ccRjjh6e.s:883    .text:00000000000003a4 .L48
     /tmp/ccRjjh6e.s:871    .text:0000000000000394 .L49
     /tmp/ccRjjh6e.s:838    .text:0000000000000380 .L28
     /tmp/ccRjjh6e.s:731    .text:00000000000002fc .L29
     /tmp/ccRjjh6e.s:1172   .text:0000000000000530 .L51
     /tmp/ccRjjh6e.s:1157   .text:0000000000000514 .L52
GAS LISTING /tmp/ccRjjh6e.s 			page 49


     /tmp/ccRjjh6e.s:1320   .text:00000000000005d8 .L62
     /tmp/ccRjjh6e.s:926    .text:00000000000003dc .L45
     /tmp/ccRjjh6e.s:984    .text:0000000000000408 .L44
     /tmp/ccRjjh6e.s:1003   .text:0000000000000420 .L43
     /tmp/ccRjjh6e.s:1027   .text:0000000000000444 .L42
     /tmp/ccRjjh6e.s:1019   .text:0000000000000438 .L41
     /tmp/ccRjjh6e.s:995    .text:0000000000000414 .L40
     /tmp/ccRjjh6e.s:1011   .text:000000000000042c .L39
     /tmp/ccRjjh6e.s:1043   .text:000000000000045c .L38
     /tmp/ccRjjh6e.s:1067   .text:0000000000000480 .L37
     /tmp/ccRjjh6e.s:1051   .text:0000000000000468 .L36
     /tmp/ccRjjh6e.s:1059   .text:0000000000000474 .L35
     /tmp/ccRjjh6e.s:1035   .text:0000000000000450 .L34
     /tmp/ccRjjh6e.s:1075   .text:000000000000048c .L33
     /tmp/ccRjjh6e.s:1083   .text:0000000000000498 .L31
     /tmp/ccRjjh6e.s:1123   .text:00000000000004bc .LEHB0
     /tmp/ccRjjh6e.s:1105   .text:00000000000004a4 .LFB34
     /tmp/ccRjjh6e.s:1141   .text:00000000000004e8 .LEHE0
     /tmp/ccRjjh6e.s:1147   .text:0000000000000500 .LEHB1
     /tmp/ccRjjh6e.s:1150   .text:0000000000000508 .LEHE1
     /tmp/ccRjjh6e.s:1202   .text:0000000000000568 .L54
     /tmp/ccRjjh6e.s:1154   .text:000000000000050c .LEHB2
     /tmp/ccRjjh6e.s:1186   .text:0000000000000550 .LEHE2
     /tmp/ccRjjh6e.s:1210   .text:000000000000057c .LEHB3
     /tmp/ccRjjh6e.s:1213   .text:0000000000000584 .LEHE3
     /tmp/ccRjjh6e.s:4177   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccRjjh6e.s:5769   .debug_str:00000000000002b3 .LASF307
     /tmp/ccRjjh6e.s:5805   .debug_str:0000000000000489 .LASF308
     /tmp/ccRjjh6e.s:6219   .debug_str:000000000000120b .LASF309
     /tmp/ccRjjh6e.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccRjjh6e.s:1389   .text:0000000000000604 .Letext0
     /tmp/ccRjjh6e.s:5697   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccRjjh6e.s:5921   .debug_str:0000000000000860 .LASF0
     /tmp/ccRjjh6e.s:6099   .debug_str:0000000000000e85 .LASF3
     /tmp/ccRjjh6e.s:5963   .debug_str:00000000000009b6 .LASF1
     /tmp/ccRjjh6e.s:6117   .debug_str:0000000000000efd .LASF2
     /tmp/ccRjjh6e.s:6135   .debug_str:0000000000000f8b .LASF4
     /tmp/ccRjjh6e.s:5941   .debug_str:0000000000000908 .LASF5
     /tmp/ccRjjh6e.s:5723   .debug_str:00000000000000f1 .LASF6
     /tmp/ccRjjh6e.s:6077   .debug_str:0000000000000dd3 .LASF7
     /tmp/ccRjjh6e.s:6065   .debug_str:0000000000000d7d .LASF8
     /tmp/ccRjjh6e.s:5953   .debug_str:000000000000097d .LASF9
     /tmp/ccRjjh6e.s:5883   .debug_str:000000000000070a .LASF10
     /tmp/ccRjjh6e.s:5895   .debug_str:000000000000077c .LASF11
     /tmp/ccRjjh6e.s:5789   .debug_str:000000000000041b .LASF12
     /tmp/ccRjjh6e.s:5871   .debug_str:00000000000006c6 .LASF13
     /tmp/ccRjjh6e.s:5807   .debug_str:0000000000000497 .LASF14
     /tmp/ccRjjh6e.s:5787   .debug_str:000000000000040b .LASF15
     /tmp/ccRjjh6e.s:6183   .debug_str:000000000000111c .LASF16
     /tmp/ccRjjh6e.s:5851   .debug_str:00000000000005f5 .LASF17
     /tmp/ccRjjh6e.s:6169   .debug_str:000000000000107a .LASF18
     /tmp/ccRjjh6e.s:6265   .debug_str:0000000000001369 .LASF109
     /tmp/ccRjjh6e.s:6093   .debug_str:0000000000000e5b .LASF22
     /tmp/ccRjjh6e.s:5973   .debug_str:00000000000009f9 .LASF19
     /tmp/ccRjjh6e.s:5859   .debug_str:0000000000000642 .LASF20
     /tmp/ccRjjh6e.s:6285   .debug_str:0000000000001417 .LASF21
     /tmp/ccRjjh6e.s:6251   .debug_str:00000000000012eb .LASF23
GAS LISTING /tmp/ccRjjh6e.s 			page 50


     /tmp/ccRjjh6e.s:5865   .debug_str:0000000000000682 .LASF24
     /tmp/ccRjjh6e.s:6205   .debug_str:00000000000011a0 .LASF25
     /tmp/ccRjjh6e.s:5825   .debug_str:000000000000052b .LASF26
     /tmp/ccRjjh6e.s:5915   .debug_str:0000000000000837 .LASF27
     /tmp/ccRjjh6e.s:6173   .debug_str:000000000000109f .LASF29
     /tmp/ccRjjh6e.s:6021   .debug_str:0000000000000be7 .LASF28
     /tmp/ccRjjh6e.s:6003   .debug_str:0000000000000b32 .LASF30
     /tmp/ccRjjh6e.s:5847   .debug_str:00000000000005d8 .LASF31
     /tmp/ccRjjh6e.s:5711   .debug_str:000000000000005b .LASF32
     /tmp/ccRjjh6e.s:6005   .debug_str:0000000000000b4a .LASF39
     /tmp/ccRjjh6e.s:6257   .debug_str:0000000000001315 .LASF41
     /tmp/ccRjjh6e.s:5783   .debug_str:00000000000003e7 .LASF33
     /tmp/ccRjjh6e.s:5981   .debug_str:0000000000000a51 .LASF34
     /tmp/ccRjjh6e.s:5841   .debug_str:0000000000000587 .LASF35
     /tmp/ccRjjh6e.s:5795   .debug_str:0000000000000438 .LASF36
     /tmp/ccRjjh6e.s:5933   .debug_str:00000000000008c6 .LASF37
     /tmp/ccRjjh6e.s:5813   .debug_str:00000000000004dd .LASF38
     /tmp/ccRjjh6e.s:6293   .debug_str:000000000000144b .LASF40
     /tmp/ccRjjh6e.s:5737   .debug_str:0000000000000190 .LASF42
     /tmp/ccRjjh6e.s:6073   .debug_str:0000000000000db6 .LASF43
     /tmp/ccRjjh6e.s:5745   .debug_str:00000000000001d8 .LASF44
     /tmp/ccRjjh6e.s:5757   .debug_str:0000000000000269 .LASF45
     /tmp/ccRjjh6e.s:5885   .debug_str:000000000000071a .LASF46
     /tmp/ccRjjh6e.s:6145   .debug_str:0000000000000fbc .LASF47
     /tmp/ccRjjh6e.s:5857   .debug_str:0000000000000627 .LASF48
     /tmp/ccRjjh6e.s:5927   .debug_str:000000000000089f .LASF49
     /tmp/ccRjjh6e.s:6277   .debug_str:00000000000013cf .LASF50
     /tmp/ccRjjh6e.s:6245   .debug_str:00000000000012ca .LASF53
     /tmp/ccRjjh6e.s:6231   .debug_str:0000000000001269 .LASF55
     /tmp/ccRjjh6e.s:6113   .debug_str:0000000000000ee9 .LASF51
     /tmp/ccRjjh6e.s:6045   .debug_str:0000000000000cc1 .LASF52
     /tmp/ccRjjh6e.s:6083   .debug_str:0000000000000ded .LASF54
     /tmp/ccRjjh6e.s:6089   .debug_str:0000000000000e34 .LASF56
     /tmp/ccRjjh6e.s:6035   .debug_str:0000000000000c52 .LASF57
     /tmp/ccRjjh6e.s:5955   .debug_str:0000000000000990 .LASF58
     /tmp/ccRjjh6e.s:6279   .debug_str:00000000000013e9 .LASF59
     /tmp/ccRjjh6e.s:6213   .debug_str:00000000000011ca .LASF60
     /tmp/ccRjjh6e.s:6029   .debug_str:0000000000000c22 .LASF61
     /tmp/ccRjjh6e.s:6043   .debug_str:0000000000000cad .LASF62
     /tmp/ccRjjh6e.s:6015   .debug_str:0000000000000ba8 .LASF63
     /tmp/ccRjjh6e.s:6091   .debug_str:0000000000000e47 .LASF64
     /tmp/ccRjjh6e.s:6323   .debug_str:0000000000001540 .LASF65
     /tmp/ccRjjh6e.s:5931   .debug_str:00000000000008b2 .LASF66
     /tmp/ccRjjh6e.s:6179   .debug_str:00000000000010f3 .LASF67
     /tmp/ccRjjh6e.s:6139   .debug_str:0000000000000f9a .LASF68
     /tmp/ccRjjh6e.s:6141   .debug_str:0000000000000fad .LASF69
     /tmp/ccRjjh6e.s:5845   .debug_str:00000000000005c5 .LASF70
     /tmp/ccRjjh6e.s:5839   .debug_str:0000000000000581 .LASF71
     /tmp/ccRjjh6e.s:5729   .debug_str:0000000000000124 .LASF72
     /tmp/ccRjjh6e.s:5929   .debug_str:00000000000008ac .LASF73
     /tmp/ccRjjh6e.s:5829   .debug_str:000000000000054a .LASF74
     /tmp/ccRjjh6e.s:5775   .debug_str:0000000000000393 .LASF75
     /tmp/ccRjjh6e.s:6147   .debug_str:0000000000000fca .LASF76
     /tmp/ccRjjh6e.s:5725   .debug_str:00000000000000f8 .LASF77
     /tmp/ccRjjh6e.s:6123   .debug_str:0000000000000f1a .LASF78
     /tmp/ccRjjh6e.s:6115   .debug_str:0000000000000ef2 .LASF79
     /tmp/ccRjjh6e.s:6313   .debug_str:00000000000014e7 .LASF80
GAS LISTING /tmp/ccRjjh6e.s 			page 51


     /tmp/ccRjjh6e.s:6121   .debug_str:0000000000000f13 .LASF81
     /tmp/ccRjjh6e.s:5785   .debug_str:00000000000003f8 .LASF82
     /tmp/ccRjjh6e.s:6267   .debug_str:000000000000136f .LASF83
     /tmp/ccRjjh6e.s:6291   .debug_str:0000000000001435 .LASF84
     /tmp/ccRjjh6e.s:6259   .debug_str:0000000000001333 .LASF85
     /tmp/ccRjjh6e.s:6007   .debug_str:0000000000000b5a .LASF86
     /tmp/ccRjjh6e.s:6103   .debug_str:0000000000000eac .LASF87
     /tmp/ccRjjh6e.s:5905   .debug_str:00000000000007f9 .LASF88
     /tmp/ccRjjh6e.s:5913   .debug_str:0000000000000831 .LASF89
     /tmp/ccRjjh6e.s:5817   .debug_str:0000000000000501 .LASF90
     /tmp/ccRjjh6e.s:5909   .debug_str:0000000000000811 .LASF91
     /tmp/ccRjjh6e.s:5917   .debug_str:0000000000000842 .LASF92
     /tmp/ccRjjh6e.s:6237   .debug_str:0000000000001291 .LASF93
     /tmp/ccRjjh6e.s:5893   .debug_str:0000000000000760 .LASF94
     /tmp/ccRjjh6e.s:6069   .debug_str:0000000000000d98 .LASF95
     /tmp/ccRjjh6e.s:5949   .debug_str:000000000000094f .LASF96
     /tmp/ccRjjh6e.s:5753   .debug_str:0000000000000247 .LASF97
     /tmp/ccRjjh6e.s:5997   .debug_str:0000000000000af4 .LASF98
     /tmp/ccRjjh6e.s:6105   .debug_str:0000000000000eb2 .LASF99
     /tmp/ccRjjh6e.s:5717   .debug_str:00000000000000a7 .LASF100
     /tmp/ccRjjh6e.s:5759   .debug_str:0000000000000273 .LASF101
     /tmp/ccRjjh6e.s:6235   .debug_str:0000000000001285 .LASF102
     /tmp/ccRjjh6e.s:5761   .debug_str:0000000000000282 .LASF103
     /tmp/ccRjjh6e.s:6019   .debug_str:0000000000000bd5 .LASF104
     /tmp/ccRjjh6e.s:5897   .debug_str:000000000000078a .LASF105
     /tmp/ccRjjh6e.s:5939   .debug_str:00000000000008f5 .LASF106
     /tmp/ccRjjh6e.s:5781   .debug_str:00000000000003d3 .LASF107
     /tmp/ccRjjh6e.s:6197   .debug_str:000000000000117b .LASF108
     /tmp/ccRjjh6e.s:6057   .debug_str:0000000000000d31 .LASF110
     /tmp/ccRjjh6e.s:6157   .debug_str:000000000000101c .LASF144
     /tmp/ccRjjh6e.s:5961   .debug_str:00000000000009b1 .LASF111
     /tmp/ccRjjh6e.s:5791   .debug_str:000000000000042a .LASF112
     /tmp/ccRjjh6e.s:5879   .debug_str:00000000000006f4 .LASF113
     /tmp/ccRjjh6e.s:5965   .debug_str:00000000000009c9 .LASF114
     /tmp/ccRjjh6e.s:5971   .debug_str:00000000000009e6 .LASF115
     /tmp/ccRjjh6e.s:5877   .debug_str:00000000000006eb .LASF116
     /tmp/ccRjjh6e.s:6327   .debug_str:0000000000001566 .LASF117
     /tmp/ccRjjh6e.s:6011   .debug_str:0000000000000b7d .LASF118
     /tmp/ccRjjh6e.s:5727   .debug_str:0000000000000103 .LASF120
     /tmp/ccRjjh6e.s:6191   .debug_str:0000000000001152 .LASF119
     /tmp/ccRjjh6e.s:6013   .debug_str:0000000000000b87 .LASF121
     /tmp/ccRjjh6e.s:6255   .debug_str:000000000000130a .LASF122
     /tmp/ccRjjh6e.s:6217   .debug_str:00000000000011e8 .LASF123
     /tmp/ccRjjh6e.s:6185   .debug_str:0000000000001128 .LASF124
     /tmp/ccRjjh6e.s:5719   .debug_str:00000000000000af .LASF125
     /tmp/ccRjjh6e.s:6271   .debug_str:000000000000137e .LASF126
     /tmp/ccRjjh6e.s:5715   .debug_str:0000000000000079 .LASF127
     /tmp/ccRjjh6e.s:6195   .debug_str:0000000000001166 .LASF128
     /tmp/ccRjjh6e.s:5903   .debug_str:00000000000007ca .LASF129
     /tmp/ccRjjh6e.s:5705   .debug_str:000000000000002b .LASF130
     /tmp/ccRjjh6e.s:6047   .debug_str:0000000000000cd6 .LASF131
     /tmp/ccRjjh6e.s:5853   .debug_str:000000000000060b .LASF132
     /tmp/ccRjjh6e.s:6275   .debug_str:00000000000013a7 .LASF133
     /tmp/ccRjjh6e.s:6171   .debug_str:0000000000001090 .LASF134
     /tmp/ccRjjh6e.s:5843   .debug_str:000000000000059e .LASF135
     /tmp/ccRjjh6e.s:6199   .debug_str:0000000000001180 .LASF136
     /tmp/ccRjjh6e.s:5779   .debug_str:00000000000003cd .LASF137
GAS LISTING /tmp/ccRjjh6e.s 			page 52


     /tmp/ccRjjh6e.s:6155   .debug_str:0000000000001014 .LASF138
     /tmp/ccRjjh6e.s:5797   .debug_str:000000000000045c .LASF139
     /tmp/ccRjjh6e.s:5765   .debug_str:000000000000029c .LASF140
     /tmp/ccRjjh6e.s:6067   .debug_str:0000000000000d90 .LASF141
     /tmp/ccRjjh6e.s:5959   .debug_str:00000000000009a8 .LASF142
     /tmp/ccRjjh6e.s:6137   .debug_str:0000000000000f92 .LASF205
     /tmp/ccRjjh6e.s:5907   .debug_str:000000000000080b .LASF143
     /tmp/ccRjjh6e.s:6223   .debug_str:0000000000001240 .LASF154
     /tmp/ccRjjh6e.s:6025   .debug_str:0000000000000c01 .LASF310
     /tmp/ccRjjh6e.s:6051   .debug_str:0000000000000d10 .LASF145
     /tmp/ccRjjh6e.s:6269   .debug_str:0000000000001379 .LASF146
     /tmp/ccRjjh6e.s:6309   .debug_str:00000000000014b2 .LASF147
     /tmp/ccRjjh6e.s:6303   .debug_str:0000000000001489 .LASF148
     /tmp/ccRjjh6e.s:6211   .debug_str:00000000000011ba .LASF149
     /tmp/ccRjjh6e.s:5833   .debug_str:000000000000056d .LASF150
     /tmp/ccRjjh6e.s:5735   .debug_str:000000000000017d .LASF151
     /tmp/ccRjjh6e.s:5969   .debug_str:00000000000009e0 .LASF152
     /tmp/ccRjjh6e.s:6053   .debug_str:0000000000000d15 .LASF153
     /tmp/ccRjjh6e.s:6203   .debug_str:0000000000001198 .LASF155
     /tmp/ccRjjh6e.s:5831   .debug_str:000000000000055c .LASF156
     /tmp/ccRjjh6e.s:6001   .debug_str:0000000000000b25 .LASF161
     /tmp/ccRjjh6e.s:5983   .debug_str:0000000000000a6f .LASF163
     /tmp/ccRjjh6e.s:6317   .debug_str:0000000000001514 .LASF157
     /tmp/ccRjjh6e.s:5875   .debug_str:00000000000006df .LASF158
     /tmp/ccRjjh6e.s:5923   .debug_str:000000000000086d .LASF159
     /tmp/ccRjjh6e.s:5935   .debug_str:00000000000008d8 .LASF160
     /tmp/ccRjjh6e.s:6149   .debug_str:0000000000000fe5 .LASF162
     /tmp/ccRjjh6e.s:5827   .debug_str:0000000000000537 .LASF164
     /tmp/ccRjjh6e.s:6129   .debug_str:0000000000000f51 .LASF165
     /tmp/ccRjjh6e.s:6177   .debug_str:00000000000010d7 .LASF166
     /tmp/ccRjjh6e.s:6023   .debug_str:0000000000000bf2 .LASF167
     /tmp/ccRjjh6e.s:5707   .debug_str:000000000000003c .LASF168
     /tmp/ccRjjh6e.s:6289   .debug_str:0000000000001426 .LASF169
     /tmp/ccRjjh6e.s:6061   .debug_str:0000000000000d4f .LASF170
     /tmp/ccRjjh6e.s:6167   .debug_str:000000000000106c .LASF171
     /tmp/ccRjjh6e.s:6081   .debug_str:0000000000000de1 .LASF172
     /tmp/ccRjjh6e.s:5701   .debug_str:000000000000000f .LASF173
     /tmp/ccRjjh6e.s:6041   .debug_str:0000000000000c9d .LASF174
     /tmp/ccRjjh6e.s:6109   .debug_str:0000000000000ec3 .LASF175
     /tmp/ccRjjh6e.s:6295   .debug_str:0000000000001457 .LASF176
     /tmp/ccRjjh6e.s:5943   .debug_str:000000000000091a .LASF177
     /tmp/ccRjjh6e.s:6161   .debug_str:000000000000103f .LASF178
     /tmp/ccRjjh6e.s:6307   .debug_str:000000000000149c .LASF179
     /tmp/ccRjjh6e.s:6193   .debug_str:000000000000115b .LASF180
     /tmp/ccRjjh6e.s:6163   .debug_str:000000000000104a .LASF181
     /tmp/ccRjjh6e.s:6143   .debug_str:0000000000000fb4 .LASF182
     /tmp/ccRjjh6e.s:6063   .debug_str:0000000000000d69 .LASF183
     /tmp/ccRjjh6e.s:6033   .debug_str:0000000000000c33 .LASF184
     /tmp/ccRjjh6e.s:5811   .debug_str:00000000000004cb .LASF185
     /tmp/ccRjjh6e.s:6087   .debug_str:0000000000000e17 .LASF186
     /tmp/ccRjjh6e.s:6329   .debug_str:0000000000001570 .LASF187
     /tmp/ccRjjh6e.s:6037   .debug_str:0000000000000c59 .LASF188
     /tmp/ccRjjh6e.s:6127   .debug_str:0000000000000f3e .LASF189
     /tmp/ccRjjh6e.s:6151   .debug_str:0000000000000fee .LASF190
     /tmp/ccRjjh6e.s:6249   .debug_str:00000000000012d8 .LASF191
     /tmp/ccRjjh6e.s:6325   .debug_str:0000000000001548 .LASF192
     /tmp/ccRjjh6e.s:6315   .debug_str:00000000000014ff .LASF193
GAS LISTING /tmp/ccRjjh6e.s 			page 53


     /tmp/ccRjjh6e.s:6175   .debug_str:00000000000010b7 .LASF194
     /tmp/ccRjjh6e.s:6215   .debug_str:00000000000011de .LASF195
     /tmp/ccRjjh6e.s:6055   .debug_str:0000000000000d25 .LASF196
     /tmp/ccRjjh6e.s:6301   .debug_str:000000000000147b .LASF197
     /tmp/ccRjjh6e.s:5751   .debug_str:000000000000021f .LASF199
     /tmp/ccRjjh6e.s:5749   .debug_str:000000000000020a .LASF198
     /tmp/ccRjjh6e.s:5777   .debug_str:00000000000003a1 .LASF200
     /tmp/ccRjjh6e.s:6319   .debug_str:0000000000001521 .LASF311
     /tmp/ccRjjh6e.s:5773   .debug_str:0000000000000382 .LASF312
     /tmp/ccRjjh6e.s:5709   .debug_str:0000000000000056 .LASF201
     /tmp/ccRjjh6e.s:6247   .debug_str:00000000000012d3 .LASF202
     /tmp/ccRjjh6e.s:5989   .debug_str:0000000000000aac .LASF203
     /tmp/ccRjjh6e.s:5837   .debug_str:000000000000057b .LASF204
     /tmp/ccRjjh6e.s:6229   .debug_str:0000000000001261 .LASF206
     /tmp/ccRjjh6e.s:5995   .debug_str:0000000000000aef .LASF207
     /tmp/ccRjjh6e.s:6097   .debug_str:0000000000000e7a .LASF208
     /tmp/ccRjjh6e.s:5891   .debug_str:000000000000074c .LASF209
     /tmp/ccRjjh6e.s:5741   .debug_str:00000000000001c7 .LASF210
     /tmp/ccRjjh6e.s:6095   .debug_str:0000000000000e66 .LASF211
     /tmp/ccRjjh6e.s:5835   .debug_str:0000000000000576 .LASF212
     /tmp/ccRjjh6e.s:6159   .debug_str:0000000000001028 .LASF213
     /tmp/ccRjjh6e.s:6187   .debug_str:0000000000001143 .LASF214
     /tmp/ccRjjh6e.s:6111   .debug_str:0000000000000ed0 .LASF215
     /tmp/ccRjjh6e.s:5703   .debug_str:000000000000001f .LASF216
     /tmp/ccRjjh6e.s:6125   .debug_str:0000000000000f32 .LASF217
     /tmp/ccRjjh6e.s:5999   .debug_str:0000000000000b11 .LASF218
     /tmp/ccRjjh6e.s:5911   .debug_str:000000000000081c .LASF219
     /tmp/ccRjjh6e.s:5793   .debug_str:000000000000042f .LASF220
     /tmp/ccRjjh6e.s:5801   .debug_str:0000000000000474 .LASF221
     /tmp/ccRjjh6e.s:6027   .debug_str:0000000000000c19 .LASF222
     /tmp/ccRjjh6e.s:6133   .debug_str:0000000000000f80 .LASF223
     /tmp/ccRjjh6e.s:5699   .debug_str:0000000000000000 .LASF224
     /tmp/ccRjjh6e.s:5901   .debug_str:00000000000007a8 .LASF225
     /tmp/ccRjjh6e.s:6227   .debug_str:0000000000001252 .LASF226
     /tmp/ccRjjh6e.s:6181   .debug_str:00000000000010fa .LASF227
     /tmp/ccRjjh6e.s:5991   .debug_str:0000000000000ab4 .LASF228
     /tmp/ccRjjh6e.s:5809   .debug_str:00000000000004a7 .LASF229
     /tmp/ccRjjh6e.s:6049   .debug_str:0000000000000d00 .LASF230
     /tmp/ccRjjh6e.s:6085   .debug_str:0000000000000df4 .LASF231
     /tmp/ccRjjh6e.s:5967   .debug_str:00000000000009d7 .LASF232
     /tmp/ccRjjh6e.s:5919   .debug_str:000000000000085a .LASF233
     /tmp/ccRjjh6e.s:6321   .debug_str:0000000000001528 .LASF234
     /tmp/ccRjjh6e.s:5713   .debug_str:0000000000000071 .LASF235
     /tmp/ccRjjh6e.s:5987   .debug_str:0000000000000a92 .LASF236
     /tmp/ccRjjh6e.s:5937   .debug_str:00000000000008e5 .LASF237
     /tmp/ccRjjh6e.s:6039   .debug_str:0000000000000c7a .LASF238
     /tmp/ccRjjh6e.s:6273   .debug_str:0000000000001394 .LASF239
     /tmp/ccRjjh6e.s:6131   .debug_str:0000000000000f5a .LASF240
     /tmp/ccRjjh6e.s:6305   .debug_str:000000000000148f .LASF241
     /tmp/ccRjjh6e.s:5733   .debug_str:0000000000000159 .LASF242
     /tmp/ccRjjh6e.s:6283   .debug_str:000000000000140a .LASF243
     /tmp/ccRjjh6e.s:6075   .debug_str:0000000000000dc3 .LASF244
     /tmp/ccRjjh6e.s:6221   .debug_str:000000000000122e .LASF245
     /tmp/ccRjjh6e.s:5867   .debug_str:000000000000068e .LASF246
     /tmp/ccRjjh6e.s:5767   .debug_str:00000000000002a5 .LASF247
     /tmp/ccRjjh6e.s:5731   .debug_str:0000000000000136 .LASF248
     /tmp/ccRjjh6e.s:6031   .debug_str:0000000000000c2a .LASF249
GAS LISTING /tmp/ccRjjh6e.s 			page 54


     /tmp/ccRjjh6e.s:5815   .debug_str:00000000000004fc .LASF250
     /tmp/ccRjjh6e.s:5957   .debug_str:00000000000009a3 .LASF251
     /tmp/ccRjjh6e.s:5873   .debug_str:00000000000006d5 .LASF252
     /tmp/ccRjjh6e.s:6297   .debug_str:0000000000001462 .LASF253
     /tmp/ccRjjh6e.s:5803   .debug_str:000000000000047e .LASF254
     /tmp/ccRjjh6e.s:5899   .debug_str:000000000000079d .LASF255
     /tmp/ccRjjh6e.s:6059   .debug_str:0000000000000d41 .LASF256
     /tmp/ccRjjh6e.s:5887   .debug_str:0000000000000731 .LASF257
     /tmp/ccRjjh6e.s:5861   .debug_str:000000000000064b .LASF258
     /tmp/ccRjjh6e.s:6189   .debug_str:000000000000114a .LASF259
     /tmp/ccRjjh6e.s:6017   .debug_str:0000000000000bb0 .LASF260
     /tmp/ccRjjh6e.s:6209   .debug_str:00000000000011b2 .LASF261
     /tmp/ccRjjh6e.s:6261   .debug_str:000000000000133d .LASF262
     /tmp/ccRjjh6e.s:6241   .debug_str:00000000000012b2 .LASF263
     /tmp/ccRjjh6e.s:5925   .debug_str:000000000000087d .LASF264
     /tmp/ccRjjh6e.s:6239   .debug_str:00000000000012a0 .LASF265
     /tmp/ccRjjh6e.s:6101   .debug_str:0000000000000e8a .LASF266
     /tmp/ccRjjh6e.s:5755   .debug_str:0000000000000256 .LASF267
     /tmp/ccRjjh6e.s:5771   .debug_str:000000000000035f .LASF268
     /tmp/ccRjjh6e.s:5849   .debug_str:00000000000005e2 .LASF269
     /tmp/ccRjjh6e.s:5863   .debug_str:000000000000065f .LASF270
     /tmp/ccRjjh6e.s:5975   .debug_str:0000000000000a02 .LASF271
     /tmp/ccRjjh6e.s:6281   .debug_str:00000000000013f1 .LASF272
     /tmp/ccRjjh6e.s:5993   .debug_str:0000000000000ac5 .LASF273
     /tmp/ccRjjh6e.s:5977   .debug_str:0000000000000a1d .LASF274
     /tmp/ccRjjh6e.s:6311   .debug_str:00000000000014be .LASF275
     /tmp/ccRjjh6e.s:5951   .debug_str:0000000000000971 .LASF276
     /tmp/ccRjjh6e.s:5945   .debug_str:0000000000000927 .LASF277
     /tmp/ccRjjh6e.s:5869   .debug_str:00000000000006b5 .LASF278
     /tmp/ccRjjh6e.s:6201   .debug_str:0000000000001186 .LASF279
     /tmp/ccRjjh6e.s:5881   .debug_str:00000000000006fd .LASF280
     /tmp/ccRjjh6e.s:5721   .debug_str:00000000000000e4 .LASF281
     /tmp/ccRjjh6e.s:5947   .debug_str:0000000000000943 .LASF282
     /tmp/ccRjjh6e.s:5979   .debug_str:0000000000000a35 .LASF283
     /tmp/ccRjjh6e.s:6165   .debug_str:0000000000001060 .LASF284
     /tmp/ccRjjh6e.s:5739   .debug_str:00000000000001ab .LASF285
     /tmp/ccRjjh6e.s:1331   .text:00000000000005dc .LFB39
     /tmp/ccRjjh6e.s:1372   .text:0000000000000604 .LFE39
     /tmp/ccRjjh6e.s:6233   .debug_str:000000000000127e .LASF286
     /tmp/ccRjjh6e.s:1310   .text:00000000000005cc .LFB38
     /tmp/ccRjjh6e.s:1325   .text:00000000000005dc .LFE38
     /tmp/ccRjjh6e.s:1277   .text:00000000000005ac .LFB37
     /tmp/ccRjjh6e.s:1304   .text:00000000000005cc .LFE37
     /tmp/ccRjjh6e.s:1245   .text:0000000000000584 .LFB36
     /tmp/ccRjjh6e.s:1271   .text:00000000000005ac .LFE36
     /tmp/ccRjjh6e.s:5422   .debug_loc:0000000000000000 .LLST24
     /tmp/ccRjjh6e.s:1260   .text:000000000000059c .LVL97
     /tmp/ccRjjh6e.s:10     .text:0000000000000000 .LFB35
     /tmp/ccRjjh6e.s:36     .text:0000000000000028 .LFE35
     /tmp/ccRjjh6e.s:25     .text:0000000000000018 .LVL0
     /tmp/ccRjjh6e.s:1215   .text:0000000000000584 .LFE34
     /tmp/ccRjjh6e.s:5889   .debug_str:0000000000000744 .LASF287
     /tmp/ccRjjh6e.s:5436   .debug_loc:0000000000000039 .LLST23
     /tmp/ccRjjh6e.s:1126   .text:00000000000004c4 .LVL82
     /tmp/ccRjjh6e.s:1130   .text:00000000000004cc .LVL83
     /tmp/ccRjjh6e.s:1135   .text:00000000000004d8 .LVL84
     /tmp/ccRjjh6e.s:1140   .text:00000000000004e8 .LVL85
GAS LISTING /tmp/ccRjjh6e.s 			page 55


     /tmp/ccRjjh6e.s:1149   .text:0000000000000508 .LVL86
     /tmp/ccRjjh6e.s:1156   .text:0000000000000514 .LVL87
     /tmp/ccRjjh6e.s:1163   .text:0000000000000520 .LVL88
     /tmp/ccRjjh6e.s:1169   .text:000000000000052c .LVL89
     /tmp/ccRjjh6e.s:1176   .text:0000000000000538 .LVL90
     /tmp/ccRjjh6e.s:1180   .text:0000000000000540 .LVL91
     /tmp/ccRjjh6e.s:1185   .text:0000000000000550 .LVL92
     /tmp/ccRjjh6e.s:1208   .text:0000000000000578 .LVL94
     /tmp/ccRjjh6e.s:1212   .text:0000000000000584 .LVL95
     /tmp/ccRjjh6e.s:494    .text:0000000000000224 .LFB33
     /tmp/ccRjjh6e.s:1094   .text:00000000000004a4 .LFE33
     /tmp/ccRjjh6e.s:6079   .debug_str:0000000000000dda .LASF288
     /tmp/ccRjjh6e.s:5443   .debug_loc:000000000000005c .LLST12
     /tmp/ccRjjh6e.s:748    .text:0000000000000310 .LBB83
     /tmp/ccRjjh6e.s:884    .text:00000000000003a4 .LBE83
     /tmp/ccRjjh6e.s:6207   .debug_str:00000000000011ad .LASF289
     /tmp/ccRjjh6e.s:6153   .debug_str:000000000000100c .LASF290
     /tmp/ccRjjh6e.s:6243   .debug_str:00000000000012c4 .LASF291
     /tmp/ccRjjh6e.s:750    .text:0000000000000310 .LBB84
     /tmp/ccRjjh6e.s:766    .text:000000000000031c .LBE84
     /tmp/ccRjjh6e.s:770    .text:0000000000000320 .LBB86
     /tmp/ccRjjh6e.s:785    .text:000000000000032c .LBE86
     /tmp/ccRjjh6e.s:790    .text:0000000000000330 .LBB88
     /tmp/ccRjjh6e.s:802    .text:0000000000000338 .LBE88
     /tmp/ccRjjh6e.s:5464   .debug_loc:00000000000000ba .LLST19
     /tmp/ccRjjh6e.s:825    .text:0000000000000374 .LBB90
     /tmp/ccRjjh6e.s:833    .text:0000000000000378 .LBE90
     /tmp/ccRjjh6e.s:5472   .debug_loc:00000000000000de .LLST20
     /tmp/ccRjjh6e.s:843    .text:0000000000000384 .LBB92
     /tmp/ccRjjh6e.s:854    .text:0000000000000388 .LBE92
     /tmp/ccRjjh6e.s:5479   .debug_loc:0000000000000101 .LLST21
     /tmp/ccRjjh6e.s:859    .text:000000000000038c .LBB94
     /tmp/ccRjjh6e.s:873    .text:0000000000000394 .LBE94
     /tmp/ccRjjh6e.s:5486   .debug_loc:0000000000000124 .LLST22
     /tmp/ccRjjh6e.s:819    .text:0000000000000368 .LVL50
     /tmp/ccRjjh6e.s:880    .text:00000000000003a0 .LVL57
     /tmp/ccRjjh6e.s:5681   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccRjjh6e.s:5493   .debug_loc:0000000000000147 .LLST16
     /tmp/ccRjjh6e.s:6107   .debug_str:0000000000000eb9 .LASF292
     /tmp/ccRjjh6e.s:5504   .debug_loc:000000000000017d .LLST17
     /tmp/ccRjjh6e.s:887    .text:00000000000003a4 .LBB81
     /tmp/ccRjjh6e.s:923    .text:00000000000003d8 .LBE81
     /tmp/ccRjjh6e.s:5511   .debug_loc:00000000000001a0 .LLST18
     /tmp/ccRjjh6e.s:917    .text:00000000000003cc .LVL61
     /tmp/ccRjjh6e.s:922    .text:00000000000003d8 .LVL62
     /tmp/ccRjjh6e.s:736    .text:0000000000000304 .LVL44
     /tmp/ccRjjh6e.s:738    .text:000000000000030c .LVL45
     /tmp/ccRjjh6e.s:5518   .debug_loc:00000000000001c3 .LLST13
     /tmp/ccRjjh6e.s:564    .text:0000000000000284 .LBB71
     /tmp/ccRjjh6e.s:579    .text:0000000000000290 .LBE71
     /tmp/ccRjjh6e.s:585    .text:0000000000000298 .LBB73
     /tmp/ccRjjh6e.s:600    .text:00000000000002a4 .LBE73
     /tmp/ccRjjh6e.s:941    .text:00000000000003e8 .LBB75
     /tmp/ccRjjh6e.s:952    .text:00000000000003ec .LBE75
     /tmp/ccRjjh6e.s:5525   .debug_loc:00000000000001e6 .LLST14
     /tmp/ccRjjh6e.s:957    .text:00000000000003f0 .LBB77
     /tmp/ccRjjh6e.s:969    .text:00000000000003f4 .LBE77
GAS LISTING /tmp/ccRjjh6e.s 			page 56


     /tmp/ccRjjh6e.s:5532   .debug_loc:0000000000000209 .LLST15
     /tmp/ccRjjh6e.s:934    .text:00000000000003e4 .LVL64
     /tmp/ccRjjh6e.s:992    .text:0000000000000410 .LVL69
     /tmp/ccRjjh6e.s:1000   .text:000000000000041c .LVL70
     /tmp/ccRjjh6e.s:1008   .text:0000000000000428 .LVL71
     /tmp/ccRjjh6e.s:1016   .text:0000000000000434 .LVL72
     /tmp/ccRjjh6e.s:1024   .text:0000000000000440 .LVL73
     /tmp/ccRjjh6e.s:1032   .text:000000000000044c .LVL74
     /tmp/ccRjjh6e.s:1040   .text:0000000000000458 .LVL75
     /tmp/ccRjjh6e.s:1048   .text:0000000000000464 .LVL76
     /tmp/ccRjjh6e.s:1056   .text:0000000000000470 .LVL77
     /tmp/ccRjjh6e.s:1064   .text:000000000000047c .LVL78
     /tmp/ccRjjh6e.s:1072   .text:0000000000000488 .LVL79
     /tmp/ccRjjh6e.s:1080   .text:0000000000000494 .LVL80
     /tmp/ccRjjh6e.s:1088   .text:00000000000004a0 .LVL81
     /tmp/ccRjjh6e.s:517    .text:0000000000000248 .LBB67
     /tmp/ccRjjh6e.s:533    .text:0000000000000254 .LBE67
     /tmp/ccRjjh6e.s:344    .text:000000000000015c .LFB32
     /tmp/ccRjjh6e.s:488    .text:0000000000000224 .LFE32
     /tmp/ccRjjh6e.s:5539   .debug_loc:000000000000022c .LLST6
     /tmp/ccRjjh6e.s:5553   .debug_loc:0000000000000265 .LLST7
     /tmp/ccRjjh6e.s:6225   .debug_str:000000000000124b .LASF293
     /tmp/ccRjjh6e.s:5560   .debug_loc:0000000000000288 .LLST8
     /tmp/ccRjjh6e.s:5582   .debug_loc:00000000000002e7 .LLST9
     /tmp/ccRjjh6e.s:361    .text:0000000000000174 .LBB61
     /tmp/ccRjjh6e.s:377    .text:0000000000000180 .LBE61
     /tmp/ccRjjh6e.s:379    .text:0000000000000180 .LBB63
     /tmp/ccRjjh6e.s:391    .text:0000000000000188 .LBE63
     /tmp/ccRjjh6e.s:5604   .debug_loc:0000000000000328 .LLST10
     /tmp/ccRjjh6e.s:462    .text:0000000000000208 .LBB65
     /tmp/ccRjjh6e.s:473    .text:000000000000020c .LBE65
     /tmp/ccRjjh6e.s:5612   .debug_loc:000000000000034c .LLST11
     /tmp/ccRjjh6e.s:446    .text:00000000000001ec .LVL29
     /tmp/ccRjjh6e.s:453    .text:00000000000001fc .LVL30
     /tmp/ccRjjh6e.s:236    .text:00000000000000ec .LFB31
     /tmp/ccRjjh6e.s:338    .text:000000000000015c .LFE31
     /tmp/ccRjjh6e.s:5763   .debug_str:0000000000000295 .LASF294
     /tmp/ccRjjh6e.s:5619   .debug_loc:000000000000036f .LLST2
     /tmp/ccRjjh6e.s:5630   .debug_loc:00000000000003a5 .LLST3
     /tmp/ccRjjh6e.s:254    .text:0000000000000108 .LBB55
     /tmp/ccRjjh6e.s:270    .text:0000000000000114 .LBE55
     /tmp/ccRjjh6e.s:272    .text:0000000000000114 .LBB57
     /tmp/ccRjjh6e.s:285    .text:000000000000011c .LBE57
     /tmp/ccRjjh6e.s:5637   .debug_loc:00000000000003c8 .LLST4
     /tmp/ccRjjh6e.s:311    .text:0000000000000140 .LBB59
     /tmp/ccRjjh6e.s:322    .text:0000000000000144 .LBE59
     /tmp/ccRjjh6e.s:5645   .debug_loc:00000000000003ec .LLST5
     /tmp/ccRjjh6e.s:295    .text:000000000000012c .LVL13
     /tmp/ccRjjh6e.s:201    .text:00000000000000cc .LFB30
     /tmp/ccRjjh6e.s:230    .text:00000000000000ec .LFE30
     /tmp/ccRjjh6e.s:132    .text:0000000000000084 .LFB29
     /tmp/ccRjjh6e.s:164    .text:00000000000000a4 .LFE29
     /tmp/ccRjjh6e.s:143    .text:0000000000000090 .LBB53
     /tmp/ccRjjh6e.s:155    .text:0000000000000098 .LBE53
     /tmp/ccRjjh6e.s:5652   .debug_loc:000000000000040f .LLST1
     /tmp/ccRjjh6e.s:94     .text:0000000000000064 .LFB28
     /tmp/ccRjjh6e.s:126    .text:0000000000000084 .LFE28
GAS LISTING /tmp/ccRjjh6e.s 			page 57


     /tmp/ccRjjh6e.s:105    .text:0000000000000070 .LBB51
     /tmp/ccRjjh6e.s:117    .text:0000000000000078 .LBE51
     /tmp/ccRjjh6e.s:5660   .debug_loc:0000000000000433 .LLST0
     /tmp/ccRjjh6e.s:170    .text:00000000000000a4 .LFB27
     /tmp/ccRjjh6e.s:195    .text:00000000000000cc .LFE27
     /tmp/ccRjjh6e.s:184    .text:00000000000000bc .LVL9
     /tmp/ccRjjh6e.s:42     .text:0000000000000028 .LFB26
     /tmp/ccRjjh6e.s:88     .text:0000000000000064 .LFE26
     /tmp/ccRjjh6e.s:57     .text:0000000000000040 .LBB49
     /tmp/ccRjjh6e.s:69     .text:0000000000000044 .LBE49
     /tmp/ccRjjh6e.s:73     .text:000000000000004c .LVL3
     /tmp/ccRjjh6e.s:77     .text:0000000000000054 .LVL4
     /tmp/ccRjjh6e.s:5823   .debug_str:0000000000000526 .LASF313
     /tmp/ccRjjh6e.s:5743   .debug_str:00000000000001d3 .LASF295
     /tmp/ccRjjh6e.s:6287   .debug_str:0000000000001420 .LASF296
     /tmp/ccRjjh6e.s:5855   .debug_str:000000000000061b .LASF297
     /tmp/ccRjjh6e.s:6119   .debug_str:0000000000000f0b .LASF299
     /tmp/ccRjjh6e.s:6009   .debug_str:0000000000000b70 .LASF298
     /tmp/ccRjjh6e.s:6071   .debug_str:0000000000000dad .LASF300
     /tmp/ccRjjh6e.s:5821   .debug_str:000000000000051a .LASF301
     /tmp/ccRjjh6e.s:6263   .debug_str:0000000000001361 .LASF302
     /tmp/ccRjjh6e.s:6253   .debug_str:00000000000012fa .LASF303
     /tmp/ccRjjh6e.s:6299   .debug_str:000000000000146c .LASF314
     /tmp/ccRjjh6e.s:5747   .debug_str:00000000000001f2 .LASF315
     /tmp/ccRjjh6e.s:5985   .debug_str:0000000000000a87 .LASF304
     /tmp/ccRjjh6e.s:5799   .debug_str:0000000000000466 .LASF305
     /tmp/ccRjjh6e.s:5819   .debug_str:0000000000000513 .LASF306
     /tmp/ccRjjh6e.s:1248   .text:0000000000000584 .LVL96
     /tmp/ccRjjh6e.s:1196   .text:000000000000055c .LVL93
     /tmp/ccRjjh6e.s:531    .text:0000000000000254 .LVL34
     /tmp/ccRjjh6e.s:545    .text:0000000000000278 .LVL35
     /tmp/ccRjjh6e.s:561    .text:0000000000000284 .LVL36
     /tmp/ccRjjh6e.s:685    .text:00000000000002cc .LVL38
     /tmp/ccRjjh6e.s:701    .text:00000000000002e4 .LVL39
     /tmp/ccRjjh6e.s:741    .text:0000000000000310 .LVL46
     /tmp/ccRjjh6e.s:759    .text:0000000000000314 .LVL47
     /tmp/ccRjjh6e.s:789    .text:0000000000000330 .LVL48
     /tmp/ccRjjh6e.s:799    .text:0000000000000338 .LVL49
     /tmp/ccRjjh6e.s:824    .text:0000000000000374 .LVL51
     /tmp/ccRjjh6e.s:831    .text:0000000000000378 .LVL52
     /tmp/ccRjjh6e.s:842    .text:0000000000000384 .LVL53
     /tmp/ccRjjh6e.s:851    .text:0000000000000388 .LVL54
     /tmp/ccRjjh6e.s:858    .text:000000000000038c .LVL55
     /tmp/ccRjjh6e.s:870    .text:0000000000000394 .LVL56
     /tmp/ccRjjh6e.s:703    .text:00000000000002e8 .LVL40
     /tmp/ccRjjh6e.s:721    .text:00000000000002f4 .LVL41
     /tmp/ccRjjh6e.s:892    .text:00000000000003b0 .LVL59
     /tmp/ccRjjh6e.s:727    .text:00000000000002f8 .LVL42
     /tmp/ccRjjh6e.s:912    .text:00000000000003c0 .LVL60
     /tmp/ccRjjh6e.s:925    .text:00000000000003dc .LVL63
     /tmp/ccRjjh6e.s:607    .text:00000000000002b4 .LVL37
     /tmp/ccRjjh6e.s:940    .text:00000000000003e8 .LVL65
     /tmp/ccRjjh6e.s:949    .text:00000000000003ec .LVL66
     /tmp/ccRjjh6e.s:956    .text:00000000000003f0 .LVL67
     /tmp/ccRjjh6e.s:965    .text:00000000000003f4 .LVL68
     /tmp/ccRjjh6e.s:347    .text:000000000000015c .LVL19
     /tmp/ccRjjh6e.s:401    .text:000000000000018c .LVL22
GAS LISTING /tmp/ccRjjh6e.s 			page 58


     /tmp/ccRjjh6e.s:375    .text:0000000000000180 .LVL20
     /tmp/ccRjjh6e.s:457    .text:0000000000000200 .LVL31
     /tmp/ccRjjh6e.s:405    .text:0000000000000190 .LVL23
     /tmp/ccRjjh6e.s:412    .text:0000000000000198 .LVL24
     /tmp/ccRjjh6e.s:423    .text:00000000000001bc .LVL25
     /tmp/ccRjjh6e.s:433    .text:00000000000001d0 .LVL27
     /tmp/ccRjjh6e.s:438    .text:00000000000001d4 .LVL28
     /tmp/ccRjjh6e.s:429    .text:00000000000001c8 .LVL26
     /tmp/ccRjjh6e.s:388    .text:0000000000000188 .LVL21
     /tmp/ccRjjh6e.s:461    .text:0000000000000208 .LVL32
     /tmp/ccRjjh6e.s:470    .text:000000000000020c .LVL33
     /tmp/ccRjjh6e.s:239    .text:00000000000000ec .LVL10
     /tmp/ccRjjh6e.s:281    .text:000000000000011c .LVL12
     /tmp/ccRjjh6e.s:331    .text:0000000000000150 .LVL18
     /tmp/ccRjjh6e.s:268    .text:0000000000000114 .LVL11
     /tmp/ccRjjh6e.s:306    .text:0000000000000138 .LVL15
     /tmp/ccRjjh6e.s:310    .text:0000000000000140 .LVL16
     /tmp/ccRjjh6e.s:319    .text:0000000000000144 .LVL17
     /tmp/ccRjjh6e.s:142    .text:0000000000000090 .LVL7
     /tmp/ccRjjh6e.s:152    .text:0000000000000098 .LVL8
     /tmp/ccRjjh6e.s:104    .text:0000000000000070 .LVL5
     /tmp/ccRjjh6e.s:114    .text:0000000000000078 .LVL6
     /tmp/ccRjjh6e.s:1400   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccRjjh6e.s:553    .text:0000000000000280 .LBB70
     /tmp/ccRjjh6e.s:687    .text:00000000000002cc .LBE70
     /tmp/ccRjjh6e.s:929    .text:00000000000003dc .LBB97
     /tmp/ccRjjh6e.s:970    .text:00000000000003f4 .LBE97
     /tmp/ccRjjh6e.s:987    .text:0000000000000408 .LBB98
     /tmp/ccRjjh6e.s:1091   .text:00000000000004a4 .LBE98
     /tmp/ccRjjh6e.s:697    .text:00000000000002dc .LBB79
     /tmp/ccRjjh6e.s:743    .text:0000000000000310 .LBE79
     /tmp/ccRjjh6e.s:885    .text:00000000000003a4 .LBB96
     /tmp/ccRjjh6e.s:928    .text:00000000000003dc .LBE96
     /tmp/ccRjjh6e.s:1218   .gcc_except_table:0000000000000000 .LLSDA34

UNDEFINED SYMBOLS
_Z8userMainv
_ZN5Riscv14supervisorTrapEv
_ZN3PCB10initializeEv
_ZN8KConsole10initializeEv
__putc
_ZN3PCB10savedRegA4E
CONSOLE_STATUS
plic_claim
plic_complete
_ZN3PCB16timeSliceCounterE
_ZN12SleepPCBList13tryToWakePCBsEv
_ZN3PCB7runningE
_ZN3PCB8dispatchEv
CONSOLE_TX_DATA
_ZN8KConsole17putCharacterInputEc
_ZN8KConsole18putCharacterOutputEc
_ZN15MemoryAllocator15memAllocHandlerEv
_ZN15MemoryAllocator14memFreeHandlerEv
_ZN3PCB20threadMakePCBHandlerEv
_ZN3PCB19threadCreateHandlerEv
_ZN3PCB18threadStartHandlerEv
GAS LISTING /tmp/ccRjjh6e.s 			page 59


_ZN3PCB21threadDispatchHandlerEv
_ZN3PCB17threadExitHandlerEv
_ZN3PCB18threadSleepHandlerEv
_ZN10KSemaphore14semOpenHandlerEv
_ZN10KSemaphore14semWaitHandlerEv
_ZN10KSemaphore16semSignalHandlerEv
_ZN10KSemaphore15semCloseHandlerEv
_ZN8KConsole11getcHandlerEv
_ZN8KConsole11putcHandlerEv
_Z7kmallocm
_ZN3PCBnwEm
_ZN3PCBC1EPFvPvES0_S0_m
_ZN3PCB5startEv
_ZN3PCB10isFinishedEv
thread_dispatch
_ZN3PCBdlEPv
_Unwind_Resume
__gxx_personality_v0
_Z7myTestsv
