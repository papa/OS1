GAS LISTING /tmp/ccHqUuW5.s 			page 1


   1              		.file	"Riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10initSystemEv
   9              	_ZN5Riscv10initSystemEv:
  10              	.LFB19:
  11              		.file 1 "src/Riscv.cpp"
   1:src/Riscv.cpp **** //
   2:src/Riscv.cpp **** // Created by os on 4/27/22.
   3:src/Riscv.cpp **** //
   4:src/Riscv.cpp **** 
   5:src/Riscv.cpp **** #include "../h/Riscv.h"
   6:src/Riscv.cpp **** #include "../h/MemoryAllocator.h"
   7:src/Riscv.cpp **** #include "../h/PCB.h"
   8:src/Riscv.cpp **** #include "../lib/console.h"
   9:src/Riscv.cpp **** 
  10:src/Riscv.cpp **** //todo
  11:src/Riscv.cpp **** //sta sve treba da se odradi ovde
  12:src/Riscv.cpp **** void Riscv::initSystem() {
  12              		.loc 1 12 26
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  13:src/Riscv.cpp ****     w_stvec((uint64)&Riscv::supervisorTrap);
  20              		.loc 1 13 5
  21              		.loc 1 13 12 is_stmt 0
  22 000c 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
  22      83B70700 
  23              	.LVL0:
  24              	.LBB54:
  25              	.LBB55:
  26              		.file 2 "src/../h/Riscv.h"
   1:src/../h/Riscv.h **** //
   2:src/../h/Riscv.h **** // Created by os on 4/27/22.
   3:src/../h/Riscv.h **** //
   4:src/../h/Riscv.h **** 
   5:src/../h/Riscv.h **** #ifndef PROJECT_BASE_V1_0_RISCV_H
   6:src/../h/Riscv.h **** #define PROJECT_BASE_V1_0_RISCV_H
   7:src/../h/Riscv.h **** 
   8:src/../h/Riscv.h **** #include "../lib/hw.h"
   9:src/../h/Riscv.h **** 
  10:src/../h/Riscv.h **** class Riscv
  11:src/../h/Riscv.h **** {
  12:src/../h/Riscv.h **** private:
  13:src/../h/Riscv.h **** 
  14:src/../h/Riscv.h **** public:
  15:src/../h/Riscv.h ****     static void initSystem();
  16:src/../h/Riscv.h **** 
  17:src/../h/Riscv.h ****     static void enableInterrupts();
  18:src/../h/Riscv.h **** 
GAS LISTING /tmp/ccHqUuW5.s 			page 2


  19:src/../h/Riscv.h ****     static void disableInterrupts();
  20:src/../h/Riscv.h **** 
  21:src/../h/Riscv.h ****     static void printString(char const *string);
  22:src/../h/Riscv.h **** 
  23:src/../h/Riscv.h ****     static void printInteger(uint64 num);
  24:src/../h/Riscv.h **** 
  25:src/../h/Riscv.h ****     static void pushRegisters();
  26:src/../h/Riscv.h ****     static void popRegisters();
  27:src/../h/Riscv.h **** 
  28:src/../h/Riscv.h ****     static uint64 r_scause();
  29:src/../h/Riscv.h ****     static void w_scause(uint64 scause);
  30:src/../h/Riscv.h **** 
  31:src/../h/Riscv.h ****     static uint64 r_sepc();
  32:src/../h/Riscv.h ****     static void w_sepc(uint64 sepc);
  33:src/../h/Riscv.h **** 
  34:src/../h/Riscv.h ****     static uint64 r_stvec();
  35:src/../h/Riscv.h ****     static void w_stvec(uint64 stvec);
  36:src/../h/Riscv.h **** 
  37:src/../h/Riscv.h ****     static uint64 r_stval();
  38:src/../h/Riscv.h ****     static void w_stval(uint64 stval);
  39:src/../h/Riscv.h **** 
  40:src/../h/Riscv.h ****     enum BitMaskSip
  41:src/../h/Riscv.h ****     {
  42:src/../h/Riscv.h ****         SIP_SSIP = (1 << 1),
  43:src/../h/Riscv.h ****         SIP_STIP = (1 << 5),
  44:src/../h/Riscv.h ****         SIP_SEIP = (1 << 9),
  45:src/../h/Riscv.h ****     };
  46:src/../h/Riscv.h **** 
  47:src/../h/Riscv.h ****     static void ms_sip(uint64 mask);
  48:src/../h/Riscv.h **** 
  49:src/../h/Riscv.h ****     static void mc_sip(uint64 mask);
  50:src/../h/Riscv.h **** 
  51:src/../h/Riscv.h ****     static uint64 r_sip();
  52:src/../h/Riscv.h **** 
  53:src/../h/Riscv.h ****     static void w_sip(uint64 sip);
  54:src/../h/Riscv.h **** 
  55:src/../h/Riscv.h ****     enum BitMaskSstatus
  56:src/../h/Riscv.h ****     {
  57:src/../h/Riscv.h ****         SSTATUS_SIE = (1 << 1),
  58:src/../h/Riscv.h ****         SSTATUS_SPIE = (1 << 5),
  59:src/../h/Riscv.h ****         SSTATUS_SPP = (1 << 8),
  60:src/../h/Riscv.h ****     };
  61:src/../h/Riscv.h **** 
  62:src/../h/Riscv.h ****     static void ms_sstatus(uint64 mask);
  63:src/../h/Riscv.h **** 
  64:src/../h/Riscv.h ****     static void mc_sstatus(uint64 mask);
  65:src/../h/Riscv.h **** 
  66:src/../h/Riscv.h ****     static uint64 r_sstatus();
  67:src/../h/Riscv.h **** 
  68:src/../h/Riscv.h ****     static void w_sstatus(uint64 sstatus);
  69:src/../h/Riscv.h **** 
  70:src/../h/Riscv.h ****     static void popSppSpie();
  71:src/../h/Riscv.h **** 
  72:src/../h/Riscv.h ****     static void supervisorTrap();
  73:src/../h/Riscv.h ****     static void handleSupervisorTrap();
  74:src/../h/Riscv.h **** 
  75:src/../h/Riscv.h ****     static const uint64 bntOne = 1UL << 63;;
GAS LISTING /tmp/ccHqUuW5.s 			page 3


  76:src/../h/Riscv.h ****     static const uint64 bntZero = 0UL;
  77:src/../h/Riscv.h ****     static const uint64 timerInterrupt = bntOne + 1UL;
  78:src/../h/Riscv.h ****     static const uint64 hwInterrupt = bntOne + 9UL;
  79:src/../h/Riscv.h ****     static const uint64 operationInterrupt = bntZero + 2UL;
  80:src/../h/Riscv.h ****     static const uint64 addrReadInterrupt = bntZero + 5UL;
  81:src/../h/Riscv.h ****     static const uint64 addrWriteInterrupt = bntZero + 7UL;
  82:src/../h/Riscv.h ****     static const uint64 ecallUserInterrupt = bntZero + 8UL;
  83:src/../h/Riscv.h ****     static const uint64 ecallSystemInterupt = bntZero + 9UL;
  84:src/../h/Riscv.h **** };
  85:src/../h/Riscv.h **** 
  86:src/../h/Riscv.h **** inline uint64 Riscv::r_scause() {
  87:src/../h/Riscv.h ****     uint64 volatile scause;
  88:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
  89:src/../h/Riscv.h ****     return scause;
  90:src/../h/Riscv.h **** }
  91:src/../h/Riscv.h **** 
  92:src/../h/Riscv.h **** inline void Riscv::w_scause(uint64 scause) {
  93:src/../h/Riscv.h ****     __asm__ volatile("csrw scause, %0" : :"r"(scause));
  94:src/../h/Riscv.h **** }
  95:src/../h/Riscv.h **** 
  96:src/../h/Riscv.h **** inline uint64 Riscv::r_sepc() {
  97:src/../h/Riscv.h ****     uint64 volatile sepc;
  98:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
  99:src/../h/Riscv.h ****     return sepc;
 100:src/../h/Riscv.h **** }
 101:src/../h/Riscv.h **** 
 102:src/../h/Riscv.h **** inline void Riscv::w_sepc(uint64 sepc) {
 103:src/../h/Riscv.h ****     __asm__ volatile("csrw sepc, %0" : :"r"(sepc));
 104:src/../h/Riscv.h **** }
 105:src/../h/Riscv.h **** 
 106:src/../h/Riscv.h **** inline uint64 Riscv::r_stvec() {
 107:src/../h/Riscv.h ****     uint64 volatile stvec;
 108:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, stvec" : "=r"(stvec));
 109:src/../h/Riscv.h ****     return stvec;
 110:src/../h/Riscv.h **** }
 111:src/../h/Riscv.h **** 
 112:src/../h/Riscv.h **** inline void Riscv::w_stvec(uint64 stvec) {
 113:src/../h/Riscv.h ****     __asm__ volatile("csrw stvec, %0" : :"r"(stvec));
  27              		.loc 2 113 5 is_stmt 1
  28              		.loc 2 113 53 is_stmt 0
  29              	#APP
  30              	# 113 "src/../h/Riscv.h" 1
 114              	}
  31              		csrw stvec, a5
  32              	# 0 "" 2
  33              	.LVL1:
  34              	#NO_APP
  35              	.LBE55:
  36              	.LBE54:
  14:src/Riscv.cpp ****     //todo
  15:src/Riscv.cpp ****     //no need for comment, but sync context switch
  16:src/Riscv.cpp ****     //should be tested, before hardware interrupts are enabled
  17:src/Riscv.cpp ****     //Riscv::enableInterrupts();
  18:src/Riscv.cpp **** }
  37              		.loc 1 18 1
  38 0018 03348100 		ld	s0,8(sp)
  39              		.cfi_restore 8
GAS LISTING /tmp/ccHqUuW5.s 			page 4


  40              		.cfi_def_cfa 2, 16
  41 001c 13010101 		addi	sp,sp,16
  42              		.cfi_def_cfa_offset 0
  43 0020 67800000 		jr	ra
  44              		.cfi_endproc
  45              	.LFE19:
  47              		.align	2
  48              		.globl	_ZN5Riscv16enableInterruptsEv
  50              	_ZN5Riscv16enableInterruptsEv:
  51              	.LFB20:
  19:src/Riscv.cpp **** 
  20:src/Riscv.cpp **** void Riscv::enableInterrupts() {
  52              		.loc 1 20 32 is_stmt 1
  53              		.cfi_startproc
  54 0024 130101FF 		addi	sp,sp,-16
  55              		.cfi_def_cfa_offset 16
  56 0028 23348100 		sd	s0,8(sp)
  57              		.cfi_offset 8, -8
  58 002c 13040101 		addi	s0,sp,16
  59              		.cfi_def_cfa 8, 0
  21:src/Riscv.cpp ****     Riscv::ms_sstatus(Riscv::SSTATUS_SIE);
  60              		.loc 1 21 5
  61              	.LVL2:
  62              	.LBB56:
  63              	.LBB57:
 115:src/../h/Riscv.h **** 
 116:src/../h/Riscv.h **** inline uint64 Riscv::r_stval() {
 117:src/../h/Riscv.h ****     uint64 volatile stval;
 118:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, stval" : "=r"(stval));
 119:src/../h/Riscv.h ****     return stval;
 120:src/../h/Riscv.h **** }
 121:src/../h/Riscv.h **** 
 122:src/../h/Riscv.h **** inline void Riscv::w_stval(uint64 stval) {
 123:src/../h/Riscv.h ****     __asm__ volatile("csrw stval, %0" : :"r"(stval));
 124:src/../h/Riscv.h **** }
 125:src/../h/Riscv.h **** 
 126:src/../h/Riscv.h **** inline void Riscv::ms_sip(uint64 mask) {
 127:src/../h/Riscv.h ****     __asm__ volatile("csrs sip, %0" : :"r"(mask));
 128:src/../h/Riscv.h **** }
 129:src/../h/Riscv.h **** 
 130:src/../h/Riscv.h **** inline void Riscv::mc_sip(uint64 mask) {
 131:src/../h/Riscv.h ****     __asm__ volatile("csrc sip, %0" : :"r"(mask));
 132:src/../h/Riscv.h **** }
 133:src/../h/Riscv.h **** 
 134:src/../h/Riscv.h **** inline uint64 Riscv::r_sip() {
 135:src/../h/Riscv.h ****     uint64 volatile sip;
 136:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, sip" : "=r"(sip));
 137:src/../h/Riscv.h ****     return sip;
 138:src/../h/Riscv.h **** }
 139:src/../h/Riscv.h **** 
 140:src/../h/Riscv.h **** inline void Riscv::w_sip(uint64 sip) {
 141:src/../h/Riscv.h ****     __asm__ volatile("csrw sip, %0" : :"r"(sip));
 142:src/../h/Riscv.h **** }
 143:src/../h/Riscv.h **** 
 144:src/../h/Riscv.h **** inline void Riscv::ms_sstatus(uint64 mask) {
 145:src/../h/Riscv.h ****     __asm__ volatile("csrs sstatus, %0" : :"r"(mask));
  64              		.loc 2 145 5
GAS LISTING /tmp/ccHqUuW5.s 			page 5


  65              		.loc 2 145 54 is_stmt 0
  66 0030 93072000 		li	a5,2
  67              	#APP
  68              	# 145 "src/../h/Riscv.h" 1
 146              	}
  69              		csrs sstatus, a5
  70              	# 0 "" 2
  71              	.LVL3:
  72              	#NO_APP
  73              	.LBE57:
  74              	.LBE56:
  22:src/Riscv.cpp **** }
  75              		.loc 1 22 1
  76 0038 03348100 		ld	s0,8(sp)
  77              		.cfi_restore 8
  78              		.cfi_def_cfa 2, 16
  79 003c 13010101 		addi	sp,sp,16
  80              		.cfi_def_cfa_offset 0
  81 0040 67800000 		jr	ra
  82              		.cfi_endproc
  83              	.LFE20:
  85              		.align	2
  86              		.globl	_ZN5Riscv17disableInterruptsEv
  88              	_ZN5Riscv17disableInterruptsEv:
  89              	.LFB21:
  23:src/Riscv.cpp **** 
  24:src/Riscv.cpp **** void Riscv::disableInterrupts()
  25:src/Riscv.cpp **** {
  90              		.loc 1 25 1 is_stmt 1
  91              		.cfi_startproc
  92 0044 130101FF 		addi	sp,sp,-16
  93              		.cfi_def_cfa_offset 16
  94 0048 23348100 		sd	s0,8(sp)
  95              		.cfi_offset 8, -8
  96 004c 13040101 		addi	s0,sp,16
  97              		.cfi_def_cfa 8, 0
  26:src/Riscv.cpp ****     Riscv::mc_sstatus(Riscv::SSTATUS_SIE);
  98              		.loc 1 26 5
  99              	.LVL4:
 100              	.LBB58:
 101              	.LBB59:
 147:src/../h/Riscv.h **** 
 148:src/../h/Riscv.h **** inline void Riscv::mc_sstatus(uint64 mask) {
 149:src/../h/Riscv.h ****     __asm__ volatile("csrc sstatus, %0" : :"r"(mask));
 102              		.loc 2 149 5
 103              		.loc 2 149 54 is_stmt 0
 104 0050 93072000 		li	a5,2
 105              	#APP
 106              	# 149 "src/../h/Riscv.h" 1
 150              	}
 107              		csrc sstatus, a5
 108              	# 0 "" 2
 109              	.LVL5:
 110              	#NO_APP
 111              	.LBE59:
 112              	.LBE58:
  27:src/Riscv.cpp **** }
GAS LISTING /tmp/ccHqUuW5.s 			page 6


 113              		.loc 1 27 1
 114 0058 03348100 		ld	s0,8(sp)
 115              		.cfi_restore 8
 116              		.cfi_def_cfa 2, 16
 117 005c 13010101 		addi	sp,sp,16
 118              		.cfi_def_cfa_offset 0
 119 0060 67800000 		jr	ra
 120              		.cfi_endproc
 121              	.LFE21:
 123              		.align	2
 124              		.globl	_ZN5Riscv10popSppSpieEv
 126              	_ZN5Riscv10popSppSpieEv:
 127              	.LFB22:
  28:src/Riscv.cpp **** 
  29:src/Riscv.cpp **** void Riscv::popSppSpie() {
 128              		.loc 1 29 26 is_stmt 1
 129              		.cfi_startproc
 130 0064 130101FF 		addi	sp,sp,-16
 131              		.cfi_def_cfa_offset 16
 132 0068 23348100 		sd	s0,8(sp)
 133              		.cfi_offset 8, -8
 134 006c 13040101 		addi	s0,sp,16
 135              		.cfi_def_cfa 8, 0
  30:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
 136              		.loc 1 30 5
 137              		.loc 1 30 39 is_stmt 0
 138              	#APP
 139              	# 30 "src/Riscv.cpp" 1
  31              	    __asm__ volatile ("sret");
 140              		csrw sepc, ra
 141              	# 0 "" 2
 142              		.loc 1 31 5 is_stmt 1
 143              		.loc 1 31 30 is_stmt 0
 144              	# 31 "src/Riscv.cpp" 1
  32              	}
 145              		sret
 146              	# 0 "" 2
 147              		.loc 1 32 1
 148              	#NO_APP
 149 0078 03348100 		ld	s0,8(sp)
 150              		.cfi_restore 8
 151              		.cfi_def_cfa 2, 16
 152 007c 13010101 		addi	sp,sp,16
 153              		.cfi_def_cfa_offset 0
 154 0080 67800000 		jr	ra
 155              		.cfi_endproc
 156              	.LFE22:
 158              		.align	2
 159              		.globl	_ZN5Riscv11printStringEPKc
 161              	_ZN5Riscv11printStringEPKc:
 162              	.LFB23:
  33:src/Riscv.cpp **** 
  34:src/Riscv.cpp **** void Riscv::printString(const char *string)
  35:src/Riscv.cpp **** {
 163              		.loc 1 35 1 is_stmt 1
 164              		.cfi_startproc
 165              	.LVL6:
GAS LISTING /tmp/ccHqUuW5.s 			page 7


 166 0084 130101FD 		addi	sp,sp,-48
 167              		.cfi_def_cfa_offset 48
 168 0088 23341102 		sd	ra,40(sp)
 169 008c 23308102 		sd	s0,32(sp)
 170 0090 233C9100 		sd	s1,24(sp)
 171 0094 23382101 		sd	s2,16(sp)
 172              		.cfi_offset 1, -8
 173              		.cfi_offset 8, -16
 174              		.cfi_offset 9, -24
 175              		.cfi_offset 18, -32
 176 0098 13040103 		addi	s0,sp,48
 177              		.cfi_def_cfa 8, 0
 178 009c 93040500 		mv	s1,a0
  36:src/Riscv.cpp ****     uint64 sstatus = r_sstatus();
 179              		.loc 1 36 5
 180              	.LBB60:
 181              	.LBB61:
 151:src/../h/Riscv.h **** 
 152:src/../h/Riscv.h **** inline uint64 Riscv::r_sstatus() {
 153:src/../h/Riscv.h ****     uint64 volatile sstatus;
 182              		.loc 2 153 5
 154:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 183              		.loc 2 154 5
 184              		.loc 2 154 57 is_stmt 0
 185              	#APP
 186              	# 154 "src/../h/Riscv.h" 1
 155              	    return sstatus;
 187              		csrr a5, sstatus
 188              	# 0 "" 2
 189              	#NO_APP
 190 00a4 233CF4FC 		sd	a5,-40(s0)
 191              		.loc 2 155 5 is_stmt 1
 192              		.loc 2 155 12 is_stmt 0
 193 00a8 033984FD 		ld	s2,-40(s0)
 194              	.LVL7:
 195              	.LBE61:
 196              	.LBE60:
  37:src/Riscv.cpp ****     mc_sstatus(SSTATUS_SIE);
 197              		.loc 1 37 5 is_stmt 1
 198              	.LBB62:
 199              	.LBB63:
 149:src/../h/Riscv.h **** }
 200              		.loc 2 149 5
 149:src/../h/Riscv.h **** }
 201              		.loc 2 149 54 is_stmt 0
 202 00ac 93072000 		li	a5,2
 203              	#APP
 204              	# 149 "src/../h/Riscv.h" 1
 205              		csrc sstatus, a5
 206              	# 0 "" 2
 207              	.LVL8:
 208              	#NO_APP
 209              	.L11:
 210              	.LBE63:
 211              	.LBE62:
  38:src/Riscv.cpp ****     while (*string != '\0')
 212              		.loc 1 38 5 is_stmt 1
GAS LISTING /tmp/ccHqUuW5.s 			page 8


 213              		.loc 1 38 20
 214              		.loc 1 38 12 is_stmt 0
 215 00b4 03C50400 		lbu	a0,0(s1)
 216              		.loc 1 38 20
 217 00b8 630A0500 		beqz	a0,.L10
  39:src/Riscv.cpp ****     {
  40:src/Riscv.cpp ****         __putc(*string);
 218              		.loc 1 40 9 is_stmt 1
 219              		.loc 1 40 15 is_stmt 0
 220 00bc 97000000 		call	__putc@plt
 220      E7800000 
 221              	.LVL9:
  41:src/Riscv.cpp ****         string++;
 222              		.loc 1 41 9 is_stmt 1
 223              		.loc 1 41 15 is_stmt 0
 224 00c4 93841400 		addi	s1,s1,1
 225              	.LVL10:
  38:src/Riscv.cpp ****     while (*string != '\0')
 226              		.loc 1 38 5
 227 00c8 6FF0DFFE 		j	.L11
 228              	.L10:
  42:src/Riscv.cpp ****     }
  43:src/Riscv.cpp ****     ms_sstatus(sstatus & SSTATUS_SIE ? SSTATUS_SIE : 0);
 229              		.loc 1 43 5 is_stmt 1
 230              		.loc 1 43 38 is_stmt 0
 231 00cc 1B090900 		sext.w	s2,s2
 232              	.LVL11:
 233              		.loc 1 43 15
 234 00d0 13792900 		andi	s2,s2,2
 235 00d4 1B090900 		sext.w	s2,s2
 236              	.LVL12:
 237              	.LBB64:
 238              	.LBB65:
 145:src/../h/Riscv.h **** }
 239              		.loc 2 145 5 is_stmt 1
 145:src/../h/Riscv.h **** }
 240              		.loc 2 145 54 is_stmt 0
 241              	#APP
 242              	# 145 "src/../h/Riscv.h" 1
 243              		csrs sstatus, s2
 244              	# 0 "" 2
 245              	.LVL13:
 246              	#NO_APP
 247              	.LBE65:
 248              	.LBE64:
  44:src/Riscv.cpp **** }
 249              		.loc 1 44 1
 250 00dc 83308102 		ld	ra,40(sp)
 251              		.cfi_restore 1
 252 00e0 03340102 		ld	s0,32(sp)
 253              		.cfi_restore 8
 254              		.cfi_def_cfa 2, 48
 255 00e4 83348101 		ld	s1,24(sp)
 256              		.cfi_restore 9
 257              	.LVL14:
 258 00e8 03390101 		ld	s2,16(sp)
 259              		.cfi_restore 18
GAS LISTING /tmp/ccHqUuW5.s 			page 9


 260 00ec 13010103 		addi	sp,sp,48
 261              		.cfi_def_cfa_offset 0
 262 00f0 67800000 		jr	ra
 263              		.cfi_endproc
 264              	.LFE23:
 266              		.section	.rodata.str1.8,"aMS",@progbits,1
 267              		.align	3
 268              	.LC0:
 269 0000 0A00     		.string	"\n"
 270              		.text
 271              		.align	2
 272              		.globl	_ZN5Riscv12printIntegerEm
 274              	_ZN5Riscv12printIntegerEm:
 275              	.LFB24:
  45:src/Riscv.cpp **** 
  46:src/Riscv.cpp **** void Riscv::printInteger(uint64 num)
  47:src/Riscv.cpp **** {
 276              		.loc 1 47 1 is_stmt 1
 277              		.cfi_startproc
 278              	.LVL15:
 279 00f4 130101FC 		addi	sp,sp,-64
 280              		.cfi_def_cfa_offset 64
 281 00f8 233C1102 		sd	ra,56(sp)
 282 00fc 23388102 		sd	s0,48(sp)
 283 0100 23349102 		sd	s1,40(sp)
 284 0104 23302103 		sd	s2,32(sp)
 285              		.cfi_offset 1, -8
 286              		.cfi_offset 8, -16
 287              		.cfi_offset 9, -24
 288              		.cfi_offset 18, -32
 289 0108 13040104 		addi	s0,sp,64
 290              		.cfi_def_cfa 8, 0
  48:src/Riscv.cpp ****     uint64 sstatus = r_sstatus();
 291              		.loc 1 48 5
 292              	.LBB66:
 293              	.LBB67:
 153:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 294              		.loc 2 153 5
 154:src/../h/Riscv.h ****     return sstatus;
 295              		.loc 2 154 5
 154:src/../h/Riscv.h ****     return sstatus;
 296              		.loc 2 154 57 is_stmt 0
 297              	#APP
 298              	# 154 "src/../h/Riscv.h" 1
 299              		csrr a5, sstatus
 300              	# 0 "" 2
 301              	#NO_APP
 302 0110 2334F4FC 		sd	a5,-56(s0)
 303              		.loc 2 155 5 is_stmt 1
 304              		.loc 2 155 12 is_stmt 0
 305 0114 033984FC 		ld	s2,-56(s0)
 306              	.LVL16:
 307              	.LBE67:
 308              	.LBE66:
  49:src/Riscv.cpp ****     mc_sstatus(SSTATUS_SIE);
 309              		.loc 1 49 5 is_stmt 1
 310              	.LBB68:
GAS LISTING /tmp/ccHqUuW5.s 			page 10


 311              	.LBB69:
 149:src/../h/Riscv.h **** }
 312              		.loc 2 149 5
 149:src/../h/Riscv.h **** }
 313              		.loc 2 149 54 is_stmt 0
 314 0118 93072000 		li	a5,2
 315              	#APP
 316              	# 149 "src/../h/Riscv.h" 1
 317              		csrc sstatus, a5
 318              	# 0 "" 2
 319              	.LVL17:
 320              	#NO_APP
 321              	.LBE69:
 322              	.LBE68:
  50:src/Riscv.cpp ****     static char digits[] = "0123456789";
 323              		.loc 1 50 5 is_stmt 1
  51:src/Riscv.cpp ****     char buf[16];
 324              		.loc 1 51 5
  52:src/Riscv.cpp ****     int i, neg;
 325              		.loc 1 52 5
  53:src/Riscv.cpp ****     uint x;
 326              		.loc 1 53 5
  54:src/Riscv.cpp **** 
  55:src/Riscv.cpp ****     neg = 0;
 327              		.loc 1 55 5
  56:src/Riscv.cpp ****     if(num < 0)
 328              		.loc 1 56 5
  57:src/Riscv.cpp ****     {
  58:src/Riscv.cpp ****         neg = 1;
  59:src/Riscv.cpp ****         x = -num;
  60:src/Riscv.cpp ****     }
  61:src/Riscv.cpp ****     else
  62:src/Riscv.cpp ****         x = num;
 329              		.loc 1 62 9
 330              		.loc 1 62 11 is_stmt 0
 331 0120 1B050500 		sext.w	a0,a0
 332              	.LVL18:
  63:src/Riscv.cpp **** 
  64:src/Riscv.cpp ****     i = 0;
 333              		.loc 1 64 5 is_stmt 1
 334              		.loc 1 64 7 is_stmt 0
 335 0124 93040000 		li	s1,0
 336              	.LVL19:
 337              	.L14:
  65:src/Riscv.cpp ****     do
 338              		.loc 1 65 5 is_stmt 1
  66:src/Riscv.cpp ****     {
  67:src/Riscv.cpp ****         buf[i++] = digits[x%10];
 339              		.loc 1 67 9
 340              		.loc 1 67 28 is_stmt 0
 341 0128 1306A000 		li	a2,10
 342 012c 3B77C502 		remuw	a4,a0,a2
 343              	.LVL20:
 344              		.loc 1 67 31
 345 0130 93160702 		slli	a3,a4,32
 346 0134 93D60602 		srli	a3,a3,32
 347 0138 17070000 		lla	a4,.LANCHOR0
GAS LISTING /tmp/ccHqUuW5.s 			page 11


 347      13070700 
 348 0140 3307D700 		add	a4,a4,a3
 349 0144 03470700 		lbu	a4,0(a4)
 350              		.loc 1 67 18
 351 0148 930604FE 		addi	a3,s0,-32
 352 014c B3879600 		add	a5,a3,s1
 353 0150 9B841400 		addiw	s1,s1,1
 354              	.LVL21:
 355 0154 2388E7FE 		sb	a4,-16(a5)
  68:src/Riscv.cpp ****     }while((x/=10) != 0);
 356              		.loc 1 68 20 is_stmt 1
 357 0158 1B070500 		sext.w	a4,a0
 358              		.loc 1 68 14 is_stmt 0
 359 015c 3B55C502 		divuw	a0,a0,a2
 360              	.LVL22:
 361              		.loc 1 68 20
 362 0160 93079000 		li	a5,9
 363 0164 E3E2E7FC 		bgtu	a4,a5,.L14
 364              	.LVL23:
 365              	.L16:
  69:src/Riscv.cpp ****     if(neg)
  70:src/Riscv.cpp ****         buf[i++] = '-';
  71:src/Riscv.cpp **** 
  72:src/Riscv.cpp ****     while(--i >= 0)
 366              		.loc 1 72 5 is_stmt 1
 367              		.loc 1 72 15
 368 0168 9B84F4FF 		addiw	s1,s1,-1
 369              	.LVL24:
 370 016c 63CE0400 		bltz	s1,.L15
  73:src/Riscv.cpp ****         __putc(buf[i]);
 371              		.loc 1 73 9
 372              		.loc 1 73 15 is_stmt 0
 373 0170 930704FE 		addi	a5,s0,-32
 374 0174 B3879700 		add	a5,a5,s1
 375 0178 03C507FF 		lbu	a0,-16(a5)
 376 017c 97000000 		call	__putc@plt
 376      E7800000 
 377              	.LVL25:
 378 0184 6FF05FFE 		j	.L16
 379              	.L15:
  74:src/Riscv.cpp **** 
  75:src/Riscv.cpp ****     Riscv::printString("\n");
 380              		.loc 1 75 5 is_stmt 1
 381              		.loc 1 75 23 is_stmt 0
 382 0188 17050000 		lla	a0,.LC0
 382      13050500 
 383 0190 97000000 		call	_ZN5Riscv11printStringEPKc
 383      E7800000 
 384              	.LVL26:
  76:src/Riscv.cpp **** 
  77:src/Riscv.cpp ****     ms_sstatus(sstatus & SSTATUS_SIE ? SSTATUS_SIE : 0);
 385              		.loc 1 77 5 is_stmt 1
 386              		.loc 1 77 38 is_stmt 0
 387 0198 1B090900 		sext.w	s2,s2
 388              	.LVL27:
 389              		.loc 1 77 15
 390 019c 13792900 		andi	s2,s2,2
GAS LISTING /tmp/ccHqUuW5.s 			page 12


 391 01a0 1B090900 		sext.w	s2,s2
 392              	.LVL28:
 393              	.LBB70:
 394              	.LBB71:
 145:src/../h/Riscv.h **** }
 395              		.loc 2 145 5 is_stmt 1
 145:src/../h/Riscv.h **** }
 396              		.loc 2 145 54 is_stmt 0
 397              	#APP
 398              	# 145 "src/../h/Riscv.h" 1
 399              		csrs sstatus, s2
 400              	# 0 "" 2
 401              	.LVL29:
 402              	#NO_APP
 403              	.LBE71:
 404              	.LBE70:
  78:src/Riscv.cpp **** }
 405              		.loc 1 78 1
 406 01a8 83308103 		ld	ra,56(sp)
 407              		.cfi_restore 1
 408 01ac 03340103 		ld	s0,48(sp)
 409              		.cfi_restore 8
 410              		.cfi_def_cfa 2, 64
 411 01b0 83348102 		ld	s1,40(sp)
 412              		.cfi_restore 9
 413 01b4 03390102 		ld	s2,32(sp)
 414              		.cfi_restore 18
 415 01b8 13010104 		addi	sp,sp,64
 416              		.cfi_def_cfa_offset 0
 417 01bc 67800000 		jr	ra
 418              		.cfi_endproc
 419              	.LFE24:
 421              		.section	.rodata.str1.8
 422 0002 00000000 		.align	3
 422      0000
 423              	.LC1:
 424 0008 74696D65 		.string	"timerInterrupt\n"
 424      72496E74 
 424      65727275 
 424      70740A00 
 425              		.text
 426              		.align	2
 427              		.globl	_ZN5Riscv20handleSupervisorTrapEv
 429              	_ZN5Riscv20handleSupervisorTrapEv:
 430              	.LFB25:
  79:src/Riscv.cpp **** 
  80:src/Riscv.cpp **** void Riscv::handleSupervisorTrap() {
 431              		.loc 1 80 36 is_stmt 1
 432              		.cfi_startproc
 433              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 434              		.cfi_lsda 0x1b,.LLSDA25
 435 01c0 130101F9 		addi	sp,sp,-112
 436              		.cfi_def_cfa_offset 112
 437 01c4 23341106 		sd	ra,104(sp)
 438 01c8 23308106 		sd	s0,96(sp)
 439 01cc 233C9104 		sd	s1,88(sp)
 440 01d0 23382105 		sd	s2,80(sp)
GAS LISTING /tmp/ccHqUuW5.s 			page 13


 441 01d4 23343105 		sd	s3,72(sp)
 442 01d8 23304105 		sd	s4,64(sp)
 443 01dc 233C5103 		sd	s5,56(sp)
 444 01e0 23386103 		sd	s6,48(sp)
 445              		.cfi_offset 1, -8
 446              		.cfi_offset 8, -16
 447              		.cfi_offset 9, -24
 448              		.cfi_offset 18, -32
 449              		.cfi_offset 19, -40
 450              		.cfi_offset 20, -48
 451              		.cfi_offset 21, -56
 452              		.cfi_offset 22, -64
 453 01e4 13040107 		addi	s0,sp,112
 454              		.cfi_def_cfa 8, 0
  81:src/Riscv.cpp **** 
  82:src/Riscv.cpp ****     uint64 a4;
 455              		.loc 1 82 5
  83:src/Riscv.cpp ****     __asm__ volatile("mv %0, a4" : "=r"(a4));
 456              		.loc 1 83 5
 457              		.loc 1 83 45 is_stmt 0
 458              	#APP
 459              	# 83 "src/Riscv.cpp" 1
  84              	
 460              		mv s2, a4
 461              	# 0 "" 2
 462              	.LVL30:
  85:src/Riscv.cpp ****     uint64 scause = Riscv::r_scause();
 463              		.loc 1 85 5 is_stmt 1
 464              	#NO_APP
 465              	.LBB72:
 466              	.LBB73:
  87:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
 467              		.loc 2 87 5
  88:src/../h/Riscv.h ****     return scause;
 468              		.loc 2 88 5
  88:src/../h/Riscv.h ****     return scause;
 469              		.loc 2 88 55 is_stmt 0
 470              	#APP
 471              	# 88 "src/../h/Riscv.h" 1
 472              		csrr a5, scause
 473              	# 0 "" 2
 474              	#NO_APP
 475 01f0 233CF4F8 		sd	a5,-104(s0)
  89:src/../h/Riscv.h **** }
 476              		.loc 2 89 5 is_stmt 1
  89:src/../h/Riscv.h **** }
 477              		.loc 2 89 12 is_stmt 0
 478 01f4 033784F9 		ld	a4,-104(s0)
 479              	.LVL31:
 480              	.LBE73:
 481              	.LBE72:
  86:src/Riscv.cpp ****     switch(scause) {
 482              		.loc 1 86 5 is_stmt 1
 483              	.LBB74:
 484 01f8 93079000 		li	a5,9
 485 01fc 630AF708 		beq	a4,a5,.L19
 486 0200 9307F0FF 		li	a5,-1
GAS LISTING /tmp/ccHqUuW5.s 			page 14


 487 0204 9397F703 		slli	a5,a5,63
 488 0208 93871700 		addi	a5,a5,1
 489 020c 631EF70A 		bne	a4,a5,.L18
 490              	.LBB75:
  87:src/Riscv.cpp **** 
  88:src/Riscv.cpp ****         case timerInterrupt:
 491              		.loc 1 88 9
  89:src/Riscv.cpp **** 
  90:src/Riscv.cpp ****             Riscv::printString("timerInterrupt\n");
 492              		.loc 1 90 13
 493              		.loc 1 90 31 is_stmt 0
 494 0210 17050000 		lla	a0,.LC1
 494      13050500 
 495              	.LEHB0:
 496 0218 97000000 		call	_ZN5Riscv11printStringEPKc
 496      E7800000 
 497              	.LVL32:
  91:src/Riscv.cpp ****             PCB::timeSliceCounter++;
 498              		.loc 1 91 13 is_stmt 1
 499              		.loc 1 91 34 is_stmt 0
 500 0220 17070000 		la	a4,_ZN3PCB16timeSliceCounterE
 500      03370700 
 501 0228 83370700 		ld	a5,0(a4)
 502 022c 93871700 		addi	a5,a5,1
 503 0230 2330F700 		sd	a5,0(a4)
  92:src/Riscv.cpp ****             if(PCB::running == 0)
 504              		.loc 1 92 13 is_stmt 1
 505              		.loc 1 92 29 is_stmt 0
 506 0234 17070000 		la	a4,_ZN3PCB7runningE
 506      03370700 
 507 023c 03370700 		ld	a4,0(a4)
 508              		.loc 1 92 13
 509 0240 63040708 		beqz	a4,.L18
  93:src/Riscv.cpp ****                 break;
  94:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice()) {
 510              		.loc 1 94 13 is_stmt 1
 511              	.LVL33:
 512              	.LBB76:
 513              	.LBB77:
 514              	.LBB78:
 515              		.file 3 "src/../h/PCB.h"
   1:src/../h/PCB.h **** //
   2:src/../h/PCB.h **** // Created by os on 4/27/22.
   3:src/../h/PCB.h **** //
   4:src/../h/PCB.h **** 
   5:src/../h/PCB.h **** #ifndef PROJECT_BASE_V1_0_PCB_H
   6:src/../h/PCB.h **** #define PROJECT_BASE_V1_0_PCB_H
   7:src/../h/PCB.h **** 
   8:src/../h/PCB.h **** #include "../lib/hw.h"
   9:src/../h/PCB.h **** #include "Scheduler.h"
  10:src/../h/PCB.h **** #include "Riscv.h"
  11:src/../h/PCB.h **** 
  12:src/../h/PCB.h **** class PCB
  13:src/../h/PCB.h **** {
  14:src/../h/PCB.h **** public:
  15:src/../h/PCB.h ****     using Body = void (*)(void*);
  16:src/../h/PCB.h **** 
GAS LISTING /tmp/ccHqUuW5.s 			page 15


  17:src/../h/PCB.h ****     PCB(Body body,  void* args, void* stack_space, uint64 timeSlice);
  18:src/../h/PCB.h **** 
  19:src/../h/PCB.h ****     void start();
  20:src/../h/PCB.h ****     static void dispatch();
  21:src/../h/PCB.h ****     static void sleep(time_t);
  22:src/../h/PCB.h **** 
  23:src/../h/PCB.h ****     static PCB* running;
  24:src/../h/PCB.h **** 
  25:src/../h/PCB.h ****     static const uint64 THREAD_CREATE = 0x11;
  26:src/../h/PCB.h **** 
  27:src/../h/PCB.h ****     static const uint64 THREAD_EXIT = 0x12;
  28:src/../h/PCB.h ****     static const uint64 THREAD_DISPATCH = 0x13;
  29:src/../h/PCB.h **** 
  30:src/../h/PCB.h ****     static uint64 timeSliceCounter;
  31:src/../h/PCB.h **** 
  32:src/../h/PCB.h ****     uint64 getTimeSlice() { return timeSlice;}
 516              		.loc 3 32 29
 517              		.loc 3 32 36 is_stmt 0
 518 0244 03370700 		ld	a4,0(a4)
 519              	.LVL34:
 520              	.LBE78:
 521              	.LBE77:
 522              		.loc 1 94 13
 523 0248 63F8E700 		bgeu	a5,a4,.L30
 524              	.LVL35:
 525              	.L21:
 526              	.LBE76:
  95:src/Riscv.cpp ****                 uint64 sepc = Riscv::r_sepc();
  96:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
  97:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
  98:src/Riscv.cpp ****                 PCB::dispatch();
  99:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 100:src/Riscv.cpp ****                 Riscv::w_sepc(sepc);
 101:src/Riscv.cpp ****             }
 102:src/Riscv.cpp ****             Riscv::mc_sip(Riscv::SIP_SSIP);
 527              		.loc 1 102 13 is_stmt 1
 528              	.LBB88:
 529              	.LBB89:
 131:src/../h/Riscv.h **** }
 530              		.loc 2 131 5
 131:src/../h/Riscv.h **** }
 531              		.loc 2 131 50 is_stmt 0
 532 024c 93072000 		li	a5,2
 533              	#APP
 534              	# 131 "src/../h/Riscv.h" 1
 132:src/../h/Riscv.h **** 
 535              		csrc sip, a5
 536              	# 0 "" 2
 537              		.loc 2 132 1
 538              	#NO_APP
 539 0254 6F004007 		j	.L18
 540              	.LVL36:
 541              	.L30:
 542              	.LBE89:
 543              	.LBE88:
 544              	.LBB90:
 545              	.LBB79:
GAS LISTING /tmp/ccHqUuW5.s 			page 16


  95:src/Riscv.cpp ****                 uint64 sepc = Riscv::r_sepc();
 546              		.loc 1 95 17 is_stmt 1
 547              	.LBB80:
 548              	.LBB81:
  97:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 549              		.loc 2 97 5
  98:src/../h/Riscv.h ****     return sepc;
 550              		.loc 2 98 5
  98:src/../h/Riscv.h ****     return sepc;
 551              		.loc 2 98 51 is_stmt 0
 552              	#APP
 553              	# 98 "src/../h/Riscv.h" 1
 554              		csrr a5, sepc
 555              	# 0 "" 2
 556              	#NO_APP
 557 025c 2334F4FA 		sd	a5,-88(s0)
  99:src/../h/Riscv.h **** }
 558              		.loc 2 99 5 is_stmt 1
  99:src/../h/Riscv.h **** }
 559              		.loc 2 99 12 is_stmt 0
 560 0260 833484FA 		ld	s1,-88(s0)
 561              	.LVL37:
 562              	.LBE81:
 563              	.LBE80:
  96:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 564              		.loc 1 96 17 is_stmt 1
 565              	.LBB82:
 566              	.LBB83:
 153:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 567              		.loc 2 153 5
 154:src/../h/Riscv.h ****     return sstatus;
 568              		.loc 2 154 5
 154:src/../h/Riscv.h ****     return sstatus;
 569              		.loc 2 154 57 is_stmt 0
 570              	#APP
 571              	# 154 "src/../h/Riscv.h" 1
 572              		csrr a5, sstatus
 573              	# 0 "" 2
 574              	#NO_APP
 575 0268 2330F4FA 		sd	a5,-96(s0)
 576              		.loc 2 155 5 is_stmt 1
 577              		.loc 2 155 12 is_stmt 0
 578 026c 033904FA 		ld	s2,-96(s0)
 579              	.LVL38:
 580              	.LBE83:
 581              	.LBE82:
  97:src/Riscv.cpp ****                 PCB::dispatch();
 582              		.loc 1 97 17 is_stmt 1
  97:src/Riscv.cpp ****                 PCB::dispatch();
 583              		.loc 1 97 39 is_stmt 0
 584 0270 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 584      83B70700 
 585 0278 23B00700 		sd	zero,0(a5)
  98:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 586              		.loc 1 98 17 is_stmt 1
  98:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 587              		.loc 1 98 30 is_stmt 0
GAS LISTING /tmp/ccHqUuW5.s 			page 17


 588 027c 97000000 		call	_ZN3PCB8dispatchEv@plt
 588      E7800000 
 589              	.LVL39:
  99:src/Riscv.cpp ****                 Riscv::w_sepc(sepc);
 590              		.loc 1 99 17 is_stmt 1
 591              	.LBB84:
 592              	.LBB85:
 156:src/../h/Riscv.h **** }
 157:src/../h/Riscv.h **** 
 158:src/../h/Riscv.h **** inline void Riscv::w_sstatus(uint64 sstatus) {
 159:src/../h/Riscv.h ****     __asm__ volatile("csrw sstatus, %0" : :"r"(sstatus));
 593              		.loc 2 159 5
 594              		.loc 2 159 57 is_stmt 0
 595              	#APP
 596              	# 159 "src/../h/Riscv.h" 1
 160              	}
 597              		csrw sstatus, s2
 598              	# 0 "" 2
 599              	.LVL40:
 600              	#NO_APP
 601              	.LBE85:
 602              	.LBE84:
 100:src/Riscv.cpp ****             }
 603              		.loc 1 100 17 is_stmt 1
 604              	.LBB86:
 605              	.LBB87:
 103:src/../h/Riscv.h **** }
 606              		.loc 2 103 5
 103:src/../h/Riscv.h **** }
 607              		.loc 2 103 51 is_stmt 0
 608              	#APP
 609              	# 103 "src/../h/Riscv.h" 1
 104:src/../h/Riscv.h **** 
 610              		csrw sepc, s1
 611              	# 0 "" 2
 612              		.loc 2 104 1
 613              	#NO_APP
 614 028c 6FF01FFC 		j	.L21
 615              	.LVL41:
 616              	.L19:
 617              	.LBE87:
 618              	.LBE86:
 619              	.LBE79:
 620              	.LBE90:
 103:src/Riscv.cpp **** 
 104:src/Riscv.cpp ****             break;
 105:src/Riscv.cpp **** 
 106:src/Riscv.cpp ****         case hwInterrupt: // todo
 107:src/Riscv.cpp **** 
 108:src/Riscv.cpp ****             break;
 109:src/Riscv.cpp **** 
 110:src/Riscv.cpp ****         case operationInterrupt: // todo
 111:src/Riscv.cpp ****             break;
 112:src/Riscv.cpp **** 
 113:src/Riscv.cpp ****         case addrReadInterrupt: // todo
 114:src/Riscv.cpp ****             break;
 115:src/Riscv.cpp **** 
GAS LISTING /tmp/ccHqUuW5.s 			page 18


 116:src/Riscv.cpp ****         case addrWriteInterrupt: // todo
 117:src/Riscv.cpp ****             break;
 118:src/Riscv.cpp **** 
 119:src/Riscv.cpp ****         case ecallUserInterrupt: // todo
 120:src/Riscv.cpp ****             break;
 121:src/Riscv.cpp **** 
 122:src/Riscv.cpp ****         case ecallSystemInterupt:
 621              		.loc 1 122 9 is_stmt 1
 123:src/Riscv.cpp **** 
 124:src/Riscv.cpp ****             uint64 operation;
 622              		.loc 1 124 13
 125:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
 623              		.loc 1 125 13
 624              		.loc 1 125 61 is_stmt 0
 625              	#APP
 626              	# 125 "src/Riscv.cpp" 1
 126              	
 627              		mv a5, a0
 628              	# 0 "" 2
 629              	.LVL42:
 127:src/Riscv.cpp ****             uint64 sepc = Riscv::r_sepc();
 630              		.loc 1 127 13 is_stmt 1
 631              	#NO_APP
 632              	.LBB91:
 633              	.LBB92:
  97:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 634              		.loc 2 97 5
  98:src/../h/Riscv.h ****     return sepc;
 635              		.loc 2 98 5
  98:src/../h/Riscv.h ****     return sepc;
 636              		.loc 2 98 51 is_stmt 0
 637              	#APP
 638              	# 98 "src/../h/Riscv.h" 1
 639              		csrr a4, sepc
 640              	# 0 "" 2
 641              	.LVL43:
 642              	#NO_APP
 643 0298 2338E4FA 		sd	a4,-80(s0)
  99:src/../h/Riscv.h **** }
 644              		.loc 2 99 5 is_stmt 1
  99:src/../h/Riscv.h **** }
 645              		.loc 2 99 12 is_stmt 0
 646 029c 833404FB 		ld	s1,-80(s0)
 647              	.LVL44:
 648              	.LBE92:
 649              	.LBE91:
 128:src/Riscv.cpp ****             sepc+=4;
 650              		.loc 1 128 13 is_stmt 1
 651              		.loc 1 128 17 is_stmt 0
 652 02a0 93844400 		addi	s1,s1,4
 653              	.LVL45:
 129:src/Riscv.cpp **** 
 130:src/Riscv.cpp ****             if(operation == MemoryAllocator::MEM_ALLOC) {
 654              		.loc 1 130 13 is_stmt 1
 655              	.LBB93:
 656 02a4 13071000 		li	a4,1
 657 02a8 6384E704 		beq	a5,a4,.L31
GAS LISTING /tmp/ccHqUuW5.s 			page 19


 658              	.LBE93:
 659              	.LBE75:
 660              	.LBE74:
 131:src/Riscv.cpp ****                 size_t size;
 132:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(size));
 133:src/Riscv.cpp ****                 size*=MEM_BLOCK_SIZE;
 134:src/Riscv.cpp ****                 void* allocatedAddr = kmalloc(size);
 135:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : : "r"((uint64)allocatedAddr));
 136:src/Riscv.cpp ****             }
 137:src/Riscv.cpp ****             else if(operation == MemoryAllocator::MEM_FREE) {
 661              		.loc 1 137 18
 662              	.LBB122:
 663              	.LBB118:
 664              	.LBB112:
 665              	.LBB94:
 666 02ac 13072000 		li	a4,2
 667 02b0 638CE704 		beq	a5,a4,.L32
 668              	.LBE94:
 669              	.LBE112:
 670              	.LBE118:
 671              	.LBE122:
 138:src/Riscv.cpp ****                 uint64 addr = 0;
 139:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(addr));
 140:src/Riscv.cpp ****                 uint64 retval = kfree((void*)addr);
 141:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 142:src/Riscv.cpp ****             }
 143:src/Riscv.cpp ****             else if(operation == PCB::THREAD_CREATE)
 672              		.loc 1 143 18
 673              	.LBB123:
 674              	.LBB119:
 675              	.LBB113:
 676              	.LBB108:
 677              	.LBB95:
 678 02b4 13071001 		li	a4,17
 679 02b8 6382E706 		beq	a5,a4,.L33
 680              	.LBE95:
 681              	.LBE108:
 682              	.LBE113:
 683              	.LBE119:
 684              	.LBE123:
 144:src/Riscv.cpp ****             {
 145:src/Riscv.cpp ****                 //todo
 146:src/Riscv.cpp ****                 //thread create
 147:src/Riscv.cpp ****                 uint64 start_routine;
 148:src/Riscv.cpp ****                 uint64 args;
 149:src/Riscv.cpp ****                 //uint64 stack_space;
 150:src/Riscv.cpp ****                 PCB** threadHandle;
 151:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(threadHandle));
 152:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(start_routine));
 153:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a3" : "=r"(args));
 154:src/Riscv.cpp ****                 //__asm__ volatile("mv %0, a4" : "=r"(stack_space));
 155:src/Riscv.cpp ****                 //todo
 156:src/Riscv.cpp ****                 //da li treba ovako ili tipa da se ne koristi new
 157:src/Riscv.cpp ****                 //nego direktno kmalloc - ali onda kako konstruktor
 158:src/Riscv.cpp ****                 //sta se desava ako preklopljeni new vrati 0
 159:src/Riscv.cpp ****                 PCB* newPCB = new PCB((void (*)(void*))start_routine, (void*)args, (void*)a4, 2UL);
 160:src/Riscv.cpp **** 
GAS LISTING /tmp/ccHqUuW5.s 			page 20


 161:src/Riscv.cpp ****                 (*threadHandle) = newPCB;
 162:src/Riscv.cpp **** 
 163:src/Riscv.cpp ****                 if(newPCB == 0)
 164:src/Riscv.cpp ****                 {
 165:src/Riscv.cpp ****                     __asm__ volatile("li a0, 0xffffffffffffffff");
 166:src/Riscv.cpp ****                     //__asm__ volatile("mv a1, %0" : :"r"((uint64)newPCB));
 167:src/Riscv.cpp ****                 }
 168:src/Riscv.cpp ****                 else
 169:src/Riscv.cpp ****                 {
 170:src/Riscv.cpp ****                     __asm__ volatile("li a0, 0");
 171:src/Riscv.cpp ****                     //__asm__ volatile("mv a1, %0" : :"r"((uint64)newPCB));
 172:src/Riscv.cpp ****                 }
 173:src/Riscv.cpp **** 
 174:src/Riscv.cpp ****             }
 175:src/Riscv.cpp ****             else if(operation == PCB::THREAD_DISPATCH)
 685              		.loc 1 175 18
 686              	.LBB124:
 687              	.LBB120:
 688              	.LBB114:
 689              	.LBB109:
 690              	.LBB105:
 691              	.LBB96:
 692 02bc 13073001 		li	a4,19
 693 02c0 6384E70A 		beq	a5,a4,.L34
 694              	.LVL46:
 695              	.L23:
 696              	.LBE96:
 697              	.LBE105:
 698              	.LBE109:
 699              	.LBE114:
 176:src/Riscv.cpp ****             {
 177:src/Riscv.cpp ****                 uint64 sstatus = Riscv::r_sstatus();
 178:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 179:src/Riscv.cpp ****                 PCB::dispatch();
 180:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 181:src/Riscv.cpp ****             }
 182:src/Riscv.cpp **** 
 183:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 700              		.loc 1 183 13
 701              	.LBB115:
 702              	.LBB116:
 103:src/../h/Riscv.h **** }
 703              		.loc 2 103 5
 103:src/../h/Riscv.h **** }
 704              		.loc 2 103 51 is_stmt 0
 705              	#APP
 706              	# 103 "src/../h/Riscv.h" 1
 707              		csrw sepc, s1
 708              	# 0 "" 2
 709              	.LVL47:
 710              	#NO_APP
 711              	.L18:
 712              	.LBE116:
 713              	.LBE115:
 714              	.LBE120:
 715              	.LBE124:
 184:src/Riscv.cpp **** 
GAS LISTING /tmp/ccHqUuW5.s 			page 21


 185:src/Riscv.cpp ****             break;
 186:src/Riscv.cpp ****     }
 187:src/Riscv.cpp **** 
 188:src/Riscv.cpp ****     //console_handler();
 189:src/Riscv.cpp **** }
 716              		.loc 1 189 1
 717 02c8 83308106 		ld	ra,104(sp)
 718              		.cfi_remember_state
 719              		.cfi_restore 1
 720 02cc 03340106 		ld	s0,96(sp)
 721              		.cfi_restore 8
 722              		.cfi_def_cfa 2, 112
 723 02d0 83348105 		ld	s1,88(sp)
 724              		.cfi_restore 9
 725 02d4 03390105 		ld	s2,80(sp)
 726              		.cfi_restore 18
 727 02d8 83398104 		ld	s3,72(sp)
 728              		.cfi_restore 19
 729 02dc 033A0104 		ld	s4,64(sp)
 730              		.cfi_restore 20
 731 02e0 833A8103 		ld	s5,56(sp)
 732              		.cfi_restore 21
 733 02e4 033B0103 		ld	s6,48(sp)
 734              		.cfi_restore 22
 735 02e8 13010107 		addi	sp,sp,112
 736              		.cfi_def_cfa_offset 0
 737 02ec 67800000 		jr	ra
 738              	.LVL48:
 739              	.L31:
 740              		.cfi_restore_state
 741              	.LBB125:
 742              	.LBB121:
 743              	.LBB117:
 744              	.LBB110:
 131:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(size));
 745              		.loc 1 131 17 is_stmt 1
 132:src/Riscv.cpp ****                 size*=MEM_BLOCK_SIZE;
 746              		.loc 1 132 17
 132:src/Riscv.cpp ****                 size*=MEM_BLOCK_SIZE;
 747              		.loc 1 132 59 is_stmt 0
 748              	#APP
 749              	# 132 "src/Riscv.cpp" 1
 750              		mv a0, a1
 751              	# 0 "" 2
 752              	.LVL49:
 133:src/Riscv.cpp ****                 void* allocatedAddr = kmalloc(size);
 753              		.loc 1 133 17 is_stmt 1
 134:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : : "r"((uint64)allocatedAddr));
 754              		.loc 1 134 17
 134:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : : "r"((uint64)allocatedAddr));
 755              		.loc 1 134 46 is_stmt 0
 756              	#NO_APP
 757 02f4 13156500 		slli	a0,a0,6
 758              	.LVL50:
 759 02f8 97000000 		call	_Z7kmallocm@plt
 759      E7800000 
 760              	.LVL51:
GAS LISTING /tmp/ccHqUuW5.s 			page 22


 135:src/Riscv.cpp ****             }
 761              		.loc 1 135 17 is_stmt 1
 135:src/Riscv.cpp ****             }
 762              		.loc 1 135 76 is_stmt 0
 763              	#APP
 764              	# 135 "src/Riscv.cpp" 1
 765              		mv a0,a0
 766              	# 0 "" 2
 767              	#NO_APP
 768              	.LBE110:
 769 0304 6FF01FFC 		j	.L23
 770              	.LVL52:
 771              	.L32:
 772              	.LBB111:
 773              	.LBB106:
 138:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(addr));
 774              		.loc 1 138 17 is_stmt 1
 139:src/Riscv.cpp ****                 uint64 retval = kfree((void*)addr);
 775              		.loc 1 139 17
 139:src/Riscv.cpp ****                 uint64 retval = kfree((void*)addr);
 776              		.loc 1 139 59 is_stmt 0
 777              	#APP
 778              	# 139 "src/Riscv.cpp" 1
 779              		mv a0, a1
 780              	# 0 "" 2
 781              	.LVL53:
 140:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 782              		.loc 1 140 17 is_stmt 1
 140:src/Riscv.cpp ****                 __asm__ volatile("mv a0,%0" : :"r"(retval));
 783              		.loc 1 140 38 is_stmt 0
 784              	#NO_APP
 785 030c 97000000 		call	_Z5kfreePv@plt
 785      E7800000 
 786              	.LVL54:
 141:src/Riscv.cpp ****             }
 787              		.loc 1 141 17 is_stmt 1
 141:src/Riscv.cpp ****             }
 788              		.loc 1 141 60 is_stmt 0
 789              	#APP
 790              	# 141 "src/Riscv.cpp" 1
 791              		mv a0,a0
 792              	# 0 "" 2
 793              	#NO_APP
 794              	.LBE106:
 795 0318 6FF0DFFA 		j	.L23
 796              	.LVL55:
 797              	.L33:
 798              	.LBB107:
 799              	.LBB102:
 147:src/Riscv.cpp ****                 uint64 args;
 800              		.loc 1 147 17 is_stmt 1
 148:src/Riscv.cpp ****                 //uint64 stack_space;
 801              		.loc 1 148 17
 150:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(threadHandle));
 802              		.loc 1 150 17
 151:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(start_routine));
 803              		.loc 1 151 17
GAS LISTING /tmp/ccHqUuW5.s 			page 23


 151:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(start_routine));
 804              		.loc 1 151 67 is_stmt 0
 805              	#APP
 806              	# 151 "src/Riscv.cpp" 1
 807              		mv s4, a1
 808              	# 0 "" 2
 809              	.LVL56:
 152:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a3" : "=r"(args));
 810              		.loc 1 152 17 is_stmt 1
 152:src/Riscv.cpp ****                 __asm__ volatile("mv %0, a3" : "=r"(args));
 811              		.loc 1 152 68 is_stmt 0
 812              	# 152 "src/Riscv.cpp" 1
 813              		mv s5, a2
 814              	# 0 "" 2
 815              	.LVL57:
 153:src/Riscv.cpp ****                 //__asm__ volatile("mv %0, a4" : "=r"(stack_space));
 816              		.loc 1 153 17 is_stmt 1
 153:src/Riscv.cpp ****                 //__asm__ volatile("mv %0, a4" : "=r"(stack_space));
 817              		.loc 1 153 59 is_stmt 0
 818              	# 153 "src/Riscv.cpp" 1
 819              		mv s6, a3
 820              	# 0 "" 2
 821              	.LVL58:
 159:src/Riscv.cpp **** 
 822              		.loc 1 159 17 is_stmt 1
 159:src/Riscv.cpp **** 
 823              		.loc 1 159 98 is_stmt 0
 824              	#NO_APP
 825 0328 13050004 		li	a0,64
 826 032c 97000000 		call	_ZN3PCBnwEm@plt
 826      E7800000 
 827              	.LVL59:
 828              	.LEHE0:
 829 0334 93090500 		mv	s3,a0
 830 0338 13072000 		li	a4,2
 831 033c 93060900 		mv	a3,s2
 832 0340 13060B00 		mv	a2,s6
 833 0344 93850A00 		mv	a1,s5
 834              	.LEHB1:
 835 0348 97000000 		call	_ZN3PCBC1EPFvPvES0_S0_m@plt
 835      E7800000 
 836              	.LVL60:
 837              	.LEHE1:
 161:src/Riscv.cpp **** 
 838              		.loc 1 161 17 is_stmt 1 discriminator 2
 161:src/Riscv.cpp **** 
 839              		.loc 1 161 33 is_stmt 0 discriminator 2
 840 0350 23303A01 		sd	s3,0(s4)
 163:src/Riscv.cpp ****                 {
 841              		.loc 1 163 17 is_stmt 1 discriminator 2
 842 0354 63860900 		beqz	s3,.L35
 170:src/Riscv.cpp ****                     //__asm__ volatile("mv a1, %0" : :"r"((uint64)newPCB));
 843              		.loc 1 170 21
 170:src/Riscv.cpp ****                     //__asm__ volatile("mv a1, %0" : :"r"((uint64)newPCB));
 844              		.loc 1 170 49 is_stmt 0
 845              	#APP
 846              	# 170 "src/Riscv.cpp" 1
GAS LISTING /tmp/ccHqUuW5.s 			page 24


 847              		li a0, 0
 848              	# 0 "" 2
 849              	#NO_APP
 850 035c 6FF09FF6 		j	.L23
 851              	.L35:
 165:src/Riscv.cpp ****                     //__asm__ volatile("mv a1, %0" : :"r"((uint64)newPCB));
 852              		.loc 1 165 21 is_stmt 1
 165:src/Riscv.cpp ****                     //__asm__ volatile("mv a1, %0" : :"r"((uint64)newPCB));
 853              		.loc 1 165 66 is_stmt 0
 854              	#APP
 855              	# 165 "src/Riscv.cpp" 1
 856              		li a0, 0xffffffffffffffff
 857              	# 0 "" 2
 858              	#NO_APP
 859 0364 6FF01FF6 		j	.L23
 860              	.LVL61:
 861              	.L34:
 862              	.LBE102:
 863              	.LBB103:
 864              	.LBB97:
 177:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 865              		.loc 1 177 17 is_stmt 1
 866              	.LBB98:
 867              	.LBB99:
 153:src/../h/Riscv.h ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 868              		.loc 2 153 5
 154:src/../h/Riscv.h ****     return sstatus;
 869              		.loc 2 154 5
 154:src/../h/Riscv.h ****     return sstatus;
 870              		.loc 2 154 57 is_stmt 0
 871              	#APP
 872              	# 154 "src/../h/Riscv.h" 1
 873              		csrr a5, sstatus
 874              	# 0 "" 2
 875              	.LVL62:
 876              	#NO_APP
 877 036c 233CF4FA 		sd	a5,-72(s0)
 155:src/../h/Riscv.h **** }
 878              		.loc 2 155 5 is_stmt 1
 155:src/../h/Riscv.h **** }
 879              		.loc 2 155 12 is_stmt 0
 880 0370 033984FB 		ld	s2,-72(s0)
 881              	.LVL63:
 882              	.LBE99:
 883              	.LBE98:
 178:src/Riscv.cpp ****                 PCB::dispatch();
 884              		.loc 1 178 17 is_stmt 1
 178:src/Riscv.cpp ****                 PCB::dispatch();
 885              		.loc 1 178 39 is_stmt 0
 886 0374 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 886      83B70700 
 887 037c 23B00700 		sd	zero,0(a5)
 179:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 888              		.loc 1 179 17 is_stmt 1
 889              	.LEHB2:
 179:src/Riscv.cpp ****                 Riscv::w_sstatus(sstatus);
 890              		.loc 1 179 30 is_stmt 0
GAS LISTING /tmp/ccHqUuW5.s 			page 25


 891 0380 97000000 		call	_ZN3PCB8dispatchEv@plt
 891      E7800000 
 892              	.LVL64:
 893              	.LEHE2:
 180:src/Riscv.cpp ****             }
 894              		.loc 1 180 17 is_stmt 1
 895              	.LBB100:
 896              	.LBB101:
 159:src/../h/Riscv.h **** }
 897              		.loc 2 159 5
 159:src/../h/Riscv.h **** }
 898              		.loc 2 159 57 is_stmt 0
 899              	#APP
 900              	# 159 "src/../h/Riscv.h" 1
 901              		csrw sstatus, s2
 902              	# 0 "" 2
 903              		.loc 2 160 1
 904              	#NO_APP
 905 038c 6FF09FF3 		j	.L23
 906              	.LVL65:
 907              	.L28:
 908 0390 93040500 		mv	s1,a0
 909              	.LVL66:
 910              	.LBE101:
 911              	.LBE100:
 912              	.LBE97:
 913              	.LBE103:
 914              	.LBB104:
 159:src/Riscv.cpp **** 
 915              		.loc 1 159 98
 916 0394 13850900 		mv	a0,s3
 917 0398 97000000 		call	_ZN3PCBdlEPv@plt
 917      E7800000 
 918              	.LVL67:
 919 03a0 13850400 		mv	a0,s1
 920              	.LEHB3:
 921 03a4 97000000 		call	_Unwind_Resume@plt
 921      E7800000 
 922              	.LVL68:
 923              	.LEHE3:
 924              	.LBE104:
 925              	.LBE107:
 926              	.LBE111:
 927              	.LBE117:
 928              	.LBE121:
 929              	.LBE125:
 930              		.cfi_endproc
 931              	.LFE25:
 932              		.globl	__gxx_personality_v0
 933              		.section	.gcc_except_table,"a",@progbits
 934              	.LLSDA25:
 935 0000 FF       		.byte	0xff
 936 0001 FF       		.byte	0xff
 937 0002 03       		.byte	0x3
 938 0003 34       		.byte	0x34
 939 0004 00000000 		.4byte	.LEHB0-.LFB25
 940 0008 00000000 		.4byte	.LEHE0-.LEHB0
GAS LISTING /tmp/ccHqUuW5.s 			page 26


 941 000c 00000000 		.4byte	0
 942 0010 00       		.byte	0
 943 0011 00000000 		.4byte	.LEHB1-.LFB25
 944 0015 00000000 		.4byte	.LEHE1-.LEHB1
 945 0019 00000000 		.4byte	.L28-.LFB25
 946 001d 00       		.byte	0
 947 001e 00000000 		.4byte	.LEHB2-.LFB25
 948 0022 00000000 		.4byte	.LEHE2-.LEHB2
 949 0026 00000000 		.4byte	0
 950 002a 00       		.byte	0
 951 002b 00000000 		.4byte	.LEHB3-.LFB25
 952 002f 00000000 		.4byte	.LEHE3-.LEHB3
 953 0033 00000000 		.4byte	0
 954 0037 00       		.byte	0
 955              		.text
 957              		.section	.rodata
 958              		.align	3
 959              		.set	.LANCHOR0,. + 0
 962              	_ZZN5Riscv12printIntegerEmE6digits:
 963 0000 30313233 		.string	"0123456789"
 963      34353637 
 963      383900
 964              		.text
 965              	.Letext0:
 966              		.file 4 "src/../h/../lib/hw.h"
 967              		.file 5 "src/../h/MemoryAllocator.h"
 968              		.file 6 "src/../lib/console.h"
 4277              		.align	3
 4280              	DW.ref.__gxx_personality_v0:
 4281 0000 00000000 		.dword	__gxx_personality_v0
 4281      00000000 
 4282              		.ident	"GCC: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0"
 4283              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/ccHqUuW5.s 			page 27


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Riscv.cpp
     /tmp/ccHqUuW5.s:9      .text:0000000000000000 _ZN5Riscv10initSystemEv
     /tmp/ccHqUuW5.s:13     .text:0000000000000000 .L0 
     /tmp/ccHqUuW5.s:14     .text:0000000000000000 .L0 
     /tmp/ccHqUuW5.s:15     .text:0000000000000004 .L0 
     /tmp/ccHqUuW5.s:17     .text:0000000000000008 .L0 
     /tmp/ccHqUuW5.s:19     .text:000000000000000c .L0 
     /tmp/ccHqUuW5.s:21     .text:000000000000000c .L0 
     /tmp/ccHqUuW5.s:22     .text:000000000000000c .L0 
     /tmp/ccHqUuW5.s:28     .text:0000000000000014 .L0 
    src/../h/Riscv.h:113    .text:0000000000000014 .L0 
     /tmp/ccHqUuW5.s:38     .text:0000000000000018 .L0 
     /tmp/ccHqUuW5.s:39     .text:000000000000001c .L0 
     /tmp/ccHqUuW5.s:40     .text:000000000000001c .L0 
     /tmp/ccHqUuW5.s:42     .text:0000000000000020 .L0 
     /tmp/ccHqUuW5.s:44     .text:0000000000000024 .L0 
     /tmp/ccHqUuW5.s:50     .text:0000000000000024 _ZN5Riscv16enableInterruptsEv
     /tmp/ccHqUuW5.s:53     .text:0000000000000024 .L0 
     /tmp/ccHqUuW5.s:54     .text:0000000000000024 .L0 
     /tmp/ccHqUuW5.s:55     .text:0000000000000028 .L0 
     /tmp/ccHqUuW5.s:57     .text:000000000000002c .L0 
     /tmp/ccHqUuW5.s:59     .text:0000000000000030 .L0 
     /tmp/ccHqUuW5.s:64     .text:0000000000000030 .L0 
     /tmp/ccHqUuW5.s:65     .text:0000000000000030 .L0 
     /tmp/ccHqUuW5.s:66     .text:0000000000000030 .L0 
     /tmp/ccHqUuW5.s:76     .text:0000000000000038 .L0 
     /tmp/ccHqUuW5.s:77     .text:000000000000003c .L0 
     /tmp/ccHqUuW5.s:78     .text:000000000000003c .L0 
     /tmp/ccHqUuW5.s:80     .text:0000000000000040 .L0 
     /tmp/ccHqUuW5.s:82     .text:0000000000000044 .L0 
     /tmp/ccHqUuW5.s:88     .text:0000000000000044 _ZN5Riscv17disableInterruptsEv
     /tmp/ccHqUuW5.s:91     .text:0000000000000044 .L0 
     /tmp/ccHqUuW5.s:92     .text:0000000000000044 .L0 
     /tmp/ccHqUuW5.s:93     .text:0000000000000048 .L0 
     /tmp/ccHqUuW5.s:95     .text:000000000000004c .L0 
     /tmp/ccHqUuW5.s:97     .text:0000000000000050 .L0 
     /tmp/ccHqUuW5.s:102    .text:0000000000000050 .L0 
     /tmp/ccHqUuW5.s:103    .text:0000000000000050 .L0 
     /tmp/ccHqUuW5.s:104    .text:0000000000000050 .L0 
     /tmp/ccHqUuW5.s:114    .text:0000000000000058 .L0 
     /tmp/ccHqUuW5.s:115    .text:000000000000005c .L0 
     /tmp/ccHqUuW5.s:116    .text:000000000000005c .L0 
     /tmp/ccHqUuW5.s:118    .text:0000000000000060 .L0 
     /tmp/ccHqUuW5.s:120    .text:0000000000000064 .L0 
     /tmp/ccHqUuW5.s:126    .text:0000000000000064 _ZN5Riscv10popSppSpieEv
     /tmp/ccHqUuW5.s:129    .text:0000000000000064 .L0 
     /tmp/ccHqUuW5.s:130    .text:0000000000000064 .L0 
     /tmp/ccHqUuW5.s:131    .text:0000000000000068 .L0 
     /tmp/ccHqUuW5.s:133    .text:000000000000006c .L0 
     /tmp/ccHqUuW5.s:135    .text:0000000000000070 .L0 
     /tmp/ccHqUuW5.s:137    .text:0000000000000070 .L0 
       src/Riscv.cpp:30     .text:0000000000000070 .L0 
     /tmp/ccHqUuW5.s:143    .text:0000000000000074 .L0 
       src/Riscv.cpp:31     .text:0000000000000074 .L0 
     /tmp/ccHqUuW5.s:149    .text:0000000000000078 .L0 
     /tmp/ccHqUuW5.s:150    .text:000000000000007c .L0 
GAS LISTING /tmp/ccHqUuW5.s 			page 28


     /tmp/ccHqUuW5.s:151    .text:000000000000007c .L0 
     /tmp/ccHqUuW5.s:153    .text:0000000000000080 .L0 
     /tmp/ccHqUuW5.s:155    .text:0000000000000084 .L0 
     /tmp/ccHqUuW5.s:161    .text:0000000000000084 _ZN5Riscv11printStringEPKc
     /tmp/ccHqUuW5.s:164    .text:0000000000000084 .L0 
     /tmp/ccHqUuW5.s:166    .text:0000000000000084 .L0 
     /tmp/ccHqUuW5.s:167    .text:0000000000000088 .L0 
     /tmp/ccHqUuW5.s:172    .text:0000000000000098 .L0 
     /tmp/ccHqUuW5.s:173    .text:0000000000000098 .L0 
     /tmp/ccHqUuW5.s:174    .text:0000000000000098 .L0 
     /tmp/ccHqUuW5.s:175    .text:0000000000000098 .L0 
     /tmp/ccHqUuW5.s:177    .text:000000000000009c .L0 
     /tmp/ccHqUuW5.s:182    .text:00000000000000a0 .L0 
     /tmp/ccHqUuW5.s:183    .text:00000000000000a0 .L0 
     /tmp/ccHqUuW5.s:184    .text:00000000000000a0 .L0 
    src/../h/Riscv.h:154    .text:00000000000000a0 .L0 
     /tmp/ccHqUuW5.s:192    .text:00000000000000a8 .L0 
     /tmp/ccHqUuW5.s:193    .text:00000000000000a8 .L0 
     /tmp/ccHqUuW5.s:200    .text:00000000000000ac .L0 
     /tmp/ccHqUuW5.s:201    .text:00000000000000ac .L0 
     /tmp/ccHqUuW5.s:202    .text:00000000000000ac .L0 
     /tmp/ccHqUuW5.s:213    .text:00000000000000b4 .L0 
     /tmp/ccHqUuW5.s:214    .text:00000000000000b4 .L0 
     /tmp/ccHqUuW5.s:215    .text:00000000000000b4 .L0 
     /tmp/ccHqUuW5.s:217    .text:00000000000000b8 .L0 
     /tmp/ccHqUuW5.s:219    .text:00000000000000bc .L0 
     /tmp/ccHqUuW5.s:220    .text:00000000000000bc .L0 
     /tmp/ccHqUuW5.s:223    .text:00000000000000c4 .L0 
     /tmp/ccHqUuW5.s:224    .text:00000000000000c4 .L0 
     /tmp/ccHqUuW5.s:227    .text:00000000000000c8 .L0 
     /tmp/ccHqUuW5.s:230    .text:00000000000000cc .L0 
     /tmp/ccHqUuW5.s:231    .text:00000000000000cc .L0 
     /tmp/ccHqUuW5.s:234    .text:00000000000000d0 .L0 
     /tmp/ccHqUuW5.s:240    .text:00000000000000d8 .L0 
    src/../h/Riscv.h:145    .text:00000000000000d8 .L0 
     /tmp/ccHqUuW5.s:250    .text:00000000000000dc .L0 
     /tmp/ccHqUuW5.s:251    .text:00000000000000e0 .L0 
     /tmp/ccHqUuW5.s:253    .text:00000000000000e4 .L0 
     /tmp/ccHqUuW5.s:254    .text:00000000000000e4 .L0 
     /tmp/ccHqUuW5.s:256    .text:00000000000000e8 .L0 
     /tmp/ccHqUuW5.s:259    .text:00000000000000ec .L0 
     /tmp/ccHqUuW5.s:261    .text:00000000000000f0 .L0 
     /tmp/ccHqUuW5.s:263    .text:00000000000000f4 .L0 
     /tmp/ccHqUuW5.s:274    .text:00000000000000f4 _ZN5Riscv12printIntegerEm
     /tmp/ccHqUuW5.s:277    .text:00000000000000f4 .L0 
     /tmp/ccHqUuW5.s:279    .text:00000000000000f4 .L0 
     /tmp/ccHqUuW5.s:280    .text:00000000000000f8 .L0 
     /tmp/ccHqUuW5.s:285    .text:0000000000000108 .L0 
     /tmp/ccHqUuW5.s:286    .text:0000000000000108 .L0 
     /tmp/ccHqUuW5.s:287    .text:0000000000000108 .L0 
     /tmp/ccHqUuW5.s:288    .text:0000000000000108 .L0 
     /tmp/ccHqUuW5.s:290    .text:000000000000010c .L0 
     /tmp/ccHqUuW5.s:294    .text:000000000000010c .L0 
     /tmp/ccHqUuW5.s:295    .text:000000000000010c .L0 
     /tmp/ccHqUuW5.s:296    .text:000000000000010c .L0 
    src/../h/Riscv.h:154    .text:000000000000010c .L0 
     /tmp/ccHqUuW5.s:304    .text:0000000000000114 .L0 
GAS LISTING /tmp/ccHqUuW5.s 			page 29


     /tmp/ccHqUuW5.s:305    .text:0000000000000114 .L0 
     /tmp/ccHqUuW5.s:312    .text:0000000000000118 .L0 
     /tmp/ccHqUuW5.s:313    .text:0000000000000118 .L0 
     /tmp/ccHqUuW5.s:314    .text:0000000000000118 .L0 
     /tmp/ccHqUuW5.s:324    .text:0000000000000120 .L0 
     /tmp/ccHqUuW5.s:325    .text:0000000000000120 .L0 
     /tmp/ccHqUuW5.s:326    .text:0000000000000120 .L0 
     /tmp/ccHqUuW5.s:327    .text:0000000000000120 .L0 
     /tmp/ccHqUuW5.s:328    .text:0000000000000120 .L0 
     /tmp/ccHqUuW5.s:329    .text:0000000000000120 .L0 
     /tmp/ccHqUuW5.s:330    .text:0000000000000120 .L0 
     /tmp/ccHqUuW5.s:331    .text:0000000000000120 .L0 
     /tmp/ccHqUuW5.s:334    .text:0000000000000124 .L0 
     /tmp/ccHqUuW5.s:335    .text:0000000000000124 .L0 
     /tmp/ccHqUuW5.s:339    .text:0000000000000128 .L0 
     /tmp/ccHqUuW5.s:340    .text:0000000000000128 .L0 
     /tmp/ccHqUuW5.s:341    .text:0000000000000128 .L0 
     /tmp/ccHqUuW5.s:345    .text:0000000000000130 .L0 
     /tmp/ccHqUuW5.s:351    .text:0000000000000148 .L0 
     /tmp/ccHqUuW5.s:357    .text:0000000000000158 .L0 
     /tmp/ccHqUuW5.s:359    .text:000000000000015c .L0 
     /tmp/ccHqUuW5.s:362    .text:0000000000000160 .L0 
     /tmp/ccHqUuW5.s:367    .text:0000000000000168 .L0 
     /tmp/ccHqUuW5.s:368    .text:0000000000000168 .L0 
     /tmp/ccHqUuW5.s:372    .text:0000000000000170 .L0 
     /tmp/ccHqUuW5.s:373    .text:0000000000000170 .L0 
     /tmp/ccHqUuW5.s:381    .text:0000000000000188 .L0 
     /tmp/ccHqUuW5.s:382    .text:0000000000000188 .L0 
     /tmp/ccHqUuW5.s:386    .text:0000000000000198 .L0 
     /tmp/ccHqUuW5.s:387    .text:0000000000000198 .L0 
     /tmp/ccHqUuW5.s:390    .text:000000000000019c .L0 
     /tmp/ccHqUuW5.s:396    .text:00000000000001a4 .L0 
    src/../h/Riscv.h:145    .text:00000000000001a4 .L0 
     /tmp/ccHqUuW5.s:406    .text:00000000000001a8 .L0 
     /tmp/ccHqUuW5.s:407    .text:00000000000001ac .L0 
     /tmp/ccHqUuW5.s:409    .text:00000000000001b0 .L0 
     /tmp/ccHqUuW5.s:410    .text:00000000000001b0 .L0 
     /tmp/ccHqUuW5.s:412    .text:00000000000001b4 .L0 
     /tmp/ccHqUuW5.s:414    .text:00000000000001b8 .L0 
     /tmp/ccHqUuW5.s:416    .text:00000000000001bc .L0 
     /tmp/ccHqUuW5.s:418    .text:00000000000001c0 .L0 
     /tmp/ccHqUuW5.s:429    .text:00000000000001c0 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccHqUuW5.s:432    .text:00000000000001c0 .L0 
     /tmp/ccHqUuW5.s:4280   .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/ccHqUuW5.s:435    .text:00000000000001c0 .L0 
     /tmp/ccHqUuW5.s:436    .text:00000000000001c4 .L0 
     /tmp/ccHqUuW5.s:445    .text:00000000000001e4 .L0 
     /tmp/ccHqUuW5.s:446    .text:00000000000001e4 .L0 
     /tmp/ccHqUuW5.s:447    .text:00000000000001e4 .L0 
     /tmp/ccHqUuW5.s:448    .text:00000000000001e4 .L0 
     /tmp/ccHqUuW5.s:449    .text:00000000000001e4 .L0 
     /tmp/ccHqUuW5.s:450    .text:00000000000001e4 .L0 
     /tmp/ccHqUuW5.s:451    .text:00000000000001e4 .L0 
     /tmp/ccHqUuW5.s:452    .text:00000000000001e4 .L0 
     /tmp/ccHqUuW5.s:454    .text:00000000000001e8 .L0 
     /tmp/ccHqUuW5.s:456    .text:00000000000001e8 .L0 
     /tmp/ccHqUuW5.s:457    .text:00000000000001e8 .L0 
GAS LISTING /tmp/ccHqUuW5.s 			page 30


       src/Riscv.cpp:83     .text:00000000000001e8 .L0 
     /tmp/ccHqUuW5.s:467    .text:00000000000001ec .L0 
     /tmp/ccHqUuW5.s:468    .text:00000000000001ec .L0 
     /tmp/ccHqUuW5.s:469    .text:00000000000001ec .L0 
    src/../h/Riscv.h:88     .text:00000000000001ec .L0 
     /tmp/ccHqUuW5.s:477    .text:00000000000001f4 .L0 
     /tmp/ccHqUuW5.s:478    .text:00000000000001f4 .L0 
     /tmp/ccHqUuW5.s:484    .text:00000000000001f8 .L0 
     /tmp/ccHqUuW5.s:492    .text:0000000000000210 .L0 
     /tmp/ccHqUuW5.s:493    .text:0000000000000210 .L0 
     /tmp/ccHqUuW5.s:494    .text:0000000000000210 .L0 
     /tmp/ccHqUuW5.s:499    .text:0000000000000220 .L0 
     /tmp/ccHqUuW5.s:500    .text:0000000000000220 .L0 
     /tmp/ccHqUuW5.s:505    .text:0000000000000234 .L0 
     /tmp/ccHqUuW5.s:506    .text:0000000000000234 .L0 
     /tmp/ccHqUuW5.s:509    .text:0000000000000240 .L0 
     /tmp/ccHqUuW5.s:516    .text:0000000000000244 .L0 
     /tmp/ccHqUuW5.s:517    .text:0000000000000244 .L0 
     /tmp/ccHqUuW5.s:518    .text:0000000000000244 .L0 
     /tmp/ccHqUuW5.s:523    .text:0000000000000248 .L0 
     /tmp/ccHqUuW5.s:530    .text:000000000000024c .L0 
     /tmp/ccHqUuW5.s:531    .text:000000000000024c .L0 
     /tmp/ccHqUuW5.s:532    .text:000000000000024c .L0 
     /tmp/ccHqUuW5.s:539    .text:0000000000000254 .L0 
     /tmp/ccHqUuW5.s:549    .text:0000000000000258 .L0 
     /tmp/ccHqUuW5.s:550    .text:0000000000000258 .L0 
     /tmp/ccHqUuW5.s:551    .text:0000000000000258 .L0 
    src/../h/Riscv.h:98     .text:0000000000000258 .L0 
     /tmp/ccHqUuW5.s:559    .text:0000000000000260 .L0 
     /tmp/ccHqUuW5.s:560    .text:0000000000000260 .L0 
     /tmp/ccHqUuW5.s:567    .text:0000000000000264 .L0 
     /tmp/ccHqUuW5.s:568    .text:0000000000000264 .L0 
     /tmp/ccHqUuW5.s:569    .text:0000000000000264 .L0 
    src/../h/Riscv.h:154    .text:0000000000000264 .L0 
     /tmp/ccHqUuW5.s:577    .text:000000000000026c .L0 
     /tmp/ccHqUuW5.s:578    .text:000000000000026c .L0 
     /tmp/ccHqUuW5.s:583    .text:0000000000000270 .L0 
     /tmp/ccHqUuW5.s:584    .text:0000000000000270 .L0 
     /tmp/ccHqUuW5.s:587    .text:000000000000027c .L0 
     /tmp/ccHqUuW5.s:588    .text:000000000000027c .L0 
     /tmp/ccHqUuW5.s:593    .text:0000000000000284 .L0 
     /tmp/ccHqUuW5.s:594    .text:0000000000000284 .L0 
    src/../h/Riscv.h:159    .text:0000000000000284 .L0 
     /tmp/ccHqUuW5.s:606    .text:0000000000000288 .L0 
     /tmp/ccHqUuW5.s:607    .text:0000000000000288 .L0 
    src/../h/Riscv.h:103    .text:0000000000000288 .L0 
     /tmp/ccHqUuW5.s:614    .text:000000000000028c .L0 
     /tmp/ccHqUuW5.s:622    .text:0000000000000290 .L0 
     /tmp/ccHqUuW5.s:623    .text:0000000000000290 .L0 
     /tmp/ccHqUuW5.s:624    .text:0000000000000290 .L0 
       src/Riscv.cpp:125    .text:0000000000000290 .L0 
     /tmp/ccHqUuW5.s:634    .text:0000000000000294 .L0 
     /tmp/ccHqUuW5.s:635    .text:0000000000000294 .L0 
     /tmp/ccHqUuW5.s:636    .text:0000000000000294 .L0 
    src/../h/Riscv.h:98     .text:0000000000000294 .L0 
     /tmp/ccHqUuW5.s:645    .text:000000000000029c .L0 
     /tmp/ccHqUuW5.s:646    .text:000000000000029c .L0 
GAS LISTING /tmp/ccHqUuW5.s 			page 31


     /tmp/ccHqUuW5.s:651    .text:00000000000002a0 .L0 
     /tmp/ccHqUuW5.s:652    .text:00000000000002a0 .L0 
     /tmp/ccHqUuW5.s:656    .text:00000000000002a4 .L0 
     /tmp/ccHqUuW5.s:666    .text:00000000000002ac .L0 
     /tmp/ccHqUuW5.s:678    .text:00000000000002b4 .L0 
     /tmp/ccHqUuW5.s:692    .text:00000000000002bc .L0 
     /tmp/ccHqUuW5.s:703    .text:00000000000002c4 .L0 
     /tmp/ccHqUuW5.s:704    .text:00000000000002c4 .L0 
    src/../h/Riscv.h:103    .text:00000000000002c4 .L0 
     /tmp/ccHqUuW5.s:717    .text:00000000000002c8 .L0 
     /tmp/ccHqUuW5.s:718    .text:00000000000002cc .L0 
     /tmp/ccHqUuW5.s:719    .text:00000000000002cc .L0 
     /tmp/ccHqUuW5.s:721    .text:00000000000002d0 .L0 
     /tmp/ccHqUuW5.s:722    .text:00000000000002d0 .L0 
     /tmp/ccHqUuW5.s:724    .text:00000000000002d4 .L0 
     /tmp/ccHqUuW5.s:726    .text:00000000000002d8 .L0 
     /tmp/ccHqUuW5.s:728    .text:00000000000002dc .L0 
     /tmp/ccHqUuW5.s:730    .text:00000000000002e0 .L0 
     /tmp/ccHqUuW5.s:732    .text:00000000000002e4 .L0 
     /tmp/ccHqUuW5.s:734    .text:00000000000002e8 .L0 
     /tmp/ccHqUuW5.s:736    .text:00000000000002ec .L0 
     /tmp/ccHqUuW5.s:740    .text:00000000000002f0 .L0 
     /tmp/ccHqUuW5.s:746    .text:00000000000002f0 .L0 
     /tmp/ccHqUuW5.s:747    .text:00000000000002f0 .L0 
       src/Riscv.cpp:132    .text:00000000000002f0 .L0 
     /tmp/ccHqUuW5.s:754    .text:00000000000002f4 .L0 
     /tmp/ccHqUuW5.s:755    .text:00000000000002f4 .L0 
     /tmp/ccHqUuW5.s:757    .text:00000000000002f4 .L0 
     /tmp/ccHqUuW5.s:762    .text:0000000000000300 .L0 
       src/Riscv.cpp:135    .text:0000000000000300 .L0 
     /tmp/ccHqUuW5.s:775    .text:0000000000000308 .L0 
     /tmp/ccHqUuW5.s:776    .text:0000000000000308 .L0 
       src/Riscv.cpp:139    .text:0000000000000308 .L0 
     /tmp/ccHqUuW5.s:783    .text:000000000000030c .L0 
     /tmp/ccHqUuW5.s:785    .text:000000000000030c .L0 
     /tmp/ccHqUuW5.s:788    .text:0000000000000314 .L0 
       src/Riscv.cpp:141    .text:0000000000000314 .L0 
     /tmp/ccHqUuW5.s:801    .text:000000000000031c .L0 
     /tmp/ccHqUuW5.s:802    .text:000000000000031c .L0 
     /tmp/ccHqUuW5.s:803    .text:000000000000031c .L0 
     /tmp/ccHqUuW5.s:804    .text:000000000000031c .L0 
       src/Riscv.cpp:151    .text:000000000000031c .L0 
     /tmp/ccHqUuW5.s:811    .text:0000000000000320 .L0 
       src/Riscv.cpp:152    .text:0000000000000320 .L0 
     /tmp/ccHqUuW5.s:817    .text:0000000000000324 .L0 
       src/Riscv.cpp:153    .text:0000000000000324 .L0 
     /tmp/ccHqUuW5.s:823    .text:0000000000000328 .L0 
     /tmp/ccHqUuW5.s:825    .text:0000000000000328 .L0 
     /tmp/ccHqUuW5.s:839    .text:0000000000000350 .L0 
     /tmp/ccHqUuW5.s:840    .text:0000000000000350 .L0 
     /tmp/ccHqUuW5.s:842    .text:0000000000000354 .L0 
     /tmp/ccHqUuW5.s:844    .text:0000000000000358 .L0 
       src/Riscv.cpp:170    .text:0000000000000358 .L0 
     /tmp/ccHqUuW5.s:853    .text:0000000000000360 .L0 
       src/Riscv.cpp:165    .text:0000000000000360 .L0 
     /tmp/ccHqUuW5.s:868    .text:0000000000000368 .L0 
     /tmp/ccHqUuW5.s:869    .text:0000000000000368 .L0 
GAS LISTING /tmp/ccHqUuW5.s 			page 32


     /tmp/ccHqUuW5.s:870    .text:0000000000000368 .L0 
    src/../h/Riscv.h:154    .text:0000000000000368 .L0 
     /tmp/ccHqUuW5.s:879    .text:0000000000000370 .L0 
     /tmp/ccHqUuW5.s:880    .text:0000000000000370 .L0 
     /tmp/ccHqUuW5.s:885    .text:0000000000000374 .L0 
     /tmp/ccHqUuW5.s:886    .text:0000000000000374 .L0 
     /tmp/ccHqUuW5.s:890    .text:0000000000000380 .L0 
     /tmp/ccHqUuW5.s:891    .text:0000000000000380 .L0 
     /tmp/ccHqUuW5.s:897    .text:0000000000000388 .L0 
     /tmp/ccHqUuW5.s:898    .text:0000000000000388 .L0 
    src/../h/Riscv.h:159    .text:0000000000000388 .L0 
     /tmp/ccHqUuW5.s:905    .text:000000000000038c .L0 
     /tmp/ccHqUuW5.s:916    .text:0000000000000394 .L0 
     /tmp/ccHqUuW5.s:930    .text:00000000000003ac .L0 
     /tmp/ccHqUuW5.s:959    .rodata:0000000000000000 .LANCHOR0
     /tmp/ccHqUuW5.s:962    .rodata:0000000000000000 _ZZN5Riscv12printIntegerEmE6digits
     /tmp/ccHqUuW5.s:969    .text:00000000000003ac .L0 
     /tmp/ccHqUuW5.s:22     .text:000000000000000c .L0 
     /tmp/ccHqUuW5.s:347    .text:0000000000000138 .L0 
     /tmp/ccHqUuW5.s:268    .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccHqUuW5.s:382    .text:0000000000000188 .L0 
     /tmp/ccHqUuW5.s:423    .rodata.str1.8:0000000000000008 .LC1
     /tmp/ccHqUuW5.s:494    .text:0000000000000210 .L0 
     /tmp/ccHqUuW5.s:500    .text:0000000000000220 .L0 
     /tmp/ccHqUuW5.s:506    .text:0000000000000234 .L0 
     /tmp/ccHqUuW5.s:584    .text:0000000000000270 .L0 
     /tmp/ccHqUuW5.s:886    .text:0000000000000374 .L0 
     /tmp/ccHqUuW5.s:228    .text:00000000000000cc .L10
     /tmp/ccHqUuW5.s:209    .text:00000000000000b4 .L11
     /tmp/ccHqUuW5.s:337    .text:0000000000000128 .L14
     /tmp/ccHqUuW5.s:379    .text:0000000000000188 .L15
     /tmp/ccHqUuW5.s:365    .text:0000000000000168 .L16
     /tmp/ccHqUuW5.s:616    .text:0000000000000290 .L19
     /tmp/ccHqUuW5.s:711    .text:00000000000002c8 .L18
     /tmp/ccHqUuW5.s:541    .text:0000000000000258 .L30
     /tmp/ccHqUuW5.s:525    .text:000000000000024c .L21
     /tmp/ccHqUuW5.s:739    .text:00000000000002f0 .L31
     /tmp/ccHqUuW5.s:771    .text:0000000000000308 .L32
     /tmp/ccHqUuW5.s:797    .text:000000000000031c .L33
     /tmp/ccHqUuW5.s:861    .text:0000000000000368 .L34
     /tmp/ccHqUuW5.s:695    .text:00000000000002c4 .L23
     /tmp/ccHqUuW5.s:851    .text:0000000000000360 .L35
     /tmp/ccHqUuW5.s:495    .text:0000000000000218 .LEHB0
     /tmp/ccHqUuW5.s:430    .text:00000000000001c0 .LFB25
     /tmp/ccHqUuW5.s:828    .text:0000000000000334 .LEHE0
     /tmp/ccHqUuW5.s:834    .text:0000000000000348 .LEHB1
     /tmp/ccHqUuW5.s:837    .text:0000000000000350 .LEHE1
     /tmp/ccHqUuW5.s:907    .text:0000000000000390 .L28
     /tmp/ccHqUuW5.s:889    .text:0000000000000380 .LEHB2
     /tmp/ccHqUuW5.s:893    .text:0000000000000388 .LEHE2
     /tmp/ccHqUuW5.s:920    .text:00000000000003a4 .LEHB3
     /tmp/ccHqUuW5.s:923    .text:00000000000003ac .LEHE3
     /tmp/ccHqUuW5.s:2585   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccHqUuW5.s:4112   .debug_str:0000000000000471 .LASF144
     /tmp/ccHqUuW5.s:4010   .debug_str:0000000000000173 .LASF145
     /tmp/ccHqUuW5.s:4214   .debug_str:0000000000000786 .LASF146
     /tmp/ccHqUuW5.s:5      .text:0000000000000000 .Ltext0
GAS LISTING /tmp/ccHqUuW5.s 			page 33


     /tmp/ccHqUuW5.s:965    .text:00000000000003ac .Letext0
     /tmp/ccHqUuW5.s:3960   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccHqUuW5.s:4066   .debug_str:0000000000000303 .LASF0
     /tmp/ccHqUuW5.s:4152   .debug_str:000000000000061e .LASF3
     /tmp/ccHqUuW5.s:4090   .debug_str:00000000000003c3 .LASF1
     /tmp/ccHqUuW5.s:4160   .debug_str:000000000000063e .LASF2
     /tmp/ccHqUuW5.s:4168   .debug_str:0000000000000679 .LASF4
     /tmp/ccHqUuW5.s:4078   .debug_str:0000000000000356 .LASF5
     /tmp/ccHqUuW5.s:3968   .debug_str:000000000000001d .LASF6
     /tmp/ccHqUuW5.s:4140   .debug_str:00000000000005d2 .LASF7
     /tmp/ccHqUuW5.s:4132   .debug_str:000000000000058d .LASF8
     /tmp/ccHqUuW5.s:4082   .debug_str:000000000000038a .LASF9
     /tmp/ccHqUuW5.s:4050   .debug_str:000000000000027b .LASF10
     /tmp/ccHqUuW5.s:4054   .debug_str:00000000000002a7 .LASF11
     /tmp/ccHqUuW5.s:4004   .debug_str:0000000000000147 .LASF12
     /tmp/ccHqUuW5.s:4040   .debug_str:000000000000024c .LASF13
     /tmp/ccHqUuW5.s:4012   .debug_str:0000000000000181 .LASF14
     /tmp/ccHqUuW5.s:4002   .debug_str:0000000000000137 .LASF15
     /tmp/ccHqUuW5.s:4194   .debug_str:000000000000071f .LASF16
     /tmp/ccHqUuW5.s:4032   .debug_str:0000000000000206 .LASF17
     /tmp/ccHqUuW5.s:4184   .debug_str:00000000000006d8 .LASF18
     /tmp/ccHqUuW5.s:4238   .debug_str:0000000000000835 .LASF89
     /tmp/ccHqUuW5.s:4150   .debug_str:0000000000000613 .LASF22
     /tmp/ccHqUuW5.s:4094   .debug_str:00000000000003dc .LASF19
     /tmp/ccHqUuW5.s:4036   .debug_str:0000000000000237 .LASF20
     /tmp/ccHqUuW5.s:4250   .debug_str:000000000000087d .LASF21
     /tmp/ccHqUuW5.s:4230   .debug_str:0000000000000804 .LASF23
     /tmp/ccHqUuW5.s:4038   .debug_str:0000000000000240 .LASF24
     /tmp/ccHqUuW5.s:4204   .debug_str:0000000000000746 .LASF25
     /tmp/ccHqUuW5.s:4020   .debug_str:00000000000001c3 .LASF26
     /tmp/ccHqUuW5.s:4118   .debug_str:000000000000052d .LASF27
     /tmp/ccHqUuW5.s:4108   .debug_str:0000000000000443 .LASF29
     /tmp/ccHqUuW5.s:4000   .debug_str:0000000000000126 .LASF28
     /tmp/ccHqUuW5.s:4096   .debug_str:00000000000003e5 .LASF30
     /tmp/ccHqUuW5.s:4074   .debug_str:0000000000000337 .LASF31
     /tmp/ccHqUuW5.s:4014   .debug_str:0000000000000191 .LASF32
     /tmp/ccHqUuW5.s:4254   .debug_str:000000000000089c .LASF33
     /tmp/ccHqUuW5.s:3974   .debug_str:0000000000000042 .LASF35
     /tmp/ccHqUuW5.s:4138   .debug_str:00000000000005c5 .LASF34
     /tmp/ccHqUuW5.s:3978   .debug_str:000000000000006a .LASF36
     /tmp/ccHqUuW5.s:4174   .debug_str:000000000000069a .LASF37
     /tmp/ccHqUuW5.s:4034   .debug_str:000000000000021c .LASF38
     /tmp/ccHqUuW5.s:4068   .debug_str:0000000000000310 .LASF39
     /tmp/ccHqUuW5.s:4246   .debug_str:000000000000085b .LASF40
     /tmp/ccHqUuW5.s:4226   .debug_str:00000000000007e8 .LASF43
     /tmp/ccHqUuW5.s:4220   .debug_str:00000000000007b8 .LASF45
     /tmp/ccHqUuW5.s:4156   .debug_str:000000000000062a .LASF41
     /tmp/ccHqUuW5.s:4128   .debug_str:0000000000000573 .LASF42
     /tmp/ccHqUuW5.s:4144   .debug_str:00000000000005e5 .LASF44
     /tmp/ccHqUuW5.s:4146   .debug_str:00000000000005ec .LASF46
     /tmp/ccHqUuW5.s:4124   .debug_str:0000000000000558 .LASF47
     /tmp/ccHqUuW5.s:4084   .debug_str:000000000000039d .LASF48
     /tmp/ccHqUuW5.s:4248   .debug_str:0000000000000875 .LASF49
     /tmp/ccHqUuW5.s:4210   .debug_str:0000000000000768 .LASF50
     /tmp/ccHqUuW5.s:4122   .debug_str:0000000000000550 .LASF51
     /tmp/ccHqUuW5.s:4126   .debug_str:000000000000055f .LASF52
     /tmp/ccHqUuW5.s:4114   .debug_str:0000000000000513 .LASF53
GAS LISTING /tmp/ccHqUuW5.s 			page 34


     /tmp/ccHqUuW5.s:4148   .debug_str:00000000000005ff .LASF54
     /tmp/ccHqUuW5.s:4272   .debug_str:0000000000000900 .LASF55
     /tmp/ccHqUuW5.s:4072   .debug_str:0000000000000323 .LASF56
     /tmp/ccHqUuW5.s:4190   .debug_str:0000000000000711 .LASF57
     /tmp/ccHqUuW5.s:4170   .debug_str:0000000000000680 .LASF58
     /tmp/ccHqUuW5.s:4172   .debug_str:0000000000000693 .LASF59
     /tmp/ccHqUuW5.s:4006   .debug_str:0000000000000156 .LASF60
     /tmp/ccHqUuW5.s:4030   .debug_str:0000000000000200 .LASF61
     /tmp/ccHqUuW5.s:4062   .debug_str:00000000000002d9 .LASF62
     /tmp/ccHqUuW5.s:4070   .debug_str:000000000000031d .LASF63
     /tmp/ccHqUuW5.s:4024   .debug_str:00000000000001df .LASF64
     /tmp/ccHqUuW5.s:3970   .debug_str:0000000000000024 .LASF65
     /tmp/ccHqUuW5.s:4164   .debug_str:0000000000000658 .LASF66
     /tmp/ccHqUuW5.s:4158   .debug_str:0000000000000633 .LASF67
     /tmp/ccHqUuW5.s:4264   .debug_str:00000000000008c9 .LASF68
     /tmp/ccHqUuW5.s:4240   .debug_str:000000000000083b .LASF69
     /tmp/ccHqUuW5.s:4252   .debug_str:0000000000000886 .LASF70
     /tmp/ccHqUuW5.s:4236   .debug_str:000000000000082b .LASF71
     /tmp/ccHqUuW5.s:4110   .debug_str:000000000000045b .LASF72
     /tmp/ccHqUuW5.s:4058   .debug_str:00000000000002c8 .LASF73
     /tmp/ccHqUuW5.s:4064   .debug_str:00000000000002eb .LASF74
     /tmp/ccHqUuW5.s:4224   .debug_str:00000000000007d9 .LASF75
     /tmp/ccHqUuW5.s:4052   .debug_str:000000000000028b .LASF76
     /tmp/ccHqUuW5.s:4136   .debug_str:00000000000005b0 .LASF77
     /tmp/ccHqUuW5.s:4080   .debug_str:0000000000000368 .LASF78
     /tmp/ccHqUuW5.s:4154   .debug_str:0000000000000623 .LASF79
     /tmp/ccHqUuW5.s:3966   .debug_str:0000000000000015 .LASF80
     /tmp/ccHqUuW5.s:3986   .debug_str:00000000000000cb .LASF81
     /tmp/ccHqUuW5.s:4222   .debug_str:00000000000007cd .LASF82
     /tmp/ccHqUuW5.s:3988   .debug_str:00000000000000da .LASF83
     /tmp/ccHqUuW5.s:4116   .debug_str:000000000000051b .LASF84
     /tmp/ccHqUuW5.s:4056   .debug_str:00000000000002b5 .LASF85
     /tmp/ccHqUuW5.s:4234   .debug_str:0000000000000818 .LASF86
     /tmp/ccHqUuW5.s:3998   .debug_str:0000000000000112 .LASF87
     /tmp/ccHqUuW5.s:4198   .debug_str:0000000000000733 .LASF88
     /tmp/ccHqUuW5.s:4200   .debug_str:0000000000000738 .LASF90
     /tmp/ccHqUuW5.s:3996   .debug_str:000000000000010c .LASF91
     /tmp/ccHqUuW5.s:4180   .debug_str:00000000000006c2 .LASF92
     /tmp/ccHqUuW5.s:4008   .debug_str:0000000000000169 .LASF93
     /tmp/ccHqUuW5.s:3990   .debug_str:00000000000000ed .LASF94
     /tmp/ccHqUuW5.s:4196   .debug_str:000000000000072b .LASF121
     /tmp/ccHqUuW5.s:4060   .debug_str:00000000000002d3 .LASF95
     /tmp/ccHqUuW5.s:4120   .debug_str:0000000000000538 .LASF147
     /tmp/ccHqUuW5.s:4130   .debug_str:0000000000000588 .LASF148
     /tmp/ccHqUuW5.s:4260   .debug_str:00000000000008be .LASF96
     /tmp/ccHqUuW5.s:4208   .debug_str:0000000000000758 .LASF107
     /tmp/ccHqUuW5.s:4026   .debug_str:00000000000001f1 .LASF97
     /tmp/ccHqUuW5.s:3972   .debug_str:000000000000002f .LASF98
     /tmp/ccHqUuW5.s:4092   .debug_str:00000000000003d6 .LASF99
     /tmp/ccHqUuW5.s:4134   .debug_str:00000000000005a0 .LASF100
     /tmp/ccHqUuW5.s:4202   .debug_str:000000000000073e .LASF104
     /tmp/ccHqUuW5.s:4182   .debug_str:00000000000006ca .LASF101
     /tmp/ccHqUuW5.s:4142   .debug_str:00000000000005d9 .LASF102
     /tmp/ccHqUuW5.s:4022   .debug_str:00000000000001cf .LASF103
     /tmp/ccHqUuW5.s:4176   .debug_str:00000000000006a8 .LASF105
     /tmp/ccHqUuW5.s:4106   .debug_str:0000000000000436 .LASF111
     /tmp/ccHqUuW5.s:4098   .debug_str:0000000000000403 .LASF113
GAS LISTING /tmp/ccHqUuW5.s 			page 35


     /tmp/ccHqUuW5.s:4266   .debug_str:00000000000008e1 .LASF106
     /tmp/ccHqUuW5.s:4044   .debug_str:0000000000000263 .LASF108
     /tmp/ccHqUuW5.s:3964   .debug_str:0000000000000005 .LASF109
     /tmp/ccHqUuW5.s:4076   .debug_str:0000000000000349 .LASF110
     /tmp/ccHqUuW5.s:4178   .debug_str:00000000000006b9 .LASF112
     /tmp/ccHqUuW5.s:4228   .debug_str:00000000000007f1 .LASF114
     /tmp/ccHqUuW5.s:4166   .debug_str:0000000000000670 .LASF115
     /tmp/ccHqUuW5.s:4188   .debug_str:00000000000006f5 .LASF116
     /tmp/ccHqUuW5.s:4212   .debug_str:000000000000077c .LASF117
     /tmp/ccHqUuW5.s:4016   .debug_str:00000000000001b0 .LASF149
     /tmp/ccHqUuW5.s:3982   .debug_str:000000000000009c .LASF150
     /tmp/ccHqUuW5.s:4270   .debug_str:00000000000008f9 .LASF151
     /tmp/ccHqUuW5.s:3994   .debug_str:00000000000000fb .LASF152
     /tmp/ccHqUuW5.s:3962   .debug_str:0000000000000000 .LASF118
     /tmp/ccHqUuW5.s:4262   .debug_str:00000000000008c4 .LASF119
     /tmp/ccHqUuW5.s:4028   .debug_str:00000000000001fa .LASF120
     /tmp/ccHqUuW5.s:4218   .debug_str:00000000000007b0 .LASF122
     /tmp/ccHqUuW5.s:4100   .debug_str:000000000000041b .LASF123
     /tmp/ccHqUuW5.s:931    .text:00000000000003ac .LFE25
     /tmp/ccHqUuW5.s:3585   .debug_loc:0000000000000000 .LLST12
     /tmp/ccHqUuW5.s:4186   .debug_str:00000000000006ee .LASF124
     /tmp/ccHqUuW5.s:3608   .debug_loc:000000000000006f .LLST13
     /tmp/ccHqUuW5.s:3940   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccHqUuW5.s:4104   .debug_str:000000000000042c .LASF125
     /tmp/ccHqUuW5.s:3619   .debug_loc:00000000000000a5 .LLST14
     /tmp/ccHqUuW5.s:4206   .debug_str:0000000000000753 .LASF126
     /tmp/ccHqUuW5.s:3642   .debug_loc:0000000000000114 .LLST15
     /tmp/ccHqUuW5.s:545    .text:0000000000000258 .LBB79
     /tmp/ccHqUuW5.s:619    .text:0000000000000290 .LBE79
     /tmp/ccHqUuW5.s:3653   .debug_loc:000000000000014a .LLST17
     /tmp/ccHqUuW5.s:4242   .debug_str:0000000000000845 .LASF127
     /tmp/ccHqUuW5.s:3660   .debug_loc:000000000000016d .LLST18
     /tmp/ccHqUuW5.s:547    .text:0000000000000258 .LBB80
     /tmp/ccHqUuW5.s:563    .text:0000000000000264 .LBE80
     /tmp/ccHqUuW5.s:565    .text:0000000000000264 .LBB82
     /tmp/ccHqUuW5.s:581    .text:0000000000000270 .LBE82
     /tmp/ccHqUuW5.s:591    .text:0000000000000284 .LBB84
     /tmp/ccHqUuW5.s:602    .text:0000000000000288 .LBE84
     /tmp/ccHqUuW5.s:3667   .debug_loc:0000000000000190 .LLST19
     /tmp/ccHqUuW5.s:604    .text:0000000000000288 .LBB86
     /tmp/ccHqUuW5.s:618    .text:0000000000000290 .LBE86
     /tmp/ccHqUuW5.s:3674   .debug_loc:00000000000001b3 .LLST20
     /tmp/ccHqUuW5.s:589    .text:0000000000000284 .LVL39
     /tmp/ccHqUuW5.s:744    .text:00000000000002f0 .LBB110
     /tmp/ccHqUuW5.s:768    .text:0000000000000304 .LBE110
     /tmp/ccHqUuW5.s:4088   .debug_str:00000000000003be .LASF128
     /tmp/ccHqUuW5.s:3681   .debug_loc:00000000000001d6 .LLST30
     /tmp/ccHqUuW5.s:4244   .debug_str:000000000000084d .LASF129
     /tmp/ccHqUuW5.s:3696   .debug_loc:0000000000000210 .LLST31
     /tmp/ccHqUuW5.s:760    .text:0000000000000300 .LVL51
     /tmp/ccHqUuW5.s:773    .text:0000000000000308 .LBB106
     /tmp/ccHqUuW5.s:794    .text:0000000000000318 .LBE106
     /tmp/ccHqUuW5.s:3992   .debug_str:00000000000000f6 .LASF130
     /tmp/ccHqUuW5.s:3703   .debug_loc:0000000000000233 .LLST28
     /tmp/ccHqUuW5.s:3984   .debug_str:00000000000000c4 .LASF131
     /tmp/ccHqUuW5.s:3715   .debug_loc:000000000000026a .LLST29
     /tmp/ccHqUuW5.s:786    .text:0000000000000314 .LVL54
GAS LISTING /tmp/ccHqUuW5.s 			page 36


     /tmp/ccHqUuW5.s:4086   .debug_str:00000000000003b0 .LASF132
     /tmp/ccHqUuW5.s:3722   .debug_loc:000000000000028d .LLST24
     /tmp/ccHqUuW5.s:3733   .debug_loc:00000000000002c3 .LLST25
     /tmp/ccHqUuW5.s:3976   .debug_str:000000000000005d .LASF133
     /tmp/ccHqUuW5.s:3744   .debug_loc:00000000000002f9 .LLST26
     /tmp/ccHqUuW5.s:4256   .debug_str:00000000000008a8 .LASF134
     /tmp/ccHqUuW5.s:3755   .debug_loc:000000000000032f .LLST27
     /tmp/ccHqUuW5.s:827    .text:0000000000000334 .LVL59
     /tmp/ccHqUuW5.s:836    .text:0000000000000350 .LVL60
     /tmp/ccHqUuW5.s:918    .text:00000000000003a0 .LVL67
     /tmp/ccHqUuW5.s:864    .text:0000000000000368 .LBB97
     /tmp/ccHqUuW5.s:912    .text:0000000000000394 .LBE97
     /tmp/ccHqUuW5.s:3762   .debug_loc:0000000000000352 .LLST22
     /tmp/ccHqUuW5.s:866    .text:0000000000000368 .LBB98
     /tmp/ccHqUuW5.s:883    .text:0000000000000374 .LBE98
     /tmp/ccHqUuW5.s:895    .text:0000000000000388 .LBB100
     /tmp/ccHqUuW5.s:911    .text:0000000000000394 .LBE100
     /tmp/ccHqUuW5.s:3769   .debug_loc:0000000000000375 .LLST23
     /tmp/ccHqUuW5.s:892    .text:0000000000000388 .LVL64
     /tmp/ccHqUuW5.s:513    .text:0000000000000244 .LBB77
     /tmp/ccHqUuW5.s:521    .text:0000000000000248 .LBE77
     /tmp/ccHqUuW5.s:3776   .debug_loc:0000000000000398 .LLST16
     /tmp/ccHqUuW5.s:528    .text:000000000000024c .LBB88
     /tmp/ccHqUuW5.s:543    .text:0000000000000258 .LBE88
     /tmp/ccHqUuW5.s:3783   .debug_loc:00000000000003bb .LLST21
     /tmp/ccHqUuW5.s:632    .text:0000000000000294 .LBB91
     /tmp/ccHqUuW5.s:649    .text:00000000000002a0 .LBE91
     /tmp/ccHqUuW5.s:701    .text:00000000000002c4 .LBB115
     /tmp/ccHqUuW5.s:713    .text:00000000000002c8 .LBE115
     /tmp/ccHqUuW5.s:3791   .debug_loc:00000000000003df .LLST32
     /tmp/ccHqUuW5.s:497    .text:0000000000000220 .LVL32
     /tmp/ccHqUuW5.s:465    .text:00000000000001ec .LBB72
     /tmp/ccHqUuW5.s:481    .text:00000000000001f8 .LBE72
     /tmp/ccHqUuW5.s:922    .text:00000000000003ac .LVL68
     /tmp/ccHqUuW5.s:275    .text:00000000000000f4 .LFB24
     /tmp/ccHqUuW5.s:419    .text:00000000000001c0 .LFE24
     /tmp/ccHqUuW5.s:3798   .debug_loc:0000000000000402 .LLST6
     /tmp/ccHqUuW5.s:3812   .debug_loc:000000000000043b .LLST7
     /tmp/ccHqUuW5.s:4216   .debug_str:00000000000007a9 .LASF135
     /tmp/ccHqUuW5.s:3819   .debug_loc:000000000000045e .LLST8
     /tmp/ccHqUuW5.s:3841   .debug_loc:00000000000004bd .LLST9
     /tmp/ccHqUuW5.s:292    .text:000000000000010c .LBB66
     /tmp/ccHqUuW5.s:308    .text:0000000000000118 .LBE66
     /tmp/ccHqUuW5.s:310    .text:0000000000000118 .LBB68
     /tmp/ccHqUuW5.s:322    .text:0000000000000120 .LBE68
     /tmp/ccHqUuW5.s:3863   .debug_loc:00000000000004fe .LLST10
     /tmp/ccHqUuW5.s:393    .text:00000000000001a4 .LBB70
     /tmp/ccHqUuW5.s:404    .text:00000000000001a8 .LBE70
     /tmp/ccHqUuW5.s:3871   .debug_loc:0000000000000522 .LLST11
     /tmp/ccHqUuW5.s:377    .text:0000000000000184 .LVL25
     /tmp/ccHqUuW5.s:384    .text:0000000000000198 .LVL26
     /tmp/ccHqUuW5.s:162    .text:0000000000000084 .LFB23
     /tmp/ccHqUuW5.s:264    .text:00000000000000f4 .LFE23
     /tmp/ccHqUuW5.s:4192   .debug_str:0000000000000718 .LASF136
     /tmp/ccHqUuW5.s:3878   .debug_loc:0000000000000545 .LLST2
     /tmp/ccHqUuW5.s:3889   .debug_loc:000000000000057b .LLST3
     /tmp/ccHqUuW5.s:180    .text:00000000000000a0 .LBB60
GAS LISTING /tmp/ccHqUuW5.s 			page 37


     /tmp/ccHqUuW5.s:196    .text:00000000000000ac .LBE60
     /tmp/ccHqUuW5.s:198    .text:00000000000000ac .LBB62
     /tmp/ccHqUuW5.s:211    .text:00000000000000b4 .LBE62
     /tmp/ccHqUuW5.s:3896   .debug_loc:000000000000059e .LLST4
     /tmp/ccHqUuW5.s:237    .text:00000000000000d8 .LBB64
     /tmp/ccHqUuW5.s:248    .text:00000000000000dc .LBE64
     /tmp/ccHqUuW5.s:3904   .debug_loc:00000000000005c2 .LLST5
     /tmp/ccHqUuW5.s:221    .text:00000000000000c4 .LVL9
     /tmp/ccHqUuW5.s:127    .text:0000000000000064 .LFB22
     /tmp/ccHqUuW5.s:156    .text:0000000000000084 .LFE22
     /tmp/ccHqUuW5.s:89     .text:0000000000000044 .LFB21
     /tmp/ccHqUuW5.s:121    .text:0000000000000064 .LFE21
     /tmp/ccHqUuW5.s:100    .text:0000000000000050 .LBB58
     /tmp/ccHqUuW5.s:112    .text:0000000000000058 .LBE58
     /tmp/ccHqUuW5.s:3911   .debug_loc:00000000000005e5 .LLST1
     /tmp/ccHqUuW5.s:51     .text:0000000000000024 .LFB20
     /tmp/ccHqUuW5.s:83     .text:0000000000000044 .LFE20
     /tmp/ccHqUuW5.s:62     .text:0000000000000030 .LBB56
     /tmp/ccHqUuW5.s:74     .text:0000000000000038 .LBE56
     /tmp/ccHqUuW5.s:3919   .debug_loc:0000000000000609 .LLST0
     /tmp/ccHqUuW5.s:10     .text:0000000000000000 .LFB19
     /tmp/ccHqUuW5.s:45     .text:0000000000000024 .LFE19
     /tmp/ccHqUuW5.s:24     .text:0000000000000014 .LBB54
     /tmp/ccHqUuW5.s:36     .text:0000000000000018 .LBE54
     /tmp/ccHqUuW5.s:4018   .debug_str:00000000000001be .LASF153
     /tmp/ccHqUuW5.s:4232   .debug_str:0000000000000813 .LASF137
     /tmp/ccHqUuW5.s:4048   .debug_str:0000000000000275 .LASF138
     /tmp/ccHqUuW5.s:4162   .debug_str:000000000000064c .LASF139
     /tmp/ccHqUuW5.s:4042   .debug_str:000000000000025b .LASF141
     /tmp/ccHqUuW5.s:4268   .debug_str:00000000000008ee .LASF140
     /tmp/ccHqUuW5.s:4046   .debug_str:000000000000026f .LASF142
     /tmp/ccHqUuW5.s:4258   .debug_str:00000000000008af .LASF154
     /tmp/ccHqUuW5.s:3980   .debug_str:0000000000000084 .LASF155
     /tmp/ccHqUuW5.s:4102   .debug_str:0000000000000425 .LASF143
     /tmp/ccHqUuW5.s:462    .text:00000000000001ec .LVL30
     /tmp/ccHqUuW5.s:524    .text:000000000000024c .LVL35
     /tmp/ccHqUuW5.s:540    .text:0000000000000258 .LVL36
     /tmp/ccHqUuW5.s:579    .text:0000000000000270 .LVL38
     /tmp/ccHqUuW5.s:615    .text:0000000000000290 .LVL41
     /tmp/ccHqUuW5.s:694    .text:00000000000002c4 .LVL46
     /tmp/ccHqUuW5.s:738    .text:00000000000002f0 .LVL48
     /tmp/ccHqUuW5.s:881    .text:0000000000000374 .LVL63
     /tmp/ccHqUuW5.s:906    .text:0000000000000390 .LVL65
     /tmp/ccHqUuW5.s:479    .text:00000000000001f8 .LVL31
     /tmp/ccHqUuW5.s:641    .text:0000000000000298 .LVL43
     /tmp/ccHqUuW5.s:629    .text:0000000000000294 .LVL42
     /tmp/ccHqUuW5.s:770    .text:0000000000000308 .LVL52
     /tmp/ccHqUuW5.s:796    .text:000000000000031c .LVL55
     /tmp/ccHqUuW5.s:860    .text:0000000000000368 .LVL61
     /tmp/ccHqUuW5.s:875    .text:000000000000036c .LVL62
     /tmp/ccHqUuW5.s:647    .text:00000000000002a0 .LVL44
     /tmp/ccHqUuW5.s:709    .text:00000000000002c8 .LVL47
     /tmp/ccHqUuW5.s:909    .text:0000000000000394 .LVL66
     /tmp/ccHqUuW5.s:561    .text:0000000000000264 .LVL37
     /tmp/ccHqUuW5.s:599    .text:0000000000000288 .LVL40
     /tmp/ccHqUuW5.s:752    .text:00000000000002f4 .LVL49
     /tmp/ccHqUuW5.s:758    .text:00000000000002f8 .LVL50
GAS LISTING /tmp/ccHqUuW5.s 			page 38


     /tmp/ccHqUuW5.s:781    .text:000000000000030c .LVL53
     /tmp/ccHqUuW5.s:815    .text:0000000000000324 .LVL57
     /tmp/ccHqUuW5.s:821    .text:0000000000000328 .LVL58
     /tmp/ccHqUuW5.s:809    .text:0000000000000320 .LVL56
     /tmp/ccHqUuW5.s:511    .text:0000000000000244 .LVL33
     /tmp/ccHqUuW5.s:519    .text:0000000000000248 .LVL34
     /tmp/ccHqUuW5.s:278    .text:00000000000000f4 .LVL15
     /tmp/ccHqUuW5.s:332    .text:0000000000000124 .LVL18
     /tmp/ccHqUuW5.s:306    .text:0000000000000118 .LVL16
     /tmp/ccHqUuW5.s:388    .text:000000000000019c .LVL27
     /tmp/ccHqUuW5.s:336    .text:0000000000000128 .LVL19
     /tmp/ccHqUuW5.s:343    .text:0000000000000130 .LVL20
     /tmp/ccHqUuW5.s:354    .text:0000000000000154 .LVL21
     /tmp/ccHqUuW5.s:364    .text:0000000000000168 .LVL23
     /tmp/ccHqUuW5.s:369    .text:000000000000016c .LVL24
     /tmp/ccHqUuW5.s:360    .text:0000000000000160 .LVL22
     /tmp/ccHqUuW5.s:319    .text:0000000000000120 .LVL17
     /tmp/ccHqUuW5.s:392    .text:00000000000001a4 .LVL28
     /tmp/ccHqUuW5.s:401    .text:00000000000001a8 .LVL29
     /tmp/ccHqUuW5.s:165    .text:0000000000000084 .LVL6
     /tmp/ccHqUuW5.s:207    .text:00000000000000b4 .LVL8
     /tmp/ccHqUuW5.s:257    .text:00000000000000e8 .LVL14
     /tmp/ccHqUuW5.s:194    .text:00000000000000ac .LVL7
     /tmp/ccHqUuW5.s:232    .text:00000000000000d0 .LVL11
     /tmp/ccHqUuW5.s:236    .text:00000000000000d8 .LVL12
     /tmp/ccHqUuW5.s:245    .text:00000000000000dc .LVL13
     /tmp/ccHqUuW5.s:99     .text:0000000000000050 .LVL4
     /tmp/ccHqUuW5.s:109    .text:0000000000000058 .LVL5
     /tmp/ccHqUuW5.s:61     .text:0000000000000030 .LVL2
     /tmp/ccHqUuW5.s:71     .text:0000000000000038 .LVL3
     /tmp/ccHqUuW5.s:970    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccHqUuW5.s:490    .text:0000000000000210 .LBB75
     /tmp/ccHqUuW5.s:659    .text:00000000000002ac .LBE75
     /tmp/ccHqUuW5.s:663    .text:00000000000002ac .LBB118
     /tmp/ccHqUuW5.s:670    .text:00000000000002b4 .LBE118
     /tmp/ccHqUuW5.s:674    .text:00000000000002b4 .LBB119
     /tmp/ccHqUuW5.s:683    .text:00000000000002bc .LBE119
     /tmp/ccHqUuW5.s:687    .text:00000000000002bc .LBB120
     /tmp/ccHqUuW5.s:714    .text:00000000000002c8 .LBE120
     /tmp/ccHqUuW5.s:742    .text:00000000000002f0 .LBB121
     /tmp/ccHqUuW5.s:928    .text:00000000000003ac .LBE121
     /tmp/ccHqUuW5.s:799    .text:000000000000031c .LBB102
     /tmp/ccHqUuW5.s:862    .text:0000000000000368 .LBE102
     /tmp/ccHqUuW5.s:914    .text:0000000000000394 .LBB104
     /tmp/ccHqUuW5.s:924    .text:00000000000003ac .LBE104
     /tmp/ccHqUuW5.s:934    .gcc_except_table:0000000000000000 .LLSDA25

UNDEFINED SYMBOLS
_ZN5Riscv14supervisorTrapEv
__putc
_ZN3PCB16timeSliceCounterE
_ZN3PCB7runningE
_ZN3PCB8dispatchEv
_Z7kmallocm
_Z5kfreePv
_ZN3PCBnwEm
_ZN3PCBC1EPFvPvES0_S0_m
GAS LISTING /tmp/ccHqUuW5.s 			page 39


_ZN3PCBdlEPv
_Unwind_Resume
__gxx_personality_v0
