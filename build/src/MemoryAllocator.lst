GAS LISTING /tmp/ccLBTu6L.s 			page 1


   1              		.file	"MemoryAllocator.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN15MemoryAllocator10initMemoryEv
   9              	_ZN15MemoryAllocator10initMemoryEv:
  10              	.LFB2:
  11              		.file 1 "src/MemoryAllocator.cpp"
   1:src/MemoryAllocator.cpp **** //
   2:src/MemoryAllocator.cpp **** // Created by os on 4/27/22.
   3:src/MemoryAllocator.cpp **** //
   4:src/MemoryAllocator.cpp **** 
   5:src/MemoryAllocator.cpp **** #include "../h/MemoryAllocator.h"
   6:src/MemoryAllocator.cpp **** 
   7:src/MemoryAllocator.cpp **** MemoryAllocator::AllocatedFragment* MemoryAllocator::headAllocated = 0;
   8:src/MemoryAllocator.cpp **** MemoryAllocator::FreeFragment* MemoryAllocator::headFree = 0;
   9:src/MemoryAllocator.cpp **** int MemoryAllocator::memoryInitiliaized = 0;
  10:src/MemoryAllocator.cpp **** 
  11:src/MemoryAllocator.cpp **** void *MemoryAllocator::mem_alloc(size_t size) {
  12:src/MemoryAllocator.cpp ****     return tryToAllocateFragment(size);
  13:src/MemoryAllocator.cpp **** }
  14:src/MemoryAllocator.cpp **** 
  15:src/MemoryAllocator.cpp **** uint64 MemoryAllocator::mem_free(void * addr) {
  16:src/MemoryAllocator.cpp ****     return tryToFreeSegment(addr);
  17:src/MemoryAllocator.cpp **** }
  18:src/MemoryAllocator.cpp **** 
  19:src/MemoryAllocator.cpp **** void MemoryAllocator::initMemory()
  20:src/MemoryAllocator.cpp **** {
  12              		.loc 1 20 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  21:src/MemoryAllocator.cpp ****     if(memoryInitiliaized == 1)
  20              		.loc 1 21 5
  21              		.loc 1 21 27 is_stmt 0
  22 000c 17070000 		lw	a4,.LANCHOR0
  22      03270700 
  23              		.loc 1 21 5
  24 0014 93071000 		li	a5,1
  25 0018 6302F704 		beq	a4,a5,.L1
  22:src/MemoryAllocator.cpp ****         return;
  23:src/MemoryAllocator.cpp ****     memoryInitiliaized = 1;
  26              		.loc 1 23 5 is_stmt 1
  27              		.loc 1 23 24 is_stmt 0
  28 001c 97070000 		lla	a5,.LANCHOR0
  28      93870700 
  29 0024 13071000 		li	a4,1
  30 0028 23A0E700 		sw	a4,0(a5)
  24:src/MemoryAllocator.cpp ****     headAllocated = 0;
  31              		.loc 1 24 5 is_stmt 1
  32              		.loc 1 24 19 is_stmt 0
GAS LISTING /tmp/ccLBTu6L.s 			page 2


  33 002c 23B40700 		sd	zero,8(a5)
  25:src/MemoryAllocator.cpp ****     headFree = (FreeFragment*)HEAP_START_ADDR;
  34              		.loc 1 25 5 is_stmt 1
  35              		.loc 1 25 14 is_stmt 0
  36 0030 17070000 		la	a4,HEAP_START_ADDR
  36      03370700 
  37 0038 03370700 		ld	a4,0(a4)
  38 003c 23B8E700 		sd	a4,16(a5)
  26:src/MemoryAllocator.cpp ****     headFree->next = 0;
  39              		.loc 1 26 5 is_stmt 1
  40              		.loc 1 26 20 is_stmt 0
  41 0040 23340700 		sd	zero,8(a4)
  27:src/MemoryAllocator.cpp ****     headFree->size = (size_t)((size_t)HEAP_END_ADDR - (size_t)HEAP_START_ADDR + 1);
  42              		.loc 1 27 5 is_stmt 1
  43              		.loc 1 27 53 is_stmt 0
  44 0044 97070000 		la	a5,HEAP_END_ADDR
  44      83B70700 
  45 004c 83B70700 		ld	a5,0(a5)
  46 0050 B387E740 		sub	a5,a5,a4
  47              		.loc 1 27 79
  48 0054 93871700 		addi	a5,a5,1
  49              		.loc 1 27 20
  50 0058 2330F700 		sd	a5,0(a4)
  51              	.L1:
  28:src/MemoryAllocator.cpp **** }
  52              		.loc 1 28 1
  53 005c 03348100 		ld	s0,8(sp)
  54              		.cfi_restore 8
  55              		.cfi_def_cfa 2, 16
  56 0060 13010101 		addi	sp,sp,16
  57              		.cfi_def_cfa_offset 0
  58 0064 67800000 		jr	ra
  59              		.cfi_endproc
  60              	.LFE2:
  62              		.align	2
  63              		.globl	_ZN15MemoryAllocator26insertNewAllocatedFragmentEPvm
  65              	_ZN15MemoryAllocator26insertNewAllocatedFragmentEPvm:
  66              	.LFB3:
  29:src/MemoryAllocator.cpp **** 
  30:src/MemoryAllocator.cpp **** void MemoryAllocator::insertNewAllocatedFragment(void* addr, size_t size) {
  67              		.loc 1 30 75 is_stmt 1
  68              		.cfi_startproc
  69              	.LVL0:
  70 0068 130101FE 		addi	sp,sp,-32
  71              		.cfi_def_cfa_offset 32
  72 006c 233C1100 		sd	ra,24(sp)
  73 0070 23388100 		sd	s0,16(sp)
  74 0074 23349100 		sd	s1,8(sp)
  75 0078 23302101 		sd	s2,0(sp)
  76              		.cfi_offset 1, -8
  77              		.cfi_offset 8, -16
  78              		.cfi_offset 9, -24
  79              		.cfi_offset 18, -32
  80 007c 13040102 		addi	s0,sp,32
  81              		.cfi_def_cfa 8, 0
  82 0080 93040500 		mv	s1,a0
  83 0084 13890500 		mv	s2,a1
GAS LISTING /tmp/ccLBTu6L.s 			page 3


  31:src/MemoryAllocator.cpp **** 
  32:src/MemoryAllocator.cpp ****     initMemory();
  84              		.loc 1 32 5
  85              		.loc 1 32 15 is_stmt 0
  86 0088 97000000 		call	_ZN15MemoryAllocator10initMemoryEv
  86      E7800000 
  87              	.LVL1:
  33:src/MemoryAllocator.cpp ****     AllocatedFragment* prev = 0;
  88              		.loc 1 33 5 is_stmt 1
  34:src/MemoryAllocator.cpp ****     AllocatedFragment* after =  headAllocated;
  89              		.loc 1 34 5
  90              		.loc 1 34 24 is_stmt 0
  91 0090 97070000 		ld	a5,.LANCHOR0+8
  91      83B70700 
  92              	.LVL2:
  33:src/MemoryAllocator.cpp ****     AllocatedFragment* prev = 0;
  93              		.loc 1 33 24
  94 0098 13070000 		li	a4,0
  95              	.LVL3:
  96              	.L6:
  35:src/MemoryAllocator.cpp ****     while(after != 0) {
  97              		.loc 1 35 5 is_stmt 1
  98              		.loc 1 35 17
  99 009c 638A0700 		beqz	a5,.L5
  36:src/MemoryAllocator.cpp ****         if((void*)after > addr)
 100              		.loc 1 36 9
 101 00a0 63E8F400 		bgtu	a5,s1,.L5
  37:src/MemoryAllocator.cpp ****             break;
  38:src/MemoryAllocator.cpp **** 
  39:src/MemoryAllocator.cpp ****         prev = after;
 102              		.loc 1 39 9
 103              	.LVL4:
  40:src/MemoryAllocator.cpp ****         after = after->next;
 104              		.loc 1 40 9
  39:src/MemoryAllocator.cpp ****         after = after->next;
 105              		.loc 1 39 14 is_stmt 0
 106 00a4 13870700 		mv	a4,a5
 107              		.loc 1 40 15
 108 00a8 83B78700 		ld	a5,8(a5)
 109              	.LVL5:
  35:src/MemoryAllocator.cpp ****         if((void*)after > addr)
 110              		.loc 1 35 5
 111 00ac 6FF01FFF 		j	.L6
 112              	.L5:
  41:src/MemoryAllocator.cpp ****     }
  42:src/MemoryAllocator.cpp **** 
  43:src/MemoryAllocator.cpp ****     AllocatedFragment* newAllocated = (AllocatedFragment*)addr;
 113              		.loc 1 43 5 is_stmt 1
 114              	.LVL6:
  44:src/MemoryAllocator.cpp ****     newAllocated->next = 0;
 115              		.loc 1 44 5
 116              		.loc 1 44 24 is_stmt 0
 117 00b0 23B40400 		sd	zero,8(s1)
  45:src/MemoryAllocator.cpp ****     newAllocated->size = size;
 118              		.loc 1 45 5 is_stmt 1
 119              		.loc 1 45 24 is_stmt 0
 120 00b4 23B02401 		sd	s2,0(s1)
GAS LISTING /tmp/ccLBTu6L.s 			page 4


  46:src/MemoryAllocator.cpp ****     if(after == 0) {
 121              		.loc 1 46 5 is_stmt 1
 122 00b8 63840702 		beqz	a5,.L12
  47:src/MemoryAllocator.cpp ****         if(prev == 0)
  48:src/MemoryAllocator.cpp ****             headAllocated = newAllocated;
  49:src/MemoryAllocator.cpp ****         else
  50:src/MemoryAllocator.cpp ****             prev->next = newAllocated;
  51:src/MemoryAllocator.cpp ****     }
  52:src/MemoryAllocator.cpp ****     else {
  53:src/MemoryAllocator.cpp ****         if(prev == 0) {
 123              		.loc 1 53 9
 124 00bc 630E0702 		beqz	a4,.L13
  54:src/MemoryAllocator.cpp ****             newAllocated->next = headAllocated;
  55:src/MemoryAllocator.cpp ****             headAllocated = newAllocated;
  56:src/MemoryAllocator.cpp ****         }
  57:src/MemoryAllocator.cpp ****         else {
  58:src/MemoryAllocator.cpp ****             newAllocated->next = after;
 125              		.loc 1 58 13
 126              		.loc 1 58 32 is_stmt 0
 127 00c0 23B4F400 		sd	a5,8(s1)
  59:src/MemoryAllocator.cpp ****             prev->next = newAllocated;
 128              		.loc 1 59 13 is_stmt 1
 129              		.loc 1 59 24 is_stmt 0
 130 00c4 23349700 		sd	s1,8(a4)
 131              	.LVL7:
 132              	.L4:
  60:src/MemoryAllocator.cpp ****         }
  61:src/MemoryAllocator.cpp ****     }
  62:src/MemoryAllocator.cpp **** }
 133              		.loc 1 62 1
 134 00c8 83308101 		ld	ra,24(sp)
 135              		.cfi_remember_state
 136              		.cfi_restore 1
 137 00cc 03340101 		ld	s0,16(sp)
 138              		.cfi_restore 8
 139              		.cfi_def_cfa 2, 32
 140 00d0 83348100 		ld	s1,8(sp)
 141              		.cfi_restore 9
 142              	.LVL8:
 143 00d4 03390100 		ld	s2,0(sp)
 144              		.cfi_restore 18
 145              	.LVL9:
 146 00d8 13010102 		addi	sp,sp,32
 147              		.cfi_def_cfa_offset 0
 148 00dc 67800000 		jr	ra
 149              	.LVL10:
 150              	.L12:
 151              		.cfi_restore_state
  47:src/MemoryAllocator.cpp ****             headAllocated = newAllocated;
 152              		.loc 1 47 9 is_stmt 1
 153 00e0 63060700 		beqz	a4,.L14
  50:src/MemoryAllocator.cpp ****     }
 154              		.loc 1 50 13
  50:src/MemoryAllocator.cpp ****     }
 155              		.loc 1 50 24 is_stmt 0
 156 00e4 23349700 		sd	s1,8(a4)
 157 00e8 6FF01FFE 		j	.L4
GAS LISTING /tmp/ccLBTu6L.s 			page 5


 158              	.L14:
  48:src/MemoryAllocator.cpp ****         else
 159              		.loc 1 48 13 is_stmt 1
  48:src/MemoryAllocator.cpp ****         else
 160              		.loc 1 48 27 is_stmt 0
 161 00ec 97070000 		sd	s1,.LANCHOR0+8,a5
 161      23B09700 
 162              	.LVL11:
 163 00f4 6FF05FFD 		j	.L4
 164              	.LVL12:
 165              	.L13:
  54:src/MemoryAllocator.cpp ****             headAllocated = newAllocated;
 166              		.loc 1 54 13 is_stmt 1
  54:src/MemoryAllocator.cpp ****             headAllocated = newAllocated;
 167              		.loc 1 54 32 is_stmt 0
 168 00f8 97070000 		lla	a5,.LANCHOR0
 168      93870700 
 169              	.LVL13:
 170 0100 03B78700 		ld	a4,8(a5)
 171              	.LVL14:
 172 0104 23B4E400 		sd	a4,8(s1)
  55:src/MemoryAllocator.cpp ****         }
 173              		.loc 1 55 13 is_stmt 1
  55:src/MemoryAllocator.cpp ****         }
 174              		.loc 1 55 27 is_stmt 0
 175 0108 23B49700 		sd	s1,8(a5)
 176 010c 6FF0DFFB 		j	.L4
 177              		.cfi_endproc
 178              	.LFE3:
 180              		.align	2
 181              		.globl	_ZN15MemoryAllocator21tryToAllocateFragmentEm
 183              	_ZN15MemoryAllocator21tryToAllocateFragmentEm:
 184              	.LFB4:
  63:src/MemoryAllocator.cpp **** 
  64:src/MemoryAllocator.cpp **** void* MemoryAllocator::tryToAllocateFragment(size_t size) {
 185              		.loc 1 64 59 is_stmt 1
 186              		.cfi_startproc
 187              	.LVL15:
 188 0110 130101FE 		addi	sp,sp,-32
 189              		.cfi_def_cfa_offset 32
 190 0114 233C1100 		sd	ra,24(sp)
 191 0118 23388100 		sd	s0,16(sp)
 192 011c 23349100 		sd	s1,8(sp)
 193 0120 23302101 		sd	s2,0(sp)
 194              		.cfi_offset 1, -8
 195              		.cfi_offset 8, -16
 196              		.cfi_offset 9, -24
 197              		.cfi_offset 18, -32
 198 0124 13040102 		addi	s0,sp,32
 199              		.cfi_def_cfa 8, 0
 200 0128 13090500 		mv	s2,a0
  65:src/MemoryAllocator.cpp ****     initMemory();
 201              		.loc 1 65 5
 202              		.loc 1 65 15 is_stmt 0
 203 012c 97000000 		call	_ZN15MemoryAllocator10initMemoryEv
 203      E7800000 
 204              	.LVL16:
GAS LISTING /tmp/ccLBTu6L.s 			page 6


  66:src/MemoryAllocator.cpp ****     FreeFragment* prev = 0;
 205              		.loc 1 66 5 is_stmt 1
  67:src/MemoryAllocator.cpp ****     FreeFragment* curr = headFree;
 206              		.loc 1 67 5
 207              		.loc 1 67 19 is_stmt 0
 208 0134 97040000 		ld	s1,.LANCHOR0+16
 208      83B40400 
 209              	.LVL17:
  68:src/MemoryAllocator.cpp ****     uint64 newSize = size + sizeof(AllocatedFragment);
 210              		.loc 1 68 5 is_stmt 1
 211              		.loc 1 68 12 is_stmt 0
 212 013c 93060901 		addi	a3,s2,16
 213              	.LVL18:
  66:src/MemoryAllocator.cpp ****     FreeFragment* prev = 0;
 214              		.loc 1 66 19
 215 0140 13070000 		li	a4,0
 216 0144 6F008008 		j	.L24
 217              	.LVL19:
 218              	.L26:
 219              	.LBB2:
 220              	.LBB3:
 221              	.LBB4:
 222              	.LBB5:
 223              	.LBB6:
  69:src/MemoryAllocator.cpp ****     while(curr != 0) {
  70:src/MemoryAllocator.cpp **** 
  71:src/MemoryAllocator.cpp ****         if(curr->size >= newSize) {
  72:src/MemoryAllocator.cpp **** 
  73:src/MemoryAllocator.cpp ****             void* oldAddr = curr;
  74:src/MemoryAllocator.cpp ****             void* newAddr = ((char*)curr + newSize);
  75:src/MemoryAllocator.cpp ****             if(newAddr <= HEAP_END_ADDR) {
  76:src/MemoryAllocator.cpp **** 
  77:src/MemoryAllocator.cpp ****                 FreeFragment *newFree = (FreeFragment *) newAddr;
 224              		.loc 1 77 17 is_stmt 1
  78:src/MemoryAllocator.cpp **** 
  79:src/MemoryAllocator.cpp ****                 if (prev != 0)
 225              		.loc 1 79 17
 226 0148 630E0704 		beqz	a4,.L19
  80:src/MemoryAllocator.cpp ****                     prev->next = newFree;
 227              		.loc 1 80 21
 228              		.loc 1 80 32 is_stmt 0
 229 014c 2334F700 		sd	a5,8(a4)
 230              	.L20:
  81:src/MemoryAllocator.cpp ****                 else
  82:src/MemoryAllocator.cpp ****                     headFree = newFree;
  83:src/MemoryAllocator.cpp **** 
  84:src/MemoryAllocator.cpp ****                 newFree->next = curr->next;
 231              		.loc 1 84 17 is_stmt 1
 232              		.loc 1 84 39 is_stmt 0
 233 0150 03B68400 		ld	a2,8(s1)
 234              		.loc 1 84 31
 235 0154 23B4C700 		sd	a2,8(a5)
  85:src/MemoryAllocator.cpp ****                 newFree->size = curr->size - newSize;
 236              		.loc 1 85 17 is_stmt 1
 237              		.loc 1 85 39 is_stmt 0
 238 0158 03B60400 		ld	a2,0(s1)
 239              		.loc 1 85 44
GAS LISTING /tmp/ccLBTu6L.s 			page 7


 240 015c B306D640 		sub	a3,a2,a3
 241              	.LVL20:
 242              		.loc 1 85 31
 243 0160 23B0D700 		sd	a3,0(a5)
  86:src/MemoryAllocator.cpp **** 
  87:src/MemoryAllocator.cpp ****                 if(newFree->size == 0)
 244              		.loc 1 87 17 is_stmt 1
 245 0164 63980600 		bnez	a3,.L21
  88:src/MemoryAllocator.cpp ****                 {
  89:src/MemoryAllocator.cpp ****                     if(prev != 0)
 246              		.loc 1 89 21
 247 0168 63040704 		beqz	a4,.L22
  90:src/MemoryAllocator.cpp ****                         prev->next = curr->next;
 248              		.loc 1 90 25
 249              		.loc 1 90 44 is_stmt 0
 250 016c 83B78400 		ld	a5,8(s1)
 251              	.LVL21:
 252              		.loc 1 90 36
 253 0170 2334F700 		sd	a5,8(a4)
 254              	.L21:
  91:src/MemoryAllocator.cpp ****                     else
  92:src/MemoryAllocator.cpp ****                         headFree = 0;
  93:src/MemoryAllocator.cpp ****                 }
  94:src/MemoryAllocator.cpp **** 
  95:src/MemoryAllocator.cpp ****                 insertNewAllocatedFragment(oldAddr, size);
 255              		.loc 1 95 17 is_stmt 1
 256              		.loc 1 95 43 is_stmt 0
 257 0174 93050900 		mv	a1,s2
 258 0178 13850400 		mv	a0,s1
 259 017c 97000000 		call	_ZN15MemoryAllocator26insertNewAllocatedFragmentEPvm
 259      E7800000 
 260              	.LVL22:
  96:src/MemoryAllocator.cpp **** 
  97:src/MemoryAllocator.cpp **** 
  98:src/MemoryAllocator.cpp **** 
  99:src/MemoryAllocator.cpp ****                 uint64 oldA = (uint64) ((char*)oldAddr + sizeof(AllocatedFragment));
 261              		.loc 1 99 17 is_stmt 1
 262              		.loc 1 99 56 is_stmt 0
 263 0184 93840401 		addi	s1,s1,16
 264              	.LVL23:
 100:src/MemoryAllocator.cpp **** 
 101:src/MemoryAllocator.cpp ****                 return (void*)oldA;
 265              		.loc 1 101 17 is_stmt 1
 266              	.L15:
 267              	.LBE6:
 268              	.LBE5:
 269              	.LBE4:
 270              	.LBE3:
 271              	.LBE2:
 102:src/MemoryAllocator.cpp ****             }
 103:src/MemoryAllocator.cpp ****             else {
 104:src/MemoryAllocator.cpp ****                 if(prev != 0)
 105:src/MemoryAllocator.cpp ****                 {
 106:src/MemoryAllocator.cpp ****                     prev->next = 0;
 107:src/MemoryAllocator.cpp ****                 }
 108:src/MemoryAllocator.cpp ****                 else
 109:src/MemoryAllocator.cpp ****                 {
GAS LISTING /tmp/ccLBTu6L.s 			page 8


 110:src/MemoryAllocator.cpp ****                     headFree = 0;
 111:src/MemoryAllocator.cpp ****                 }
 112:src/MemoryAllocator.cpp ****             }
 113:src/MemoryAllocator.cpp ****         }
 114:src/MemoryAllocator.cpp ****         prev = curr;
 115:src/MemoryAllocator.cpp ****         curr = curr->next;
 116:src/MemoryAllocator.cpp ****     }
 117:src/MemoryAllocator.cpp **** 
 118:src/MemoryAllocator.cpp ****     return 0;
 119:src/MemoryAllocator.cpp **** }
 272              		.loc 1 119 1 is_stmt 0
 273 0188 13850400 		mv	a0,s1
 274 018c 83308101 		ld	ra,24(sp)
 275              		.cfi_remember_state
 276              		.cfi_restore 1
 277 0190 03340101 		ld	s0,16(sp)
 278              		.cfi_restore 8
 279              		.cfi_def_cfa 2, 32
 280 0194 83348100 		ld	s1,8(sp)
 281              		.cfi_restore 9
 282 0198 03390100 		ld	s2,0(sp)
 283              		.cfi_restore 18
 284              	.LVL24:
 285 019c 13010102 		addi	sp,sp,32
 286              		.cfi_def_cfa_offset 0
 287 01a0 67800000 		jr	ra
 288              	.LVL25:
 289              	.L19:
 290              		.cfi_restore_state
 291              	.LBB14:
 292              	.LBB12:
 293              	.LBB10:
 294              	.LBB8:
 295              	.LBB7:
  82:src/MemoryAllocator.cpp **** 
 296              		.loc 1 82 21 is_stmt 1
  82:src/MemoryAllocator.cpp **** 
 297              		.loc 1 82 30 is_stmt 0
 298 01a4 17060000 		sd	a5,.LANCHOR0+16,a2
 298      2330F600 
 299 01ac 6FF05FFA 		j	.L20
 300              	.LVL26:
 301              	.L22:
  92:src/MemoryAllocator.cpp ****                 }
 302              		.loc 1 92 25 is_stmt 1
  92:src/MemoryAllocator.cpp ****                 }
 303              		.loc 1 92 34 is_stmt 0
 304 01b0 97070000 		sd	zero,.LANCHOR0+16,a5
 304      23B00700 
 305              	.LVL27:
 306 01b8 6FF0DFFB 		j	.L21
 307              	.LVL28:
 308              	.L23:
 309              	.LBE7:
 110:src/MemoryAllocator.cpp ****                 }
 310              		.loc 1 110 21 is_stmt 1
 110:src/MemoryAllocator.cpp ****                 }
GAS LISTING /tmp/ccLBTu6L.s 			page 9


 311              		.loc 1 110 30 is_stmt 0
 312 01bc 97070000 		sd	zero,.LANCHOR0+16,a5
 312      23B00700 
 313              	.LVL29:
 314              	.L17:
 315              	.LBE8:
 316              	.LBE10:
 317              	.LBE12:
 114:src/MemoryAllocator.cpp ****         curr = curr->next;
 318              		.loc 1 114 9 is_stmt 1
 115:src/MemoryAllocator.cpp ****     }
 319              		.loc 1 115 9
 114:src/MemoryAllocator.cpp ****         curr = curr->next;
 320              		.loc 1 114 14 is_stmt 0
 321 01c4 13870400 		mv	a4,s1
 115:src/MemoryAllocator.cpp ****     }
 322              		.loc 1 115 14
 323 01c8 83B48400 		ld	s1,8(s1)
 324              	.LVL30:
 325              	.L24:
 326              	.LBE14:
  69:src/MemoryAllocator.cpp **** 
 327              		.loc 1 69 5 is_stmt 1
  69:src/MemoryAllocator.cpp **** 
 328              		.loc 1 69 16
 329 01cc E38E04FA 		beqz	s1,.L15
 330              	.LBB15:
  71:src/MemoryAllocator.cpp **** 
 331              		.loc 1 71 9
 332              	.LBB13:
  71:src/MemoryAllocator.cpp **** 
 333              		.loc 1 71 18 is_stmt 0
 334 01d0 83B70400 		ld	a5,0(s1)
  71:src/MemoryAllocator.cpp **** 
 335              		.loc 1 71 9
 336 01d4 E3E8D7FE 		bltu	a5,a3,.L17
 337              	.LBB11:
  73:src/MemoryAllocator.cpp ****             void* newAddr = ((char*)curr + newSize);
 338              		.loc 1 73 13 is_stmt 1
 339              	.LVL31:
  74:src/MemoryAllocator.cpp ****             if(newAddr <= HEAP_END_ADDR) {
 340              		.loc 1 74 13
  74:src/MemoryAllocator.cpp ****             if(newAddr <= HEAP_END_ADDR) {
 341              		.loc 1 74 19 is_stmt 0
 342 01d8 B387D400 		add	a5,s1,a3
 343              	.LVL32:
  75:src/MemoryAllocator.cpp **** 
 344              		.loc 1 75 13 is_stmt 1
 345              	.LBB9:
  75:src/MemoryAllocator.cpp **** 
 346              		.loc 1 75 24 is_stmt 0
 347 01dc 17060000 		la	a2,HEAP_END_ADDR
 347      03360600 
 348 01e4 03360600 		ld	a2,0(a2)
  75:src/MemoryAllocator.cpp **** 
 349              		.loc 1 75 13
 350 01e8 E370F6F6 		bgeu	a2,a5,.L26
GAS LISTING /tmp/ccLBTu6L.s 			page 10


 104:src/MemoryAllocator.cpp ****                 {
 351              		.loc 1 104 17 is_stmt 1
 352 01ec E30807FC 		beqz	a4,.L23
 106:src/MemoryAllocator.cpp ****                 }
 353              		.loc 1 106 21
 106:src/MemoryAllocator.cpp ****                 }
 354              		.loc 1 106 32 is_stmt 0
 355 01f0 23340700 		sd	zero,8(a4)
 356 01f4 6FF01FFD 		j	.L17
 357              	.LBE9:
 358              	.LBE11:
 359              	.LBE13:
 360              	.LBE15:
 361              		.cfi_endproc
 362              	.LFE4:
 364              		.align	2
 365              		.globl	_ZN15MemoryAllocator9mem_allocEm
 367              	_ZN15MemoryAllocator9mem_allocEm:
 368              	.LFB0:
  11:src/MemoryAllocator.cpp ****     return tryToAllocateFragment(size);
 369              		.loc 1 11 47 is_stmt 1
 370              		.cfi_startproc
 371              	.LVL33:
 372 01f8 130101FF 		addi	sp,sp,-16
 373              		.cfi_def_cfa_offset 16
 374 01fc 23341100 		sd	ra,8(sp)
 375 0200 23308100 		sd	s0,0(sp)
 376              		.cfi_offset 1, -8
 377              		.cfi_offset 8, -16
 378 0204 13040101 		addi	s0,sp,16
 379              		.cfi_def_cfa 8, 0
  12:src/MemoryAllocator.cpp **** }
 380              		.loc 1 12 5
  12:src/MemoryAllocator.cpp **** }
 381              		.loc 1 12 33 is_stmt 0
 382 0208 97000000 		call	_ZN15MemoryAllocator21tryToAllocateFragmentEm
 382      E7800000 
 383              	.LVL34:
  13:src/MemoryAllocator.cpp **** 
 384              		.loc 1 13 1
 385 0210 83308100 		ld	ra,8(sp)
 386              		.cfi_restore 1
 387 0214 03340100 		ld	s0,0(sp)
 388              		.cfi_restore 8
 389              		.cfi_def_cfa 2, 16
 390 0218 13010101 		addi	sp,sp,16
 391              		.cfi_def_cfa_offset 0
 392 021c 67800000 		jr	ra
 393              		.cfi_endproc
 394              	.LFE0:
 396              		.align	2
 397              		.globl	_ZN15MemoryAllocator20insertNewFreeSegmentEPvm
 399              	_ZN15MemoryAllocator20insertNewFreeSegmentEPvm:
 400              	.LFB5:
 120:src/MemoryAllocator.cpp **** 
 121:src/MemoryAllocator.cpp **** void MemoryAllocator::insertNewFreeSegment(void* addr, size_t size)
 122:src/MemoryAllocator.cpp **** {
GAS LISTING /tmp/ccLBTu6L.s 			page 11


 401              		.loc 1 122 1 is_stmt 1
 402              		.cfi_startproc
 403              	.LVL35:
 404 0220 130101FE 		addi	sp,sp,-32
 405              		.cfi_def_cfa_offset 32
 406 0224 233C1100 		sd	ra,24(sp)
 407 0228 23388100 		sd	s0,16(sp)
 408 022c 23349100 		sd	s1,8(sp)
 409 0230 23302101 		sd	s2,0(sp)
 410              		.cfi_offset 1, -8
 411              		.cfi_offset 8, -16
 412              		.cfi_offset 9, -24
 413              		.cfi_offset 18, -32
 414 0234 13040102 		addi	s0,sp,32
 415              		.cfi_def_cfa 8, 0
 416 0238 93040500 		mv	s1,a0
 417 023c 13890500 		mv	s2,a1
 123:src/MemoryAllocator.cpp ****     initMemory();
 418              		.loc 1 123 5
 419              		.loc 1 123 15 is_stmt 0
 420 0240 97000000 		call	_ZN15MemoryAllocator10initMemoryEv
 420      E7800000 
 421              	.LVL36:
 124:src/MemoryAllocator.cpp ****     FreeFragment* prev = 0;
 422              		.loc 1 124 5 is_stmt 1
 125:src/MemoryAllocator.cpp ****     FreeFragment* curr = headFree;
 423              		.loc 1 125 5
 424              		.loc 1 125 19 is_stmt 0
 425 0248 97070000 		ld	a5,.LANCHOR0+16
 425      83B70700 
 426              	.LVL37:
 126:src/MemoryAllocator.cpp ****     FreeFragment* newSegment = (FreeFragment*) addr;
 427              		.loc 1 126 5 is_stmt 1
 127:src/MemoryAllocator.cpp ****     newSegment->size = size;
 428              		.loc 1 127 5
 429              		.loc 1 127 22 is_stmt 0
 430 0250 23B02401 		sd	s2,0(s1)
 128:src/MemoryAllocator.cpp ****     newSegment->next = 0;
 431              		.loc 1 128 5 is_stmt 1
 432              		.loc 1 128 22 is_stmt 0
 433 0254 23B40400 		sd	zero,8(s1)
 124:src/MemoryAllocator.cpp ****     FreeFragment* curr = headFree;
 434              		.loc 1 124 19
 435 0258 13070000 		li	a4,0
 436              	.LVL38:
 437              	.L32:
 129:src/MemoryAllocator.cpp ****     while(curr != 0)
 438              		.loc 1 129 5 is_stmt 1
 439              		.loc 1 129 16
 440 025c 638C0700 		beqz	a5,.L30
 130:src/MemoryAllocator.cpp ****     {
 131:src/MemoryAllocator.cpp ****         if((void*)curr > addr)
 441              		.loc 1 131 9
 442 0260 63E8F400 		bgtu	a5,s1,.L38
 132:src/MemoryAllocator.cpp ****         {
 133:src/MemoryAllocator.cpp ****             newSegment->next = curr;
 134:src/MemoryAllocator.cpp ****             break;
GAS LISTING /tmp/ccLBTu6L.s 			page 12


 135:src/MemoryAllocator.cpp ****         }
 136:src/MemoryAllocator.cpp **** 
 137:src/MemoryAllocator.cpp ****         prev = curr;
 443              		.loc 1 137 9
 444              	.LVL39:
 138:src/MemoryAllocator.cpp ****         curr = curr->next;
 445              		.loc 1 138 9
 137:src/MemoryAllocator.cpp ****         curr = curr->next;
 446              		.loc 1 137 14 is_stmt 0
 447 0264 13870700 		mv	a4,a5
 448              		.loc 1 138 14
 449 0268 83B78700 		ld	a5,8(a5)
 450              	.LVL40:
 129:src/MemoryAllocator.cpp ****     {
 451              		.loc 1 129 5
 452 026c 6FF01FFF 		j	.L32
 453              	.L38:
 133:src/MemoryAllocator.cpp ****             break;
 454              		.loc 1 133 13 is_stmt 1
 133:src/MemoryAllocator.cpp ****             break;
 455              		.loc 1 133 30 is_stmt 0
 456 0270 23B4F400 		sd	a5,8(s1)
 134:src/MemoryAllocator.cpp ****         }
 457              		.loc 1 134 13 is_stmt 1
 458              	.L30:
 139:src/MemoryAllocator.cpp ****     }
 140:src/MemoryAllocator.cpp **** 
 141:src/MemoryAllocator.cpp **** 
 142:src/MemoryAllocator.cpp **** 
 143:src/MemoryAllocator.cpp ****     if(prev == 0)
 459              		.loc 1 143 5
 460 0274 63020704 		beqz	a4,.L39
 144:src/MemoryAllocator.cpp ****         headFree = newSegment;
 145:src/MemoryAllocator.cpp ****     else
 146:src/MemoryAllocator.cpp ****         prev->next = newSegment;
 461              		.loc 1 146 9
 462              		.loc 1 146 20 is_stmt 0
 463 0278 23349700 		sd	s1,8(a4)
 464              	.LVL41:
 465              	.L34:
 147:src/MemoryAllocator.cpp **** 
 148:src/MemoryAllocator.cpp ****     if(newSegment->next != 0 && (char*)newSegment->next == (char*)newSegment + newSegment->size)
 466              		.loc 1 148 5 is_stmt 1
 467              		.loc 1 148 20 is_stmt 0
 468 027c 83B78400 		ld	a5,8(s1)
 469              		.loc 1 148 5
 470 0280 63880700 		beqz	a5,.L35
 471              		.loc 1 148 92 discriminator 1
 472 0284 83B60400 		ld	a3,0(s1)
 473              		.loc 1 148 78 discriminator 1
 474 0288 3386D400 		add	a2,s1,a3
 475              		.loc 1 148 30 discriminator 1
 476 028c 638CC702 		beq	a5,a2,.L40
 477              	.L35:
 149:src/MemoryAllocator.cpp ****     {
 150:src/MemoryAllocator.cpp ****         newSegment->size += newSegment->next->size;
 151:src/MemoryAllocator.cpp ****         newSegment->next = newSegment->next->next;
GAS LISTING /tmp/ccLBTu6L.s 			page 13


 152:src/MemoryAllocator.cpp ****     }
 153:src/MemoryAllocator.cpp **** 
 154:src/MemoryAllocator.cpp ****     if(prev != 0 && (char*)newSegment == (char*)prev + prev->size)
 478              		.loc 1 154 5 is_stmt 1
 479 0290 63080700 		beqz	a4,.L29
 480              		.loc 1 154 62 is_stmt 0 discriminator 1
 481 0294 83370700 		ld	a5,0(a4)
 482              		.loc 1 154 54 discriminator 1
 483 0298 B306F700 		add	a3,a4,a5
 484              		.loc 1 154 18 discriminator 1
 485 029c 63809604 		beq	a3,s1,.L41
 486              	.L29:
 155:src/MemoryAllocator.cpp ****     {
 156:src/MemoryAllocator.cpp ****         prev->size+=newSegment->size;
 157:src/MemoryAllocator.cpp ****         prev->next = newSegment->next;
 158:src/MemoryAllocator.cpp ****     }
 159:src/MemoryAllocator.cpp **** 
 160:src/MemoryAllocator.cpp **** }
 487              		.loc 1 160 1
 488 02a0 83308101 		ld	ra,24(sp)
 489              		.cfi_remember_state
 490              		.cfi_restore 1
 491 02a4 03340101 		ld	s0,16(sp)
 492              		.cfi_restore 8
 493              		.cfi_def_cfa 2, 32
 494 02a8 83348100 		ld	s1,8(sp)
 495              		.cfi_restore 9
 496              	.LVL42:
 497 02ac 03390100 		ld	s2,0(sp)
 498              		.cfi_restore 18
 499              	.LVL43:
 500 02b0 13010102 		addi	sp,sp,32
 501              		.cfi_def_cfa_offset 0
 502 02b4 67800000 		jr	ra
 503              	.LVL44:
 504              	.L39:
 505              		.cfi_restore_state
 144:src/MemoryAllocator.cpp ****     else
 506              		.loc 1 144 9 is_stmt 1
 144:src/MemoryAllocator.cpp ****     else
 507              		.loc 1 144 18 is_stmt 0
 508 02b8 97070000 		sd	s1,.LANCHOR0+16,a5
 508      23B09700 
 509              	.LVL45:
 510 02c0 6FF0DFFB 		j	.L34
 511              	.L40:
 150:src/MemoryAllocator.cpp ****         newSegment->next = newSegment->next->next;
 512              		.loc 1 150 9 is_stmt 1
 150:src/MemoryAllocator.cpp ****         newSegment->next = newSegment->next->next;
 513              		.loc 1 150 47 is_stmt 0
 514 02c4 03B60700 		ld	a2,0(a5)
 150:src/MemoryAllocator.cpp ****         newSegment->next = newSegment->next->next;
 515              		.loc 1 150 26
 516 02c8 B386C600 		add	a3,a3,a2
 517 02cc 23B0D400 		sd	a3,0(s1)
 151:src/MemoryAllocator.cpp ****     }
 518              		.loc 1 151 9 is_stmt 1
GAS LISTING /tmp/ccLBTu6L.s 			page 14


 151:src/MemoryAllocator.cpp ****     }
 519              		.loc 1 151 46 is_stmt 0
 520 02d0 83B78700 		ld	a5,8(a5)
 151:src/MemoryAllocator.cpp ****     }
 521              		.loc 1 151 26
 522 02d4 23B4F400 		sd	a5,8(s1)
 523 02d8 6FF09FFB 		j	.L35
 524              	.L41:
 156:src/MemoryAllocator.cpp ****         prev->next = newSegment->next;
 525              		.loc 1 156 9 is_stmt 1
 156:src/MemoryAllocator.cpp ****         prev->next = newSegment->next;
 526              		.loc 1 156 33 is_stmt 0
 527 02dc 83B60400 		ld	a3,0(s1)
 156:src/MemoryAllocator.cpp ****         prev->next = newSegment->next;
 528              		.loc 1 156 19
 529 02e0 B387D700 		add	a5,a5,a3
 530 02e4 2330F700 		sd	a5,0(a4)
 157:src/MemoryAllocator.cpp ****     }
 531              		.loc 1 157 9 is_stmt 1
 157:src/MemoryAllocator.cpp ****     }
 532              		.loc 1 157 34 is_stmt 0
 533 02e8 83B78400 		ld	a5,8(s1)
 157:src/MemoryAllocator.cpp ****     }
 534              		.loc 1 157 20
 535 02ec 2334F700 		sd	a5,8(a4)
 536              		.loc 1 160 1
 537 02f0 6FF01FFB 		j	.L29
 538              		.cfi_endproc
 539              	.LFE5:
 541              		.align	2
 542              		.globl	_ZN15MemoryAllocator16tryToFreeSegmentEPv
 544              	_ZN15MemoryAllocator16tryToFreeSegmentEPv:
 545              	.LFB6:
 161:src/MemoryAllocator.cpp **** 
 162:src/MemoryAllocator.cpp **** uint64 MemoryAllocator::tryToFreeSegment(void* addr)
 163:src/MemoryAllocator.cpp **** {
 546              		.loc 1 163 1 is_stmt 1
 547              		.cfi_startproc
 548              	.LVL46:
 549 02f4 130101FE 		addi	sp,sp,-32
 550              		.cfi_def_cfa_offset 32
 551 02f8 233C1100 		sd	ra,24(sp)
 552 02fc 23388100 		sd	s0,16(sp)
 553 0300 23349100 		sd	s1,8(sp)
 554 0304 23302101 		sd	s2,0(sp)
 555              		.cfi_offset 1, -8
 556              		.cfi_offset 8, -16
 557              		.cfi_offset 9, -24
 558              		.cfi_offset 18, -32
 559 0308 13040102 		addi	s0,sp,32
 560              		.cfi_def_cfa 8, 0
 561 030c 13090500 		mv	s2,a0
 164:src/MemoryAllocator.cpp ****     initMemory();
 562              		.loc 1 164 5
 563              		.loc 1 164 15 is_stmt 0
 564 0310 97000000 		call	_ZN15MemoryAllocator10initMemoryEv
 564      E7800000 
GAS LISTING /tmp/ccLBTu6L.s 			page 15


 565              	.LVL47:
 165:src/MemoryAllocator.cpp ****     AllocatedFragment* prev = 0;
 566              		.loc 1 165 5 is_stmt 1
 166:src/MemoryAllocator.cpp ****     AllocatedFragment* curr = headAllocated;
 567              		.loc 1 166 5
 568              		.loc 1 166 24 is_stmt 0
 569 0318 97040000 		ld	s1,.LANCHOR0+8
 569      83B40400 
 570              	.LVL48:
 167:src/MemoryAllocator.cpp ****     int found = 0;
 571              		.loc 1 167 5 is_stmt 1
 572              		.loc 1 167 9 is_stmt 0
 573 0320 93060000 		li	a3,0
 165:src/MemoryAllocator.cpp ****     AllocatedFragment* prev = 0;
 574              		.loc 1 165 24
 575 0324 13070000 		li	a4,0
 576 0328 6F000003 		j	.L47
 577              	.LVL49:
 578              	.L45:
 168:src/MemoryAllocator.cpp ****     while(curr != 0 && !found)
 169:src/MemoryAllocator.cpp ****     {
 170:src/MemoryAllocator.cpp ****         if(addr == (void*)((char*)curr + sizeof(AllocatedFragment)))
 171:src/MemoryAllocator.cpp ****         {
 172:src/MemoryAllocator.cpp ****             if(prev != 0) {
 173:src/MemoryAllocator.cpp ****                 prev->next = curr->next;
 174:src/MemoryAllocator.cpp ****             }
 175:src/MemoryAllocator.cpp ****             else {
 176:src/MemoryAllocator.cpp ****                 headAllocated = curr->next;
 579              		.loc 1 176 17 is_stmt 1
 580              		.loc 1 176 39 is_stmt 0
 581 032c 83B78400 		ld	a5,8(s1)
 582              		.loc 1 176 31
 583 0330 17070000 		sd	a5,.LANCHOR0+8,a4
 583      2330F700 
 584              	.LVL50:
 585              	.L46:
 177:src/MemoryAllocator.cpp ****             }
 178:src/MemoryAllocator.cpp **** 
 179:src/MemoryAllocator.cpp ****             insertNewFreeSegment((void*)curr, curr->size + sizeof(AllocatedFragment));
 586              		.loc 1 179 13 is_stmt 1
 587              		.loc 1 179 53 is_stmt 0
 588 0338 83B50400 		ld	a1,0(s1)
 589              		.loc 1 179 33
 590 033c 93850501 		addi	a1,a1,16
 591 0340 13850400 		mv	a0,s1
 592 0344 97000000 		call	_ZN15MemoryAllocator20insertNewFreeSegmentEPvm
 592      E7800000 
 593              	.LVL51:
 180:src/MemoryAllocator.cpp **** 
 181:src/MemoryAllocator.cpp ****             found = 1;
 594              		.loc 1 181 13 is_stmt 1
 595              		.loc 1 181 19 is_stmt 0
 596 034c 93061000 		li	a3,1
 597              	.LVL52:
 598              	.L44:
 182:src/MemoryAllocator.cpp ****         }
 183:src/MemoryAllocator.cpp **** 
GAS LISTING /tmp/ccLBTu6L.s 			page 16


 184:src/MemoryAllocator.cpp ****         prev = curr;
 599              		.loc 1 184 9 is_stmt 1
 185:src/MemoryAllocator.cpp ****         curr = curr->next;
 600              		.loc 1 185 9
 184:src/MemoryAllocator.cpp ****         curr = curr->next;
 601              		.loc 1 184 14 is_stmt 0
 602 0350 13870400 		mv	a4,s1
 603              		.loc 1 185 14
 604 0354 83B48400 		ld	s1,8(s1)
 605              	.LVL53:
 606              	.L47:
 168:src/MemoryAllocator.cpp ****     {
 607              		.loc 1 168 5 is_stmt 1
 168:src/MemoryAllocator.cpp ****     {
 608              		.loc 1 168 21
 609 0358 63800402 		beqz	s1,.L43
 168:src/MemoryAllocator.cpp ****     {
 610              		.loc 1 168 21 is_stmt 0 discriminator 1
 611 035c 639E0600 		bnez	a3,.L43
 170:src/MemoryAllocator.cpp ****         {
 612              		.loc 1 170 9 is_stmt 1
 170:src/MemoryAllocator.cpp ****         {
 613              		.loc 1 170 20 is_stmt 0
 614 0360 93870401 		addi	a5,s1,16
 170:src/MemoryAllocator.cpp ****         {
 615              		.loc 1 170 9
 616 0364 E39627FF 		bne	a5,s2,.L44
 172:src/MemoryAllocator.cpp ****                 prev->next = curr->next;
 617              		.loc 1 172 13 is_stmt 1
 618 0368 E30207FC 		beqz	a4,.L45
 173:src/MemoryAllocator.cpp ****             }
 619              		.loc 1 173 17
 173:src/MemoryAllocator.cpp ****             }
 620              		.loc 1 173 36 is_stmt 0
 621 036c 83B78400 		ld	a5,8(s1)
 173:src/MemoryAllocator.cpp ****             }
 622              		.loc 1 173 28
 623 0370 2334F700 		sd	a5,8(a4)
 624 0374 6FF05FFC 		j	.L46
 625              	.L43:
 186:src/MemoryAllocator.cpp ****     }
 187:src/MemoryAllocator.cpp **** 
 188:src/MemoryAllocator.cpp ****     if(found)
 626              		.loc 1 188 5 is_stmt 1
 627 0378 63800602 		beqz	a3,.L49
 189:src/MemoryAllocator.cpp ****         return 0;
 628              		.loc 1 189 16 is_stmt 0
 629 037c 13050000 		li	a0,0
 630              	.L42:
 190:src/MemoryAllocator.cpp ****     else
 191:src/MemoryAllocator.cpp ****         return 1;
 192:src/MemoryAllocator.cpp **** }
 631              		.loc 1 192 1
 632 0380 83308101 		ld	ra,24(sp)
 633              		.cfi_remember_state
 634              		.cfi_restore 1
 635 0384 03340101 		ld	s0,16(sp)
GAS LISTING /tmp/ccLBTu6L.s 			page 17


 636              		.cfi_restore 8
 637              		.cfi_def_cfa 2, 32
 638 0388 83348100 		ld	s1,8(sp)
 639              		.cfi_restore 9
 640              	.LVL54:
 641 038c 03390100 		ld	s2,0(sp)
 642              		.cfi_restore 18
 643              	.LVL55:
 644 0390 13010102 		addi	sp,sp,32
 645              		.cfi_def_cfa_offset 0
 646 0394 67800000 		jr	ra
 647              	.LVL56:
 648              	.L49:
 649              		.cfi_restore_state
 191:src/MemoryAllocator.cpp **** }
 650              		.loc 1 191 16
 651 0398 13051000 		li	a0,1
 652 039c 6FF05FFE 		j	.L42
 653              		.cfi_endproc
 654              	.LFE6:
 656              		.align	2
 657              		.globl	_ZN15MemoryAllocator8mem_freeEPv
 659              	_ZN15MemoryAllocator8mem_freeEPv:
 660              	.LFB1:
  15:src/MemoryAllocator.cpp ****     return tryToFreeSegment(addr);
 661              		.loc 1 15 47 is_stmt 1
 662              		.cfi_startproc
 663              	.LVL57:
 664 03a0 130101FF 		addi	sp,sp,-16
 665              		.cfi_def_cfa_offset 16
 666 03a4 23341100 		sd	ra,8(sp)
 667 03a8 23308100 		sd	s0,0(sp)
 668              		.cfi_offset 1, -8
 669              		.cfi_offset 8, -16
 670 03ac 13040101 		addi	s0,sp,16
 671              		.cfi_def_cfa 8, 0
  16:src/MemoryAllocator.cpp **** }
 672              		.loc 1 16 5
  16:src/MemoryAllocator.cpp **** }
 673              		.loc 1 16 28 is_stmt 0
 674 03b0 97000000 		call	_ZN15MemoryAllocator16tryToFreeSegmentEPv
 674      E7800000 
 675              	.LVL58:
  17:src/MemoryAllocator.cpp **** 
 676              		.loc 1 17 1
 677 03b8 83308100 		ld	ra,8(sp)
 678              		.cfi_restore 1
 679 03bc 03340100 		ld	s0,0(sp)
 680              		.cfi_restore 8
 681              		.cfi_def_cfa 2, 16
 682 03c0 13010101 		addi	sp,sp,16
 683              		.cfi_def_cfa_offset 0
 684 03c4 67800000 		jr	ra
 685              		.cfi_endproc
 686              	.LFE1:
 688              		.align	2
 689              		.globl	_Z7kmallocm
GAS LISTING /tmp/ccLBTu6L.s 			page 18


 691              	_Z7kmallocm:
 692              	.LFB7:
 193:src/MemoryAllocator.cpp **** 
 194:src/MemoryAllocator.cpp **** void* kmalloc(size_t size)
 195:src/MemoryAllocator.cpp **** {
 693              		.loc 1 195 1 is_stmt 1
 694              		.cfi_startproc
 695              	.LVL59:
 696 03c8 130101FF 		addi	sp,sp,-16
 697              		.cfi_def_cfa_offset 16
 698 03cc 23341100 		sd	ra,8(sp)
 699 03d0 23308100 		sd	s0,0(sp)
 700              		.cfi_offset 1, -8
 701              		.cfi_offset 8, -16
 702 03d4 13040101 		addi	s0,sp,16
 703              		.cfi_def_cfa 8, 0
 196:src/MemoryAllocator.cpp ****     return MemoryAllocator::mem_alloc(size);
 704              		.loc 1 196 5
 705              		.loc 1 196 38 is_stmt 0
 706 03d8 97000000 		call	_ZN15MemoryAllocator9mem_allocEm
 706      E7800000 
 707              	.LVL60:
 197:src/MemoryAllocator.cpp **** }
 708              		.loc 1 197 1
 709 03e0 83308100 		ld	ra,8(sp)
 710              		.cfi_restore 1
 711 03e4 03340100 		ld	s0,0(sp)
 712              		.cfi_restore 8
 713              		.cfi_def_cfa 2, 16
 714 03e8 13010101 		addi	sp,sp,16
 715              		.cfi_def_cfa_offset 0
 716 03ec 67800000 		jr	ra
 717              		.cfi_endproc
 718              	.LFE7:
 720              		.align	2
 721              		.globl	_Z5kfreePv
 723              	_Z5kfreePv:
 724              	.LFB8:
 198:src/MemoryAllocator.cpp **** 
 199:src/MemoryAllocator.cpp **** uint64 kfree(void* p)
 200:src/MemoryAllocator.cpp **** {
 725              		.loc 1 200 1 is_stmt 1
 726              		.cfi_startproc
 727              	.LVL61:
 728 03f0 130101FF 		addi	sp,sp,-16
 729              		.cfi_def_cfa_offset 16
 730 03f4 23341100 		sd	ra,8(sp)
 731 03f8 23308100 		sd	s0,0(sp)
 732              		.cfi_offset 1, -8
 733              		.cfi_offset 8, -16
 734 03fc 13040101 		addi	s0,sp,16
 735              		.cfi_def_cfa 8, 0
 201:src/MemoryAllocator.cpp ****     return MemoryAllocator::mem_free(p);
 736              		.loc 1 201 5
 737              		.loc 1 201 37 is_stmt 0
 738 0400 97000000 		call	_ZN15MemoryAllocator8mem_freeEPv
 738      E7800000 
GAS LISTING /tmp/ccLBTu6L.s 			page 19


 739              	.LVL62:
 202:src/MemoryAllocator.cpp **** }...
 740              		.loc 1 202 1
 741 0408 83308100 		ld	ra,8(sp)
 742              		.cfi_restore 1
 743 040c 03340100 		ld	s0,0(sp)
 744              		.cfi_restore 8
 745              		.cfi_def_cfa 2, 16
 746 0410 13010101 		addi	sp,sp,16
 747              		.cfi_def_cfa_offset 0
 748 0414 67800000 		jr	ra
 749              		.cfi_endproc
 750              	.LFE8:
 752              		.globl	_ZN15MemoryAllocator18memoryInitiliaizedE
 753              		.globl	_ZN15MemoryAllocator8headFreeE
 754              		.globl	_ZN15MemoryAllocator13headAllocatedE
 755              		.bss
 756              		.align	3
 757              		.set	.LANCHOR0,. + 0
 760              	_ZN15MemoryAllocator18memoryInitiliaizedE:
 761 0000 00000000 		.zero	4
 762 0004 00000000 		.zero	4
 765              	_ZN15MemoryAllocator13headAllocatedE:
 766 0008 00000000 		.zero	8
 766      00000000 
 769              	_ZN15MemoryAllocator8headFreeE:
 770 0010 00000000 		.zero	8
 770      00000000 
 771              		.text
 772              	.Letext0:
 773              		.file 2 "src/../h/../lib/hw.h"
 774              		.file 3 "src/../h/MemoryAllocator.h"
GAS LISTING /tmp/ccLBTu6L.s 			page 20


DEFINED SYMBOLS
                            *ABS*:0000000000000000 MemoryAllocator.cpp
     /tmp/ccLBTu6L.s:9      .text:0000000000000000 _ZN15MemoryAllocator10initMemoryEv
     /tmp/ccLBTu6L.s:13     .text:0000000000000000 .L0 
     /tmp/ccLBTu6L.s:14     .text:0000000000000000 .L0 
     /tmp/ccLBTu6L.s:15     .text:0000000000000004 .L0 
     /tmp/ccLBTu6L.s:17     .text:0000000000000008 .L0 
     /tmp/ccLBTu6L.s:19     .text:000000000000000c .L0 
     /tmp/ccLBTu6L.s:21     .text:000000000000000c .L0 
     /tmp/ccLBTu6L.s:22     .text:000000000000000c .L0 
     /tmp/ccLBTu6L.s:24     .text:0000000000000014 .L0 
     /tmp/ccLBTu6L.s:27     .text:000000000000001c .L0 
     /tmp/ccLBTu6L.s:28     .text:000000000000001c .L0 
     /tmp/ccLBTu6L.s:32     .text:000000000000002c .L0 
     /tmp/ccLBTu6L.s:33     .text:000000000000002c .L0 
     /tmp/ccLBTu6L.s:35     .text:0000000000000030 .L0 
     /tmp/ccLBTu6L.s:36     .text:0000000000000030 .L0 
     /tmp/ccLBTu6L.s:40     .text:0000000000000040 .L0 
     /tmp/ccLBTu6L.s:41     .text:0000000000000040 .L0 
     /tmp/ccLBTu6L.s:43     .text:0000000000000044 .L0 
     /tmp/ccLBTu6L.s:44     .text:0000000000000044 .L0 
     /tmp/ccLBTu6L.s:48     .text:0000000000000054 .L0 
     /tmp/ccLBTu6L.s:50     .text:0000000000000058 .L0 
     /tmp/ccLBTu6L.s:53     .text:000000000000005c .L0 
     /tmp/ccLBTu6L.s:54     .text:0000000000000060 .L0 
     /tmp/ccLBTu6L.s:55     .text:0000000000000060 .L0 
     /tmp/ccLBTu6L.s:57     .text:0000000000000064 .L0 
     /tmp/ccLBTu6L.s:59     .text:0000000000000068 .L0 
     /tmp/ccLBTu6L.s:65     .text:0000000000000068 _ZN15MemoryAllocator26insertNewAllocatedFragmentEPvm
     /tmp/ccLBTu6L.s:68     .text:0000000000000068 .L0 
     /tmp/ccLBTu6L.s:70     .text:0000000000000068 .L0 
     /tmp/ccLBTu6L.s:71     .text:000000000000006c .L0 
     /tmp/ccLBTu6L.s:76     .text:000000000000007c .L0 
     /tmp/ccLBTu6L.s:77     .text:000000000000007c .L0 
     /tmp/ccLBTu6L.s:78     .text:000000000000007c .L0 
     /tmp/ccLBTu6L.s:79     .text:000000000000007c .L0 
     /tmp/ccLBTu6L.s:81     .text:0000000000000080 .L0 
     /tmp/ccLBTu6L.s:85     .text:0000000000000088 .L0 
     /tmp/ccLBTu6L.s:86     .text:0000000000000088 .L0 
     /tmp/ccLBTu6L.s:89     .text:0000000000000090 .L0 
     /tmp/ccLBTu6L.s:90     .text:0000000000000090 .L0 
     /tmp/ccLBTu6L.s:91     .text:0000000000000090 .L0 
     /tmp/ccLBTu6L.s:94     .text:0000000000000098 .L0 
     /tmp/ccLBTu6L.s:98     .text:000000000000009c .L0 
     /tmp/ccLBTu6L.s:99     .text:000000000000009c .L0 
     /tmp/ccLBTu6L.s:101    .text:00000000000000a0 .L0 
     /tmp/ccLBTu6L.s:104    .text:00000000000000a4 .L0 
     /tmp/ccLBTu6L.s:105    .text:00000000000000a4 .L0 
     /tmp/ccLBTu6L.s:106    .text:00000000000000a4 .L0 
     /tmp/ccLBTu6L.s:108    .text:00000000000000a8 .L0 
     /tmp/ccLBTu6L.s:111    .text:00000000000000ac .L0 
     /tmp/ccLBTu6L.s:115    .text:00000000000000b0 .L0 
     /tmp/ccLBTu6L.s:116    .text:00000000000000b0 .L0 
     /tmp/ccLBTu6L.s:117    .text:00000000000000b0 .L0 
     /tmp/ccLBTu6L.s:119    .text:00000000000000b4 .L0 
     /tmp/ccLBTu6L.s:120    .text:00000000000000b4 .L0 
     /tmp/ccLBTu6L.s:122    .text:00000000000000b8 .L0 
GAS LISTING /tmp/ccLBTu6L.s 			page 21


     /tmp/ccLBTu6L.s:124    .text:00000000000000bc .L0 
     /tmp/ccLBTu6L.s:126    .text:00000000000000c0 .L0 
     /tmp/ccLBTu6L.s:127    .text:00000000000000c0 .L0 
     /tmp/ccLBTu6L.s:129    .text:00000000000000c4 .L0 
     /tmp/ccLBTu6L.s:130    .text:00000000000000c4 .L0 
     /tmp/ccLBTu6L.s:134    .text:00000000000000c8 .L0 
     /tmp/ccLBTu6L.s:135    .text:00000000000000cc .L0 
     /tmp/ccLBTu6L.s:136    .text:00000000000000cc .L0 
     /tmp/ccLBTu6L.s:138    .text:00000000000000d0 .L0 
     /tmp/ccLBTu6L.s:139    .text:00000000000000d0 .L0 
     /tmp/ccLBTu6L.s:141    .text:00000000000000d4 .L0 
     /tmp/ccLBTu6L.s:144    .text:00000000000000d8 .L0 
     /tmp/ccLBTu6L.s:147    .text:00000000000000dc .L0 
     /tmp/ccLBTu6L.s:151    .text:00000000000000e0 .L0 
     /tmp/ccLBTu6L.s:153    .text:00000000000000e0 .L0 
     /tmp/ccLBTu6L.s:155    .text:00000000000000e4 .L0 
     /tmp/ccLBTu6L.s:156    .text:00000000000000e4 .L0 
     /tmp/ccLBTu6L.s:160    .text:00000000000000ec .L0 
     /tmp/ccLBTu6L.s:161    .text:00000000000000ec .L0 
     /tmp/ccLBTu6L.s:167    .text:00000000000000f8 .L0 
     /tmp/ccLBTu6L.s:168    .text:00000000000000f8 .L0 
     /tmp/ccLBTu6L.s:174    .text:0000000000000108 .L0 
     /tmp/ccLBTu6L.s:175    .text:0000000000000108 .L0 
     /tmp/ccLBTu6L.s:177    .text:0000000000000110 .L0 
     /tmp/ccLBTu6L.s:183    .text:0000000000000110 _ZN15MemoryAllocator21tryToAllocateFragmentEm
     /tmp/ccLBTu6L.s:186    .text:0000000000000110 .L0 
     /tmp/ccLBTu6L.s:188    .text:0000000000000110 .L0 
     /tmp/ccLBTu6L.s:189    .text:0000000000000114 .L0 
     /tmp/ccLBTu6L.s:194    .text:0000000000000124 .L0 
     /tmp/ccLBTu6L.s:195    .text:0000000000000124 .L0 
     /tmp/ccLBTu6L.s:196    .text:0000000000000124 .L0 
     /tmp/ccLBTu6L.s:197    .text:0000000000000124 .L0 
     /tmp/ccLBTu6L.s:199    .text:0000000000000128 .L0 
     /tmp/ccLBTu6L.s:202    .text:000000000000012c .L0 
     /tmp/ccLBTu6L.s:203    .text:000000000000012c .L0 
     /tmp/ccLBTu6L.s:206    .text:0000000000000134 .L0 
     /tmp/ccLBTu6L.s:207    .text:0000000000000134 .L0 
     /tmp/ccLBTu6L.s:208    .text:0000000000000134 .L0 
     /tmp/ccLBTu6L.s:211    .text:000000000000013c .L0 
     /tmp/ccLBTu6L.s:212    .text:000000000000013c .L0 
     /tmp/ccLBTu6L.s:215    .text:0000000000000140 .L0 
     /tmp/ccLBTu6L.s:225    .text:0000000000000148 .L0 
     /tmp/ccLBTu6L.s:226    .text:0000000000000148 .L0 
     /tmp/ccLBTu6L.s:228    .text:000000000000014c .L0 
     /tmp/ccLBTu6L.s:229    .text:000000000000014c .L0 
     /tmp/ccLBTu6L.s:232    .text:0000000000000150 .L0 
     /tmp/ccLBTu6L.s:233    .text:0000000000000150 .L0 
     /tmp/ccLBTu6L.s:235    .text:0000000000000154 .L0 
     /tmp/ccLBTu6L.s:237    .text:0000000000000158 .L0 
     /tmp/ccLBTu6L.s:238    .text:0000000000000158 .L0 
     /tmp/ccLBTu6L.s:240    .text:000000000000015c .L0 
     /tmp/ccLBTu6L.s:243    .text:0000000000000160 .L0 
     /tmp/ccLBTu6L.s:245    .text:0000000000000164 .L0 
     /tmp/ccLBTu6L.s:247    .text:0000000000000168 .L0 
     /tmp/ccLBTu6L.s:249    .text:000000000000016c .L0 
     /tmp/ccLBTu6L.s:250    .text:000000000000016c .L0 
     /tmp/ccLBTu6L.s:253    .text:0000000000000170 .L0 
GAS LISTING /tmp/ccLBTu6L.s 			page 22


     /tmp/ccLBTu6L.s:256    .text:0000000000000174 .L0 
     /tmp/ccLBTu6L.s:257    .text:0000000000000174 .L0 
     /tmp/ccLBTu6L.s:262    .text:0000000000000184 .L0 
     /tmp/ccLBTu6L.s:263    .text:0000000000000184 .L0 
     /tmp/ccLBTu6L.s:272    .text:0000000000000188 .L0 
     /tmp/ccLBTu6L.s:273    .text:0000000000000188 .L0 
     /tmp/ccLBTu6L.s:275    .text:0000000000000190 .L0 
     /tmp/ccLBTu6L.s:276    .text:0000000000000190 .L0 
     /tmp/ccLBTu6L.s:278    .text:0000000000000194 .L0 
     /tmp/ccLBTu6L.s:279    .text:0000000000000194 .L0 
     /tmp/ccLBTu6L.s:281    .text:0000000000000198 .L0 
     /tmp/ccLBTu6L.s:283    .text:000000000000019c .L0 
     /tmp/ccLBTu6L.s:286    .text:00000000000001a0 .L0 
     /tmp/ccLBTu6L.s:290    .text:00000000000001a4 .L0 
     /tmp/ccLBTu6L.s:297    .text:00000000000001a4 .L0 
     /tmp/ccLBTu6L.s:298    .text:00000000000001a4 .L0 
     /tmp/ccLBTu6L.s:303    .text:00000000000001b0 .L0 
     /tmp/ccLBTu6L.s:304    .text:00000000000001b0 .L0 
     /tmp/ccLBTu6L.s:311    .text:00000000000001bc .L0 
     /tmp/ccLBTu6L.s:312    .text:00000000000001bc .L0 
     /tmp/ccLBTu6L.s:319    .text:00000000000001c4 .L0 
     /tmp/ccLBTu6L.s:320    .text:00000000000001c4 .L0 
     /tmp/ccLBTu6L.s:321    .text:00000000000001c4 .L0 
     /tmp/ccLBTu6L.s:323    .text:00000000000001c8 .L0 
     /tmp/ccLBTu6L.s:328    .text:00000000000001cc .L0 
     /tmp/ccLBTu6L.s:329    .text:00000000000001cc .L0 
     /tmp/ccLBTu6L.s:333    .text:00000000000001d0 .L0 
     /tmp/ccLBTu6L.s:334    .text:00000000000001d0 .L0 
     /tmp/ccLBTu6L.s:336    .text:00000000000001d4 .L0 
     /tmp/ccLBTu6L.s:340    .text:00000000000001d8 .L0 
     /tmp/ccLBTu6L.s:341    .text:00000000000001d8 .L0 
     /tmp/ccLBTu6L.s:342    .text:00000000000001d8 .L0 
     /tmp/ccLBTu6L.s:346    .text:00000000000001dc .L0 
     /tmp/ccLBTu6L.s:347    .text:00000000000001dc .L0 
     /tmp/ccLBTu6L.s:350    .text:00000000000001e8 .L0 
     /tmp/ccLBTu6L.s:352    .text:00000000000001ec .L0 
     /tmp/ccLBTu6L.s:354    .text:00000000000001f0 .L0 
     /tmp/ccLBTu6L.s:355    .text:00000000000001f0 .L0 
     /tmp/ccLBTu6L.s:361    .text:00000000000001f8 .L0 
     /tmp/ccLBTu6L.s:367    .text:00000000000001f8 _ZN15MemoryAllocator9mem_allocEm
     /tmp/ccLBTu6L.s:370    .text:00000000000001f8 .L0 
     /tmp/ccLBTu6L.s:372    .text:00000000000001f8 .L0 
     /tmp/ccLBTu6L.s:373    .text:00000000000001fc .L0 
     /tmp/ccLBTu6L.s:376    .text:0000000000000204 .L0 
     /tmp/ccLBTu6L.s:377    .text:0000000000000204 .L0 
     /tmp/ccLBTu6L.s:379    .text:0000000000000208 .L0 
     /tmp/ccLBTu6L.s:381    .text:0000000000000208 .L0 
     /tmp/ccLBTu6L.s:382    .text:0000000000000208 .L0 
     /tmp/ccLBTu6L.s:385    .text:0000000000000210 .L0 
     /tmp/ccLBTu6L.s:386    .text:0000000000000214 .L0 
     /tmp/ccLBTu6L.s:388    .text:0000000000000218 .L0 
     /tmp/ccLBTu6L.s:389    .text:0000000000000218 .L0 
     /tmp/ccLBTu6L.s:391    .text:000000000000021c .L0 
     /tmp/ccLBTu6L.s:393    .text:0000000000000220 .L0 
     /tmp/ccLBTu6L.s:399    .text:0000000000000220 _ZN15MemoryAllocator20insertNewFreeSegmentEPvm
     /tmp/ccLBTu6L.s:402    .text:0000000000000220 .L0 
     /tmp/ccLBTu6L.s:404    .text:0000000000000220 .L0 
GAS LISTING /tmp/ccLBTu6L.s 			page 23


     /tmp/ccLBTu6L.s:405    .text:0000000000000224 .L0 
     /tmp/ccLBTu6L.s:410    .text:0000000000000234 .L0 
     /tmp/ccLBTu6L.s:411    .text:0000000000000234 .L0 
     /tmp/ccLBTu6L.s:412    .text:0000000000000234 .L0 
     /tmp/ccLBTu6L.s:413    .text:0000000000000234 .L0 
     /tmp/ccLBTu6L.s:415    .text:0000000000000238 .L0 
     /tmp/ccLBTu6L.s:419    .text:0000000000000240 .L0 
     /tmp/ccLBTu6L.s:420    .text:0000000000000240 .L0 
     /tmp/ccLBTu6L.s:423    .text:0000000000000248 .L0 
     /tmp/ccLBTu6L.s:424    .text:0000000000000248 .L0 
     /tmp/ccLBTu6L.s:425    .text:0000000000000248 .L0 
     /tmp/ccLBTu6L.s:428    .text:0000000000000250 .L0 
     /tmp/ccLBTu6L.s:429    .text:0000000000000250 .L0 
     /tmp/ccLBTu6L.s:430    .text:0000000000000250 .L0 
     /tmp/ccLBTu6L.s:432    .text:0000000000000254 .L0 
     /tmp/ccLBTu6L.s:433    .text:0000000000000254 .L0 
     /tmp/ccLBTu6L.s:435    .text:0000000000000258 .L0 
     /tmp/ccLBTu6L.s:439    .text:000000000000025c .L0 
     /tmp/ccLBTu6L.s:440    .text:000000000000025c .L0 
     /tmp/ccLBTu6L.s:442    .text:0000000000000260 .L0 
     /tmp/ccLBTu6L.s:445    .text:0000000000000264 .L0 
     /tmp/ccLBTu6L.s:446    .text:0000000000000264 .L0 
     /tmp/ccLBTu6L.s:447    .text:0000000000000264 .L0 
     /tmp/ccLBTu6L.s:449    .text:0000000000000268 .L0 
     /tmp/ccLBTu6L.s:452    .text:000000000000026c .L0 
     /tmp/ccLBTu6L.s:455    .text:0000000000000270 .L0 
     /tmp/ccLBTu6L.s:456    .text:0000000000000270 .L0 
     /tmp/ccLBTu6L.s:459    .text:0000000000000274 .L0 
     /tmp/ccLBTu6L.s:460    .text:0000000000000274 .L0 
     /tmp/ccLBTu6L.s:462    .text:0000000000000278 .L0 
     /tmp/ccLBTu6L.s:463    .text:0000000000000278 .L0 
     /tmp/ccLBTu6L.s:467    .text:000000000000027c .L0 
     /tmp/ccLBTu6L.s:468    .text:000000000000027c .L0 
     /tmp/ccLBTu6L.s:470    .text:0000000000000280 .L0 
     /tmp/ccLBTu6L.s:472    .text:0000000000000284 .L0 
     /tmp/ccLBTu6L.s:474    .text:0000000000000288 .L0 
     /tmp/ccLBTu6L.s:476    .text:000000000000028c .L0 
     /tmp/ccLBTu6L.s:479    .text:0000000000000290 .L0 
     /tmp/ccLBTu6L.s:481    .text:0000000000000294 .L0 
     /tmp/ccLBTu6L.s:483    .text:0000000000000298 .L0 
     /tmp/ccLBTu6L.s:485    .text:000000000000029c .L0 
     /tmp/ccLBTu6L.s:488    .text:00000000000002a0 .L0 
     /tmp/ccLBTu6L.s:489    .text:00000000000002a4 .L0 
     /tmp/ccLBTu6L.s:490    .text:00000000000002a4 .L0 
     /tmp/ccLBTu6L.s:492    .text:00000000000002a8 .L0 
     /tmp/ccLBTu6L.s:493    .text:00000000000002a8 .L0 
     /tmp/ccLBTu6L.s:495    .text:00000000000002ac .L0 
     /tmp/ccLBTu6L.s:498    .text:00000000000002b0 .L0 
     /tmp/ccLBTu6L.s:501    .text:00000000000002b4 .L0 
     /tmp/ccLBTu6L.s:505    .text:00000000000002b8 .L0 
     /tmp/ccLBTu6L.s:507    .text:00000000000002b8 .L0 
     /tmp/ccLBTu6L.s:508    .text:00000000000002b8 .L0 
     /tmp/ccLBTu6L.s:513    .text:00000000000002c4 .L0 
     /tmp/ccLBTu6L.s:514    .text:00000000000002c4 .L0 
     /tmp/ccLBTu6L.s:516    .text:00000000000002c8 .L0 
     /tmp/ccLBTu6L.s:519    .text:00000000000002d0 .L0 
     /tmp/ccLBTu6L.s:520    .text:00000000000002d0 .L0 
GAS LISTING /tmp/ccLBTu6L.s 			page 24


     /tmp/ccLBTu6L.s:522    .text:00000000000002d4 .L0 
     /tmp/ccLBTu6L.s:526    .text:00000000000002dc .L0 
     /tmp/ccLBTu6L.s:527    .text:00000000000002dc .L0 
     /tmp/ccLBTu6L.s:529    .text:00000000000002e0 .L0 
     /tmp/ccLBTu6L.s:532    .text:00000000000002e8 .L0 
     /tmp/ccLBTu6L.s:533    .text:00000000000002e8 .L0 
     /tmp/ccLBTu6L.s:535    .text:00000000000002ec .L0 
     /tmp/ccLBTu6L.s:537    .text:00000000000002f0 .L0 
     /tmp/ccLBTu6L.s:538    .text:00000000000002f4 .L0 
     /tmp/ccLBTu6L.s:544    .text:00000000000002f4 _ZN15MemoryAllocator16tryToFreeSegmentEPv
     /tmp/ccLBTu6L.s:547    .text:00000000000002f4 .L0 
     /tmp/ccLBTu6L.s:549    .text:00000000000002f4 .L0 
     /tmp/ccLBTu6L.s:550    .text:00000000000002f8 .L0 
     /tmp/ccLBTu6L.s:555    .text:0000000000000308 .L0 
     /tmp/ccLBTu6L.s:556    .text:0000000000000308 .L0 
     /tmp/ccLBTu6L.s:557    .text:0000000000000308 .L0 
     /tmp/ccLBTu6L.s:558    .text:0000000000000308 .L0 
     /tmp/ccLBTu6L.s:560    .text:000000000000030c .L0 
     /tmp/ccLBTu6L.s:563    .text:0000000000000310 .L0 
     /tmp/ccLBTu6L.s:564    .text:0000000000000310 .L0 
     /tmp/ccLBTu6L.s:567    .text:0000000000000318 .L0 
     /tmp/ccLBTu6L.s:568    .text:0000000000000318 .L0 
     /tmp/ccLBTu6L.s:569    .text:0000000000000318 .L0 
     /tmp/ccLBTu6L.s:572    .text:0000000000000320 .L0 
     /tmp/ccLBTu6L.s:573    .text:0000000000000320 .L0 
     /tmp/ccLBTu6L.s:575    .text:0000000000000324 .L0 
     /tmp/ccLBTu6L.s:580    .text:000000000000032c .L0 
     /tmp/ccLBTu6L.s:581    .text:000000000000032c .L0 
     /tmp/ccLBTu6L.s:583    .text:0000000000000330 .L0 
     /tmp/ccLBTu6L.s:587    .text:0000000000000338 .L0 
     /tmp/ccLBTu6L.s:588    .text:0000000000000338 .L0 
     /tmp/ccLBTu6L.s:590    .text:000000000000033c .L0 
     /tmp/ccLBTu6L.s:595    .text:000000000000034c .L0 
     /tmp/ccLBTu6L.s:596    .text:000000000000034c .L0 
     /tmp/ccLBTu6L.s:600    .text:0000000000000350 .L0 
     /tmp/ccLBTu6L.s:601    .text:0000000000000350 .L0 
     /tmp/ccLBTu6L.s:602    .text:0000000000000350 .L0 
     /tmp/ccLBTu6L.s:604    .text:0000000000000354 .L0 
     /tmp/ccLBTu6L.s:608    .text:0000000000000358 .L0 
     /tmp/ccLBTu6L.s:609    .text:0000000000000358 .L0 
     /tmp/ccLBTu6L.s:611    .text:000000000000035c .L0 
     /tmp/ccLBTu6L.s:613    .text:0000000000000360 .L0 
     /tmp/ccLBTu6L.s:614    .text:0000000000000360 .L0 
     /tmp/ccLBTu6L.s:616    .text:0000000000000364 .L0 
     /tmp/ccLBTu6L.s:618    .text:0000000000000368 .L0 
     /tmp/ccLBTu6L.s:620    .text:000000000000036c .L0 
     /tmp/ccLBTu6L.s:621    .text:000000000000036c .L0 
     /tmp/ccLBTu6L.s:623    .text:0000000000000370 .L0 
     /tmp/ccLBTu6L.s:627    .text:0000000000000378 .L0 
     /tmp/ccLBTu6L.s:629    .text:000000000000037c .L0 
     /tmp/ccLBTu6L.s:632    .text:0000000000000380 .L0 
     /tmp/ccLBTu6L.s:633    .text:0000000000000384 .L0 
     /tmp/ccLBTu6L.s:634    .text:0000000000000384 .L0 
     /tmp/ccLBTu6L.s:636    .text:0000000000000388 .L0 
     /tmp/ccLBTu6L.s:637    .text:0000000000000388 .L0 
     /tmp/ccLBTu6L.s:639    .text:000000000000038c .L0 
     /tmp/ccLBTu6L.s:642    .text:0000000000000390 .L0 
GAS LISTING /tmp/ccLBTu6L.s 			page 25


     /tmp/ccLBTu6L.s:645    .text:0000000000000394 .L0 
     /tmp/ccLBTu6L.s:649    .text:0000000000000398 .L0 
     /tmp/ccLBTu6L.s:651    .text:0000000000000398 .L0 
     /tmp/ccLBTu6L.s:653    .text:00000000000003a0 .L0 
     /tmp/ccLBTu6L.s:659    .text:00000000000003a0 _ZN15MemoryAllocator8mem_freeEPv
     /tmp/ccLBTu6L.s:662    .text:00000000000003a0 .L0 
     /tmp/ccLBTu6L.s:664    .text:00000000000003a0 .L0 
     /tmp/ccLBTu6L.s:665    .text:00000000000003a4 .L0 
     /tmp/ccLBTu6L.s:668    .text:00000000000003ac .L0 
     /tmp/ccLBTu6L.s:669    .text:00000000000003ac .L0 
     /tmp/ccLBTu6L.s:671    .text:00000000000003b0 .L0 
     /tmp/ccLBTu6L.s:673    .text:00000000000003b0 .L0 
     /tmp/ccLBTu6L.s:674    .text:00000000000003b0 .L0 
     /tmp/ccLBTu6L.s:677    .text:00000000000003b8 .L0 
     /tmp/ccLBTu6L.s:678    .text:00000000000003bc .L0 
     /tmp/ccLBTu6L.s:680    .text:00000000000003c0 .L0 
     /tmp/ccLBTu6L.s:681    .text:00000000000003c0 .L0 
     /tmp/ccLBTu6L.s:683    .text:00000000000003c4 .L0 
     /tmp/ccLBTu6L.s:685    .text:00000000000003c8 .L0 
     /tmp/ccLBTu6L.s:691    .text:00000000000003c8 _Z7kmallocm
     /tmp/ccLBTu6L.s:694    .text:00000000000003c8 .L0 
     /tmp/ccLBTu6L.s:696    .text:00000000000003c8 .L0 
     /tmp/ccLBTu6L.s:697    .text:00000000000003cc .L0 
     /tmp/ccLBTu6L.s:700    .text:00000000000003d4 .L0 
     /tmp/ccLBTu6L.s:701    .text:00000000000003d4 .L0 
     /tmp/ccLBTu6L.s:703    .text:00000000000003d8 .L0 
     /tmp/ccLBTu6L.s:705    .text:00000000000003d8 .L0 
     /tmp/ccLBTu6L.s:706    .text:00000000000003d8 .L0 
     /tmp/ccLBTu6L.s:709    .text:00000000000003e0 .L0 
     /tmp/ccLBTu6L.s:710    .text:00000000000003e4 .L0 
     /tmp/ccLBTu6L.s:712    .text:00000000000003e8 .L0 
     /tmp/ccLBTu6L.s:713    .text:00000000000003e8 .L0 
     /tmp/ccLBTu6L.s:715    .text:00000000000003ec .L0 
     /tmp/ccLBTu6L.s:717    .text:00000000000003f0 .L0 
     /tmp/ccLBTu6L.s:723    .text:00000000000003f0 _Z5kfreePv
     /tmp/ccLBTu6L.s:726    .text:00000000000003f0 .L0 
     /tmp/ccLBTu6L.s:728    .text:00000000000003f0 .L0 
     /tmp/ccLBTu6L.s:729    .text:00000000000003f4 .L0 
     /tmp/ccLBTu6L.s:732    .text:00000000000003fc .L0 
     /tmp/ccLBTu6L.s:733    .text:00000000000003fc .L0 
     /tmp/ccLBTu6L.s:735    .text:0000000000000400 .L0 
     /tmp/ccLBTu6L.s:737    .text:0000000000000400 .L0 
     /tmp/ccLBTu6L.s:738    .text:0000000000000400 .L0 
     /tmp/ccLBTu6L.s:741    .text:0000000000000408 .L0 
     /tmp/ccLBTu6L.s:742    .text:000000000000040c .L0 
     /tmp/ccLBTu6L.s:744    .text:0000000000000410 .L0 
     /tmp/ccLBTu6L.s:745    .text:0000000000000410 .L0 
     /tmp/ccLBTu6L.s:747    .text:0000000000000414 .L0 
     /tmp/ccLBTu6L.s:749    .text:0000000000000418 .L0 
     /tmp/ccLBTu6L.s:760    .bss:0000000000000000 _ZN15MemoryAllocator18memoryInitiliaizedE
     /tmp/ccLBTu6L.s:769    .bss:0000000000000010 _ZN15MemoryAllocator8headFreeE
     /tmp/ccLBTu6L.s:765    .bss:0000000000000008 _ZN15MemoryAllocator13headAllocatedE
     /tmp/ccLBTu6L.s:757    .bss:0000000000000000 .LANCHOR0
     /tmp/ccLBTu6L.s:775    .text:0000000000000418 .L0 
     /tmp/ccLBTu6L.s:22     .text:000000000000000c .L0 
     /tmp/ccLBTu6L.s:28     .text:000000000000001c .L0 
     /tmp/ccLBTu6L.s:36     .text:0000000000000030 .L0 
GAS LISTING /tmp/ccLBTu6L.s 			page 26


     /tmp/ccLBTu6L.s:44     .text:0000000000000044 .L0 
     /tmp/ccLBTu6L.s:91     .text:0000000000000090 .L0 
     /tmp/ccLBTu6L.s:161    .text:00000000000000ec .L0 
     /tmp/ccLBTu6L.s:168    .text:00000000000000f8 .L0 
     /tmp/ccLBTu6L.s:208    .text:0000000000000134 .L0 
     /tmp/ccLBTu6L.s:298    .text:00000000000001a4 .L0 
     /tmp/ccLBTu6L.s:304    .text:00000000000001b0 .L0 
     /tmp/ccLBTu6L.s:312    .text:00000000000001bc .L0 
     /tmp/ccLBTu6L.s:347    .text:00000000000001dc .L0 
     /tmp/ccLBTu6L.s:425    .text:0000000000000248 .L0 
     /tmp/ccLBTu6L.s:508    .text:00000000000002b8 .L0 
     /tmp/ccLBTu6L.s:569    .text:0000000000000318 .L0 
     /tmp/ccLBTu6L.s:583    .text:0000000000000330 .L0 
     /tmp/ccLBTu6L.s:51     .text:000000000000005c .L1
     /tmp/ccLBTu6L.s:112    .text:00000000000000b0 .L5
     /tmp/ccLBTu6L.s:96     .text:000000000000009c .L6
     /tmp/ccLBTu6L.s:150    .text:00000000000000e0 .L12
     /tmp/ccLBTu6L.s:165    .text:00000000000000f8 .L13
     /tmp/ccLBTu6L.s:158    .text:00000000000000ec .L14
     /tmp/ccLBTu6L.s:132    .text:00000000000000c8 .L4
     /tmp/ccLBTu6L.s:325    .text:00000000000001cc .L24
     /tmp/ccLBTu6L.s:289    .text:00000000000001a4 .L19
     /tmp/ccLBTu6L.s:254    .text:0000000000000174 .L21
     /tmp/ccLBTu6L.s:301    .text:00000000000001b0 .L22
     /tmp/ccLBTu6L.s:230    .text:0000000000000150 .L20
     /tmp/ccLBTu6L.s:266    .text:0000000000000188 .L15
     /tmp/ccLBTu6L.s:314    .text:00000000000001c4 .L17
     /tmp/ccLBTu6L.s:218    .text:0000000000000148 .L26
     /tmp/ccLBTu6L.s:308    .text:00000000000001bc .L23
     /tmp/ccLBTu6L.s:458    .text:0000000000000274 .L30
     /tmp/ccLBTu6L.s:453    .text:0000000000000270 .L38
     /tmp/ccLBTu6L.s:437    .text:000000000000025c .L32
     /tmp/ccLBTu6L.s:504    .text:00000000000002b8 .L39
     /tmp/ccLBTu6L.s:477    .text:0000000000000290 .L35
     /tmp/ccLBTu6L.s:511    .text:00000000000002c4 .L40
     /tmp/ccLBTu6L.s:486    .text:00000000000002a0 .L29
     /tmp/ccLBTu6L.s:524    .text:00000000000002dc .L41
     /tmp/ccLBTu6L.s:465    .text:000000000000027c .L34
     /tmp/ccLBTu6L.s:606    .text:0000000000000358 .L47
     /tmp/ccLBTu6L.s:625    .text:0000000000000378 .L43
     /tmp/ccLBTu6L.s:598    .text:0000000000000350 .L44
     /tmp/ccLBTu6L.s:578    .text:000000000000032c .L45
     /tmp/ccLBTu6L.s:585    .text:0000000000000338 .L46
     /tmp/ccLBTu6L.s:648    .text:0000000000000398 .L49
     /tmp/ccLBTu6L.s:630    .text:0000000000000380 .L42
     /tmp/ccLBTu6L.s:1496   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccLBTu6L.s:2659   .debug_str:0000000000000044 .LASF56
     /tmp/ccLBTu6L.s:2727   .debug_str:0000000000000309 .LASF57
     /tmp/ccLBTu6L.s:2733   .debug_str:000000000000033a .LASF58
     /tmp/ccLBTu6L.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccLBTu6L.s:772    .text:0000000000000418 .Letext0
     /tmp/ccLBTu6L.s:2647   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccLBTu6L.s:2711   .debug_str:0000000000000271 .LASF0
     /tmp/ccLBTu6L.s:2699   .debug_str:0000000000000213 .LASF1
     /tmp/ccLBTu6L.s:2691   .debug_str:00000000000001d2 .LASF2
     /tmp/ccLBTu6L.s:2665   .debug_str:00000000000000f9 .LASF4
     /tmp/ccLBTu6L.s:2695   .debug_str:00000000000001eb .LASF3
GAS LISTING /tmp/ccLBTu6L.s 			page 27


     /tmp/ccLBTu6L.s:2653   .debug_str:0000000000000023 .LASF5
     /tmp/ccLBTu6L.s:2649   .debug_str:0000000000000000 .LASF6
     /tmp/ccLBTu6L.s:2681   .debug_str:0000000000000158 .LASF7
     /tmp/ccLBTu6L.s:2721   .debug_str:00000000000002dd .LASF8
     /tmp/ccLBTu6L.s:2663   .debug_str:00000000000000eb .LASF9
     /tmp/ccLBTu6L.s:2773   .debug_str:00000000000004cd .LASF10
     /tmp/ccLBTu6L.s:2687   .debug_str:00000000000001a2 .LASF11
     /tmp/ccLBTu6L.s:2757   .debug_str:000000000000045f .LASF12
     /tmp/ccLBTu6L.s:2729   .debug_str:0000000000000321 .LASF13
     /tmp/ccLBTu6L.s:2701   .debug_str:0000000000000226 .LASF14
     /tmp/ccLBTu6L.s:2673   .debug_str:0000000000000119 .LASF15
     /tmp/ccLBTu6L.s:2725   .debug_str:00000000000002f3 .LASF16
     /tmp/ccLBTu6L.s:2651   .debug_str:0000000000000013 .LASF59
     /tmp/ccLBTu6L.s:2765   .debug_str:00000000000004ab .LASF19
     /tmp/ccLBTu6L.s:2715   .debug_str:0000000000000290 .LASF17
     /tmp/ccLBTu6L.s:2655   .debug_str:000000000000002a .LASF18
     /tmp/ccLBTu6L.s:2713   .debug_str:000000000000027e .LASF20
     /tmp/ccLBTu6L.s:2677   .debug_str:000000000000014a .LASF21
     /tmp/ccLBTu6L.s:2707   .debug_str:0000000000000244 .LASF22
     /tmp/ccLBTu6L.s:2745   .debug_str:00000000000003e6 .LASF23
     /tmp/ccLBTu6L.s:2755   .debug_str:0000000000000456 .LASF24
     /tmp/ccLBTu6L.s:2705   .debug_str:000000000000023a .LASF25
     /tmp/ccLBTu6L.s:2761   .debug_str:0000000000000499 .LASF26
     /tmp/ccLBTu6L.s:2749   .debug_str:00000000000003ff .LASF28
     /tmp/ccLBTu6L.s:2731   .debug_str:0000000000000331 .LASF27
     /tmp/ccLBTu6L.s:2689   .debug_str:00000000000001b1 .LASF29
     /tmp/ccLBTu6L.s:2767   .debug_str:00000000000004b8 .LASF60
     /tmp/ccLBTu6L.s:2717   .debug_str:0000000000000295 .LASF61
     /tmp/ccLBTu6L.s:2675   .debug_str:000000000000012f .LASF32
     /tmp/ccLBTu6L.s:2735   .debug_str:000000000000035d .LASF34
     /tmp/ccLBTu6L.s:2697   .debug_str:00000000000001fd .LASF30
     /tmp/ccLBTu6L.s:2751   .debug_str:0000000000000420 .LASF31
     /tmp/ccLBTu6L.s:2657   .debug_str:000000000000002f .LASF33
     /tmp/ccLBTu6L.s:2685   .debug_str:0000000000000173 .LASF35
     /tmp/ccLBTu6L.s:2743   .debug_str:00000000000003d5 .LASF36
     /tmp/ccLBTu6L.s:2759   .debug_str:000000000000046f .LASF37
     /tmp/ccLBTu6L.s:2719   .debug_str:00000000000002b8 .LASF38
     /tmp/ccLBTu6L.s:2709   .debug_str:0000000000000252 .LASF39
     /tmp/ccLBTu6L.s:2741   .debug_str:00000000000003ab .LASF40
     /tmp/ccLBTu6L.s:2747   .debug_str:00000000000003f9 .LASF41
     /tmp/ccLBTu6L.s:2669   .debug_str:0000000000000106 .LASF43
     /tmp/ccLBTu6L.s:724    .text:00000000000003f0 .LFB8
     /tmp/ccLBTu6L.s:750    .text:0000000000000418 .LFE8
     /tmp/ccLBTu6L.s:2076   .debug_loc:0000000000000000 .LLST24
     /tmp/ccLBTu6L.s:739    .text:0000000000000408 .LVL62
     /tmp/ccLBTu6L.s:2703   .debug_str:0000000000000232 .LASF42
     /tmp/ccLBTu6L.s:2737   .debug_str:0000000000000392 .LASF44
     /tmp/ccLBTu6L.s:692    .text:00000000000003c8 .LFB7
     /tmp/ccLBTu6L.s:718    .text:00000000000003f0 .LFE7
     /tmp/ccLBTu6L.s:2090   .debug_loc:0000000000000039 .LLST23
     /tmp/ccLBTu6L.s:707    .text:00000000000003e0 .LVL60
     /tmp/ccLBTu6L.s:545    .text:00000000000002f4 .LFB6
     /tmp/ccLBTu6L.s:654    .text:00000000000003a0 .LFE6
     /tmp/ccLBTu6L.s:2679   .debug_str:0000000000000153 .LASF45
     /tmp/ccLBTu6L.s:2104   .debug_loc:0000000000000072 .LLST18
     /tmp/ccLBTu6L.s:2769   .debug_str:00000000000004c3 .LASF46
     /tmp/ccLBTu6L.s:2126   .debug_loc:00000000000000d1 .LLST19
GAS LISTING /tmp/ccLBTu6L.s 			page 28


     /tmp/ccLBTu6L.s:2661   .debug_str:00000000000000e6 .LASF47
     /tmp/ccLBTu6L.s:2146   .debug_loc:000000000000012e .LLST20
     /tmp/ccLBTu6L.s:2667   .debug_str:0000000000000100 .LASF48
     /tmp/ccLBTu6L.s:2166   .debug_loc:000000000000018b .LLST21
     /tmp/ccLBTu6L.s:565    .text:0000000000000318 .LVL47
     /tmp/ccLBTu6L.s:593    .text:000000000000034c .LVL51
     /tmp/ccLBTu6L.s:400    .text:0000000000000220 .LFB5
     /tmp/ccLBTu6L.s:539    .text:00000000000002f4 .LFE5
     /tmp/ccLBTu6L.s:2187   .debug_loc:00000000000001e9 .LLST13
     /tmp/ccLBTu6L.s:2209   .debug_loc:0000000000000248 .LLST14
     /tmp/ccLBTu6L.s:2231   .debug_loc:00000000000002a7 .LLST15
     /tmp/ccLBTu6L.s:2251   .debug_loc:0000000000000304 .LLST16
     /tmp/ccLBTu6L.s:2693   .debug_str:00000000000001e0 .LASF49
     /tmp/ccLBTu6L.s:2271   .debug_loc:0000000000000361 .LLST17
     /tmp/ccLBTu6L.s:421    .text:0000000000000248 .LVL36
     /tmp/ccLBTu6L.s:184    .text:0000000000000110 .LFB4
     /tmp/ccLBTu6L.s:362    .text:00000000000001f8 .LFE4
     /tmp/ccLBTu6L.s:2289   .debug_loc:00000000000003ad .LLST5
     /tmp/ccLBTu6L.s:2311   .debug_loc:000000000000040c .LLST6
     /tmp/ccLBTu6L.s:2335   .debug_loc:000000000000047c .LLST7
     /tmp/ccLBTu6L.s:2763   .debug_str:00000000000004a3 .LASF50
     /tmp/ccLBTu6L.s:2355   .debug_loc:00000000000004d9 .LLST8
     /tmp/ccLBTu6L.s:2631   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccLBTu6L.s:2671   .debug_str:0000000000000111 .LASF51
     /tmp/ccLBTu6L.s:2391   .debug_loc:0000000000000564 .LLST9
     /tmp/ccLBTu6L.s:2753   .debug_str:000000000000044e .LASF52
     /tmp/ccLBTu6L.s:2406   .debug_loc:00000000000005ad .LLST10
     /tmp/ccLBTu6L.s:2683   .debug_str:000000000000016b .LASF53
     /tmp/ccLBTu6L.s:2447   .debug_loc:000000000000063d .LLST11
     /tmp/ccLBTu6L.s:2771   .debug_str:00000000000004c8 .LASF62
     /tmp/ccLBTu6L.s:260    .text:0000000000000184 .LVL22
     /tmp/ccLBTu6L.s:204    .text:0000000000000134 .LVL16
     /tmp/ccLBTu6L.s:66     .text:0000000000000068 .LFB3
     /tmp/ccLBTu6L.s:178    .text:0000000000000110 .LFE3
     /tmp/ccLBTu6L.s:2480   .debug_loc:00000000000006a7 .LLST0
     /tmp/ccLBTu6L.s:2502   .debug_loc:0000000000000706 .LLST1
     /tmp/ccLBTu6L.s:2524   .debug_loc:0000000000000765 .LLST2
     /tmp/ccLBTu6L.s:2723   .debug_str:00000000000002ed .LASF54
     /tmp/ccLBTu6L.s:2548   .debug_loc:00000000000007d5 .LLST3
     /tmp/ccLBTu6L.s:2739   .debug_str:000000000000039e .LASF55
     /tmp/ccLBTu6L.s:2572   .debug_loc:0000000000000845 .LLST4
     /tmp/ccLBTu6L.s:87     .text:0000000000000090 .LVL1
     /tmp/ccLBTu6L.s:10     .text:0000000000000000 .LFB2
     /tmp/ccLBTu6L.s:60     .text:0000000000000068 .LFE2
     /tmp/ccLBTu6L.s:660    .text:00000000000003a0 .LFB1
     /tmp/ccLBTu6L.s:686    .text:00000000000003c8 .LFE1
     /tmp/ccLBTu6L.s:2590   .debug_loc:0000000000000891 .LLST22
     /tmp/ccLBTu6L.s:675    .text:00000000000003b8 .LVL58
     /tmp/ccLBTu6L.s:368    .text:00000000000001f8 .LFB0
     /tmp/ccLBTu6L.s:394    .text:0000000000000220 .LFE0
     /tmp/ccLBTu6L.s:2604   .debug_loc:00000000000008ca .LLST12
     /tmp/ccLBTu6L.s:383    .text:0000000000000210 .LVL34
     /tmp/ccLBTu6L.s:727    .text:00000000000003f0 .LVL61
     /tmp/ccLBTu6L.s:695    .text:00000000000003c8 .LVL59
     /tmp/ccLBTu6L.s:548    .text:00000000000002f4 .LVL46
     /tmp/ccLBTu6L.s:643    .text:0000000000000390 .LVL55
     /tmp/ccLBTu6L.s:647    .text:0000000000000398 .LVL56
GAS LISTING /tmp/ccLBTu6L.s 			page 29


     /tmp/ccLBTu6L.s:577    .text:000000000000032c .LVL49
     /tmp/ccLBTu6L.s:584    .text:0000000000000338 .LVL50
     /tmp/ccLBTu6L.s:597    .text:0000000000000350 .LVL52
     /tmp/ccLBTu6L.s:605    .text:0000000000000358 .LVL53
     /tmp/ccLBTu6L.s:570    .text:0000000000000320 .LVL48
     /tmp/ccLBTu6L.s:640    .text:000000000000038c .LVL54
     /tmp/ccLBTu6L.s:403    .text:0000000000000220 .LVL35
     /tmp/ccLBTu6L.s:496    .text:00000000000002ac .LVL42
     /tmp/ccLBTu6L.s:503    .text:00000000000002b8 .LVL44
     /tmp/ccLBTu6L.s:499    .text:00000000000002b0 .LVL43
     /tmp/ccLBTu6L.s:436    .text:000000000000025c .LVL38
     /tmp/ccLBTu6L.s:444    .text:0000000000000264 .LVL39
     /tmp/ccLBTu6L.s:450    .text:000000000000026c .LVL40
     /tmp/ccLBTu6L.s:426    .text:0000000000000250 .LVL37
     /tmp/ccLBTu6L.s:464    .text:000000000000027c .LVL41
     /tmp/ccLBTu6L.s:509    .text:00000000000002c0 .LVL45
     /tmp/ccLBTu6L.s:187    .text:0000000000000110 .LVL15
     /tmp/ccLBTu6L.s:284    .text:000000000000019c .LVL24
     /tmp/ccLBTu6L.s:288    .text:00000000000001a4 .LVL25
     /tmp/ccLBTu6L.s:217    .text:0000000000000148 .LVL19
     /tmp/ccLBTu6L.s:313    .text:00000000000001c4 .LVL29
     /tmp/ccLBTu6L.s:324    .text:00000000000001cc .LVL30
     /tmp/ccLBTu6L.s:209    .text:000000000000013c .LVL17
     /tmp/ccLBTu6L.s:264    .text:0000000000000188 .LVL23
     /tmp/ccLBTu6L.s:213    .text:0000000000000140 .LVL18
     /tmp/ccLBTu6L.s:241    .text:0000000000000160 .LVL20
     /tmp/ccLBTu6L.s:300    .text:00000000000001b0 .LVL26
     /tmp/ccLBTu6L.s:307    .text:00000000000001bc .LVL28
     /tmp/ccLBTu6L.s:339    .text:00000000000001d8 .LVL31
     /tmp/ccLBTu6L.s:251    .text:0000000000000170 .LVL21
     /tmp/ccLBTu6L.s:305    .text:00000000000001b8 .LVL27
     /tmp/ccLBTu6L.s:343    .text:00000000000001dc .LVL32
     /tmp/ccLBTu6L.s:69     .text:0000000000000068 .LVL0
     /tmp/ccLBTu6L.s:142    .text:00000000000000d4 .LVL8
     /tmp/ccLBTu6L.s:149    .text:00000000000000e0 .LVL10
     /tmp/ccLBTu6L.s:145    .text:00000000000000d8 .LVL9
     /tmp/ccLBTu6L.s:95     .text:000000000000009c .LVL3
     /tmp/ccLBTu6L.s:103    .text:00000000000000a4 .LVL4
     /tmp/ccLBTu6L.s:109    .text:00000000000000ac .LVL5
     /tmp/ccLBTu6L.s:131    .text:00000000000000c8 .LVL7
     /tmp/ccLBTu6L.s:171    .text:0000000000000104 .LVL14
     /tmp/ccLBTu6L.s:92     .text:0000000000000098 .LVL2
     /tmp/ccLBTu6L.s:162    .text:00000000000000f4 .LVL11
     /tmp/ccLBTu6L.s:164    .text:00000000000000f8 .LVL12
     /tmp/ccLBTu6L.s:169    .text:0000000000000100 .LVL13
     /tmp/ccLBTu6L.s:114    .text:00000000000000b0 .LVL6
     /tmp/ccLBTu6L.s:663    .text:00000000000003a0 .LVL57
     /tmp/ccLBTu6L.s:371    .text:00000000000001f8 .LVL33
     /tmp/ccLBTu6L.s:776    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccLBTu6L.s:221    .text:0000000000000148 .LBB4
     /tmp/ccLBTu6L.s:269    .text:0000000000000188 .LBE4
     /tmp/ccLBTu6L.s:293    .text:00000000000001a4 .LBB10
     /tmp/ccLBTu6L.s:316    .text:00000000000001c4 .LBE10
     /tmp/ccLBTu6L.s:337    .text:00000000000001d8 .LBB11
     /tmp/ccLBTu6L.s:358    .text:00000000000001f8 .LBE11
     /tmp/ccLBTu6L.s:223    .text:0000000000000148 .LBB6
     /tmp/ccLBTu6L.s:267    .text:0000000000000188 .LBE6
GAS LISTING /tmp/ccLBTu6L.s 			page 30


     /tmp/ccLBTu6L.s:295    .text:00000000000001a4 .LBB7
     /tmp/ccLBTu6L.s:309    .text:00000000000001bc .LBE7

UNDEFINED SYMBOLS
HEAP_START_ADDR
HEAP_END_ADDR
