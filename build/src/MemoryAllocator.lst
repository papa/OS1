GAS LISTING /tmp/ccNTdQVw.s 			page 1


   1              		.file	"MemoryAllocator.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN15MemoryAllocator10initMemoryEv
   9              	_ZN15MemoryAllocator10initMemoryEv:
  10              	.LFB27:
  11              		.file 1 "src/MemoryAllocator.cpp"
   1:src/MemoryAllocator.cpp **** //
   2:src/MemoryAllocator.cpp **** // Created by os on 4/27/22.
   3:src/MemoryAllocator.cpp **** //
   4:src/MemoryAllocator.cpp **** 
   5:src/MemoryAllocator.cpp **** #include "../h/MemoryAllocator.hpp"
   6:src/MemoryAllocator.cpp **** #include "../h/Riscv.hpp"
   7:src/MemoryAllocator.cpp **** #include "../h/KConsole.hpp"
   8:src/MemoryAllocator.cpp **** 
   9:src/MemoryAllocator.cpp **** MemoryAllocator::BlockHeader* MemoryAllocator::headAllocated = 0;
  10:src/MemoryAllocator.cpp **** MemoryAllocator::BlockHeader* MemoryAllocator::headFree = 0;
  11:src/MemoryAllocator.cpp **** MemoryAllocator::BlockHeader* MemoryAllocator::tailAllocated = 0;
  12:src/MemoryAllocator.cpp **** MemoryAllocator::BlockHeader* MemoryAllocator::tailFree = 0;
  13:src/MemoryAllocator.cpp **** int MemoryAllocator::memoryInitiliaized = 0;
  14:src/MemoryAllocator.cpp **** 
  15:src/MemoryAllocator.cpp **** void *MemoryAllocator::mem_alloc(size_t size)
  16:src/MemoryAllocator.cpp **** {
  17:src/MemoryAllocator.cpp ****     return tryToAllocateFragment(size);
  18:src/MemoryAllocator.cpp **** }
  19:src/MemoryAllocator.cpp **** 
  20:src/MemoryAllocator.cpp **** uint64 MemoryAllocator::mem_free(void * addr)
  21:src/MemoryAllocator.cpp **** {
  22:src/MemoryAllocator.cpp ****     return tryToFreeSegment(addr);
  23:src/MemoryAllocator.cpp **** }
  24:src/MemoryAllocator.cpp **** 
  25:src/MemoryAllocator.cpp **** void MemoryAllocator::initMemory()
  26:src/MemoryAllocator.cpp **** {
  12              		.loc 1 26 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  27:src/MemoryAllocator.cpp ****     if(memoryInitiliaized == 1)
  20              		.loc 1 27 5
  21              		.loc 1 27 27 is_stmt 0
  22 000c 17070000 		lw	a4,.LANCHOR0
  22      03270700 
  23              		.loc 1 27 5
  24 0014 93071000 		li	a5,1
  25 0018 630AF704 		beq	a4,a5,.L1
  28:src/MemoryAllocator.cpp ****         return;
  29:src/MemoryAllocator.cpp ****     memoryInitiliaized = 1;
  26              		.loc 1 29 5 is_stmt 1
  27              		.loc 1 29 24 is_stmt 0
  28 001c 97070000 		lla	a5,.LANCHOR0
GAS LISTING /tmp/ccNTdQVw.s 			page 2


  28      93870700 
  29 0024 13071000 		li	a4,1
  30 0028 23A0E700 		sw	a4,0(a5)
  30:src/MemoryAllocator.cpp ****     headAllocated = 0;
  31              		.loc 1 30 5 is_stmt 1
  32              		.loc 1 30 19 is_stmt 0
  33 002c 23B40700 		sd	zero,8(a5)
  31:src/MemoryAllocator.cpp ****     tailAllocated = 0;
  34              		.loc 1 31 5 is_stmt 1
  35              		.loc 1 31 19 is_stmt 0
  36 0030 23B80700 		sd	zero,16(a5)
  32:src/MemoryAllocator.cpp ****     headFree = (BlockHeader*)HEAP_START_ADDR;
  37              		.loc 1 32 5 is_stmt 1
  38              		.loc 1 32 14 is_stmt 0
  39 0034 17070000 		la	a4,HEAP_START_ADDR
  39      03370700 
  40 003c 03370700 		ld	a4,0(a4)
  41 0040 23BCE700 		sd	a4,24(a5)
  33:src/MemoryAllocator.cpp ****     headFree->next = 0;
  42              		.loc 1 33 5 is_stmt 1
  43              		.loc 1 33 20 is_stmt 0
  44 0044 23340700 		sd	zero,8(a4)
  34:src/MemoryAllocator.cpp ****     headFree->prev = 0;
  45              		.loc 1 34 5 is_stmt 1
  46              		.loc 1 34 20 is_stmt 0
  47 0048 23380700 		sd	zero,16(a4)
  35:src/MemoryAllocator.cpp ****     headFree->size = (size_t)((size_t)HEAP_END_ADDR - (size_t)HEAP_START_ADDR + 1 - sizeof(BlockHea
  48              		.loc 1 35 5 is_stmt 1
  49              		.loc 1 35 53 is_stmt 0
  50 004c 97060000 		la	a3,HEAP_END_ADDR
  50      83B60600 
  51 0054 83B60600 		ld	a3,0(a3)
  52 0058 B386E640 		sub	a3,a3,a4
  53              		.loc 1 35 83
  54 005c 938696FE 		addi	a3,a3,-23
  55              		.loc 1 35 20
  56 0060 2330D700 		sd	a3,0(a4)
  36:src/MemoryAllocator.cpp ****     tailFree = headFree;
  57              		.loc 1 36 5 is_stmt 1
  58              		.loc 1 36 14 is_stmt 0
  59 0064 03B78701 		ld	a4,24(a5)
  60 0068 23B0E702 		sd	a4,32(a5)
  61              	.L1:
  37:src/MemoryAllocator.cpp **** }
  62              		.loc 1 37 1
  63 006c 03348100 		ld	s0,8(sp)
  64              		.cfi_restore 8
  65              		.cfi_def_cfa 2, 16
  66 0070 13010101 		addi	sp,sp,16
  67              		.cfi_def_cfa_offset 0
  68 0074 67800000 		jr	ra
  69              		.cfi_endproc
  70              	.LFE27:
  72              		.align	2
  73              		.globl	_ZN15MemoryAllocator17insertAllFragmentEPvmS0_
  75              	_ZN15MemoryAllocator17insertAllFragmentEPvmS0_:
  76              	.LFB28:
GAS LISTING /tmp/ccNTdQVw.s 			page 3


  38:src/MemoryAllocator.cpp **** 
  39:src/MemoryAllocator.cpp **** void MemoryAllocator::insertAllFragment(void *addr, size_t size, void* nxtAddr)
  40:src/MemoryAllocator.cpp **** {
  77              		.loc 1 40 1 is_stmt 1
  78              		.cfi_startproc
  79              	.LVL0:
  80 0078 130101FD 		addi	sp,sp,-48
  81              		.cfi_def_cfa_offset 48
  82 007c 23341102 		sd	ra,40(sp)
  83 0080 23308102 		sd	s0,32(sp)
  84 0084 233C9100 		sd	s1,24(sp)
  85 0088 23382101 		sd	s2,16(sp)
  86 008c 23343101 		sd	s3,8(sp)
  87              		.cfi_offset 1, -8
  88              		.cfi_offset 8, -16
  89              		.cfi_offset 9, -24
  90              		.cfi_offset 18, -32
  91              		.cfi_offset 19, -40
  92 0090 13040103 		addi	s0,sp,48
  93              		.cfi_def_cfa 8, 0
  94 0094 93040500 		mv	s1,a0
  95 0098 93890500 		mv	s3,a1
  96 009c 13090600 		mv	s2,a2
  41:src/MemoryAllocator.cpp ****     initMemory();
  97              		.loc 1 41 5
  98              		.loc 1 41 15 is_stmt 0
  99 00a0 97000000 		call	_ZN15MemoryAllocator10initMemoryEv
  99      E7800000 
 100              	.LVL1:
  42:src/MemoryAllocator.cpp ****     BlockHeader* newAllocated = (BlockHeader*)addr;
 101              		.loc 1 42 5 is_stmt 1
  43:src/MemoryAllocator.cpp ****     newAllocated->next = 0;
 102              		.loc 1 43 5
 103              		.loc 1 43 24 is_stmt 0
 104 00a8 23B40400 		sd	zero,8(s1)
  44:src/MemoryAllocator.cpp ****     newAllocated->prev = 0;
 105              		.loc 1 44 5 is_stmt 1
 106              		.loc 1 44 24 is_stmt 0
 107 00ac 23B80400 		sd	zero,16(s1)
  45:src/MemoryAllocator.cpp ****     newAllocated->size = size;
 108              		.loc 1 45 5 is_stmt 1
 109              		.loc 1 45 24 is_stmt 0
 110 00b0 23B03401 		sd	s3,0(s1)
  46:src/MemoryAllocator.cpp ****     if(headAllocated == 0)
 111              		.loc 1 46 5 is_stmt 1
 112              	.LBB2:
 113              		.loc 1 46 22 is_stmt 0
 114 00b4 97070000 		ld	a5,.LANCHOR0+8
 114      83B70700 
 115              		.loc 1 46 5
 116 00bc 638E0702 		beqz	a5,.L10
 117              	.LBE2:
  47:src/MemoryAllocator.cpp ****     {
  48:src/MemoryAllocator.cpp ****         headAllocated = tailAllocated = newAllocated;
  49:src/MemoryAllocator.cpp ****     }
  50:src/MemoryAllocator.cpp ****     else if(nxtAddr <= HEAP_END_ADDR)
 118              		.loc 1 50 10 is_stmt 1
GAS LISTING /tmp/ccNTdQVw.s 			page 4


 119              	.LBB6:
 120              	.LBB3:
 121              		.loc 1 50 21 is_stmt 0
 122 00c0 17070000 		la	a4,HEAP_END_ADDR
 122      03370700 
 123 00c8 03370700 		ld	a4,0(a4)
 124              		.loc 1 50 10
 125 00cc 63602705 		bltu	a4,s2,.L7
 126              	.LBB4:
  51:src/MemoryAllocator.cpp ****     {
  52:src/MemoryAllocator.cpp ****         BlockHeader* allFrag = (BlockHeader*)nxtAddr;
 127              		.loc 1 52 9 is_stmt 1
 128              	.LVL2:
  53:src/MemoryAllocator.cpp ****         newAllocated->prev = allFrag->prev;
 129              		.loc 1 53 9
 130              		.loc 1 53 39 is_stmt 0
 131 00d0 03370901 		ld	a4,16(s2)
 132              		.loc 1 53 28
 133 00d4 23B8E400 		sd	a4,16(s1)
  54:src/MemoryAllocator.cpp ****         if(allFrag->prev) allFrag->prev->next = newAllocated;
 134              		.loc 1 54 9 is_stmt 1
 135 00d8 63040700 		beqz	a4,.L8
 136              		.loc 1 54 27 discriminator 1
 137              		.loc 1 54 47 is_stmt 0 discriminator 1
 138 00dc 23349700 		sd	s1,8(a4)
 139              	.L8:
  55:src/MemoryAllocator.cpp ****         newAllocated->next = allFrag;
 140              		.loc 1 55 9 is_stmt 1
 141              		.loc 1 55 28 is_stmt 0
 142 00e0 23B42401 		sd	s2,8(s1)
  56:src/MemoryAllocator.cpp ****         allFrag->prev = newAllocated;
 143              		.loc 1 56 9 is_stmt 1
 144              		.loc 1 56 23 is_stmt 0
 145 00e4 23389900 		sd	s1,16(s2)
  57:src/MemoryAllocator.cpp ****         if(allFrag == headAllocated)
 146              		.loc 1 57 9 is_stmt 1
 147 00e8 639E2703 		bne	a5,s2,.L4
  58:src/MemoryAllocator.cpp ****             headAllocated = newAllocated;
 148              		.loc 1 58 13
 149              		.loc 1 58 27 is_stmt 0
 150 00ec 97070000 		sd	s1,.LANCHOR0+8,a5
 150      23B09700 
 151 00f4 6F000003 		j	.L4
 152              	.LVL3:
 153              	.L10:
 154              	.LBE4:
 155              	.LBE3:
  48:src/MemoryAllocator.cpp ****     }
 156              		.loc 1 48 9 is_stmt 1
  48:src/MemoryAllocator.cpp ****     }
 157              		.loc 1 48 39 is_stmt 0
 158 00f8 97070000 		lla	a5,.LANCHOR0
 158      93870700 
 159 0100 23B89700 		sd	s1,16(a5)
  48:src/MemoryAllocator.cpp ****     }
 160              		.loc 1 48 23
 161 0104 23B49700 		sd	s1,8(a5)
GAS LISTING /tmp/ccNTdQVw.s 			page 5


 162 0108 6F00C001 		j	.L4
 163              	.L7:
 164              	.LBB5:
  59:src/MemoryAllocator.cpp ****     }
  60:src/MemoryAllocator.cpp ****     else
  61:src/MemoryAllocator.cpp ****     {
  62:src/MemoryAllocator.cpp ****         tailAllocated->next = newAllocated;
 165              		.loc 1 62 9 is_stmt 1
 166              		.loc 1 62 24 is_stmt 0
 167 010c 97070000 		lla	a5,.LANCHOR0
 167      93870700 
 168 0114 03B70701 		ld	a4,16(a5)
 169              		.loc 1 62 29
 170 0118 23349700 		sd	s1,8(a4)
  63:src/MemoryAllocator.cpp ****         newAllocated->prev = tailAllocated;
 171              		.loc 1 63 9 is_stmt 1
 172              		.loc 1 63 28 is_stmt 0
 173 011c 23B8E400 		sd	a4,16(s1)
  64:src/MemoryAllocator.cpp ****         tailAllocated = newAllocated;
 174              		.loc 1 64 9 is_stmt 1
 175              		.loc 1 64 23 is_stmt 0
 176 0120 23B89700 		sd	s1,16(a5)
 177              	.L4:
 178              	.LBE5:
 179              	.LBE6:
  65:src/MemoryAllocator.cpp ****     }
  66:src/MemoryAllocator.cpp **** }
 180              		.loc 1 66 1
 181 0124 83308102 		ld	ra,40(sp)
 182              		.cfi_restore 1
 183 0128 03340102 		ld	s0,32(sp)
 184              		.cfi_restore 8
 185              		.cfi_def_cfa 2, 48
 186 012c 83348101 		ld	s1,24(sp)
 187              		.cfi_restore 9
 188              	.LVL4:
 189 0130 03390101 		ld	s2,16(sp)
 190              		.cfi_restore 18
 191              	.LVL5:
 192 0134 83398100 		ld	s3,8(sp)
 193              		.cfi_restore 19
 194              	.LVL6:
 195 0138 13010103 		addi	sp,sp,48
 196              		.cfi_def_cfa_offset 0
 197 013c 67800000 		jr	ra
 198              		.cfi_endproc
 199              	.LFE28:
 201              		.align	2
 202              		.globl	_ZN15MemoryAllocator21tryToAllocateFragmentEm
 204              	_ZN15MemoryAllocator21tryToAllocateFragmentEm:
 205              	.LFB29:
  67:src/MemoryAllocator.cpp **** 
  68:src/MemoryAllocator.cpp **** void* MemoryAllocator::tryToAllocateFragment(size_t size)
  69:src/MemoryAllocator.cpp **** {
 206              		.loc 1 69 1 is_stmt 1
 207              		.cfi_startproc
 208              	.LVL7:
GAS LISTING /tmp/ccNTdQVw.s 			page 6


 209 0140 130101FE 		addi	sp,sp,-32
 210              		.cfi_def_cfa_offset 32
 211 0144 233C1100 		sd	ra,24(sp)
 212 0148 23388100 		sd	s0,16(sp)
 213 014c 23349100 		sd	s1,8(sp)
 214 0150 23302101 		sd	s2,0(sp)
 215              		.cfi_offset 1, -8
 216              		.cfi_offset 8, -16
 217              		.cfi_offset 9, -24
 218              		.cfi_offset 18, -32
 219 0154 13040102 		addi	s0,sp,32
 220              		.cfi_def_cfa 8, 0
 221 0158 13090500 		mv	s2,a0
  70:src/MemoryAllocator.cpp ****     initMemory();
 222              		.loc 1 70 5
 223              		.loc 1 70 15 is_stmt 0
 224 015c 97000000 		call	_ZN15MemoryAllocator10initMemoryEv
 224      E7800000 
 225              	.LVL8:
  71:src/MemoryAllocator.cpp ****     uint64 retval = 0;
 226              		.loc 1 71 5 is_stmt 1
  72:src/MemoryAllocator.cpp ****     BlockHeader* prev = 0;
 227              		.loc 1 72 5
  73:src/MemoryAllocator.cpp ****     BlockHeader* curr = headFree;
 228              		.loc 1 73 5
 229              		.loc 1 73 18 is_stmt 0
 230 0164 97040000 		ld	s1,.LANCHOR0+24
 230      83B40400 
 231              	.LVL9:
  72:src/MemoryAllocator.cpp ****     BlockHeader* prev = 0;
 232              		.loc 1 72 18
 233 016c 13070000 		li	a4,0
 234              	.LVL10:
 235              	.L24:
  74:src/MemoryAllocator.cpp ****     while(curr != 0)
 236              		.loc 1 74 5 is_stmt 1
 237              		.loc 1 74 16
 238 0170 63860414 		beqz	s1,.L25
 239              	.LBB7:
  75:src/MemoryAllocator.cpp ****     {
  76:src/MemoryAllocator.cpp ****         if(curr->size >= size)
 240              		.loc 1 76 9
 241              	.LBB8:
 242              		.loc 1 76 18 is_stmt 0
 243 0174 83B70400 		ld	a5,0(s1)
 244              		.loc 1 76 9
 245 0178 63F82701 		bgeu	a5,s2,.L28
 246              	.LBE8:
  77:src/MemoryAllocator.cpp ****         {
  78:src/MemoryAllocator.cpp ****             void* oldAddr = curr;
  79:src/MemoryAllocator.cpp ****             void* newAddr = ((char*)curr + size + sizeof(BlockHeader));
  80:src/MemoryAllocator.cpp ****             void* nxtAllocatedAdr = ((char*)curr + curr->size + sizeof(BlockHeader));
  81:src/MemoryAllocator.cpp **** 
  82:src/MemoryAllocator.cpp ****             if(newAddr <= HEAP_END_ADDR)
  83:src/MemoryAllocator.cpp ****             {
  84:src/MemoryAllocator.cpp ****                 uint64 size2 = curr->size - size;
  85:src/MemoryAllocator.cpp **** 
GAS LISTING /tmp/ccNTdQVw.s 			page 7


  86:src/MemoryAllocator.cpp ****                 if(size2 > sizeof(BlockHeader))
  87:src/MemoryAllocator.cpp ****                 {
  88:src/MemoryAllocator.cpp ****                     BlockHeader *newFree = (BlockHeader *) newAddr;
  89:src/MemoryAllocator.cpp ****                     if(curr == tailFree) tailFree = newFree;
  90:src/MemoryAllocator.cpp **** 
  91:src/MemoryAllocator.cpp ****                     newFree->next = curr->next;
  92:src/MemoryAllocator.cpp ****                     if(newFree->next) newFree->next->prev = newFree;
  93:src/MemoryAllocator.cpp ****                     newFree->size = size2 - sizeof(BlockHeader);
  94:src/MemoryAllocator.cpp ****                     if (prev != 0)
  95:src/MemoryAllocator.cpp ****                     {
  96:src/MemoryAllocator.cpp ****                         prev->next = newFree;
  97:src/MemoryAllocator.cpp ****                         newFree->prev = prev;
  98:src/MemoryAllocator.cpp ****                     }
  99:src/MemoryAllocator.cpp ****                     else
 100:src/MemoryAllocator.cpp ****                     {
 101:src/MemoryAllocator.cpp ****                         headFree = newFree;
 102:src/MemoryAllocator.cpp ****                         if(headFree) headFree->prev = 0;
 103:src/MemoryAllocator.cpp ****                     }
 104:src/MemoryAllocator.cpp ****                 }
 105:src/MemoryAllocator.cpp ****                 else
 106:src/MemoryAllocator.cpp ****                 {
 107:src/MemoryAllocator.cpp ****                     size+=size2;
 108:src/MemoryAllocator.cpp ****                     if(prev != 0)
 109:src/MemoryAllocator.cpp ****                     {
 110:src/MemoryAllocator.cpp ****                         prev->next = curr->next;
 111:src/MemoryAllocator.cpp ****                         if(prev->next)
 112:src/MemoryAllocator.cpp ****                         {
 113:src/MemoryAllocator.cpp ****                             prev->next->prev = prev;
 114:src/MemoryAllocator.cpp ****                             if(curr == tailFree) tailFree = prev->next;
 115:src/MemoryAllocator.cpp ****                         }
 116:src/MemoryAllocator.cpp ****                         else
 117:src/MemoryAllocator.cpp ****                         {
 118:src/MemoryAllocator.cpp ****                             tailFree = prev;
 119:src/MemoryAllocator.cpp ****                         }
 120:src/MemoryAllocator.cpp ****                     }
 121:src/MemoryAllocator.cpp ****                     else
 122:src/MemoryAllocator.cpp ****                     {
 123:src/MemoryAllocator.cpp ****                         headFree = curr->next;
 124:src/MemoryAllocator.cpp ****                         if(headFree) headFree->prev = 0;
 125:src/MemoryAllocator.cpp ****                         else tailFree = headFree;
 126:src/MemoryAllocator.cpp ****                     }
 127:src/MemoryAllocator.cpp ****                 }
 128:src/MemoryAllocator.cpp ****             }
 129:src/MemoryAllocator.cpp ****             else
 130:src/MemoryAllocator.cpp ****             {
 131:src/MemoryAllocator.cpp ****                 if(prev != 0)
 132:src/MemoryAllocator.cpp ****                 {
 133:src/MemoryAllocator.cpp ****                     prev->next = 0;
 134:src/MemoryAllocator.cpp ****                     tailFree = prev;
 135:src/MemoryAllocator.cpp ****                 }
 136:src/MemoryAllocator.cpp ****                 else
 137:src/MemoryAllocator.cpp ****                 {
 138:src/MemoryAllocator.cpp ****                     headFree = tailFree = 0;
 139:src/MemoryAllocator.cpp ****                 }
 140:src/MemoryAllocator.cpp ****             }
 141:src/MemoryAllocator.cpp ****             insertAllFragment(oldAddr,size,nxtAllocatedAdr);
 142:src/MemoryAllocator.cpp ****             //insertNewAllocatedFragment(oldAddr, size);
GAS LISTING /tmp/ccNTdQVw.s 			page 8


 143:src/MemoryAllocator.cpp ****             uint64 oldA = (uint64)((char*)oldAddr + sizeof(BlockHeader));
 144:src/MemoryAllocator.cpp ****             retval = oldA;
 145:src/MemoryAllocator.cpp ****             break;
 146:src/MemoryAllocator.cpp ****         }
 147:src/MemoryAllocator.cpp ****         prev = curr;
 247              		.loc 1 147 9 is_stmt 1
 248              	.LVL11:
 148:src/MemoryAllocator.cpp ****         curr = curr->next;
 249              		.loc 1 148 9
 147:src/MemoryAllocator.cpp ****         curr = curr->next;
 250              		.loc 1 147 14 is_stmt 0
 251 017c 13870400 		mv	a4,s1
 252              		.loc 1 148 14
 253 0180 83B48400 		ld	s1,8(s1)
 254              	.LVL12:
 255              	.LBE7:
  74:src/MemoryAllocator.cpp ****     {
 256              		.loc 1 74 5
 257 0184 6FF0DFFE 		j	.L24
 258              	.L28:
 259              	.LBB16:
 260              	.LBB15:
 261              	.LBB9:
  78:src/MemoryAllocator.cpp ****             void* newAddr = ((char*)curr + size + sizeof(BlockHeader));
 262              		.loc 1 78 13 is_stmt 1
 263              	.LVL13:
  79:src/MemoryAllocator.cpp ****             void* nxtAllocatedAdr = ((char*)curr + curr->size + sizeof(BlockHeader));
 264              		.loc 1 79 13
  79:src/MemoryAllocator.cpp ****             void* nxtAllocatedAdr = ((char*)curr + curr->size + sizeof(BlockHeader));
 265              		.loc 1 79 49 is_stmt 0
 266 0188 93068901 		addi	a3,s2,24
  79:src/MemoryAllocator.cpp ****             void* nxtAllocatedAdr = ((char*)curr + curr->size + sizeof(BlockHeader));
 267              		.loc 1 79 19
 268 018c B386D400 		add	a3,s1,a3
 269              	.LVL14:
  80:src/MemoryAllocator.cpp **** 
 270              		.loc 1 80 13 is_stmt 1
  80:src/MemoryAllocator.cpp **** 
 271              		.loc 1 80 63 is_stmt 0
 272 0190 13868701 		addi	a2,a5,24
  80:src/MemoryAllocator.cpp **** 
 273              		.loc 1 80 19
 274 0194 3386C400 		add	a2,s1,a2
 275              	.LVL15:
  82:src/MemoryAllocator.cpp ****             {
 276              		.loc 1 82 13 is_stmt 1
 277              	.LBB10:
  82:src/MemoryAllocator.cpp ****             {
 278              		.loc 1 82 24 is_stmt 0
 279 0198 97050000 		la	a1,HEAP_END_ADDR
 279      83B50500 
 280 01a0 83B50500 		ld	a1,0(a1)
  82:src/MemoryAllocator.cpp ****             {
 281              		.loc 1 82 13
 282 01a4 63EED50C 		bltu	a1,a3,.L14
 283              	.LBB11:
  84:src/MemoryAllocator.cpp **** 
GAS LISTING /tmp/ccNTdQVw.s 			page 9


 284              		.loc 1 84 17 is_stmt 1
  84:src/MemoryAllocator.cpp **** 
 285              		.loc 1 84 24 is_stmt 0
 286 01a8 B3852741 		sub	a1,a5,s2
 287              	.LVL16:
  86:src/MemoryAllocator.cpp ****                 {
 288              		.loc 1 86 17 is_stmt 1
 289              	.LBB12:
 290 01ac 13058001 		li	a0,24
 291 01b0 637CB504 		bleu	a1,a0,.L15
 292              	.LBB13:
  88:src/MemoryAllocator.cpp ****                     if(curr == tailFree) tailFree = newFree;
 293              		.loc 1 88 21
 294              	.LVL17:
  89:src/MemoryAllocator.cpp **** 
 295              		.loc 1 89 21
  89:src/MemoryAllocator.cpp **** 
 296              		.loc 1 89 29 is_stmt 0
 297 01b4 97070000 		ld	a5,.LANCHOR0+32
 297      83B70700 
  89:src/MemoryAllocator.cpp **** 
 298              		.loc 1 89 21
 299 01bc 63869702 		beq	a5,s1,.L29
 300              	.L16:
  91:src/MemoryAllocator.cpp ****                     if(newFree->next) newFree->next->prev = newFree;
 301              		.loc 1 91 21 is_stmt 1
  91:src/MemoryAllocator.cpp ****                     if(newFree->next) newFree->next->prev = newFree;
 302              		.loc 1 91 43 is_stmt 0
 303 01c0 83B78400 		ld	a5,8(s1)
  91:src/MemoryAllocator.cpp ****                     if(newFree->next) newFree->next->prev = newFree;
 304              		.loc 1 91 35
 305 01c4 23B4F600 		sd	a5,8(a3)
  92:src/MemoryAllocator.cpp ****                     newFree->size = size2 - sizeof(BlockHeader);
 306              		.loc 1 92 21 is_stmt 1
 307 01c8 63840700 		beqz	a5,.L17
  92:src/MemoryAllocator.cpp ****                     newFree->size = size2 - sizeof(BlockHeader);
 308              		.loc 1 92 39 discriminator 1
  92:src/MemoryAllocator.cpp ****                     newFree->size = size2 - sizeof(BlockHeader);
 309              		.loc 1 92 59 is_stmt 0 discriminator 1
 310 01cc 23B8D700 		sd	a3,16(a5)
 311              	.L17:
  93:src/MemoryAllocator.cpp ****                     if (prev != 0)
 312              		.loc 1 93 21 is_stmt 1
  93:src/MemoryAllocator.cpp ****                     if (prev != 0)
 313              		.loc 1 93 43 is_stmt 0
 314 01d0 938585FE 		addi	a1,a1,-24
 315              	.LVL18:
  93:src/MemoryAllocator.cpp ****                     if (prev != 0)
 316              		.loc 1 93 35
 317 01d4 23B0B600 		sd	a1,0(a3)
  94:src/MemoryAllocator.cpp ****                     {
 318              		.loc 1 94 21 is_stmt 1
 319 01d8 630E0700 		beqz	a4,.L18
  96:src/MemoryAllocator.cpp ****                         newFree->prev = prev;
 320              		.loc 1 96 25
  96:src/MemoryAllocator.cpp ****                         newFree->prev = prev;
 321              		.loc 1 96 36 is_stmt 0
GAS LISTING /tmp/ccNTdQVw.s 			page 10


 322 01dc 2334D700 		sd	a3,8(a4)
  97:src/MemoryAllocator.cpp ****                     }
 323              		.loc 1 97 25 is_stmt 1
  97:src/MemoryAllocator.cpp ****                     }
 324              		.loc 1 97 39 is_stmt 0
 325 01e0 23B8E600 		sd	a4,16(a3)
 326 01e4 6F00C00A 		j	.L19
 327              	.LVL19:
 328              	.L29:
  89:src/MemoryAllocator.cpp **** 
 329              		.loc 1 89 42 is_stmt 1 discriminator 1
  89:src/MemoryAllocator.cpp **** 
 330              		.loc 1 89 51 is_stmt 0 discriminator 1
 331 01e8 97070000 		sd	a3,.LANCHOR0+32,a5
 331      23B0D700 
 332 01f0 6FF01FFD 		j	.L16
 333              	.LVL20:
 334              	.L18:
 101:src/MemoryAllocator.cpp ****                         if(headFree) headFree->prev = 0;
 335              		.loc 1 101 25 is_stmt 1
 101:src/MemoryAllocator.cpp ****                         if(headFree) headFree->prev = 0;
 336              		.loc 1 101 34 is_stmt 0
 337 01f4 97070000 		sd	a3,.LANCHOR0+24,a5
 337      23B0D700 
 102:src/MemoryAllocator.cpp ****                     }
 338              		.loc 1 102 25 is_stmt 1
 339 01fc 638A0608 		beqz	a3,.L19
 102:src/MemoryAllocator.cpp ****                     }
 340              		.loc 1 102 38 discriminator 1
 102:src/MemoryAllocator.cpp ****                     }
 341              		.loc 1 102 53 is_stmt 0 discriminator 1
 342 0200 23B80600 		sd	zero,16(a3)
 343 0204 6F00C008 		j	.L19
 344              	.LVL21:
 345              	.L15:
 346              	.LBE13:
 107:src/MemoryAllocator.cpp ****                     if(prev != 0)
 347              		.loc 1 107 21 is_stmt 1
 108:src/MemoryAllocator.cpp ****                     {
 348              		.loc 1 108 21
 349 0208 63060704 		beqz	a4,.L20
 110:src/MemoryAllocator.cpp ****                         if(prev->next)
 350              		.loc 1 110 25
 110:src/MemoryAllocator.cpp ****                         if(prev->next)
 351              		.loc 1 110 44 is_stmt 0
 352 020c 83B68400 		ld	a3,8(s1)
 353              	.LVL22:
 110:src/MemoryAllocator.cpp ****                         if(prev->next)
 354              		.loc 1 110 36
 355 0210 2334D700 		sd	a3,8(a4)
 111:src/MemoryAllocator.cpp ****                         {
 356              		.loc 1 111 25 is_stmt 1
 357 0214 63880602 		beqz	a3,.L21
 113:src/MemoryAllocator.cpp ****                             if(curr == tailFree) tailFree = prev->next;
 358              		.loc 1 113 29
 113:src/MemoryAllocator.cpp ****                             if(curr == tailFree) tailFree = prev->next;
 359              		.loc 1 113 46 is_stmt 0
GAS LISTING /tmp/ccNTdQVw.s 			page 11


 360 0218 23B8E600 		sd	a4,16(a3)
 114:src/MemoryAllocator.cpp ****                         }
 361              		.loc 1 114 29 is_stmt 1
 114:src/MemoryAllocator.cpp ****                         }
 362              		.loc 1 114 37 is_stmt 0
 363 021c 97060000 		ld	a3,.LANCHOR0+32
 363      83B60600 
 114:src/MemoryAllocator.cpp ****                         }
 364              		.loc 1 114 29
 365 0224 63869600 		beq	a3,s1,.L30
 107:src/MemoryAllocator.cpp ****                     if(prev != 0)
 366              		.loc 1 107 25
 367 0228 13890700 		mv	s2,a5
 368              	.LVL23:
 369 022c 6F004006 		j	.L19
 370              	.LVL24:
 371              	.L30:
 114:src/MemoryAllocator.cpp ****                         }
 372              		.loc 1 114 50 is_stmt 1 discriminator 1
 114:src/MemoryAllocator.cpp ****                         }
 373              		.loc 1 114 67 is_stmt 0 discriminator 1
 374 0230 03378700 		ld	a4,8(a4)
 375              	.LVL25:
 114:src/MemoryAllocator.cpp ****                         }
 376              		.loc 1 114 59 discriminator 1
 377 0234 97060000 		sd	a4,.LANCHOR0+32,a3
 377      23B0E600 
 107:src/MemoryAllocator.cpp ****                     if(prev != 0)
 378              		.loc 1 107 25 discriminator 1
 379 023c 13890700 		mv	s2,a5
 380              	.LVL26:
 381 0240 6F000005 		j	.L19
 382              	.LVL27:
 383              	.L21:
 118:src/MemoryAllocator.cpp ****                         }
 384              		.loc 1 118 29 is_stmt 1
 118:src/MemoryAllocator.cpp ****                         }
 385              		.loc 1 118 38 is_stmt 0
 386 0244 97060000 		sd	a4,.LANCHOR0+32,a3
 386      23B0E600 
 107:src/MemoryAllocator.cpp ****                     if(prev != 0)
 387              		.loc 1 107 25
 388 024c 13890700 		mv	s2,a5
 389              	.LVL28:
 390 0250 6F000004 		j	.L19
 391              	.LVL29:
 392              	.L20:
 123:src/MemoryAllocator.cpp ****                         if(headFree) headFree->prev = 0;
 393              		.loc 1 123 25 is_stmt 1
 123:src/MemoryAllocator.cpp ****                         if(headFree) headFree->prev = 0;
 394              		.loc 1 123 42 is_stmt 0
 395 0254 03B78400 		ld	a4,8(s1)
 396              	.LVL30:
 123:src/MemoryAllocator.cpp ****                         if(headFree) headFree->prev = 0;
 397              		.loc 1 123 34
 398 0258 97060000 		sd	a4,.LANCHOR0+24,a3
 398      23B0E600 
GAS LISTING /tmp/ccNTdQVw.s 			page 12


 399              	.LVL31:
 124:src/MemoryAllocator.cpp ****                         else tailFree = headFree;
 400              		.loc 1 124 25 is_stmt 1
 401 0260 63080700 		beqz	a4,.L22
 124:src/MemoryAllocator.cpp ****                         else tailFree = headFree;
 402              		.loc 1 124 38 discriminator 1
 124:src/MemoryAllocator.cpp ****                         else tailFree = headFree;
 403              		.loc 1 124 53 is_stmt 0 discriminator 1
 404 0264 23380700 		sd	zero,16(a4)
 107:src/MemoryAllocator.cpp ****                     if(prev != 0)
 405              		.loc 1 107 25 discriminator 1
 406 0268 13890700 		mv	s2,a5
 407              	.LVL32:
 408 026c 6F004002 		j	.L19
 409              	.LVL33:
 410              	.L22:
 125:src/MemoryAllocator.cpp ****                     }
 411              		.loc 1 125 30 is_stmt 1
 125:src/MemoryAllocator.cpp ****                     }
 412              		.loc 1 125 39 is_stmt 0
 413 0270 97060000 		sd	a4,.LANCHOR0+32,a3
 413      23B0E600 
 107:src/MemoryAllocator.cpp ****                     if(prev != 0)
 414              		.loc 1 107 25
 415 0278 13890700 		mv	s2,a5
 416              	.LVL34:
 417 027c 6F004001 		j	.L19
 418              	.LVL35:
 419              	.L14:
 420              	.LBE12:
 421              	.LBE11:
 131:src/MemoryAllocator.cpp ****                 {
 422              		.loc 1 131 17 is_stmt 1
 423 0280 63040702 		beqz	a4,.L23
 133:src/MemoryAllocator.cpp ****                     tailFree = prev;
 424              		.loc 1 133 21
 133:src/MemoryAllocator.cpp ****                     tailFree = prev;
 425              		.loc 1 133 32 is_stmt 0
 426 0284 23340700 		sd	zero,8(a4)
 134:src/MemoryAllocator.cpp ****                 }
 427              		.loc 1 134 21 is_stmt 1
 134:src/MemoryAllocator.cpp ****                 }
 428              		.loc 1 134 30 is_stmt 0
 429 0288 97070000 		sd	a4,.LANCHOR0+32,a5
 429      23B0E700 
 430              	.LVL36:
 431              	.L19:
 432              	.LBE10:
 141:src/MemoryAllocator.cpp ****             //insertNewAllocatedFragment(oldAddr, size);
 433              		.loc 1 141 13 is_stmt 1
 141:src/MemoryAllocator.cpp ****             //insertNewAllocatedFragment(oldAddr, size);
 434              		.loc 1 141 30 is_stmt 0
 435 0290 93050900 		mv	a1,s2
 436 0294 13850400 		mv	a0,s1
 437 0298 97000000 		call	_ZN15MemoryAllocator17insertAllFragmentEPvmS0_
 437      E7800000 
 438              	.LVL37:
GAS LISTING /tmp/ccNTdQVw.s 			page 13


 143:src/MemoryAllocator.cpp ****             retval = oldA;
 439              		.loc 1 143 13 is_stmt 1
 143:src/MemoryAllocator.cpp ****             retval = oldA;
 440              		.loc 1 143 51 is_stmt 0
 441 02a0 13858401 		addi	a0,s1,24
 442              	.LVL38:
 144:src/MemoryAllocator.cpp ****             break;
 443              		.loc 1 144 13 is_stmt 1
 145:src/MemoryAllocator.cpp ****         }
 444              		.loc 1 145 13
 445 02a4 6F00C001 		j	.L12
 446              	.LVL39:
 447              	.L23:
 448              	.LBB14:
 138:src/MemoryAllocator.cpp ****                 }
 449              		.loc 1 138 21
 138:src/MemoryAllocator.cpp ****                 }
 450              		.loc 1 138 41 is_stmt 0
 451 02a8 97070000 		lla	a5,.LANCHOR0
 451      93870700 
 452 02b0 23B00702 		sd	zero,32(a5)
 138:src/MemoryAllocator.cpp ****                 }
 453              		.loc 1 138 30
 454 02b4 23BC0700 		sd	zero,24(a5)
 455 02b8 6FF09FFD 		j	.L19
 456              	.LVL40:
 457              	.L25:
 458              	.LBE14:
 459              	.LBE9:
 460              	.LBE15:
 461              	.LBE16:
  71:src/MemoryAllocator.cpp ****     BlockHeader* prev = 0;
 462              		.loc 1 71 12
 463 02bc 13050000 		li	a0,0
 464              	.LVL41:
 465              	.L12:
 149:src/MemoryAllocator.cpp ****     }
 150:src/MemoryAllocator.cpp **** 
 151:src/MemoryAllocator.cpp ****     return (void*)retval;
 466              		.loc 1 151 5 is_stmt 1
 152:src/MemoryAllocator.cpp **** }
 467              		.loc 1 152 1 is_stmt 0
 468 02c0 83308101 		ld	ra,24(sp)
 469              		.cfi_restore 1
 470 02c4 03340101 		ld	s0,16(sp)
 471              		.cfi_restore 8
 472              		.cfi_def_cfa 2, 32
 473 02c8 83348100 		ld	s1,8(sp)
 474              		.cfi_restore 9
 475              	.LVL42:
 476 02cc 03390100 		ld	s2,0(sp)
 477              		.cfi_restore 18
 478              	.LVL43:
 479 02d0 13010102 		addi	sp,sp,32
 480              		.cfi_def_cfa_offset 0
 481 02d4 67800000 		jr	ra
 482              		.cfi_endproc
GAS LISTING /tmp/ccNTdQVw.s 			page 14


 483              	.LFE29:
 485              		.align	2
 486              		.globl	_ZN15MemoryAllocator9mem_allocEm
 488              	_ZN15MemoryAllocator9mem_allocEm:
 489              	.LFB25:
  16:src/MemoryAllocator.cpp ****     return tryToAllocateFragment(size);
 490              		.loc 1 16 1 is_stmt 1
 491              		.cfi_startproc
 492              	.LVL44:
 493 02d8 130101FF 		addi	sp,sp,-16
 494              		.cfi_def_cfa_offset 16
 495 02dc 23341100 		sd	ra,8(sp)
 496 02e0 23308100 		sd	s0,0(sp)
 497              		.cfi_offset 1, -8
 498              		.cfi_offset 8, -16
 499 02e4 13040101 		addi	s0,sp,16
 500              		.cfi_def_cfa 8, 0
  17:src/MemoryAllocator.cpp **** }
 501              		.loc 1 17 5
  17:src/MemoryAllocator.cpp **** }
 502              		.loc 1 17 33 is_stmt 0
 503 02e8 97000000 		call	_ZN15MemoryAllocator21tryToAllocateFragmentEm
 503      E7800000 
 504              	.LVL45:
  18:src/MemoryAllocator.cpp **** 
 505              		.loc 1 18 1
 506 02f0 83308100 		ld	ra,8(sp)
 507              		.cfi_restore 1
 508 02f4 03340100 		ld	s0,0(sp)
 509              		.cfi_restore 8
 510              		.cfi_def_cfa 2, 16
 511 02f8 13010101 		addi	sp,sp,16
 512              		.cfi_def_cfa_offset 0
 513 02fc 67800000 		jr	ra
 514              		.cfi_endproc
 515              	.LFE25:
 517              		.align	2
 518              		.globl	_ZN15MemoryAllocator20insertNewFreeSegmentEPvm
 520              	_ZN15MemoryAllocator20insertNewFreeSegmentEPvm:
 521              	.LFB30:
 153:src/MemoryAllocator.cpp **** 
 154:src/MemoryAllocator.cpp **** void MemoryAllocator::insertNewFreeSegment(void* addr, size_t size)
 155:src/MemoryAllocator.cpp **** {
 522              		.loc 1 155 1 is_stmt 1
 523              		.cfi_startproc
 524              	.LVL46:
 525 0300 130101FE 		addi	sp,sp,-32
 526              		.cfi_def_cfa_offset 32
 527 0304 233C1100 		sd	ra,24(sp)
 528 0308 23388100 		sd	s0,16(sp)
 529 030c 23349100 		sd	s1,8(sp)
 530 0310 23302101 		sd	s2,0(sp)
 531              		.cfi_offset 1, -8
 532              		.cfi_offset 8, -16
 533              		.cfi_offset 9, -24
 534              		.cfi_offset 18, -32
 535 0314 13040102 		addi	s0,sp,32
GAS LISTING /tmp/ccNTdQVw.s 			page 15


 536              		.cfi_def_cfa 8, 0
 537 0318 93040500 		mv	s1,a0
 538 031c 13890500 		mv	s2,a1
 156:src/MemoryAllocator.cpp ****     initMemory();
 539              		.loc 1 156 5
 540              		.loc 1 156 15 is_stmt 0
 541 0320 97000000 		call	_ZN15MemoryAllocator10initMemoryEv
 541      E7800000 
 542              	.LVL47:
 157:src/MemoryAllocator.cpp ****     BlockHeader* prev = 0;
 543              		.loc 1 157 5 is_stmt 1
 158:src/MemoryAllocator.cpp ****     BlockHeader* curr = headFree;
 544              		.loc 1 158 5
 545              		.loc 1 158 18 is_stmt 0
 546 0328 97070000 		ld	a5,.LANCHOR0+24
 546      83B70700 
 547              	.LVL48:
 159:src/MemoryAllocator.cpp ****     BlockHeader* newSegment = (BlockHeader*)addr;
 548              		.loc 1 159 5 is_stmt 1
 160:src/MemoryAllocator.cpp ****     newSegment->size = size;
 549              		.loc 1 160 5
 550              		.loc 1 160 22 is_stmt 0
 551 0330 23B02401 		sd	s2,0(s1)
 161:src/MemoryAllocator.cpp ****     newSegment->next = 0;
 552              		.loc 1 161 5 is_stmt 1
 553              		.loc 1 161 22 is_stmt 0
 554 0334 23B40400 		sd	zero,8(s1)
 162:src/MemoryAllocator.cpp ****     newSegment->prev = 0;
 555              		.loc 1 162 5 is_stmt 1
 556              		.loc 1 162 22 is_stmt 0
 557 0338 23B80400 		sd	zero,16(s1)
 157:src/MemoryAllocator.cpp ****     BlockHeader* curr = headFree;
 558              		.loc 1 157 18
 559 033c 13070000 		li	a4,0
 560              	.LVL49:
 561              	.L36:
 163:src/MemoryAllocator.cpp ****     while(curr != 0)
 562              		.loc 1 163 5 is_stmt 1
 563              		.loc 1 163 16
 564 0340 638E0700 		beqz	a5,.L34
 164:src/MemoryAllocator.cpp ****     {
 165:src/MemoryAllocator.cpp ****         if((void*)curr > addr)
 565              		.loc 1 165 9
 566 0344 63E8F400 		bgtu	a5,s1,.L44
 166:src/MemoryAllocator.cpp ****         {
 167:src/MemoryAllocator.cpp ****             newSegment->next = curr;
 168:src/MemoryAllocator.cpp ****             curr->prev = newSegment;
 169:src/MemoryAllocator.cpp ****             break;
 170:src/MemoryAllocator.cpp ****         }
 171:src/MemoryAllocator.cpp **** 
 172:src/MemoryAllocator.cpp ****         prev = curr;
 567              		.loc 1 172 9
 568              	.LVL50:
 173:src/MemoryAllocator.cpp ****         curr = curr->next;
 569              		.loc 1 173 9
 172:src/MemoryAllocator.cpp ****         curr = curr->next;
 570              		.loc 1 172 14 is_stmt 0
GAS LISTING /tmp/ccNTdQVw.s 			page 16


 571 0348 13870700 		mv	a4,a5
 572              		.loc 1 173 14
 573 034c 83B78700 		ld	a5,8(a5)
 574              	.LVL51:
 163:src/MemoryAllocator.cpp ****     {
 575              		.loc 1 163 5
 576 0350 6FF01FFF 		j	.L36
 577              	.L44:
 167:src/MemoryAllocator.cpp ****             curr->prev = newSegment;
 578              		.loc 1 167 13 is_stmt 1
 167:src/MemoryAllocator.cpp ****             curr->prev = newSegment;
 579              		.loc 1 167 30 is_stmt 0
 580 0354 23B4F400 		sd	a5,8(s1)
 168:src/MemoryAllocator.cpp ****             break;
 581              		.loc 1 168 13 is_stmt 1
 168:src/MemoryAllocator.cpp ****             break;
 582              		.loc 1 168 24 is_stmt 0
 583 0358 23B89700 		sd	s1,16(a5)
 169:src/MemoryAllocator.cpp ****         }
 584              		.loc 1 169 13 is_stmt 1
 585              	.L34:
 174:src/MemoryAllocator.cpp ****     }
 175:src/MemoryAllocator.cpp **** 
 176:src/MemoryAllocator.cpp ****     if(prev == 0)
 586              		.loc 1 176 5
 587 035c 630A0704 		beqz	a4,.L45
 177:src/MemoryAllocator.cpp ****     {
 178:src/MemoryAllocator.cpp ****         headFree = newSegment;
 179:src/MemoryAllocator.cpp ****         newSegment->prev = 0;
 180:src/MemoryAllocator.cpp ****         if(curr == 0) tailFree = headFree;
 181:src/MemoryAllocator.cpp ****     }
 182:src/MemoryAllocator.cpp ****     else
 183:src/MemoryAllocator.cpp ****     {
 184:src/MemoryAllocator.cpp ****         prev->next = newSegment;
 588              		.loc 1 184 9
 589              		.loc 1 184 20 is_stmt 0
 590 0360 23349700 		sd	s1,8(a4)
 185:src/MemoryAllocator.cpp ****         newSegment->prev = prev;
 591              		.loc 1 185 9 is_stmt 1
 592              		.loc 1 185 26 is_stmt 0
 593 0364 23B8E400 		sd	a4,16(s1)
 186:src/MemoryAllocator.cpp ****         if(curr == 0) tailFree = newSegment;
 594              		.loc 1 186 9 is_stmt 1
 595 0368 63820706 		beqz	a5,.L46
 596              	.LVL52:
 597              	.L38:
 187:src/MemoryAllocator.cpp ****     }
 188:src/MemoryAllocator.cpp **** 
 189:src/MemoryAllocator.cpp ****     if(newSegment->next != 0 && (char*)newSegment->next == (char*)newSegment + newSegment->size + s
 598              		.loc 1 189 5
 599              		.loc 1 189 20 is_stmt 0
 600 036c 83B78400 		ld	a5,8(s1)
 601              		.loc 1 189 5
 602 0370 638A0700 		beqz	a5,.L39
 603              		.loc 1 189 92 discriminator 1
 604 0374 03B60400 		ld	a2,0(s1)
 605              		.loc 1 189 97 discriminator 1
GAS LISTING /tmp/ccNTdQVw.s 			page 17


 606 0378 93068601 		addi	a3,a2,24
 607 037c B386D400 		add	a3,s1,a3
 608              		.loc 1 189 30 discriminator 1
 609 0380 638CD704 		beq	a5,a3,.L47
 610              	.L39:
 190:src/MemoryAllocator.cpp ****     {
 191:src/MemoryAllocator.cpp ****         newSegment->size += newSegment->next->size + sizeof(BlockHeader);
 192:src/MemoryAllocator.cpp ****         newSegment->next = newSegment->next->next;
 193:src/MemoryAllocator.cpp ****         if(newSegment->next)
 194:src/MemoryAllocator.cpp ****         {
 195:src/MemoryAllocator.cpp ****             newSegment->next->prev = newSegment;
 196:src/MemoryAllocator.cpp ****         }
 197:src/MemoryAllocator.cpp ****         else
 198:src/MemoryAllocator.cpp ****         {
 199:src/MemoryAllocator.cpp ****             tailFree = newSegment;
 200:src/MemoryAllocator.cpp ****         }
 201:src/MemoryAllocator.cpp ****     }
 202:src/MemoryAllocator.cpp **** 
 203:src/MemoryAllocator.cpp ****     if(prev != 0 && (char*)newSegment == (char*)prev + prev->size + sizeof(BlockHeader))
 611              		.loc 1 203 5 is_stmt 1
 612 0384 630A0700 		beqz	a4,.L33
 613              		.loc 1 203 62 is_stmt 0 discriminator 1
 614 0388 83360700 		ld	a3,0(a4)
 615              		.loc 1 203 67 discriminator 1
 616 038c 93878601 		addi	a5,a3,24
 617 0390 B307F700 		add	a5,a4,a5
 618              		.loc 1 203 18 discriminator 1
 619 0394 638A9706 		beq	a5,s1,.L48
 620              	.L33:
 204:src/MemoryAllocator.cpp ****     {
 205:src/MemoryAllocator.cpp ****         prev->size+=newSegment->size + sizeof(BlockHeader);
 206:src/MemoryAllocator.cpp ****         prev->next = newSegment->next;
 207:src/MemoryAllocator.cpp ****         if(prev->next) prev->next->prev = prev;
 208:src/MemoryAllocator.cpp ****         else tailFree = prev;
 209:src/MemoryAllocator.cpp ****     }
 210:src/MemoryAllocator.cpp **** }
 621              		.loc 1 210 1
 622 0398 83308101 		ld	ra,24(sp)
 623              		.cfi_remember_state
 624              		.cfi_restore 1
 625 039c 03340101 		ld	s0,16(sp)
 626              		.cfi_restore 8
 627              		.cfi_def_cfa 2, 32
 628 03a0 83348100 		ld	s1,8(sp)
 629              		.cfi_restore 9
 630              	.LVL53:
 631 03a4 03390100 		ld	s2,0(sp)
 632              		.cfi_restore 18
 633              	.LVL54:
 634 03a8 13010102 		addi	sp,sp,32
 635              		.cfi_def_cfa_offset 0
 636 03ac 67800000 		jr	ra
 637              	.LVL55:
 638              	.L45:
 639              		.cfi_restore_state
 178:src/MemoryAllocator.cpp ****         newSegment->prev = 0;
 640              		.loc 1 178 9 is_stmt 1
GAS LISTING /tmp/ccNTdQVw.s 			page 18


 178:src/MemoryAllocator.cpp ****         newSegment->prev = 0;
 641              		.loc 1 178 18 is_stmt 0
 642 03b0 97060000 		sd	s1,.LANCHOR0+24,a3
 642      23B09600 
 179:src/MemoryAllocator.cpp ****         if(curr == 0) tailFree = headFree;
 643              		.loc 1 179 9 is_stmt 1
 179:src/MemoryAllocator.cpp ****         if(curr == 0) tailFree = headFree;
 644              		.loc 1 179 26 is_stmt 0
 645 03b8 23B80400 		sd	zero,16(s1)
 180:src/MemoryAllocator.cpp ****     }
 646              		.loc 1 180 9 is_stmt 1
 647 03bc E39807FA 		bnez	a5,.L38
 180:src/MemoryAllocator.cpp ****     }
 648              		.loc 1 180 23 discriminator 1
 180:src/MemoryAllocator.cpp ****     }
 649              		.loc 1 180 32 is_stmt 0 discriminator 1
 650 03c0 97070000 		sd	s1,.LANCHOR0+32,a5
 650      23B09700 
 651              	.LVL56:
 652 03c8 6FF05FFA 		j	.L38
 653              	.LVL57:
 654              	.L46:
 186:src/MemoryAllocator.cpp ****     }
 655              		.loc 1 186 23 is_stmt 1 discriminator 1
 186:src/MemoryAllocator.cpp ****     }
 656              		.loc 1 186 32 is_stmt 0 discriminator 1
 657 03cc 97070000 		sd	s1,.LANCHOR0+32,a5
 657      23B09700 
 658              	.LVL58:
 659 03d4 6FF09FF9 		j	.L38
 660              	.L47:
 191:src/MemoryAllocator.cpp ****         newSegment->next = newSegment->next->next;
 661              		.loc 1 191 9 is_stmt 1
 191:src/MemoryAllocator.cpp ****         newSegment->next = newSegment->next->next;
 662              		.loc 1 191 47 is_stmt 0
 663 03d8 83B60700 		ld	a3,0(a5)
 191:src/MemoryAllocator.cpp ****         newSegment->next = newSegment->next->next;
 664              		.loc 1 191 26
 665 03dc 3306D600 		add	a2,a2,a3
 666 03e0 13068601 		addi	a2,a2,24
 667 03e4 23B0C400 		sd	a2,0(s1)
 192:src/MemoryAllocator.cpp ****         if(newSegment->next)
 668              		.loc 1 192 9 is_stmt 1
 192:src/MemoryAllocator.cpp ****         if(newSegment->next)
 669              		.loc 1 192 46 is_stmt 0
 670 03e8 83B78700 		ld	a5,8(a5)
 192:src/MemoryAllocator.cpp ****         if(newSegment->next)
 671              		.loc 1 192 26
 672 03ec 23B4F400 		sd	a5,8(s1)
 193:src/MemoryAllocator.cpp ****         {
 673              		.loc 1 193 9 is_stmt 1
 674 03f0 63860700 		beqz	a5,.L40
 195:src/MemoryAllocator.cpp ****         }
 675              		.loc 1 195 13
 195:src/MemoryAllocator.cpp ****         }
 676              		.loc 1 195 36 is_stmt 0
 677 03f4 23B89700 		sd	s1,16(a5)
GAS LISTING /tmp/ccNTdQVw.s 			page 19


 678 03f8 6FF0DFF8 		j	.L39
 679              	.L40:
 199:src/MemoryAllocator.cpp ****         }
 680              		.loc 1 199 13 is_stmt 1
 199:src/MemoryAllocator.cpp ****         }
 681              		.loc 1 199 22 is_stmt 0
 682 03fc 97070000 		sd	s1,.LANCHOR0+32,a5
 682      23B09700 
 683 0404 6FF01FF8 		j	.L39
 684              	.L48:
 205:src/MemoryAllocator.cpp ****         prev->next = newSegment->next;
 685              		.loc 1 205 9 is_stmt 1
 205:src/MemoryAllocator.cpp ****         prev->next = newSegment->next;
 686              		.loc 1 205 33 is_stmt 0
 687 0408 83B70400 		ld	a5,0(s1)
 205:src/MemoryAllocator.cpp ****         prev->next = newSegment->next;
 688              		.loc 1 205 19
 689 040c B386F600 		add	a3,a3,a5
 690 0410 93868601 		addi	a3,a3,24
 691 0414 2330D700 		sd	a3,0(a4)
 206:src/MemoryAllocator.cpp ****         if(prev->next) prev->next->prev = prev;
 692              		.loc 1 206 9 is_stmt 1
 206:src/MemoryAllocator.cpp ****         if(prev->next) prev->next->prev = prev;
 693              		.loc 1 206 34 is_stmt 0
 694 0418 83B78400 		ld	a5,8(s1)
 206:src/MemoryAllocator.cpp ****         if(prev->next) prev->next->prev = prev;
 695              		.loc 1 206 20
 696 041c 2334F700 		sd	a5,8(a4)
 207:src/MemoryAllocator.cpp ****         else tailFree = prev;
 697              		.loc 1 207 9 is_stmt 1
 698 0420 63860700 		beqz	a5,.L42
 207:src/MemoryAllocator.cpp ****         else tailFree = prev;
 699              		.loc 1 207 24 discriminator 1
 207:src/MemoryAllocator.cpp ****         else tailFree = prev;
 700              		.loc 1 207 41 is_stmt 0 discriminator 1
 701 0424 23B8E700 		sd	a4,16(a5)
 702 0428 6FF01FF7 		j	.L33
 703              	.L42:
 208:src/MemoryAllocator.cpp ****     }
 704              		.loc 1 208 14 is_stmt 1
 208:src/MemoryAllocator.cpp ****     }
 705              		.loc 1 208 23 is_stmt 0
 706 042c 97070000 		sd	a4,.LANCHOR0+32,a5
 706      23B0E700 
 707              		.loc 1 210 1
 708 0434 6FF05FF6 		j	.L33
 709              		.cfi_endproc
 710              	.LFE30:
 712              		.align	2
 713              		.globl	_ZN15MemoryAllocator16tryToFreeSegmentEPv
 715              	_ZN15MemoryAllocator16tryToFreeSegmentEPv:
 716              	.LFB31:
 211:src/MemoryAllocator.cpp **** 
 212:src/MemoryAllocator.cpp **** uint64 MemoryAllocator::tryToFreeSegment(void* addr)
 213:src/MemoryAllocator.cpp **** {
 717              		.loc 1 213 1 is_stmt 1
 718              		.cfi_startproc
GAS LISTING /tmp/ccNTdQVw.s 			page 20


 719              	.LVL59:
 720 0438 130101FE 		addi	sp,sp,-32
 721              		.cfi_def_cfa_offset 32
 722 043c 233C1100 		sd	ra,24(sp)
 723 0440 23388100 		sd	s0,16(sp)
 724 0444 23349100 		sd	s1,8(sp)
 725 0448 23302101 		sd	s2,0(sp)
 726              		.cfi_offset 1, -8
 727              		.cfi_offset 8, -16
 728              		.cfi_offset 9, -24
 729              		.cfi_offset 18, -32
 730 044c 13040102 		addi	s0,sp,32
 731              		.cfi_def_cfa 8, 0
 732 0450 13090500 		mv	s2,a0
 214:src/MemoryAllocator.cpp ****     initMemory();
 733              		.loc 1 214 5
 734              		.loc 1 214 15 is_stmt 0
 735 0454 97000000 		call	_ZN15MemoryAllocator10initMemoryEv
 735      E7800000 
 736              	.LVL60:
 215:src/MemoryAllocator.cpp ****     BlockHeader* prev = 0;
 737              		.loc 1 215 5 is_stmt 1
 216:src/MemoryAllocator.cpp ****     BlockHeader* curr = headAllocated;
 738              		.loc 1 216 5
 739              		.loc 1 216 18 is_stmt 0
 740 045c 97040000 		ld	s1,.LANCHOR0+8
 740      83B40400 
 741              	.LVL61:
 215:src/MemoryAllocator.cpp ****     BlockHeader* prev = 0;
 742              		.loc 1 215 18
 743 0464 13070000 		li	a4,0
 744              	.LVL62:
 745              	.L56:
 217:src/MemoryAllocator.cpp ****     while(curr != 0)
 746              		.loc 1 217 5 is_stmt 1
 747              		.loc 1 217 16
 748 0468 638E0402 		beqz	s1,.L50
 218:src/MemoryAllocator.cpp ****     {
 219:src/MemoryAllocator.cpp ****         if(addr == (void*)((char*)curr + sizeof(BlockHeader)))
 749              		.loc 1 219 9
 750              		.loc 1 219 20 is_stmt 0
 751 046c 93878401 		addi	a5,s1,24
 752              		.loc 1 219 9
 753 0470 63882701 		beq	a5,s2,.L60
 220:src/MemoryAllocator.cpp ****         {
 221:src/MemoryAllocator.cpp ****             if(prev != 0)
 222:src/MemoryAllocator.cpp ****             {
 223:src/MemoryAllocator.cpp ****                 prev->next = curr->next;
 224:src/MemoryAllocator.cpp ****                 if(prev->next) prev->next->prev = prev;
 225:src/MemoryAllocator.cpp ****                 else tailAllocated = prev;
 226:src/MemoryAllocator.cpp ****             }
 227:src/MemoryAllocator.cpp ****             else
 228:src/MemoryAllocator.cpp ****             {
 229:src/MemoryAllocator.cpp ****                 headAllocated = curr->next;
 230:src/MemoryAllocator.cpp ****                 if(headAllocated)
 231:src/MemoryAllocator.cpp ****                 {
 232:src/MemoryAllocator.cpp ****                     headAllocated->prev = 0;
GAS LISTING /tmp/ccNTdQVw.s 			page 21


 233:src/MemoryAllocator.cpp ****                 }
 234:src/MemoryAllocator.cpp ****                 else tailAllocated = headAllocated;
 235:src/MemoryAllocator.cpp ****             }
 236:src/MemoryAllocator.cpp **** 
 237:src/MemoryAllocator.cpp ****             insertNewFreeSegment((void*)curr, curr->size);
 238:src/MemoryAllocator.cpp **** 
 239:src/MemoryAllocator.cpp ****             break;
 240:src/MemoryAllocator.cpp ****         }
 241:src/MemoryAllocator.cpp **** 
 242:src/MemoryAllocator.cpp ****         prev = curr;
 754              		.loc 1 242 9 is_stmt 1
 755              	.LVL63:
 243:src/MemoryAllocator.cpp ****         curr = curr->next;
 756              		.loc 1 243 9
 242:src/MemoryAllocator.cpp ****         curr = curr->next;
 757              		.loc 1 242 14 is_stmt 0
 758 0474 13870400 		mv	a4,s1
 759              		.loc 1 243 14
 760 0478 83B48400 		ld	s1,8(s1)
 761              	.LVL64:
 217:src/MemoryAllocator.cpp ****     {
 762              		.loc 1 217 5
 763 047c 6FF0DFFE 		j	.L56
 764              	.L60:
 221:src/MemoryAllocator.cpp ****             {
 765              		.loc 1 221 13 is_stmt 1
 766 0480 63080704 		beqz	a4,.L52
 223:src/MemoryAllocator.cpp ****                 if(prev->next) prev->next->prev = prev;
 767              		.loc 1 223 17
 223:src/MemoryAllocator.cpp ****                 if(prev->next) prev->next->prev = prev;
 768              		.loc 1 223 36 is_stmt 0
 769 0484 83B78400 		ld	a5,8(s1)
 223:src/MemoryAllocator.cpp ****                 if(prev->next) prev->next->prev = prev;
 770              		.loc 1 223 28
 771 0488 2334F700 		sd	a5,8(a4)
 224:src/MemoryAllocator.cpp ****                 else tailAllocated = prev;
 772              		.loc 1 224 17 is_stmt 1
 773 048c 638C0702 		beqz	a5,.L53
 224:src/MemoryAllocator.cpp ****                 else tailAllocated = prev;
 774              		.loc 1 224 32 discriminator 1
 224:src/MemoryAllocator.cpp ****                 else tailAllocated = prev;
 775              		.loc 1 224 49 is_stmt 0 discriminator 1
 776 0490 23B8E700 		sd	a4,16(a5)
 777              	.LVL65:
 778              	.L54:
 237:src/MemoryAllocator.cpp **** 
 779              		.loc 1 237 13 is_stmt 1
 237:src/MemoryAllocator.cpp **** 
 780              		.loc 1 237 33 is_stmt 0
 781 0494 83B50400 		ld	a1,0(s1)
 782 0498 13850400 		mv	a0,s1
 783 049c 97000000 		call	_ZN15MemoryAllocator20insertNewFreeSegmentEPvm
 783      E7800000 
 784              	.LVL66:
 239:src/MemoryAllocator.cpp ****         }
 785              		.loc 1 239 13 is_stmt 1
 786              	.L50:
GAS LISTING /tmp/ccNTdQVw.s 			page 22


 244:src/MemoryAllocator.cpp ****     }
 245:src/MemoryAllocator.cpp **** 
 246:src/MemoryAllocator.cpp ****     if(curr != 0)
 787              		.loc 1 246 5
 788 04a4 63880404 		beqz	s1,.L58
 247:src/MemoryAllocator.cpp ****         return 0;
 789              		.loc 1 247 16 is_stmt 0
 790 04a8 13050000 		li	a0,0
 791              	.L49:
 248:src/MemoryAllocator.cpp ****     else
 249:src/MemoryAllocator.cpp ****         return 1;
 250:src/MemoryAllocator.cpp **** }
 792              		.loc 1 250 1
 793 04ac 83308101 		ld	ra,24(sp)
 794              		.cfi_remember_state
 795              		.cfi_restore 1
 796 04b0 03340101 		ld	s0,16(sp)
 797              		.cfi_restore 8
 798              		.cfi_def_cfa 2, 32
 799 04b4 83348100 		ld	s1,8(sp)
 800              		.cfi_restore 9
 801              	.LVL67:
 802 04b8 03390100 		ld	s2,0(sp)
 803              		.cfi_restore 18
 804              	.LVL68:
 805 04bc 13010102 		addi	sp,sp,32
 806              		.cfi_def_cfa_offset 0
 807 04c0 67800000 		jr	ra
 808              	.LVL69:
 809              	.L53:
 810              		.cfi_restore_state
 225:src/MemoryAllocator.cpp ****             }
 811              		.loc 1 225 22 is_stmt 1
 225:src/MemoryAllocator.cpp ****             }
 812              		.loc 1 225 36 is_stmt 0
 813 04c4 97070000 		sd	a4,.LANCHOR0+16,a5
 813      23B0E700 
 814 04cc 6FF09FFC 		j	.L54
 815              	.L52:
 229:src/MemoryAllocator.cpp ****                 if(headAllocated)
 816              		.loc 1 229 17 is_stmt 1
 229:src/MemoryAllocator.cpp ****                 if(headAllocated)
 817              		.loc 1 229 39 is_stmt 0
 818 04d0 83B78400 		ld	a5,8(s1)
 229:src/MemoryAllocator.cpp ****                 if(headAllocated)
 819              		.loc 1 229 31
 820 04d4 17070000 		sd	a5,.LANCHOR0+8,a4
 820      2330F700 
 821              	.LVL70:
 230:src/MemoryAllocator.cpp ****                 {
 822              		.loc 1 230 17 is_stmt 1
 823 04dc 63860700 		beqz	a5,.L55
 232:src/MemoryAllocator.cpp ****                 }
 824              		.loc 1 232 21
 232:src/MemoryAllocator.cpp ****                 }
 825              		.loc 1 232 41 is_stmt 0
 826 04e0 23B80700 		sd	zero,16(a5)
GAS LISTING /tmp/ccNTdQVw.s 			page 23


 827 04e4 6FF01FFB 		j	.L54
 828              	.L55:
 234:src/MemoryAllocator.cpp ****             }
 829              		.loc 1 234 22 is_stmt 1
 234:src/MemoryAllocator.cpp ****             }
 830              		.loc 1 234 36 is_stmt 0
 831 04e8 17070000 		sd	a5,.LANCHOR0+16,a4
 831      2330F700 
 832 04f0 6FF05FFA 		j	.L54
 833              	.L58:
 249:src/MemoryAllocator.cpp **** }
 834              		.loc 1 249 16
 835 04f4 13051000 		li	a0,1
 836 04f8 6FF05FFB 		j	.L49
 837              		.cfi_endproc
 838              	.LFE31:
 840              		.align	2
 841              		.globl	_ZN15MemoryAllocator8mem_freeEPv
 843              	_ZN15MemoryAllocator8mem_freeEPv:
 844              	.LFB26:
  21:src/MemoryAllocator.cpp ****     return tryToFreeSegment(addr);
 845              		.loc 1 21 1 is_stmt 1
 846              		.cfi_startproc
 847              	.LVL71:
 848 04fc 130101FF 		addi	sp,sp,-16
 849              		.cfi_def_cfa_offset 16
 850 0500 23341100 		sd	ra,8(sp)
 851 0504 23308100 		sd	s0,0(sp)
 852              		.cfi_offset 1, -8
 853              		.cfi_offset 8, -16
 854 0508 13040101 		addi	s0,sp,16
 855              		.cfi_def_cfa 8, 0
  22:src/MemoryAllocator.cpp **** }
 856              		.loc 1 22 5
  22:src/MemoryAllocator.cpp **** }
 857              		.loc 1 22 28 is_stmt 0
 858 050c 97000000 		call	_ZN15MemoryAllocator16tryToFreeSegmentEPv
 858      E7800000 
 859              	.LVL72:
  23:src/MemoryAllocator.cpp **** 
 860              		.loc 1 23 1
 861 0514 83308100 		ld	ra,8(sp)
 862              		.cfi_restore 1
 863 0518 03340100 		ld	s0,0(sp)
 864              		.cfi_restore 8
 865              		.cfi_def_cfa 2, 16
 866 051c 13010101 		addi	sp,sp,16
 867              		.cfi_def_cfa_offset 0
 868 0520 67800000 		jr	ra
 869              		.cfi_endproc
 870              	.LFE26:
 872              		.align	2
 873              		.globl	_ZN15MemoryAllocator7kmallocEm
 875              	_ZN15MemoryAllocator7kmallocEm:
 876              	.LFB34:
 251:src/MemoryAllocator.cpp **** 
 252:src/MemoryAllocator.cpp **** void MemoryAllocator::memAllocHandler()
GAS LISTING /tmp/ccNTdQVw.s 			page 24


 253:src/MemoryAllocator.cpp **** {
 254:src/MemoryAllocator.cpp ****     size_t size;
 255:src/MemoryAllocator.cpp ****     __asm__ volatile("mv %0, a1" : "=r"(size));
 256:src/MemoryAllocator.cpp ****     size*=MEM_BLOCK_SIZE;
 257:src/MemoryAllocator.cpp ****     void* allocatedAddr = kmalloc(size);
 258:src/MemoryAllocator.cpp ****     __asm__ volatile("mv a0,%0" : : "r"((uint64)allocatedAddr));
 259:src/MemoryAllocator.cpp ****     Riscv::w_a0_sscratch();
 260:src/MemoryAllocator.cpp **** }
 261:src/MemoryAllocator.cpp **** 
 262:src/MemoryAllocator.cpp **** void MemoryAllocator::memFreeHandler()
 263:src/MemoryAllocator.cpp **** {
 264:src/MemoryAllocator.cpp ****     uint64 addr = 0;
 265:src/MemoryAllocator.cpp ****     __asm__ volatile("mv %0, a1" : "=r"(addr));
 266:src/MemoryAllocator.cpp ****     uint64 retval = kfree((void*)addr);
 267:src/MemoryAllocator.cpp ****     __asm__ volatile("mv a0,%0" : :"r"(retval));
 268:src/MemoryAllocator.cpp ****     Riscv::w_a0_sscratch();
 269:src/MemoryAllocator.cpp **** }
 270:src/MemoryAllocator.cpp **** 
 271:src/MemoryAllocator.cpp **** void* MemoryAllocator::kmalloc(size_t size)
 272:src/MemoryAllocator.cpp **** {
 877              		.loc 1 272 1 is_stmt 1
 878              		.cfi_startproc
 879              	.LVL73:
 880 0524 130101FF 		addi	sp,sp,-16
 881              		.cfi_def_cfa_offset 16
 882 0528 23341100 		sd	ra,8(sp)
 883 052c 23308100 		sd	s0,0(sp)
 884              		.cfi_offset 1, -8
 885              		.cfi_offset 8, -16
 886 0530 13040101 		addi	s0,sp,16
 887              		.cfi_def_cfa 8, 0
 273:src/MemoryAllocator.cpp ****     return MemoryAllocator::mem_alloc(size);
 888              		.loc 1 273 5
 889              		.loc 1 273 38 is_stmt 0
 890 0534 97000000 		call	_ZN15MemoryAllocator9mem_allocEm
 890      E7800000 
 891              	.LVL74:
 274:src/MemoryAllocator.cpp **** }
 892              		.loc 1 274 1
 893 053c 83308100 		ld	ra,8(sp)
 894              		.cfi_restore 1
 895 0540 03340100 		ld	s0,0(sp)
 896              		.cfi_restore 8
 897              		.cfi_def_cfa 2, 16
 898 0544 13010101 		addi	sp,sp,16
 899              		.cfi_def_cfa_offset 0
 900 0548 67800000 		jr	ra
 901              		.cfi_endproc
 902              	.LFE34:
 904              		.align	2
 905              		.globl	_ZN15MemoryAllocator15memAllocHandlerEv
 907              	_ZN15MemoryAllocator15memAllocHandlerEv:
 908              	.LFB32:
 253:src/MemoryAllocator.cpp ****     size_t size;
 909              		.loc 1 253 1 is_stmt 1
 910              		.cfi_startproc
 911 054c 130101FF 		addi	sp,sp,-16
GAS LISTING /tmp/ccNTdQVw.s 			page 25


 912              		.cfi_def_cfa_offset 16
 913 0550 23341100 		sd	ra,8(sp)
 914 0554 23308100 		sd	s0,0(sp)
 915              		.cfi_offset 1, -8
 916              		.cfi_offset 8, -16
 917 0558 13040101 		addi	s0,sp,16
 918              		.cfi_def_cfa 8, 0
 254:src/MemoryAllocator.cpp ****     __asm__ volatile("mv %0, a1" : "=r"(size));
 919              		.loc 1 254 5
 255:src/MemoryAllocator.cpp ****     size*=MEM_BLOCK_SIZE;
 920              		.loc 1 255 5
 255:src/MemoryAllocator.cpp ****     size*=MEM_BLOCK_SIZE;
 921              		.loc 1 255 47 is_stmt 0
 922              	#APP
 923              	# 255 "src/MemoryAllocator.cpp" 1
 924              		mv a0, a1
 925              	# 0 "" 2
 926              	.LVL75:
 256:src/MemoryAllocator.cpp ****     void* allocatedAddr = kmalloc(size);
 927              		.loc 1 256 5 is_stmt 1
 257:src/MemoryAllocator.cpp ****     __asm__ volatile("mv a0,%0" : : "r"((uint64)allocatedAddr));
 928              		.loc 1 257 5
 257:src/MemoryAllocator.cpp ****     __asm__ volatile("mv a0,%0" : : "r"((uint64)allocatedAddr));
 929              		.loc 1 257 34 is_stmt 0
 930              	#NO_APP
 931 0560 13156500 		slli	a0,a0,6
 932              	.LVL76:
 933 0564 97000000 		call	_ZN15MemoryAllocator7kmallocEm
 933      E7800000 
 934              	.LVL77:
 258:src/MemoryAllocator.cpp ****     Riscv::w_a0_sscratch();
 935              		.loc 1 258 5 is_stmt 1
 258:src/MemoryAllocator.cpp ****     Riscv::w_a0_sscratch();
 936              		.loc 1 258 64 is_stmt 0
 937              	#APP
 938              	# 258 "src/MemoryAllocator.cpp" 1
 259:src/MemoryAllocator.cpp **** }
 939              		mv a0,a0
 940              	# 0 "" 2
 941              		.loc 1 259 5 is_stmt 1
 259:src/MemoryAllocator.cpp **** }
 942              		.loc 1 259 25 is_stmt 0
 943              	#NO_APP
 944 0570 97000000 		call	_ZN5Riscv13w_a0_sscratchEv@plt
 944      E7800000 
 945              	.LVL78:
 260:src/MemoryAllocator.cpp **** 
 946              		.loc 1 260 1
 947 0578 83308100 		ld	ra,8(sp)
 948              		.cfi_restore 1
 949 057c 03340100 		ld	s0,0(sp)
 950              		.cfi_restore 8
 951              		.cfi_def_cfa 2, 16
 952 0580 13010101 		addi	sp,sp,16
 953              		.cfi_def_cfa_offset 0
 954 0584 67800000 		jr	ra
 955              		.cfi_endproc
GAS LISTING /tmp/ccNTdQVw.s 			page 26


 956              	.LFE32:
 958              		.align	2
 959              		.globl	_ZN15MemoryAllocator5kfreeEPv
 961              	_ZN15MemoryAllocator5kfreeEPv:
 962              	.LFB35:
 275:src/MemoryAllocator.cpp **** 
 276:src/MemoryAllocator.cpp **** uint64 MemoryAllocator::kfree(void* p)
 277:src/MemoryAllocator.cpp **** {
 963              		.loc 1 277 1 is_stmt 1
 964              		.cfi_startproc
 965              	.LVL79:
 966 0588 130101FF 		addi	sp,sp,-16
 967              		.cfi_def_cfa_offset 16
 968 058c 23341100 		sd	ra,8(sp)
 969 0590 23308100 		sd	s0,0(sp)
 970              		.cfi_offset 1, -8
 971              		.cfi_offset 8, -16
 972 0594 13040101 		addi	s0,sp,16
 973              		.cfi_def_cfa 8, 0
 278:src/MemoryAllocator.cpp ****     return MemoryAllocator::mem_free(p);
 974              		.loc 1 278 5
 975              		.loc 1 278 37 is_stmt 0
 976 0598 97000000 		call	_ZN15MemoryAllocator8mem_freeEPv
 976      E7800000 
 977              	.LVL80:
 279:src/MemoryAllocator.cpp **** }...
 978              		.loc 1 279 1
 979 05a0 83308100 		ld	ra,8(sp)
 980              		.cfi_restore 1
 981 05a4 03340100 		ld	s0,0(sp)
 982              		.cfi_restore 8
 983              		.cfi_def_cfa 2, 16
 984 05a8 13010101 		addi	sp,sp,16
 985              		.cfi_def_cfa_offset 0
 986 05ac 67800000 		jr	ra
 987              		.cfi_endproc
 988              	.LFE35:
 990              		.align	2
 991              		.globl	_ZN15MemoryAllocator14memFreeHandlerEv
 993              	_ZN15MemoryAllocator14memFreeHandlerEv:
 994              	.LFB33:
 263:src/MemoryAllocator.cpp **** {
 995              		.loc 1 263 1 is_stmt 1
 996              		.cfi_startproc
 997 05b0 130101FF 		addi	sp,sp,-16
 998              		.cfi_def_cfa_offset 16
 999 05b4 23341100 		sd	ra,8(sp)
 1000 05b8 23308100 		sd	s0,0(sp)
 1001              		.cfi_offset 1, -8
 1002              		.cfi_offset 8, -16
 1003 05bc 13040101 		addi	s0,sp,16
 1004              		.cfi_def_cfa 8, 0
 264:src/MemoryAllocator.cpp ****     uint64 addr = 0;
 1005              		.loc 1 264 5
 1006              	.LVL81:
 265:src/MemoryAllocator.cpp ****     __asm__ volatile("mv %0, a1" : "=r"(addr));
 1007              		.loc 1 265 5
GAS LISTING /tmp/ccNTdQVw.s 			page 27


 265:src/MemoryAllocator.cpp ****     __asm__ volatile("mv %0, a1" : "=r"(addr));
 1008              		.loc 1 265 47 is_stmt 0
 1009              	#APP
 1010              	# 265 "src/MemoryAllocator.cpp" 1
 1011              		mv a0, a1
 1012              	# 0 "" 2
 1013              	.LVL82:
 266:src/MemoryAllocator.cpp ****     uint64 retval = kfree((void*)addr);
 1014              		.loc 1 266 5 is_stmt 1
 266:src/MemoryAllocator.cpp ****     uint64 retval = kfree((void*)addr);
 1015              		.loc 1 266 26 is_stmt 0
 1016              	#NO_APP
 1017 05c4 97000000 		call	_ZN15MemoryAllocator5kfreeEPv
 1017      E7800000 
 1018              	.LVL83:
 267:src/MemoryAllocator.cpp ****     __asm__ volatile("mv a0,%0" : :"r"(retval));
 1019              		.loc 1 267 5 is_stmt 1
 267:src/MemoryAllocator.cpp ****     __asm__ volatile("mv a0,%0" : :"r"(retval));
 1020              		.loc 1 267 48 is_stmt 0
 1021              	#APP
 1022              	# 267 "src/MemoryAllocator.cpp" 1
 268:src/MemoryAllocator.cpp ****     Riscv::w_a0_sscratch();
 1023              		mv a0,a0
 1024              	# 0 "" 2
 1025              		.loc 1 268 5 is_stmt 1
 268:src/MemoryAllocator.cpp ****     Riscv::w_a0_sscratch();
 1026              		.loc 1 268 25 is_stmt 0
 1027              	#NO_APP
 1028 05d0 97000000 		call	_ZN5Riscv13w_a0_sscratchEv@plt
 1028      E7800000 
 1029              	.LVL84:
 269:src/MemoryAllocator.cpp **** }
 1030              		.loc 1 269 1
 1031 05d8 83308100 		ld	ra,8(sp)
 1032              		.cfi_restore 1
 1033 05dc 03340100 		ld	s0,0(sp)
 1034              		.cfi_restore 8
 1035              		.cfi_def_cfa 2, 16
 1036 05e0 13010101 		addi	sp,sp,16
 1037              		.cfi_def_cfa_offset 0
 1038 05e4 67800000 		jr	ra
 1039              		.cfi_endproc
 1040              	.LFE33:
 1042              		.globl	_ZN15MemoryAllocator18memoryInitiliaizedE
 1043              		.globl	_ZN15MemoryAllocator8tailFreeE
 1044              		.globl	_ZN15MemoryAllocator13tailAllocatedE
 1045              		.globl	_ZN15MemoryAllocator8headFreeE
 1046              		.globl	_ZN15MemoryAllocator13headAllocatedE
 1047              		.bss
 1048              		.align	3
 1049              		.set	.LANCHOR0,. + 0
 1052              	_ZN15MemoryAllocator18memoryInitiliaizedE:
 1053 0000 00000000 		.zero	4
 1054 0004 00000000 		.zero	4
 1057              	_ZN15MemoryAllocator13headAllocatedE:
 1058 0008 00000000 		.zero	8
 1058      00000000 
GAS LISTING /tmp/ccNTdQVw.s 			page 28


 1061              	_ZN15MemoryAllocator13tailAllocatedE:
 1062 0010 00000000 		.zero	8
 1062      00000000 
 1065              	_ZN15MemoryAllocator8headFreeE:
 1066 0018 00000000 		.zero	8
 1066      00000000 
 1069              	_ZN15MemoryAllocator8tailFreeE:
 1070 0020 00000000 		.zero	8
 1070      00000000 
 1071              		.text
 1072              	.Letext0:
 1073              		.file 2 "src/../h/../lib/hw.h"
 1074              		.file 3 "src/../h/MemoryAllocator.hpp"
 1075              		.file 4 "src/../h/Riscv.hpp"
GAS LISTING /tmp/ccNTdQVw.s 			page 29


DEFINED SYMBOLS
                            *ABS*:0000000000000000 MemoryAllocator.cpp
     /tmp/ccNTdQVw.s:9      .text:0000000000000000 _ZN15MemoryAllocator10initMemoryEv
     /tmp/ccNTdQVw.s:13     .text:0000000000000000 .L0 
     /tmp/ccNTdQVw.s:14     .text:0000000000000000 .L0 
     /tmp/ccNTdQVw.s:15     .text:0000000000000004 .L0 
     /tmp/ccNTdQVw.s:17     .text:0000000000000008 .L0 
     /tmp/ccNTdQVw.s:19     .text:000000000000000c .L0 
     /tmp/ccNTdQVw.s:21     .text:000000000000000c .L0 
     /tmp/ccNTdQVw.s:22     .text:000000000000000c .L0 
     /tmp/ccNTdQVw.s:24     .text:0000000000000014 .L0 
     /tmp/ccNTdQVw.s:27     .text:000000000000001c .L0 
     /tmp/ccNTdQVw.s:28     .text:000000000000001c .L0 
     /tmp/ccNTdQVw.s:32     .text:000000000000002c .L0 
     /tmp/ccNTdQVw.s:33     .text:000000000000002c .L0 
     /tmp/ccNTdQVw.s:35     .text:0000000000000030 .L0 
     /tmp/ccNTdQVw.s:36     .text:0000000000000030 .L0 
     /tmp/ccNTdQVw.s:38     .text:0000000000000034 .L0 
     /tmp/ccNTdQVw.s:39     .text:0000000000000034 .L0 
     /tmp/ccNTdQVw.s:43     .text:0000000000000044 .L0 
     /tmp/ccNTdQVw.s:44     .text:0000000000000044 .L0 
     /tmp/ccNTdQVw.s:46     .text:0000000000000048 .L0 
     /tmp/ccNTdQVw.s:47     .text:0000000000000048 .L0 
     /tmp/ccNTdQVw.s:49     .text:000000000000004c .L0 
     /tmp/ccNTdQVw.s:50     .text:000000000000004c .L0 
     /tmp/ccNTdQVw.s:54     .text:000000000000005c .L0 
     /tmp/ccNTdQVw.s:56     .text:0000000000000060 .L0 
     /tmp/ccNTdQVw.s:58     .text:0000000000000064 .L0 
     /tmp/ccNTdQVw.s:59     .text:0000000000000064 .L0 
     /tmp/ccNTdQVw.s:63     .text:000000000000006c .L0 
     /tmp/ccNTdQVw.s:64     .text:0000000000000070 .L0 
     /tmp/ccNTdQVw.s:65     .text:0000000000000070 .L0 
     /tmp/ccNTdQVw.s:67     .text:0000000000000074 .L0 
     /tmp/ccNTdQVw.s:69     .text:0000000000000078 .L0 
     /tmp/ccNTdQVw.s:75     .text:0000000000000078 _ZN15MemoryAllocator17insertAllFragmentEPvmS0_
     /tmp/ccNTdQVw.s:78     .text:0000000000000078 .L0 
     /tmp/ccNTdQVw.s:80     .text:0000000000000078 .L0 
     /tmp/ccNTdQVw.s:81     .text:000000000000007c .L0 
     /tmp/ccNTdQVw.s:87     .text:0000000000000090 .L0 
     /tmp/ccNTdQVw.s:88     .text:0000000000000090 .L0 
     /tmp/ccNTdQVw.s:89     .text:0000000000000090 .L0 
     /tmp/ccNTdQVw.s:90     .text:0000000000000090 .L0 
     /tmp/ccNTdQVw.s:91     .text:0000000000000090 .L0 
     /tmp/ccNTdQVw.s:93     .text:0000000000000094 .L0 
     /tmp/ccNTdQVw.s:98     .text:00000000000000a0 .L0 
     /tmp/ccNTdQVw.s:99     .text:00000000000000a0 .L0 
     /tmp/ccNTdQVw.s:102    .text:00000000000000a8 .L0 
     /tmp/ccNTdQVw.s:103    .text:00000000000000a8 .L0 
     /tmp/ccNTdQVw.s:104    .text:00000000000000a8 .L0 
     /tmp/ccNTdQVw.s:106    .text:00000000000000ac .L0 
     /tmp/ccNTdQVw.s:107    .text:00000000000000ac .L0 
     /tmp/ccNTdQVw.s:109    .text:00000000000000b0 .L0 
     /tmp/ccNTdQVw.s:110    .text:00000000000000b0 .L0 
     /tmp/ccNTdQVw.s:113    .text:00000000000000b4 .L0 
     /tmp/ccNTdQVw.s:114    .text:00000000000000b4 .L0 
     /tmp/ccNTdQVw.s:116    .text:00000000000000bc .L0 
     /tmp/ccNTdQVw.s:121    .text:00000000000000c0 .L0 
GAS LISTING /tmp/ccNTdQVw.s 			page 30


     /tmp/ccNTdQVw.s:122    .text:00000000000000c0 .L0 
     /tmp/ccNTdQVw.s:125    .text:00000000000000cc .L0 
     /tmp/ccNTdQVw.s:129    .text:00000000000000d0 .L0 
     /tmp/ccNTdQVw.s:130    .text:00000000000000d0 .L0 
     /tmp/ccNTdQVw.s:131    .text:00000000000000d0 .L0 
     /tmp/ccNTdQVw.s:133    .text:00000000000000d4 .L0 
     /tmp/ccNTdQVw.s:135    .text:00000000000000d8 .L0 
     /tmp/ccNTdQVw.s:137    .text:00000000000000dc .L0 
     /tmp/ccNTdQVw.s:138    .text:00000000000000dc .L0 
     /tmp/ccNTdQVw.s:141    .text:00000000000000e0 .L0 
     /tmp/ccNTdQVw.s:142    .text:00000000000000e0 .L0 
     /tmp/ccNTdQVw.s:144    .text:00000000000000e4 .L0 
     /tmp/ccNTdQVw.s:145    .text:00000000000000e4 .L0 
     /tmp/ccNTdQVw.s:147    .text:00000000000000e8 .L0 
     /tmp/ccNTdQVw.s:149    .text:00000000000000ec .L0 
     /tmp/ccNTdQVw.s:150    .text:00000000000000ec .L0 
     /tmp/ccNTdQVw.s:157    .text:00000000000000f8 .L0 
     /tmp/ccNTdQVw.s:158    .text:00000000000000f8 .L0 
     /tmp/ccNTdQVw.s:161    .text:0000000000000104 .L0 
     /tmp/ccNTdQVw.s:166    .text:000000000000010c .L0 
     /tmp/ccNTdQVw.s:167    .text:000000000000010c .L0 
     /tmp/ccNTdQVw.s:170    .text:0000000000000118 .L0 
     /tmp/ccNTdQVw.s:172    .text:000000000000011c .L0 
     /tmp/ccNTdQVw.s:173    .text:000000000000011c .L0 
     /tmp/ccNTdQVw.s:175    .text:0000000000000120 .L0 
     /tmp/ccNTdQVw.s:176    .text:0000000000000120 .L0 
     /tmp/ccNTdQVw.s:181    .text:0000000000000124 .L0 
     /tmp/ccNTdQVw.s:182    .text:0000000000000128 .L0 
     /tmp/ccNTdQVw.s:184    .text:000000000000012c .L0 
     /tmp/ccNTdQVw.s:185    .text:000000000000012c .L0 
     /tmp/ccNTdQVw.s:187    .text:0000000000000130 .L0 
     /tmp/ccNTdQVw.s:190    .text:0000000000000134 .L0 
     /tmp/ccNTdQVw.s:193    .text:0000000000000138 .L0 
     /tmp/ccNTdQVw.s:196    .text:000000000000013c .L0 
     /tmp/ccNTdQVw.s:198    .text:0000000000000140 .L0 
     /tmp/ccNTdQVw.s:204    .text:0000000000000140 _ZN15MemoryAllocator21tryToAllocateFragmentEm
     /tmp/ccNTdQVw.s:207    .text:0000000000000140 .L0 
     /tmp/ccNTdQVw.s:209    .text:0000000000000140 .L0 
     /tmp/ccNTdQVw.s:210    .text:0000000000000144 .L0 
     /tmp/ccNTdQVw.s:215    .text:0000000000000154 .L0 
     /tmp/ccNTdQVw.s:216    .text:0000000000000154 .L0 
     /tmp/ccNTdQVw.s:217    .text:0000000000000154 .L0 
     /tmp/ccNTdQVw.s:218    .text:0000000000000154 .L0 
     /tmp/ccNTdQVw.s:220    .text:0000000000000158 .L0 
     /tmp/ccNTdQVw.s:223    .text:000000000000015c .L0 
     /tmp/ccNTdQVw.s:224    .text:000000000000015c .L0 
     /tmp/ccNTdQVw.s:227    .text:0000000000000164 .L0 
     /tmp/ccNTdQVw.s:228    .text:0000000000000164 .L0 
     /tmp/ccNTdQVw.s:229    .text:0000000000000164 .L0 
     /tmp/ccNTdQVw.s:230    .text:0000000000000164 .L0 
     /tmp/ccNTdQVw.s:233    .text:000000000000016c .L0 
     /tmp/ccNTdQVw.s:237    .text:0000000000000170 .L0 
     /tmp/ccNTdQVw.s:238    .text:0000000000000170 .L0 
     /tmp/ccNTdQVw.s:242    .text:0000000000000174 .L0 
     /tmp/ccNTdQVw.s:243    .text:0000000000000174 .L0 
     /tmp/ccNTdQVw.s:245    .text:0000000000000178 .L0 
     /tmp/ccNTdQVw.s:249    .text:000000000000017c .L0 
GAS LISTING /tmp/ccNTdQVw.s 			page 31


     /tmp/ccNTdQVw.s:250    .text:000000000000017c .L0 
     /tmp/ccNTdQVw.s:251    .text:000000000000017c .L0 
     /tmp/ccNTdQVw.s:253    .text:0000000000000180 .L0 
     /tmp/ccNTdQVw.s:257    .text:0000000000000184 .L0 
     /tmp/ccNTdQVw.s:264    .text:0000000000000188 .L0 
     /tmp/ccNTdQVw.s:265    .text:0000000000000188 .L0 
     /tmp/ccNTdQVw.s:266    .text:0000000000000188 .L0 
     /tmp/ccNTdQVw.s:268    .text:000000000000018c .L0 
     /tmp/ccNTdQVw.s:271    .text:0000000000000190 .L0 
     /tmp/ccNTdQVw.s:272    .text:0000000000000190 .L0 
     /tmp/ccNTdQVw.s:274    .text:0000000000000194 .L0 
     /tmp/ccNTdQVw.s:278    .text:0000000000000198 .L0 
     /tmp/ccNTdQVw.s:279    .text:0000000000000198 .L0 
     /tmp/ccNTdQVw.s:282    .text:00000000000001a4 .L0 
     /tmp/ccNTdQVw.s:285    .text:00000000000001a8 .L0 
     /tmp/ccNTdQVw.s:286    .text:00000000000001a8 .L0 
     /tmp/ccNTdQVw.s:290    .text:00000000000001ac .L0 
     /tmp/ccNTdQVw.s:295    .text:00000000000001b4 .L0 
     /tmp/ccNTdQVw.s:296    .text:00000000000001b4 .L0 
     /tmp/ccNTdQVw.s:297    .text:00000000000001b4 .L0 
     /tmp/ccNTdQVw.s:299    .text:00000000000001bc .L0 
     /tmp/ccNTdQVw.s:302    .text:00000000000001c0 .L0 
     /tmp/ccNTdQVw.s:303    .text:00000000000001c0 .L0 
     /tmp/ccNTdQVw.s:305    .text:00000000000001c4 .L0 
     /tmp/ccNTdQVw.s:307    .text:00000000000001c8 .L0 
     /tmp/ccNTdQVw.s:309    .text:00000000000001cc .L0 
     /tmp/ccNTdQVw.s:310    .text:00000000000001cc .L0 
     /tmp/ccNTdQVw.s:313    .text:00000000000001d0 .L0 
     /tmp/ccNTdQVw.s:314    .text:00000000000001d0 .L0 
     /tmp/ccNTdQVw.s:317    .text:00000000000001d4 .L0 
     /tmp/ccNTdQVw.s:319    .text:00000000000001d8 .L0 
     /tmp/ccNTdQVw.s:321    .text:00000000000001dc .L0 
     /tmp/ccNTdQVw.s:322    .text:00000000000001dc .L0 
     /tmp/ccNTdQVw.s:324    .text:00000000000001e0 .L0 
     /tmp/ccNTdQVw.s:325    .text:00000000000001e0 .L0 
     /tmp/ccNTdQVw.s:330    .text:00000000000001e8 .L0 
     /tmp/ccNTdQVw.s:331    .text:00000000000001e8 .L0 
     /tmp/ccNTdQVw.s:336    .text:00000000000001f4 .L0 
     /tmp/ccNTdQVw.s:337    .text:00000000000001f4 .L0 
     /tmp/ccNTdQVw.s:339    .text:00000000000001fc .L0 
     /tmp/ccNTdQVw.s:341    .text:0000000000000200 .L0 
     /tmp/ccNTdQVw.s:342    .text:0000000000000200 .L0 
     /tmp/ccNTdQVw.s:348    .text:0000000000000208 .L0 
     /tmp/ccNTdQVw.s:349    .text:0000000000000208 .L0 
     /tmp/ccNTdQVw.s:351    .text:000000000000020c .L0 
     /tmp/ccNTdQVw.s:352    .text:000000000000020c .L0 
     /tmp/ccNTdQVw.s:355    .text:0000000000000210 .L0 
     /tmp/ccNTdQVw.s:357    .text:0000000000000214 .L0 
     /tmp/ccNTdQVw.s:359    .text:0000000000000218 .L0 
     /tmp/ccNTdQVw.s:360    .text:0000000000000218 .L0 
     /tmp/ccNTdQVw.s:362    .text:000000000000021c .L0 
     /tmp/ccNTdQVw.s:363    .text:000000000000021c .L0 
     /tmp/ccNTdQVw.s:365    .text:0000000000000224 .L0 
     /tmp/ccNTdQVw.s:367    .text:0000000000000228 .L0 
     /tmp/ccNTdQVw.s:373    .text:0000000000000230 .L0 
     /tmp/ccNTdQVw.s:374    .text:0000000000000230 .L0 
     /tmp/ccNTdQVw.s:377    .text:0000000000000234 .L0 
GAS LISTING /tmp/ccNTdQVw.s 			page 32


     /tmp/ccNTdQVw.s:379    .text:000000000000023c .L0 
     /tmp/ccNTdQVw.s:385    .text:0000000000000244 .L0 
     /tmp/ccNTdQVw.s:386    .text:0000000000000244 .L0 
     /tmp/ccNTdQVw.s:388    .text:000000000000024c .L0 
     /tmp/ccNTdQVw.s:394    .text:0000000000000254 .L0 
     /tmp/ccNTdQVw.s:395    .text:0000000000000254 .L0 
     /tmp/ccNTdQVw.s:398    .text:0000000000000258 .L0 
     /tmp/ccNTdQVw.s:401    .text:0000000000000260 .L0 
     /tmp/ccNTdQVw.s:403    .text:0000000000000264 .L0 
     /tmp/ccNTdQVw.s:404    .text:0000000000000264 .L0 
     /tmp/ccNTdQVw.s:406    .text:0000000000000268 .L0 
     /tmp/ccNTdQVw.s:412    .text:0000000000000270 .L0 
     /tmp/ccNTdQVw.s:413    .text:0000000000000270 .L0 
     /tmp/ccNTdQVw.s:415    .text:0000000000000278 .L0 
     /tmp/ccNTdQVw.s:423    .text:0000000000000280 .L0 
     /tmp/ccNTdQVw.s:425    .text:0000000000000284 .L0 
     /tmp/ccNTdQVw.s:426    .text:0000000000000284 .L0 
     /tmp/ccNTdQVw.s:428    .text:0000000000000288 .L0 
     /tmp/ccNTdQVw.s:429    .text:0000000000000288 .L0 
     /tmp/ccNTdQVw.s:434    .text:0000000000000290 .L0 
     /tmp/ccNTdQVw.s:435    .text:0000000000000290 .L0 
     /tmp/ccNTdQVw.s:440    .text:00000000000002a0 .L0 
     /tmp/ccNTdQVw.s:441    .text:00000000000002a0 .L0 
     /tmp/ccNTdQVw.s:444    .text:00000000000002a4 .L0 
     /tmp/ccNTdQVw.s:445    .text:00000000000002a4 .L0 
     /tmp/ccNTdQVw.s:450    .text:00000000000002a8 .L0 
     /tmp/ccNTdQVw.s:451    .text:00000000000002a8 .L0 
     /tmp/ccNTdQVw.s:454    .text:00000000000002b4 .L0 
     /tmp/ccNTdQVw.s:463    .text:00000000000002bc .L0 
     /tmp/ccNTdQVw.s:467    .text:00000000000002c0 .L0 
     /tmp/ccNTdQVw.s:468    .text:00000000000002c0 .L0 
     /tmp/ccNTdQVw.s:469    .text:00000000000002c4 .L0 
     /tmp/ccNTdQVw.s:471    .text:00000000000002c8 .L0 
     /tmp/ccNTdQVw.s:472    .text:00000000000002c8 .L0 
     /tmp/ccNTdQVw.s:474    .text:00000000000002cc .L0 
     /tmp/ccNTdQVw.s:477    .text:00000000000002d0 .L0 
     /tmp/ccNTdQVw.s:480    .text:00000000000002d4 .L0 
     /tmp/ccNTdQVw.s:482    .text:00000000000002d8 .L0 
     /tmp/ccNTdQVw.s:488    .text:00000000000002d8 _ZN15MemoryAllocator9mem_allocEm
     /tmp/ccNTdQVw.s:491    .text:00000000000002d8 .L0 
     /tmp/ccNTdQVw.s:493    .text:00000000000002d8 .L0 
     /tmp/ccNTdQVw.s:494    .text:00000000000002dc .L0 
     /tmp/ccNTdQVw.s:497    .text:00000000000002e4 .L0 
     /tmp/ccNTdQVw.s:498    .text:00000000000002e4 .L0 
     /tmp/ccNTdQVw.s:500    .text:00000000000002e8 .L0 
     /tmp/ccNTdQVw.s:502    .text:00000000000002e8 .L0 
     /tmp/ccNTdQVw.s:503    .text:00000000000002e8 .L0 
     /tmp/ccNTdQVw.s:506    .text:00000000000002f0 .L0 
     /tmp/ccNTdQVw.s:507    .text:00000000000002f4 .L0 
     /tmp/ccNTdQVw.s:509    .text:00000000000002f8 .L0 
     /tmp/ccNTdQVw.s:510    .text:00000000000002f8 .L0 
     /tmp/ccNTdQVw.s:512    .text:00000000000002fc .L0 
     /tmp/ccNTdQVw.s:514    .text:0000000000000300 .L0 
     /tmp/ccNTdQVw.s:520    .text:0000000000000300 _ZN15MemoryAllocator20insertNewFreeSegmentEPvm
     /tmp/ccNTdQVw.s:523    .text:0000000000000300 .L0 
     /tmp/ccNTdQVw.s:525    .text:0000000000000300 .L0 
     /tmp/ccNTdQVw.s:526    .text:0000000000000304 .L0 
GAS LISTING /tmp/ccNTdQVw.s 			page 33


     /tmp/ccNTdQVw.s:531    .text:0000000000000314 .L0 
     /tmp/ccNTdQVw.s:532    .text:0000000000000314 .L0 
     /tmp/ccNTdQVw.s:533    .text:0000000000000314 .L0 
     /tmp/ccNTdQVw.s:534    .text:0000000000000314 .L0 
     /tmp/ccNTdQVw.s:536    .text:0000000000000318 .L0 
     /tmp/ccNTdQVw.s:540    .text:0000000000000320 .L0 
     /tmp/ccNTdQVw.s:541    .text:0000000000000320 .L0 
     /tmp/ccNTdQVw.s:544    .text:0000000000000328 .L0 
     /tmp/ccNTdQVw.s:545    .text:0000000000000328 .L0 
     /tmp/ccNTdQVw.s:546    .text:0000000000000328 .L0 
     /tmp/ccNTdQVw.s:549    .text:0000000000000330 .L0 
     /tmp/ccNTdQVw.s:550    .text:0000000000000330 .L0 
     /tmp/ccNTdQVw.s:551    .text:0000000000000330 .L0 
     /tmp/ccNTdQVw.s:553    .text:0000000000000334 .L0 
     /tmp/ccNTdQVw.s:554    .text:0000000000000334 .L0 
     /tmp/ccNTdQVw.s:556    .text:0000000000000338 .L0 
     /tmp/ccNTdQVw.s:557    .text:0000000000000338 .L0 
     /tmp/ccNTdQVw.s:559    .text:000000000000033c .L0 
     /tmp/ccNTdQVw.s:563    .text:0000000000000340 .L0 
     /tmp/ccNTdQVw.s:564    .text:0000000000000340 .L0 
     /tmp/ccNTdQVw.s:566    .text:0000000000000344 .L0 
     /tmp/ccNTdQVw.s:569    .text:0000000000000348 .L0 
     /tmp/ccNTdQVw.s:570    .text:0000000000000348 .L0 
     /tmp/ccNTdQVw.s:571    .text:0000000000000348 .L0 
     /tmp/ccNTdQVw.s:573    .text:000000000000034c .L0 
     /tmp/ccNTdQVw.s:576    .text:0000000000000350 .L0 
     /tmp/ccNTdQVw.s:579    .text:0000000000000354 .L0 
     /tmp/ccNTdQVw.s:580    .text:0000000000000354 .L0 
     /tmp/ccNTdQVw.s:582    .text:0000000000000358 .L0 
     /tmp/ccNTdQVw.s:583    .text:0000000000000358 .L0 
     /tmp/ccNTdQVw.s:586    .text:000000000000035c .L0 
     /tmp/ccNTdQVw.s:587    .text:000000000000035c .L0 
     /tmp/ccNTdQVw.s:589    .text:0000000000000360 .L0 
     /tmp/ccNTdQVw.s:590    .text:0000000000000360 .L0 
     /tmp/ccNTdQVw.s:592    .text:0000000000000364 .L0 
     /tmp/ccNTdQVw.s:593    .text:0000000000000364 .L0 
     /tmp/ccNTdQVw.s:595    .text:0000000000000368 .L0 
     /tmp/ccNTdQVw.s:599    .text:000000000000036c .L0 
     /tmp/ccNTdQVw.s:600    .text:000000000000036c .L0 
     /tmp/ccNTdQVw.s:602    .text:0000000000000370 .L0 
     /tmp/ccNTdQVw.s:604    .text:0000000000000374 .L0 
     /tmp/ccNTdQVw.s:606    .text:0000000000000378 .L0 
     /tmp/ccNTdQVw.s:609    .text:0000000000000380 .L0 
     /tmp/ccNTdQVw.s:612    .text:0000000000000384 .L0 
     /tmp/ccNTdQVw.s:614    .text:0000000000000388 .L0 
     /tmp/ccNTdQVw.s:616    .text:000000000000038c .L0 
     /tmp/ccNTdQVw.s:619    .text:0000000000000394 .L0 
     /tmp/ccNTdQVw.s:622    .text:0000000000000398 .L0 
     /tmp/ccNTdQVw.s:623    .text:000000000000039c .L0 
     /tmp/ccNTdQVw.s:624    .text:000000000000039c .L0 
     /tmp/ccNTdQVw.s:626    .text:00000000000003a0 .L0 
     /tmp/ccNTdQVw.s:627    .text:00000000000003a0 .L0 
     /tmp/ccNTdQVw.s:629    .text:00000000000003a4 .L0 
     /tmp/ccNTdQVw.s:632    .text:00000000000003a8 .L0 
     /tmp/ccNTdQVw.s:635    .text:00000000000003ac .L0 
     /tmp/ccNTdQVw.s:639    .text:00000000000003b0 .L0 
     /tmp/ccNTdQVw.s:641    .text:00000000000003b0 .L0 
GAS LISTING /tmp/ccNTdQVw.s 			page 34


     /tmp/ccNTdQVw.s:642    .text:00000000000003b0 .L0 
     /tmp/ccNTdQVw.s:644    .text:00000000000003b8 .L0 
     /tmp/ccNTdQVw.s:645    .text:00000000000003b8 .L0 
     /tmp/ccNTdQVw.s:647    .text:00000000000003bc .L0 
     /tmp/ccNTdQVw.s:649    .text:00000000000003c0 .L0 
     /tmp/ccNTdQVw.s:650    .text:00000000000003c0 .L0 
     /tmp/ccNTdQVw.s:656    .text:00000000000003cc .L0 
     /tmp/ccNTdQVw.s:657    .text:00000000000003cc .L0 
     /tmp/ccNTdQVw.s:662    .text:00000000000003d8 .L0 
     /tmp/ccNTdQVw.s:663    .text:00000000000003d8 .L0 
     /tmp/ccNTdQVw.s:665    .text:00000000000003dc .L0 
     /tmp/ccNTdQVw.s:669    .text:00000000000003e8 .L0 
     /tmp/ccNTdQVw.s:670    .text:00000000000003e8 .L0 
     /tmp/ccNTdQVw.s:672    .text:00000000000003ec .L0 
     /tmp/ccNTdQVw.s:674    .text:00000000000003f0 .L0 
     /tmp/ccNTdQVw.s:676    .text:00000000000003f4 .L0 
     /tmp/ccNTdQVw.s:677    .text:00000000000003f4 .L0 
     /tmp/ccNTdQVw.s:681    .text:00000000000003fc .L0 
     /tmp/ccNTdQVw.s:682    .text:00000000000003fc .L0 
     /tmp/ccNTdQVw.s:686    .text:0000000000000408 .L0 
     /tmp/ccNTdQVw.s:687    .text:0000000000000408 .L0 
     /tmp/ccNTdQVw.s:689    .text:000000000000040c .L0 
     /tmp/ccNTdQVw.s:693    .text:0000000000000418 .L0 
     /tmp/ccNTdQVw.s:694    .text:0000000000000418 .L0 
     /tmp/ccNTdQVw.s:696    .text:000000000000041c .L0 
     /tmp/ccNTdQVw.s:698    .text:0000000000000420 .L0 
     /tmp/ccNTdQVw.s:700    .text:0000000000000424 .L0 
     /tmp/ccNTdQVw.s:701    .text:0000000000000424 .L0 
     /tmp/ccNTdQVw.s:705    .text:000000000000042c .L0 
     /tmp/ccNTdQVw.s:706    .text:000000000000042c .L0 
     /tmp/ccNTdQVw.s:708    .text:0000000000000434 .L0 
     /tmp/ccNTdQVw.s:709    .text:0000000000000438 .L0 
     /tmp/ccNTdQVw.s:715    .text:0000000000000438 _ZN15MemoryAllocator16tryToFreeSegmentEPv
     /tmp/ccNTdQVw.s:718    .text:0000000000000438 .L0 
     /tmp/ccNTdQVw.s:720    .text:0000000000000438 .L0 
     /tmp/ccNTdQVw.s:721    .text:000000000000043c .L0 
     /tmp/ccNTdQVw.s:726    .text:000000000000044c .L0 
     /tmp/ccNTdQVw.s:727    .text:000000000000044c .L0 
     /tmp/ccNTdQVw.s:728    .text:000000000000044c .L0 
     /tmp/ccNTdQVw.s:729    .text:000000000000044c .L0 
     /tmp/ccNTdQVw.s:731    .text:0000000000000450 .L0 
     /tmp/ccNTdQVw.s:734    .text:0000000000000454 .L0 
     /tmp/ccNTdQVw.s:735    .text:0000000000000454 .L0 
     /tmp/ccNTdQVw.s:738    .text:000000000000045c .L0 
     /tmp/ccNTdQVw.s:739    .text:000000000000045c .L0 
     /tmp/ccNTdQVw.s:740    .text:000000000000045c .L0 
     /tmp/ccNTdQVw.s:743    .text:0000000000000464 .L0 
     /tmp/ccNTdQVw.s:747    .text:0000000000000468 .L0 
     /tmp/ccNTdQVw.s:748    .text:0000000000000468 .L0 
     /tmp/ccNTdQVw.s:750    .text:000000000000046c .L0 
     /tmp/ccNTdQVw.s:751    .text:000000000000046c .L0 
     /tmp/ccNTdQVw.s:753    .text:0000000000000470 .L0 
     /tmp/ccNTdQVw.s:756    .text:0000000000000474 .L0 
     /tmp/ccNTdQVw.s:757    .text:0000000000000474 .L0 
     /tmp/ccNTdQVw.s:758    .text:0000000000000474 .L0 
     /tmp/ccNTdQVw.s:760    .text:0000000000000478 .L0 
     /tmp/ccNTdQVw.s:763    .text:000000000000047c .L0 
GAS LISTING /tmp/ccNTdQVw.s 			page 35


     /tmp/ccNTdQVw.s:766    .text:0000000000000480 .L0 
     /tmp/ccNTdQVw.s:768    .text:0000000000000484 .L0 
     /tmp/ccNTdQVw.s:769    .text:0000000000000484 .L0 
     /tmp/ccNTdQVw.s:771    .text:0000000000000488 .L0 
     /tmp/ccNTdQVw.s:773    .text:000000000000048c .L0 
     /tmp/ccNTdQVw.s:775    .text:0000000000000490 .L0 
     /tmp/ccNTdQVw.s:776    .text:0000000000000490 .L0 
     /tmp/ccNTdQVw.s:780    .text:0000000000000494 .L0 
     /tmp/ccNTdQVw.s:781    .text:0000000000000494 .L0 
     /tmp/ccNTdQVw.s:787    .text:00000000000004a4 .L0 
     /tmp/ccNTdQVw.s:788    .text:00000000000004a4 .L0 
     /tmp/ccNTdQVw.s:790    .text:00000000000004a8 .L0 
     /tmp/ccNTdQVw.s:793    .text:00000000000004ac .L0 
     /tmp/ccNTdQVw.s:794    .text:00000000000004b0 .L0 
     /tmp/ccNTdQVw.s:795    .text:00000000000004b0 .L0 
     /tmp/ccNTdQVw.s:797    .text:00000000000004b4 .L0 
     /tmp/ccNTdQVw.s:798    .text:00000000000004b4 .L0 
     /tmp/ccNTdQVw.s:800    .text:00000000000004b8 .L0 
     /tmp/ccNTdQVw.s:803    .text:00000000000004bc .L0 
     /tmp/ccNTdQVw.s:806    .text:00000000000004c0 .L0 
     /tmp/ccNTdQVw.s:810    .text:00000000000004c4 .L0 
     /tmp/ccNTdQVw.s:812    .text:00000000000004c4 .L0 
     /tmp/ccNTdQVw.s:813    .text:00000000000004c4 .L0 
     /tmp/ccNTdQVw.s:817    .text:00000000000004d0 .L0 
     /tmp/ccNTdQVw.s:818    .text:00000000000004d0 .L0 
     /tmp/ccNTdQVw.s:820    .text:00000000000004d4 .L0 
     /tmp/ccNTdQVw.s:823    .text:00000000000004dc .L0 
     /tmp/ccNTdQVw.s:825    .text:00000000000004e0 .L0 
     /tmp/ccNTdQVw.s:826    .text:00000000000004e0 .L0 
     /tmp/ccNTdQVw.s:830    .text:00000000000004e8 .L0 
     /tmp/ccNTdQVw.s:831    .text:00000000000004e8 .L0 
     /tmp/ccNTdQVw.s:835    .text:00000000000004f4 .L0 
     /tmp/ccNTdQVw.s:837    .text:00000000000004fc .L0 
     /tmp/ccNTdQVw.s:843    .text:00000000000004fc _ZN15MemoryAllocator8mem_freeEPv
     /tmp/ccNTdQVw.s:846    .text:00000000000004fc .L0 
     /tmp/ccNTdQVw.s:848    .text:00000000000004fc .L0 
     /tmp/ccNTdQVw.s:849    .text:0000000000000500 .L0 
     /tmp/ccNTdQVw.s:852    .text:0000000000000508 .L0 
     /tmp/ccNTdQVw.s:853    .text:0000000000000508 .L0 
     /tmp/ccNTdQVw.s:855    .text:000000000000050c .L0 
     /tmp/ccNTdQVw.s:857    .text:000000000000050c .L0 
     /tmp/ccNTdQVw.s:858    .text:000000000000050c .L0 
     /tmp/ccNTdQVw.s:861    .text:0000000000000514 .L0 
     /tmp/ccNTdQVw.s:862    .text:0000000000000518 .L0 
     /tmp/ccNTdQVw.s:864    .text:000000000000051c .L0 
     /tmp/ccNTdQVw.s:865    .text:000000000000051c .L0 
     /tmp/ccNTdQVw.s:867    .text:0000000000000520 .L0 
     /tmp/ccNTdQVw.s:869    .text:0000000000000524 .L0 
     /tmp/ccNTdQVw.s:875    .text:0000000000000524 _ZN15MemoryAllocator7kmallocEm
     /tmp/ccNTdQVw.s:878    .text:0000000000000524 .L0 
     /tmp/ccNTdQVw.s:880    .text:0000000000000524 .L0 
     /tmp/ccNTdQVw.s:881    .text:0000000000000528 .L0 
     /tmp/ccNTdQVw.s:884    .text:0000000000000530 .L0 
     /tmp/ccNTdQVw.s:885    .text:0000000000000530 .L0 
     /tmp/ccNTdQVw.s:887    .text:0000000000000534 .L0 
     /tmp/ccNTdQVw.s:889    .text:0000000000000534 .L0 
     /tmp/ccNTdQVw.s:890    .text:0000000000000534 .L0 
GAS LISTING /tmp/ccNTdQVw.s 			page 36


     /tmp/ccNTdQVw.s:893    .text:000000000000053c .L0 
     /tmp/ccNTdQVw.s:894    .text:0000000000000540 .L0 
     /tmp/ccNTdQVw.s:896    .text:0000000000000544 .L0 
     /tmp/ccNTdQVw.s:897    .text:0000000000000544 .L0 
     /tmp/ccNTdQVw.s:899    .text:0000000000000548 .L0 
     /tmp/ccNTdQVw.s:901    .text:000000000000054c .L0 
     /tmp/ccNTdQVw.s:907    .text:000000000000054c _ZN15MemoryAllocator15memAllocHandlerEv
     /tmp/ccNTdQVw.s:910    .text:000000000000054c .L0 
     /tmp/ccNTdQVw.s:911    .text:000000000000054c .L0 
     /tmp/ccNTdQVw.s:912    .text:0000000000000550 .L0 
     /tmp/ccNTdQVw.s:915    .text:0000000000000558 .L0 
     /tmp/ccNTdQVw.s:916    .text:0000000000000558 .L0 
     /tmp/ccNTdQVw.s:918    .text:000000000000055c .L0 
     /tmp/ccNTdQVw.s:920    .text:000000000000055c .L0 
     /tmp/ccNTdQVw.s:921    .text:000000000000055c .L0 
src/MemoryAllocator.cpp:255    .text:000000000000055c .L0 
     /tmp/ccNTdQVw.s:928    .text:0000000000000560 .L0 
     /tmp/ccNTdQVw.s:929    .text:0000000000000560 .L0 
     /tmp/ccNTdQVw.s:931    .text:0000000000000560 .L0 
     /tmp/ccNTdQVw.s:936    .text:000000000000056c .L0 
src/MemoryAllocator.cpp:258    .text:000000000000056c .L0 
     /tmp/ccNTdQVw.s:942    .text:0000000000000570 .L0 
     /tmp/ccNTdQVw.s:944    .text:0000000000000570 .L0 
     /tmp/ccNTdQVw.s:947    .text:0000000000000578 .L0 
     /tmp/ccNTdQVw.s:948    .text:000000000000057c .L0 
     /tmp/ccNTdQVw.s:950    .text:0000000000000580 .L0 
     /tmp/ccNTdQVw.s:951    .text:0000000000000580 .L0 
     /tmp/ccNTdQVw.s:953    .text:0000000000000584 .L0 
     /tmp/ccNTdQVw.s:955    .text:0000000000000588 .L0 
     /tmp/ccNTdQVw.s:961    .text:0000000000000588 _ZN15MemoryAllocator5kfreeEPv
     /tmp/ccNTdQVw.s:964    .text:0000000000000588 .L0 
     /tmp/ccNTdQVw.s:966    .text:0000000000000588 .L0 
     /tmp/ccNTdQVw.s:967    .text:000000000000058c .L0 
     /tmp/ccNTdQVw.s:970    .text:0000000000000594 .L0 
     /tmp/ccNTdQVw.s:971    .text:0000000000000594 .L0 
     /tmp/ccNTdQVw.s:973    .text:0000000000000598 .L0 
     /tmp/ccNTdQVw.s:975    .text:0000000000000598 .L0 
     /tmp/ccNTdQVw.s:976    .text:0000000000000598 .L0 
     /tmp/ccNTdQVw.s:979    .text:00000000000005a0 .L0 
     /tmp/ccNTdQVw.s:980    .text:00000000000005a4 .L0 
     /tmp/ccNTdQVw.s:982    .text:00000000000005a8 .L0 
     /tmp/ccNTdQVw.s:983    .text:00000000000005a8 .L0 
     /tmp/ccNTdQVw.s:985    .text:00000000000005ac .L0 
     /tmp/ccNTdQVw.s:987    .text:00000000000005b0 .L0 
     /tmp/ccNTdQVw.s:993    .text:00000000000005b0 _ZN15MemoryAllocator14memFreeHandlerEv
     /tmp/ccNTdQVw.s:996    .text:00000000000005b0 .L0 
     /tmp/ccNTdQVw.s:997    .text:00000000000005b0 .L0 
     /tmp/ccNTdQVw.s:998    .text:00000000000005b4 .L0 
     /tmp/ccNTdQVw.s:1001   .text:00000000000005bc .L0 
     /tmp/ccNTdQVw.s:1002   .text:00000000000005bc .L0 
     /tmp/ccNTdQVw.s:1004   .text:00000000000005c0 .L0 
     /tmp/ccNTdQVw.s:1007   .text:00000000000005c0 .L0 
     /tmp/ccNTdQVw.s:1008   .text:00000000000005c0 .L0 
src/MemoryAllocator.cpp:265    .text:00000000000005c0 .L0 
     /tmp/ccNTdQVw.s:1015   .text:00000000000005c4 .L0 
     /tmp/ccNTdQVw.s:1017   .text:00000000000005c4 .L0 
     /tmp/ccNTdQVw.s:1020   .text:00000000000005cc .L0 
GAS LISTING /tmp/ccNTdQVw.s 			page 37


src/MemoryAllocator.cpp:267    .text:00000000000005cc .L0 
     /tmp/ccNTdQVw.s:1026   .text:00000000000005d0 .L0 
     /tmp/ccNTdQVw.s:1028   .text:00000000000005d0 .L0 
     /tmp/ccNTdQVw.s:1031   .text:00000000000005d8 .L0 
     /tmp/ccNTdQVw.s:1032   .text:00000000000005dc .L0 
     /tmp/ccNTdQVw.s:1034   .text:00000000000005e0 .L0 
     /tmp/ccNTdQVw.s:1035   .text:00000000000005e0 .L0 
     /tmp/ccNTdQVw.s:1037   .text:00000000000005e4 .L0 
     /tmp/ccNTdQVw.s:1039   .text:00000000000005e8 .L0 
     /tmp/ccNTdQVw.s:1052   .bss:0000000000000000 _ZN15MemoryAllocator18memoryInitiliaizedE
     /tmp/ccNTdQVw.s:1069   .bss:0000000000000020 _ZN15MemoryAllocator8tailFreeE
     /tmp/ccNTdQVw.s:1061   .bss:0000000000000010 _ZN15MemoryAllocator13tailAllocatedE
     /tmp/ccNTdQVw.s:1065   .bss:0000000000000018 _ZN15MemoryAllocator8headFreeE
     /tmp/ccNTdQVw.s:1057   .bss:0000000000000008 _ZN15MemoryAllocator13headAllocatedE
     /tmp/ccNTdQVw.s:1049   .bss:0000000000000000 .LANCHOR0
     /tmp/ccNTdQVw.s:1076   .text:00000000000005e8 .L0 
     /tmp/ccNTdQVw.s:22     .text:000000000000000c .L0 
     /tmp/ccNTdQVw.s:28     .text:000000000000001c .L0 
     /tmp/ccNTdQVw.s:39     .text:0000000000000034 .L0 
     /tmp/ccNTdQVw.s:50     .text:000000000000004c .L0 
     /tmp/ccNTdQVw.s:114    .text:00000000000000b4 .L0 
     /tmp/ccNTdQVw.s:122    .text:00000000000000c0 .L0 
     /tmp/ccNTdQVw.s:150    .text:00000000000000ec .L0 
     /tmp/ccNTdQVw.s:158    .text:00000000000000f8 .L0 
     /tmp/ccNTdQVw.s:167    .text:000000000000010c .L0 
     /tmp/ccNTdQVw.s:230    .text:0000000000000164 .L0 
     /tmp/ccNTdQVw.s:279    .text:0000000000000198 .L0 
     /tmp/ccNTdQVw.s:297    .text:00000000000001b4 .L0 
     /tmp/ccNTdQVw.s:331    .text:00000000000001e8 .L0 
     /tmp/ccNTdQVw.s:337    .text:00000000000001f4 .L0 
     /tmp/ccNTdQVw.s:363    .text:000000000000021c .L0 
     /tmp/ccNTdQVw.s:377    .text:0000000000000234 .L0 
     /tmp/ccNTdQVw.s:386    .text:0000000000000244 .L0 
     /tmp/ccNTdQVw.s:398    .text:0000000000000258 .L0 
     /tmp/ccNTdQVw.s:413    .text:0000000000000270 .L0 
     /tmp/ccNTdQVw.s:429    .text:0000000000000288 .L0 
     /tmp/ccNTdQVw.s:451    .text:00000000000002a8 .L0 
     /tmp/ccNTdQVw.s:546    .text:0000000000000328 .L0 
     /tmp/ccNTdQVw.s:642    .text:00000000000003b0 .L0 
     /tmp/ccNTdQVw.s:650    .text:00000000000003c0 .L0 
     /tmp/ccNTdQVw.s:657    .text:00000000000003cc .L0 
     /tmp/ccNTdQVw.s:682    .text:00000000000003fc .L0 
     /tmp/ccNTdQVw.s:706    .text:000000000000042c .L0 
     /tmp/ccNTdQVw.s:740    .text:000000000000045c .L0 
     /tmp/ccNTdQVw.s:813    .text:00000000000004c4 .L0 
     /tmp/ccNTdQVw.s:820    .text:00000000000004d4 .L0 
     /tmp/ccNTdQVw.s:831    .text:00000000000004e8 .L0 
     /tmp/ccNTdQVw.s:61     .text:000000000000006c .L1
     /tmp/ccNTdQVw.s:153    .text:00000000000000f8 .L10
     /tmp/ccNTdQVw.s:163    .text:000000000000010c .L7
     /tmp/ccNTdQVw.s:139    .text:00000000000000e0 .L8
     /tmp/ccNTdQVw.s:177    .text:0000000000000124 .L4
     /tmp/ccNTdQVw.s:457    .text:00000000000002bc .L25
     /tmp/ccNTdQVw.s:258    .text:0000000000000188 .L28
     /tmp/ccNTdQVw.s:235    .text:0000000000000170 .L24
     /tmp/ccNTdQVw.s:419    .text:0000000000000280 .L14
     /tmp/ccNTdQVw.s:345    .text:0000000000000208 .L15
GAS LISTING /tmp/ccNTdQVw.s 			page 38


     /tmp/ccNTdQVw.s:328    .text:00000000000001e8 .L29
     /tmp/ccNTdQVw.s:311    .text:00000000000001d0 .L17
     /tmp/ccNTdQVw.s:334    .text:00000000000001f4 .L18
     /tmp/ccNTdQVw.s:431    .text:0000000000000290 .L19
     /tmp/ccNTdQVw.s:300    .text:00000000000001c0 .L16
     /tmp/ccNTdQVw.s:392    .text:0000000000000254 .L20
     /tmp/ccNTdQVw.s:383    .text:0000000000000244 .L21
     /tmp/ccNTdQVw.s:371    .text:0000000000000230 .L30
     /tmp/ccNTdQVw.s:410    .text:0000000000000270 .L22
     /tmp/ccNTdQVw.s:447    .text:00000000000002a8 .L23
     /tmp/ccNTdQVw.s:465    .text:00000000000002c0 .L12
     /tmp/ccNTdQVw.s:585    .text:000000000000035c .L34
     /tmp/ccNTdQVw.s:577    .text:0000000000000354 .L44
     /tmp/ccNTdQVw.s:561    .text:0000000000000340 .L36
     /tmp/ccNTdQVw.s:638    .text:00000000000003b0 .L45
     /tmp/ccNTdQVw.s:654    .text:00000000000003cc .L46
     /tmp/ccNTdQVw.s:610    .text:0000000000000384 .L39
     /tmp/ccNTdQVw.s:660    .text:00000000000003d8 .L47
     /tmp/ccNTdQVw.s:620    .text:0000000000000398 .L33
     /tmp/ccNTdQVw.s:684    .text:0000000000000408 .L48
     /tmp/ccNTdQVw.s:597    .text:000000000000036c .L38
     /tmp/ccNTdQVw.s:679    .text:00000000000003fc .L40
     /tmp/ccNTdQVw.s:703    .text:000000000000042c .L42
     /tmp/ccNTdQVw.s:786    .text:00000000000004a4 .L50
     /tmp/ccNTdQVw.s:764    .text:0000000000000480 .L60
     /tmp/ccNTdQVw.s:745    .text:0000000000000468 .L56
     /tmp/ccNTdQVw.s:815    .text:00000000000004d0 .L52
     /tmp/ccNTdQVw.s:809    .text:00000000000004c4 .L53
     /tmp/ccNTdQVw.s:833    .text:00000000000004f4 .L58
     /tmp/ccNTdQVw.s:778    .text:0000000000000494 .L54
     /tmp/ccNTdQVw.s:828    .text:00000000000004e8 .L55
     /tmp/ccNTdQVw.s:791    .text:00000000000004ac .L49
     /tmp/ccNTdQVw.s:2303   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccNTdQVw.s:3874   .debug_str:0000000000000860 .LASF159
     /tmp/ccNTdQVw.s:3870   .debug_str:0000000000000840 .LASF160
     /tmp/ccNTdQVw.s:3898   .debug_str:00000000000009ea .LASF161
     /tmp/ccNTdQVw.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccNTdQVw.s:1072   .text:00000000000005e8 .Letext0
     /tmp/ccNTdQVw.s:3628   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccNTdQVw.s:3738   .debug_str:00000000000003cb .LASF0
     /tmp/ccNTdQVw.s:3762   .debug_str:0000000000000488 .LASF1
     /tmp/ccNTdQVw.s:3842   .debug_str:0000000000000762 .LASF2
     /tmp/ccNTdQVw.s:3850   .debug_str:00000000000007a2 .LASF4
     /tmp/ccNTdQVw.s:3750   .debug_str:0000000000000424 .LASF3
     /tmp/ccNTdQVw.s:3640   .debug_str:0000000000000092 .LASF5
     /tmp/ccNTdQVw.s:3820   .debug_str:00000000000006a4 .LASF6
     /tmp/ccNTdQVw.s:3754   .debug_str:0000000000000458 .LASF7
     /tmp/ccNTdQVw.s:3716   .debug_str:00000000000002f2 .LASF8
     /tmp/ccNTdQVw.s:3722   .debug_str:0000000000000335 .LASF9
     /tmp/ccNTdQVw.s:3672   .debug_str:000000000000017f .LASF10
     /tmp/ccNTdQVw.s:3710   .debug_str:00000000000002d1 .LASF11
     /tmp/ccNTdQVw.s:3680   .debug_str:00000000000001bd .LASF12
     /tmp/ccNTdQVw.s:3670   .debug_str:000000000000016f .LASF13
     /tmp/ccNTdQVw.s:3878   .debug_str:000000000000092b .LASF14
     /tmp/ccNTdQVw.s:3702   .debug_str:0000000000000289 .LASF15
     /tmp/ccNTdQVw.s:3866   .debug_str:000000000000081b .LASF16
     /tmp/ccNTdQVw.s:3818   .debug_str:0000000000000694 .LASF52
GAS LISTING /tmp/ccNTdQVw.s 			page 39


     /tmp/ccNTdQVw.s:3862   .debug_str:0000000000000808 .LASF20
     /tmp/ccNTdQVw.s:3760   .debug_str:0000000000000483 .LASF17
     /tmp/ccNTdQVw.s:3674   .debug_str:000000000000018e .LASF18
     /tmp/ccNTdQVw.s:3648   .debug_str:00000000000000d7 .LASF19
     /tmp/ccNTdQVw.s:3714   .debug_str:00000000000002e9 .LASF21
     /tmp/ccNTdQVw.s:3764   .debug_str:000000000000049b .LASF22
     /tmp/ccNTdQVw.s:3790   .debug_str:00000000000005a4 .LASF23
     /tmp/ccNTdQVw.s:3836   .debug_str:0000000000000740 .LASF24
     /tmp/ccNTdQVw.s:3766   .debug_str:00000000000004a9 .LASF25
     /tmp/ccNTdQVw.s:3712   .debug_str:00000000000002e0 .LASF26
     /tmp/ccNTdQVw.s:3950   .debug_str:0000000000000bc7 .LASF27
     /tmp/ccNTdQVw.s:3784   .debug_str:0000000000000571 .LASF28
     /tmp/ccNTdQVw.s:3644   .debug_str:00000000000000a4 .LASF30
     /tmp/ccNTdQVw.s:3882   .debug_str:000000000000095c .LASF29
     /tmp/ccNTdQVw.s:3786   .debug_str:000000000000057b .LASF31
     /tmp/ccNTdQVw.s:3920   .debug_str:0000000000000ac4 .LASF40
     /tmp/ccNTdQVw.s:3896   .debug_str:00000000000009c7 .LASF42
     /tmp/ccNTdQVw.s:3824   .debug_str:00000000000006cc .LASF34
     /tmp/ccNTdQVw.s:3638   .debug_str:000000000000005d .LASF36
     /tmp/ccNTdQVw.s:3930   .debug_str:0000000000000b07 .LASF32
     /tmp/ccNTdQVw.s:3634   .debug_str:0000000000000027 .LASF33
     /tmp/ccNTdQVw.s:3884   .debug_str:0000000000000965 .LASF35
     /tmp/ccNTdQVw.s:3726   .debug_str:0000000000000356 .LASF37
     /tmp/ccNTdQVw.s:3630   .debug_str:0000000000000000 .LASF38
     /tmp/ccNTdQVw.s:3812   .debug_str:0000000000000622 .LASF39
     /tmp/ccNTdQVw.s:3704   .debug_str:000000000000029f .LASF41
     /tmp/ccNTdQVw.s:3932   .debug_str:0000000000000b1d .LASF43
     /tmp/ccNTdQVw.s:3868   .debug_str:0000000000000831 .LASF44
     /tmp/ccNTdQVw.s:3696   .debug_str:0000000000000245 .LASF45
     /tmp/ccNTdQVw.s:3690   .debug_str:0000000000000216 .LASF46
     /tmp/ccNTdQVw.s:3918   .debug_str:0000000000000a95 .LASF47
     /tmp/ccNTdQVw.s:3938   .debug_str:0000000000000b6d .LASF48
     /tmp/ccNTdQVw.s:3778   .debug_str:000000000000052c .LASF49
     /tmp/ccNTdQVw.s:3678   .debug_str:00000000000001b7 .LASF50
     /tmp/ccNTdQVw.s:3814   .debug_str:000000000000064c .LASF51
     /tmp/ccNTdQVw.s:3926   .debug_str:0000000000000af7 .LASF53
     /tmp/ccNTdQVw.s:3734   .debug_str:00000000000003a8 .LASF75
     /tmp/ccNTdQVw.s:3770   .debug_str:00000000000004da .LASF77
     /tmp/ccNTdQVw.s:3914   .debug_str:0000000000000a7d .LASF54
     /tmp/ccNTdQVw.s:3942   .debug_str:0000000000000b8b .LASF55
     /tmp/ccNTdQVw.s:3860   .debug_str:00000000000007ec .LASF56
     /tmp/ccNTdQVw.s:3796   .debug_str:00000000000005c7 .LASF57
     /tmp/ccNTdQVw.s:3776   .debug_str:0000000000000514 .LASF58
     /tmp/ccNTdQVw.s:3700   .debug_str:000000000000027f .LASF59
     /tmp/ccNTdQVw.s:3632   .debug_str:0000000000000011 .LASF60
     /tmp/ccNTdQVw.s:3780   .debug_str:000000000000054b .LASF61
     /tmp/ccNTdQVw.s:3922   .debug_str:0000000000000acf .LASF62
     /tmp/ccNTdQVw.s:3666   .debug_str:000000000000014b .LASF63
     /tmp/ccNTdQVw.s:3768   .debug_str:00000000000004bc .LASF64
     /tmp/ccNTdQVw.s:3694   .debug_str:000000000000022e .LASF65
     /tmp/ccNTdQVw.s:3676   .debug_str:0000000000000193 .LASF66
     /tmp/ccNTdQVw.s:3746   .debug_str:00000000000003ff .LASF67
     /tmp/ccNTdQVw.s:3682   .debug_str:00000000000001cd .LASF68
     /tmp/ccNTdQVw.s:3654   .debug_str:00000000000000f8 .LASF69
     /tmp/ccNTdQVw.s:3718   .debug_str:0000000000000302 .LASF70
     /tmp/ccNTdQVw.s:3856   .debug_str:00000000000007c3 .LASF71
     /tmp/ccNTdQVw.s:3706   .debug_str:00000000000002af .LASF72
GAS LISTING /tmp/ccNTdQVw.s 			page 40


     /tmp/ccNTdQVw.s:3740   .debug_str:00000000000003d8 .LASF73
     /tmp/ccNTdQVw.s:3936   .debug_str:0000000000000b53 .LASF74
     /tmp/ccNTdQVw.s:3912   .debug_str:0000000000000a74 .LASF76
     /tmp/ccNTdQVw.s:3906   .debug_str:0000000000000a44 .LASF78
     /tmp/ccNTdQVw.s:3838   .debug_str:000000000000074e .LASF79
     /tmp/ccNTdQVw.s:3810   .debug_str:000000000000060d .LASF80
     /tmp/ccNTdQVw.s:3916   .debug_str:0000000000000a8e .LASF81
     /tmp/ccNTdQVw.s:3826   .debug_str:00000000000006e7 .LASF82
     /tmp/ccNTdQVw.s:3806   .debug_str:00000000000005f2 .LASF83
     /tmp/ccNTdQVw.s:3756   .debug_str:000000000000046b .LASF84
     /tmp/ccNTdQVw.s:3798   .debug_str:00000000000005d2 .LASF85
     /tmp/ccNTdQVw.s:3892   .debug_str:0000000000000994 .LASF86
     /tmp/ccNTdQVw.s:3800   .debug_str:00000000000005da .LASF87
     /tmp/ccNTdQVw.s:3808   .debug_str:00000000000005f9 .LASF88
     /tmp/ccNTdQVw.s:3788   .debug_str:000000000000059c .LASF89
     /tmp/ccNTdQVw.s:3830   .debug_str:000000000000071f .LASF90
     /tmp/ccNTdQVw.s:3948   .debug_str:0000000000000bbf .LASF91
     /tmp/ccNTdQVw.s:3744   .debug_str:00000000000003eb .LASF92
     /tmp/ccNTdQVw.s:3944   .debug_str:0000000000000b9a .LASF93
     /tmp/ccNTdQVw.s:3876   .debug_str:0000000000000924 .LASF94
     /tmp/ccNTdQVw.s:3852   .debug_str:00000000000007a9 .LASF95
     /tmp/ccNTdQVw.s:3854   .debug_str:00000000000007bc .LASF96
     /tmp/ccNTdQVw.s:3698   .debug_str:000000000000026c .LASF97
     /tmp/ccNTdQVw.s:3692   .debug_str:0000000000000228 .LASF98
     /tmp/ccNTdQVw.s:3646   .debug_str:00000000000000c5 .LASF99
     /tmp/ccNTdQVw.s:3742   .debug_str:00000000000003e5 .LASF100
     /tmp/ccNTdQVw.s:3688   .debug_str:0000000000000204 .LASF101
     /tmp/ccNTdQVw.s:3662   .debug_str:0000000000000129 .LASF102
     /tmp/ccNTdQVw.s:3858   .debug_str:00000000000007d1 .LASF103
     /tmp/ccNTdQVw.s:3642   .debug_str:0000000000000099 .LASF104
     /tmp/ccNTdQVw.s:3846   .debug_str:0000000000000777 .LASF105
     /tmp/ccNTdQVw.s:3840   .debug_str:0000000000000757 .LASF106
     /tmp/ccNTdQVw.s:3946   .debug_str:0000000000000ba7 .LASF107
     /tmp/ccNTdQVw.s:3844   .debug_str:0000000000000770 .LASF108
     /tmp/ccNTdQVw.s:3668   .debug_str:000000000000015c .LASF109
     /tmp/ccNTdQVw.s:3864   .debug_str:0000000000000814 .LASF110
     /tmp/ccNTdQVw.s:3848   .debug_str:000000000000078f .LASF111
     /tmp/ccNTdQVw.s:3928   .debug_str:0000000000000afd .LASF112
     /tmp/ccNTdQVw.s:3940   .debug_str:0000000000000b75 .LASF113
     /tmp/ccNTdQVw.s:3924   .debug_str:0000000000000aed .LASF114
     /tmp/ccNTdQVw.s:3782   .debug_str:000000000000055b .LASF115
     /tmp/ccNTdQVw.s:3686   .debug_str:00000000000001fe .LASF116
     /tmp/ccNTdQVw.s:3728   .debug_str:0000000000000385 .LASF117
     /tmp/ccNTdQVw.s:3732   .debug_str:00000000000003a2 .LASF118
     /tmp/ccNTdQVw.s:3684   .debug_str:00000000000001ec .LASF119
     /tmp/ccNTdQVw.s:3730   .debug_str:0000000000000397 .LASF120
     /tmp/ccNTdQVw.s:3736   .debug_str:00000000000003b3 .LASF121
     /tmp/ccNTdQVw.s:3910   .debug_str:0000000000000a65 .LASF122
     /tmp/ccNTdQVw.s:3720   .debug_str:0000000000000319 .LASF123
     /tmp/ccNTdQVw.s:3822   .debug_str:00000000000006b7 .LASF124
     /tmp/ccNTdQVw.s:3752   .debug_str:0000000000000436 .LASF125
     /tmp/ccNTdQVw.s:3650   .debug_str:00000000000000dc .LASF126
     /tmp/ccNTdQVw.s:3774   .debug_str:00000000000004f7 .LASF127
     /tmp/ccNTdQVw.s:3834   .debug_str:0000000000000739 .LASF128
     /tmp/ccNTdQVw.s:3636   .debug_str:0000000000000055 .LASF129
     /tmp/ccNTdQVw.s:3656   .debug_str:0000000000000102 .LASF130
     /tmp/ccNTdQVw.s:3908   .debug_str:0000000000000a59 .LASF131
GAS LISTING /tmp/ccNTdQVw.s 			page 41


     /tmp/ccNTdQVw.s:3658   .debug_str:0000000000000111 .LASF132
     /tmp/ccNTdQVw.s:3794   .debug_str:00000000000005b5 .LASF133
     /tmp/ccNTdQVw.s:3724   .debug_str:0000000000000343 .LASF134
     /tmp/ccNTdQVw.s:3748   .debug_str:0000000000000411 .LASF135
     /tmp/ccNTdQVw.s:3664   .debug_str:0000000000000137 .LASF136
     /tmp/ccNTdQVw.s:3888   .debug_str:000000000000097f .LASF137
     /tmp/ccNTdQVw.s:3772   .debug_str:00000000000004f2 .LASF138
     /tmp/ccNTdQVw.s:3886   .debug_str:000000000000097a .LASF139
     /tmp/ccNTdQVw.s:3880   .debug_str:0000000000000937 .LASF140
     /tmp/ccNTdQVw.s:3904   .debug_str:0000000000000a25 .LASF141
     /tmp/ccNTdQVw.s:3828   .debug_str:00000000000006fa .LASF142
     /tmp/ccNTdQVw.s:3894   .debug_str:00000000000009a8 .LASF143
     /tmp/ccNTdQVw.s:3816   .debug_str:000000000000066a .LASF144
     /tmp/ccNTdQVw.s:962    .text:0000000000000588 .LFB35
     /tmp/ccNTdQVw.s:988    .text:00000000000005b0 .LFE35
     /tmp/ccNTdQVw.s:2978   .debug_loc:0000000000000000 .LLST28
     /tmp/ccNTdQVw.s:977    .text:00000000000005a0 .LVL80
     /tmp/ccNTdQVw.s:876    .text:0000000000000524 .LFB34
     /tmp/ccNTdQVw.s:902    .text:000000000000054c .LFE34
     /tmp/ccNTdQVw.s:2992   .debug_loc:0000000000000039 .LLST25
     /tmp/ccNTdQVw.s:891    .text:000000000000053c .LVL74
     /tmp/ccNTdQVw.s:994    .text:00000000000005b0 .LFB33
     /tmp/ccNTdQVw.s:1040   .text:00000000000005e8 .LFE33
     /tmp/ccNTdQVw.s:3660   .debug_str:0000000000000124 .LASF145
     /tmp/ccNTdQVw.s:3006   .debug_loc:0000000000000072 .LLST29
     /tmp/ccNTdQVw.s:3708   .debug_str:00000000000002ca .LASF146
     /tmp/ccNTdQVw.s:3018   .debug_loc:00000000000000a9 .LLST30
     /tmp/ccNTdQVw.s:1018   .text:00000000000005cc .LVL83
     /tmp/ccNTdQVw.s:1029   .text:00000000000005d8 .LVL84
     /tmp/ccNTdQVw.s:908    .text:000000000000054c .LFB32
     /tmp/ccNTdQVw.s:956    .text:0000000000000588 .LFE32
     /tmp/ccNTdQVw.s:3025   .debug_loc:00000000000000cc .LLST26
     /tmp/ccNTdQVw.s:3934   .debug_str:0000000000000b45 .LASF147
     /tmp/ccNTdQVw.s:3040   .debug_loc:0000000000000106 .LLST27
     /tmp/ccNTdQVw.s:934    .text:000000000000056c .LVL77
     /tmp/ccNTdQVw.s:945    .text:0000000000000578 .LVL78
     /tmp/ccNTdQVw.s:716    .text:0000000000000438 .LFB31
     /tmp/ccNTdQVw.s:838    .text:00000000000004fc .LFE31
     /tmp/ccNTdQVw.s:3047   .debug_loc:0000000000000129 .LLST21
     /tmp/ccNTdQVw.s:3069   .debug_loc:0000000000000188 .LLST22
     /tmp/ccNTdQVw.s:3952   .debug_str:0000000000000bd1 .LASF148
     /tmp/ccNTdQVw.s:3093   .debug_loc:00000000000001f8 .LLST23
     /tmp/ccNTdQVw.s:736    .text:000000000000045c .LVL60
     /tmp/ccNTdQVw.s:784    .text:00000000000004a4 .LVL66
     /tmp/ccNTdQVw.s:521    .text:0000000000000300 .LFB30
     /tmp/ccNTdQVw.s:710    .text:0000000000000438 .LFE30
     /tmp/ccNTdQVw.s:3113   .debug_loc:0000000000000255 .LLST16
     /tmp/ccNTdQVw.s:3135   .debug_loc:00000000000002b4 .LLST17
     /tmp/ccNTdQVw.s:3157   .debug_loc:0000000000000313 .LLST18
     /tmp/ccNTdQVw.s:3177   .debug_loc:0000000000000370 .LLST19
     /tmp/ccNTdQVw.s:3890   .debug_str:0000000000000989 .LASF149
     /tmp/ccNTdQVw.s:3201   .debug_loc:00000000000003e0 .LLST20
     /tmp/ccNTdQVw.s:542    .text:0000000000000328 .LVL47
     /tmp/ccNTdQVw.s:205    .text:0000000000000140 .LFB29
     /tmp/ccNTdQVw.s:483    .text:00000000000002d8 .LFE29
     /tmp/ccNTdQVw.s:3219   .debug_loc:000000000000042c .LLST5
     /tmp/ccNTdQVw.s:3238   .debug_loc:0000000000000488 .LLST6
GAS LISTING /tmp/ccNTdQVw.s 			page 42


     /tmp/ccNTdQVw.s:3259   .debug_loc:00000000000004e6 .LLST7
     /tmp/ccNTdQVw.s:3291   .debug_loc:000000000000057c .LLST8
     /tmp/ccNTdQVw.s:261    .text:0000000000000188 .LBB9
     /tmp/ccNTdQVw.s:459    .text:00000000000002bc .LBE9
     /tmp/ccNTdQVw.s:3804   .debug_str:00000000000005ea .LASF150
     /tmp/ccNTdQVw.s:3307   .debug_loc:00000000000005c6 .LLST9
     /tmp/ccNTdQVw.s:3792   .debug_str:00000000000005ad .LASF151
     /tmp/ccNTdQVw.s:3314   .debug_loc:00000000000005e9 .LLST10
     /tmp/ccNTdQVw.s:3900   .debug_str:0000000000000a0d .LASF152
     /tmp/ccNTdQVw.s:3460   .debug_loc:0000000000000769 .LLST11
     /tmp/ccNTdQVw.s:3758   .debug_str:000000000000047e .LASF153
     /tmp/ccNTdQVw.s:3471   .debug_loc:000000000000079f .LLST12
     /tmp/ccNTdQVw.s:283    .text:00000000000001a8 .LBB11
     /tmp/ccNTdQVw.s:421    .text:0000000000000280 .LBE11
     /tmp/ccNTdQVw.s:3832   .debug_str:0000000000000733 .LASF154
     /tmp/ccNTdQVw.s:3478   .debug_loc:00000000000007c2 .LLST13
     /tmp/ccNTdQVw.s:292    .text:00000000000001b4 .LBB13
     /tmp/ccNTdQVw.s:346    .text:0000000000000208 .LBE13
     /tmp/ccNTdQVw.s:3802   .debug_str:00000000000005e2 .LASF155
     /tmp/ccNTdQVw.s:3505   .debug_loc:0000000000000835 .LLST14
     /tmp/ccNTdQVw.s:438    .text:00000000000002a0 .LVL37
     /tmp/ccNTdQVw.s:225    .text:0000000000000164 .LVL8
     /tmp/ccNTdQVw.s:76     .text:0000000000000078 .LFB28
     /tmp/ccNTdQVw.s:199    .text:0000000000000140 .LFE28
     /tmp/ccNTdQVw.s:3512   .debug_loc:0000000000000858 .LLST0
     /tmp/ccNTdQVw.s:3530   .debug_loc:00000000000008a4 .LLST1
     /tmp/ccNTdQVw.s:3872   .debug_str:0000000000000858 .LASF156
     /tmp/ccNTdQVw.s:3548   .debug_loc:00000000000008f0 .LLST2
     /tmp/ccNTdQVw.s:3652   .debug_str:00000000000000eb .LASF157
     /tmp/ccNTdQVw.s:3566   .debug_loc:000000000000093c .LLST3
     /tmp/ccNTdQVw.s:126    .text:00000000000000d0 .LBB4
     /tmp/ccNTdQVw.s:154    .text:00000000000000f8 .LBE4
     /tmp/ccNTdQVw.s:3902   .debug_str:0000000000000a1d .LASF158
     /tmp/ccNTdQVw.s:3580   .debug_loc:0000000000000975 .LLST4
     /tmp/ccNTdQVw.s:100    .text:00000000000000a8 .LVL1
     /tmp/ccNTdQVw.s:10     .text:0000000000000000 .LFB27
     /tmp/ccNTdQVw.s:70     .text:0000000000000078 .LFE27
     /tmp/ccNTdQVw.s:844    .text:00000000000004fc .LFB26
     /tmp/ccNTdQVw.s:870    .text:0000000000000524 .LFE26
     /tmp/ccNTdQVw.s:3587   .debug_loc:0000000000000998 .LLST24
     /tmp/ccNTdQVw.s:859    .text:0000000000000514 .LVL72
     /tmp/ccNTdQVw.s:489    .text:00000000000002d8 .LFB25
     /tmp/ccNTdQVw.s:515    .text:0000000000000300 .LFE25
     /tmp/ccNTdQVw.s:3601   .debug_loc:00000000000009d1 .LLST15
     /tmp/ccNTdQVw.s:504    .text:00000000000002f0 .LVL45
     /tmp/ccNTdQVw.s:965    .text:0000000000000588 .LVL79
     /tmp/ccNTdQVw.s:879    .text:0000000000000524 .LVL73
     /tmp/ccNTdQVw.s:1006   .text:00000000000005c0 .LVL81
     /tmp/ccNTdQVw.s:1013   .text:00000000000005c4 .LVL82
     /tmp/ccNTdQVw.s:926    .text:0000000000000560 .LVL75
     /tmp/ccNTdQVw.s:932    .text:0000000000000564 .LVL76
     /tmp/ccNTdQVw.s:719    .text:0000000000000438 .LVL59
     /tmp/ccNTdQVw.s:804    .text:00000000000004bc .LVL68
     /tmp/ccNTdQVw.s:808    .text:00000000000004c4 .LVL69
     /tmp/ccNTdQVw.s:744    .text:0000000000000468 .LVL62
     /tmp/ccNTdQVw.s:755    .text:0000000000000474 .LVL63
     /tmp/ccNTdQVw.s:761    .text:000000000000047c .LVL64
GAS LISTING /tmp/ccNTdQVw.s 			page 43


     /tmp/ccNTdQVw.s:777    .text:0000000000000494 .LVL65
     /tmp/ccNTdQVw.s:821    .text:00000000000004dc .LVL70
     /tmp/ccNTdQVw.s:741    .text:0000000000000464 .LVL61
     /tmp/ccNTdQVw.s:801    .text:00000000000004b8 .LVL67
     /tmp/ccNTdQVw.s:524    .text:0000000000000300 .LVL46
     /tmp/ccNTdQVw.s:630    .text:00000000000003a4 .LVL53
     /tmp/ccNTdQVw.s:637    .text:00000000000003b0 .LVL55
     /tmp/ccNTdQVw.s:633    .text:00000000000003a8 .LVL54
     /tmp/ccNTdQVw.s:560    .text:0000000000000340 .LVL49
     /tmp/ccNTdQVw.s:568    .text:0000000000000348 .LVL50
     /tmp/ccNTdQVw.s:574    .text:0000000000000350 .LVL51
     /tmp/ccNTdQVw.s:547    .text:0000000000000330 .LVL48
     /tmp/ccNTdQVw.s:596    .text:000000000000036c .LVL52
     /tmp/ccNTdQVw.s:651    .text:00000000000003c8 .LVL56
     /tmp/ccNTdQVw.s:653    .text:00000000000003cc .LVL57
     /tmp/ccNTdQVw.s:658    .text:00000000000003d4 .LVL58
     /tmp/ccNTdQVw.s:208    .text:0000000000000140 .LVL7
     /tmp/ccNTdQVw.s:344    .text:0000000000000208 .LVL21
     /tmp/ccNTdQVw.s:418    .text:0000000000000280 .LVL35
     /tmp/ccNTdQVw.s:478    .text:00000000000002d0 .LVL43
     /tmp/ccNTdQVw.s:442    .text:00000000000002a4 .LVL38
     /tmp/ccNTdQVw.s:446    .text:00000000000002a8 .LVL39
     /tmp/ccNTdQVw.s:464    .text:00000000000002c0 .LVL41
     /tmp/ccNTdQVw.s:234    .text:0000000000000170 .LVL10
     /tmp/ccNTdQVw.s:248    .text:000000000000017c .LVL11
     /tmp/ccNTdQVw.s:254    .text:0000000000000184 .LVL12
     /tmp/ccNTdQVw.s:375    .text:0000000000000234 .LVL25
     /tmp/ccNTdQVw.s:382    .text:0000000000000244 .LVL27
     /tmp/ccNTdQVw.s:396    .text:0000000000000258 .LVL30
     /tmp/ccNTdQVw.s:430    .text:0000000000000290 .LVL36
     /tmp/ccNTdQVw.s:231    .text:000000000000016c .LVL9
     /tmp/ccNTdQVw.s:475    .text:00000000000002cc .LVL42
     /tmp/ccNTdQVw.s:263    .text:0000000000000188 .LVL13
     /tmp/ccNTdQVw.s:456    .text:00000000000002bc .LVL40
     /tmp/ccNTdQVw.s:269    .text:0000000000000190 .LVL14
     /tmp/ccNTdQVw.s:353    .text:0000000000000210 .LVL22
     /tmp/ccNTdQVw.s:368    .text:000000000000022c .LVL23
     /tmp/ccNTdQVw.s:370    .text:0000000000000230 .LVL24
     /tmp/ccNTdQVw.s:380    .text:0000000000000240 .LVL26
     /tmp/ccNTdQVw.s:389    .text:0000000000000250 .LVL28
     /tmp/ccNTdQVw.s:391    .text:0000000000000254 .LVL29
     /tmp/ccNTdQVw.s:399    .text:0000000000000260 .LVL31
     /tmp/ccNTdQVw.s:407    .text:000000000000026c .LVL32
     /tmp/ccNTdQVw.s:409    .text:0000000000000270 .LVL33
     /tmp/ccNTdQVw.s:416    .text:000000000000027c .LVL34
     /tmp/ccNTdQVw.s:275    .text:0000000000000198 .LVL15
     /tmp/ccNTdQVw.s:287    .text:00000000000001ac .LVL16
     /tmp/ccNTdQVw.s:315    .text:00000000000001d4 .LVL18
     /tmp/ccNTdQVw.s:327    .text:00000000000001e8 .LVL19
     /tmp/ccNTdQVw.s:333    .text:00000000000001f4 .LVL20
     /tmp/ccNTdQVw.s:294    .text:00000000000001b4 .LVL17
     /tmp/ccNTdQVw.s:79     .text:0000000000000078 .LVL0
     /tmp/ccNTdQVw.s:188    .text:0000000000000130 .LVL4
     /tmp/ccNTdQVw.s:194    .text:0000000000000138 .LVL6
     /tmp/ccNTdQVw.s:191    .text:0000000000000134 .LVL5
     /tmp/ccNTdQVw.s:128    .text:00000000000000d0 .LVL2
     /tmp/ccNTdQVw.s:152    .text:00000000000000f8 .LVL3
GAS LISTING /tmp/ccNTdQVw.s 			page 44


     /tmp/ccNTdQVw.s:847    .text:00000000000004fc .LVL71
     /tmp/ccNTdQVw.s:492    .text:00000000000002d8 .LVL44
     /tmp/ccNTdQVw.s:1077   .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
HEAP_START_ADDR
HEAP_END_ADDR
_ZN5Riscv13w_a0_sscratchEv
