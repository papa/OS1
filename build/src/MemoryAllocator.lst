GAS LISTING /tmp/cctIYM4I.s 			page 1


   1              		.file	"MemoryAllocator.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN15MemoryAllocator10initMemoryEv
   9              	_ZN15MemoryAllocator10initMemoryEv:
  10              	.LFB2:
  11              		.file 1 "src/MemoryAllocator.cpp"
   1:src/MemoryAllocator.cpp **** //
   2:src/MemoryAllocator.cpp **** // Created by os on 4/27/22.
   3:src/MemoryAllocator.cpp **** //
   4:src/MemoryAllocator.cpp **** 
   5:src/MemoryAllocator.cpp **** #include "../h/MemoryAllocator.h"
   6:src/MemoryAllocator.cpp **** 
   7:src/MemoryAllocator.cpp **** MemoryAllocator::BlockHeader* MemoryAllocator::headAllocated = 0;
   8:src/MemoryAllocator.cpp **** MemoryAllocator::BlockHeader* MemoryAllocator::headFree = 0;
   9:src/MemoryAllocator.cpp **** int MemoryAllocator::memoryInitiliaized = 0;
  10:src/MemoryAllocator.cpp **** 
  11:src/MemoryAllocator.cpp **** void *MemoryAllocator::mem_alloc(size_t size) {
  12:src/MemoryAllocator.cpp ****     return tryToAllocateFragment(size);
  13:src/MemoryAllocator.cpp **** }
  14:src/MemoryAllocator.cpp **** 
  15:src/MemoryAllocator.cpp **** uint64 MemoryAllocator::mem_free(void * addr) {
  16:src/MemoryAllocator.cpp ****     return tryToFreeSegment(addr);
  17:src/MemoryAllocator.cpp **** }
  18:src/MemoryAllocator.cpp **** 
  19:src/MemoryAllocator.cpp **** void MemoryAllocator::initMemory()
  20:src/MemoryAllocator.cpp **** {
  12              		.loc 1 20 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  21:src/MemoryAllocator.cpp ****     if(memoryInitiliaized == 1)
  20              		.loc 1 21 5
  21              		.loc 1 21 27 is_stmt 0
  22 000c 17070000 		lw	a4,.LANCHOR0
  22      03270700 
  23              		.loc 1 21 5
  24 0014 93071000 		li	a5,1
  25 0018 6302F704 		beq	a4,a5,.L1
  22:src/MemoryAllocator.cpp ****         return;
  23:src/MemoryAllocator.cpp ****     memoryInitiliaized = 1;
  26              		.loc 1 23 5 is_stmt 1
  27              		.loc 1 23 24 is_stmt 0
  28 001c 97070000 		lla	a5,.LANCHOR0
  28      93870700 
  29 0024 13071000 		li	a4,1
  30 0028 23A0E700 		sw	a4,0(a5)
  24:src/MemoryAllocator.cpp ****     headAllocated = 0;
  31              		.loc 1 24 5 is_stmt 1
  32              		.loc 1 24 19 is_stmt 0
GAS LISTING /tmp/cctIYM4I.s 			page 2


  33 002c 23B40700 		sd	zero,8(a5)
  25:src/MemoryAllocator.cpp ****     headFree = (BlockHeader*)HEAP_START_ADDR;
  34              		.loc 1 25 5 is_stmt 1
  35              		.loc 1 25 14 is_stmt 0
  36 0030 17070000 		la	a4,HEAP_START_ADDR
  36      03370700 
  37 0038 03370700 		ld	a4,0(a4)
  38 003c 23B8E700 		sd	a4,16(a5)
  26:src/MemoryAllocator.cpp ****     headFree->next = 0;
  39              		.loc 1 26 5 is_stmt 1
  40              		.loc 1 26 20 is_stmt 0
  41 0040 23340700 		sd	zero,8(a4)
  27:src/MemoryAllocator.cpp ****     headFree->size = (size_t)((size_t)HEAP_END_ADDR - (size_t)HEAP_START_ADDR + 1 - sizeof(BlockHea
  42              		.loc 1 27 5 is_stmt 1
  43              		.loc 1 27 53 is_stmt 0
  44 0044 97070000 		la	a5,HEAP_END_ADDR
  44      83B70700 
  45 004c 83B70700 		ld	a5,0(a5)
  46 0050 B387E740 		sub	a5,a5,a4
  47              		.loc 1 27 83
  48 0054 938717FF 		addi	a5,a5,-15
  49              		.loc 1 27 20
  50 0058 2330F700 		sd	a5,0(a4)
  51              	.L1:
  28:src/MemoryAllocator.cpp **** }
  52              		.loc 1 28 1
  53 005c 03348100 		ld	s0,8(sp)
  54              		.cfi_restore 8
  55              		.cfi_def_cfa 2, 16
  56 0060 13010101 		addi	sp,sp,16
  57              		.cfi_def_cfa_offset 0
  58 0064 67800000 		jr	ra
  59              		.cfi_endproc
  60              	.LFE2:
  62              		.align	2
  63              		.globl	_ZN15MemoryAllocator26insertNewAllocatedFragmentEPvm
  65              	_ZN15MemoryAllocator26insertNewAllocatedFragmentEPvm:
  66              	.LFB3:
  29:src/MemoryAllocator.cpp **** 
  30:src/MemoryAllocator.cpp **** void MemoryAllocator::insertNewAllocatedFragment(void *addr, size_t size) {
  67              		.loc 1 30 75 is_stmt 1
  68              		.cfi_startproc
  69              	.LVL0:
  70 0068 130101FE 		addi	sp,sp,-32
  71              		.cfi_def_cfa_offset 32
  72 006c 233C1100 		sd	ra,24(sp)
  73 0070 23388100 		sd	s0,16(sp)
  74 0074 23349100 		sd	s1,8(sp)
  75 0078 23302101 		sd	s2,0(sp)
  76              		.cfi_offset 1, -8
  77              		.cfi_offset 8, -16
  78              		.cfi_offset 9, -24
  79              		.cfi_offset 18, -32
  80 007c 13040102 		addi	s0,sp,32
  81              		.cfi_def_cfa 8, 0
  82 0080 93040500 		mv	s1,a0
  83 0084 13890500 		mv	s2,a1
GAS LISTING /tmp/cctIYM4I.s 			page 3


  31:src/MemoryAllocator.cpp **** 
  32:src/MemoryAllocator.cpp ****     initMemory();
  84              		.loc 1 32 5
  85              		.loc 1 32 15 is_stmt 0
  86 0088 97000000 		call	_ZN15MemoryAllocator10initMemoryEv
  86      E7800000 
  87              	.LVL1:
  33:src/MemoryAllocator.cpp ****     BlockHeader* prev = 0;
  88              		.loc 1 33 5 is_stmt 1
  34:src/MemoryAllocator.cpp ****     BlockHeader* curr =  headAllocated;
  89              		.loc 1 34 5
  90              		.loc 1 34 18 is_stmt 0
  91 0090 97070000 		ld	a5,.LANCHOR0+8
  91      83B70700 
  92              	.LVL2:
  35:src/MemoryAllocator.cpp ****     BlockHeader* newAllocated = (BlockHeader*)addr;
  93              		.loc 1 35 5 is_stmt 1
  36:src/MemoryAllocator.cpp ****     newAllocated->next = 0;
  94              		.loc 1 36 5
  95              		.loc 1 36 24 is_stmt 0
  96 0098 23B40400 		sd	zero,8(s1)
  37:src/MemoryAllocator.cpp ****     newAllocated->size = size;
  97              		.loc 1 37 5 is_stmt 1
  98              		.loc 1 37 24 is_stmt 0
  99 009c 23B02401 		sd	s2,0(s1)
  33:src/MemoryAllocator.cpp ****     BlockHeader* curr =  headAllocated;
 100              		.loc 1 33 18
 101 00a0 13070000 		li	a4,0
 102              	.LVL3:
 103              	.L7:
  38:src/MemoryAllocator.cpp ****     while(curr != 0)
 104              		.loc 1 38 5 is_stmt 1
 105              		.loc 1 38 16
 106 00a4 638C0700 		beqz	a5,.L5
  39:src/MemoryAllocator.cpp ****     {
  40:src/MemoryAllocator.cpp ****         if((void*)curr > addr)
 107              		.loc 1 40 9
 108 00a8 63E8F400 		bgtu	a5,s1,.L11
  41:src/MemoryAllocator.cpp ****         {
  42:src/MemoryAllocator.cpp ****             newAllocated->next = curr;
  43:src/MemoryAllocator.cpp ****             break;
  44:src/MemoryAllocator.cpp ****         }
  45:src/MemoryAllocator.cpp ****         prev = curr;
 109              		.loc 1 45 9
 110              	.LVL4:
  46:src/MemoryAllocator.cpp ****         curr = curr->next;
 111              		.loc 1 46 9
  45:src/MemoryAllocator.cpp ****         curr = curr->next;
 112              		.loc 1 45 14 is_stmt 0
 113 00ac 13870700 		mv	a4,a5
 114              		.loc 1 46 14
 115 00b0 83B78700 		ld	a5,8(a5)
 116              	.LVL5:
  38:src/MemoryAllocator.cpp ****     {
 117              		.loc 1 38 5
 118 00b4 6FF01FFF 		j	.L7
 119              	.L11:
GAS LISTING /tmp/cctIYM4I.s 			page 4


  42:src/MemoryAllocator.cpp ****             break;
 120              		.loc 1 42 13 is_stmt 1
  42:src/MemoryAllocator.cpp ****             break;
 121              		.loc 1 42 32 is_stmt 0
 122 00b8 23B4F400 		sd	a5,8(s1)
  43:src/MemoryAllocator.cpp ****         }
 123              		.loc 1 43 13 is_stmt 1
 124              	.L5:
  47:src/MemoryAllocator.cpp ****     }
  48:src/MemoryAllocator.cpp **** 
  49:src/MemoryAllocator.cpp ****     if(prev == 0)
 125              		.loc 1 49 5
 126 00bc 63000702 		beqz	a4,.L12
  50:src/MemoryAllocator.cpp ****         headAllocated = newAllocated;
  51:src/MemoryAllocator.cpp ****     else
  52:src/MemoryAllocator.cpp ****         prev->next = newAllocated;
 127              		.loc 1 52 9
 128              		.loc 1 52 20 is_stmt 0
 129 00c0 23349700 		sd	s1,8(a4)
 130              	.LVL6:
 131              	.L4:
  53:src/MemoryAllocator.cpp **** }
 132              		.loc 1 53 1
 133 00c4 83308101 		ld	ra,24(sp)
 134              		.cfi_remember_state
 135              		.cfi_restore 1
 136 00c8 03340101 		ld	s0,16(sp)
 137              		.cfi_restore 8
 138              		.cfi_def_cfa 2, 32
 139 00cc 83348100 		ld	s1,8(sp)
 140              		.cfi_restore 9
 141              	.LVL7:
 142 00d0 03390100 		ld	s2,0(sp)
 143              		.cfi_restore 18
 144              	.LVL8:
 145 00d4 13010102 		addi	sp,sp,32
 146              		.cfi_def_cfa_offset 0
 147 00d8 67800000 		jr	ra
 148              	.LVL9:
 149              	.L12:
 150              		.cfi_restore_state
  50:src/MemoryAllocator.cpp ****         headAllocated = newAllocated;
 151              		.loc 1 50 9 is_stmt 1
  50:src/MemoryAllocator.cpp ****         headAllocated = newAllocated;
 152              		.loc 1 50 23 is_stmt 0
 153 00dc 97070000 		sd	s1,.LANCHOR0+8,a5
 153      23B09700 
 154              	.LVL10:
 155 00e4 6FF01FFE 		j	.L4
 156              		.cfi_endproc
 157              	.LFE3:
 159              		.align	2
 160              		.globl	_ZN15MemoryAllocator21tryToAllocateFragmentEm
 162              	_ZN15MemoryAllocator21tryToAllocateFragmentEm:
 163              	.LFB4:
  54:src/MemoryAllocator.cpp **** 
  55:src/MemoryAllocator.cpp **** void* MemoryAllocator::tryToAllocateFragment(size_t size) {
GAS LISTING /tmp/cctIYM4I.s 			page 5


 164              		.loc 1 55 59 is_stmt 1
 165              		.cfi_startproc
 166              	.LVL11:
 167 00e8 130101FE 		addi	sp,sp,-32
 168              		.cfi_def_cfa_offset 32
 169 00ec 233C1100 		sd	ra,24(sp)
 170 00f0 23388100 		sd	s0,16(sp)
 171 00f4 23349100 		sd	s1,8(sp)
 172 00f8 23302101 		sd	s2,0(sp)
 173              		.cfi_offset 1, -8
 174              		.cfi_offset 8, -16
 175              		.cfi_offset 9, -24
 176              		.cfi_offset 18, -32
 177 00fc 13040102 		addi	s0,sp,32
 178              		.cfi_def_cfa 8, 0
 179 0100 13090500 		mv	s2,a0
  56:src/MemoryAllocator.cpp ****     initMemory();
 180              		.loc 1 56 5
 181              		.loc 1 56 15 is_stmt 0
 182 0104 97000000 		call	_ZN15MemoryAllocator10initMemoryEv
 182      E7800000 
 183              	.LVL12:
  57:src/MemoryAllocator.cpp ****     uint64 retval = 0;
 184              		.loc 1 57 5 is_stmt 1
  58:src/MemoryAllocator.cpp ****     BlockHeader* prev = 0;
 185              		.loc 1 58 5
  59:src/MemoryAllocator.cpp ****     BlockHeader* curr = headFree;
 186              		.loc 1 59 5
 187              		.loc 1 59 18 is_stmt 0
 188 010c 97040000 		ld	s1,.LANCHOR0+16
 188      83B40400 
 189              	.LVL13:
  58:src/MemoryAllocator.cpp ****     BlockHeader* prev = 0;
 190              		.loc 1 58 18
 191 0114 13070000 		li	a4,0
 192              	.LVL14:
 193              	.L20:
  60:src/MemoryAllocator.cpp ****     while(curr != 0) {
 194              		.loc 1 60 5 is_stmt 1
 195              		.loc 1 60 16
 196 0118 63880408 		beqz	s1,.L21
 197              	.LBB2:
  61:src/MemoryAllocator.cpp **** 
  62:src/MemoryAllocator.cpp ****         if(curr->size >= size) {
 198              		.loc 1 62 9
 199              	.LBB3:
 200              		.loc 1 62 18 is_stmt 0
 201 011c 83B70400 		ld	a5,0(s1)
 202              		.loc 1 62 9
 203 0120 63F82701 		bgeu	a5,s2,.L23
 204              	.LBE3:
  63:src/MemoryAllocator.cpp **** 
  64:src/MemoryAllocator.cpp ****             void* oldAddr = curr;
  65:src/MemoryAllocator.cpp ****             void* newAddr = ((char*)curr + size + sizeof(BlockHeader));
  66:src/MemoryAllocator.cpp ****             if(newAddr <= HEAP_END_ADDR)
  67:src/MemoryAllocator.cpp ****             {
  68:src/MemoryAllocator.cpp ****                 uint64 size2 = curr->size - size;
GAS LISTING /tmp/cctIYM4I.s 			page 6


  69:src/MemoryAllocator.cpp **** 
  70:src/MemoryAllocator.cpp ****                 if(size2 > sizeof(BlockHeader))
  71:src/MemoryAllocator.cpp ****                 {
  72:src/MemoryAllocator.cpp ****                     BlockHeader *newFree = (BlockHeader *) newAddr;
  73:src/MemoryAllocator.cpp ****                     newFree->next = curr->next;
  74:src/MemoryAllocator.cpp ****                     newFree->size = size2 - sizeof(BlockHeader);
  75:src/MemoryAllocator.cpp ****                     if (prev != 0)
  76:src/MemoryAllocator.cpp ****                         prev->next = newFree;
  77:src/MemoryAllocator.cpp ****                     else
  78:src/MemoryAllocator.cpp ****                         headFree = newFree;
  79:src/MemoryAllocator.cpp ****                 }
  80:src/MemoryAllocator.cpp ****             }
  81:src/MemoryAllocator.cpp ****             else
  82:src/MemoryAllocator.cpp ****             {
  83:src/MemoryAllocator.cpp ****                 if(prev != 0)
  84:src/MemoryAllocator.cpp ****                     prev->next = 0;
  85:src/MemoryAllocator.cpp ****                 else
  86:src/MemoryAllocator.cpp ****                     headFree = 0;
  87:src/MemoryAllocator.cpp ****             }
  88:src/MemoryAllocator.cpp ****             insertNewAllocatedFragment(oldAddr, size);
  89:src/MemoryAllocator.cpp ****             uint64 oldA = (uint64)((char*)oldAddr + sizeof(BlockHeader));
  90:src/MemoryAllocator.cpp ****             retval = oldA;
  91:src/MemoryAllocator.cpp ****             break;
  92:src/MemoryAllocator.cpp ****         }
  93:src/MemoryAllocator.cpp ****         prev = curr;
 205              		.loc 1 93 9 is_stmt 1
 206              	.LVL15:
  94:src/MemoryAllocator.cpp ****         curr = curr->next;
 207              		.loc 1 94 9
  93:src/MemoryAllocator.cpp ****         curr = curr->next;
 208              		.loc 1 93 14 is_stmt 0
 209 0124 13870400 		mv	a4,s1
 210              		.loc 1 94 14
 211 0128 83B48400 		ld	s1,8(s1)
 212              	.LVL16:
 213              	.LBE2:
  60:src/MemoryAllocator.cpp **** 
 214              		.loc 1 60 5
 215 012c 6FF0DFFE 		j	.L20
 216              	.L23:
 217              	.LBB11:
 218              	.LBB10:
 219              	.LBB4:
  64:src/MemoryAllocator.cpp ****             void* newAddr = ((char*)curr + size + sizeof(BlockHeader));
 220              		.loc 1 64 13 is_stmt 1
 221              	.LVL17:
  65:src/MemoryAllocator.cpp ****             if(newAddr <= HEAP_END_ADDR)
 222              		.loc 1 65 13
  65:src/MemoryAllocator.cpp ****             if(newAddr <= HEAP_END_ADDR)
 223              		.loc 1 65 49 is_stmt 0
 224 0130 93060901 		addi	a3,s2,16
  65:src/MemoryAllocator.cpp ****             if(newAddr <= HEAP_END_ADDR)
 225              		.loc 1 65 19
 226 0134 B386D400 		add	a3,s1,a3
 227              	.LVL18:
  66:src/MemoryAllocator.cpp ****             {
 228              		.loc 1 66 13 is_stmt 1
GAS LISTING /tmp/cctIYM4I.s 			page 7


 229              	.LBB5:
  66:src/MemoryAllocator.cpp ****             {
 230              		.loc 1 66 24 is_stmt 0
 231 0138 17060000 		la	a2,HEAP_END_ADDR
 231      03360600 
 232 0140 03360600 		ld	a2,0(a2)
  66:src/MemoryAllocator.cpp ****             {
 233              		.loc 1 66 13
 234 0144 636CD602 		bltu	a2,a3,.L16
 235              	.LBB6:
  68:src/MemoryAllocator.cpp **** 
 236              		.loc 1 68 17 is_stmt 1
  68:src/MemoryAllocator.cpp **** 
 237              		.loc 1 68 24 is_stmt 0
 238 0148 B3872741 		sub	a5,a5,s2
 239              	.LVL19:
  70:src/MemoryAllocator.cpp ****                 {
 240              		.loc 1 70 17 is_stmt 1
 241              	.LBB7:
 242 014c 13060001 		li	a2,16
 243 0150 637AF602 		bleu	a5,a2,.L17
 244              	.LBB8:
  72:src/MemoryAllocator.cpp ****                     newFree->next = curr->next;
 245              		.loc 1 72 21
 246              	.LVL20:
  73:src/MemoryAllocator.cpp ****                     newFree->size = size2 - sizeof(BlockHeader);
 247              		.loc 1 73 21
  73:src/MemoryAllocator.cpp ****                     newFree->size = size2 - sizeof(BlockHeader);
 248              		.loc 1 73 43 is_stmt 0
 249 0154 03B68400 		ld	a2,8(s1)
  73:src/MemoryAllocator.cpp ****                     newFree->size = size2 - sizeof(BlockHeader);
 250              		.loc 1 73 35
 251 0158 23B4C600 		sd	a2,8(a3)
  74:src/MemoryAllocator.cpp ****                     if (prev != 0)
 252              		.loc 1 74 21 is_stmt 1
  74:src/MemoryAllocator.cpp ****                     if (prev != 0)
 253              		.loc 1 74 43 is_stmt 0
 254 015c 938707FF 		addi	a5,a5,-16
 255              	.LVL21:
  74:src/MemoryAllocator.cpp ****                     if (prev != 0)
 256              		.loc 1 74 35
 257 0160 23B0F600 		sd	a5,0(a3)
  75:src/MemoryAllocator.cpp ****                         prev->next = newFree;
 258              		.loc 1 75 21 is_stmt 1
 259 0164 63060700 		beqz	a4,.L18
  76:src/MemoryAllocator.cpp ****                     else
 260              		.loc 1 76 25
  76:src/MemoryAllocator.cpp ****                     else
 261              		.loc 1 76 36 is_stmt 0
 262 0168 2334D700 		sd	a3,8(a4)
 263 016c 6F008001 		j	.L17
 264              	.L18:
  78:src/MemoryAllocator.cpp ****                 }
 265              		.loc 1 78 25 is_stmt 1
  78:src/MemoryAllocator.cpp ****                 }
 266              		.loc 1 78 34 is_stmt 0
 267 0170 97070000 		sd	a3,.LANCHOR0+16,a5
GAS LISTING /tmp/cctIYM4I.s 			page 8


 267      23B0D700 
 268              	.LVL22:
 269 0178 6F00C000 		j	.L17
 270              	.LVL23:
 271              	.L16:
 272              	.LBE8:
 273              	.LBE7:
 274              	.LBE6:
  83:src/MemoryAllocator.cpp ****                     prev->next = 0;
 275              		.loc 1 83 17 is_stmt 1
 276 017c 63000702 		beqz	a4,.L19
  84:src/MemoryAllocator.cpp ****                 else
 277              		.loc 1 84 21
  84:src/MemoryAllocator.cpp ****                 else
 278              		.loc 1 84 32 is_stmt 0
 279 0180 23340700 		sd	zero,8(a4)
 280              	.L17:
 281              	.LBE5:
  88:src/MemoryAllocator.cpp ****             uint64 oldA = (uint64)((char*)oldAddr + sizeof(BlockHeader));
 282              		.loc 1 88 13 is_stmt 1
  88:src/MemoryAllocator.cpp ****             uint64 oldA = (uint64)((char*)oldAddr + sizeof(BlockHeader));
 283              		.loc 1 88 39 is_stmt 0
 284 0184 93050900 		mv	a1,s2
 285 0188 13850400 		mv	a0,s1
 286 018c 97000000 		call	_ZN15MemoryAllocator26insertNewAllocatedFragmentEPvm
 286      E7800000 
 287              	.LVL24:
  89:src/MemoryAllocator.cpp ****             retval = oldA;
 288              		.loc 1 89 13 is_stmt 1
  89:src/MemoryAllocator.cpp ****             retval = oldA;
 289              		.loc 1 89 51 is_stmt 0
 290 0194 13850401 		addi	a0,s1,16
 291              	.LVL25:
  90:src/MemoryAllocator.cpp ****             break;
 292              		.loc 1 90 13 is_stmt 1
  91:src/MemoryAllocator.cpp ****         }
 293              		.loc 1 91 13
 294 0198 6F004001 		j	.L14
 295              	.LVL26:
 296              	.L19:
 297              	.LBB9:
  86:src/MemoryAllocator.cpp ****             }
 298              		.loc 1 86 21
  86:src/MemoryAllocator.cpp ****             }
 299              		.loc 1 86 30 is_stmt 0
 300 019c 97070000 		sd	zero,.LANCHOR0+16,a5
 300      23B00700 
 301 01a4 6FF01FFE 		j	.L17
 302              	.LVL27:
 303              	.L21:
 304              	.LBE9:
 305              	.LBE4:
 306              	.LBE10:
 307              	.LBE11:
  57:src/MemoryAllocator.cpp ****     BlockHeader* prev = 0;
 308              		.loc 1 57 12
 309 01a8 13050000 		li	a0,0
GAS LISTING /tmp/cctIYM4I.s 			page 9


 310              	.LVL28:
 311              	.L14:
  95:src/MemoryAllocator.cpp ****     }
  96:src/MemoryAllocator.cpp **** 
  97:src/MemoryAllocator.cpp ****     return (void*)retval;
 312              		.loc 1 97 5 is_stmt 1
  98:src/MemoryAllocator.cpp **** }
 313              		.loc 1 98 1 is_stmt 0
 314 01ac 83308101 		ld	ra,24(sp)
 315              		.cfi_restore 1
 316 01b0 03340101 		ld	s0,16(sp)
 317              		.cfi_restore 8
 318              		.cfi_def_cfa 2, 32
 319 01b4 83348100 		ld	s1,8(sp)
 320              		.cfi_restore 9
 321              	.LVL29:
 322 01b8 03390100 		ld	s2,0(sp)
 323              		.cfi_restore 18
 324              	.LVL30:
 325 01bc 13010102 		addi	sp,sp,32
 326              		.cfi_def_cfa_offset 0
 327 01c0 67800000 		jr	ra
 328              		.cfi_endproc
 329              	.LFE4:
 331              		.align	2
 332              		.globl	_ZN15MemoryAllocator9mem_allocEm
 334              	_ZN15MemoryAllocator9mem_allocEm:
 335              	.LFB0:
  11:src/MemoryAllocator.cpp ****     return tryToAllocateFragment(size);
 336              		.loc 1 11 47 is_stmt 1
 337              		.cfi_startproc
 338              	.LVL31:
 339 01c4 130101FF 		addi	sp,sp,-16
 340              		.cfi_def_cfa_offset 16
 341 01c8 23341100 		sd	ra,8(sp)
 342 01cc 23308100 		sd	s0,0(sp)
 343              		.cfi_offset 1, -8
 344              		.cfi_offset 8, -16
 345 01d0 13040101 		addi	s0,sp,16
 346              		.cfi_def_cfa 8, 0
  12:src/MemoryAllocator.cpp **** }
 347              		.loc 1 12 5
  12:src/MemoryAllocator.cpp **** }
 348              		.loc 1 12 33 is_stmt 0
 349 01d4 97000000 		call	_ZN15MemoryAllocator21tryToAllocateFragmentEm
 349      E7800000 
 350              	.LVL32:
  13:src/MemoryAllocator.cpp **** 
 351              		.loc 1 13 1
 352 01dc 83308100 		ld	ra,8(sp)
 353              		.cfi_restore 1
 354 01e0 03340100 		ld	s0,0(sp)
 355              		.cfi_restore 8
 356              		.cfi_def_cfa 2, 16
 357 01e4 13010101 		addi	sp,sp,16
 358              		.cfi_def_cfa_offset 0
 359 01e8 67800000 		jr	ra
GAS LISTING /tmp/cctIYM4I.s 			page 10


 360              		.cfi_endproc
 361              	.LFE0:
 363              		.align	2
 364              		.globl	_ZN15MemoryAllocator20insertNewFreeSegmentEPvm
 366              	_ZN15MemoryAllocator20insertNewFreeSegmentEPvm:
 367              	.LFB5:
  99:src/MemoryAllocator.cpp **** 
 100:src/MemoryAllocator.cpp **** void MemoryAllocator::insertNewFreeSegment(void* addr, size_t size)
 101:src/MemoryAllocator.cpp **** {
 368              		.loc 1 101 1 is_stmt 1
 369              		.cfi_startproc
 370              	.LVL33:
 371 01ec 130101FE 		addi	sp,sp,-32
 372              		.cfi_def_cfa_offset 32
 373 01f0 233C1100 		sd	ra,24(sp)
 374 01f4 23388100 		sd	s0,16(sp)
 375 01f8 23349100 		sd	s1,8(sp)
 376 01fc 23302101 		sd	s2,0(sp)
 377              		.cfi_offset 1, -8
 378              		.cfi_offset 8, -16
 379              		.cfi_offset 9, -24
 380              		.cfi_offset 18, -32
 381 0200 13040102 		addi	s0,sp,32
 382              		.cfi_def_cfa 8, 0
 383 0204 93040500 		mv	s1,a0
 384 0208 13890500 		mv	s2,a1
 102:src/MemoryAllocator.cpp ****     initMemory();
 385              		.loc 1 102 5
 386              		.loc 1 102 15 is_stmt 0
 387 020c 97000000 		call	_ZN15MemoryAllocator10initMemoryEv
 387      E7800000 
 388              	.LVL34:
 103:src/MemoryAllocator.cpp ****     BlockHeader* prev = 0;
 389              		.loc 1 103 5 is_stmt 1
 104:src/MemoryAllocator.cpp ****     BlockHeader* curr = headFree;
 390              		.loc 1 104 5
 391              		.loc 1 104 18 is_stmt 0
 392 0214 97070000 		ld	a5,.LANCHOR0+16
 392      83B70700 
 393              	.LVL35:
 105:src/MemoryAllocator.cpp ****     BlockHeader* newSegment = (BlockHeader*)addr;
 394              		.loc 1 105 5 is_stmt 1
 106:src/MemoryAllocator.cpp ****     newSegment->size = size;
 395              		.loc 1 106 5
 396              		.loc 1 106 22 is_stmt 0
 397 021c 23B02401 		sd	s2,0(s1)
 107:src/MemoryAllocator.cpp ****     newSegment->next = 0;
 398              		.loc 1 107 5 is_stmt 1
 399              		.loc 1 107 22 is_stmt 0
 400 0220 23B40400 		sd	zero,8(s1)
 103:src/MemoryAllocator.cpp ****     BlockHeader* curr = headFree;
 401              		.loc 1 103 18
 402 0224 13070000 		li	a4,0
 403              	.LVL36:
 404              	.L29:
 108:src/MemoryAllocator.cpp ****     while(curr != 0)
 405              		.loc 1 108 5 is_stmt 1
GAS LISTING /tmp/cctIYM4I.s 			page 11


 406              		.loc 1 108 16
 407 0228 638C0700 		beqz	a5,.L27
 109:src/MemoryAllocator.cpp ****     {
 110:src/MemoryAllocator.cpp ****         if((void*)curr > addr)
 408              		.loc 1 110 9
 409 022c 63E8F400 		bgtu	a5,s1,.L33
 111:src/MemoryAllocator.cpp ****         {
 112:src/MemoryAllocator.cpp ****             newSegment->next = curr;
 113:src/MemoryAllocator.cpp ****             break;
 114:src/MemoryAllocator.cpp ****         }
 115:src/MemoryAllocator.cpp **** 
 116:src/MemoryAllocator.cpp ****         prev = curr;
 410              		.loc 1 116 9
 411              	.LVL37:
 117:src/MemoryAllocator.cpp ****         curr = curr->next;
 412              		.loc 1 117 9
 116:src/MemoryAllocator.cpp ****         curr = curr->next;
 413              		.loc 1 116 14 is_stmt 0
 414 0230 13870700 		mv	a4,a5
 415              		.loc 1 117 14
 416 0234 83B78700 		ld	a5,8(a5)
 417              	.LVL38:
 108:src/MemoryAllocator.cpp ****     {
 418              		.loc 1 108 5
 419 0238 6FF01FFF 		j	.L29
 420              	.L33:
 112:src/MemoryAllocator.cpp ****             break;
 421              		.loc 1 112 13 is_stmt 1
 112:src/MemoryAllocator.cpp ****             break;
 422              		.loc 1 112 30 is_stmt 0
 423 023c 23B4F400 		sd	a5,8(s1)
 113:src/MemoryAllocator.cpp ****         }
 424              		.loc 1 113 13 is_stmt 1
 425              	.L27:
 118:src/MemoryAllocator.cpp ****     }
 119:src/MemoryAllocator.cpp **** 
 120:src/MemoryAllocator.cpp ****     if(prev == 0)
 426              		.loc 1 120 5
 427 0240 63000702 		beqz	a4,.L34
 121:src/MemoryAllocator.cpp ****         headFree = newSegment;
 122:src/MemoryAllocator.cpp ****     else
 123:src/MemoryAllocator.cpp ****         prev->next = newSegment;
 428              		.loc 1 123 9
 429              		.loc 1 123 20 is_stmt 0
 430 0244 23349700 		sd	s1,8(a4)
 431              	.LVL39:
 432              	.L26:
 124:src/MemoryAllocator.cpp **** 
 125:src/MemoryAllocator.cpp ****     /*if(newSegment->next != 0 && (char*)newSegment->next == (char*)newSegment + newSegment->size +
 126:src/MemoryAllocator.cpp ****     {
 127:src/MemoryAllocator.cpp ****         newSegment->size += newSegment->next->size + sizeof(BlockHeader);
 128:src/MemoryAllocator.cpp ****         newSegment->next = newSegment->next->next;
 129:src/MemoryAllocator.cpp ****     }
 130:src/MemoryAllocator.cpp **** 
 131:src/MemoryAllocator.cpp ****     if(prev != 0 && (char*)newSegment == (char*)prev + prev->size + sizeof(BlockHeader))
 132:src/MemoryAllocator.cpp ****     {
 133:src/MemoryAllocator.cpp ****         prev->size+=newSegment->size + sizeof(BlockHeader);
GAS LISTING /tmp/cctIYM4I.s 			page 12


 134:src/MemoryAllocator.cpp ****         prev->next = newSegment->next;
 135:src/MemoryAllocator.cpp ****     }*/
 136:src/MemoryAllocator.cpp **** 
 137:src/MemoryAllocator.cpp **** }
 433              		.loc 1 137 1
 434 0248 83308101 		ld	ra,24(sp)
 435              		.cfi_remember_state
 436              		.cfi_restore 1
 437 024c 03340101 		ld	s0,16(sp)
 438              		.cfi_restore 8
 439              		.cfi_def_cfa 2, 32
 440 0250 83348100 		ld	s1,8(sp)
 441              		.cfi_restore 9
 442              	.LVL40:
 443 0254 03390100 		ld	s2,0(sp)
 444              		.cfi_restore 18
 445              	.LVL41:
 446 0258 13010102 		addi	sp,sp,32
 447              		.cfi_def_cfa_offset 0
 448 025c 67800000 		jr	ra
 449              	.LVL42:
 450              	.L34:
 451              		.cfi_restore_state
 121:src/MemoryAllocator.cpp ****         headFree = newSegment;
 452              		.loc 1 121 9 is_stmt 1
 121:src/MemoryAllocator.cpp ****         headFree = newSegment;
 453              		.loc 1 121 18 is_stmt 0
 454 0260 97070000 		sd	s1,.LANCHOR0+16,a5
 454      23B09700 
 455              	.LVL43:
 456 0268 6FF01FFE 		j	.L26
 457              		.cfi_endproc
 458              	.LFE5:
 460              		.align	2
 461              		.globl	_ZN15MemoryAllocator16tryToFreeSegmentEPv
 463              	_ZN15MemoryAllocator16tryToFreeSegmentEPv:
 464              	.LFB6:
 138:src/MemoryAllocator.cpp **** 
 139:src/MemoryAllocator.cpp **** uint64 MemoryAllocator::tryToFreeSegment(void* addr)
 140:src/MemoryAllocator.cpp **** {
 465              		.loc 1 140 1 is_stmt 1
 466              		.cfi_startproc
 467              	.LVL44:
 468 026c 130101FE 		addi	sp,sp,-32
 469              		.cfi_def_cfa_offset 32
 470 0270 233C1100 		sd	ra,24(sp)
 471 0274 23388100 		sd	s0,16(sp)
 472 0278 23349100 		sd	s1,8(sp)
 473 027c 23302101 		sd	s2,0(sp)
 474              		.cfi_offset 1, -8
 475              		.cfi_offset 8, -16
 476              		.cfi_offset 9, -24
 477              		.cfi_offset 18, -32
 478 0280 13040102 		addi	s0,sp,32
 479              		.cfi_def_cfa 8, 0
 480 0284 13090500 		mv	s2,a0
 141:src/MemoryAllocator.cpp ****     initMemory();
GAS LISTING /tmp/cctIYM4I.s 			page 13


 481              		.loc 1 141 5
 482              		.loc 1 141 15 is_stmt 0
 483 0288 97000000 		call	_ZN15MemoryAllocator10initMemoryEv
 483      E7800000 
 484              	.LVL45:
 142:src/MemoryAllocator.cpp ****     BlockHeader* prev = 0;
 485              		.loc 1 142 5 is_stmt 1
 143:src/MemoryAllocator.cpp ****     BlockHeader* curr = headAllocated;
 486              		.loc 1 143 5
 487              		.loc 1 143 18 is_stmt 0
 488 0290 97040000 		ld	s1,.LANCHOR0+8
 488      83B40400 
 489              	.LVL46:
 142:src/MemoryAllocator.cpp ****     BlockHeader* prev = 0;
 490              		.loc 1 142 18
 491 0298 13070000 		li	a4,0
 492              	.LVL47:
 493              	.L40:
 144:src/MemoryAllocator.cpp ****     while(curr != 0)
 494              		.loc 1 144 5 is_stmt 1
 495              		.loc 1 144 16
 496 029c 638A0402 		beqz	s1,.L36
 145:src/MemoryAllocator.cpp ****     {
 146:src/MemoryAllocator.cpp ****         if(addr == (void*)((char*)curr + sizeof(BlockHeader)))
 497              		.loc 1 146 9
 498              		.loc 1 146 20 is_stmt 0
 499 02a0 93870401 		addi	a5,s1,16
 500              		.loc 1 146 9
 501 02a4 63882701 		beq	a5,s2,.L44
 147:src/MemoryAllocator.cpp ****         {
 148:src/MemoryAllocator.cpp ****             if(prev != 0)
 149:src/MemoryAllocator.cpp ****                 prev->next = curr->next;
 150:src/MemoryAllocator.cpp ****             else
 151:src/MemoryAllocator.cpp ****                 headAllocated = curr->next;
 152:src/MemoryAllocator.cpp **** 
 153:src/MemoryAllocator.cpp ****             insertNewFreeSegment((void*)curr, curr->size);
 154:src/MemoryAllocator.cpp **** 
 155:src/MemoryAllocator.cpp ****             break;
 156:src/MemoryAllocator.cpp ****         }
 157:src/MemoryAllocator.cpp **** 
 158:src/MemoryAllocator.cpp ****         prev = curr;
 502              		.loc 1 158 9 is_stmt 1
 503              	.LVL48:
 159:src/MemoryAllocator.cpp ****         curr = curr->next;
 504              		.loc 1 159 9
 158:src/MemoryAllocator.cpp ****         curr = curr->next;
 505              		.loc 1 158 14 is_stmt 0
 506 02a8 13870400 		mv	a4,s1
 507              		.loc 1 159 14
 508 02ac 83B48400 		ld	s1,8(s1)
 509              	.LVL49:
 144:src/MemoryAllocator.cpp ****     {
 510              		.loc 1 144 5
 511 02b0 6FF0DFFE 		j	.L40
 512              	.L44:
 148:src/MemoryAllocator.cpp ****                 prev->next = curr->next;
 513              		.loc 1 148 13 is_stmt 1
GAS LISTING /tmp/cctIYM4I.s 			page 14


 514 02b4 630E0702 		beqz	a4,.L38
 149:src/MemoryAllocator.cpp ****             else
 515              		.loc 1 149 17
 149:src/MemoryAllocator.cpp ****             else
 516              		.loc 1 149 36 is_stmt 0
 517 02b8 83B78400 		ld	a5,8(s1)
 149:src/MemoryAllocator.cpp ****             else
 518              		.loc 1 149 28
 519 02bc 2334F700 		sd	a5,8(a4)
 520              	.LVL50:
 521              	.L39:
 153:src/MemoryAllocator.cpp **** 
 522              		.loc 1 153 13 is_stmt 1
 153:src/MemoryAllocator.cpp **** 
 523              		.loc 1 153 33 is_stmt 0
 524 02c0 83B50400 		ld	a1,0(s1)
 525 02c4 13850400 		mv	a0,s1
 526 02c8 97000000 		call	_ZN15MemoryAllocator20insertNewFreeSegmentEPvm
 526      E7800000 
 527              	.LVL51:
 155:src/MemoryAllocator.cpp ****         }
 528              		.loc 1 155 13 is_stmt 1
 529              	.L36:
 160:src/MemoryAllocator.cpp ****     }
 161:src/MemoryAllocator.cpp **** 
 162:src/MemoryAllocator.cpp ****     if(curr != 0)
 530              		.loc 1 162 5
 531 02d0 63880402 		beqz	s1,.L42
 163:src/MemoryAllocator.cpp ****         return 0;
 532              		.loc 1 163 16 is_stmt 0
 533 02d4 13050000 		li	a0,0
 534              	.L35:
 164:src/MemoryAllocator.cpp ****     else
 165:src/MemoryAllocator.cpp ****         return 1;
 166:src/MemoryAllocator.cpp **** }
 535              		.loc 1 166 1
 536 02d8 83308101 		ld	ra,24(sp)
 537              		.cfi_remember_state
 538              		.cfi_restore 1
 539 02dc 03340101 		ld	s0,16(sp)
 540              		.cfi_restore 8
 541              		.cfi_def_cfa 2, 32
 542 02e0 83348100 		ld	s1,8(sp)
 543              		.cfi_restore 9
 544              	.LVL52:
 545 02e4 03390100 		ld	s2,0(sp)
 546              		.cfi_restore 18
 547              	.LVL53:
 548 02e8 13010102 		addi	sp,sp,32
 549              		.cfi_def_cfa_offset 0
 550 02ec 67800000 		jr	ra
 551              	.LVL54:
 552              	.L38:
 553              		.cfi_restore_state
 151:src/MemoryAllocator.cpp **** 
 554              		.loc 1 151 17 is_stmt 1
 151:src/MemoryAllocator.cpp **** 
GAS LISTING /tmp/cctIYM4I.s 			page 15


 555              		.loc 1 151 39 is_stmt 0
 556 02f0 83B78400 		ld	a5,8(s1)
 151:src/MemoryAllocator.cpp **** 
 557              		.loc 1 151 31
 558 02f4 17070000 		sd	a5,.LANCHOR0+8,a4
 558      2330F700 
 559              	.LVL55:
 560 02fc 6FF05FFC 		j	.L39
 561              	.L42:
 165:src/MemoryAllocator.cpp **** }
 562              		.loc 1 165 16
 563 0300 13051000 		li	a0,1
 564 0304 6FF05FFD 		j	.L35
 565              		.cfi_endproc
 566              	.LFE6:
 568              		.align	2
 569              		.globl	_ZN15MemoryAllocator8mem_freeEPv
 571              	_ZN15MemoryAllocator8mem_freeEPv:
 572              	.LFB1:
  15:src/MemoryAllocator.cpp ****     return tryToFreeSegment(addr);
 573              		.loc 1 15 47 is_stmt 1
 574              		.cfi_startproc
 575              	.LVL56:
 576 0308 130101FF 		addi	sp,sp,-16
 577              		.cfi_def_cfa_offset 16
 578 030c 23341100 		sd	ra,8(sp)
 579 0310 23308100 		sd	s0,0(sp)
 580              		.cfi_offset 1, -8
 581              		.cfi_offset 8, -16
 582 0314 13040101 		addi	s0,sp,16
 583              		.cfi_def_cfa 8, 0
  16:src/MemoryAllocator.cpp **** }
 584              		.loc 1 16 5
  16:src/MemoryAllocator.cpp **** }
 585              		.loc 1 16 28 is_stmt 0
 586 0318 97000000 		call	_ZN15MemoryAllocator16tryToFreeSegmentEPv
 586      E7800000 
 587              	.LVL57:
  17:src/MemoryAllocator.cpp **** 
 588              		.loc 1 17 1
 589 0320 83308100 		ld	ra,8(sp)
 590              		.cfi_restore 1
 591 0324 03340100 		ld	s0,0(sp)
 592              		.cfi_restore 8
 593              		.cfi_def_cfa 2, 16
 594 0328 13010101 		addi	sp,sp,16
 595              		.cfi_def_cfa_offset 0
 596 032c 67800000 		jr	ra
 597              		.cfi_endproc
 598              	.LFE1:
 600              		.align	2
 601              		.globl	_Z7kmallocm
 603              	_Z7kmallocm:
 604              	.LFB7:
 167:src/MemoryAllocator.cpp **** 
 168:src/MemoryAllocator.cpp **** void* kmalloc(size_t size)
 169:src/MemoryAllocator.cpp **** {
GAS LISTING /tmp/cctIYM4I.s 			page 16


 605              		.loc 1 169 1 is_stmt 1
 606              		.cfi_startproc
 607              	.LVL58:
 608 0330 130101FF 		addi	sp,sp,-16
 609              		.cfi_def_cfa_offset 16
 610 0334 23341100 		sd	ra,8(sp)
 611 0338 23308100 		sd	s0,0(sp)
 612              		.cfi_offset 1, -8
 613              		.cfi_offset 8, -16
 614 033c 13040101 		addi	s0,sp,16
 615              		.cfi_def_cfa 8, 0
 170:src/MemoryAllocator.cpp ****     return MemoryAllocator::mem_alloc(size);
 616              		.loc 1 170 5
 617              		.loc 1 170 38 is_stmt 0
 618 0340 97000000 		call	_ZN15MemoryAllocator9mem_allocEm
 618      E7800000 
 619              	.LVL59:
 171:src/MemoryAllocator.cpp **** }
 620              		.loc 1 171 1
 621 0348 83308100 		ld	ra,8(sp)
 622              		.cfi_restore 1
 623 034c 03340100 		ld	s0,0(sp)
 624              		.cfi_restore 8
 625              		.cfi_def_cfa 2, 16
 626 0350 13010101 		addi	sp,sp,16
 627              		.cfi_def_cfa_offset 0
 628 0354 67800000 		jr	ra
 629              		.cfi_endproc
 630              	.LFE7:
 632              		.align	2
 633              		.globl	_Z5kfreePv
 635              	_Z5kfreePv:
 636              	.LFB8:
 172:src/MemoryAllocator.cpp **** 
 173:src/MemoryAllocator.cpp **** uint64 kfree(void* p)
 174:src/MemoryAllocator.cpp **** {
 637              		.loc 1 174 1 is_stmt 1
 638              		.cfi_startproc
 639              	.LVL60:
 640 0358 130101FF 		addi	sp,sp,-16
 641              		.cfi_def_cfa_offset 16
 642 035c 23341100 		sd	ra,8(sp)
 643 0360 23308100 		sd	s0,0(sp)
 644              		.cfi_offset 1, -8
 645              		.cfi_offset 8, -16
 646 0364 13040101 		addi	s0,sp,16
 647              		.cfi_def_cfa 8, 0
 175:src/MemoryAllocator.cpp ****     return MemoryAllocator::mem_free(p);
 648              		.loc 1 175 5
 649              		.loc 1 175 37 is_stmt 0
 650 0368 97000000 		call	_ZN15MemoryAllocator8mem_freeEPv
 650      E7800000 
 651              	.LVL61:
 176:src/MemoryAllocator.cpp **** }...
 652              		.loc 1 176 1
 653 0370 83308100 		ld	ra,8(sp)
 654              		.cfi_restore 1
GAS LISTING /tmp/cctIYM4I.s 			page 17


 655 0374 03340100 		ld	s0,0(sp)
 656              		.cfi_restore 8
 657              		.cfi_def_cfa 2, 16
 658 0378 13010101 		addi	sp,sp,16
 659              		.cfi_def_cfa_offset 0
 660 037c 67800000 		jr	ra
 661              		.cfi_endproc
 662              	.LFE8:
 664              		.globl	_ZN15MemoryAllocator18memoryInitiliaizedE
 665              		.globl	_ZN15MemoryAllocator8headFreeE
 666              		.globl	_ZN15MemoryAllocator13headAllocatedE
 667              		.bss
 668              		.align	3
 669              		.set	.LANCHOR0,. + 0
 672              	_ZN15MemoryAllocator18memoryInitiliaizedE:
 673 0000 00000000 		.zero	4
 674 0004 00000000 		.zero	4
 677              	_ZN15MemoryAllocator13headAllocatedE:
 678 0008 00000000 		.zero	8
 678      00000000 
 681              	_ZN15MemoryAllocator8headFreeE:
 682 0010 00000000 		.zero	8
 682      00000000 
 683              		.text
 684              	.Letext0:
 685              		.file 2 "src/../h/../lib/hw.h"
 686              		.file 3 "src/../h/MemoryAllocator.h"
GAS LISTING /tmp/cctIYM4I.s 			page 18


DEFINED SYMBOLS
                            *ABS*:0000000000000000 MemoryAllocator.cpp
     /tmp/cctIYM4I.s:9      .text:0000000000000000 _ZN15MemoryAllocator10initMemoryEv
     /tmp/cctIYM4I.s:13     .text:0000000000000000 .L0 
     /tmp/cctIYM4I.s:14     .text:0000000000000000 .L0 
     /tmp/cctIYM4I.s:15     .text:0000000000000004 .L0 
     /tmp/cctIYM4I.s:17     .text:0000000000000008 .L0 
     /tmp/cctIYM4I.s:19     .text:000000000000000c .L0 
     /tmp/cctIYM4I.s:21     .text:000000000000000c .L0 
     /tmp/cctIYM4I.s:22     .text:000000000000000c .L0 
     /tmp/cctIYM4I.s:24     .text:0000000000000014 .L0 
     /tmp/cctIYM4I.s:27     .text:000000000000001c .L0 
     /tmp/cctIYM4I.s:28     .text:000000000000001c .L0 
     /tmp/cctIYM4I.s:32     .text:000000000000002c .L0 
     /tmp/cctIYM4I.s:33     .text:000000000000002c .L0 
     /tmp/cctIYM4I.s:35     .text:0000000000000030 .L0 
     /tmp/cctIYM4I.s:36     .text:0000000000000030 .L0 
     /tmp/cctIYM4I.s:40     .text:0000000000000040 .L0 
     /tmp/cctIYM4I.s:41     .text:0000000000000040 .L0 
     /tmp/cctIYM4I.s:43     .text:0000000000000044 .L0 
     /tmp/cctIYM4I.s:44     .text:0000000000000044 .L0 
     /tmp/cctIYM4I.s:48     .text:0000000000000054 .L0 
     /tmp/cctIYM4I.s:50     .text:0000000000000058 .L0 
     /tmp/cctIYM4I.s:53     .text:000000000000005c .L0 
     /tmp/cctIYM4I.s:54     .text:0000000000000060 .L0 
     /tmp/cctIYM4I.s:55     .text:0000000000000060 .L0 
     /tmp/cctIYM4I.s:57     .text:0000000000000064 .L0 
     /tmp/cctIYM4I.s:59     .text:0000000000000068 .L0 
     /tmp/cctIYM4I.s:65     .text:0000000000000068 _ZN15MemoryAllocator26insertNewAllocatedFragmentEPvm
     /tmp/cctIYM4I.s:68     .text:0000000000000068 .L0 
     /tmp/cctIYM4I.s:70     .text:0000000000000068 .L0 
     /tmp/cctIYM4I.s:71     .text:000000000000006c .L0 
     /tmp/cctIYM4I.s:76     .text:000000000000007c .L0 
     /tmp/cctIYM4I.s:77     .text:000000000000007c .L0 
     /tmp/cctIYM4I.s:78     .text:000000000000007c .L0 
     /tmp/cctIYM4I.s:79     .text:000000000000007c .L0 
     /tmp/cctIYM4I.s:81     .text:0000000000000080 .L0 
     /tmp/cctIYM4I.s:85     .text:0000000000000088 .L0 
     /tmp/cctIYM4I.s:86     .text:0000000000000088 .L0 
     /tmp/cctIYM4I.s:89     .text:0000000000000090 .L0 
     /tmp/cctIYM4I.s:90     .text:0000000000000090 .L0 
     /tmp/cctIYM4I.s:91     .text:0000000000000090 .L0 
     /tmp/cctIYM4I.s:94     .text:0000000000000098 .L0 
     /tmp/cctIYM4I.s:95     .text:0000000000000098 .L0 
     /tmp/cctIYM4I.s:96     .text:0000000000000098 .L0 
     /tmp/cctIYM4I.s:98     .text:000000000000009c .L0 
     /tmp/cctIYM4I.s:99     .text:000000000000009c .L0 
     /tmp/cctIYM4I.s:101    .text:00000000000000a0 .L0 
     /tmp/cctIYM4I.s:105    .text:00000000000000a4 .L0 
     /tmp/cctIYM4I.s:106    .text:00000000000000a4 .L0 
     /tmp/cctIYM4I.s:108    .text:00000000000000a8 .L0 
     /tmp/cctIYM4I.s:111    .text:00000000000000ac .L0 
     /tmp/cctIYM4I.s:112    .text:00000000000000ac .L0 
     /tmp/cctIYM4I.s:113    .text:00000000000000ac .L0 
     /tmp/cctIYM4I.s:115    .text:00000000000000b0 .L0 
     /tmp/cctIYM4I.s:118    .text:00000000000000b4 .L0 
     /tmp/cctIYM4I.s:121    .text:00000000000000b8 .L0 
GAS LISTING /tmp/cctIYM4I.s 			page 19


     /tmp/cctIYM4I.s:122    .text:00000000000000b8 .L0 
     /tmp/cctIYM4I.s:125    .text:00000000000000bc .L0 
     /tmp/cctIYM4I.s:126    .text:00000000000000bc .L0 
     /tmp/cctIYM4I.s:128    .text:00000000000000c0 .L0 
     /tmp/cctIYM4I.s:129    .text:00000000000000c0 .L0 
     /tmp/cctIYM4I.s:133    .text:00000000000000c4 .L0 
     /tmp/cctIYM4I.s:134    .text:00000000000000c8 .L0 
     /tmp/cctIYM4I.s:135    .text:00000000000000c8 .L0 
     /tmp/cctIYM4I.s:137    .text:00000000000000cc .L0 
     /tmp/cctIYM4I.s:138    .text:00000000000000cc .L0 
     /tmp/cctIYM4I.s:140    .text:00000000000000d0 .L0 
     /tmp/cctIYM4I.s:143    .text:00000000000000d4 .L0 
     /tmp/cctIYM4I.s:146    .text:00000000000000d8 .L0 
     /tmp/cctIYM4I.s:150    .text:00000000000000dc .L0 
     /tmp/cctIYM4I.s:152    .text:00000000000000dc .L0 
     /tmp/cctIYM4I.s:153    .text:00000000000000dc .L0 
     /tmp/cctIYM4I.s:156    .text:00000000000000e8 .L0 
     /tmp/cctIYM4I.s:162    .text:00000000000000e8 _ZN15MemoryAllocator21tryToAllocateFragmentEm
     /tmp/cctIYM4I.s:165    .text:00000000000000e8 .L0 
     /tmp/cctIYM4I.s:167    .text:00000000000000e8 .L0 
     /tmp/cctIYM4I.s:168    .text:00000000000000ec .L0 
     /tmp/cctIYM4I.s:173    .text:00000000000000fc .L0 
     /tmp/cctIYM4I.s:174    .text:00000000000000fc .L0 
     /tmp/cctIYM4I.s:175    .text:00000000000000fc .L0 
     /tmp/cctIYM4I.s:176    .text:00000000000000fc .L0 
     /tmp/cctIYM4I.s:178    .text:0000000000000100 .L0 
     /tmp/cctIYM4I.s:181    .text:0000000000000104 .L0 
     /tmp/cctIYM4I.s:182    .text:0000000000000104 .L0 
     /tmp/cctIYM4I.s:185    .text:000000000000010c .L0 
     /tmp/cctIYM4I.s:186    .text:000000000000010c .L0 
     /tmp/cctIYM4I.s:187    .text:000000000000010c .L0 
     /tmp/cctIYM4I.s:188    .text:000000000000010c .L0 
     /tmp/cctIYM4I.s:191    .text:0000000000000114 .L0 
     /tmp/cctIYM4I.s:195    .text:0000000000000118 .L0 
     /tmp/cctIYM4I.s:196    .text:0000000000000118 .L0 
     /tmp/cctIYM4I.s:200    .text:000000000000011c .L0 
     /tmp/cctIYM4I.s:201    .text:000000000000011c .L0 
     /tmp/cctIYM4I.s:203    .text:0000000000000120 .L0 
     /tmp/cctIYM4I.s:207    .text:0000000000000124 .L0 
     /tmp/cctIYM4I.s:208    .text:0000000000000124 .L0 
     /tmp/cctIYM4I.s:209    .text:0000000000000124 .L0 
     /tmp/cctIYM4I.s:211    .text:0000000000000128 .L0 
     /tmp/cctIYM4I.s:215    .text:000000000000012c .L0 
     /tmp/cctIYM4I.s:222    .text:0000000000000130 .L0 
     /tmp/cctIYM4I.s:223    .text:0000000000000130 .L0 
     /tmp/cctIYM4I.s:224    .text:0000000000000130 .L0 
     /tmp/cctIYM4I.s:226    .text:0000000000000134 .L0 
     /tmp/cctIYM4I.s:230    .text:0000000000000138 .L0 
     /tmp/cctIYM4I.s:231    .text:0000000000000138 .L0 
     /tmp/cctIYM4I.s:234    .text:0000000000000144 .L0 
     /tmp/cctIYM4I.s:237    .text:0000000000000148 .L0 
     /tmp/cctIYM4I.s:238    .text:0000000000000148 .L0 
     /tmp/cctIYM4I.s:242    .text:000000000000014c .L0 
     /tmp/cctIYM4I.s:247    .text:0000000000000154 .L0 
     /tmp/cctIYM4I.s:248    .text:0000000000000154 .L0 
     /tmp/cctIYM4I.s:249    .text:0000000000000154 .L0 
     /tmp/cctIYM4I.s:251    .text:0000000000000158 .L0 
GAS LISTING /tmp/cctIYM4I.s 			page 20


     /tmp/cctIYM4I.s:253    .text:000000000000015c .L0 
     /tmp/cctIYM4I.s:254    .text:000000000000015c .L0 
     /tmp/cctIYM4I.s:257    .text:0000000000000160 .L0 
     /tmp/cctIYM4I.s:259    .text:0000000000000164 .L0 
     /tmp/cctIYM4I.s:261    .text:0000000000000168 .L0 
     /tmp/cctIYM4I.s:262    .text:0000000000000168 .L0 
     /tmp/cctIYM4I.s:266    .text:0000000000000170 .L0 
     /tmp/cctIYM4I.s:267    .text:0000000000000170 .L0 
     /tmp/cctIYM4I.s:276    .text:000000000000017c .L0 
     /tmp/cctIYM4I.s:278    .text:0000000000000180 .L0 
     /tmp/cctIYM4I.s:279    .text:0000000000000180 .L0 
     /tmp/cctIYM4I.s:283    .text:0000000000000184 .L0 
     /tmp/cctIYM4I.s:284    .text:0000000000000184 .L0 
     /tmp/cctIYM4I.s:289    .text:0000000000000194 .L0 
     /tmp/cctIYM4I.s:290    .text:0000000000000194 .L0 
     /tmp/cctIYM4I.s:293    .text:0000000000000198 .L0 
     /tmp/cctIYM4I.s:294    .text:0000000000000198 .L0 
     /tmp/cctIYM4I.s:299    .text:000000000000019c .L0 
     /tmp/cctIYM4I.s:300    .text:000000000000019c .L0 
     /tmp/cctIYM4I.s:309    .text:00000000000001a8 .L0 
     /tmp/cctIYM4I.s:313    .text:00000000000001ac .L0 
     /tmp/cctIYM4I.s:314    .text:00000000000001ac .L0 
     /tmp/cctIYM4I.s:315    .text:00000000000001b0 .L0 
     /tmp/cctIYM4I.s:317    .text:00000000000001b4 .L0 
     /tmp/cctIYM4I.s:318    .text:00000000000001b4 .L0 
     /tmp/cctIYM4I.s:320    .text:00000000000001b8 .L0 
     /tmp/cctIYM4I.s:323    .text:00000000000001bc .L0 
     /tmp/cctIYM4I.s:326    .text:00000000000001c0 .L0 
     /tmp/cctIYM4I.s:328    .text:00000000000001c4 .L0 
     /tmp/cctIYM4I.s:334    .text:00000000000001c4 _ZN15MemoryAllocator9mem_allocEm
     /tmp/cctIYM4I.s:337    .text:00000000000001c4 .L0 
     /tmp/cctIYM4I.s:339    .text:00000000000001c4 .L0 
     /tmp/cctIYM4I.s:340    .text:00000000000001c8 .L0 
     /tmp/cctIYM4I.s:343    .text:00000000000001d0 .L0 
     /tmp/cctIYM4I.s:344    .text:00000000000001d0 .L0 
     /tmp/cctIYM4I.s:346    .text:00000000000001d4 .L0 
     /tmp/cctIYM4I.s:348    .text:00000000000001d4 .L0 
     /tmp/cctIYM4I.s:349    .text:00000000000001d4 .L0 
     /tmp/cctIYM4I.s:352    .text:00000000000001dc .L0 
     /tmp/cctIYM4I.s:353    .text:00000000000001e0 .L0 
     /tmp/cctIYM4I.s:355    .text:00000000000001e4 .L0 
     /tmp/cctIYM4I.s:356    .text:00000000000001e4 .L0 
     /tmp/cctIYM4I.s:358    .text:00000000000001e8 .L0 
     /tmp/cctIYM4I.s:360    .text:00000000000001ec .L0 
     /tmp/cctIYM4I.s:366    .text:00000000000001ec _ZN15MemoryAllocator20insertNewFreeSegmentEPvm
     /tmp/cctIYM4I.s:369    .text:00000000000001ec .L0 
     /tmp/cctIYM4I.s:371    .text:00000000000001ec .L0 
     /tmp/cctIYM4I.s:372    .text:00000000000001f0 .L0 
     /tmp/cctIYM4I.s:377    .text:0000000000000200 .L0 
     /tmp/cctIYM4I.s:378    .text:0000000000000200 .L0 
     /tmp/cctIYM4I.s:379    .text:0000000000000200 .L0 
     /tmp/cctIYM4I.s:380    .text:0000000000000200 .L0 
     /tmp/cctIYM4I.s:382    .text:0000000000000204 .L0 
     /tmp/cctIYM4I.s:386    .text:000000000000020c .L0 
     /tmp/cctIYM4I.s:387    .text:000000000000020c .L0 
     /tmp/cctIYM4I.s:390    .text:0000000000000214 .L0 
     /tmp/cctIYM4I.s:391    .text:0000000000000214 .L0 
GAS LISTING /tmp/cctIYM4I.s 			page 21


     /tmp/cctIYM4I.s:392    .text:0000000000000214 .L0 
     /tmp/cctIYM4I.s:395    .text:000000000000021c .L0 
     /tmp/cctIYM4I.s:396    .text:000000000000021c .L0 
     /tmp/cctIYM4I.s:397    .text:000000000000021c .L0 
     /tmp/cctIYM4I.s:399    .text:0000000000000220 .L0 
     /tmp/cctIYM4I.s:400    .text:0000000000000220 .L0 
     /tmp/cctIYM4I.s:402    .text:0000000000000224 .L0 
     /tmp/cctIYM4I.s:406    .text:0000000000000228 .L0 
     /tmp/cctIYM4I.s:407    .text:0000000000000228 .L0 
     /tmp/cctIYM4I.s:409    .text:000000000000022c .L0 
     /tmp/cctIYM4I.s:412    .text:0000000000000230 .L0 
     /tmp/cctIYM4I.s:413    .text:0000000000000230 .L0 
     /tmp/cctIYM4I.s:414    .text:0000000000000230 .L0 
     /tmp/cctIYM4I.s:416    .text:0000000000000234 .L0 
     /tmp/cctIYM4I.s:419    .text:0000000000000238 .L0 
     /tmp/cctIYM4I.s:422    .text:000000000000023c .L0 
     /tmp/cctIYM4I.s:423    .text:000000000000023c .L0 
     /tmp/cctIYM4I.s:426    .text:0000000000000240 .L0 
     /tmp/cctIYM4I.s:427    .text:0000000000000240 .L0 
     /tmp/cctIYM4I.s:429    .text:0000000000000244 .L0 
     /tmp/cctIYM4I.s:430    .text:0000000000000244 .L0 
     /tmp/cctIYM4I.s:434    .text:0000000000000248 .L0 
     /tmp/cctIYM4I.s:435    .text:000000000000024c .L0 
     /tmp/cctIYM4I.s:436    .text:000000000000024c .L0 
     /tmp/cctIYM4I.s:438    .text:0000000000000250 .L0 
     /tmp/cctIYM4I.s:439    .text:0000000000000250 .L0 
     /tmp/cctIYM4I.s:441    .text:0000000000000254 .L0 
     /tmp/cctIYM4I.s:444    .text:0000000000000258 .L0 
     /tmp/cctIYM4I.s:447    .text:000000000000025c .L0 
     /tmp/cctIYM4I.s:451    .text:0000000000000260 .L0 
     /tmp/cctIYM4I.s:453    .text:0000000000000260 .L0 
     /tmp/cctIYM4I.s:454    .text:0000000000000260 .L0 
     /tmp/cctIYM4I.s:457    .text:000000000000026c .L0 
     /tmp/cctIYM4I.s:463    .text:000000000000026c _ZN15MemoryAllocator16tryToFreeSegmentEPv
     /tmp/cctIYM4I.s:466    .text:000000000000026c .L0 
     /tmp/cctIYM4I.s:468    .text:000000000000026c .L0 
     /tmp/cctIYM4I.s:469    .text:0000000000000270 .L0 
     /tmp/cctIYM4I.s:474    .text:0000000000000280 .L0 
     /tmp/cctIYM4I.s:475    .text:0000000000000280 .L0 
     /tmp/cctIYM4I.s:476    .text:0000000000000280 .L0 
     /tmp/cctIYM4I.s:477    .text:0000000000000280 .L0 
     /tmp/cctIYM4I.s:479    .text:0000000000000284 .L0 
     /tmp/cctIYM4I.s:482    .text:0000000000000288 .L0 
     /tmp/cctIYM4I.s:483    .text:0000000000000288 .L0 
     /tmp/cctIYM4I.s:486    .text:0000000000000290 .L0 
     /tmp/cctIYM4I.s:487    .text:0000000000000290 .L0 
     /tmp/cctIYM4I.s:488    .text:0000000000000290 .L0 
     /tmp/cctIYM4I.s:491    .text:0000000000000298 .L0 
     /tmp/cctIYM4I.s:495    .text:000000000000029c .L0 
     /tmp/cctIYM4I.s:496    .text:000000000000029c .L0 
     /tmp/cctIYM4I.s:498    .text:00000000000002a0 .L0 
     /tmp/cctIYM4I.s:499    .text:00000000000002a0 .L0 
     /tmp/cctIYM4I.s:501    .text:00000000000002a4 .L0 
     /tmp/cctIYM4I.s:504    .text:00000000000002a8 .L0 
     /tmp/cctIYM4I.s:505    .text:00000000000002a8 .L0 
     /tmp/cctIYM4I.s:506    .text:00000000000002a8 .L0 
     /tmp/cctIYM4I.s:508    .text:00000000000002ac .L0 
GAS LISTING /tmp/cctIYM4I.s 			page 22


     /tmp/cctIYM4I.s:511    .text:00000000000002b0 .L0 
     /tmp/cctIYM4I.s:514    .text:00000000000002b4 .L0 
     /tmp/cctIYM4I.s:516    .text:00000000000002b8 .L0 
     /tmp/cctIYM4I.s:517    .text:00000000000002b8 .L0 
     /tmp/cctIYM4I.s:519    .text:00000000000002bc .L0 
     /tmp/cctIYM4I.s:523    .text:00000000000002c0 .L0 
     /tmp/cctIYM4I.s:524    .text:00000000000002c0 .L0 
     /tmp/cctIYM4I.s:530    .text:00000000000002d0 .L0 
     /tmp/cctIYM4I.s:531    .text:00000000000002d0 .L0 
     /tmp/cctIYM4I.s:533    .text:00000000000002d4 .L0 
     /tmp/cctIYM4I.s:536    .text:00000000000002d8 .L0 
     /tmp/cctIYM4I.s:537    .text:00000000000002dc .L0 
     /tmp/cctIYM4I.s:538    .text:00000000000002dc .L0 
     /tmp/cctIYM4I.s:540    .text:00000000000002e0 .L0 
     /tmp/cctIYM4I.s:541    .text:00000000000002e0 .L0 
     /tmp/cctIYM4I.s:543    .text:00000000000002e4 .L0 
     /tmp/cctIYM4I.s:546    .text:00000000000002e8 .L0 
     /tmp/cctIYM4I.s:549    .text:00000000000002ec .L0 
     /tmp/cctIYM4I.s:553    .text:00000000000002f0 .L0 
     /tmp/cctIYM4I.s:555    .text:00000000000002f0 .L0 
     /tmp/cctIYM4I.s:556    .text:00000000000002f0 .L0 
     /tmp/cctIYM4I.s:558    .text:00000000000002f4 .L0 
     /tmp/cctIYM4I.s:563    .text:0000000000000300 .L0 
     /tmp/cctIYM4I.s:565    .text:0000000000000308 .L0 
     /tmp/cctIYM4I.s:571    .text:0000000000000308 _ZN15MemoryAllocator8mem_freeEPv
     /tmp/cctIYM4I.s:574    .text:0000000000000308 .L0 
     /tmp/cctIYM4I.s:576    .text:0000000000000308 .L0 
     /tmp/cctIYM4I.s:577    .text:000000000000030c .L0 
     /tmp/cctIYM4I.s:580    .text:0000000000000314 .L0 
     /tmp/cctIYM4I.s:581    .text:0000000000000314 .L0 
     /tmp/cctIYM4I.s:583    .text:0000000000000318 .L0 
     /tmp/cctIYM4I.s:585    .text:0000000000000318 .L0 
     /tmp/cctIYM4I.s:586    .text:0000000000000318 .L0 
     /tmp/cctIYM4I.s:589    .text:0000000000000320 .L0 
     /tmp/cctIYM4I.s:590    .text:0000000000000324 .L0 
     /tmp/cctIYM4I.s:592    .text:0000000000000328 .L0 
     /tmp/cctIYM4I.s:593    .text:0000000000000328 .L0 
     /tmp/cctIYM4I.s:595    .text:000000000000032c .L0 
     /tmp/cctIYM4I.s:597    .text:0000000000000330 .L0 
     /tmp/cctIYM4I.s:603    .text:0000000000000330 _Z7kmallocm
     /tmp/cctIYM4I.s:606    .text:0000000000000330 .L0 
     /tmp/cctIYM4I.s:608    .text:0000000000000330 .L0 
     /tmp/cctIYM4I.s:609    .text:0000000000000334 .L0 
     /tmp/cctIYM4I.s:612    .text:000000000000033c .L0 
     /tmp/cctIYM4I.s:613    .text:000000000000033c .L0 
     /tmp/cctIYM4I.s:615    .text:0000000000000340 .L0 
     /tmp/cctIYM4I.s:617    .text:0000000000000340 .L0 
     /tmp/cctIYM4I.s:618    .text:0000000000000340 .L0 
     /tmp/cctIYM4I.s:621    .text:0000000000000348 .L0 
     /tmp/cctIYM4I.s:622    .text:000000000000034c .L0 
     /tmp/cctIYM4I.s:624    .text:0000000000000350 .L0 
     /tmp/cctIYM4I.s:625    .text:0000000000000350 .L0 
     /tmp/cctIYM4I.s:627    .text:0000000000000354 .L0 
     /tmp/cctIYM4I.s:629    .text:0000000000000358 .L0 
     /tmp/cctIYM4I.s:635    .text:0000000000000358 _Z5kfreePv
     /tmp/cctIYM4I.s:638    .text:0000000000000358 .L0 
     /tmp/cctIYM4I.s:640    .text:0000000000000358 .L0 
GAS LISTING /tmp/cctIYM4I.s 			page 23


     /tmp/cctIYM4I.s:641    .text:000000000000035c .L0 
     /tmp/cctIYM4I.s:644    .text:0000000000000364 .L0 
     /tmp/cctIYM4I.s:645    .text:0000000000000364 .L0 
     /tmp/cctIYM4I.s:647    .text:0000000000000368 .L0 
     /tmp/cctIYM4I.s:649    .text:0000000000000368 .L0 
     /tmp/cctIYM4I.s:650    .text:0000000000000368 .L0 
     /tmp/cctIYM4I.s:653    .text:0000000000000370 .L0 
     /tmp/cctIYM4I.s:654    .text:0000000000000374 .L0 
     /tmp/cctIYM4I.s:656    .text:0000000000000378 .L0 
     /tmp/cctIYM4I.s:657    .text:0000000000000378 .L0 
     /tmp/cctIYM4I.s:659    .text:000000000000037c .L0 
     /tmp/cctIYM4I.s:661    .text:0000000000000380 .L0 
     /tmp/cctIYM4I.s:672    .bss:0000000000000000 _ZN15MemoryAllocator18memoryInitiliaizedE
     /tmp/cctIYM4I.s:681    .bss:0000000000000010 _ZN15MemoryAllocator8headFreeE
     /tmp/cctIYM4I.s:677    .bss:0000000000000008 _ZN15MemoryAllocator13headAllocatedE
     /tmp/cctIYM4I.s:669    .bss:0000000000000000 .LANCHOR0
     /tmp/cctIYM4I.s:687    .text:0000000000000380 .L0 
     /tmp/cctIYM4I.s:22     .text:000000000000000c .L0 
     /tmp/cctIYM4I.s:28     .text:000000000000001c .L0 
     /tmp/cctIYM4I.s:36     .text:0000000000000030 .L0 
     /tmp/cctIYM4I.s:44     .text:0000000000000044 .L0 
     /tmp/cctIYM4I.s:91     .text:0000000000000090 .L0 
     /tmp/cctIYM4I.s:153    .text:00000000000000dc .L0 
     /tmp/cctIYM4I.s:188    .text:000000000000010c .L0 
     /tmp/cctIYM4I.s:231    .text:0000000000000138 .L0 
     /tmp/cctIYM4I.s:267    .text:0000000000000170 .L0 
     /tmp/cctIYM4I.s:300    .text:000000000000019c .L0 
     /tmp/cctIYM4I.s:392    .text:0000000000000214 .L0 
     /tmp/cctIYM4I.s:454    .text:0000000000000260 .L0 
     /tmp/cctIYM4I.s:488    .text:0000000000000290 .L0 
     /tmp/cctIYM4I.s:558    .text:00000000000002f4 .L0 
     /tmp/cctIYM4I.s:51     .text:000000000000005c .L1
     /tmp/cctIYM4I.s:124    .text:00000000000000bc .L5
     /tmp/cctIYM4I.s:119    .text:00000000000000b8 .L11
     /tmp/cctIYM4I.s:103    .text:00000000000000a4 .L7
     /tmp/cctIYM4I.s:149    .text:00000000000000dc .L12
     /tmp/cctIYM4I.s:131    .text:00000000000000c4 .L4
     /tmp/cctIYM4I.s:303    .text:00000000000001a8 .L21
     /tmp/cctIYM4I.s:216    .text:0000000000000130 .L23
     /tmp/cctIYM4I.s:193    .text:0000000000000118 .L20
     /tmp/cctIYM4I.s:271    .text:000000000000017c .L16
     /tmp/cctIYM4I.s:280    .text:0000000000000184 .L17
     /tmp/cctIYM4I.s:264    .text:0000000000000170 .L18
     /tmp/cctIYM4I.s:296    .text:000000000000019c .L19
     /tmp/cctIYM4I.s:311    .text:00000000000001ac .L14
     /tmp/cctIYM4I.s:425    .text:0000000000000240 .L27
     /tmp/cctIYM4I.s:420    .text:000000000000023c .L33
     /tmp/cctIYM4I.s:404    .text:0000000000000228 .L29
     /tmp/cctIYM4I.s:450    .text:0000000000000260 .L34
     /tmp/cctIYM4I.s:432    .text:0000000000000248 .L26
     /tmp/cctIYM4I.s:529    .text:00000000000002d0 .L36
     /tmp/cctIYM4I.s:512    .text:00000000000002b4 .L44
     /tmp/cctIYM4I.s:493    .text:000000000000029c .L40
     /tmp/cctIYM4I.s:552    .text:00000000000002f0 .L38
     /tmp/cctIYM4I.s:561    .text:0000000000000300 .L42
     /tmp/cctIYM4I.s:521    .text:00000000000002c0 .L39
     /tmp/cctIYM4I.s:534    .text:00000000000002d8 .L35
GAS LISTING /tmp/cctIYM4I.s 			page 24


     /tmp/cctIYM4I.s:1382   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cctIYM4I.s:2437   .debug_str:0000000000000044 .LASF55
     /tmp/cctIYM4I.s:2501   .debug_str:00000000000002e4 .LASF56
     /tmp/cctIYM4I.s:2507   .debug_str:0000000000000315 .LASF57
     /tmp/cctIYM4I.s:5      .text:0000000000000000 .Ltext0
     /tmp/cctIYM4I.s:684    .text:0000000000000380 .Letext0
     /tmp/cctIYM4I.s:2425   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cctIYM4I.s:2489   .debug_str:000000000000025e .LASF0
     /tmp/cctIYM4I.s:2475   .debug_str:000000000000020b .LASF1
     /tmp/cctIYM4I.s:2467   .debug_str:00000000000001ca .LASF2
     /tmp/cctIYM4I.s:2445   .debug_str:00000000000000ff .LASF4
     /tmp/cctIYM4I.s:2471   .debug_str:00000000000001e3 .LASF3
     /tmp/cctIYM4I.s:2431   .debug_str:0000000000000023 .LASF5
     /tmp/cctIYM4I.s:2427   .debug_str:0000000000000000 .LASF6
     /tmp/cctIYM4I.s:2457   .debug_str:0000000000000150 .LASF7
     /tmp/cctIYM4I.s:2497   .debug_str:00000000000002be .LASF8
     /tmp/cctIYM4I.s:2443   .debug_str:00000000000000f1 .LASF9
     /tmp/cctIYM4I.s:2547   .debug_str:00000000000004b3 .LASF10
     /tmp/cctIYM4I.s:2463   .debug_str:000000000000019a .LASF11
     /tmp/cctIYM4I.s:2533   .debug_str:0000000000000441 .LASF12
     /tmp/cctIYM4I.s:2503   .debug_str:00000000000002fc .LASF13
     /tmp/cctIYM4I.s:2477   .debug_str:000000000000021e .LASF14
     /tmp/cctIYM4I.s:2449   .debug_str:0000000000000111 .LASF15
     /tmp/cctIYM4I.s:2499   .debug_str:00000000000002ce .LASF16
     /tmp/cctIYM4I.s:2429   .debug_str:0000000000000013 .LASF58
     /tmp/cctIYM4I.s:2483   .debug_str:000000000000023c .LASF19
     /tmp/cctIYM4I.s:2539   .debug_str:0000000000000485 .LASF17
     /tmp/cctIYM4I.s:2433   .debug_str:000000000000002a .LASF18
     /tmp/cctIYM4I.s:2453   .debug_str:0000000000000142 .LASF20
     /tmp/cctIYM4I.s:2485   .debug_str:0000000000000248 .LASF21
     /tmp/cctIYM4I.s:2521   .debug_str:00000000000003c8 .LASF22
     /tmp/cctIYM4I.s:2531   .debug_str:0000000000000438 .LASF23
     /tmp/cctIYM4I.s:2481   .debug_str:0000000000000232 .LASF24
     /tmp/cctIYM4I.s:2537   .debug_str:000000000000047b .LASF25
     /tmp/cctIYM4I.s:2525   .debug_str:00000000000003e1 .LASF27
     /tmp/cctIYM4I.s:2505   .debug_str:000000000000030c .LASF26
     /tmp/cctIYM4I.s:2465   .debug_str:00000000000001a9 .LASF28
     /tmp/cctIYM4I.s:2491   .debug_str:000000000000026b .LASF59
     /tmp/cctIYM4I.s:2493   .debug_str:0000000000000276 .LASF60
     /tmp/cctIYM4I.s:2451   .debug_str:0000000000000127 .LASF31
     /tmp/cctIYM4I.s:2509   .debug_str:0000000000000338 .LASF33
     /tmp/cctIYM4I.s:2473   .debug_str:00000000000001f5 .LASF29
     /tmp/cctIYM4I.s:2527   .debug_str:0000000000000402 .LASF30
     /tmp/cctIYM4I.s:2435   .debug_str:000000000000002f .LASF32
     /tmp/cctIYM4I.s:2461   .debug_str:000000000000016b .LASF34
     /tmp/cctIYM4I.s:2517   .debug_str:00000000000003b0 .LASF35
     /tmp/cctIYM4I.s:2535   .debug_str:0000000000000451 .LASF36
     /tmp/cctIYM4I.s:2495   .debug_str:0000000000000299 .LASF37
     /tmp/cctIYM4I.s:2541   .debug_str:000000000000048a .LASF38
     /tmp/cctIYM4I.s:2515   .debug_str:0000000000000386 .LASF39
     /tmp/cctIYM4I.s:2523   .debug_str:00000000000003db .LASF40
     /tmp/cctIYM4I.s:2447   .debug_str:0000000000000106 .LASF42
     /tmp/cctIYM4I.s:636    .text:0000000000000358 .LFB8
     /tmp/cctIYM4I.s:662    .text:0000000000000380 .LFE8
     /tmp/cctIYM4I.s:1951   .debug_loc:0000000000000000 .LLST25
     /tmp/cctIYM4I.s:651    .text:0000000000000370 .LVL61
     /tmp/cctIYM4I.s:2479   .debug_str:000000000000022a .LASF41
GAS LISTING /tmp/cctIYM4I.s 			page 25


     /tmp/cctIYM4I.s:2511   .debug_str:000000000000036d .LASF43
     /tmp/cctIYM4I.s:604    .text:0000000000000330 .LFB7
     /tmp/cctIYM4I.s:630    .text:0000000000000358 .LFE7
     /tmp/cctIYM4I.s:1965   .debug_loc:0000000000000039 .LLST24
     /tmp/cctIYM4I.s:619    .text:0000000000000348 .LVL59
     /tmp/cctIYM4I.s:464    .text:000000000000026c .LFB6
     /tmp/cctIYM4I.s:566    .text:0000000000000308 .LFE6
     /tmp/cctIYM4I.s:2455   .debug_str:000000000000014b .LASF44
     /tmp/cctIYM4I.s:1979   .debug_loc:0000000000000072 .LLST20
     /tmp/cctIYM4I.s:2543   .debug_str:00000000000004a9 .LASF45
     /tmp/cctIYM4I.s:2001   .debug_loc:00000000000000d1 .LLST21
     /tmp/cctIYM4I.s:2439   .debug_str:00000000000000e6 .LASF46
     /tmp/cctIYM4I.s:2025   .debug_loc:0000000000000141 .LLST22
     /tmp/cctIYM4I.s:484    .text:0000000000000290 .LVL45
     /tmp/cctIYM4I.s:527    .text:00000000000002d0 .LVL51
     /tmp/cctIYM4I.s:367    .text:00000000000001ec .LFB5
     /tmp/cctIYM4I.s:458    .text:000000000000026c .LFE5
     /tmp/cctIYM4I.s:2045   .debug_loc:000000000000019e .LLST15
     /tmp/cctIYM4I.s:2067   .debug_loc:00000000000001fd .LLST16
     /tmp/cctIYM4I.s:2089   .debug_loc:000000000000025c .LLST17
     /tmp/cctIYM4I.s:2109   .debug_loc:00000000000002b9 .LLST18
     /tmp/cctIYM4I.s:2469   .debug_str:00000000000001d8 .LASF47
     /tmp/cctIYM4I.s:2129   .debug_loc:0000000000000316 .LLST19
     /tmp/cctIYM4I.s:388    .text:0000000000000214 .LVL34
     /tmp/cctIYM4I.s:163    .text:00000000000000e8 .LFB4
     /tmp/cctIYM4I.s:329    .text:00000000000001c4 .LFE4
     /tmp/cctIYM4I.s:2147   .debug_loc:0000000000000362 .LLST5
     /tmp/cctIYM4I.s:2519   .debug_str:00000000000003c1 .LASF48
     /tmp/cctIYM4I.s:2165   .debug_loc:00000000000003ae .LLST6
     /tmp/cctIYM4I.s:2186   .debug_loc:000000000000040c .LLST7
     /tmp/cctIYM4I.s:2210   .debug_loc:000000000000047c .LLST8
     /tmp/cctIYM4I.s:219    .text:0000000000000130 .LBB4
     /tmp/cctIYM4I.s:305    .text:00000000000001a8 .LBE4
     /tmp/cctIYM4I.s:2487   .debug_str:0000000000000256 .LASF49
     /tmp/cctIYM4I.s:2226   .debug_loc:00000000000004c6 .LLST9
     /tmp/cctIYM4I.s:2529   .debug_str:0000000000000430 .LASF50
     /tmp/cctIYM4I.s:2233   .debug_loc:00000000000004e9 .LLST10
     /tmp/cctIYM4I.s:2545   .debug_str:00000000000004ae .LASF51
     /tmp/cctIYM4I.s:2255   .debug_loc:0000000000000539 .LLST11
     /tmp/cctIYM4I.s:235    .text:0000000000000148 .LBB6
     /tmp/cctIYM4I.s:274    .text:000000000000017c .LBE6
     /tmp/cctIYM4I.s:2441   .debug_str:00000000000000eb .LASF52
     /tmp/cctIYM4I.s:2262   .debug_loc:000000000000055c .LLST12
     /tmp/cctIYM4I.s:244    .text:0000000000000154 .LBB8
     /tmp/cctIYM4I.s:272    .text:000000000000017c .LBE8
     /tmp/cctIYM4I.s:2459   .debug_str:0000000000000163 .LASF53
     /tmp/cctIYM4I.s:2275   .debug_loc:0000000000000594 .LLST13
     /tmp/cctIYM4I.s:287    .text:0000000000000194 .LVL24
     /tmp/cctIYM4I.s:183    .text:000000000000010c .LVL12
     /tmp/cctIYM4I.s:66     .text:0000000000000068 .LFB3
     /tmp/cctIYM4I.s:157    .text:00000000000000e8 .LFE3
     /tmp/cctIYM4I.s:2282   .debug_loc:00000000000005b7 .LLST0
     /tmp/cctIYM4I.s:2304   .debug_loc:0000000000000616 .LLST1
     /tmp/cctIYM4I.s:2326   .debug_loc:0000000000000675 .LLST2
     /tmp/cctIYM4I.s:2346   .debug_loc:00000000000006d2 .LLST3
     /tmp/cctIYM4I.s:2513   .debug_str:0000000000000379 .LASF54
     /tmp/cctIYM4I.s:2366   .debug_loc:000000000000072f .LLST4
GAS LISTING /tmp/cctIYM4I.s 			page 26


     /tmp/cctIYM4I.s:87     .text:0000000000000090 .LVL1
     /tmp/cctIYM4I.s:10     .text:0000000000000000 .LFB2
     /tmp/cctIYM4I.s:60     .text:0000000000000068 .LFE2
     /tmp/cctIYM4I.s:572    .text:0000000000000308 .LFB1
     /tmp/cctIYM4I.s:598    .text:0000000000000330 .LFE1
     /tmp/cctIYM4I.s:2384   .debug_loc:000000000000077b .LLST23
     /tmp/cctIYM4I.s:587    .text:0000000000000320 .LVL57
     /tmp/cctIYM4I.s:335    .text:00000000000001c4 .LFB0
     /tmp/cctIYM4I.s:361    .text:00000000000001ec .LFE0
     /tmp/cctIYM4I.s:2398   .debug_loc:00000000000007b4 .LLST14
     /tmp/cctIYM4I.s:350    .text:00000000000001dc .LVL32
     /tmp/cctIYM4I.s:639    .text:0000000000000358 .LVL60
     /tmp/cctIYM4I.s:607    .text:0000000000000330 .LVL58
     /tmp/cctIYM4I.s:467    .text:000000000000026c .LVL44
     /tmp/cctIYM4I.s:547    .text:00000000000002e8 .LVL53
     /tmp/cctIYM4I.s:551    .text:00000000000002f0 .LVL54
     /tmp/cctIYM4I.s:492    .text:000000000000029c .LVL47
     /tmp/cctIYM4I.s:503    .text:00000000000002a8 .LVL48
     /tmp/cctIYM4I.s:509    .text:00000000000002b0 .LVL49
     /tmp/cctIYM4I.s:520    .text:00000000000002c0 .LVL50
     /tmp/cctIYM4I.s:559    .text:00000000000002fc .LVL55
     /tmp/cctIYM4I.s:489    .text:0000000000000298 .LVL46
     /tmp/cctIYM4I.s:544    .text:00000000000002e4 .LVL52
     /tmp/cctIYM4I.s:370    .text:00000000000001ec .LVL33
     /tmp/cctIYM4I.s:442    .text:0000000000000254 .LVL40
     /tmp/cctIYM4I.s:449    .text:0000000000000260 .LVL42
     /tmp/cctIYM4I.s:445    .text:0000000000000258 .LVL41
     /tmp/cctIYM4I.s:403    .text:0000000000000228 .LVL36
     /tmp/cctIYM4I.s:411    .text:0000000000000230 .LVL37
     /tmp/cctIYM4I.s:417    .text:0000000000000238 .LVL38
     /tmp/cctIYM4I.s:393    .text:000000000000021c .LVL35
     /tmp/cctIYM4I.s:431    .text:0000000000000248 .LVL39
     /tmp/cctIYM4I.s:455    .text:0000000000000268 .LVL43
     /tmp/cctIYM4I.s:166    .text:00000000000000e8 .LVL11
     /tmp/cctIYM4I.s:324    .text:00000000000001bc .LVL30
     /tmp/cctIYM4I.s:291    .text:0000000000000198 .LVL25
     /tmp/cctIYM4I.s:295    .text:000000000000019c .LVL26
     /tmp/cctIYM4I.s:310    .text:00000000000001ac .LVL28
     /tmp/cctIYM4I.s:192    .text:0000000000000118 .LVL14
     /tmp/cctIYM4I.s:206    .text:0000000000000124 .LVL15
     /tmp/cctIYM4I.s:212    .text:000000000000012c .LVL16
     /tmp/cctIYM4I.s:189    .text:0000000000000114 .LVL13
     /tmp/cctIYM4I.s:321    .text:00000000000001b8 .LVL29
     /tmp/cctIYM4I.s:221    .text:0000000000000130 .LVL17
     /tmp/cctIYM4I.s:302    .text:00000000000001a8 .LVL27
     /tmp/cctIYM4I.s:227    .text:0000000000000138 .LVL18
     /tmp/cctIYM4I.s:239    .text:000000000000014c .LVL19
     /tmp/cctIYM4I.s:255    .text:0000000000000160 .LVL21
     /tmp/cctIYM4I.s:268    .text:0000000000000178 .LVL22
     /tmp/cctIYM4I.s:246    .text:0000000000000154 .LVL20
     /tmp/cctIYM4I.s:270    .text:000000000000017c .LVL23
     /tmp/cctIYM4I.s:69     .text:0000000000000068 .LVL0
     /tmp/cctIYM4I.s:141    .text:00000000000000d0 .LVL7
     /tmp/cctIYM4I.s:148    .text:00000000000000dc .LVL9
     /tmp/cctIYM4I.s:144    .text:00000000000000d4 .LVL8
     /tmp/cctIYM4I.s:102    .text:00000000000000a4 .LVL3
     /tmp/cctIYM4I.s:110    .text:00000000000000ac .LVL4
GAS LISTING /tmp/cctIYM4I.s 			page 27


     /tmp/cctIYM4I.s:116    .text:00000000000000b4 .LVL5
     /tmp/cctIYM4I.s:92     .text:0000000000000098 .LVL2
     /tmp/cctIYM4I.s:130    .text:00000000000000c4 .LVL6
     /tmp/cctIYM4I.s:154    .text:00000000000000e4 .LVL10
     /tmp/cctIYM4I.s:575    .text:0000000000000308 .LVL56
     /tmp/cctIYM4I.s:338    .text:00000000000001c4 .LVL31
     /tmp/cctIYM4I.s:688    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
HEAP_START_ADDR
HEAP_END_ADDR
