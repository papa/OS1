GAS LISTING /tmp/ccswfXf8.s 			page 1


   1              		.file	"syscall_c.c"
   2              		.option nopic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.cfi_sections	.debug_frame
   7              		.align	2
   8              		.globl	mem_alloc
  10              	mem_alloc:
  11              	.LFB0:
  12              		.file 1 "src/syscall_c.c"
   1:src/syscall_c.c **** //
   2:src/syscall_c.c **** // Created by os on 4/9/22.
   3:src/syscall_c.c **** //
   4:src/syscall_c.c **** 
   5:src/syscall_c.c **** #include "../h/syscall_c.h"
   6:src/syscall_c.c **** 
   7:src/syscall_c.c **** #ifdef __cplusplus
   8:src/syscall_c.c **** extern "C"
   9:src/syscall_c.c **** #endif
  10:src/syscall_c.c **** void* mem_alloc(size_t size)
  11:src/syscall_c.c **** {
  13              		.loc 1 11 1
  14              		.cfi_startproc
  15              	.LVL0:
  16 0000 130101FF 		addi	sp,sp,-16
  17              		.cfi_def_cfa_offset 16
  18 0004 23348100 		sd	s0,8(sp)
  19              		.cfi_offset 8, -8
  20 0008 13040101 		addi	s0,sp,16
  21              		.cfi_def_cfa 8, 0
  12:src/syscall_c.c ****     //prepare for system call
  13:src/syscall_c.c ****     uint64 numBlocks = (size + MEM_BLOCK_SIZE - 1) / MEM_BLOCK_SIZE;
  22              		.loc 1 13 5
  23              		.loc 1 13 47 is_stmt 0
  24 000c 1305F503 		addi	a0,a0,63
  25              	.LVL1:
  26              		.loc 1 13 12
  27 0010 13556500 		srli	a0,a0,6
  28              	.LVL2:
  14:src/syscall_c.c ****     __asm__ volatile("mv a1, %0" :  : "r"(numBlocks));
  29              		.loc 1 14 5 is_stmt 1
  30              	#APP
  31              	# 14 "src/syscall_c.c" 1
  15              	    __asm__ volatile("li a0, 1");
  32              		mv a1, a0
  33              	# 0 "" 2
  34              		.loc 1 15 5
  35              	# 15 "src/syscall_c.c" 1
  16              	
  17:src/syscall_c.c ****     __asm__ volatile("ecall"); // system call
  36              		li a0, 1
  37              	# 0 "" 2
  38              		.loc 1 17 5
  39              	# 17 "src/syscall_c.c" 1
  18              	
  19:src/syscall_c.c ****     //get the address
GAS LISTING /tmp/ccswfXf8.s 			page 2


  20:src/syscall_c.c ****     uint64 allocatedAddr = 0x01;
  40              		ecall
  41              	# 0 "" 2
  42              		.loc 1 20 5
  43              	.LVL3:
  21:src/syscall_c.c ****     __asm__ volatile("mv %0, a0" : "=r"(allocatedAddr));
  44              		.loc 1 21 5
  45              	# 21 "src/syscall_c.c" 1
  22              	
  46              		mv a0, a0
  47              	# 0 "" 2
  48              	.LVL4:
  23:src/syscall_c.c ****     return (void*)allocatedAddr;
  49              		.loc 1 23 5
  24:src/syscall_c.c **** }
  50              		.loc 1 24 1 is_stmt 0
  51              	#NO_APP
  52 0024 03348100 		ld	s0,8(sp)
  53              		.cfi_restore 8
  54              		.cfi_def_cfa 2, 16
  55 0028 13010101 		addi	sp,sp,16
  56              		.cfi_def_cfa_offset 0
  57 002c 67800000 		jr	ra
  58              		.cfi_endproc
  59              	.LFE0:
  61              		.align	2
  62              		.globl	mem_free
  64              	mem_free:
  65              	.LFB1:
  25:src/syscall_c.c **** 
  26:src/syscall_c.c **** #ifdef __cplusplus
  27:src/syscall_c.c **** extern "C"
  28:src/syscall_c.c **** #endif
  29:src/syscall_c.c **** int mem_free(void* p)
  30:src/syscall_c.c **** {
  66              		.loc 1 30 1 is_stmt 1
  67              		.cfi_startproc
  68              	.LVL5:
  69 0030 130101FF 		addi	sp,sp,-16
  70              		.cfi_def_cfa_offset 16
  71 0034 23348100 		sd	s0,8(sp)
  72              		.cfi_offset 8, -8
  73 0038 13040101 		addi	s0,sp,16
  74              		.cfi_def_cfa 8, 0
  31:src/syscall_c.c ****     //prepare for system call
  32:src/syscall_c.c ****     uint64 addrFree = (uint64)p;
  75              		.loc 1 32 5
  76              	.LVL6:
  33:src/syscall_c.c ****     __asm__ volatile("mv a1, %0" :  : "r"(addrFree));
  77              		.loc 1 33 5
  78              	#APP
  79              	# 33 "src/syscall_c.c" 1
  34              	    __asm__ volatile("li a0, 2");
  80              		mv a1, a0
  81              	# 0 "" 2
  82              		.loc 1 34 5
  83              	# 34 "src/syscall_c.c" 1
GAS LISTING /tmp/ccswfXf8.s 			page 3


  35              	
  36:src/syscall_c.c ****     __asm__ volatile("ecall"); // system call
  84              		li a0, 2
  85              	# 0 "" 2
  86              		.loc 1 36 5
  87              	# 36 "src/syscall_c.c" 1
  37              	
  38:src/syscall_c.c ****     //get the result of system call
  39:src/syscall_c.c ****     uint64 result;
  88              		ecall
  89              	# 0 "" 2
  90              		.loc 1 39 5
  40:src/syscall_c.c ****     __asm__ volatile("mv %0, a0" : "=r"(result));
  91              		.loc 1 40 5
  92              	# 40 "src/syscall_c.c" 1
  41              	
  93              		mv a0, a0
  94              	# 0 "" 2
  95              	.LVL7:
  42:src/syscall_c.c ****     return result;
  96              		.loc 1 42 5
  43:src/syscall_c.c **** }
  97              		.loc 1 43 1 is_stmt 0
  98              	#NO_APP
  99 004c 1B050500 		sext.w	a0,a0
 100              	.LVL8:
 101 0050 03348100 		ld	s0,8(sp)
 102              		.cfi_restore 8
 103              		.cfi_def_cfa 2, 16
 104 0054 13010101 		addi	sp,sp,16
 105              		.cfi_def_cfa_offset 0
 106 0058 67800000 		jr	ra
 107              		.cfi_endproc
 108              	.LFE1:
 110              		.align	2
 111              		.globl	thread_create
 113              	thread_create:
 114              	.LFB2:
  44:src/syscall_c.c **** 
  45:src/syscall_c.c **** #ifdef __cplusplus
  46:src/syscall_c.c **** extern "C"
  47:src/syscall_c.c **** #endif
  48:src/syscall_c.c **** int thread_create(thread_t* handle, void (*start_routine)(void*), void* args)
  49:src/syscall_c.c **** {
 115              		.loc 1 49 1 is_stmt 1
 116              		.cfi_startproc
 117              	.LVL9:
 118 005c 130101FF 		addi	sp,sp,-16
 119              		.cfi_def_cfa_offset 16
 120 0060 23341100 		sd	ra,8(sp)
 121 0064 23308100 		sd	s0,0(sp)
 122              		.cfi_offset 1, -8
 123              		.cfi_offset 8, -16
 124 0068 13040101 		addi	s0,sp,16
 125              		.cfi_def_cfa 8, 0
  50:src/syscall_c.c ****     //initialize registers
  51:src/syscall_c.c ****     __asm__ volatile("li a0, 0x11");
GAS LISTING /tmp/ccswfXf8.s 			page 4


 126              		.loc 1 51 5
 127              	#APP
 128              	# 51 "src/syscall_c.c" 1
  52              	    //uint64 start_routine_addres = (uint64)start_routine;
  53:src/syscall_c.c ****     __asm__ volatile("mv a3, %0" :  : "r"((uint64)args));
 129              		li a0, 0x11
 130              	# 0 "" 2
 131              		.loc 1 53 5
 132              	# 53 "src/syscall_c.c" 1
  54              	    __asm__ volatile("mv a2, %0" :  : "r"((uint64)start_routine));
 133              		mv a3, a2
 134              	# 0 "" 2
 135              		.loc 1 54 5
 136              	# 54 "src/syscall_c.c" 1
  55              	
  56:src/syscall_c.c ****     void * stack_space = mem_alloc(DEFAULT_STACK_SIZE);
 137              		mv a2, a1
 138              	# 0 "" 2
 139              		.loc 1 56 5
 140              		.loc 1 56 26 is_stmt 0
 141              	#NO_APP
 142 0078 37150000 		li	a0,4096
 143              	.LVL10:
 144 007c 97000000 		call	mem_alloc
 144      E7800000 
 145              	.LVL11:
  57:src/syscall_c.c **** 
  58:src/syscall_c.c ****     //todo
  59:src/syscall_c.c ****     //handle this error
  60:src/syscall_c.c ****     if(stack_space == 0)
 146              		.loc 1 60 5 is_stmt 1
 147              		.loc 1 60 7 is_stmt 0
 148 0084 63020502 		beqz	a0,.L7
  61:src/syscall_c.c ****         return -1;
  62:src/syscall_c.c **** 
  63:src/syscall_c.c ****     __asm__ volatile("mv a4, %0" :  : "r"((uint64)stack_space));
 149              		.loc 1 63 5 is_stmt 1
 150              	#APP
 151              	# 63 "src/syscall_c.c" 1
  64              	
  65:src/syscall_c.c ****     //todo
  66:src/syscall_c.c ****     __asm__ volatile("ecall");
 152              		mv a4, a0
 153              	# 0 "" 2
 154              		.loc 1 66 5
 155              	# 66 "src/syscall_c.c" 1
  67              	
  68:src/syscall_c.c ****     uint64 result;
 156              		ecall
 157              	# 0 "" 2
 158              		.loc 1 68 5
  69:src/syscall_c.c ****     __asm__ volatile("mv %0, a0" : "=r"(result));
 159              		.loc 1 69 5
 160              	# 69 "src/syscall_c.c" 1
  70              	
 161              		mv a0, a0
 162              	# 0 "" 2
GAS LISTING /tmp/ccswfXf8.s 			page 5


 163              	.LVL12:
  71:src/syscall_c.c ****     return result;
 164              		.loc 1 71 5
 165              		.loc 1 71 12 is_stmt 0
 166              	#NO_APP
 167 0094 1B050500 		sext.w	a0,a0
 168              	.LVL13:
 169              	.L6:
  72:src/syscall_c.c **** }
 170              		.loc 1 72 1
 171 0098 83308100 		ld	ra,8(sp)
 172              		.cfi_remember_state
 173              		.cfi_restore 1
 174 009c 03340100 		ld	s0,0(sp)
 175              		.cfi_restore 8
 176              		.cfi_def_cfa 2, 16
 177 00a0 13010101 		addi	sp,sp,16
 178              		.cfi_def_cfa_offset 0
 179 00a4 67800000 		jr	ra
 180              	.LVL14:
 181              	.L7:
 182              		.cfi_restore_state
  61:src/syscall_c.c **** 
 183              		.loc 1 61 16
 184 00a8 1305F0FF 		li	a0,-1
 185              	.LVL15:
 186 00ac 6FF0DFFE 		j	.L6
 187              		.cfi_endproc
 188              	.LFE2:
 190              		.align	2
 191              		.globl	thread_dispatch
 193              	thread_dispatch:
 194              	.LFB3:
  73:src/syscall_c.c **** 
  74:src/syscall_c.c **** #ifdef __cplusplus
  75:src/syscall_c.c **** extern "C"
  76:src/syscall_c.c **** #endif
  77:src/syscall_c.c **** void thread_dispatch(){
 195              		.loc 1 77 23 is_stmt 1
 196              		.cfi_startproc
 197 00b0 130101FF 		addi	sp,sp,-16
 198              		.cfi_def_cfa_offset 16
 199 00b4 23348100 		sd	s0,8(sp)
 200              		.cfi_offset 8, -8
 201 00b8 13040101 		addi	s0,sp,16
 202              		.cfi_def_cfa 8, 0
  78:src/syscall_c.c ****     __asm__ volatile("li a0, 0x13");
 203              		.loc 1 78 5
 204              	#APP
 205              	# 78 "src/syscall_c.c" 1
  79              	    __asm__ volatile("ecall");
 206              		li a0, 0x13
 207              	# 0 "" 2
 208              		.loc 1 79 5
 209              	# 79 "src/syscall_c.c" 1
  80              	}
 210              		ecall
GAS LISTING /tmp/ccswfXf8.s 			page 6


 211              	# 0 "" 2
 212              		.loc 1 80 1 is_stmt 0
 213              	#NO_APP
 214 00c4 03348100 		ld	s0,8(sp)
 215              		.cfi_restore 8
 216              		.cfi_def_cfa 2, 16
 217 00c8 13010101 		addi	sp,sp,16
 218              		.cfi_def_cfa_offset 0
 219 00cc 67800000 		jr	ra
 220              		.cfi_endproc
 221              	.LFE3:
 223              	.Letext0:
 224              		.file 2 "src/../h/../lib/hw.h"
 225              		.file 3 "src/../h/syscall_c.h"
GAS LISTING /tmp/ccswfXf8.s 			page 7


DEFINED SYMBOLS
                            *ABS*:0000000000000000 syscall_c.c
     /tmp/ccswfXf8.s:10     .text:0000000000000000 mem_alloc
     /tmp/ccswfXf8.s:14     .text:0000000000000000 .L0 
     /tmp/ccswfXf8.s:16     .text:0000000000000000 .L0 
     /tmp/ccswfXf8.s:17     .text:0000000000000004 .L0 
     /tmp/ccswfXf8.s:19     .text:0000000000000008 .L0 
     /tmp/ccswfXf8.s:21     .text:000000000000000c .L0 
     /tmp/ccswfXf8.s:23     .text:000000000000000c .L0 
     /tmp/ccswfXf8.s:24     .text:000000000000000c .L0 
     /tmp/ccswfXf8.s:27     .text:0000000000000010 .L0 
     src/syscall_c.c:14     .text:0000000000000014 .L0 
     src/syscall_c.c:15     .text:0000000000000018 .L0 
     src/syscall_c.c:17     .text:000000000000001c .L0 
     /tmp/ccswfXf8.s:44     .text:0000000000000020 .L0 
     src/syscall_c.c:21     .text:0000000000000020 .L0 
     /tmp/ccswfXf8.s:50     .text:0000000000000024 .L0 
     /tmp/ccswfXf8.s:52     .text:0000000000000024 .L0 
     /tmp/ccswfXf8.s:53     .text:0000000000000028 .L0 
     /tmp/ccswfXf8.s:54     .text:0000000000000028 .L0 
     /tmp/ccswfXf8.s:56     .text:000000000000002c .L0 
     /tmp/ccswfXf8.s:58     .text:0000000000000030 .L0 
     /tmp/ccswfXf8.s:64     .text:0000000000000030 mem_free
     /tmp/ccswfXf8.s:67     .text:0000000000000030 .L0 
     /tmp/ccswfXf8.s:69     .text:0000000000000030 .L0 
     /tmp/ccswfXf8.s:70     .text:0000000000000034 .L0 
     /tmp/ccswfXf8.s:72     .text:0000000000000038 .L0 
     /tmp/ccswfXf8.s:74     .text:000000000000003c .L0 
     /tmp/ccswfXf8.s:77     .text:000000000000003c .L0 
     src/syscall_c.c:33     .text:000000000000003c .L0 
     src/syscall_c.c:34     .text:0000000000000040 .L0 
     src/syscall_c.c:36     .text:0000000000000044 .L0 
     /tmp/ccswfXf8.s:91     .text:0000000000000048 .L0 
     src/syscall_c.c:40     .text:0000000000000048 .L0 
     /tmp/ccswfXf8.s:97     .text:000000000000004c .L0 
     /tmp/ccswfXf8.s:99     .text:000000000000004c .L0 
     /tmp/ccswfXf8.s:102    .text:0000000000000054 .L0 
     /tmp/ccswfXf8.s:103    .text:0000000000000054 .L0 
     /tmp/ccswfXf8.s:105    .text:0000000000000058 .L0 
     /tmp/ccswfXf8.s:107    .text:000000000000005c .L0 
     /tmp/ccswfXf8.s:113    .text:000000000000005c thread_create
     /tmp/ccswfXf8.s:116    .text:000000000000005c .L0 
     /tmp/ccswfXf8.s:118    .text:000000000000005c .L0 
     /tmp/ccswfXf8.s:119    .text:0000000000000060 .L0 
     /tmp/ccswfXf8.s:122    .text:0000000000000068 .L0 
     /tmp/ccswfXf8.s:123    .text:0000000000000068 .L0 
     /tmp/ccswfXf8.s:125    .text:000000000000006c .L0 
     src/syscall_c.c:51     .text:000000000000006c .L0 
     src/syscall_c.c:53     .text:0000000000000070 .L0 
     src/syscall_c.c:54     .text:0000000000000074 .L0 
     /tmp/ccswfXf8.s:140    .text:0000000000000078 .L0 
     /tmp/ccswfXf8.s:142    .text:0000000000000078 .L0 
     /tmp/ccswfXf8.s:147    .text:0000000000000084 .L0 
     /tmp/ccswfXf8.s:148    .text:0000000000000084 .L0 
     src/syscall_c.c:63     .text:0000000000000088 .L0 
     src/syscall_c.c:66     .text:000000000000008c .L0 
     /tmp/ccswfXf8.s:159    .text:0000000000000090 .L0 
GAS LISTING /tmp/ccswfXf8.s 			page 8


     src/syscall_c.c:69     .text:0000000000000090 .L0 
     /tmp/ccswfXf8.s:165    .text:0000000000000094 .L0 
     /tmp/ccswfXf8.s:167    .text:0000000000000094 .L0 
     /tmp/ccswfXf8.s:171    .text:0000000000000098 .L0 
     /tmp/ccswfXf8.s:172    .text:000000000000009c .L0 
     /tmp/ccswfXf8.s:173    .text:000000000000009c .L0 
     /tmp/ccswfXf8.s:175    .text:00000000000000a0 .L0 
     /tmp/ccswfXf8.s:176    .text:00000000000000a0 .L0 
     /tmp/ccswfXf8.s:178    .text:00000000000000a4 .L0 
     /tmp/ccswfXf8.s:182    .text:00000000000000a8 .L0 
     /tmp/ccswfXf8.s:184    .text:00000000000000a8 .L0 
     /tmp/ccswfXf8.s:187    .text:00000000000000b0 .L0 
     /tmp/ccswfXf8.s:193    .text:00000000000000b0 thread_dispatch
     /tmp/ccswfXf8.s:196    .text:00000000000000b0 .L0 
     /tmp/ccswfXf8.s:197    .text:00000000000000b0 .L0 
     /tmp/ccswfXf8.s:198    .text:00000000000000b4 .L0 
     /tmp/ccswfXf8.s:200    .text:00000000000000b8 .L0 
     /tmp/ccswfXf8.s:202    .text:00000000000000bc .L0 
     src/syscall_c.c:78     .text:00000000000000bc .L0 
     src/syscall_c.c:79     .text:00000000000000c0 .L0 
     /tmp/ccswfXf8.s:214    .text:00000000000000c4 .L0 
     /tmp/ccswfXf8.s:215    .text:00000000000000c8 .L0 
     /tmp/ccswfXf8.s:216    .text:00000000000000c8 .L0 
     /tmp/ccswfXf8.s:218    .text:00000000000000cc .L0 
     /tmp/ccswfXf8.s:220    .text:00000000000000d0 .L0 
     /tmp/ccswfXf8.s:226    .text:00000000000000d0 .L0 
                     .debug_frame:0000000000000000 .L0 
     /tmp/ccswfXf8.s:181    .text:00000000000000a8 .L7
     /tmp/ccswfXf8.s:169    .text:0000000000000098 .L6
     /tmp/ccswfXf8.s:504    .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccswfXf8.s:1033   .debug_str:00000000000001bf .LASF29
     /tmp/ccswfXf8.s:981    .debug_str:000000000000004b .LASF30
     /tmp/ccswfXf8.s:987    .debug_str:0000000000000079 .LASF31
     /tmp/ccswfXf8.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccswfXf8.s:223    .text:00000000000000d0 .Letext0
     /tmp/ccswfXf8.s:967    .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccswfXf8.s:969    .debug_str:0000000000000000 .LASF0
     /tmp/ccswfXf8.s:1017   .debug_str:0000000000000162 .LASF1
     /tmp/ccswfXf8.s:999    .debug_str:00000000000000d9 .LASF2
     /tmp/ccswfXf8.s:991    .debug_str:00000000000000af .LASF4
     /tmp/ccswfXf8.s:983    .debug_str:000000000000005b .LASF3
     /tmp/ccswfXf8.s:977    .debug_str:0000000000000034 .LASF5
     /tmp/ccswfXf8.s:989    .debug_str:000000000000009c .LASF6
     /tmp/ccswfXf8.s:1015   .debug_str:000000000000014f .LASF7
     /tmp/ccswfXf8.s:1025   .debug_str:0000000000000199 .LASF8
     /tmp/ccswfXf8.s:973    .debug_str:0000000000000017 .LASF9
     /tmp/ccswfXf8.s:975    .debug_str:0000000000000025 .LASF10
     /tmp/ccswfXf8.s:1021   .debug_str:0000000000000185 .LASF11
     /tmp/ccswfXf8.s:979    .debug_str:000000000000003b .LASF12
     /tmp/ccswfXf8.s:1019   .debug_str:0000000000000175 .LASF13
     /tmp/ccswfXf8.s:997    .debug_str:00000000000000cd .LASF14
     /tmp/ccswfXf8.s:1013   .debug_str:0000000000000139 .LASF15
     /tmp/ccswfXf8.s:1005   .debug_str:0000000000000103 .LASF16
     /tmp/ccswfXf8.s:995    .debug_str:00000000000000c4 .LASF17
     /tmp/ccswfXf8.s:1009   .debug_str:0000000000000122 .LASF32
     /tmp/ccswfXf8.s:194    .text:00000000000000b0 .LFB3
     /tmp/ccswfXf8.s:221    .text:00000000000000d0 .LFE3
GAS LISTING /tmp/ccswfXf8.s 			page 9


     /tmp/ccswfXf8.s:1001   .debug_str:00000000000000e7 .LASF23
     /tmp/ccswfXf8.s:114    .text:000000000000005c .LFB2
     /tmp/ccswfXf8.s:188    .text:00000000000000b0 .LFE2
     /tmp/ccswfXf8.s:1011   .debug_str:0000000000000132 .LASF18
     /tmp/ccswfXf8.s:809    .debug_loc:0000000000000000 .LLST6
     /tmp/ccswfXf8.s:993    .debug_str:00000000000000b6 .LASF19
     /tmp/ccswfXf8.s:823    .debug_loc:0000000000000039 .LLST7
     /tmp/ccswfXf8.s:1031   .debug_str:00000000000001ba .LASF20
     /tmp/ccswfXf8.s:837    .debug_loc:0000000000000072 .LLST8
     /tmp/ccswfXf8.s:985    .debug_str:000000000000006d .LASF21
     /tmp/ccswfXf8.s:851    .debug_loc:00000000000000ab .LLST9
     /tmp/ccswfXf8.s:1029   .debug_str:00000000000001b3 .LASF22
     /tmp/ccswfXf8.s:862    .debug_loc:00000000000000e1 .LLST10
     /tmp/ccswfXf8.s:145    .text:0000000000000084 .LVL11
     /tmp/ccswfXf8.s:1035   .debug_str:000000000000025d .LASF24
     /tmp/ccswfXf8.s:65     .text:0000000000000030 .LFB1
     /tmp/ccswfXf8.s:108    .text:000000000000005c .LFE1
     /tmp/ccswfXf8.s:869    .debug_loc:0000000000000104 .LLST3
     /tmp/ccswfXf8.s:1007   .debug_str:0000000000000119 .LASF25
     /tmp/ccswfXf8.s:883    .debug_loc:000000000000013d .LLST4
     /tmp/ccswfXf8.s:897    .debug_loc:0000000000000176 .LLST5
     /tmp/ccswfXf8.s:1027   .debug_str:00000000000001a9 .LASF33
     /tmp/ccswfXf8.s:11     .text:0000000000000000 .LFB0
     /tmp/ccswfXf8.s:59     .text:0000000000000030 .LFE0
     /tmp/ccswfXf8.s:1023   .debug_str:0000000000000194 .LASF26
     /tmp/ccswfXf8.s:904    .debug_loc:0000000000000199 .LLST0
     /tmp/ccswfXf8.s:971    .debug_str:000000000000000d .LASF27
     /tmp/ccswfXf8.s:924    .debug_loc:00000000000001e7 .LLST1
     /tmp/ccswfXf8.s:1003   .debug_str:00000000000000f5 .LASF28
     /tmp/ccswfXf8.s:942    .debug_loc:0000000000000224 .LLST2
     /tmp/ccswfXf8.s:117    .text:000000000000005c .LVL9
     /tmp/ccswfXf8.s:143    .text:000000000000007c .LVL10
     /tmp/ccswfXf8.s:163    .text:0000000000000094 .LVL12
     /tmp/ccswfXf8.s:180    .text:00000000000000a8 .LVL14
     /tmp/ccswfXf8.s:185    .text:00000000000000ac .LVL15
     /tmp/ccswfXf8.s:168    .text:0000000000000098 .LVL13
     /tmp/ccswfXf8.s:68     .text:0000000000000030 .LVL5
     /tmp/ccswfXf8.s:95     .text:000000000000004c .LVL7
     /tmp/ccswfXf8.s:76     .text:000000000000003c .LVL6
     /tmp/ccswfXf8.s:100    .text:0000000000000050 .LVL8
     /tmp/ccswfXf8.s:15     .text:0000000000000000 .LVL0
     /tmp/ccswfXf8.s:25     .text:0000000000000010 .LVL1
     /tmp/ccswfXf8.s:28     .text:0000000000000014 .LVL2
     /tmp/ccswfXf8.s:48     .text:0000000000000024 .LVL4
     /tmp/ccswfXf8.s:43     .text:0000000000000020 .LVL3
     /tmp/ccswfXf8.s:227    .debug_info:0000000000000000 .Ldebug_info0

NO UNDEFINED SYMBOLS
