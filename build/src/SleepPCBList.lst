GAS LISTING /tmp/ccBPl5sq.s 			page 1


   1              		.file	"SleepPCBList.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN12SleepPCBList17insertSleepingPCBEv
   9              	_ZN12SleepPCBList17insertSleepingPCBEv:
  10              	.LFB21:
  11              		.file 1 "src/SleepPCBList.cpp"
   1:src/SleepPCBList.cpp **** //
   2:src/SleepPCBList.cpp **** // Created by os on 5/11/22.
   3:src/SleepPCBList.cpp **** //
   4:src/SleepPCBList.cpp **** 
   5:src/SleepPCBList.cpp **** #include "../h/SleepPCBList.hpp"
   6:src/SleepPCBList.cpp **** 
   7:src/SleepPCBList.cpp **** PCB* SleepPCBList::sleepingPCBHead = 0;
   8:src/SleepPCBList.cpp **** 
   9:src/SleepPCBList.cpp **** void SleepPCBList::insertSleepingPCB()
  10:src/SleepPCBList.cpp **** {
  12              		.loc 1 10 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  11:src/SleepPCBList.cpp ****     PCB::running->setState(PCB::SLEEPING);
  20              		.loc 1 11 5
  21              		.loc 1 11 27 is_stmt 0
  22 000c 97070000 		la	a5,_ZN3PCB7runningE
  22      83B70700 
  23 0014 03B60700 		ld	a2,0(a5)
  24              	.LVL0:
  25              	.LBB31:
  26              	.LBB32:
  27              		.file 2 "src/../h/PCB.hpp"
   1:src/../h/PCB.hpp **** //
   2:src/../h/PCB.hpp **** // Created by os on 4/27/22.
   3:src/../h/PCB.hpp **** //
   4:src/../h/PCB.hpp **** 
   5:src/../h/PCB.hpp **** #ifndef PROJECT_BASE_V1_0_PCB_HPP
   6:src/../h/PCB.hpp **** #define PROJECT_BASE_V1_0_PCB_HPP
   7:src/../h/PCB.hpp **** 
   8:src/../h/PCB.hpp **** #include "../lib/hw.h"
   9:src/../h/PCB.hpp **** #include "Scheduler.hpp"
  10:src/../h/PCB.hpp **** #include "Riscv.hpp"
  11:src/../h/PCB.hpp **** 
  12:src/../h/PCB.hpp **** class PCB
  13:src/../h/PCB.hpp **** {
  14:src/../h/PCB.hpp **** public:
  15:src/../h/PCB.hpp ****     using Body = void (*)(void*);
  16:src/../h/PCB.hpp **** 
  17:src/../h/PCB.hpp ****     PCB(Body body,  void* args, void* stack_space, uint64 timeSlice);
  18:src/../h/PCB.hpp ****     ~PCB();
  19:src/../h/PCB.hpp **** 
GAS LISTING /tmp/ccBPl5sq.s 			page 2


  20:src/../h/PCB.hpp ****     void start();
  21:src/../h/PCB.hpp ****     static void dispatch();
  22:src/../h/PCB.hpp ****     static void sleep(time_t);
  23:src/../h/PCB.hpp **** 
  24:src/../h/PCB.hpp ****     static PCB* running;
  25:src/../h/PCB.hpp ****     static PCB* exitingPCB;
  26:src/../h/PCB.hpp **** 
  27:src/../h/PCB.hpp ****     static uint64 timeSliceCounter;
  28:src/../h/PCB.hpp ****     uint64 getTimeSlice() { return timeSlice;}
  29:src/../h/PCB.hpp **** 
  30:src/../h/PCB.hpp ****     void* operator new(size_t size);
  31:src/../h/PCB.hpp ****     void operator delete(void *p);
  32:src/../h/PCB.hpp **** 
  33:src/../h/PCB.hpp ****     enum State{READY, RUNNING, SUSPENDED, FINISHED, EXITING, SLEEPING};
  34:src/../h/PCB.hpp ****     State getState() {return state;}
  35:src/../h/PCB.hpp ****     void setState(State s) {state = s;}
  28              		.loc 2 35 29 is_stmt 1
  29              		.loc 2 35 35 is_stmt 0
  30 0018 93075000 		li	a5,5
  31 001c 232CF602 		sw	a5,56(a2)
  32              	.LVL1:
  33              	.LBE32:
  34              	.LBE31:
  12:src/SleepPCBList.cpp ****     //Riscv::printString("Inserting sleeping PCB...\n");
  13:src/SleepPCBList.cpp ****     PCB* prev = 0;
  35              		.loc 1 13 5 is_stmt 1
  14:src/SleepPCBList.cpp ****     PCB* curr = sleepingPCBHead;
  36              		.loc 1 14 5
  37              		.loc 1 14 10 is_stmt 0
  38 0020 97070000 		ld	a5,.LANCHOR0
  38      83B70700 
  39              	.LVL2:
  13:src/SleepPCBList.cpp ****     PCB* curr = sleepingPCBHead;
  40              		.loc 1 13 10
  41 0028 93050000 		li	a1,0
  42              	.LVL3:
  43              	.L4:
  15:src/SleepPCBList.cpp ****     while(curr != 0)
  44              		.loc 1 15 5 is_stmt 1
  45              		.loc 1 15 16
  46 002c 63800702 		beqz	a5,.L2
  16:src/SleepPCBList.cpp ****     {
  17:src/SleepPCBList.cpp ****         if(PCB::running->getTimeToSleep() < curr->getTimeToSleep())
  47              		.loc 1 17 9
  48              	.LVL4:
  49              	.LBB33:
  50              	.LBB34:
  36:src/../h/PCB.hpp ****     void setTimeToSleep(uint64 time) {timeToSleep = time;}
  37:src/../h/PCB.hpp ****     uint64 getTimeToSleep() {return timeToSleep;}
  51              		.loc 2 37 30
  52              		.loc 2 37 37 is_stmt 0
  53 0030 83368601 		ld	a3,24(a2)
  54              	.LVL5:
  55              	.LBE34:
  56              	.LBE33:
  57              	.LBB35:
  58              	.LBB36:
GAS LISTING /tmp/ccBPl5sq.s 			page 3


  59              		.loc 2 37 30 is_stmt 1
  60              		.loc 2 37 37 is_stmt 0
  61 0034 03B78701 		ld	a4,24(a5)
  62              	.LVL6:
  63              	.LBE36:
  64              	.LBE35:
  65              		.loc 1 17 9
  66 0038 63E8E600 		bltu	a3,a4,.L8
  18:src/SleepPCBList.cpp ****         {
  19:src/SleepPCBList.cpp ****             PCB::running->nextPCB = curr;
  20:src/SleepPCBList.cpp ****             break;
  21:src/SleepPCBList.cpp ****         }
  22:src/SleepPCBList.cpp ****         prev = curr;
  67              		.loc 1 22 9 is_stmt 1
  68              	.LVL7:
  23:src/SleepPCBList.cpp ****         curr=curr->nextPCB;
  69              		.loc 1 23 9
  22:src/SleepPCBList.cpp ****         curr=curr->nextPCB;
  70              		.loc 1 22 14 is_stmt 0
  71 003c 93850700 		mv	a1,a5
  72              		.loc 1 23 13
  73 0040 83B78700 		ld	a5,8(a5)
  74              	.LVL8:
  15:src/SleepPCBList.cpp ****     {
  75              		.loc 1 15 5
  76 0044 6FF09FFE 		j	.L4
  77              	.L8:
  19:src/SleepPCBList.cpp ****             break;
  78              		.loc 1 19 13 is_stmt 1
  19:src/SleepPCBList.cpp ****             break;
  79              		.loc 1 19 35 is_stmt 0
  80 0048 2334F600 		sd	a5,8(a2)
  20:src/SleepPCBList.cpp ****         }
  81              		.loc 1 20 13 is_stmt 1
  82              	.L2:
  24:src/SleepPCBList.cpp ****     }
  25:src/SleepPCBList.cpp **** 
  26:src/SleepPCBList.cpp ****     if(prev == 0)
  83              		.loc 1 26 5
  84 004c 63820502 		beqz	a1,.L9
  27:src/SleepPCBList.cpp ****     {
  28:src/SleepPCBList.cpp ****         sleepingPCBHead = PCB::running;
  29:src/SleepPCBList.cpp ****         if(sleepingPCBHead->nextPCB != 0)
  30:src/SleepPCBList.cpp ****             sleepingPCBHead->nextPCB->setTimeToSleep(sleepingPCBHead->nextPCB->getTimeToSleep() - s
  31:src/SleepPCBList.cpp ****     }
  32:src/SleepPCBList.cpp ****     else
  33:src/SleepPCBList.cpp ****     {
  34:src/SleepPCBList.cpp ****         PCB::running->setTimeToSleep(PCB::running->getTimeToSleep() - prev->getTimeToSleep());
  85              		.loc 1 34 9
  86              	.LVL9:
  87              	.LBB37:
  88              	.LBB38:
  89              		.loc 2 37 30
  90              		.loc 2 37 37 is_stmt 0
  91 0050 83378601 		ld	a5,24(a2)
  92              	.LVL10:
  93              	.LBE38:
GAS LISTING /tmp/ccBPl5sq.s 			page 4


  94              	.LBE37:
  95              	.LBB39:
  96              	.LBB40:
  97              		.loc 2 37 30 is_stmt 1
  98              		.loc 2 37 37 is_stmt 0
  99 0054 03B78501 		ld	a4,24(a1)
 100              	.LVL11:
 101              	.LBE40:
 102              	.LBE39:
 103              		.loc 1 34 37
 104 0058 B387E740 		sub	a5,a5,a4
 105              	.LVL12:
 106              	.LBB41:
 107              	.LBB42:
  36:src/../h/PCB.hpp ****     uint64 getTimeToSleep() {return timeToSleep;}
 108              		.loc 2 36 39 is_stmt 1
  36:src/../h/PCB.hpp ****     uint64 getTimeToSleep() {return timeToSleep;}
 109              		.loc 2 36 51 is_stmt 0
 110 005c 233CF600 		sd	a5,24(a2)
 111              	.LVL13:
 112              	.LBE42:
 113              	.LBE41:
  35:src/SleepPCBList.cpp ****         prev->nextPCB = PCB::running;
 114              		.loc 1 35 9 is_stmt 1
 115              		.loc 1 35 23 is_stmt 0
 116 0060 23B4C500 		sd	a2,8(a1)
 117              	.L1:
  36:src/SleepPCBList.cpp ****     }
  37:src/SleepPCBList.cpp **** }
 118              		.loc 1 37 1
 119 0064 03348100 		ld	s0,8(sp)
 120              		.cfi_remember_state
 121              		.cfi_restore 8
 122              		.cfi_def_cfa 2, 16
 123 0068 13010101 		addi	sp,sp,16
 124              		.cfi_def_cfa_offset 0
 125 006c 67800000 		jr	ra
 126              	.LVL14:
 127              	.L9:
 128              		.cfi_restore_state
  28:src/SleepPCBList.cpp ****         if(sleepingPCBHead->nextPCB != 0)
 129              		.loc 1 28 9 is_stmt 1
  28:src/SleepPCBList.cpp ****         if(sleepingPCBHead->nextPCB != 0)
 130              		.loc 1 28 25 is_stmt 0
 131 0070 97070000 		sd	a2,.LANCHOR0,a5
 131      23B0C700 
 132              	.LVL15:
  29:src/SleepPCBList.cpp ****             sleepingPCBHead->nextPCB->setTimeToSleep(sleepingPCBHead->nextPCB->getTimeToSleep() - s
 133              		.loc 1 29 9 is_stmt 1
  29:src/SleepPCBList.cpp ****             sleepingPCBHead->nextPCB->setTimeToSleep(sleepingPCBHead->nextPCB->getTimeToSleep() - s
 134              		.loc 1 29 29 is_stmt 0
 135 0078 83378600 		ld	a5,8(a2)
  29:src/SleepPCBList.cpp ****             sleepingPCBHead->nextPCB->setTimeToSleep(sleepingPCBHead->nextPCB->getTimeToSleep() - s
 136              		.loc 1 29 9
 137 007c E38407FE 		beqz	a5,.L1
  30:src/SleepPCBList.cpp ****     }
 138              		.loc 1 30 13 is_stmt 1
GAS LISTING /tmp/ccBPl5sq.s 			page 5


 139              	.LVL16:
 140              	.LBB43:
 141              	.LBB44:
 142              		.loc 2 37 30
 143              		.loc 2 37 37 is_stmt 0
 144 0080 03B78701 		ld	a4,24(a5)
 145              	.LVL17:
 146              	.LBE44:
 147              	.LBE43:
 148              	.LBB45:
 149              	.LBB46:
 150              		.loc 2 37 30 is_stmt 1
 151              		.loc 2 37 37 is_stmt 0
 152 0084 83368601 		ld	a3,24(a2)
 153              	.LVL18:
 154              	.LBE46:
 155              	.LBE45:
  30:src/SleepPCBList.cpp ****     }
 156              		.loc 1 30 53
 157 0088 3307D740 		sub	a4,a4,a3
 158              	.LVL19:
 159              	.LBB47:
 160              	.LBB48:
  36:src/../h/PCB.hpp ****     uint64 getTimeToSleep() {return timeToSleep;}
 161              		.loc 2 36 39 is_stmt 1
  36:src/../h/PCB.hpp ****     uint64 getTimeToSleep() {return timeToSleep;}
 162              		.loc 2 36 51 is_stmt 0
 163 008c 23BCE700 		sd	a4,24(a5)
  36:src/../h/PCB.hpp ****     uint64 getTimeToSleep() {return timeToSleep;}
 164              		.loc 2 36 58
 165 0090 6FF05FFD 		j	.L1
 166              	.LBE48:
 167              	.LBE47:
 168              		.cfi_endproc
 169              	.LFE21:
 171              		.align	2
 172              		.globl	_ZN12SleepPCBList13tryToWakePCBsEv
 174              	_ZN12SleepPCBList13tryToWakePCBsEv:
 175              	.LFB22:
  38:src/SleepPCBList.cpp **** 
  39:src/SleepPCBList.cpp **** void SleepPCBList::tryToWakePCBs()
  40:src/SleepPCBList.cpp **** {
 176              		.loc 1 40 1 is_stmt 1
 177              		.cfi_startproc
  41:src/SleepPCBList.cpp ****     //Riscv::printString("Waking PCBs...\n");
  42:src/SleepPCBList.cpp ****     PCB* curr = sleepingPCBHead;
 178              		.loc 1 42 5
 179              		.loc 1 42 10 is_stmt 0
 180 0094 17050000 		ld	a0,.LANCHOR0
 180      03350500 
 181              	.LVL20:
  43:src/SleepPCBList.cpp ****     if(curr == 0)
 182              		.loc 1 43 5 is_stmt 1
 183 009c 63080508 		beqz	a0,.L16
  44:src/SleepPCBList.cpp ****     {
  45:src/SleepPCBList.cpp ****         //Riscv::printString("No sleeping PCBs...\n");
  46:src/SleepPCBList.cpp ****         return;
GAS LISTING /tmp/ccBPl5sq.s 			page 6


  47:src/SleepPCBList.cpp ****     }
  48:src/SleepPCBList.cpp ****     if(sleepingPCBHead->getTimeToSleep() == 1)
 184              		.loc 1 48 5
 185              	.LVL21:
 186              	.LBB49:
 187              	.LBB50:
 188              	.LBB51:
 189              		.loc 2 37 30
 190              		.loc 2 37 37 is_stmt 0
 191 00a0 83378501 		ld	a5,24(a0)
 192              	.LVL22:
 193              	.LBE51:
 194              	.LBE50:
 195              		.loc 1 48 5
 196 00a4 13071000 		li	a4,1
 197 00a8 6388E700 		beq	a5,a4,.L21
  49:src/SleepPCBList.cpp ****     {
  50:src/SleepPCBList.cpp ****         while(curr != 0 && (curr == sleepingPCBHead || curr->getTimeToSleep() == 0))
  51:src/SleepPCBList.cpp ****         {
  52:src/SleepPCBList.cpp ****             PCB *old = curr;
  53:src/SleepPCBList.cpp ****             curr = curr->nextPCB;
  54:src/SleepPCBList.cpp ****             old->nextPCB = 0;
  55:src/SleepPCBList.cpp ****             Scheduler::put(old);
  56:src/SleepPCBList.cpp ****             sleepingPCBHead = curr;
  57:src/SleepPCBList.cpp ****         }
  58:src/SleepPCBList.cpp ****     }
  59:src/SleepPCBList.cpp ****     else
  60:src/SleepPCBList.cpp ****     {
  61:src/SleepPCBList.cpp ****         sleepingPCBHead->setTimeToSleep(sleepingPCBHead->getTimeToSleep() - 1);
 198              		.loc 1 61 9 is_stmt 1
 199              	.LVL23:
 200              	.LBE49:
 201              		.loc 2 37 30
 202              	.LBB61:
 203              		.loc 1 61 40 is_stmt 0
 204 00ac 9387F7FF 		addi	a5,a5,-1
 205              	.LVL24:
 206              	.LBB52:
 207              	.LBB53:
  36:src/../h/PCB.hpp ****     uint64 getTimeToSleep() {return timeToSleep;}
 208              		.loc 2 36 39 is_stmt 1
  36:src/../h/PCB.hpp ****     uint64 getTimeToSleep() {return timeToSleep;}
 209              		.loc 2 36 51 is_stmt 0
 210 00b0 233CF500 		sd	a5,24(a0)
 211              	.LVL25:
  36:src/../h/PCB.hpp ****     uint64 getTimeToSleep() {return timeToSleep;}
 212              		.loc 2 36 58
 213 00b4 67800000 		ret
 214              	.L21:
 215              	.LBE53:
 216              	.LBE52:
 217              	.LBB54:
  50:src/SleepPCBList.cpp ****         {
 218              		.loc 1 50 9 is_stmt 1
  50:src/SleepPCBList.cpp ****         {
 219              		.loc 1 50 25
 220 00b8 630A0506 		beqz	a0,.L16
GAS LISTING /tmp/ccBPl5sq.s 			page 7


  50:src/SleepPCBList.cpp ****         {
 221              		.loc 1 50 34 is_stmt 0
 222 00bc 97070000 		ld	a5,.LANCHOR0
 222      83B70700 
  50:src/SleepPCBList.cpp ****         {
 223              		.loc 1 50 25
 224 00c4 6386A700 		beq	a5,a0,.L20
 225              	.LVL26:
 226              	.LBB55:
 227              	.LBB56:
 228              		.loc 2 37 30 is_stmt 1
 229              		.loc 2 37 37 is_stmt 0
 230 00c8 83378501 		ld	a5,24(a0)
 231              	.LVL27:
 232              	.LBE56:
 233              	.LBE55:
  50:src/SleepPCBList.cpp ****         {
 234              		.loc 1 50 53
 235 00cc 63900706 		bnez	a5,.L16
 236              	.L20:
 237              	.LBE54:
 238              	.LBE61:
  40:src/SleepPCBList.cpp ****     //Riscv::printString("Waking PCBs...\n");
 239              		.loc 1 40 1
 240 00d0 130101FE 		addi	sp,sp,-32
 241              		.cfi_def_cfa_offset 32
 242 00d4 233C1100 		sd	ra,24(sp)
 243 00d8 23388100 		sd	s0,16(sp)
 244 00dc 23349100 		sd	s1,8(sp)
 245              		.cfi_offset 1, -8
 246              		.cfi_offset 8, -16
 247              		.cfi_offset 9, -24
 248 00e0 13040102 		addi	s0,sp,32
 249              		.cfi_def_cfa 8, 0
 250              	.L13:
 251              	.LBB62:
 252              	.LBB60:
 253              	.LBB58:
  52:src/SleepPCBList.cpp ****             curr = curr->nextPCB;
 254              		.loc 1 52 13 is_stmt 1 discriminator 5
 255              	.LVL28:
  53:src/SleepPCBList.cpp ****             old->nextPCB = 0;
 256              		.loc 1 53 13 discriminator 5
  53:src/SleepPCBList.cpp ****             old->nextPCB = 0;
 257              		.loc 1 53 18 is_stmt 0 discriminator 5
 258 00e4 83348500 		ld	s1,8(a0)
 259              	.LVL29:
  54:src/SleepPCBList.cpp ****             Scheduler::put(old);
 260              		.loc 1 54 13 is_stmt 1 discriminator 5
  54:src/SleepPCBList.cpp ****             Scheduler::put(old);
 261              		.loc 1 54 26 is_stmt 0 discriminator 5
 262 00e8 23340500 		sd	zero,8(a0)
  55:src/SleepPCBList.cpp ****             sleepingPCBHead = curr;
 263              		.loc 1 55 13 is_stmt 1 discriminator 5
  55:src/SleepPCBList.cpp ****             sleepingPCBHead = curr;
 264              		.loc 1 55 27 is_stmt 0 discriminator 5
 265 00ec 97000000 		call	_ZN9Scheduler3putEP3PCB@plt
GAS LISTING /tmp/ccBPl5sq.s 			page 8


 265      E7800000 
 266              	.LVL30:
  56:src/SleepPCBList.cpp ****         }
 267              		.loc 1 56 13 is_stmt 1 discriminator 5
  56:src/SleepPCBList.cpp ****         }
 268              		.loc 1 56 29 is_stmt 0 discriminator 5
 269 00f4 97070000 		sd	s1,.LANCHOR0,a5
 269      23B09700 
  53:src/SleepPCBList.cpp ****             old->nextPCB = 0;
 270              		.loc 1 53 18 discriminator 5
 271 00fc 13850400 		mv	a0,s1
 272              	.LBE58:
  50:src/SleepPCBList.cpp ****         {
 273              		.loc 1 50 9 is_stmt 1 discriminator 5
  50:src/SleepPCBList.cpp ****         {
 274              		.loc 1 50 25 discriminator 5
 275 0100 638C0400 		beqz	s1,.L10
  50:src/SleepPCBList.cpp ****         {
 276              		.loc 1 50 34 is_stmt 0 discriminator 1
 277 0104 97070000 		ld	a5,.LANCHOR0
 277      83B70700 
  50:src/SleepPCBList.cpp ****         {
 278              		.loc 1 50 25 discriminator 1
 279 010c E38C97FC 		beq	a5,s1,.L13
 280              	.LVL31:
 281              	.LBB59:
 282              	.LBB57:
 283              		.loc 2 37 30 is_stmt 1
 284              		.loc 2 37 37 is_stmt 0
 285 0110 83B78401 		ld	a5,24(s1)
 286              	.LVL32:
 287              	.LBE57:
 288              	.LBE59:
  50:src/SleepPCBList.cpp ****         {
 289              		.loc 1 50 53
 290 0114 E38807FC 		beqz	a5,.L13
 291              	.L10:
 292              	.LBE60:
 293              	.LBE62:
  62:src/SleepPCBList.cpp ****     }
  63:src/SleepPCBList.cpp **** }
 294              		.loc 1 63 1
 295 0118 83308101 		ld	ra,24(sp)
 296              		.cfi_restore 1
 297 011c 03340101 		ld	s0,16(sp)
 298              		.cfi_restore 8
 299              		.cfi_def_cfa 2, 32
 300 0120 83348100 		ld	s1,8(sp)
 301              		.cfi_restore 9
 302              	.LVL33:
 303 0124 13010102 		addi	sp,sp,32
 304              		.cfi_def_cfa_offset 0
 305 0128 67800000 		jr	ra
 306              	.L16:
 307 012c 67800000 		ret
 308              		.cfi_endproc
 309              	.LFE22:
GAS LISTING /tmp/ccBPl5sq.s 			page 9


 311              		.globl	_ZN12SleepPCBList15sleepingPCBHeadE
 312              		.bss
 313              		.align	3
 314              		.set	.LANCHOR0,. + 0
 317              	_ZN12SleepPCBList15sleepingPCBHeadE:
 318 0000 00000000 		.zero	8
 318      00000000 
 319              		.text
 320              	.Letext0:
 321              		.file 3 "src/../h/../lib/hw.h"
 322              		.file 4 "src/../h/Queue.hpp"
 323              		.file 5 "src/../h/Scheduler.hpp"
 324              		.file 6 "src/../h/SleepPCBList.hpp"
GAS LISTING /tmp/ccBPl5sq.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 SleepPCBList.cpp
     /tmp/ccBPl5sq.s:9      .text:0000000000000000 _ZN12SleepPCBList17insertSleepingPCBEv
     /tmp/ccBPl5sq.s:13     .text:0000000000000000 .L0 
     /tmp/ccBPl5sq.s:14     .text:0000000000000000 .L0 
     /tmp/ccBPl5sq.s:15     .text:0000000000000004 .L0 
     /tmp/ccBPl5sq.s:17     .text:0000000000000008 .L0 
     /tmp/ccBPl5sq.s:19     .text:000000000000000c .L0 
     /tmp/ccBPl5sq.s:21     .text:000000000000000c .L0 
     /tmp/ccBPl5sq.s:22     .text:000000000000000c .L0 
     /tmp/ccBPl5sq.s:29     .text:0000000000000018 .L0 
     /tmp/ccBPl5sq.s:30     .text:0000000000000018 .L0 
     /tmp/ccBPl5sq.s:36     .text:0000000000000020 .L0 
     /tmp/ccBPl5sq.s:37     .text:0000000000000020 .L0 
     /tmp/ccBPl5sq.s:38     .text:0000000000000020 .L0 
     /tmp/ccBPl5sq.s:41     .text:0000000000000028 .L0 
     /tmp/ccBPl5sq.s:45     .text:000000000000002c .L0 
     /tmp/ccBPl5sq.s:46     .text:000000000000002c .L0 
     /tmp/ccBPl5sq.s:51     .text:0000000000000030 .L0 
     /tmp/ccBPl5sq.s:52     .text:0000000000000030 .L0 
     /tmp/ccBPl5sq.s:53     .text:0000000000000030 .L0 
     /tmp/ccBPl5sq.s:60     .text:0000000000000034 .L0 
     /tmp/ccBPl5sq.s:61     .text:0000000000000034 .L0 
     /tmp/ccBPl5sq.s:66     .text:0000000000000038 .L0 
     /tmp/ccBPl5sq.s:69     .text:000000000000003c .L0 
     /tmp/ccBPl5sq.s:70     .text:000000000000003c .L0 
     /tmp/ccBPl5sq.s:71     .text:000000000000003c .L0 
     /tmp/ccBPl5sq.s:73     .text:0000000000000040 .L0 
     /tmp/ccBPl5sq.s:76     .text:0000000000000044 .L0 
     /tmp/ccBPl5sq.s:79     .text:0000000000000048 .L0 
     /tmp/ccBPl5sq.s:80     .text:0000000000000048 .L0 
     /tmp/ccBPl5sq.s:83     .text:000000000000004c .L0 
     /tmp/ccBPl5sq.s:84     .text:000000000000004c .L0 
     /tmp/ccBPl5sq.s:89     .text:0000000000000050 .L0 
     /tmp/ccBPl5sq.s:90     .text:0000000000000050 .L0 
     /tmp/ccBPl5sq.s:91     .text:0000000000000050 .L0 
     /tmp/ccBPl5sq.s:98     .text:0000000000000054 .L0 
     /tmp/ccBPl5sq.s:99     .text:0000000000000054 .L0 
     /tmp/ccBPl5sq.s:104    .text:0000000000000058 .L0 
     /tmp/ccBPl5sq.s:109    .text:000000000000005c .L0 
     /tmp/ccBPl5sq.s:110    .text:000000000000005c .L0 
     /tmp/ccBPl5sq.s:115    .text:0000000000000060 .L0 
     /tmp/ccBPl5sq.s:116    .text:0000000000000060 .L0 
     /tmp/ccBPl5sq.s:119    .text:0000000000000064 .L0 
     /tmp/ccBPl5sq.s:120    .text:0000000000000068 .L0 
     /tmp/ccBPl5sq.s:121    .text:0000000000000068 .L0 
     /tmp/ccBPl5sq.s:122    .text:0000000000000068 .L0 
     /tmp/ccBPl5sq.s:124    .text:000000000000006c .L0 
     /tmp/ccBPl5sq.s:128    .text:0000000000000070 .L0 
     /tmp/ccBPl5sq.s:130    .text:0000000000000070 .L0 
     /tmp/ccBPl5sq.s:131    .text:0000000000000070 .L0 
     /tmp/ccBPl5sq.s:134    .text:0000000000000078 .L0 
     /tmp/ccBPl5sq.s:135    .text:0000000000000078 .L0 
     /tmp/ccBPl5sq.s:137    .text:000000000000007c .L0 
     /tmp/ccBPl5sq.s:142    .text:0000000000000080 .L0 
     /tmp/ccBPl5sq.s:143    .text:0000000000000080 .L0 
     /tmp/ccBPl5sq.s:144    .text:0000000000000080 .L0 
GAS LISTING /tmp/ccBPl5sq.s 			page 11


     /tmp/ccBPl5sq.s:151    .text:0000000000000084 .L0 
     /tmp/ccBPl5sq.s:152    .text:0000000000000084 .L0 
     /tmp/ccBPl5sq.s:157    .text:0000000000000088 .L0 
     /tmp/ccBPl5sq.s:162    .text:000000000000008c .L0 
     /tmp/ccBPl5sq.s:163    .text:000000000000008c .L0 
     /tmp/ccBPl5sq.s:165    .text:0000000000000090 .L0 
     /tmp/ccBPl5sq.s:168    .text:0000000000000094 .L0 
     /tmp/ccBPl5sq.s:174    .text:0000000000000094 _ZN12SleepPCBList13tryToWakePCBsEv
     /tmp/ccBPl5sq.s:177    .text:0000000000000094 .L0 
     /tmp/ccBPl5sq.s:178    .text:0000000000000094 .L0 
     /tmp/ccBPl5sq.s:179    .text:0000000000000094 .L0 
     /tmp/ccBPl5sq.s:180    .text:0000000000000094 .L0 
     /tmp/ccBPl5sq.s:183    .text:000000000000009c .L0 
     /tmp/ccBPl5sq.s:189    .text:00000000000000a0 .L0 
     /tmp/ccBPl5sq.s:190    .text:00000000000000a0 .L0 
     /tmp/ccBPl5sq.s:191    .text:00000000000000a0 .L0 
     /tmp/ccBPl5sq.s:196    .text:00000000000000a4 .L0 
     /tmp/ccBPl5sq.s:201    .text:00000000000000ac .L0 
     /tmp/ccBPl5sq.s:203    .text:00000000000000ac .L0 
     /tmp/ccBPl5sq.s:204    .text:00000000000000ac .L0 
     /tmp/ccBPl5sq.s:209    .text:00000000000000b0 .L0 
     /tmp/ccBPl5sq.s:210    .text:00000000000000b0 .L0 
     /tmp/ccBPl5sq.s:213    .text:00000000000000b4 .L0 
     /tmp/ccBPl5sq.s:219    .text:00000000000000b8 .L0 
     /tmp/ccBPl5sq.s:220    .text:00000000000000b8 .L0 
     /tmp/ccBPl5sq.s:222    .text:00000000000000bc .L0 
     /tmp/ccBPl5sq.s:224    .text:00000000000000c4 .L0 
     /tmp/ccBPl5sq.s:229    .text:00000000000000c8 .L0 
     /tmp/ccBPl5sq.s:230    .text:00000000000000c8 .L0 
     /tmp/ccBPl5sq.s:235    .text:00000000000000cc .L0 
     /tmp/ccBPl5sq.s:240    .text:00000000000000d0 .L0 
     /tmp/ccBPl5sq.s:241    .text:00000000000000d4 .L0 
     /tmp/ccBPl5sq.s:245    .text:00000000000000e0 .L0 
     /tmp/ccBPl5sq.s:246    .text:00000000000000e0 .L0 
     /tmp/ccBPl5sq.s:247    .text:00000000000000e0 .L0 
     /tmp/ccBPl5sq.s:249    .text:00000000000000e4 .L0 
     /tmp/ccBPl5sq.s:256    .text:00000000000000e4 .L0 
     /tmp/ccBPl5sq.s:257    .text:00000000000000e4 .L0 
     /tmp/ccBPl5sq.s:258    .text:00000000000000e4 .L0 
     /tmp/ccBPl5sq.s:261    .text:00000000000000e8 .L0 
     /tmp/ccBPl5sq.s:262    .text:00000000000000e8 .L0 
     /tmp/ccBPl5sq.s:264    .text:00000000000000ec .L0 
     /tmp/ccBPl5sq.s:265    .text:00000000000000ec .L0 
     /tmp/ccBPl5sq.s:268    .text:00000000000000f4 .L0 
     /tmp/ccBPl5sq.s:269    .text:00000000000000f4 .L0 
     /tmp/ccBPl5sq.s:271    .text:00000000000000fc .L0 
     /tmp/ccBPl5sq.s:274    .text:0000000000000100 .L0 
     /tmp/ccBPl5sq.s:275    .text:0000000000000100 .L0 
     /tmp/ccBPl5sq.s:277    .text:0000000000000104 .L0 
     /tmp/ccBPl5sq.s:279    .text:000000000000010c .L0 
     /tmp/ccBPl5sq.s:284    .text:0000000000000110 .L0 
     /tmp/ccBPl5sq.s:285    .text:0000000000000110 .L0 
     /tmp/ccBPl5sq.s:290    .text:0000000000000114 .L0 
     /tmp/ccBPl5sq.s:295    .text:0000000000000118 .L0 
     /tmp/ccBPl5sq.s:296    .text:000000000000011c .L0 
     /tmp/ccBPl5sq.s:298    .text:0000000000000120 .L0 
     /tmp/ccBPl5sq.s:299    .text:0000000000000120 .L0 
GAS LISTING /tmp/ccBPl5sq.s 			page 12


     /tmp/ccBPl5sq.s:301    .text:0000000000000124 .L0 
     /tmp/ccBPl5sq.s:304    .text:0000000000000128 .L0 
     /tmp/ccBPl5sq.s:308    .text:0000000000000130 .L0 
     /tmp/ccBPl5sq.s:317    .bss:0000000000000000 _ZN12SleepPCBList15sleepingPCBHeadE
     /tmp/ccBPl5sq.s:314    .bss:0000000000000000 .LANCHOR0
     /tmp/ccBPl5sq.s:325    .text:0000000000000130 .L0 
     /tmp/ccBPl5sq.s:22     .text:000000000000000c .L0 
     /tmp/ccBPl5sq.s:38     .text:0000000000000020 .L0 
     /tmp/ccBPl5sq.s:131    .text:0000000000000070 .L0 
     /tmp/ccBPl5sq.s:180    .text:0000000000000094 .L0 
     /tmp/ccBPl5sq.s:222    .text:00000000000000bc .L0 
     /tmp/ccBPl5sq.s:269    .text:00000000000000f4 .L0 
     /tmp/ccBPl5sq.s:277    .text:0000000000000104 .L0 
     /tmp/ccBPl5sq.s:82     .text:000000000000004c .L2
     /tmp/ccBPl5sq.s:77     .text:0000000000000048 .L8
     /tmp/ccBPl5sq.s:43     .text:000000000000002c .L4
     /tmp/ccBPl5sq.s:127    .text:0000000000000070 .L9
     /tmp/ccBPl5sq.s:117    .text:0000000000000064 .L1
     /tmp/ccBPl5sq.s:306    .text:000000000000012c .L16
     /tmp/ccBPl5sq.s:214    .text:00000000000000b8 .L21
     /tmp/ccBPl5sq.s:236    .text:00000000000000d0 .L20
     /tmp/ccBPl5sq.s:291    .text:0000000000000118 .L10
     /tmp/ccBPl5sq.s:250    .text:00000000000000e4 .L13
     /tmp/ccBPl5sq.s:1375   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccBPl5sq.s:2481   .debug_str:00000000000000fb .LASF107
     /tmp/ccBPl5sq.s:2511   .debug_str:0000000000000278 .LASF108
     /tmp/ccBPl5sq.s:2651   .debug_str:0000000000000603 .LASF109
     /tmp/ccBPl5sq.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccBPl5sq.s:320    .text:0000000000000130 .Letext0
     /tmp/ccBPl5sq.s:2449   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccBPl5sq.s:2539   .debug_str:000000000000034e .LASF0
     /tmp/ccBPl5sq.s:2557   .debug_str:00000000000003be .LASF1
     /tmp/ccBPl5sq.s:2603   .debug_str:00000000000004f1 .LASF2
     /tmp/ccBPl5sq.s:2609   .debug_str:000000000000050d .LASF4
     /tmp/ccBPl5sq.s:2547   .debug_str:0000000000000382 .LASF3
     /tmp/ccBPl5sq.s:2457   .debug_str:000000000000002f .LASF5
     /tmp/ccBPl5sq.s:2593   .debug_str:00000000000004ae .LASF6
     /tmp/ccBPl5sq.s:2587   .debug_str:000000000000048e .LASF7
     /tmp/ccBPl5sq.s:2551   .debug_str:00000000000003a1 .LASF8
     /tmp/ccBPl5sq.s:2531   .debug_str:000000000000031d .LASF9
     /tmp/ccBPl5sq.s:2535   .debug_str:000000000000033a .LASF10
     /tmp/ccBPl5sq.s:2491   .debug_str:00000000000001fa .LASF11
     /tmp/ccBPl5sq.s:2525   .debug_str:00000000000002ff .LASF12
     /tmp/ccBPl5sq.s:2499   .debug_str:0000000000000221 .LASF13
     /tmp/ccBPl5sq.s:2489   .debug_str:00000000000001ea .LASF14
     /tmp/ccBPl5sq.s:2631   .debug_str:00000000000005af .LASF15
     /tmp/ccBPl5sq.s:2519   .debug_str:00000000000002b6 .LASF16
     /tmp/ccBPl5sq.s:2627   .debug_str:000000000000057d .LASF17
     /tmp/ccBPl5sq.s:2653   .debug_str:0000000000000626 .LASF28
     /tmp/ccBPl5sq.s:2661   .debug_str:0000000000000652 .LASF20
     /tmp/ccBPl5sq.s:2553   .debug_str:00000000000003b4 .LASF18
     /tmp/ccBPl5sq.s:2493   .debug_str:0000000000000209 .LASF19
     /tmp/ccBPl5sq.s:2637   .debug_str:00000000000005c8 .LASF21
     /tmp/ccBPl5sq.s:2563   .debug_str:00000000000003e4 .LASF22
     /tmp/ccBPl5sq.s:2673   .debug_str:0000000000000688 .LASF39
     /tmp/ccBPl5sq.s:2659   .debug_str:000000000000064c .LASF24
     /tmp/ccBPl5sq.s:2503   .debug_str:0000000000000242 .LASF26
GAS LISTING /tmp/ccBPl5sq.s 			page 13


     /tmp/ccBPl5sq.s:2541   .debug_str:000000000000035b .LASF23
     /tmp/ccBPl5sq.s:2619   .debug_str:0000000000000547 .LASF29
     /tmp/ccBPl5sq.s:2555   .debug_str:00000000000003b9 .LASF25
     /tmp/ccBPl5sq.s:2599   .debug_str:00000000000004c8 .LASF27
     /tmp/ccBPl5sq.s:2515   .debug_str:0000000000000296 .LASF30
     /tmp/ccBPl5sq.s:2597   .debug_str:00000000000004c1 .LASF45
     /tmp/ccBPl5sq.s:2471   .debug_str:00000000000000ba .LASF47
     /tmp/ccBPl5sq.s:2641   .debug_str:00000000000005d3 .LASF110
     /tmp/ccBPl5sq.s:2487   .debug_str:00000000000001e4 .LASF31
     /tmp/ccBPl5sq.s:2621   .debug_str:000000000000055c .LASF32
     /tmp/ccBPl5sq.s:2497   .debug_str:0000000000000217 .LASF33
     /tmp/ccBPl5sq.s:2477   .debug_str:00000000000000e4 .LASF34
     /tmp/ccBPl5sq.s:2589   .debug_str:00000000000004a1 .LASF35
     /tmp/ccBPl5sq.s:2495   .debug_str:000000000000020e .LASF36
     /tmp/ccBPl5sq.s:2635   .debug_str:00000000000005c0 .LASF37
     /tmp/ccBPl5sq.s:2537   .debug_str:0000000000000348 .LASF38
     /tmp/ccBPl5sq.s:2657   .debug_str:0000000000000634 .LASF40
     /tmp/ccBPl5sq.s:2577   .debug_str:0000000000000440 .LASF111
     /tmp/ccBPl5sq.s:2663   .debug_str:0000000000000657 .LASF41
     /tmp/ccBPl5sq.s:2681   .debug_str:00000000000006c8 .LASF42
     /tmp/ccBPl5sq.s:2675   .debug_str:0000000000000698 .LASF43
     /tmp/ccBPl5sq.s:2647   .debug_str:00000000000005e9 .LASF44
     /tmp/ccBPl5sq.s:2513   .debug_str:000000000000028d .LASF70
     /tmp/ccBPl5sq.s:2465   .debug_str:000000000000007a .LASF72
     /tmp/ccBPl5sq.s:2559   .debug_str:00000000000003d1 .LASF46
     /tmp/ccBPl5sq.s:2581   .debug_str:0000000000000458 .LASF48
     /tmp/ccBPl5sq.s:2643   .debug_str:00000000000005d9 .LASF49
     /tmp/ccBPl5sq.s:2665   .debug_str:000000000000065c .LASF50
     /tmp/ccBPl5sq.s:2613   .debug_str:000000000000051c .LASF51
     /tmp/ccBPl5sq.s:2561   .debug_str:00000000000003d7 .LASF52
     /tmp/ccBPl5sq.s:2565   .debug_str:00000000000003e9 .LASF53
     /tmp/ccBPl5sq.s:2683   .debug_str:00000000000006d4 .LASF54
     /tmp/ccBPl5sq.s:2521   .debug_str:00000000000002cc .LASF55
     /tmp/ccBPl5sq.s:2455   .debug_str:000000000000001f .LASF56
     /tmp/ccBPl5sq.s:2545   .debug_str:0000000000000375 .LASF57
     /tmp/ccBPl5sq.s:2617   .debug_str:000000000000053e .LASF58
     /tmp/ccBPl5sq.s:2573   .debug_str:000000000000041e .LASF59
     /tmp/ccBPl5sq.s:2607   .debug_str:0000000000000504 .LASF60
     /tmp/ccBPl5sq.s:2629   .debug_str:0000000000000593 .LASF61
     /tmp/ccBPl5sq.s:2575   .debug_str:0000000000000431 .LASF62
     /tmp/ccBPl5sq.s:2451   .debug_str:0000000000000000 .LASF63
     /tmp/ccBPl5sq.s:2669   .debug_str:000000000000066e .LASF64
     /tmp/ccBPl5sq.s:2585   .debug_str:0000000000000474 .LASF65
     /tmp/ccBPl5sq.s:2625   .debug_str:000000000000056f .LASF66
     /tmp/ccBPl5sq.s:2595   .debug_str:00000000000004b5 .LASF67
     /tmp/ccBPl5sq.s:2509   .debug_str:0000000000000268 .LASF68
     /tmp/ccBPl5sq.s:2671   .debug_str:000000000000067d .LASF69
     /tmp/ccBPl5sq.s:2549   .debug_str:0000000000000394 .LASF74
     /tmp/ccBPl5sq.s:2623   .debug_str:0000000000000564 .LASF71
     /tmp/ccBPl5sq.s:2679   .debug_str:00000000000006b2 .LASF73
     /tmp/ccBPl5sq.s:2611   .debug_str:0000000000000514 .LASF75
     /tmp/ccBPl5sq.s:2649   .debug_str:00000000000005f9 .LASF76
     /tmp/ccBPl5sq.s:2583   .debug_str:0000000000000468 .LASF77
     /tmp/ccBPl5sq.s:2507   .debug_str:000000000000025a .LASF78
     /tmp/ccBPl5sq.s:2469   .debug_str:0000000000000092 .LASF80
     /tmp/ccBPl5sq.s:2543   .debug_str:0000000000000360 .LASF79
     /tmp/ccBPl5sq.s:2485   .debug_str:00000000000001b8 .LASF81
GAS LISTING /tmp/ccBPl5sq.s 			page 14


     /tmp/ccBPl5sq.s:2667   .debug_str:0000000000000667 .LASF112
     /tmp/ccBPl5sq.s:2483   .debug_str:00000000000001a7 .LASF113
     /tmp/ccBPl5sq.s:2453   .debug_str:000000000000001a .LASF82
     /tmp/ccBPl5sq.s:2633   .debug_str:00000000000005bb .LASF83
     /tmp/ccBPl5sq.s:2567   .debug_str:0000000000000401 .LASF84
     /tmp/ccBPl5sq.s:2505   .debug_str:0000000000000254 .LASF85
     /tmp/ccBPl5sq.s:2655   .debug_str:000000000000062c .LASF86
     /tmp/ccBPl5sq.s:2473   .debug_str:00000000000000c8 .LASF87
     /tmp/ccBPl5sq.s:2529   .debug_str:0000000000000313 .LASF88
     /tmp/ccBPl5sq.s:2459   .debug_str:0000000000000036 .LASF114
     /tmp/ccBPl5sq.s:2677   .debug_str:000000000000069e .LASF115
     /tmp/ccBPl5sq.s:2475   .debug_str:00000000000000d2 .LASF89
     /tmp/ccBPl5sq.s:2579   .debug_str:0000000000000445 .LASF90
     /tmp/ccBPl5sq.s:2645   .debug_str:00000000000005e1 .LASF91
     /tmp/ccBPl5sq.s:2601   .debug_str:00000000000004d9 .LASF116
     /tmp/ccBPl5sq.s:2615   .debug_str:000000000000052d .LASF92
     /tmp/ccBPl5sq.s:2501   .debug_str:0000000000000231 .LASF93
     /tmp/ccBPl5sq.s:2461   .debug_str:000000000000004e .LASF94
     /tmp/ccBPl5sq.s:2639   .debug_str:00000000000005ce .LASF95
     /tmp/ccBPl5sq.s:2569   .debug_str:0000000000000409 .LASF96
     /tmp/ccBPl5sq.s:2533   .debug_str:000000000000032d .LASF97
     /tmp/ccBPl5sq.s:2571   .debug_str:000000000000040e .LASF98
     /tmp/ccBPl5sq.s:2517   .debug_str:00000000000002a4 .LASF99
     /tmp/ccBPl5sq.s:2523   .debug_str:00000000000002d8 .LASF100
     /tmp/ccBPl5sq.s:2479   .debug_str:00000000000000ed .LASF101
     /tmp/ccBPl5sq.s:2463   .debug_str:0000000000000057 .LASF102
     /tmp/ccBPl5sq.s:2685   .debug_str:00000000000006e1 .LASF117
     /tmp/ccBPl5sq.s:175    .text:0000000000000094 .LFB22
     /tmp/ccBPl5sq.s:309    .text:0000000000000130 .LFE22
     /tmp/ccBPl5sq.s:2605   .debug_str:00000000000004ff .LASF103
     /tmp/ccBPl5sq.s:2263   .debug_loc:0000000000000000 .LLST12
     /tmp/ccBPl5sq.s:253    .text:00000000000000e4 .LBB58
     /tmp/ccBPl5sq.s:272    .text:0000000000000100 .LBE58
     /tmp/ccBPl5sq.s:2278   .debug_loc:0000000000000049 .LLST17
     /tmp/ccBPl5sq.s:266    .text:00000000000000f4 .LVL30
     /tmp/ccBPl5sq.s:187    .text:00000000000000a0 .LBB50
     /tmp/ccBPl5sq.s:194    .text:00000000000000a4 .LBE50
     /tmp/ccBPl5sq.s:2285   .debug_loc:000000000000006c .LLST13
     /tmp/ccBPl5sq.s:206    .text:00000000000000b0 .LBB52
     /tmp/ccBPl5sq.s:216    .text:00000000000000b8 .LBE52
     /tmp/ccBPl5sq.s:2292   .debug_loc:000000000000008f .LLST14
     /tmp/ccBPl5sq.s:2299   .debug_loc:00000000000000b2 .LLST15
     /tmp/ccBPl5sq.s:226    .text:00000000000000c8 .LBB55
     /tmp/ccBPl5sq.s:2441   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccBPl5sq.s:2306   .debug_loc:00000000000000d5 .LLST16
     /tmp/ccBPl5sq.s:10     .text:0000000000000000 .LFB21
     /tmp/ccBPl5sq.s:169    .text:0000000000000094 .LFE21
     /tmp/ccBPl5sq.s:2467   .debug_str:000000000000008d .LASF104
     /tmp/ccBPl5sq.s:2317   .debug_loc:000000000000010b .LLST0
     /tmp/ccBPl5sq.s:2337   .debug_loc:0000000000000168 .LLST1
     /tmp/ccBPl5sq.s:25     .text:0000000000000018 .LBB31
     /tmp/ccBPl5sq.s:34     .text:0000000000000020 .LBE31
     /tmp/ccBPl5sq.s:2357   .debug_loc:00000000000001c5 .LLST2
     /tmp/ccBPl5sq.s:2365   .debug_loc:00000000000001e9 .LLST3
     /tmp/ccBPl5sq.s:49     .text:0000000000000030 .LBB33
     /tmp/ccBPl5sq.s:56     .text:0000000000000034 .LBE33
     /tmp/ccBPl5sq.s:2372   .debug_loc:000000000000020c .LLST4
GAS LISTING /tmp/ccBPl5sq.s 			page 15


     /tmp/ccBPl5sq.s:57     .text:0000000000000034 .LBB35
     /tmp/ccBPl5sq.s:64     .text:0000000000000038 .LBE35
     /tmp/ccBPl5sq.s:2379   .debug_loc:000000000000022f .LLST5
     /tmp/ccBPl5sq.s:87     .text:0000000000000050 .LBB37
     /tmp/ccBPl5sq.s:94     .text:0000000000000054 .LBE37
     /tmp/ccBPl5sq.s:2386   .debug_loc:0000000000000252 .LLST6
     /tmp/ccBPl5sq.s:95     .text:0000000000000054 .LBB39
     /tmp/ccBPl5sq.s:102    .text:0000000000000058 .LBE39
     /tmp/ccBPl5sq.s:2393   .debug_loc:0000000000000275 .LLST7
     /tmp/ccBPl5sq.s:106    .text:000000000000005c .LBB41
     /tmp/ccBPl5sq.s:113    .text:0000000000000060 .LBE41
     /tmp/ccBPl5sq.s:2400   .debug_loc:0000000000000298 .LLST8
     /tmp/ccBPl5sq.s:2407   .debug_loc:00000000000002bb .LLST9
     /tmp/ccBPl5sq.s:140    .text:0000000000000080 .LBB43
     /tmp/ccBPl5sq.s:147    .text:0000000000000084 .LBE43
     /tmp/ccBPl5sq.s:2414   .debug_loc:00000000000002de .LLST10
     /tmp/ccBPl5sq.s:148    .text:0000000000000084 .LBB45
     /tmp/ccBPl5sq.s:155    .text:0000000000000088 .LBE45
     /tmp/ccBPl5sq.s:2421   .debug_loc:0000000000000301 .LLST11
     /tmp/ccBPl5sq.s:159    .text:000000000000008c .LBB47
     /tmp/ccBPl5sq.s:167    .text:0000000000000094 .LBE47
     /tmp/ccBPl5sq.s:2527   .debug_str:000000000000030e .LASF105
     /tmp/ccBPl5sq.s:2591   .debug_str:00000000000004a9 .LASF106
     /tmp/ccBPl5sq.s:181    .text:000000000000009c .LVL20
     /tmp/ccBPl5sq.s:259    .text:00000000000000e8 .LVL29
     /tmp/ccBPl5sq.s:302    .text:0000000000000124 .LVL33
     /tmp/ccBPl5sq.s:255    .text:00000000000000e4 .LVL28
     /tmp/ccBPl5sq.s:185    .text:00000000000000a0 .LVL21
     /tmp/ccBPl5sq.s:192    .text:00000000000000a4 .LVL22
     /tmp/ccBPl5sq.s:205    .text:00000000000000b0 .LVL24
     /tmp/ccBPl5sq.s:211    .text:00000000000000b4 .LVL25
     /tmp/ccBPl5sq.s:225    .text:00000000000000c8 .LVL26
     /tmp/ccBPl5sq.s:231    .text:00000000000000cc .LVL27
     /tmp/ccBPl5sq.s:280    .text:0000000000000110 .LVL31
     /tmp/ccBPl5sq.s:286    .text:0000000000000114 .LVL32
     /tmp/ccBPl5sq.s:32     .text:0000000000000020 .LVL1
     /tmp/ccBPl5sq.s:42     .text:000000000000002c .LVL3
     /tmp/ccBPl5sq.s:68     .text:000000000000003c .LVL7
     /tmp/ccBPl5sq.s:74     .text:0000000000000044 .LVL8
     /tmp/ccBPl5sq.s:39     .text:0000000000000028 .LVL2
     /tmp/ccBPl5sq.s:92     .text:0000000000000054 .LVL10
     /tmp/ccBPl5sq.s:126    .text:0000000000000070 .LVL14
     /tmp/ccBPl5sq.s:132    .text:0000000000000078 .LVL15
     /tmp/ccBPl5sq.s:24     .text:0000000000000018 .LVL0
     /tmp/ccBPl5sq.s:48     .text:0000000000000030 .LVL4
     /tmp/ccBPl5sq.s:54     .text:0000000000000034 .LVL5
     /tmp/ccBPl5sq.s:62     .text:0000000000000038 .LVL6
     /tmp/ccBPl5sq.s:86     .text:0000000000000050 .LVL9
     /tmp/ccBPl5sq.s:100    .text:0000000000000058 .LVL11
     /tmp/ccBPl5sq.s:105    .text:000000000000005c .LVL12
     /tmp/ccBPl5sq.s:111    .text:0000000000000060 .LVL13
     /tmp/ccBPl5sq.s:139    .text:0000000000000080 .LVL16
     /tmp/ccBPl5sq.s:145    .text:0000000000000084 .LVL17
     /tmp/ccBPl5sq.s:153    .text:0000000000000088 .LVL18
     /tmp/ccBPl5sq.s:326    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccBPl5sq.s:233    .text:00000000000000cc .LBE55
     /tmp/ccBPl5sq.s:281    .text:0000000000000110 .LBB59
GAS LISTING /tmp/ccBPl5sq.s 			page 16


     /tmp/ccBPl5sq.s:288    .text:0000000000000114 .LBE59

UNDEFINED SYMBOLS
_ZN3PCB7runningE
_ZN9Scheduler3putEP3PCB
