GAS LISTING /tmp/ccnie854.s 			page 1


   1              		.file	"memoryHandler.c"
   2              		.option nopic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.cfi_sections	.debug_frame
   7              		.align	2
   8              		.globl	initMemory
  10              	initMemory:
  11              	.LFB0:
  12              		.file 1 "src/memoryHandler.c"
   1:src/memoryHandler.c **** //
   2:src/memoryHandler.c **** // Created by os on 4/13/22.
   3:src/memoryHandler.c **** //
   4:src/memoryHandler.c **** 
   5:src/memoryHandler.c **** #include "../h/memoryHandler.h"
   6:src/memoryHandler.c **** 
   7:src/memoryHandler.c **** AllocatedFragment* headAllocated = 0;
   8:src/memoryHandler.c **** FreeFragment* headFree = 0;
   9:src/memoryHandler.c **** int memoryInitiliaized = 0;
  10:src/memoryHandler.c **** int MEM_ALLOC = 1;
  11:src/memoryHandler.c **** int MEM_FREE = 2;
  12:src/memoryHandler.c **** 
  13:src/memoryHandler.c **** void initMemory()
  14:src/memoryHandler.c **** {
  13              		.loc 1 14 1
  14              		.cfi_startproc
  15 0000 130101FF 		addi	sp,sp,-16
  16              		.cfi_def_cfa_offset 16
  17 0004 23348100 		sd	s0,8(sp)
  18              		.cfi_offset 8, -8
  19 0008 13040101 		addi	s0,sp,16
  20              		.cfi_def_cfa 8, 0
  15:src/memoryHandler.c ****     if(!memoryInitiliaized)
  21              		.loc 1 15 5
  22              		.loc 1 15 8 is_stmt 0
  23 000c 97070000 		lw	a5,memoryInitiliaized
  23      83A70700 
  24              		.loc 1 15 7
  25 0014 63800704 		beqz	a5,.L1
  16:src/memoryHandler.c ****         return;
  17:src/memoryHandler.c ****     memoryInitiliaized = 1;
  26              		.loc 1 17 5 is_stmt 1
  27              		.loc 1 17 24 is_stmt 0
  28 0018 93071000 		li	a5,1
  29 001c 17070000 		sw	a5,memoryInitiliaized,a4
  29      2320F700 
  18:src/memoryHandler.c ****     headAllocated = 0;
  30              		.loc 1 18 5 is_stmt 1
  31              		.loc 1 18 19 is_stmt 0
  32 0024 97070000 		sd	zero,headAllocated,a5
  32      23B00700 
  19:src/memoryHandler.c ****     headFree = (struct FreeFragment*)HEAP_START_ADDR;
  33              		.loc 1 19 5 is_stmt 1
  34              		.loc 1 19 14 is_stmt 0
  35 002c 17070000 		ld	a4,HEAP_START_ADDR
  35      03370700 
GAS LISTING /tmp/ccnie854.s 			page 2


  36 0034 97070000 		sd	a4,headFree,a5
  36      23B0E700 
  20:src/memoryHandler.c ****     headFree->next = 0;
  37              		.loc 1 20 5 is_stmt 1
  38              		.loc 1 20 20 is_stmt 0
  39 003c 23340700 		sd	zero,8(a4)
  21:src/memoryHandler.c ****     headFree->size = (size_t)((size_t)HEAP_END_ADDR - (size_t)HEAP_START_ADDR + 1);
  40              		.loc 1 21 5 is_stmt 1
  41              		.loc 1 21 31 is_stmt 0
  42 0040 97070000 		ld	a5,HEAP_END_ADDR
  42      83B70700 
  43              		.loc 1 21 53
  44 0048 B387E740 		sub	a5,a5,a4
  45              		.loc 1 21 22
  46 004c 93871700 		addi	a5,a5,1
  47              		.loc 1 21 20
  48 0050 2330F700 		sd	a5,0(a4)
  49              	.L1:
  22:src/memoryHandler.c **** }
  50              		.loc 1 22 1
  51 0054 03348100 		ld	s0,8(sp)
  52              		.cfi_restore 8
  53              		.cfi_def_cfa 2, 16
  54 0058 13010101 		addi	sp,sp,16
  55              		.cfi_def_cfa_offset 0
  56 005c 67800000 		jr	ra
  57              		.cfi_endproc
  58              	.LFE0:
  60              		.align	2
  61              		.globl	insertNewAllocatedFragment
  63              	insertNewAllocatedFragment:
  64              	.LFB1:
  23:src/memoryHandler.c **** 
  24:src/memoryHandler.c **** void insertNewAllocatedFragment(void* addr, size_t size) {
  65              		.loc 1 24 58 is_stmt 1
  66              		.cfi_startproc
  67              	.LVL0:
  68 0060 130101FE 		addi	sp,sp,-32
  69              		.cfi_def_cfa_offset 32
  70 0064 233C1100 		sd	ra,24(sp)
  71 0068 23388100 		sd	s0,16(sp)
  72 006c 23349100 		sd	s1,8(sp)
  73 0070 23302101 		sd	s2,0(sp)
  74              		.cfi_offset 1, -8
  75              		.cfi_offset 8, -16
  76              		.cfi_offset 9, -24
  77              		.cfi_offset 18, -32
  78 0074 13040102 		addi	s0,sp,32
  79              		.cfi_def_cfa 8, 0
  80 0078 93040500 		mv	s1,a0
  81 007c 13890500 		mv	s2,a1
  25:src/memoryHandler.c **** 
  26:src/memoryHandler.c ****     initMemory();
  82              		.loc 1 26 5
  83 0080 97000000 		call	initMemory
  83      E7800000 
  84              	.LVL1:
GAS LISTING /tmp/ccnie854.s 			page 3


  27:src/memoryHandler.c ****     AllocatedFragment* prev = 0;
  85              		.loc 1 27 5
  28:src/memoryHandler.c ****     AllocatedFragment* after =  headAllocated;
  86              		.loc 1 28 5
  87              		.loc 1 28 24 is_stmt 0
  88 0088 97070000 		ld	a5,headAllocated
  88      83B70700 
  89              	.LVL2:
  29:src/memoryHandler.c ****     while(after != 0) {
  90              		.loc 1 29 5 is_stmt 1
  27:src/memoryHandler.c ****     AllocatedFragment* prev = 0;
  91              		.loc 1 27 24 is_stmt 0
  92 0090 13070000 		li	a4,0
  93              	.LVL3:
  94              	.L5:
  95              		.loc 1 29 10 is_stmt 1
  96 0094 638A0700 		beqz	a5,.L6
  30:src/memoryHandler.c ****         if((void*)after > addr)
  97              		.loc 1 30 9
  98              		.loc 1 30 11 is_stmt 0
  99 0098 63E8F400 		bgtu	a5,s1,.L6
  31:src/memoryHandler.c ****             break;
  32:src/memoryHandler.c **** 
  33:src/memoryHandler.c ****         prev = after;
 100              		.loc 1 33 9 is_stmt 1
 101              	.LVL4:
  34:src/memoryHandler.c ****         after = after->next;
 102              		.loc 1 34 9
  33:src/memoryHandler.c ****         after = after->next;
 103              		.loc 1 33 14 is_stmt 0
 104 009c 13870700 		mv	a4,a5
 105              		.loc 1 34 15
 106 00a0 83B78700 		ld	a5,8(a5)
 107              	.LVL5:
 108 00a4 6FF01FFF 		j	.L5
 109              	.L6:
  35:src/memoryHandler.c ****     }
  36:src/memoryHandler.c **** 
  37:src/memoryHandler.c ****     AllocatedFragment* newAllocated = (AllocatedFragment*)addr;
 110              		.loc 1 37 5 is_stmt 1
 111              	.LVL6:
  38:src/memoryHandler.c ****     newAllocated->next = 0;
 112              		.loc 1 38 5
 113              		.loc 1 38 24 is_stmt 0
 114 00a8 23B40400 		sd	zero,8(s1)
  39:src/memoryHandler.c ****     newAllocated->size = size;
 115              		.loc 1 39 5 is_stmt 1
 116              		.loc 1 39 24 is_stmt 0
 117 00ac 23B02401 		sd	s2,0(s1)
  40:src/memoryHandler.c ****     if(after == 0) {
 118              		.loc 1 40 5 is_stmt 1
 119              		.loc 1 40 7 is_stmt 0
 120 00b0 63840702 		beqz	a5,.L13
  41:src/memoryHandler.c ****         if(prev == 0)
  42:src/memoryHandler.c ****             headAllocated = newAllocated;
  43:src/memoryHandler.c ****         else
  44:src/memoryHandler.c ****             prev->next = newAllocated;
GAS LISTING /tmp/ccnie854.s 			page 4


  45:src/memoryHandler.c ****     }
  46:src/memoryHandler.c ****     else {
  47:src/memoryHandler.c ****         if(prev == 0) {
 121              		.loc 1 47 9 is_stmt 1
 122              		.loc 1 47 11 is_stmt 0
 123 00b4 630E0702 		beqz	a4,.L14
  48:src/memoryHandler.c ****             newAllocated->next = headAllocated;
  49:src/memoryHandler.c ****             headAllocated = newAllocated;
  50:src/memoryHandler.c ****         }
  51:src/memoryHandler.c ****         else {
  52:src/memoryHandler.c ****             newAllocated->next = after;
 124              		.loc 1 52 13 is_stmt 1
 125              		.loc 1 52 32 is_stmt 0
 126 00b8 23B4F400 		sd	a5,8(s1)
  53:src/memoryHandler.c ****             prev->next = newAllocated;
 127              		.loc 1 53 13 is_stmt 1
 128              		.loc 1 53 24 is_stmt 0
 129 00bc 23349700 		sd	s1,8(a4)
 130              	.LVL7:
 131              	.L4:
  54:src/memoryHandler.c ****         }
  55:src/memoryHandler.c ****     }
  56:src/memoryHandler.c **** }
 132              		.loc 1 56 1
 133 00c0 83308101 		ld	ra,24(sp)
 134              		.cfi_remember_state
 135              		.cfi_restore 1
 136 00c4 03340101 		ld	s0,16(sp)
 137              		.cfi_restore 8
 138              		.cfi_def_cfa 2, 32
 139 00c8 83348100 		ld	s1,8(sp)
 140              		.cfi_restore 9
 141              	.LVL8:
 142 00cc 03390100 		ld	s2,0(sp)
 143              		.cfi_restore 18
 144              	.LVL9:
 145 00d0 13010102 		addi	sp,sp,32
 146              		.cfi_def_cfa_offset 0
 147 00d4 67800000 		jr	ra
 148              	.LVL10:
 149              	.L13:
 150              		.cfi_restore_state
  41:src/memoryHandler.c ****             headAllocated = newAllocated;
 151              		.loc 1 41 9 is_stmt 1
  41:src/memoryHandler.c ****             headAllocated = newAllocated;
 152              		.loc 1 41 11 is_stmt 0
 153 00d8 63060700 		beqz	a4,.L15
  44:src/memoryHandler.c ****     }
 154              		.loc 1 44 13 is_stmt 1
  44:src/memoryHandler.c ****     }
 155              		.loc 1 44 24 is_stmt 0
 156 00dc 23349700 		sd	s1,8(a4)
 157 00e0 6FF01FFE 		j	.L4
 158              	.L15:
  42:src/memoryHandler.c ****         else
 159              		.loc 1 42 13 is_stmt 1
  42:src/memoryHandler.c ****         else
GAS LISTING /tmp/ccnie854.s 			page 5


 160              		.loc 1 42 27 is_stmt 0
 161 00e4 97070000 		sd	s1,headAllocated,a5
 161      23B09700 
 162              	.LVL11:
 163 00ec 6FF05FFD 		j	.L4
 164              	.LVL12:
 165              	.L14:
  48:src/memoryHandler.c ****             headAllocated = newAllocated;
 166              		.loc 1 48 13 is_stmt 1
  48:src/memoryHandler.c ****             headAllocated = newAllocated;
 167              		.loc 1 48 32 is_stmt 0
 168 00f0 97070000 		lla	a5,headAllocated
 168      93870700 
 169              	.LVL13:
 170 00f8 03B70700 		ld	a4,0(a5)
 171              	.LVL14:
 172 00fc 23B4E400 		sd	a4,8(s1)
  49:src/memoryHandler.c ****         }
 173              		.loc 1 49 13 is_stmt 1
  49:src/memoryHandler.c ****         }
 174              		.loc 1 49 27 is_stmt 0
 175 0100 23B09700 		sd	s1,0(a5)
 176 0104 6FF0DFFB 		j	.L4
 177              		.cfi_endproc
 178              	.LFE1:
 180              		.align	2
 181              		.globl	tryToAllocateFragment
 183              	tryToAllocateFragment:
 184              	.LFB2:
  57:src/memoryHandler.c **** 
  58:src/memoryHandler.c **** void* tryToAllocateFragment(size_t size) {
 185              		.loc 1 58 42 is_stmt 1
 186              		.cfi_startproc
 187              	.LVL15:
 188 0108 130101FE 		addi	sp,sp,-32
 189              		.cfi_def_cfa_offset 32
 190 010c 233C1100 		sd	ra,24(sp)
 191 0110 23388100 		sd	s0,16(sp)
 192 0114 23349100 		sd	s1,8(sp)
 193 0118 23302101 		sd	s2,0(sp)
 194              		.cfi_offset 1, -8
 195              		.cfi_offset 8, -16
 196              		.cfi_offset 9, -24
 197              		.cfi_offset 18, -32
 198 011c 13040102 		addi	s0,sp,32
 199              		.cfi_def_cfa 8, 0
 200 0120 13090500 		mv	s2,a0
  59:src/memoryHandler.c ****     initMemory();
 201              		.loc 1 59 5
 202 0124 97000000 		call	initMemory
 202      E7800000 
 203              	.LVL16:
  60:src/memoryHandler.c ****     FreeFragment* prev = 0;
 204              		.loc 1 60 5
  61:src/memoryHandler.c ****     FreeFragment* curr = headFree;
 205              		.loc 1 61 5
 206              		.loc 1 61 19 is_stmt 0
GAS LISTING /tmp/ccnie854.s 			page 6


 207 012c 97040000 		ld	s1,headFree
 207      83B40400 
 208              	.LVL17:
  62:src/memoryHandler.c ****     uint64 newSize = size + sizeof(AllocatedFragment);
 209              		.loc 1 62 5 is_stmt 1
 210              		.loc 1 62 12 is_stmt 0
 211 0134 93060901 		addi	a3,s2,16
 212              	.LVL18:
  63:src/memoryHandler.c ****     while(curr != 0) {
 213              		.loc 1 63 5 is_stmt 1
  60:src/memoryHandler.c ****     FreeFragment* curr = headFree;
 214              		.loc 1 60 19 is_stmt 0
 215 0138 13070000 		li	a4,0
 216              		.loc 1 63 10
 217 013c 6F000007 		j	.L17
 218              	.LVL19:
 219              	.L29:
 220              	.LBB2:
 221              	.LBB3:
  64:src/memoryHandler.c **** 
  65:src/memoryHandler.c ****         if(curr->size >= newSize) {
  66:src/memoryHandler.c **** 
  67:src/memoryHandler.c ****             void* oldAddr = curr;
  68:src/memoryHandler.c ****             void* newAddr = ((char*)curr + newSize);
  69:src/memoryHandler.c ****             if(newAddr <= HEAP_END_ADDR) {
  70:src/memoryHandler.c **** 
  71:src/memoryHandler.c ****                 FreeFragment *newFree = (FreeFragment *) newAddr;
 222              		.loc 1 71 17 is_stmt 1
  72:src/memoryHandler.c **** 
  73:src/memoryHandler.c ****                 if (prev != 0)
 223              		.loc 1 73 17
 224              		.loc 1 73 20 is_stmt 0
 225 0140 63020704 		beqz	a4,.L20
  74:src/memoryHandler.c ****                     prev->next = newFree;
 226              		.loc 1 74 21 is_stmt 1
 227              		.loc 1 74 32 is_stmt 0
 228 0144 2334F700 		sd	a5,8(a4)
 229              	.L21:
  75:src/memoryHandler.c ****                 else
  76:src/memoryHandler.c ****                     headFree = newFree;
  77:src/memoryHandler.c **** 
  78:src/memoryHandler.c ****                 newFree->next = curr->next;
 230              		.loc 1 78 17 is_stmt 1
 231              		.loc 1 78 37 is_stmt 0
 232 0148 03B68400 		ld	a2,8(s1)
 233              		.loc 1 78 31
 234 014c 23B4C700 		sd	a2,8(a5)
  79:src/memoryHandler.c ****                 newFree->size = curr->size - newSize;
 235              		.loc 1 79 17 is_stmt 1
 236              		.loc 1 79 37 is_stmt 0
 237 0150 03B60400 		ld	a2,0(s1)
 238              		.loc 1 79 44
 239 0154 B306D640 		sub	a3,a2,a3
 240              	.LVL20:
 241              		.loc 1 79 31
 242 0158 23B0D700 		sd	a3,0(a5)
  80:src/memoryHandler.c **** 
GAS LISTING /tmp/ccnie854.s 			page 7


  81:src/memoryHandler.c ****                 if(newFree->size == 0)
 243              		.loc 1 81 17 is_stmt 1
 244              		.loc 1 81 19 is_stmt 0
 245 015c 63980600 		bnez	a3,.L22
  82:src/memoryHandler.c ****                 {
  83:src/memoryHandler.c ****                     if(prev != 0)
 246              		.loc 1 83 21 is_stmt 1
 247              		.loc 1 83 23 is_stmt 0
 248 0160 63080702 		beqz	a4,.L23
  84:src/memoryHandler.c ****                         prev->next = curr->next;
 249              		.loc 1 84 25 is_stmt 1
 250              		.loc 1 84 42 is_stmt 0
 251 0164 83B78400 		ld	a5,8(s1)
 252              	.LVL21:
 253              		.loc 1 84 36
 254 0168 2334F700 		sd	a5,8(a4)
 255              	.L22:
  85:src/memoryHandler.c ****                     else
  86:src/memoryHandler.c ****                         headFree = 0;
  87:src/memoryHandler.c ****                 }
  88:src/memoryHandler.c **** 
  89:src/memoryHandler.c ****                 insertNewAllocatedFragment(oldAddr, size);
 256              		.loc 1 89 17 is_stmt 1
 257 016c 93050900 		mv	a1,s2
 258 0170 13850400 		mv	a0,s1
 259 0174 97000000 		call	insertNewAllocatedFragment
 259      E7800000 
 260              	.LVL22:
  90:src/memoryHandler.c **** 
  91:src/memoryHandler.c **** 
  92:src/memoryHandler.c **** 
  93:src/memoryHandler.c ****                 uint64 oldA = (uint64) ((char*)oldAddr + sizeof(AllocatedFragment));
 261              		.loc 1 93 17
 262              		.loc 1 93 56 is_stmt 0
 263 017c 93840401 		addi	s1,s1,16
 264              	.LVL23:
  94:src/memoryHandler.c **** 
  95:src/memoryHandler.c ****                 return (void*)oldA;
 265              		.loc 1 95 17 is_stmt 1
 266              		.loc 1 95 24 is_stmt 0
 267 0180 6F00C005 		j	.L16
 268              	.LVL24:
 269              	.L20:
  76:src/memoryHandler.c **** 
 270              		.loc 1 76 21 is_stmt 1
  76:src/memoryHandler.c **** 
 271              		.loc 1 76 30 is_stmt 0
 272 0184 17060000 		sd	a5,headFree,a2
 272      2330F600 
 273 018c 6FF0DFFB 		j	.L21
 274              	.LVL25:
 275              	.L23:
  86:src/memoryHandler.c ****                 }
 276              		.loc 1 86 25 is_stmt 1
  86:src/memoryHandler.c ****                 }
 277              		.loc 1 86 34 is_stmt 0
 278 0190 97070000 		sd	zero,headFree,a5
GAS LISTING /tmp/ccnie854.s 			page 8


 278      23B00700 
 279              	.LVL26:
 280 0198 6FF05FFD 		j	.L22
 281              	.LVL27:
 282              	.L25:
 283              	.LBE3:
  96:src/memoryHandler.c **** 
  97:src/memoryHandler.c ****                 //__asm__ volatile("mv a0,%0" : : "r"(oldA));
  98:src/memoryHandler.c **** 
  99:src/memoryHandler.c ****                 //return;
 100:src/memoryHandler.c ****             }
 101:src/memoryHandler.c ****             else {
 102:src/memoryHandler.c ****                 if(prev != 0)
 103:src/memoryHandler.c ****                 {
 104:src/memoryHandler.c ****                     prev->next = 0;
 105:src/memoryHandler.c ****                 }
 106:src/memoryHandler.c ****                 else
 107:src/memoryHandler.c ****                 {
 108:src/memoryHandler.c ****                     headFree = 0;
 284              		.loc 1 108 21 is_stmt 1
 285              		.loc 1 108 30 is_stmt 0
 286 019c 97070000 		sd	zero,headFree,a5
 286      23B00700 
 287              	.LVL28:
 288              	.L18:
 289              	.LBE2:
 109:src/memoryHandler.c ****                 }
 110:src/memoryHandler.c ****             }
 111:src/memoryHandler.c ****         }
 112:src/memoryHandler.c ****         prev = curr;
 290              		.loc 1 112 9 is_stmt 1
 113:src/memoryHandler.c ****         curr = curr->next;
 291              		.loc 1 113 9
 112:src/memoryHandler.c ****         curr = curr->next;
 292              		.loc 1 112 14 is_stmt 0
 293 01a4 13870400 		mv	a4,s1
 294              		.loc 1 113 14
 295 01a8 83B48400 		ld	s1,8(s1)
 296              	.LVL29:
 297              	.L17:
  63:src/memoryHandler.c **** 
 298              		.loc 1 63 10 is_stmt 1
 299 01ac 63840402 		beqz	s1,.L28
  65:src/memoryHandler.c **** 
 300              		.loc 1 65 9
  65:src/memoryHandler.c **** 
 301              		.loc 1 65 16 is_stmt 0
 302 01b0 83B70400 		ld	a5,0(s1)
  65:src/memoryHandler.c **** 
 303              		.loc 1 65 11
 304 01b4 E3E8D7FE 		bltu	a5,a3,.L18
 305              	.LBB4:
  67:src/memoryHandler.c ****             void* newAddr = ((char*)curr + newSize);
 306              		.loc 1 67 13 is_stmt 1
 307              	.LVL30:
  68:src/memoryHandler.c ****             if(newAddr <= HEAP_END_ADDR) {
 308              		.loc 1 68 13
GAS LISTING /tmp/ccnie854.s 			page 9


  68:src/memoryHandler.c ****             if(newAddr <= HEAP_END_ADDR) {
 309              		.loc 1 68 19 is_stmt 0
 310 01b8 B387D400 		add	a5,s1,a3
 311              	.LVL31:
  69:src/memoryHandler.c **** 
 312              		.loc 1 69 13 is_stmt 1
  69:src/memoryHandler.c **** 
 313              		.loc 1 69 24 is_stmt 0
 314 01bc 17060000 		ld	a2,HEAP_END_ADDR
 314      03360600 
  69:src/memoryHandler.c **** 
 315              		.loc 1 69 15
 316 01c4 E37EF6F6 		bgeu	a2,a5,.L29
 102:src/memoryHandler.c ****                 {
 317              		.loc 1 102 17 is_stmt 1
 102:src/memoryHandler.c ****                 {
 318              		.loc 1 102 19 is_stmt 0
 319 01c8 E30A07FC 		beqz	a4,.L25
 104:src/memoryHandler.c ****                 }
 320              		.loc 1 104 21 is_stmt 1
 104:src/memoryHandler.c ****                 }
 321              		.loc 1 104 32 is_stmt 0
 322 01cc 23340700 		sd	zero,8(a4)
 323 01d0 6FF05FFD 		j	.L18
 324              	.LVL32:
 325              	.L28:
 326              	.LBE4:
 114:src/memoryHandler.c ****     }
 115:src/memoryHandler.c **** 
 116:src/memoryHandler.c ****     uint64 x = 0;
 327              		.loc 1 116 5 is_stmt 1
 117:src/memoryHandler.c ****     __asm__ volatile("mv a0,%0" : : "r"(x));
 328              		.loc 1 117 5
 329 01d4 93070000 		li	a5,0
 330              	#APP
 331              	# 117 "src/memoryHandler.c" 1
 118              	
 119:src/memoryHandler.c ****     return 0;
 332              		mv a0,a5
 333              	# 0 "" 2
 334              		.loc 1 119 5
 335              	.LVL33:
 336              	#NO_APP
 337              	.L16:
 120:src/memoryHandler.c **** }
 338              		.loc 1 120 1 is_stmt 0
 339 01dc 13850400 		mv	a0,s1
 340 01e0 83308101 		ld	ra,24(sp)
 341              		.cfi_restore 1
 342 01e4 03340101 		ld	s0,16(sp)
 343              		.cfi_restore 8
 344              		.cfi_def_cfa 2, 32
 345 01e8 83348100 		ld	s1,8(sp)
 346              		.cfi_restore 9
 347 01ec 03390100 		ld	s2,0(sp)
 348              		.cfi_restore 18
 349              	.LVL34:
GAS LISTING /tmp/ccnie854.s 			page 10


 350 01f0 13010102 		addi	sp,sp,32
 351              		.cfi_def_cfa_offset 0
 352 01f4 67800000 		jr	ra
 353              		.cfi_endproc
 354              	.LFE2:
 356              		.align	2
 357              		.globl	insertNewFreeSegment
 359              	insertNewFreeSegment:
 360              	.LFB3:
 121:src/memoryHandler.c **** 
 122:src/memoryHandler.c **** void insertNewFreeSegment(void* addr, size_t size)
 123:src/memoryHandler.c **** {
 361              		.loc 1 123 1 is_stmt 1
 362              		.cfi_startproc
 363              	.LVL35:
 364 01f8 130101FE 		addi	sp,sp,-32
 365              		.cfi_def_cfa_offset 32
 366 01fc 233C1100 		sd	ra,24(sp)
 367 0200 23388100 		sd	s0,16(sp)
 368 0204 23349100 		sd	s1,8(sp)
 369 0208 23302101 		sd	s2,0(sp)
 370              		.cfi_offset 1, -8
 371              		.cfi_offset 8, -16
 372              		.cfi_offset 9, -24
 373              		.cfi_offset 18, -32
 374 020c 13040102 		addi	s0,sp,32
 375              		.cfi_def_cfa 8, 0
 376 0210 93040500 		mv	s1,a0
 377 0214 13890500 		mv	s2,a1
 124:src/memoryHandler.c ****     initMemory();
 378              		.loc 1 124 5
 379 0218 97000000 		call	initMemory
 379      E7800000 
 380              	.LVL36:
 125:src/memoryHandler.c ****     FreeFragment* prev = 0;
 381              		.loc 1 125 5
 126:src/memoryHandler.c ****     FreeFragment* curr = headFree;
 382              		.loc 1 126 5
 383              		.loc 1 126 19 is_stmt 0
 384 0220 97070000 		ld	a5,headFree
 384      83B70700 
 385              	.LVL37:
 127:src/memoryHandler.c ****     FreeFragment* newSegment = (FreeFragment*) addr;
 386              		.loc 1 127 5 is_stmt 1
 128:src/memoryHandler.c ****     newSegment->size = size;
 387              		.loc 1 128 5
 388              		.loc 1 128 22 is_stmt 0
 389 0228 23B02401 		sd	s2,0(s1)
 129:src/memoryHandler.c ****     newSegment->next = 0;
 390              		.loc 1 129 5 is_stmt 1
 391              		.loc 1 129 22 is_stmt 0
 392 022c 23B40400 		sd	zero,8(s1)
 130:src/memoryHandler.c ****     while(curr != 0)
 393              		.loc 1 130 5 is_stmt 1
 125:src/memoryHandler.c ****     FreeFragment* curr = headFree;
 394              		.loc 1 125 19 is_stmt 0
 395 0230 13070000 		li	a4,0
GAS LISTING /tmp/ccnie854.s 			page 11


 396              	.LVL38:
 397              	.L31:
 398              		.loc 1 130 10 is_stmt 1
 399 0234 638C0700 		beqz	a5,.L33
 131:src/memoryHandler.c ****     {
 132:src/memoryHandler.c ****         if((void*)curr > addr)
 400              		.loc 1 132 9
 401              		.loc 1 132 11 is_stmt 0
 402 0238 63E8F400 		bgtu	a5,s1,.L38
 133:src/memoryHandler.c ****         {
 134:src/memoryHandler.c ****             newSegment->next = curr;
 135:src/memoryHandler.c ****             break;
 136:src/memoryHandler.c ****         }
 137:src/memoryHandler.c **** 
 138:src/memoryHandler.c ****         prev = curr;
 403              		.loc 1 138 9 is_stmt 1
 404              	.LVL39:
 139:src/memoryHandler.c ****         curr = curr->next;
 405              		.loc 1 139 9
 138:src/memoryHandler.c ****         curr = curr->next;
 406              		.loc 1 138 14 is_stmt 0
 407 023c 13870700 		mv	a4,a5
 408              		.loc 1 139 14
 409 0240 83B78700 		ld	a5,8(a5)
 410              	.LVL40:
 411 0244 6FF01FFF 		j	.L31
 412              	.L38:
 134:src/memoryHandler.c ****             break;
 413              		.loc 1 134 13 is_stmt 1
 134:src/memoryHandler.c ****             break;
 414              		.loc 1 134 30 is_stmt 0
 415 0248 23B4F400 		sd	a5,8(s1)
 135:src/memoryHandler.c ****         }
 416              		.loc 1 135 13 is_stmt 1
 417              	.L33:
 140:src/memoryHandler.c ****     }
 141:src/memoryHandler.c **** 
 142:src/memoryHandler.c ****     if(prev == 0)
 418              		.loc 1 142 5
 419              		.loc 1 142 7 is_stmt 0
 420 024c 63000702 		beqz	a4,.L39
 143:src/memoryHandler.c ****         headFree = newSegment;
 144:src/memoryHandler.c ****     else
 145:src/memoryHandler.c ****         prev->next = newSegment;
 421              		.loc 1 145 9 is_stmt 1
 422              		.loc 1 145 20 is_stmt 0
 423 0250 23349700 		sd	s1,8(a4)
 424              	.LVL41:
 425              	.L30:
 146:src/memoryHandler.c **** }
 426              		.loc 1 146 1
 427 0254 83308101 		ld	ra,24(sp)
 428              		.cfi_remember_state
 429              		.cfi_restore 1
 430 0258 03340101 		ld	s0,16(sp)
 431              		.cfi_restore 8
 432              		.cfi_def_cfa 2, 32
GAS LISTING /tmp/ccnie854.s 			page 12


 433 025c 83348100 		ld	s1,8(sp)
 434              		.cfi_restore 9
 435              	.LVL42:
 436 0260 03390100 		ld	s2,0(sp)
 437              		.cfi_restore 18
 438              	.LVL43:
 439 0264 13010102 		addi	sp,sp,32
 440              		.cfi_def_cfa_offset 0
 441 0268 67800000 		jr	ra
 442              	.LVL44:
 443              	.L39:
 444              		.cfi_restore_state
 143:src/memoryHandler.c ****         headFree = newSegment;
 445              		.loc 1 143 9 is_stmt 1
 143:src/memoryHandler.c ****         headFree = newSegment;
 446              		.loc 1 143 18 is_stmt 0
 447 026c 97070000 		sd	s1,headFree,a5
 447      23B09700 
 448              	.LVL45:
 449 0274 6FF01FFE 		j	.L30
 450              		.cfi_endproc
 451              	.LFE3:
 453              		.align	2
 454              		.globl	tryToFreeSegment
 456              	tryToFreeSegment:
 457              	.LFB4:
 147:src/memoryHandler.c **** 
 148:src/memoryHandler.c **** void tryToFreeSegment(void* addr)
 149:src/memoryHandler.c **** {
 458              		.loc 1 149 1 is_stmt 1
 459              		.cfi_startproc
 460              	.LVL46:
 461 0278 130101FE 		addi	sp,sp,-32
 462              		.cfi_def_cfa_offset 32
 463 027c 233C1100 		sd	ra,24(sp)
 464 0280 23388100 		sd	s0,16(sp)
 465 0284 23349100 		sd	s1,8(sp)
 466 0288 23302101 		sd	s2,0(sp)
 467              		.cfi_offset 1, -8
 468              		.cfi_offset 8, -16
 469              		.cfi_offset 9, -24
 470              		.cfi_offset 18, -32
 471 028c 13040102 		addi	s0,sp,32
 472              		.cfi_def_cfa 8, 0
 473 0290 13090500 		mv	s2,a0
 150:src/memoryHandler.c ****     initMemory();
 474              		.loc 1 150 5
 475 0294 97000000 		call	initMemory
 475      E7800000 
 476              	.LVL47:
 151:src/memoryHandler.c ****     AllocatedFragment* prev = 0;
 477              		.loc 1 151 5
 152:src/memoryHandler.c ****     AllocatedFragment* curr = headAllocated;
 478              		.loc 1 152 5
 479              		.loc 1 152 24 is_stmt 0
 480 029c 97040000 		ld	s1,headAllocated
 480      83B40400 
GAS LISTING /tmp/ccnie854.s 			page 13


 481              	.LVL48:
 153:src/memoryHandler.c ****     int found = 0;
 482              		.loc 1 153 5 is_stmt 1
 154:src/memoryHandler.c ****     while(curr != 0 && !found)
 483              		.loc 1 154 5
 153:src/memoryHandler.c ****     int found = 0;
 484              		.loc 1 153 9 is_stmt 0
 485 02a4 93060000 		li	a3,0
 151:src/memoryHandler.c ****     AllocatedFragment* curr = headAllocated;
 486              		.loc 1 151 24
 487 02a8 13070000 		li	a4,0
 488              		.loc 1 154 10
 489 02ac 6F000003 		j	.L41
 490              	.LVL49:
 491              	.L43:
 155:src/memoryHandler.c ****     {
 156:src/memoryHandler.c ****         if(addr == (void*)((char*)curr + sizeof(AllocatedFragment)))
 157:src/memoryHandler.c ****         {
 158:src/memoryHandler.c ****             if(prev != 0) {
 159:src/memoryHandler.c ****                 prev->next = curr->next;
 160:src/memoryHandler.c ****             }
 161:src/memoryHandler.c ****             else {
 162:src/memoryHandler.c ****                 headAllocated = curr->next;
 492              		.loc 1 162 17 is_stmt 1
 493              		.loc 1 162 37 is_stmt 0
 494 02b0 83B78400 		ld	a5,8(s1)
 495              		.loc 1 162 31
 496 02b4 17070000 		sd	a5,headAllocated,a4
 496      2330F700 
 497              	.LVL50:
 498              	.L44:
 163:src/memoryHandler.c ****             }
 164:src/memoryHandler.c **** 
 165:src/memoryHandler.c ****             insertNewFreeSegment((void*)curr, curr->size + sizeof(AllocatedFragment));
 499              		.loc 1 165 13 is_stmt 1
 500              		.loc 1 165 51 is_stmt 0
 501 02bc 83B50400 		ld	a1,0(s1)
 502              		.loc 1 165 13
 503 02c0 93850501 		addi	a1,a1,16
 504 02c4 13850400 		mv	a0,s1
 505 02c8 97000000 		call	insertNewFreeSegment
 505      E7800000 
 506              	.LVL51:
 166:src/memoryHandler.c **** 
 167:src/memoryHandler.c ****             found = 1;
 507              		.loc 1 167 13 is_stmt 1
 508              		.loc 1 167 19 is_stmt 0
 509 02d0 93061000 		li	a3,1
 510              	.LVL52:
 511              	.L42:
 168:src/memoryHandler.c ****         }
 169:src/memoryHandler.c **** 
 170:src/memoryHandler.c ****         prev = curr;
 512              		.loc 1 170 9 is_stmt 1
 171:src/memoryHandler.c ****         curr = curr->next;
 513              		.loc 1 171 9
 170:src/memoryHandler.c ****         curr = curr->next;
GAS LISTING /tmp/ccnie854.s 			page 14


 514              		.loc 1 170 14 is_stmt 0
 515 02d4 13870400 		mv	a4,s1
 516              		.loc 1 171 14
 517 02d8 83B48400 		ld	s1,8(s1)
 518              	.LVL53:
 519              	.L41:
 154:src/memoryHandler.c ****     {
 520              		.loc 1 154 10 is_stmt 1
 521 02dc 63800402 		beqz	s1,.L45
 154:src/memoryHandler.c ****     {
 522              		.loc 1 154 21 is_stmt 0 discriminator 1
 523 02e0 639E0600 		bnez	a3,.L45
 156:src/memoryHandler.c ****         {
 524              		.loc 1 156 9 is_stmt 1
 156:src/memoryHandler.c ****         {
 525              		.loc 1 156 20 is_stmt 0
 526 02e4 93870401 		addi	a5,s1,16
 156:src/memoryHandler.c ****         {
 527              		.loc 1 156 11
 528 02e8 E39627FF 		bne	a5,s2,.L42
 158:src/memoryHandler.c ****                 prev->next = curr->next;
 529              		.loc 1 158 13 is_stmt 1
 158:src/memoryHandler.c ****                 prev->next = curr->next;
 530              		.loc 1 158 15 is_stmt 0
 531 02ec E30207FC 		beqz	a4,.L43
 159:src/memoryHandler.c ****             }
 532              		.loc 1 159 17 is_stmt 1
 159:src/memoryHandler.c ****             }
 533              		.loc 1 159 34 is_stmt 0
 534 02f0 83B78400 		ld	a5,8(s1)
 159:src/memoryHandler.c ****             }
 535              		.loc 1 159 28
 536 02f4 2334F700 		sd	a5,8(a4)
 537 02f8 6FF05FFC 		j	.L44
 538              	.L45:
 172:src/memoryHandler.c ****     }
 173:src/memoryHandler.c **** 
 174:src/memoryHandler.c ****     if(found) {
 539              		.loc 1 174 5 is_stmt 1
 540              		.loc 1 174 7 is_stmt 0
 541 02fc 63800602 		beqz	a3,.L47
 175:src/memoryHandler.c ****         __asm__ volatile("li a0, 0");
 542              		.loc 1 175 9 is_stmt 1
 543              	#APP
 544              	# 175 "src/memoryHandler.c" 1
 176              	    }
 545              		li a0, 0
 546              	# 0 "" 2
 547              	#NO_APP
 548              	.L40:
 177:src/memoryHandler.c ****     else {
 178:src/memoryHandler.c ****         __asm__ volatile("li a0, 1");
 179:src/memoryHandler.c ****     }
 180:src/memoryHandler.c **** }
 549              		.loc 1 180 1 is_stmt 0
 550 0304 83308101 		ld	ra,24(sp)
 551              		.cfi_remember_state
GAS LISTING /tmp/ccnie854.s 			page 15


 552              		.cfi_restore 1
 553 0308 03340101 		ld	s0,16(sp)
 554              		.cfi_restore 8
 555              		.cfi_def_cfa 2, 32
 556 030c 83348100 		ld	s1,8(sp)
 557              		.cfi_restore 9
 558              	.LVL54:
 559 0310 03390100 		ld	s2,0(sp)
 560              		.cfi_restore 18
 561              	.LVL55:
 562 0314 13010102 		addi	sp,sp,32
 563              		.cfi_def_cfa_offset 0
 564 0318 67800000 		jr	ra
 565              	.LVL56:
 566              	.L47:
 567              		.cfi_restore_state
 178:src/memoryHandler.c ****     }
 568              		.loc 1 178 9 is_stmt 1
 569              	#APP
 570              	# 178 "src/memoryHandler.c" 1
 571              		li a0, 1
 572              	# 0 "" 2
 573              		.loc 1 180 1 is_stmt 0
 574              	#NO_APP
 575 0320 6FF05FFE 		j	.L40
 576              		.cfi_endproc
 577              	.LFE4:
 579              		.globl	MEM_FREE
 580              		.globl	MEM_ALLOC
 581              		.globl	memoryInitiliaized
 582              		.globl	headFree
 583              		.globl	headAllocated
 584              		.section	.sbss,"aw",@nobits
 585              		.align	3
 588              	memoryInitiliaized:
 589 0000 00000000 		.zero	4
 590 0004 00000000 		.zero	4
 593              	headFree:
 594 0008 00000000 		.zero	8
 594      00000000 
 597              	headAllocated:
 598 0010 00000000 		.zero	8
 598      00000000 
 599              		.section	.sdata,"aw"
 600              		.align	2
 603              	MEM_FREE:
 604 0000 02000000 		.word	2
 607              	MEM_ALLOC:
 608 0004 01000000 		.word	1
 609              		.text
 610              	.Letext0:
 611              		.file 2 "src/../h/../lib/hw.h"
 612              		.file 3 "src/../h/memoryHandler.h"
GAS LISTING /tmp/ccnie854.s 			page 16


DEFINED SYMBOLS
                            *ABS*:0000000000000000 memoryHandler.c
     /tmp/ccnie854.s:10     .text:0000000000000000 initMemory
     /tmp/ccnie854.s:14     .text:0000000000000000 .L0 
     /tmp/ccnie854.s:15     .text:0000000000000000 .L0 
     /tmp/ccnie854.s:16     .text:0000000000000004 .L0 
     /tmp/ccnie854.s:18     .text:0000000000000008 .L0 
     /tmp/ccnie854.s:20     .text:000000000000000c .L0 
     /tmp/ccnie854.s:22     .text:000000000000000c .L0 
     /tmp/ccnie854.s:588    .sbss:0000000000000000 memoryInitiliaized
     /tmp/ccnie854.s:23     .text:000000000000000c .L0 
     /tmp/ccnie854.s:25     .text:0000000000000014 .L0 
     /tmp/ccnie854.s:27     .text:0000000000000018 .L0 
     /tmp/ccnie854.s:28     .text:0000000000000018 .L0 
     /tmp/ccnie854.s:31     .text:0000000000000024 .L0 
     /tmp/ccnie854.s:597    .sbss:0000000000000010 headAllocated
     /tmp/ccnie854.s:32     .text:0000000000000024 .L0 
     /tmp/ccnie854.s:34     .text:000000000000002c .L0 
     /tmp/ccnie854.s:35     .text:000000000000002c .L0 
     /tmp/ccnie854.s:593    .sbss:0000000000000008 headFree
     /tmp/ccnie854.s:38     .text:000000000000003c .L0 
     /tmp/ccnie854.s:39     .text:000000000000003c .L0 
     /tmp/ccnie854.s:41     .text:0000000000000040 .L0 
     /tmp/ccnie854.s:42     .text:0000000000000040 .L0 
     /tmp/ccnie854.s:44     .text:0000000000000048 .L0 
     /tmp/ccnie854.s:46     .text:000000000000004c .L0 
     /tmp/ccnie854.s:48     .text:0000000000000050 .L0 
     /tmp/ccnie854.s:51     .text:0000000000000054 .L0 
     /tmp/ccnie854.s:52     .text:0000000000000058 .L0 
     /tmp/ccnie854.s:53     .text:0000000000000058 .L0 
     /tmp/ccnie854.s:55     .text:000000000000005c .L0 
     /tmp/ccnie854.s:57     .text:0000000000000060 .L0 
     /tmp/ccnie854.s:63     .text:0000000000000060 insertNewAllocatedFragment
     /tmp/ccnie854.s:66     .text:0000000000000060 .L0 
     /tmp/ccnie854.s:68     .text:0000000000000060 .L0 
     /tmp/ccnie854.s:69     .text:0000000000000064 .L0 
     /tmp/ccnie854.s:74     .text:0000000000000074 .L0 
     /tmp/ccnie854.s:75     .text:0000000000000074 .L0 
     /tmp/ccnie854.s:76     .text:0000000000000074 .L0 
     /tmp/ccnie854.s:77     .text:0000000000000074 .L0 
     /tmp/ccnie854.s:79     .text:0000000000000078 .L0 
     /tmp/ccnie854.s:83     .text:0000000000000080 .L0 
     /tmp/ccnie854.s:86     .text:0000000000000088 .L0 
     /tmp/ccnie854.s:87     .text:0000000000000088 .L0 
     /tmp/ccnie854.s:88     .text:0000000000000088 .L0 
     /tmp/ccnie854.s:91     .text:0000000000000090 .L0 
     /tmp/ccnie854.s:92     .text:0000000000000090 .L0 
     /tmp/ccnie854.s:96     .text:0000000000000094 .L0 
     /tmp/ccnie854.s:98     .text:0000000000000098 .L0 
     /tmp/ccnie854.s:99     .text:0000000000000098 .L0 
     /tmp/ccnie854.s:102    .text:000000000000009c .L0 
     /tmp/ccnie854.s:103    .text:000000000000009c .L0 
     /tmp/ccnie854.s:104    .text:000000000000009c .L0 
     /tmp/ccnie854.s:106    .text:00000000000000a0 .L0 
     /tmp/ccnie854.s:112    .text:00000000000000a8 .L0 
     /tmp/ccnie854.s:113    .text:00000000000000a8 .L0 
     /tmp/ccnie854.s:114    .text:00000000000000a8 .L0 
GAS LISTING /tmp/ccnie854.s 			page 17


     /tmp/ccnie854.s:116    .text:00000000000000ac .L0 
     /tmp/ccnie854.s:117    .text:00000000000000ac .L0 
     /tmp/ccnie854.s:119    .text:00000000000000b0 .L0 
     /tmp/ccnie854.s:120    .text:00000000000000b0 .L0 
     /tmp/ccnie854.s:122    .text:00000000000000b4 .L0 
     /tmp/ccnie854.s:123    .text:00000000000000b4 .L0 
     /tmp/ccnie854.s:125    .text:00000000000000b8 .L0 
     /tmp/ccnie854.s:126    .text:00000000000000b8 .L0 
     /tmp/ccnie854.s:128    .text:00000000000000bc .L0 
     /tmp/ccnie854.s:129    .text:00000000000000bc .L0 
     /tmp/ccnie854.s:133    .text:00000000000000c0 .L0 
     /tmp/ccnie854.s:134    .text:00000000000000c4 .L0 
     /tmp/ccnie854.s:135    .text:00000000000000c4 .L0 
     /tmp/ccnie854.s:137    .text:00000000000000c8 .L0 
     /tmp/ccnie854.s:138    .text:00000000000000c8 .L0 
     /tmp/ccnie854.s:140    .text:00000000000000cc .L0 
     /tmp/ccnie854.s:143    .text:00000000000000d0 .L0 
     /tmp/ccnie854.s:146    .text:00000000000000d4 .L0 
     /tmp/ccnie854.s:150    .text:00000000000000d8 .L0 
     /tmp/ccnie854.s:152    .text:00000000000000d8 .L0 
     /tmp/ccnie854.s:153    .text:00000000000000d8 .L0 
     /tmp/ccnie854.s:155    .text:00000000000000dc .L0 
     /tmp/ccnie854.s:156    .text:00000000000000dc .L0 
     /tmp/ccnie854.s:160    .text:00000000000000e4 .L0 
     /tmp/ccnie854.s:161    .text:00000000000000e4 .L0 
     /tmp/ccnie854.s:167    .text:00000000000000f0 .L0 
     /tmp/ccnie854.s:168    .text:00000000000000f0 .L0 
     /tmp/ccnie854.s:174    .text:0000000000000100 .L0 
     /tmp/ccnie854.s:175    .text:0000000000000100 .L0 
     /tmp/ccnie854.s:177    .text:0000000000000108 .L0 
     /tmp/ccnie854.s:183    .text:0000000000000108 tryToAllocateFragment
     /tmp/ccnie854.s:186    .text:0000000000000108 .L0 
     /tmp/ccnie854.s:188    .text:0000000000000108 .L0 
     /tmp/ccnie854.s:189    .text:000000000000010c .L0 
     /tmp/ccnie854.s:194    .text:000000000000011c .L0 
     /tmp/ccnie854.s:195    .text:000000000000011c .L0 
     /tmp/ccnie854.s:196    .text:000000000000011c .L0 
     /tmp/ccnie854.s:197    .text:000000000000011c .L0 
     /tmp/ccnie854.s:199    .text:0000000000000120 .L0 
     /tmp/ccnie854.s:202    .text:0000000000000124 .L0 
     /tmp/ccnie854.s:205    .text:000000000000012c .L0 
     /tmp/ccnie854.s:206    .text:000000000000012c .L0 
     /tmp/ccnie854.s:207    .text:000000000000012c .L0 
     /tmp/ccnie854.s:210    .text:0000000000000134 .L0 
     /tmp/ccnie854.s:211    .text:0000000000000134 .L0 
     /tmp/ccnie854.s:214    .text:0000000000000138 .L0 
     /tmp/ccnie854.s:215    .text:0000000000000138 .L0 
     /tmp/ccnie854.s:217    .text:000000000000013c .L0 
     /tmp/ccnie854.s:223    .text:0000000000000140 .L0 
     /tmp/ccnie854.s:224    .text:0000000000000140 .L0 
     /tmp/ccnie854.s:225    .text:0000000000000140 .L0 
     /tmp/ccnie854.s:227    .text:0000000000000144 .L0 
     /tmp/ccnie854.s:228    .text:0000000000000144 .L0 
     /tmp/ccnie854.s:231    .text:0000000000000148 .L0 
     /tmp/ccnie854.s:232    .text:0000000000000148 .L0 
     /tmp/ccnie854.s:234    .text:000000000000014c .L0 
     /tmp/ccnie854.s:236    .text:0000000000000150 .L0 
GAS LISTING /tmp/ccnie854.s 			page 18


     /tmp/ccnie854.s:237    .text:0000000000000150 .L0 
     /tmp/ccnie854.s:239    .text:0000000000000154 .L0 
     /tmp/ccnie854.s:242    .text:0000000000000158 .L0 
     /tmp/ccnie854.s:244    .text:000000000000015c .L0 
     /tmp/ccnie854.s:245    .text:000000000000015c .L0 
     /tmp/ccnie854.s:247    .text:0000000000000160 .L0 
     /tmp/ccnie854.s:248    .text:0000000000000160 .L0 
     /tmp/ccnie854.s:250    .text:0000000000000164 .L0 
     /tmp/ccnie854.s:251    .text:0000000000000164 .L0 
     /tmp/ccnie854.s:254    .text:0000000000000168 .L0 
     /tmp/ccnie854.s:257    .text:000000000000016c .L0 
     /tmp/ccnie854.s:262    .text:000000000000017c .L0 
     /tmp/ccnie854.s:263    .text:000000000000017c .L0 
     /tmp/ccnie854.s:266    .text:0000000000000180 .L0 
     /tmp/ccnie854.s:267    .text:0000000000000180 .L0 
     /tmp/ccnie854.s:271    .text:0000000000000184 .L0 
     /tmp/ccnie854.s:272    .text:0000000000000184 .L0 
     /tmp/ccnie854.s:277    .text:0000000000000190 .L0 
     /tmp/ccnie854.s:278    .text:0000000000000190 .L0 
     /tmp/ccnie854.s:285    .text:000000000000019c .L0 
     /tmp/ccnie854.s:286    .text:000000000000019c .L0 
     /tmp/ccnie854.s:291    .text:00000000000001a4 .L0 
     /tmp/ccnie854.s:292    .text:00000000000001a4 .L0 
     /tmp/ccnie854.s:293    .text:00000000000001a4 .L0 
     /tmp/ccnie854.s:295    .text:00000000000001a8 .L0 
     /tmp/ccnie854.s:299    .text:00000000000001ac .L0 
     /tmp/ccnie854.s:301    .text:00000000000001b0 .L0 
     /tmp/ccnie854.s:302    .text:00000000000001b0 .L0 
     /tmp/ccnie854.s:304    .text:00000000000001b4 .L0 
     /tmp/ccnie854.s:308    .text:00000000000001b8 .L0 
     /tmp/ccnie854.s:309    .text:00000000000001b8 .L0 
     /tmp/ccnie854.s:310    .text:00000000000001b8 .L0 
     /tmp/ccnie854.s:313    .text:00000000000001bc .L0 
     /tmp/ccnie854.s:314    .text:00000000000001bc .L0 
     /tmp/ccnie854.s:316    .text:00000000000001c4 .L0 
     /tmp/ccnie854.s:318    .text:00000000000001c8 .L0 
     /tmp/ccnie854.s:319    .text:00000000000001c8 .L0 
     /tmp/ccnie854.s:321    .text:00000000000001cc .L0 
     /tmp/ccnie854.s:322    .text:00000000000001cc .L0 
     /tmp/ccnie854.s:328    .text:00000000000001d4 .L0 
     /tmp/ccnie854.s:329    .text:00000000000001d4 .L0 
     /tmp/ccnie854.s:338    .text:00000000000001dc .L0 
     /tmp/ccnie854.s:339    .text:00000000000001dc .L0 
     /tmp/ccnie854.s:341    .text:00000000000001e4 .L0 
     /tmp/ccnie854.s:343    .text:00000000000001e8 .L0 
     /tmp/ccnie854.s:344    .text:00000000000001e8 .L0 
     /tmp/ccnie854.s:346    .text:00000000000001ec .L0 
     /tmp/ccnie854.s:348    .text:00000000000001f0 .L0 
     /tmp/ccnie854.s:351    .text:00000000000001f4 .L0 
     /tmp/ccnie854.s:353    .text:00000000000001f8 .L0 
     /tmp/ccnie854.s:359    .text:00000000000001f8 insertNewFreeSegment
     /tmp/ccnie854.s:362    .text:00000000000001f8 .L0 
     /tmp/ccnie854.s:364    .text:00000000000001f8 .L0 
     /tmp/ccnie854.s:365    .text:00000000000001fc .L0 
     /tmp/ccnie854.s:370    .text:000000000000020c .L0 
     /tmp/ccnie854.s:371    .text:000000000000020c .L0 
     /tmp/ccnie854.s:372    .text:000000000000020c .L0 
GAS LISTING /tmp/ccnie854.s 			page 19


     /tmp/ccnie854.s:373    .text:000000000000020c .L0 
     /tmp/ccnie854.s:375    .text:0000000000000210 .L0 
     /tmp/ccnie854.s:379    .text:0000000000000218 .L0 
     /tmp/ccnie854.s:382    .text:0000000000000220 .L0 
     /tmp/ccnie854.s:383    .text:0000000000000220 .L0 
     /tmp/ccnie854.s:384    .text:0000000000000220 .L0 
     /tmp/ccnie854.s:387    .text:0000000000000228 .L0 
     /tmp/ccnie854.s:388    .text:0000000000000228 .L0 
     /tmp/ccnie854.s:389    .text:0000000000000228 .L0 
     /tmp/ccnie854.s:391    .text:000000000000022c .L0 
     /tmp/ccnie854.s:392    .text:000000000000022c .L0 
     /tmp/ccnie854.s:394    .text:0000000000000230 .L0 
     /tmp/ccnie854.s:395    .text:0000000000000230 .L0 
     /tmp/ccnie854.s:399    .text:0000000000000234 .L0 
     /tmp/ccnie854.s:401    .text:0000000000000238 .L0 
     /tmp/ccnie854.s:402    .text:0000000000000238 .L0 
     /tmp/ccnie854.s:405    .text:000000000000023c .L0 
     /tmp/ccnie854.s:406    .text:000000000000023c .L0 
     /tmp/ccnie854.s:407    .text:000000000000023c .L0 
     /tmp/ccnie854.s:409    .text:0000000000000240 .L0 
     /tmp/ccnie854.s:414    .text:0000000000000248 .L0 
     /tmp/ccnie854.s:415    .text:0000000000000248 .L0 
     /tmp/ccnie854.s:418    .text:000000000000024c .L0 
     /tmp/ccnie854.s:419    .text:000000000000024c .L0 
     /tmp/ccnie854.s:420    .text:000000000000024c .L0 
     /tmp/ccnie854.s:422    .text:0000000000000250 .L0 
     /tmp/ccnie854.s:423    .text:0000000000000250 .L0 
     /tmp/ccnie854.s:427    .text:0000000000000254 .L0 
     /tmp/ccnie854.s:428    .text:0000000000000258 .L0 
     /tmp/ccnie854.s:429    .text:0000000000000258 .L0 
     /tmp/ccnie854.s:431    .text:000000000000025c .L0 
     /tmp/ccnie854.s:432    .text:000000000000025c .L0 
     /tmp/ccnie854.s:434    .text:0000000000000260 .L0 
     /tmp/ccnie854.s:437    .text:0000000000000264 .L0 
     /tmp/ccnie854.s:440    .text:0000000000000268 .L0 
     /tmp/ccnie854.s:444    .text:000000000000026c .L0 
     /tmp/ccnie854.s:446    .text:000000000000026c .L0 
     /tmp/ccnie854.s:447    .text:000000000000026c .L0 
     /tmp/ccnie854.s:450    .text:0000000000000278 .L0 
     /tmp/ccnie854.s:456    .text:0000000000000278 tryToFreeSegment
     /tmp/ccnie854.s:459    .text:0000000000000278 .L0 
     /tmp/ccnie854.s:461    .text:0000000000000278 .L0 
     /tmp/ccnie854.s:462    .text:000000000000027c .L0 
     /tmp/ccnie854.s:467    .text:000000000000028c .L0 
     /tmp/ccnie854.s:468    .text:000000000000028c .L0 
     /tmp/ccnie854.s:469    .text:000000000000028c .L0 
     /tmp/ccnie854.s:470    .text:000000000000028c .L0 
     /tmp/ccnie854.s:472    .text:0000000000000290 .L0 
     /tmp/ccnie854.s:475    .text:0000000000000294 .L0 
     /tmp/ccnie854.s:478    .text:000000000000029c .L0 
     /tmp/ccnie854.s:479    .text:000000000000029c .L0 
     /tmp/ccnie854.s:480    .text:000000000000029c .L0 
     /tmp/ccnie854.s:483    .text:00000000000002a4 .L0 
     /tmp/ccnie854.s:484    .text:00000000000002a4 .L0 
     /tmp/ccnie854.s:485    .text:00000000000002a4 .L0 
     /tmp/ccnie854.s:487    .text:00000000000002a8 .L0 
     /tmp/ccnie854.s:489    .text:00000000000002ac .L0 
GAS LISTING /tmp/ccnie854.s 			page 20


     /tmp/ccnie854.s:493    .text:00000000000002b0 .L0 
     /tmp/ccnie854.s:494    .text:00000000000002b0 .L0 
     /tmp/ccnie854.s:496    .text:00000000000002b4 .L0 
     /tmp/ccnie854.s:500    .text:00000000000002bc .L0 
     /tmp/ccnie854.s:501    .text:00000000000002bc .L0 
     /tmp/ccnie854.s:503    .text:00000000000002c0 .L0 
     /tmp/ccnie854.s:508    .text:00000000000002d0 .L0 
     /tmp/ccnie854.s:509    .text:00000000000002d0 .L0 
     /tmp/ccnie854.s:513    .text:00000000000002d4 .L0 
     /tmp/ccnie854.s:514    .text:00000000000002d4 .L0 
     /tmp/ccnie854.s:515    .text:00000000000002d4 .L0 
     /tmp/ccnie854.s:517    .text:00000000000002d8 .L0 
     /tmp/ccnie854.s:521    .text:00000000000002dc .L0 
     /tmp/ccnie854.s:523    .text:00000000000002e0 .L0 
     /tmp/ccnie854.s:525    .text:00000000000002e4 .L0 
     /tmp/ccnie854.s:526    .text:00000000000002e4 .L0 
     /tmp/ccnie854.s:528    .text:00000000000002e8 .L0 
     /tmp/ccnie854.s:530    .text:00000000000002ec .L0 
     /tmp/ccnie854.s:531    .text:00000000000002ec .L0 
     /tmp/ccnie854.s:533    .text:00000000000002f0 .L0 
     /tmp/ccnie854.s:534    .text:00000000000002f0 .L0 
     /tmp/ccnie854.s:536    .text:00000000000002f4 .L0 
     /tmp/ccnie854.s:540    .text:00000000000002fc .L0 
     /tmp/ccnie854.s:541    .text:00000000000002fc .L0 
 src/memoryHandler.c:175    .text:0000000000000300 .L0 
     /tmp/ccnie854.s:550    .text:0000000000000304 .L0 
     /tmp/ccnie854.s:551    .text:0000000000000308 .L0 
     /tmp/ccnie854.s:552    .text:0000000000000308 .L0 
     /tmp/ccnie854.s:554    .text:000000000000030c .L0 
     /tmp/ccnie854.s:555    .text:000000000000030c .L0 
     /tmp/ccnie854.s:557    .text:0000000000000310 .L0 
     /tmp/ccnie854.s:560    .text:0000000000000314 .L0 
     /tmp/ccnie854.s:563    .text:0000000000000318 .L0 
     /tmp/ccnie854.s:567    .text:000000000000031c .L0 
 src/memoryHandler.c:178    .text:000000000000031c .L0 
     /tmp/ccnie854.s:575    .text:0000000000000320 .L0 
     /tmp/ccnie854.s:576    .text:0000000000000324 .L0 
     /tmp/ccnie854.s:603    .sdata:0000000000000000 MEM_FREE
     /tmp/ccnie854.s:607    .sdata:0000000000000004 MEM_ALLOC
     /tmp/ccnie854.s:613    .text:0000000000000324 .L0 
                     .debug_frame:0000000000000000 .L0 
     /tmp/ccnie854.s:23     .text:000000000000000c .L0 
     /tmp/ccnie854.s:29     .text:000000000000001c .L0 
     /tmp/ccnie854.s:32     .text:0000000000000024 .L0 
     /tmp/ccnie854.s:35     .text:000000000000002c .L0 
     /tmp/ccnie854.s:36     .text:0000000000000034 .L0 
     /tmp/ccnie854.s:42     .text:0000000000000040 .L0 
     /tmp/ccnie854.s:88     .text:0000000000000088 .L0 
     /tmp/ccnie854.s:161    .text:00000000000000e4 .L0 
     /tmp/ccnie854.s:168    .text:00000000000000f0 .L0 
     /tmp/ccnie854.s:207    .text:000000000000012c .L0 
     /tmp/ccnie854.s:272    .text:0000000000000184 .L0 
     /tmp/ccnie854.s:278    .text:0000000000000190 .L0 
     /tmp/ccnie854.s:286    .text:000000000000019c .L0 
     /tmp/ccnie854.s:314    .text:00000000000001bc .L0 
     /tmp/ccnie854.s:384    .text:0000000000000220 .L0 
     /tmp/ccnie854.s:447    .text:000000000000026c .L0 
GAS LISTING /tmp/ccnie854.s 			page 21


     /tmp/ccnie854.s:480    .text:000000000000029c .L0 
     /tmp/ccnie854.s:496    .text:00000000000002b4 .L0 
     /tmp/ccnie854.s:49     .text:0000000000000054 .L1
     /tmp/ccnie854.s:109    .text:00000000000000a8 .L6
     /tmp/ccnie854.s:94     .text:0000000000000094 .L5
     /tmp/ccnie854.s:149    .text:00000000000000d8 .L13
     /tmp/ccnie854.s:165    .text:00000000000000f0 .L14
     /tmp/ccnie854.s:158    .text:00000000000000e4 .L15
     /tmp/ccnie854.s:131    .text:00000000000000c0 .L4
     /tmp/ccnie854.s:297    .text:00000000000001ac .L17
     /tmp/ccnie854.s:269    .text:0000000000000184 .L20
     /tmp/ccnie854.s:255    .text:000000000000016c .L22
     /tmp/ccnie854.s:275    .text:0000000000000190 .L23
     /tmp/ccnie854.s:337    .text:00000000000001dc .L16
     /tmp/ccnie854.s:229    .text:0000000000000148 .L21
     /tmp/ccnie854.s:325    .text:00000000000001d4 .L28
     /tmp/ccnie854.s:288    .text:00000000000001a4 .L18
     /tmp/ccnie854.s:219    .text:0000000000000140 .L29
     /tmp/ccnie854.s:282    .text:000000000000019c .L25
     /tmp/ccnie854.s:417    .text:000000000000024c .L33
     /tmp/ccnie854.s:412    .text:0000000000000248 .L38
     /tmp/ccnie854.s:397    .text:0000000000000234 .L31
     /tmp/ccnie854.s:443    .text:000000000000026c .L39
     /tmp/ccnie854.s:425    .text:0000000000000254 .L30
     /tmp/ccnie854.s:519    .text:00000000000002dc .L41
     /tmp/ccnie854.s:538    .text:00000000000002fc .L45
     /tmp/ccnie854.s:511    .text:00000000000002d4 .L42
     /tmp/ccnie854.s:491    .text:00000000000002b0 .L43
     /tmp/ccnie854.s:498    .text:00000000000002bc .L44
     /tmp/ccnie854.s:566    .text:000000000000031c .L47
     /tmp/ccnie854.s:548    .text:0000000000000304 .L40
     /tmp/ccnie854.s:1142   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccnie854.s:2085   .debug_str:000000000000008d .LASF41
     /tmp/ccnie854.s:2107   .debug_str:00000000000001bb .LASF42
     /tmp/ccnie854.s:2129   .debug_str:000000000000024f .LASF43
     /tmp/ccnie854.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccnie854.s:610    .text:0000000000000324 .Letext0
     /tmp/ccnie854.s:2061   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccnie854.s:2115   .debug_str:00000000000001ef .LASF0
     /tmp/ccnie854.s:2103   .debug_str:000000000000019c .LASF1
     /tmp/ccnie854.s:2095   .debug_str:000000000000015b .LASF2
     /tmp/ccnie854.s:2077   .debug_str:0000000000000062 .LASF4
     /tmp/ccnie854.s:2099   .debug_str:0000000000000174 .LASF3
     /tmp/ccnie854.s:2067   .debug_str:000000000000002e .LASF5
     /tmp/ccnie854.s:2063   .debug_str:0000000000000000 .LASF6
     /tmp/ccnie854.s:2091   .debug_str:0000000000000139 .LASF7
     /tmp/ccnie854.s:2123   .debug_str:0000000000000219 .LASF8
     /tmp/ccnie854.s:2075   .debug_str:0000000000000054 .LASF9
     /tmp/ccnie854.s:2153   .debug_str:00000000000002ee .LASF10
     /tmp/ccnie854.s:2093   .debug_str:000000000000014c .LASF11
     /tmp/ccnie854.s:2143   .debug_str:00000000000002b9 .LASF12
     /tmp/ccnie854.s:2127   .debug_str:000000000000023f .LASF13
     /tmp/ccnie854.s:2105   .debug_str:00000000000001af .LASF14
     /tmp/ccnie854.s:2081   .debug_str:000000000000006f .LASF15
     /tmp/ccnie854.s:2125   .debug_str:0000000000000229 .LASF16
     /tmp/ccnie854.s:2147   .debug_str:00000000000002d1 .LASF19
     /tmp/ccnie854.s:2119   .debug_str:000000000000020e .LASF17
GAS LISTING /tmp/ccnie854.s 			page 22


     /tmp/ccnie854.s:2069   .debug_str:0000000000000035 .LASF18
     /tmp/ccnie854.s:2087   .debug_str:000000000000012b .LASF20
     /tmp/ccnie854.s:2117   .debug_str:00000000000001fc .LASF21
     /tmp/ccnie854.s:2111   .debug_str:00000000000001d9 .LASF22
     /tmp/ccnie854.s:2137   .debug_str:0000000000000295 .LASF23
     /tmp/ccnie854.s:2109   .debug_str:00000000000001cf .LASF24
     /tmp/ccnie854.s:2141   .debug_str:00000000000002b0 .LASF25
     /tmp/ccnie854.s:2135   .debug_str:0000000000000284 .LASF29
     /tmp/ccnie854.s:457    .text:0000000000000278 .LFB4
     /tmp/ccnie854.s:577    .text:0000000000000324 .LFE4
     /tmp/ccnie854.s:2089   .debug_str:0000000000000134 .LASF31
     /tmp/ccnie854.s:1507   .debug_loc:0000000000000000 .LLST19
     /tmp/ccnie854.s:2151   .debug_str:00000000000002e9 .LASF26
     /tmp/ccnie854.s:1529   .debug_loc:000000000000005f .LLST20
     /tmp/ccnie854.s:2073   .debug_str:000000000000004f .LASF27
     /tmp/ccnie854.s:1549   .debug_loc:00000000000000bc .LLST21
     /tmp/ccnie854.s:2079   .debug_str:0000000000000069 .LASF28
     /tmp/ccnie854.s:1569   .debug_loc:0000000000000119 .LLST22
     /tmp/ccnie854.s:476    .text:000000000000029c .LVL47
     /tmp/ccnie854.s:506    .text:00000000000002d0 .LVL51
     /tmp/ccnie854.s:2071   .debug_str:000000000000003a .LASF30
     /tmp/ccnie854.s:360    .text:00000000000001f8 .LFB3
     /tmp/ccnie854.s:451    .text:0000000000000278 .LFE3
     /tmp/ccnie854.s:1590   .debug_loc:0000000000000177 .LLST14
     /tmp/ccnie854.s:1612   .debug_loc:00000000000001d6 .LLST15
     /tmp/ccnie854.s:1634   .debug_loc:0000000000000235 .LLST16
     /tmp/ccnie854.s:1654   .debug_loc:0000000000000292 .LLST17
     /tmp/ccnie854.s:2097   .debug_str:0000000000000169 .LASF32
     /tmp/ccnie854.s:1674   .debug_loc:00000000000002ef .LLST18
     /tmp/ccnie854.s:380    .text:0000000000000220 .LVL36
     /tmp/ccnie854.s:2101   .debug_str:0000000000000186 .LASF44
     /tmp/ccnie854.s:184    .text:0000000000000108 .LFB2
     /tmp/ccnie854.s:354    .text:00000000000001f8 .LFE2
     /tmp/ccnie854.s:1692   .debug_loc:000000000000033b .LLST5
     /tmp/ccnie854.s:1710   .debug_loc:0000000000000387 .LLST6
     /tmp/ccnie854.s:1734   .debug_loc:00000000000003f7 .LLST7
     /tmp/ccnie854.s:2145   .debug_str:00000000000002c9 .LASF33
     /tmp/ccnie854.s:1760   .debug_loc:0000000000000469 .LLST8
     /tmp/ccnie854.s:1802   .debug_loc:0000000000000509 .LLST9
     /tmp/ccnie854.s:2053   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccnie854.s:2113   .debug_str:00000000000001e7 .LASF34
     /tmp/ccnie854.s:1810   .debug_loc:000000000000052d .LLST10
     /tmp/ccnie854.s:2139   .debug_str:00000000000002a8 .LASF35
     /tmp/ccnie854.s:1831   .debug_loc:000000000000058b .LLST11
     /tmp/ccnie854.s:221    .text:0000000000000140 .LBB3
     /tmp/ccnie854.s:283    .text:000000000000019c .LBE3
     /tmp/ccnie854.s:2083   .debug_str:0000000000000085 .LASF36
     /tmp/ccnie854.s:1881   .debug_loc:0000000000000633 .LLST12
     /tmp/ccnie854.s:2131   .debug_str:0000000000000272 .LASF37
     /tmp/ccnie854.s:1923   .debug_loc:00000000000006b5 .LLST13
     /tmp/ccnie854.s:260    .text:000000000000017c .LVL22
     /tmp/ccnie854.s:203    .text:000000000000012c .LVL16
     /tmp/ccnie854.s:2065   .debug_str:0000000000000013 .LASF38
     /tmp/ccnie854.s:64     .text:0000000000000060 .LFB1
     /tmp/ccnie854.s:178    .text:0000000000000108 .LFE1
     /tmp/ccnie854.s:1930   .debug_loc:00000000000006d8 .LLST0
     /tmp/ccnie854.s:1952   .debug_loc:0000000000000737 .LLST1
GAS LISTING /tmp/ccnie854.s 			page 23


     /tmp/ccnie854.s:1974   .debug_loc:0000000000000796 .LLST2
     /tmp/ccnie854.s:2121   .debug_str:0000000000000213 .LASF39
     /tmp/ccnie854.s:1998   .debug_loc:0000000000000806 .LLST3
     /tmp/ccnie854.s:2133   .debug_str:0000000000000277 .LASF40
     /tmp/ccnie854.s:2022   .debug_loc:0000000000000876 .LLST4
     /tmp/ccnie854.s:84     .text:0000000000000088 .LVL1
     /tmp/ccnie854.s:2149   .debug_str:00000000000002de .LASF45
     /tmp/ccnie854.s:11     .text:0000000000000000 .LFB0
     /tmp/ccnie854.s:58     .text:0000000000000060 .LFE0
     /tmp/ccnie854.s:460    .text:0000000000000278 .LVL46
     /tmp/ccnie854.s:561    .text:0000000000000314 .LVL55
     /tmp/ccnie854.s:565    .text:000000000000031c .LVL56
     /tmp/ccnie854.s:490    .text:00000000000002b0 .LVL49
     /tmp/ccnie854.s:497    .text:00000000000002bc .LVL50
     /tmp/ccnie854.s:510    .text:00000000000002d4 .LVL52
     /tmp/ccnie854.s:518    .text:00000000000002dc .LVL53
     /tmp/ccnie854.s:481    .text:00000000000002a4 .LVL48
     /tmp/ccnie854.s:558    .text:0000000000000310 .LVL54
     /tmp/ccnie854.s:363    .text:00000000000001f8 .LVL35
     /tmp/ccnie854.s:435    .text:0000000000000260 .LVL42
     /tmp/ccnie854.s:442    .text:000000000000026c .LVL44
     /tmp/ccnie854.s:438    .text:0000000000000264 .LVL43
     /tmp/ccnie854.s:396    .text:0000000000000234 .LVL38
     /tmp/ccnie854.s:404    .text:000000000000023c .LVL39
     /tmp/ccnie854.s:410    .text:0000000000000244 .LVL40
     /tmp/ccnie854.s:385    .text:0000000000000228 .LVL37
     /tmp/ccnie854.s:424    .text:0000000000000254 .LVL41
     /tmp/ccnie854.s:448    .text:0000000000000274 .LVL45
     /tmp/ccnie854.s:187    .text:0000000000000108 .LVL15
     /tmp/ccnie854.s:349    .text:00000000000001f0 .LVL34
     /tmp/ccnie854.s:218    .text:0000000000000140 .LVL19
     /tmp/ccnie854.s:268    .text:0000000000000184 .LVL24
     /tmp/ccnie854.s:287    .text:00000000000001a4 .LVL28
     /tmp/ccnie854.s:296    .text:00000000000001ac .LVL29
     /tmp/ccnie854.s:335    .text:00000000000001dc .LVL33
     /tmp/ccnie854.s:208    .text:0000000000000134 .LVL17
     /tmp/ccnie854.s:264    .text:0000000000000180 .LVL23
     /tmp/ccnie854.s:212    .text:0000000000000138 .LVL18
     /tmp/ccnie854.s:240    .text:0000000000000158 .LVL20
     /tmp/ccnie854.s:274    .text:0000000000000190 .LVL25
     /tmp/ccnie854.s:281    .text:000000000000019c .LVL27
     /tmp/ccnie854.s:324    .text:00000000000001d4 .LVL32
     /tmp/ccnie854.s:307    .text:00000000000001b8 .LVL30
     /tmp/ccnie854.s:252    .text:0000000000000168 .LVL21
     /tmp/ccnie854.s:279    .text:0000000000000198 .LVL26
     /tmp/ccnie854.s:311    .text:00000000000001bc .LVL31
     /tmp/ccnie854.s:67     .text:0000000000000060 .LVL0
     /tmp/ccnie854.s:141    .text:00000000000000cc .LVL8
     /tmp/ccnie854.s:148    .text:00000000000000d8 .LVL10
     /tmp/ccnie854.s:144    .text:00000000000000d0 .LVL9
     /tmp/ccnie854.s:93     .text:0000000000000094 .LVL3
     /tmp/ccnie854.s:101    .text:000000000000009c .LVL4
     /tmp/ccnie854.s:107    .text:00000000000000a4 .LVL5
     /tmp/ccnie854.s:130    .text:00000000000000c0 .LVL7
     /tmp/ccnie854.s:171    .text:00000000000000fc .LVL14
     /tmp/ccnie854.s:89     .text:0000000000000090 .LVL2
     /tmp/ccnie854.s:162    .text:00000000000000ec .LVL11
GAS LISTING /tmp/ccnie854.s 			page 24


     /tmp/ccnie854.s:164    .text:00000000000000f0 .LVL12
     /tmp/ccnie854.s:169    .text:00000000000000f8 .LVL13
     /tmp/ccnie854.s:111    .text:00000000000000a8 .LVL6
     /tmp/ccnie854.s:614    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccnie854.s:220    .text:0000000000000140 .LBB2
     /tmp/ccnie854.s:289    .text:00000000000001a4 .LBE2
     /tmp/ccnie854.s:305    .text:00000000000001b8 .LBB4
     /tmp/ccnie854.s:326    .text:00000000000001d4 .LBE4

UNDEFINED SYMBOLS
HEAP_START_ADDR
HEAP_END_ADDR
