GAS LISTING /tmp/ccR0DM5a.s 			page 1


   1              		.file	"PCB.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.section	.rodata.str1.8,"aMS",@progbits,1
   7              		.align	3
   8              	.LC0:
   9 0000 52756E6E 		.string	"Runner started...\n"
   9      65722073 
   9      74617274 
   9      65642E2E 
   9      2E0A00
  10              		.text
  11              		.align	2
  12              		.globl	_ZN3PCB6runnerEv
  14              	_ZN3PCB6runnerEv:
  15              	.LFB26:
  16              		.file 1 "src/PCB.cpp"
   1:src/PCB.cpp   **** //
   2:src/PCB.cpp   **** // Created by os on 4/27/22.
   3:src/PCB.cpp   **** //
   4:src/PCB.cpp   **** 
   5:src/PCB.cpp   **** #include "../h/PCB.hpp"
   6:src/PCB.cpp   **** #include "../h/syscall_c.h"
   7:src/PCB.cpp   **** 
   8:src/PCB.cpp   **** PCB* PCB::running = 0;
   9:src/PCB.cpp   **** uint64 PCB::timeSliceCounter = 0;
  10:src/PCB.cpp   **** 
  11:src/PCB.cpp   **** PCB::PCB(Body body, void *args, void* stack_space, uint64 timeSlice) :
  12:src/PCB.cpp   ****     timeSlice(timeSlice),
  13:src/PCB.cpp   ****     body(body),
  14:src/PCB.cpp   ****     args(args),
  15:src/PCB.cpp   ****     beginSP(stack_space),
  16:src/PCB.cpp   ****     context({
  17:src/PCB.cpp   ****         (uint64)((char*)stack_space + DEFAULT_STACK_SIZE),
  18:src/PCB.cpp   ****         (uint64)&PCB::runner
  19:src/PCB.cpp   ****     })
  20:src/PCB.cpp   **** {
  21:src/PCB.cpp   ****     Scheduler::put(this);
  22:src/PCB.cpp   ****     nextPCB = 0;
  23:src/PCB.cpp   **** }
  24:src/PCB.cpp   **** 
  25:src/PCB.cpp   **** void PCB::sleep(time_t time)
  26:src/PCB.cpp   **** {
  27:src/PCB.cpp   ****     //todo
  28:src/PCB.cpp   **** }
  29:src/PCB.cpp   **** 
  30:src/PCB.cpp   **** void PCB::start()
  31:src/PCB.cpp   **** {
  32:src/PCB.cpp   ****     Scheduler::put(this);
  33:src/PCB.cpp   **** }
  34:src/PCB.cpp   **** 
  35:src/PCB.cpp   **** void PCB::runner()
  36:src/PCB.cpp   **** {
  17              		.loc 1 36 1
  18              		.cfi_startproc
GAS LISTING /tmp/ccR0DM5a.s 			page 2


  19 0000 130101FF 		addi	sp,sp,-16
  20              		.cfi_def_cfa_offset 16
  21 0004 23341100 		sd	ra,8(sp)
  22 0008 23308100 		sd	s0,0(sp)
  23              		.cfi_offset 1, -8
  24              		.cfi_offset 8, -16
  25 000c 13040101 		addi	s0,sp,16
  26              		.cfi_def_cfa 8, 0
  37:src/PCB.cpp   ****     Riscv::printString("Runner started...\n");
  27              		.loc 1 37 5
  28              		.loc 1 37 23 is_stmt 0
  29 0010 17050000 		lla	a0,.LC0
  29      13050500 
  30 0018 97000000 		call	_ZN5Riscv11printStringEPKc@plt
  30      E7800000 
  31              	.LVL0:
  38:src/PCB.cpp   ****     Riscv::popSppSpie();
  32              		.loc 1 38 5 is_stmt 1
  33              		.loc 1 38 22 is_stmt 0
  34 0020 97000000 		call	_ZN5Riscv10popSppSpieEv@plt
  34      E7800000 
  35              	.LVL1:
  39:src/PCB.cpp   **** 
  40:src/PCB.cpp   ****     running->body(running->args);
  36              		.loc 1 40 5 is_stmt 1
  37              		.loc 1 40 14 is_stmt 0
  38 0028 97070000 		ld	a5,.LANCHOR0
  38      83B70700 
  39 0030 03B70702 		ld	a4,32(a5)
  40              		.loc 1 40 18
  41 0034 03B58702 		ld	a0,40(a5)
  42 0038 E7000700 		jalr	a4
  43              	.LVL2:
  41:src/PCB.cpp   **** 
  42:src/PCB.cpp   ****     thread_exit();
  44              		.loc 1 42 5 is_stmt 1
  45              		.loc 1 42 16 is_stmt 0
  46 003c 97000000 		call	thread_exit@plt
  46      E7800000 
  47              	.LVL3:
  43:src/PCB.cpp   **** }
  48              		.loc 1 43 1
  49 0044 83308100 		ld	ra,8(sp)
  50              		.cfi_restore 1
  51 0048 03340100 		ld	s0,0(sp)
  52              		.cfi_restore 8
  53              		.cfi_def_cfa 2, 16
  54 004c 13010101 		addi	sp,sp,16
  55              		.cfi_def_cfa_offset 0
  56 0050 67800000 		jr	ra
  57              		.cfi_endproc
  58              	.LFE26:
  60              		.align	2
  61              		.globl	_ZN3PCBC2EPFvPvES0_S0_m
  63              	_ZN3PCBC2EPFvPvES0_S0_m:
  64              	.LFB22:
  11:src/PCB.cpp   ****     timeSlice(timeSlice),
GAS LISTING /tmp/ccR0DM5a.s 			page 3


  65              		.loc 1 11 1 is_stmt 1
  66              		.cfi_startproc
  67              	.LVL4:
  68 0054 130101FE 		addi	sp,sp,-32
  69              		.cfi_def_cfa_offset 32
  70 0058 233C1100 		sd	ra,24(sp)
  71 005c 23388100 		sd	s0,16(sp)
  72 0060 23349100 		sd	s1,8(sp)
  73              		.cfi_offset 1, -8
  74              		.cfi_offset 8, -16
  75              		.cfi_offset 9, -24
  76 0064 13040102 		addi	s0,sp,32
  77              		.cfi_def_cfa 8, 0
  78 0068 93040500 		mv	s1,a0
  79              	.LBB12:
  19:src/PCB.cpp   **** {
  80              		.loc 1 19 6 is_stmt 0
  81 006c 23000500 		sb	zero,0(a0)
  82 0070 2338E500 		sd	a4,16(a0)
  83 0074 233C0500 		sd	zero,24(a0)
  84 0078 2330B502 		sd	a1,32(a0)
  85 007c 2334C502 		sd	a2,40(a0)
  86 0080 2338D502 		sd	a3,48(a0)
  17:src/PCB.cpp   ****         (uint64)&PCB::runner
  87              		.loc 1 17 37
  88 0084 B7170000 		li	a5,4096
  89 0088 B386F600 		add	a3,a3,a5
  90              	.LVL5:
  19:src/PCB.cpp   **** {
  91              		.loc 1 19 6
  92 008c 2330D504 		sd	a3,64(a0)
  93 0090 97070000 		lla	a5,_ZN3PCB6runnerEv
  93      93870700 
  94 0098 2334F504 		sd	a5,72(a0)
  21:src/PCB.cpp   ****     nextPCB = 0;
  95              		.loc 1 21 5 is_stmt 1
  21:src/PCB.cpp   ****     nextPCB = 0;
  96              		.loc 1 21 19 is_stmt 0
  97 009c 97000000 		call	_ZN9Scheduler3putEP3PCB@plt
  97      E7800000 
  98              	.LVL6:
  22:src/PCB.cpp   **** }
  99              		.loc 1 22 5 is_stmt 1
  22:src/PCB.cpp   **** }
 100              		.loc 1 22 13 is_stmt 0
 101 00a4 23B40400 		sd	zero,8(s1)
 102              	.LBE12:
  23:src/PCB.cpp   **** 
 103              		.loc 1 23 1
 104 00a8 83308101 		ld	ra,24(sp)
 105              		.cfi_restore 1
 106 00ac 03340101 		ld	s0,16(sp)
 107              		.cfi_restore 8
 108              		.cfi_def_cfa 2, 32
 109 00b0 83348100 		ld	s1,8(sp)
 110              		.cfi_restore 9
 111              	.LVL7:
GAS LISTING /tmp/ccR0DM5a.s 			page 4


 112 00b4 13010102 		addi	sp,sp,32
 113              		.cfi_def_cfa_offset 0
 114 00b8 67800000 		jr	ra
 115              		.cfi_endproc
 116              	.LFE22:
 118              		.globl	_ZN3PCBC1EPFvPvES0_S0_m
 119              		.set	_ZN3PCBC1EPFvPvES0_S0_m,_ZN3PCBC2EPFvPvES0_S0_m
 120              		.align	2
 121              		.globl	_ZN3PCB5sleepEm
 123              	_ZN3PCB5sleepEm:
 124              	.LFB24:
  26:src/PCB.cpp   ****     //todo
 125              		.loc 1 26 1 is_stmt 1
 126              		.cfi_startproc
 127              	.LVL8:
 128 00bc 130101FF 		addi	sp,sp,-16
 129              		.cfi_def_cfa_offset 16
 130 00c0 23348100 		sd	s0,8(sp)
 131              		.cfi_offset 8, -8
 132 00c4 13040101 		addi	s0,sp,16
 133              		.cfi_def_cfa 8, 0
  28:src/PCB.cpp   **** 
 134              		.loc 1 28 1 is_stmt 0
 135 00c8 03348100 		ld	s0,8(sp)
 136              		.cfi_restore 8
 137              		.cfi_def_cfa 2, 16
 138 00cc 13010101 		addi	sp,sp,16
 139              		.cfi_def_cfa_offset 0
 140 00d0 67800000 		jr	ra
 141              		.cfi_endproc
 142              	.LFE24:
 144              		.align	2
 145              		.globl	_ZN3PCB5startEv
 147              	_ZN3PCB5startEv:
 148              	.LFB25:
  31:src/PCB.cpp   ****     Scheduler::put(this);
 149              		.loc 1 31 1 is_stmt 1
 150              		.cfi_startproc
 151              	.LVL9:
 152 00d4 130101FF 		addi	sp,sp,-16
 153              		.cfi_def_cfa_offset 16
 154 00d8 23341100 		sd	ra,8(sp)
 155 00dc 23308100 		sd	s0,0(sp)
 156              		.cfi_offset 1, -8
 157              		.cfi_offset 8, -16
 158 00e0 13040101 		addi	s0,sp,16
 159              		.cfi_def_cfa 8, 0
  32:src/PCB.cpp   **** }
 160              		.loc 1 32 5
  32:src/PCB.cpp   **** }
 161              		.loc 1 32 19 is_stmt 0
 162 00e4 97000000 		call	_ZN9Scheduler3putEP3PCB@plt
 162      E7800000 
 163              	.LVL10:
  33:src/PCB.cpp   **** 
 164              		.loc 1 33 1
 165 00ec 83308100 		ld	ra,8(sp)
GAS LISTING /tmp/ccR0DM5a.s 			page 5


 166              		.cfi_restore 1
 167 00f0 03340100 		ld	s0,0(sp)
 168              		.cfi_restore 8
 169              		.cfi_def_cfa 2, 16
 170 00f4 13010101 		addi	sp,sp,16
 171              		.cfi_def_cfa_offset 0
 172 00f8 67800000 		jr	ra
 173              		.cfi_endproc
 174              	.LFE25:
 176              		.align	2
 177              		.globl	_ZN3PCB8dispatchEv
 179              	_ZN3PCB8dispatchEv:
 180              	.LFB27:
  44:src/PCB.cpp   **** 
  45:src/PCB.cpp   **** void PCB::dispatch()
  46:src/PCB.cpp   **** {
 181              		.loc 1 46 1 is_stmt 1
 182              		.cfi_startproc
 183 00fc 130101FE 		addi	sp,sp,-32
 184              		.cfi_def_cfa_offset 32
 185 0100 233C1100 		sd	ra,24(sp)
 186 0104 23388100 		sd	s0,16(sp)
 187 0108 23349100 		sd	s1,8(sp)
 188              		.cfi_offset 1, -8
 189              		.cfi_offset 8, -16
 190              		.cfi_offset 9, -24
 191 010c 13040102 		addi	s0,sp,32
 192              		.cfi_def_cfa 8, 0
  47:src/PCB.cpp   ****     //Scheduler::print();
  48:src/PCB.cpp   ****     //Riscv::printInteger(Scheduler::getSize());
  49:src/PCB.cpp   ****     //Riscv::printString("Dispatch called...\n");
  50:src/PCB.cpp   ****     PCB* old = running;
 193              		.loc 1 50 5
 194              		.loc 1 50 10 is_stmt 0
 195 0110 97040000 		ld	s1,.LANCHOR0
 195      83B40400 
 196              	.LVL11:
  51:src/PCB.cpp   ****     if(old->getState() == PCB::RUNNING)
 197              		.loc 1 51 5 is_stmt 1
 198              	.LBB13:
 199              	.LBB14:
 200              		.file 2 "src/../h/PCB.hpp"
   1:src/../h/PCB.hpp **** //
   2:src/../h/PCB.hpp **** // Created by os on 4/27/22.
   3:src/../h/PCB.hpp **** //
   4:src/../h/PCB.hpp **** 
   5:src/../h/PCB.hpp **** #ifndef PROJECT_BASE_V1_0_PCB_HPP
   6:src/../h/PCB.hpp **** #define PROJECT_BASE_V1_0_PCB_HPP
   7:src/../h/PCB.hpp **** 
   8:src/../h/PCB.hpp **** #include "../lib/hw.h"
   9:src/../h/PCB.hpp **** #include "Scheduler.hpp"
  10:src/../h/PCB.hpp **** #include "Riscv.hpp"
  11:src/../h/PCB.hpp **** 
  12:src/../h/PCB.hpp **** class PCB
  13:src/../h/PCB.hpp **** {
  14:src/../h/PCB.hpp **** public:
  15:src/../h/PCB.hpp ****     using Body = void (*)(void*);
GAS LISTING /tmp/ccR0DM5a.s 			page 6


  16:src/../h/PCB.hpp **** 
  17:src/../h/PCB.hpp ****     PCB(Body body,  void* args, void* stack_space, uint64 timeSlice);
  18:src/../h/PCB.hpp ****     ~PCB();
  19:src/../h/PCB.hpp **** 
  20:src/../h/PCB.hpp ****     void start();
  21:src/../h/PCB.hpp ****     static void dispatch();
  22:src/../h/PCB.hpp ****     static void sleep(time_t);
  23:src/../h/PCB.hpp **** 
  24:src/../h/PCB.hpp ****     static PCB* running;
  25:src/../h/PCB.hpp **** 
  26:src/../h/PCB.hpp ****     static uint64 timeSliceCounter;
  27:src/../h/PCB.hpp ****     uint64 getTimeSlice() { return timeSlice;}
  28:src/../h/PCB.hpp **** 
  29:src/../h/PCB.hpp ****     void* operator new(size_t size);
  30:src/../h/PCB.hpp ****     void operator delete(void *p);
  31:src/../h/PCB.hpp **** 
  32:src/../h/PCB.hpp ****     enum State{READY, RUNNING, SUSPENDED, FINISHED, EXITING, SLEEPING};
  33:src/../h/PCB.hpp ****     State getState() {return state;}
 201              		.loc 2 33 23
 202              		.loc 2 33 30 is_stmt 0
 203 0118 03A78403 		lw	a4,56(s1)
 204              	.LVL12:
 205              	.LBE14:
 206              	.LBE13:
 207              		.loc 1 51 5
 208 011c 93071000 		li	a5,1
 209 0120 6308F704 		beq	a4,a5,.L14
 210              	.L10:
  52:src/PCB.cpp   ****         Scheduler::put(old);
  53:src/PCB.cpp   ****     PCB::running = Scheduler::get();
 211              		.loc 1 53 5 is_stmt 1
 212              		.loc 1 53 34 is_stmt 0
 213 0124 97000000 		call	_ZN9Scheduler3getEv@plt
 213      E7800000 
 214              	.LVL13:
 215              		.loc 1 53 18
 216 012c 97070000 		sd	a0,.LANCHOR0,a5
 216      23B0A700 
  54:src/PCB.cpp   ****     PCB::running->setState(PCB::RUNNING);
 217              		.loc 1 54 5 is_stmt 1
 218              	.LVL14:
 219              	.LBB15:
 220              	.LBB16:
  34:src/../h/PCB.hpp ****     void setState(State s) {state = s;}
 221              		.loc 2 34 29
 222              		.loc 2 34 35 is_stmt 0
 223 0134 93071000 		li	a5,1
 224 0138 232CF502 		sw	a5,56(a0)
 225              	.LVL15:
 226              	.LBE16:
 227              	.LBE15:
  55:src/PCB.cpp   ****     //Riscv::printString("Switching context...\n");
  56:src/PCB.cpp   **** 
  57:src/PCB.cpp   ****     if(PCB::running->systemThread)
 228              		.loc 1 57 5 is_stmt 1
 229              		.loc 1 57 22 is_stmt 0
 230 013c 83470500 		lbu	a5,0(a0)
GAS LISTING /tmp/ccR0DM5a.s 			page 7


 231              		.loc 1 57 5
 232 0140 63800704 		beqz	a5,.L11
  58:src/PCB.cpp   ****         Riscv::ms_sstatus(Riscv::SSTATUS_SPP);
 233              		.loc 1 58 9 is_stmt 1
 234              	.LVL16:
 235              	.LBB17:
 236              	.LBB18:
 237              		.file 3 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 4/27/22.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_0_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_0_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** class Riscv
  11:src/../h/Riscv.hpp **** {
  12:src/../h/Riscv.hpp **** private:
  13:src/../h/Riscv.hpp **** 
  14:src/../h/Riscv.hpp **** public:
  15:src/../h/Riscv.hpp ****     static void kernelMain();
  16:src/../h/Riscv.hpp **** 
  17:src/../h/Riscv.hpp ****     static void initSystem();
  18:src/../h/Riscv.hpp ****     static void endSystem();
  19:src/../h/Riscv.hpp **** 
  20:src/../h/Riscv.hpp ****     static void userMainWrapper(void* p);
  21:src/../h/Riscv.hpp **** 
  22:src/../h/Riscv.hpp ****     static void enableInterrupts();
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp ****     static void disableInterrupts();
  25:src/../h/Riscv.hpp **** 
  26:src/../h/Riscv.hpp ****     static void printString(char const *string);
  27:src/../h/Riscv.hpp **** 
  28:src/../h/Riscv.hpp ****     static void printInteger(uint64 num);
  29:src/../h/Riscv.hpp **** 
  30:src/../h/Riscv.hpp ****     static void pushRegisters();
  31:src/../h/Riscv.hpp ****     static void popRegisters();
  32:src/../h/Riscv.hpp **** 
  33:src/../h/Riscv.hpp ****     static uint64 r_scause();
  34:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  35:src/../h/Riscv.hpp **** 
  36:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  37:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
  38:src/../h/Riscv.hpp **** 
  39:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  40:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  41:src/../h/Riscv.hpp **** 
  42:src/../h/Riscv.hpp ****     static uint64 r_stval();
  43:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  44:src/../h/Riscv.hpp **** 
  45:src/../h/Riscv.hpp ****     enum BitMaskSip
  46:src/../h/Riscv.hpp ****     {
  47:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  48:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  49:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9),
GAS LISTING /tmp/ccR0DM5a.s 			page 8


  50:src/../h/Riscv.hpp ****     };
  51:src/../h/Riscv.hpp **** 
  52:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  53:src/../h/Riscv.hpp **** 
  54:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  55:src/../h/Riscv.hpp **** 
  56:src/../h/Riscv.hpp ****     static uint64 r_sip();
  57:src/../h/Riscv.hpp **** 
  58:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  59:src/../h/Riscv.hpp **** 
  60:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  61:src/../h/Riscv.hpp ****     {
  62:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  63:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  64:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  65:src/../h/Riscv.hpp ****     };
  66:src/../h/Riscv.hpp **** 
  67:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  68:src/../h/Riscv.hpp **** 
  69:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  72:src/../h/Riscv.hpp **** 
  73:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  74:src/../h/Riscv.hpp **** 
  75:src/../h/Riscv.hpp ****     static void popSppSpie();
  76:src/../h/Riscv.hpp **** 
  77:src/../h/Riscv.hpp ****     static void supervisorTrap();
  78:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  79:src/../h/Riscv.hpp **** 
  80:src/../h/Riscv.hpp ****     static const uint64 bntOne = 1UL << 63;;
  81:src/../h/Riscv.hpp ****     static const uint64 bntZero = 0UL;
  82:src/../h/Riscv.hpp ****     static const uint64 timerInterrupt = bntOne + 1UL;
  83:src/../h/Riscv.hpp ****     static const uint64 hwInterrupt = bntOne + 9UL;
  84:src/../h/Riscv.hpp ****     static const uint64 operationInterrupt = bntZero + 2UL;
  85:src/../h/Riscv.hpp ****     static const uint64 addrReadInterrupt = bntZero + 5UL;
  86:src/../h/Riscv.hpp ****     static const uint64 addrWriteInterrupt = bntZero + 7UL;
  87:src/../h/Riscv.hpp ****     static const uint64 ecallUserInterrupt = bntZero + 8UL;
  88:src/../h/Riscv.hpp ****     static const uint64 ecallSystemInterupt = bntZero + 9UL;
  89:src/../h/Riscv.hpp **** };
  90:src/../h/Riscv.hpp **** 
  91:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause() {
  92:src/../h/Riscv.hpp ****     uint64 volatile scause;
  93:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
  94:src/../h/Riscv.hpp ****     return scause;
  95:src/../h/Riscv.hpp **** }
  96:src/../h/Riscv.hpp **** 
  97:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
  98:src/../h/Riscv.hpp ****     __asm__ volatile("csrw scause, %0" : :"r"(scause));
  99:src/../h/Riscv.hpp **** }
 100:src/../h/Riscv.hpp **** 
 101:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc() {
 102:src/../h/Riscv.hpp ****     uint64 volatile sepc;
 103:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 104:src/../h/Riscv.hpp ****     return sepc;
 105:src/../h/Riscv.hpp **** }
 106:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/ccR0DM5a.s 			page 9


 107:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
 108:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sepc, %0" : :"r"(sepc));
 109:src/../h/Riscv.hpp **** }
 110:src/../h/Riscv.hpp **** 
 111:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec() {
 112:src/../h/Riscv.hpp ****     uint64 volatile stvec;
 113:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, stvec" : "=r"(stvec));
 114:src/../h/Riscv.hpp ****     return stvec;
 115:src/../h/Riscv.hpp **** }
 116:src/../h/Riscv.hpp **** 
 117:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 118:src/../h/Riscv.hpp ****     __asm__ volatile("csrw stvec, %0" : :"r"(stvec));
 119:src/../h/Riscv.hpp **** }
 120:src/../h/Riscv.hpp **** 
 121:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stval() {
 122:src/../h/Riscv.hpp ****     uint64 volatile stval;
 123:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, stval" : "=r"(stval));
 124:src/../h/Riscv.hpp ****     return stval;
 125:src/../h/Riscv.hpp **** }
 126:src/../h/Riscv.hpp **** 
 127:src/../h/Riscv.hpp **** inline void Riscv::w_stval(uint64 stval) {
 128:src/../h/Riscv.hpp ****     __asm__ volatile("csrw stval, %0" : :"r"(stval));
 129:src/../h/Riscv.hpp **** }
 130:src/../h/Riscv.hpp **** 
 131:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 132:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sip, %0" : :"r"(mask));
 133:src/../h/Riscv.hpp **** }
 134:src/../h/Riscv.hpp **** 
 135:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 136:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sip, %0" : :"r"(mask));
 137:src/../h/Riscv.hpp **** }
 138:src/../h/Riscv.hpp **** 
 139:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip() {
 140:src/../h/Riscv.hpp ****     uint64 volatile sip;
 141:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sip" : "=r"(sip));
 142:src/../h/Riscv.hpp ****     return sip;
 143:src/../h/Riscv.hpp **** }
 144:src/../h/Riscv.hpp **** 
 145:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 146:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sip, %0" : :"r"(sip));
 147:src/../h/Riscv.hpp **** }
 148:src/../h/Riscv.hpp **** 
 149:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 150:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sstatus, %0" : :"r"(mask));
 238              		.loc 3 150 5
 239              		.loc 3 150 54 is_stmt 0
 240 0144 93070010 		li	a5,256
 241              	#APP
 242              	# 150 "src/../h/Riscv.hpp" 1
 151              	}
 243              		csrs sstatus, a5
 244              	# 0 "" 2
 245              	.LVL17:
 246              	#NO_APP
 247              	.L12:
 248              	.LBE18:
 249              	.LBE17:
GAS LISTING /tmp/ccR0DM5a.s 			page 10


  59:src/PCB.cpp   ****     else
  60:src/PCB.cpp   ****         Riscv::ms_sstatus(Riscv::SSTATUS_SPP);
  61:src/PCB.cpp   **** 
  62:src/PCB.cpp   **** 
  63:src/PCB.cpp   ****     PCB::contextSwitch(&old->context, &running->context);
 250              		.loc 1 63 5 is_stmt 1
 251              		.loc 1 63 23 is_stmt 0
 252 014c 93050504 		addi	a1,a0,64
 253 0150 13850404 		addi	a0,s1,64
 254 0154 97000000 		call	_ZN3PCB13contextSwitchEPNS_7ContextES1_@plt
 254      E7800000 
 255              	.LVL18:
  64:src/PCB.cpp   **** }
 256              		.loc 1 64 1
 257 015c 83308101 		ld	ra,24(sp)
 258              		.cfi_remember_state
 259              		.cfi_restore 1
 260 0160 03340101 		ld	s0,16(sp)
 261              		.cfi_restore 8
 262              		.cfi_def_cfa 2, 32
 263 0164 83348100 		ld	s1,8(sp)
 264              		.cfi_restore 9
 265              	.LVL19:
 266 0168 13010102 		addi	sp,sp,32
 267              		.cfi_def_cfa_offset 0
 268 016c 67800000 		jr	ra
 269              	.LVL20:
 270              	.L14:
 271              		.cfi_restore_state
  52:src/PCB.cpp   ****     PCB::running = Scheduler::get();
 272              		.loc 1 52 9 is_stmt 1
  52:src/PCB.cpp   ****     PCB::running = Scheduler::get();
 273              		.loc 1 52 23 is_stmt 0
 274 0170 13850400 		mv	a0,s1
 275 0174 97000000 		call	_ZN9Scheduler3putEP3PCB@plt
 275      E7800000 
 276              	.LVL21:
 277 017c 6FF09FFA 		j	.L10
 278              	.L11:
  60:src/PCB.cpp   **** 
 279              		.loc 1 60 9 is_stmt 1
 280              	.LVL22:
 281              	.LBB19:
 282              	.LBB20:
 150:src/../h/Riscv.hpp **** }
 283              		.loc 3 150 5
 150:src/../h/Riscv.hpp **** }
 284              		.loc 3 150 54 is_stmt 0
 285 0180 93070010 		li	a5,256
 286              	#APP
 287              	# 150 "src/../h/Riscv.hpp" 1
 288              		csrs sstatus, a5
 289              	# 0 "" 2
 290              		.loc 3 151 1
 291              	#NO_APP
 292 0188 6FF05FFC 		j	.L12
 293              	.LBE20:
GAS LISTING /tmp/ccR0DM5a.s 			page 11


 294              	.LBE19:
 295              		.cfi_endproc
 296              	.LFE27:
 298              		.align	2
 299              		.globl	_ZN3PCBnwEm
 301              	_ZN3PCBnwEm:
 302              	.LFB28:
  65:src/PCB.cpp   **** 
  66:src/PCB.cpp   **** void *PCB::operator new(size_t size) {
 303              		.loc 1 66 38 is_stmt 1
 304              		.cfi_startproc
 305              	.LVL23:
 306 018c 130101FF 		addi	sp,sp,-16
 307              		.cfi_def_cfa_offset 16
 308 0190 23341100 		sd	ra,8(sp)
 309 0194 23308100 		sd	s0,0(sp)
 310              		.cfi_offset 1, -8
 311              		.cfi_offset 8, -16
 312 0198 13040101 		addi	s0,sp,16
 313              		.cfi_def_cfa 8, 0
  67:src/PCB.cpp   ****     return kmalloc(size);
 314              		.loc 1 67 5
 315              		.loc 1 67 19 is_stmt 0
 316 019c 97000000 		call	_Z7kmallocm@plt
 316      E7800000 
 317              	.LVL24:
  68:src/PCB.cpp   **** }
 318              		.loc 1 68 1
 319 01a4 83308100 		ld	ra,8(sp)
 320              		.cfi_restore 1
 321 01a8 03340100 		ld	s0,0(sp)
 322              		.cfi_restore 8
 323              		.cfi_def_cfa 2, 16
 324 01ac 13010101 		addi	sp,sp,16
 325              		.cfi_def_cfa_offset 0
 326 01b0 67800000 		jr	ra
 327              		.cfi_endproc
 328              	.LFE28:
 330              		.align	2
 331              		.globl	_ZN3PCBdlEPv
 333              	_ZN3PCBdlEPv:
 334              	.LFB29:
  69:src/PCB.cpp   **** 
  70:src/PCB.cpp   **** void PCB::operator delete(void *p) {
 335              		.loc 1 70 36 is_stmt 1
 336              		.cfi_startproc
 337              	.LVL25:
 338 01b4 130101FF 		addi	sp,sp,-16
 339              		.cfi_def_cfa_offset 16
 340 01b8 23341100 		sd	ra,8(sp)
 341 01bc 23308100 		sd	s0,0(sp)
 342              		.cfi_offset 1, -8
 343              		.cfi_offset 8, -16
 344 01c0 13040101 		addi	s0,sp,16
 345              		.cfi_def_cfa 8, 0
  71:src/PCB.cpp   ****     kfree(p);
 346              		.loc 1 71 5
GAS LISTING /tmp/ccR0DM5a.s 			page 12


 347              		.loc 1 71 10 is_stmt 0
 348 01c4 97000000 		call	_Z5kfreePv@plt
 348      E7800000 
 349              	.LVL26:
  72:src/PCB.cpp   **** }
 350              		.loc 1 72 1
 351 01cc 83308100 		ld	ra,8(sp)
 352              		.cfi_restore 1
 353 01d0 03340100 		ld	s0,0(sp)
 354              		.cfi_restore 8
 355              		.cfi_def_cfa 2, 16
 356 01d4 13010101 		addi	sp,sp,16
 357              		.cfi_def_cfa_offset 0
 358 01d8 67800000 		jr	ra
 359              		.cfi_endproc
 360              	.LFE29:
 362              		.align	2
 363              		.globl	_ZN3PCBD2Ev
 365              	_ZN3PCBD2Ev:
 366              	.LFB31:
  73:src/PCB.cpp   **** 
  74:src/PCB.cpp   **** PCB::~PCB() {
 367              		.loc 1 74 1 is_stmt 1
 368              		.cfi_startproc
 369              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 370              		.cfi_lsda 0x1b,.LLSDA31
 371              	.LVL27:
 372 01dc 130101FF 		addi	sp,sp,-16
 373              		.cfi_def_cfa_offset 16
 374 01e0 23341100 		sd	ra,8(sp)
 375 01e4 23308100 		sd	s0,0(sp)
 376              		.cfi_offset 1, -8
 377              		.cfi_offset 8, -16
 378 01e8 13040101 		addi	s0,sp,16
 379              		.cfi_def_cfa 8, 0
 380              	.LBB21:
  75:src/PCB.cpp   ****     kfree(beginSP);
 381              		.loc 1 75 5
 382              		.loc 1 75 10 is_stmt 0
 383 01ec 03350503 		ld	a0,48(a0)
 384              	.LVL28:
 385 01f0 97000000 		call	_Z5kfreePv@plt
 385      E7800000 
 386              	.LVL29:
 387              	.LBE21:
  76:src/PCB.cpp   **** }
 388              		.loc 1 76 1
 389 01f8 83308100 		ld	ra,8(sp)
 390              		.cfi_restore 1
 391 01fc 03340100 		ld	s0,0(sp)
 392              		.cfi_restore 8
 393              		.cfi_def_cfa 2, 16
 394 0200 13010101 		addi	sp,sp,16
 395              		.cfi_def_cfa_offset 0
 396 0204 67800000 		jr	ra
 397              		.cfi_endproc
 398              	.LFE31:
GAS LISTING /tmp/ccR0DM5a.s 			page 13


 399              		.globl	__gxx_personality_v0
 400              		.section	.gcc_except_table,"a",@progbits
 401              	.LLSDA31:
 402 0000 FF       		.byte	0xff
 403 0001 FF       		.byte	0xff
 404 0002 03       		.byte	0x3
 405 0003 00       		.byte	0
 406              		.text
 408              		.globl	_ZN3PCBD1Ev
 409              		.set	_ZN3PCBD1Ev,_ZN3PCBD2Ev
 410              		.align	2
 411              		.globl	_ZN3PCB10initializeEv
 413              	_ZN3PCB10initializeEv:
 414              	.LFB33:
  77:src/PCB.cpp   **** 
  78:src/PCB.cpp   **** void PCB::initialize()
  79:src/PCB.cpp   **** {
 415              		.loc 1 79 1 is_stmt 1
 416              		.cfi_startproc
 417              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 418              		.cfi_lsda 0x1b,.LLSDA33
 419 0208 130101FE 		addi	sp,sp,-32
 420              		.cfi_def_cfa_offset 32
 421 020c 233C1100 		sd	ra,24(sp)
 422 0210 23388100 		sd	s0,16(sp)
 423 0214 23349100 		sd	s1,8(sp)
 424 0218 23302101 		sd	s2,0(sp)
 425              		.cfi_offset 1, -8
 426              		.cfi_offset 8, -16
 427              		.cfi_offset 9, -24
 428              		.cfi_offset 18, -32
 429 021c 13040102 		addi	s0,sp,32
 430              		.cfi_def_cfa 8, 0
  80:src/PCB.cpp   ****     PCB* mainSystem = new PCB(0, 0, 0, 0);
 431              		.loc 1 80 5
 432              		.loc 1 80 41 is_stmt 0
 433 0220 13050005 		li	a0,80
 434              	.LEHB0:
 435 0224 97000000 		call	_ZN3PCBnwEm
 435      E7800000 
 436              	.LVL30:
 437              	.LEHE0:
 438 022c 93040500 		mv	s1,a0
 439 0230 13070000 		li	a4,0
 440 0234 93060000 		li	a3,0
 441 0238 13060000 		li	a2,0
 442 023c 93050000 		li	a1,0
 443              	.LEHB1:
 444 0240 97000000 		call	_ZN3PCBC1EPFvPvES0_S0_m
 444      E7800000 
 445              	.LVL31:
 446              	.LEHE1:
  81:src/PCB.cpp   ****     mainSystem->systemThread = true;
 447              		.loc 1 81 5 is_stmt 1 discriminator 2
 448              		.loc 1 81 30 is_stmt 0 discriminator 2
 449 0248 93071000 		li	a5,1
 450 024c 2380F400 		sb	a5,0(s1)
GAS LISTING /tmp/ccR0DM5a.s 			page 14


  82:src/PCB.cpp   ****     PCB::running = Scheduler::get();
 451              		.loc 1 82 5 is_stmt 1 discriminator 2
 452              	.LEHB2:
 453              		.loc 1 82 34 is_stmt 0 discriminator 2
 454 0250 97000000 		call	_ZN9Scheduler3getEv@plt
 454      E7800000 
 455              	.LVL32:
 456              	.LEHE2:
 457              		.loc 1 82 18 discriminator 2
 458 0258 97070000 		sd	a0,.LANCHOR0,a5
 458      23B0A700 
  83:src/PCB.cpp   ****     PCB::running->setState(PCB::RUNNING);
 459              		.loc 1 83 5 is_stmt 1 discriminator 2
 460              	.LVL33:
 461              	.LBB22:
 462              	.LBB23:
 463              		.loc 2 34 29 discriminator 2
 464              		.loc 2 34 35 is_stmt 0 discriminator 2
 465 0260 93071000 		li	a5,1
 466 0264 232CF502 		sw	a5,56(a0)
 467              	.LVL34:
 468              	.LBE23:
 469              	.LBE22:
  84:src/PCB.cpp   **** }
 470              		.loc 1 84 1 discriminator 2
 471 0268 83308101 		ld	ra,24(sp)
 472              		.cfi_remember_state
 473              		.cfi_restore 1
 474 026c 03340101 		ld	s0,16(sp)
 475              		.cfi_restore 8
 476              		.cfi_def_cfa 2, 32
 477 0270 83348100 		ld	s1,8(sp)
 478              		.cfi_restore 9
 479              	.LVL35:
 480 0274 03390100 		ld	s2,0(sp)
 481              		.cfi_restore 18
 482 0278 13010102 		addi	sp,sp,32
 483              		.cfi_def_cfa_offset 0
 484 027c 67800000 		jr	ra
 485              	.L23:
 486              		.cfi_restore_state
 487 0280 13090500 		mv	s2,a0
  80:src/PCB.cpp   ****     mainSystem->systemThread = true;
 488              		.loc 1 80 41
 489 0284 13850400 		mv	a0,s1
 490 0288 97000000 		call	_ZN3PCBdlEPv
 490      E7800000 
 491              	.LVL36:
 492 0290 13050900 		mv	a0,s2
 493              	.LEHB3:
 494 0294 97000000 		call	_Unwind_Resume@plt
 494      E7800000 
 495              	.LVL37:
 496              	.LEHE3:
 497              		.cfi_endproc
 498              	.LFE33:
 499              		.section	.gcc_except_table
GAS LISTING /tmp/ccR0DM5a.s 			page 15


 500              	.LLSDA33:
 501 0004 FF       		.byte	0xff
 502 0005 FF       		.byte	0xff
 503 0006 03       		.byte	0x3
 504 0007 34       		.byte	0x34
 505 0008 00000000 		.4byte	.LEHB0-.LFB33
 506 000c 00000000 		.4byte	.LEHE0-.LEHB0
 507 0010 00000000 		.4byte	0
 508 0014 00       		.byte	0
 509 0015 00000000 		.4byte	.LEHB1-.LFB33
 510 0019 00000000 		.4byte	.LEHE1-.LEHB1
 511 001d 00000000 		.4byte	.L23-.LFB33
 512 0021 00       		.byte	0
 513 0022 00000000 		.4byte	.LEHB2-.LFB33
 514 0026 00000000 		.4byte	.LEHE2-.LEHB2
 515 002a 00000000 		.4byte	0
 516 002e 00       		.byte	0
 517 002f 00000000 		.4byte	.LEHB3-.LFB33
 518 0033 00000000 		.4byte	.LEHE3-.LEHB3
 519 0037 00000000 		.4byte	0
 520 003b 00       		.byte	0
 521              		.text
 523              		.align	2
 524              		.globl	_ZN3PCB10isFinishedEv
 526              	_ZN3PCB10isFinishedEv:
 527              	.LFB34:
  85:src/PCB.cpp   **** 
  86:src/PCB.cpp   **** bool PCB::isFinished() {
 528              		.loc 1 86 24 is_stmt 1
 529              		.cfi_startproc
 530              	.LVL38:
 531 029c 130101FF 		addi	sp,sp,-16
 532              		.cfi_def_cfa_offset 16
 533 02a0 23348100 		sd	s0,8(sp)
 534              		.cfi_offset 8, -8
 535 02a4 13040101 		addi	s0,sp,16
 536              		.cfi_def_cfa 8, 0
  87:src/PCB.cpp   ****     return state == PCB::FINISHED;
 537              		.loc 1 87 5
 538              		.loc 1 87 12 is_stmt 0
 539 02a8 03258503 		lw	a0,56(a0)
 540              	.LVL39:
 541              		.loc 1 87 26
 542 02ac 1305D5FF 		addi	a0,a0,-3
  88:src/PCB.cpp   **** }
 543              		.loc 1 88 1
 544 02b0 13351500 		seqz	a0,a0
 545 02b4 03348100 		ld	s0,8(sp)
 546              		.cfi_restore 8
 547              		.cfi_def_cfa 2, 16
 548 02b8 13010101 		addi	sp,sp,16
 549              		.cfi_def_cfa_offset 0
 550 02bc 67800000 		jr	ra
 551              		.cfi_endproc
 552              	.LFE34:
 554              		.globl	_ZN3PCB16timeSliceCounterE
 555              		.globl	_ZN3PCB7runningE
GAS LISTING /tmp/ccR0DM5a.s 			page 16


 556              		.bss
 557              		.align	3
 558              		.set	.LANCHOR0,. + 0
 561              	_ZN3PCB7runningE:
 562 0000 00000000 		.zero	8
 562      00000000 
 565              	_ZN3PCB16timeSliceCounterE:
 566 0008 00000000 		.zero	8
 566      00000000 
 567              		.text
 568              	.Letext0:
 569              		.file 4 "src/../h/../lib/hw.h"
 570              		.file 5 "src/../h/Scheduler.hpp"
 571              		.file 6 "src/../h/MemoryAllocator.hpp"
 572              		.file 7 "src/../h/syscall_c.h"
 3779              		.align	3
 3782              	DW.ref.__gxx_personality_v0:
 3783 0000 00000000 		.dword	__gxx_personality_v0
 3783      00000000 
 3784              		.ident	"GCC: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0"
 3785              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/ccR0DM5a.s 			page 17


DEFINED SYMBOLS
                            *ABS*:0000000000000000 PCB.cpp
     /tmp/ccR0DM5a.s:14     .text:0000000000000000 _ZN3PCB6runnerEv
     /tmp/ccR0DM5a.s:18     .text:0000000000000000 .L0 
     /tmp/ccR0DM5a.s:19     .text:0000000000000000 .L0 
     /tmp/ccR0DM5a.s:20     .text:0000000000000004 .L0 
     /tmp/ccR0DM5a.s:23     .text:000000000000000c .L0 
     /tmp/ccR0DM5a.s:24     .text:000000000000000c .L0 
     /tmp/ccR0DM5a.s:26     .text:0000000000000010 .L0 
     /tmp/ccR0DM5a.s:28     .text:0000000000000010 .L0 
     /tmp/ccR0DM5a.s:29     .text:0000000000000010 .L0 
     /tmp/ccR0DM5a.s:33     .text:0000000000000020 .L0 
     /tmp/ccR0DM5a.s:34     .text:0000000000000020 .L0 
     /tmp/ccR0DM5a.s:37     .text:0000000000000028 .L0 
     /tmp/ccR0DM5a.s:38     .text:0000000000000028 .L0 
     /tmp/ccR0DM5a.s:41     .text:0000000000000034 .L0 
     /tmp/ccR0DM5a.s:45     .text:000000000000003c .L0 
     /tmp/ccR0DM5a.s:46     .text:000000000000003c .L0 
     /tmp/ccR0DM5a.s:49     .text:0000000000000044 .L0 
     /tmp/ccR0DM5a.s:50     .text:0000000000000048 .L0 
     /tmp/ccR0DM5a.s:52     .text:000000000000004c .L0 
     /tmp/ccR0DM5a.s:53     .text:000000000000004c .L0 
     /tmp/ccR0DM5a.s:55     .text:0000000000000050 .L0 
     /tmp/ccR0DM5a.s:57     .text:0000000000000054 .L0 
     /tmp/ccR0DM5a.s:63     .text:0000000000000054 _ZN3PCBC2EPFvPvES0_S0_m
     /tmp/ccR0DM5a.s:66     .text:0000000000000054 .L0 
     /tmp/ccR0DM5a.s:68     .text:0000000000000054 .L0 
     /tmp/ccR0DM5a.s:69     .text:0000000000000058 .L0 
     /tmp/ccR0DM5a.s:73     .text:0000000000000064 .L0 
     /tmp/ccR0DM5a.s:74     .text:0000000000000064 .L0 
     /tmp/ccR0DM5a.s:75     .text:0000000000000064 .L0 
     /tmp/ccR0DM5a.s:77     .text:0000000000000068 .L0 
     /tmp/ccR0DM5a.s:81     .text:000000000000006c .L0 
     /tmp/ccR0DM5a.s:88     .text:0000000000000084 .L0 
     /tmp/ccR0DM5a.s:92     .text:000000000000008c .L0 
     /tmp/ccR0DM5a.s:96     .text:000000000000009c .L0 
     /tmp/ccR0DM5a.s:97     .text:000000000000009c .L0 
     /tmp/ccR0DM5a.s:100    .text:00000000000000a4 .L0 
     /tmp/ccR0DM5a.s:101    .text:00000000000000a4 .L0 
     /tmp/ccR0DM5a.s:104    .text:00000000000000a8 .L0 
     /tmp/ccR0DM5a.s:105    .text:00000000000000ac .L0 
     /tmp/ccR0DM5a.s:107    .text:00000000000000b0 .L0 
     /tmp/ccR0DM5a.s:108    .text:00000000000000b0 .L0 
     /tmp/ccR0DM5a.s:110    .text:00000000000000b4 .L0 
     /tmp/ccR0DM5a.s:113    .text:00000000000000b8 .L0 
     /tmp/ccR0DM5a.s:115    .text:00000000000000bc .L0 
     /tmp/ccR0DM5a.s:63     .text:0000000000000054 _ZN3PCBC1EPFvPvES0_S0_m
     /tmp/ccR0DM5a.s:123    .text:00000000000000bc _ZN3PCB5sleepEm
     /tmp/ccR0DM5a.s:126    .text:00000000000000bc .L0 
     /tmp/ccR0DM5a.s:128    .text:00000000000000bc .L0 
     /tmp/ccR0DM5a.s:129    .text:00000000000000c0 .L0 
     /tmp/ccR0DM5a.s:131    .text:00000000000000c4 .L0 
     /tmp/ccR0DM5a.s:133    .text:00000000000000c8 .L0 
     /tmp/ccR0DM5a.s:135    .text:00000000000000c8 .L0 
     /tmp/ccR0DM5a.s:136    .text:00000000000000cc .L0 
     /tmp/ccR0DM5a.s:137    .text:00000000000000cc .L0 
     /tmp/ccR0DM5a.s:139    .text:00000000000000d0 .L0 
GAS LISTING /tmp/ccR0DM5a.s 			page 18


     /tmp/ccR0DM5a.s:141    .text:00000000000000d4 .L0 
     /tmp/ccR0DM5a.s:147    .text:00000000000000d4 _ZN3PCB5startEv
     /tmp/ccR0DM5a.s:150    .text:00000000000000d4 .L0 
     /tmp/ccR0DM5a.s:152    .text:00000000000000d4 .L0 
     /tmp/ccR0DM5a.s:153    .text:00000000000000d8 .L0 
     /tmp/ccR0DM5a.s:156    .text:00000000000000e0 .L0 
     /tmp/ccR0DM5a.s:157    .text:00000000000000e0 .L0 
     /tmp/ccR0DM5a.s:159    .text:00000000000000e4 .L0 
     /tmp/ccR0DM5a.s:161    .text:00000000000000e4 .L0 
     /tmp/ccR0DM5a.s:162    .text:00000000000000e4 .L0 
     /tmp/ccR0DM5a.s:165    .text:00000000000000ec .L0 
     /tmp/ccR0DM5a.s:166    .text:00000000000000f0 .L0 
     /tmp/ccR0DM5a.s:168    .text:00000000000000f4 .L0 
     /tmp/ccR0DM5a.s:169    .text:00000000000000f4 .L0 
     /tmp/ccR0DM5a.s:171    .text:00000000000000f8 .L0 
     /tmp/ccR0DM5a.s:173    .text:00000000000000fc .L0 
     /tmp/ccR0DM5a.s:179    .text:00000000000000fc _ZN3PCB8dispatchEv
     /tmp/ccR0DM5a.s:182    .text:00000000000000fc .L0 
     /tmp/ccR0DM5a.s:183    .text:00000000000000fc .L0 
     /tmp/ccR0DM5a.s:184    .text:0000000000000100 .L0 
     /tmp/ccR0DM5a.s:188    .text:000000000000010c .L0 
     /tmp/ccR0DM5a.s:189    .text:000000000000010c .L0 
     /tmp/ccR0DM5a.s:190    .text:000000000000010c .L0 
     /tmp/ccR0DM5a.s:192    .text:0000000000000110 .L0 
     /tmp/ccR0DM5a.s:194    .text:0000000000000110 .L0 
     /tmp/ccR0DM5a.s:195    .text:0000000000000110 .L0 
     /tmp/ccR0DM5a.s:201    .text:0000000000000118 .L0 
     /tmp/ccR0DM5a.s:202    .text:0000000000000118 .L0 
     /tmp/ccR0DM5a.s:203    .text:0000000000000118 .L0 
     /tmp/ccR0DM5a.s:208    .text:000000000000011c .L0 
     /tmp/ccR0DM5a.s:212    .text:0000000000000124 .L0 
     /tmp/ccR0DM5a.s:213    .text:0000000000000124 .L0 
     /tmp/ccR0DM5a.s:216    .text:000000000000012c .L0 
     /tmp/ccR0DM5a.s:221    .text:0000000000000134 .L0 
     /tmp/ccR0DM5a.s:222    .text:0000000000000134 .L0 
     /tmp/ccR0DM5a.s:223    .text:0000000000000134 .L0 
     /tmp/ccR0DM5a.s:229    .text:000000000000013c .L0 
     /tmp/ccR0DM5a.s:230    .text:000000000000013c .L0 
     /tmp/ccR0DM5a.s:232    .text:0000000000000140 .L0 
     /tmp/ccR0DM5a.s:238    .text:0000000000000144 .L0 
     /tmp/ccR0DM5a.s:239    .text:0000000000000144 .L0 
     /tmp/ccR0DM5a.s:240    .text:0000000000000144 .L0 
     /tmp/ccR0DM5a.s:251    .text:000000000000014c .L0 
     /tmp/ccR0DM5a.s:252    .text:000000000000014c .L0 
     /tmp/ccR0DM5a.s:257    .text:000000000000015c .L0 
     /tmp/ccR0DM5a.s:258    .text:0000000000000160 .L0 
     /tmp/ccR0DM5a.s:259    .text:0000000000000160 .L0 
     /tmp/ccR0DM5a.s:261    .text:0000000000000164 .L0 
     /tmp/ccR0DM5a.s:262    .text:0000000000000164 .L0 
     /tmp/ccR0DM5a.s:264    .text:0000000000000168 .L0 
     /tmp/ccR0DM5a.s:267    .text:000000000000016c .L0 
     /tmp/ccR0DM5a.s:271    .text:0000000000000170 .L0 
     /tmp/ccR0DM5a.s:273    .text:0000000000000170 .L0 
     /tmp/ccR0DM5a.s:274    .text:0000000000000170 .L0 
     /tmp/ccR0DM5a.s:283    .text:0000000000000180 .L0 
     /tmp/ccR0DM5a.s:284    .text:0000000000000180 .L0 
     /tmp/ccR0DM5a.s:285    .text:0000000000000180 .L0 
GAS LISTING /tmp/ccR0DM5a.s 			page 19


     /tmp/ccR0DM5a.s:292    .text:0000000000000188 .L0 
     /tmp/ccR0DM5a.s:295    .text:000000000000018c .L0 
     /tmp/ccR0DM5a.s:301    .text:000000000000018c _ZN3PCBnwEm
     /tmp/ccR0DM5a.s:304    .text:000000000000018c .L0 
     /tmp/ccR0DM5a.s:306    .text:000000000000018c .L0 
     /tmp/ccR0DM5a.s:307    .text:0000000000000190 .L0 
     /tmp/ccR0DM5a.s:310    .text:0000000000000198 .L0 
     /tmp/ccR0DM5a.s:311    .text:0000000000000198 .L0 
     /tmp/ccR0DM5a.s:313    .text:000000000000019c .L0 
     /tmp/ccR0DM5a.s:315    .text:000000000000019c .L0 
     /tmp/ccR0DM5a.s:316    .text:000000000000019c .L0 
     /tmp/ccR0DM5a.s:319    .text:00000000000001a4 .L0 
     /tmp/ccR0DM5a.s:320    .text:00000000000001a8 .L0 
     /tmp/ccR0DM5a.s:322    .text:00000000000001ac .L0 
     /tmp/ccR0DM5a.s:323    .text:00000000000001ac .L0 
     /tmp/ccR0DM5a.s:325    .text:00000000000001b0 .L0 
     /tmp/ccR0DM5a.s:327    .text:00000000000001b4 .L0 
     /tmp/ccR0DM5a.s:333    .text:00000000000001b4 _ZN3PCBdlEPv
     /tmp/ccR0DM5a.s:336    .text:00000000000001b4 .L0 
     /tmp/ccR0DM5a.s:338    .text:00000000000001b4 .L0 
     /tmp/ccR0DM5a.s:339    .text:00000000000001b8 .L0 
     /tmp/ccR0DM5a.s:342    .text:00000000000001c0 .L0 
     /tmp/ccR0DM5a.s:343    .text:00000000000001c0 .L0 
     /tmp/ccR0DM5a.s:345    .text:00000000000001c4 .L0 
     /tmp/ccR0DM5a.s:347    .text:00000000000001c4 .L0 
     /tmp/ccR0DM5a.s:348    .text:00000000000001c4 .L0 
     /tmp/ccR0DM5a.s:351    .text:00000000000001cc .L0 
     /tmp/ccR0DM5a.s:352    .text:00000000000001d0 .L0 
     /tmp/ccR0DM5a.s:354    .text:00000000000001d4 .L0 
     /tmp/ccR0DM5a.s:355    .text:00000000000001d4 .L0 
     /tmp/ccR0DM5a.s:357    .text:00000000000001d8 .L0 
     /tmp/ccR0DM5a.s:359    .text:00000000000001dc .L0 
     /tmp/ccR0DM5a.s:365    .text:00000000000001dc _ZN3PCBD2Ev
     /tmp/ccR0DM5a.s:368    .text:00000000000001dc .L0 
     /tmp/ccR0DM5a.s:3782   .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/ccR0DM5a.s:372    .text:00000000000001dc .L0 
     /tmp/ccR0DM5a.s:373    .text:00000000000001e0 .L0 
     /tmp/ccR0DM5a.s:376    .text:00000000000001e8 .L0 
     /tmp/ccR0DM5a.s:377    .text:00000000000001e8 .L0 
     /tmp/ccR0DM5a.s:379    .text:00000000000001ec .L0 
     /tmp/ccR0DM5a.s:382    .text:00000000000001ec .L0 
     /tmp/ccR0DM5a.s:383    .text:00000000000001ec .L0 
     /tmp/ccR0DM5a.s:389    .text:00000000000001f8 .L0 
     /tmp/ccR0DM5a.s:390    .text:00000000000001fc .L0 
     /tmp/ccR0DM5a.s:392    .text:0000000000000200 .L0 
     /tmp/ccR0DM5a.s:393    .text:0000000000000200 .L0 
     /tmp/ccR0DM5a.s:395    .text:0000000000000204 .L0 
     /tmp/ccR0DM5a.s:397    .text:0000000000000208 .L0 
     /tmp/ccR0DM5a.s:365    .text:00000000000001dc _ZN3PCBD1Ev
     /tmp/ccR0DM5a.s:413    .text:0000000000000208 _ZN3PCB10initializeEv
     /tmp/ccR0DM5a.s:416    .text:0000000000000208 .L0 
     /tmp/ccR0DM5a.s:419    .text:0000000000000208 .L0 
     /tmp/ccR0DM5a.s:420    .text:000000000000020c .L0 
     /tmp/ccR0DM5a.s:425    .text:000000000000021c .L0 
     /tmp/ccR0DM5a.s:426    .text:000000000000021c .L0 
     /tmp/ccR0DM5a.s:427    .text:000000000000021c .L0 
     /tmp/ccR0DM5a.s:428    .text:000000000000021c .L0 
GAS LISTING /tmp/ccR0DM5a.s 			page 20


     /tmp/ccR0DM5a.s:430    .text:0000000000000220 .L0 
     /tmp/ccR0DM5a.s:432    .text:0000000000000220 .L0 
     /tmp/ccR0DM5a.s:433    .text:0000000000000220 .L0 
     /tmp/ccR0DM5a.s:448    .text:0000000000000248 .L0 
     /tmp/ccR0DM5a.s:449    .text:0000000000000248 .L0 
     /tmp/ccR0DM5a.s:453    .text:0000000000000250 .L0 
     /tmp/ccR0DM5a.s:454    .text:0000000000000250 .L0 
     /tmp/ccR0DM5a.s:458    .text:0000000000000258 .L0 
     /tmp/ccR0DM5a.s:463    .text:0000000000000260 .L0 
     /tmp/ccR0DM5a.s:464    .text:0000000000000260 .L0 
     /tmp/ccR0DM5a.s:465    .text:0000000000000260 .L0 
     /tmp/ccR0DM5a.s:471    .text:0000000000000268 .L0 
     /tmp/ccR0DM5a.s:472    .text:000000000000026c .L0 
     /tmp/ccR0DM5a.s:473    .text:000000000000026c .L0 
     /tmp/ccR0DM5a.s:475    .text:0000000000000270 .L0 
     /tmp/ccR0DM5a.s:476    .text:0000000000000270 .L0 
     /tmp/ccR0DM5a.s:478    .text:0000000000000274 .L0 
     /tmp/ccR0DM5a.s:481    .text:0000000000000278 .L0 
     /tmp/ccR0DM5a.s:483    .text:000000000000027c .L0 
     /tmp/ccR0DM5a.s:486    .text:0000000000000280 .L0 
     /tmp/ccR0DM5a.s:489    .text:0000000000000284 .L0 
     /tmp/ccR0DM5a.s:497    .text:000000000000029c .L0 
     /tmp/ccR0DM5a.s:526    .text:000000000000029c _ZN3PCB10isFinishedEv
     /tmp/ccR0DM5a.s:529    .text:000000000000029c .L0 
     /tmp/ccR0DM5a.s:531    .text:000000000000029c .L0 
     /tmp/ccR0DM5a.s:532    .text:00000000000002a0 .L0 
     /tmp/ccR0DM5a.s:534    .text:00000000000002a4 .L0 
     /tmp/ccR0DM5a.s:536    .text:00000000000002a8 .L0 
     /tmp/ccR0DM5a.s:538    .text:00000000000002a8 .L0 
     /tmp/ccR0DM5a.s:539    .text:00000000000002a8 .L0 
     /tmp/ccR0DM5a.s:542    .text:00000000000002ac .L0 
     /tmp/ccR0DM5a.s:544    .text:00000000000002b0 .L0 
     /tmp/ccR0DM5a.s:546    .text:00000000000002b8 .L0 
     /tmp/ccR0DM5a.s:547    .text:00000000000002b8 .L0 
     /tmp/ccR0DM5a.s:549    .text:00000000000002bc .L0 
     /tmp/ccR0DM5a.s:551    .text:00000000000002c0 .L0 
     /tmp/ccR0DM5a.s:565    .bss:0000000000000008 _ZN3PCB16timeSliceCounterE
     /tmp/ccR0DM5a.s:561    .bss:0000000000000000 _ZN3PCB7runningE
     /tmp/ccR0DM5a.s:558    .bss:0000000000000000 .LANCHOR0
     /tmp/ccR0DM5a.s:573    .text:00000000000002c0 .L0 
     /tmp/ccR0DM5a.s:8      .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccR0DM5a.s:29     .text:0000000000000010 .L0 
     /tmp/ccR0DM5a.s:38     .text:0000000000000028 .L0 
     /tmp/ccR0DM5a.s:93     .text:0000000000000090 .L0 
     /tmp/ccR0DM5a.s:195    .text:0000000000000110 .L0 
     /tmp/ccR0DM5a.s:216    .text:000000000000012c .L0 
     /tmp/ccR0DM5a.s:458    .text:0000000000000258 .L0 
     /tmp/ccR0DM5a.s:270    .text:0000000000000170 .L14
     /tmp/ccR0DM5a.s:278    .text:0000000000000180 .L11
     /tmp/ccR0DM5a.s:210    .text:0000000000000124 .L10
     /tmp/ccR0DM5a.s:247    .text:000000000000014c .L12
     /tmp/ccR0DM5a.s:434    .text:0000000000000224 .LEHB0
     /tmp/ccR0DM5a.s:414    .text:0000000000000208 .LFB33
     /tmp/ccR0DM5a.s:437    .text:000000000000022c .LEHE0
     /tmp/ccR0DM5a.s:443    .text:0000000000000240 .LEHB1
     /tmp/ccR0DM5a.s:446    .text:0000000000000248 .LEHE1
     /tmp/ccR0DM5a.s:485    .text:0000000000000280 .L23
GAS LISTING /tmp/ccR0DM5a.s 			page 21


     /tmp/ccR0DM5a.s:452    .text:0000000000000250 .LEHB2
     /tmp/ccR0DM5a.s:456    .text:0000000000000258 .LEHE2
     /tmp/ccR0DM5a.s:493    .text:0000000000000294 .LEHB3
     /tmp/ccR0DM5a.s:496    .text:000000000000029c .LEHE3
     /tmp/ccR0DM5a.s:2081   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccR0DM5a.s:3448   .debug_str:0000000000000148 .LASF171
     /tmp/ccR0DM5a.s:3720   .debug_str:00000000000009ce .LASF172
     /tmp/ccR0DM5a.s:3710   .debug_str:0000000000000970 .LASF173
     /tmp/ccR0DM5a.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccR0DM5a.s:568    .text:00000000000002c0 .Letext0
     /tmp/ccR0DM5a.s:3410   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccR0DM5a.s:3534   .debug_str:0000000000000454 .LASF0
     /tmp/ccR0DM5a.s:3560   .debug_str:0000000000000527 .LASF1
     /tmp/ccR0DM5a.s:3648   .debug_str:00000000000007d1 .LASF2
     /tmp/ccR0DM5a.s:3656   .debug_str:000000000000080c .LASF4
     /tmp/ccR0DM5a.s:3548   .debug_str:00000000000004bb .LASF3
     /tmp/ccR0DM5a.s:3426   .debug_str:0000000000000061 .LASF5
     /tmp/ccR0DM5a.s:3630   .debug_str:0000000000000755 .LASF6
     /tmp/ccR0DM5a.s:3618   .debug_str:00000000000006fd .LASF7
     /tmp/ccR0DM5a.s:3554   .debug_str:00000000000004fc .LASF8
     /tmp/ccR0DM5a.s:3518   .debug_str:00000000000003d3 .LASF9
     /tmp/ccR0DM5a.s:3522   .debug_str:00000000000003ff .LASF10
     /tmp/ccR0DM5a.s:3464   .debug_str:0000000000000272 .LASF11
     /tmp/ccR0DM5a.s:3508   .debug_str:00000000000003a7 .LASF12
     /tmp/ccR0DM5a.s:3470   .debug_str:0000000000000294 .LASF13
     /tmp/ccR0DM5a.s:3462   .debug_str:0000000000000262 .LASF14
     /tmp/ccR0DM5a.s:3688   .debug_str:00000000000008fb .LASF15
     /tmp/ccR0DM5a.s:3502   .debug_str:0000000000000379 .LASF16
     /tmp/ccR0DM5a.s:3680   .debug_str:00000000000008aa .LASF17
     /tmp/ccR0DM5a.s:3696   .debug_str:000000000000091f .LASF80
     /tmp/ccR0DM5a.s:3456   .debug_str:0000000000000237 .LASF18
     /tmp/ccR0DM5a.s:3674   .debug_str:0000000000000889 .LASF19
     /tmp/ccR0DM5a.s:3468   .debug_str:000000000000028a .LASF20
     /tmp/ccR0DM5a.s:3446   .debug_str:000000000000013f .LASF21
     /tmp/ccR0DM5a.s:3622   .debug_str:0000000000000726 .LASF22
     /tmp/ccR0DM5a.s:3466   .debug_str:0000000000000281 .LASF23
     /tmp/ccR0DM5a.s:3690   .debug_str:0000000000000907 .LASF69
     /tmp/ccR0DM5a.s:3528   .debug_str:000000000000042b .LASF24
     /tmp/ccR0DM5a.s:3714   .debug_str:000000000000099b .LASF174
     /tmp/ccR0DM5a.s:3606   .debug_str:00000000000006a4 .LASF175
     /tmp/ccR0DM5a.s:3558   .debug_str:0000000000000522 .LASF25
     /tmp/ccR0DM5a.s:3762   .debug_str:0000000000000ae6 .LASF27
     /tmp/ccR0DM5a.s:3756   .debug_str:0000000000000ab6 .LASF26
     /tmp/ccR0DM5a.s:3704   .debug_str:0000000000000942 .LASF28
     /tmp/ccR0DM5a.s:3490   .debug_str:0000000000000334 .LASF51
     /tmp/ccR0DM5a.s:3434   .debug_str:00000000000000ac .LASF53
     /tmp/ccR0DM5a.s:3562   .debug_str:000000000000053a .LASF33
     /tmp/ccR0DM5a.s:3610   .debug_str:00000000000006bc .LASF35
     /tmp/ccR0DM5a.s:3698   .debug_str:0000000000000925 .LASF29
     /tmp/ccR0DM5a.s:3666   .debug_str:0000000000000843 .LASF30
     /tmp/ccR0DM5a.s:3564   .debug_str:0000000000000540 .LASF37
     /tmp/ccR0DM5a.s:3568   .debug_str:000000000000056b .LASF39
     /tmp/ccR0DM5a.s:3766   .debug_str:0000000000000b0a .LASF31
     /tmp/ccR0DM5a.s:3504   .debug_str:000000000000038f .LASF32
     /tmp/ccR0DM5a.s:3418   .debug_str:000000000000002a .LASF34
     /tmp/ccR0DM5a.s:3544   .debug_str:00000000000004a2 .LASF36
     /tmp/ccR0DM5a.s:3670   .debug_str:0000000000000865 .LASF38
GAS LISTING /tmp/ccR0DM5a.s 			page 22


     /tmp/ccR0DM5a.s:3588   .debug_str:000000000000060f .LASF40
     /tmp/ccR0DM5a.s:3654   .debug_str:0000000000000803 .LASF41
     /tmp/ccR0DM5a.s:3684   .debug_str:00000000000008d8 .LASF42
     /tmp/ccR0DM5a.s:3590   .debug_str:0000000000000622 .LASF43
     /tmp/ccR0DM5a.s:3414   .debug_str:000000000000000b .LASF44
     /tmp/ccR0DM5a.s:3744   .debug_str:0000000000000a5d .LASF45
     /tmp/ccR0DM5a.s:3616   .debug_str:00000000000006e3 .LASF46
     /tmp/ccR0DM5a.s:3678   .debug_str:000000000000089c .LASF47
     /tmp/ccR0DM5a.s:3632   .debug_str:000000000000075c .LASF48
     /tmp/ccR0DM5a.s:3486   .debug_str:0000000000000312 .LASF49
     /tmp/ccR0DM5a.s:3750   .debug_str:0000000000000a8e .LASF50
     /tmp/ccR0DM5a.s:3550   .debug_str:00000000000004cd .LASF57
     /tmp/ccR0DM5a.s:3676   .debug_str:0000000000000891 .LASF52
     /tmp/ccR0DM5a.s:3760   .debug_str:0000000000000ad0 .LASF54
     /tmp/ccR0DM5a.s:3692   .debug_str:000000000000090f .LASF55
     /tmp/ccR0DM5a.s:3478   .debug_str:00000000000002d9 .LASF56
     /tmp/ccR0DM5a.s:3662   .debug_str:000000000000082d .LASF58
     /tmp/ccR0DM5a.s:3708   .debug_str:0000000000000966 .LASF59
     /tmp/ccR0DM5a.s:3612   .debug_str:00000000000006cc .LASF60
     /tmp/ccR0DM5a.s:3754   .debug_str:0000000000000aa8 .LASF61
     /tmp/ccR0DM5a.s:3438   .debug_str:00000000000000da .LASF63
     /tmp/ccR0DM5a.s:3536   .debug_str:0000000000000461 .LASF62
     /tmp/ccR0DM5a.s:3454   .debug_str:000000000000020b .LASF64
     /tmp/ccR0DM5a.s:3742   .debug_str:0000000000000a56 .LASF176
     /tmp/ccR0DM5a.s:3452   .debug_str:00000000000001fa .LASF177
     /tmp/ccR0DM5a.s:3416   .debug_str:0000000000000025 .LASF65
     /tmp/ccR0DM5a.s:3724   .debug_str:00000000000009e3 .LASF66
     /tmp/ccR0DM5a.s:3572   .debug_str:000000000000059e .LASF67
     /tmp/ccR0DM5a.s:3492   .debug_str:000000000000033d .LASF68
     /tmp/ccR0DM5a.s:3712   .debug_str:0000000000000993 .LASF70
     /tmp/ccR0DM5a.s:3516   .debug_str:00000000000003c9 .LASF71
     /tmp/ccR0DM5a.s:3430   .debug_str:0000000000000082 .LASF178
     /tmp/ccR0DM5a.s:3758   .debug_str:0000000000000abc .LASF179
     /tmp/ccR0DM5a.s:3442   .debug_str:000000000000011a .LASF72
     /tmp/ccR0DM5a.s:3608   .debug_str:00000000000006a9 .LASF73
     /tmp/ccR0DM5a.s:3702   .debug_str:000000000000093a .LASF74
     /tmp/ccR0DM5a.s:3642   .debug_str:000000000000079d .LASF106
     /tmp/ccR0DM5a.s:3450   .debug_str:00000000000001f4 .LASF75
     /tmp/ccR0DM5a.s:3596   .debug_str:0000000000000646 .LASF76
     /tmp/ccR0DM5a.s:3668   .debug_str:0000000000000854 .LASF77
     /tmp/ccR0DM5a.s:3472   .debug_str:00000000000002a4 .LASF78
     /tmp/ccR0DM5a.s:3734   .debug_str:0000000000000a24 .LASF79
     /tmp/ccR0DM5a.s:3726   .debug_str:00000000000009e8 .LASF81
     /tmp/ccR0DM5a.s:3506   .debug_str:000000000000039b .LASF82
     /tmp/ccR0DM5a.s:3700   .debug_str:000000000000092d .LASF83
     /tmp/ccR0DM5a.s:3484   .debug_str:0000000000000306 .LASF84
     /tmp/ccR0DM5a.s:3530   .debug_str:0000000000000431 .LASF85
     /tmp/ccR0DM5a.s:3682   .debug_str:00000000000008c0 .LASF86
     /tmp/ccR0DM5a.s:3614   .debug_str:00000000000006d8 .LASF87
     /tmp/ccR0DM5a.s:3578   .debug_str:00000000000005b7 .LASF88
     /tmp/ccR0DM5a.s:3500   .debug_str:000000000000036f .LASF89
     /tmp/ccR0DM5a.s:3620   .debug_str:0000000000000710 .LASF90
     /tmp/ccR0DM5a.s:3580   .debug_str:00000000000005cf .LASF91
     /tmp/ccR0DM5a.s:3730   .debug_str:00000000000009fc .LASF92
     /tmp/ccR0DM5a.s:3460   .debug_str:0000000000000251 .LASF93
     /tmp/ccR0DM5a.s:3566   .debug_str:000000000000054d .LASF94
     /tmp/ccR0DM5a.s:3542   .debug_str:0000000000000490 .LASF95
GAS LISTING /tmp/ccR0DM5a.s 			page 23


     /tmp/ccR0DM5a.s:3474   .debug_str:00000000000002b5 .LASF96
     /tmp/ccR0DM5a.s:3748   .debug_str:0000000000000a82 .LASF97
     /tmp/ccR0DM5a.s:3436   .debug_str:00000000000000bf .LASF98
     /tmp/ccR0DM5a.s:3628   .debug_str:0000000000000748 .LASF99
     /tmp/ccR0DM5a.s:3428   .debug_str:0000000000000068 .LASF100
     /tmp/ccR0DM5a.s:3664   .debug_str:0000000000000835 .LASF101
     /tmp/ccR0DM5a.s:3672   .debug_str:000000000000086e .LASF102
     /tmp/ccR0DM5a.s:3592   .debug_str:0000000000000631 .LASF103
     /tmp/ccR0DM5a.s:3738   .debug_str:0000000000000a34 .LASF104
     /tmp/ccR0DM5a.s:3722   .debug_str:00000000000009da .LASF105
     /tmp/ccR0DM5a.s:3422   .debug_str:0000000000000042 .LASF107
     /tmp/ccR0DM5a.s:3772   .debug_str:0000000000000b31 .LASF108
     /tmp/ccR0DM5a.s:3602   .debug_str:0000000000000677 .LASF109
     /tmp/ccR0DM5a.s:3634   .debug_str:0000000000000768 .LASF110
     /tmp/ccR0DM5a.s:3636   .debug_str:000000000000076f .LASF111
     /tmp/ccR0DM5a.s:3598   .debug_str:000000000000065c .LASF112
     /tmp/ccR0DM5a.s:3556   .debug_str:000000000000050f .LASF113
     /tmp/ccR0DM5a.s:3740   .debug_str:0000000000000a4e .LASF114
     /tmp/ccR0DM5a.s:3706   .debug_str:0000000000000952 .LASF115
     /tmp/ccR0DM5a.s:3594   .debug_str:000000000000063e .LASF116
     /tmp/ccR0DM5a.s:3600   .debug_str:0000000000000663 .LASF117
     /tmp/ccR0DM5a.s:3584   .debug_str:00000000000005f5 .LASF118
     /tmp/ccR0DM5a.s:3638   .debug_str:0000000000000782 .LASF119
     /tmp/ccR0DM5a.s:3774   .debug_str:0000000000000b3a .LASF120
     /tmp/ccR0DM5a.s:3540   .debug_str:000000000000047c .LASF121
     /tmp/ccR0DM5a.s:3686   .debug_str:00000000000008f4 .LASF122
     /tmp/ccR0DM5a.s:3658   .debug_str:0000000000000813 .LASF123
     /tmp/ccR0DM5a.s:3660   .debug_str:0000000000000826 .LASF124
     /tmp/ccR0DM5a.s:3498   .debug_str:000000000000035c .LASF125
     /tmp/ccR0DM5a.s:3494   .debug_str:0000000000000343 .LASF126
     /tmp/ccR0DM5a.s:3432   .debug_str:000000000000009a .LASF127
     /tmp/ccR0DM5a.s:3538   .debug_str:0000000000000476 .LASF128
     /tmp/ccR0DM5a.s:3488   .debug_str:0000000000000322 .LASF129
     /tmp/ccR0DM5a.s:3412   .debug_str:0000000000000000 .LASF130
     /tmp/ccR0DM5a.s:3652   .debug_str:00000000000007eb .LASF131
     /tmp/ccR0DM5a.s:3646   .debug_str:00000000000007c6 .LASF132
     /tmp/ccR0DM5a.s:3764   .debug_str:0000000000000af2 .LASF133
     /tmp/ccR0DM5a.s:3736   .debug_str:0000000000000a2a .LASF134
     /tmp/ccR0DM5a.s:3746   .debug_str:0000000000000a6c .LASF135
     /tmp/ccR0DM5a.s:3732   .debug_str:0000000000000a1a .LASF136
     /tmp/ccR0DM5a.s:3582   .debug_str:00000000000005df .LASF137
     /tmp/ccR0DM5a.s:3526   .debug_str:0000000000000420 .LASF138
     /tmp/ccR0DM5a.s:3532   .debug_str:000000000000043c .LASF139
     /tmp/ccR0DM5a.s:3718   .debug_str:00000000000009bf .LASF140
     /tmp/ccR0DM5a.s:3520   .debug_str:00000000000003e3 .LASF141
     /tmp/ccR0DM5a.s:3626   .debug_str:0000000000000733 .LASF142
     /tmp/ccR0DM5a.s:3552   .debug_str:00000000000004da .LASF143
     /tmp/ccR0DM5a.s:3640   .debug_str:0000000000000796 .LASF144
     /tmp/ccR0DM5a.s:3420   .debug_str:000000000000003a .LASF145
     /tmp/ccR0DM5a.s:3768   .debug_str:0000000000000b17 .LASF146
     /tmp/ccR0DM5a.s:3716   .debug_str:00000000000009b3 .LASF147
     /tmp/ccR0DM5a.s:3444   .debug_str:000000000000012c .LASF148
     /tmp/ccR0DM5a.s:3586   .debug_str:00000000000005fd .LASF149
     /tmp/ccR0DM5a.s:3524   .debug_str:000000000000040d .LASF150
     /tmp/ccR0DM5a.s:3496   .debug_str:0000000000000349 .LASF151
     /tmp/ccR0DM5a.s:3458   .debug_str:000000000000023d .LASF152
     /tmp/ccR0DM5a.s:3694   .debug_str:000000000000091a .LASF153
GAS LISTING /tmp/ccR0DM5a.s 			page 24


     /tmp/ccR0DM5a.s:3574   .debug_str:00000000000005a6 .LASF154
     /tmp/ccR0DM5a.s:3644   .debug_str:00000000000007b5 .LASF155
     /tmp/ccR0DM5a.s:3570   .debug_str:0000000000000583 .LASF156
     /tmp/ccR0DM5a.s:527    .text:000000000000029c .LFB34
     /tmp/ccR0DM5a.s:552    .text:00000000000002c0 .LFE34
     /tmp/ccR0DM5a.s:3512   .debug_str:00000000000003be .LASF158
     /tmp/ccR0DM5a.s:3184   .debug_loc:0000000000000000 .LLST17
     /tmp/ccR0DM5a.s:498    .text:000000000000029c .LFE33
     /tmp/ccR0DM5a.s:3482   .debug_str:00000000000002fb .LASF157
     /tmp/ccR0DM5a.s:3198   .debug_loc:0000000000000039 .LLST14
     /tmp/ccR0DM5a.s:461    .text:0000000000000260 .LBB22
     /tmp/ccR0DM5a.s:469    .text:0000000000000268 .LBE22
     /tmp/ccR0DM5a.s:3205   .debug_loc:000000000000005c .LLST15
     /tmp/ccR0DM5a.s:3213   .debug_loc:0000000000000080 .LLST16
     /tmp/ccR0DM5a.s:436    .text:000000000000022c .LVL30
     /tmp/ccR0DM5a.s:445    .text:0000000000000248 .LVL31
     /tmp/ccR0DM5a.s:455    .text:0000000000000258 .LVL32
     /tmp/ccR0DM5a.s:491    .text:0000000000000290 .LVL36
     /tmp/ccR0DM5a.s:495    .text:000000000000029c .LVL37
     /tmp/ccR0DM5a.s:3424   .debug_str:0000000000000057 .LASF159
     /tmp/ccR0DM5a.s:3480   .debug_str:00000000000002ef .LASF163
     /tmp/ccR0DM5a.s:366    .text:00000000000001dc .LFB31
     /tmp/ccR0DM5a.s:398    .text:0000000000000208 .LFE31
     /tmp/ccR0DM5a.s:3220   .debug_loc:00000000000000a3 .LLST13
     /tmp/ccR0DM5a.s:386    .text:00000000000001f8 .LVL29
     /tmp/ccR0DM5a.s:334    .text:00000000000001b4 .LFB29
     /tmp/ccR0DM5a.s:360    .text:00000000000001dc .LFE29
     /tmp/ccR0DM5a.s:3234   .debug_loc:00000000000000dc .LLST12
     /tmp/ccR0DM5a.s:349    .text:00000000000001cc .LVL26
     /tmp/ccR0DM5a.s:302    .text:000000000000018c .LFB28
     /tmp/ccR0DM5a.s:328    .text:00000000000001b4 .LFE28
     /tmp/ccR0DM5a.s:3476   .debug_str:00000000000002d4 .LASF160
     /tmp/ccR0DM5a.s:3248   .debug_loc:0000000000000115 .LLST11
     /tmp/ccR0DM5a.s:317    .text:00000000000001a4 .LVL24
     /tmp/ccR0DM5a.s:180    .text:00000000000000fc .LFB27
     /tmp/ccR0DM5a.s:296    .text:000000000000018c .LFE27
     /tmp/ccR0DM5a.s:3262   .debug_loc:000000000000014e .LLST6
     /tmp/ccR0DM5a.s:198    .text:0000000000000118 .LBB13
     /tmp/ccR0DM5a.s:206    .text:000000000000011c .LBE13
     /tmp/ccR0DM5a.s:3273   .debug_loc:0000000000000184 .LLST7
     /tmp/ccR0DM5a.s:219    .text:0000000000000134 .LBB15
     /tmp/ccR0DM5a.s:227    .text:000000000000013c .LBE15
     /tmp/ccR0DM5a.s:3280   .debug_loc:00000000000001a7 .LLST8
     /tmp/ccR0DM5a.s:3288   .debug_loc:00000000000001cb .LLST9
     /tmp/ccR0DM5a.s:235    .text:0000000000000144 .LBB17
     /tmp/ccR0DM5a.s:249    .text:000000000000014c .LBE17
     /tmp/ccR0DM5a.s:3295   .debug_loc:00000000000001ee .LLST10
     /tmp/ccR0DM5a.s:281    .text:0000000000000180 .LBB19
     /tmp/ccR0DM5a.s:294    .text:000000000000018c .LBE19
     /tmp/ccR0DM5a.s:214    .text:000000000000012c .LVL13
     /tmp/ccR0DM5a.s:255    .text:000000000000015c .LVL18
     /tmp/ccR0DM5a.s:276    .text:000000000000017c .LVL21
     /tmp/ccR0DM5a.s:15     .text:0000000000000000 .LFB26
     /tmp/ccR0DM5a.s:58     .text:0000000000000054 .LFE26
     /tmp/ccR0DM5a.s:31     .text:0000000000000020 .LVL0
     /tmp/ccR0DM5a.s:35     .text:0000000000000028 .LVL1
     /tmp/ccR0DM5a.s:47     .text:0000000000000044 .LVL3
GAS LISTING /tmp/ccR0DM5a.s 			page 25


     /tmp/ccR0DM5a.s:148    .text:00000000000000d4 .LFB25
     /tmp/ccR0DM5a.s:174    .text:00000000000000fc .LFE25
     /tmp/ccR0DM5a.s:3304   .debug_loc:0000000000000214 .LLST5
     /tmp/ccR0DM5a.s:163    .text:00000000000000ec .LVL10
     /tmp/ccR0DM5a.s:124    .text:00000000000000bc .LFB24
     /tmp/ccR0DM5a.s:142    .text:00000000000000d4 .LFE24
     /tmp/ccR0DM5a.s:3624   .debug_str:000000000000072e .LASF161
     /tmp/ccR0DM5a.s:3576   .debug_str:00000000000005ab .LASF162
     /tmp/ccR0DM5a.s:3604   .debug_str:000000000000068c .LASF164
     /tmp/ccR0DM5a.s:64     .text:0000000000000054 .LFB22
     /tmp/ccR0DM5a.s:116    .text:00000000000000bc .LFE22
     /tmp/ccR0DM5a.s:3318   .debug_loc:000000000000024d .LLST0
     /tmp/ccR0DM5a.s:3336   .debug_loc:0000000000000299 .LLST1
     /tmp/ccR0DM5a.s:3350   .debug_loc:00000000000002d2 .LLST2
     /tmp/ccR0DM5a.s:3364   .debug_loc:000000000000030b .LLST3
     /tmp/ccR0DM5a.s:3383   .debug_loc:0000000000000358 .LLST4
     /tmp/ccR0DM5a.s:98     .text:00000000000000a4 .LVL6
     /tmp/ccR0DM5a.s:3728   .debug_str:00000000000009f7 .LASF165
     /tmp/ccR0DM5a.s:3752   .debug_str:0000000000000a99 .LASF180
     /tmp/ccR0DM5a.s:3440   .debug_str:0000000000000102 .LASF181
     /tmp/ccR0DM5a.s:3770   .debug_str:0000000000000b26 .LASF166
     /tmp/ccR0DM5a.s:3514   .debug_str:00000000000003c3 .LASF168
     /tmp/ccR0DM5a.s:3650   .debug_str:00000000000007df .LASF167
     /tmp/ccR0DM5a.s:3510   .debug_str:00000000000003b6 .LASF169
     /tmp/ccR0DM5a.s:3546   .debug_str:00000000000004af .LASF170
     /tmp/ccR0DM5a.s:530    .text:000000000000029c .LVL38
     /tmp/ccR0DM5a.s:540    .text:00000000000002ac .LVL39
     /tmp/ccR0DM5a.s:479    .text:0000000000000274 .LVL35
     /tmp/ccR0DM5a.s:460    .text:0000000000000260 .LVL33
     /tmp/ccR0DM5a.s:467    .text:0000000000000268 .LVL34
     /tmp/ccR0DM5a.s:371    .text:00000000000001dc .LVL27
     /tmp/ccR0DM5a.s:384    .text:00000000000001f0 .LVL28
     /tmp/ccR0DM5a.s:337    .text:00000000000001b4 .LVL25
     /tmp/ccR0DM5a.s:305    .text:000000000000018c .LVL23
     /tmp/ccR0DM5a.s:196    .text:0000000000000118 .LVL11
     /tmp/ccR0DM5a.s:265    .text:0000000000000168 .LVL19
     /tmp/ccR0DM5a.s:269    .text:0000000000000170 .LVL20
     /tmp/ccR0DM5a.s:204    .text:000000000000011c .LVL12
     /tmp/ccR0DM5a.s:218    .text:0000000000000134 .LVL14
     /tmp/ccR0DM5a.s:225    .text:000000000000013c .LVL15
     /tmp/ccR0DM5a.s:234    .text:0000000000000144 .LVL16
     /tmp/ccR0DM5a.s:245    .text:000000000000014c .LVL17
     /tmp/ccR0DM5a.s:151    .text:00000000000000d4 .LVL9
     /tmp/ccR0DM5a.s:67     .text:0000000000000054 .LVL4
     /tmp/ccR0DM5a.s:111    .text:00000000000000b4 .LVL7
     /tmp/ccR0DM5a.s:90     .text:000000000000008c .LVL5
     /tmp/ccR0DM5a.s:574    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccR0DM5a.s:401    .gcc_except_table:0000000000000000 .LLSDA31
     /tmp/ccR0DM5a.s:500    .gcc_except_table:0000000000000004 .LLSDA33

UNDEFINED SYMBOLS
_ZN5Riscv11printStringEPKc
_ZN5Riscv10popSppSpieEv
thread_exit
_ZN9Scheduler3putEP3PCB
_ZN9Scheduler3getEv
_ZN3PCB13contextSwitchEPNS_7ContextES1_
GAS LISTING /tmp/ccR0DM5a.s 			page 26


_Z7kmallocm
_Z5kfreePv
__gxx_personality_v0
_Unwind_Resume
